digraph  {
n544 [label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
n545 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
n546 [label=symbol, span=""];
n547 [label=split, span=""];
n548 [label=delisting, span=""];
n0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108"];
n2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="_liveMode = liveMode", span="119-119"];
n3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108"];
n4 [cluster="lambda expression", label="Entry lambda expression", span="110-118"];
n5 [cluster="lambda expression", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="112-112"];
n7 [cluster="lambda expression", label="return null;", span="117-117"];
n8 [cluster="lambda expression", label="Exit lambda expression", span="110-118"];
n9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="135-135"];
n10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_dataPointCount = 0", span="138-138"];
n11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm = algorithm", span="139-139"];
n12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="140-140"];
n13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="141-141"];
n20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithmId = job.AlgorithmId", span="151-151"];
n22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime = algorithm.StartDate.Date", span="153-153"];
n23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="158-158"];
n24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="159-159"];
n25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="160-160"];
n26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="161-161"];
n27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="164-164"];
n28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="165-165"];
n29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="166-166"];
n30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="167-167"];
n31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="170-172"];
n320 [cluster="lambda expression", label="x.DeclaringType == algorithm.GetType()", span="172-172"];
n32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.SubscriptionManager.Subscriptions", span="175-175"];
n34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="181-181"];
n37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="189-189"];
n42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="201-201"];
n47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="token.IsCancellationRequested", span="215-215"];
n50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="leanManager.Update()", span="222-222"];
n55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="235-235"];
n56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="238-238"];
n58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, 0)", span="243-243"];
n59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="247-247"];
n60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="249-249"];
n64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SystemDebugMessage(logMessage)", span="256-256"];
n65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, time)", span="263-263"];
n67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="realtime.ScanPastEvents(time)", span="273-273"];
n68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.SetDateTime(time)", span="277-277"];
n71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="283-283"];
n73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="288-288"];
n77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="299-299"];
n78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Securities.Add(security)", span="302-302"];
n87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="327-327"];
n88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="alphas.ProcessSynchronousEvents()", span="331-331"];
n89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="realtime.SetTime(timeSlice.Time)", span="334-334"];
n90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="337-337"];
n91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="ProcessDelistedSymbols(algorithm, delistings)", span="340-340"];
n92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Status == AlgorithmStatus.Stopped", span="343-343"];
n94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError != null", span="348-348"];
n96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="351-351"];
n102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCall(marginCallOrders)", span="367-367"];
n104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="372-372"];
n106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="375-375"];
n108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="380-380"];
n114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCallWarning()", span="392-392"];
n116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="396-396"];
n122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="409-409"];
n125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="419-419"];
n126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnFrameworkSecuritiesChanged(timeSlice.SecurityChanges)", span="420-420"];
n128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="424-424"];
n133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Dividend for {dividend.Symbol}'')", span="434-434"];
n134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplyDividend(dividend)", span="435-435"];
n136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Split for {split.Symbol}'')", span="443-443"];
n137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplySplit(split)", span="444-444"];
n138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="446-446"];
n139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="449-449"];
n140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="450-450"];
n142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="455-455"];
n155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="487-487"];
n164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvoker(algorithm, dataPoint)", span="508-508"];
n166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="514-514"];
n171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="526-526"];
n173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="530-530"];
n175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="534-534"];
n177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="539-539"];
n181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="546-546"];
n186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="561-561"];
n188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="562-562"];
n190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="563-563"];
n192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="564-564"];
n194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="568-568"];
n199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnData(timeSlice.Slice)", span="579-579"];
n200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnFrameworkData(timeSlice.Slice)", span="580-580"];
n202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="585-585"];
n206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="593-593"];
n208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="599-599"];
n209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents()", span="602-602"];
n212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnEndOfAlgorithm()", span="613-613"];
n215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="618-618"];
n218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="alphas.ProcessSynchronousEvents()", span="624-624"];
n219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="627-627"];
n220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="630-630"];
n223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Liquidate()", span="636-636"];
n224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Liquidated'')", span="637-637"];
n225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="638-638"];
n228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Stopped'')", span="645-645"];
n229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="646-646"];
n232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="653-653"];
n233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="654-654"];
n234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="658-658"];
n235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleRange(algorithm.GetChartUpdates())", span="661-661"];
n236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="662-662"];
n237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="663-663"];
n239 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="668-668"];
n240 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="672-673"];
n57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="241-241"];
n61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue <= 0", span="252-252"];
n238 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="666-666"];
n14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="142-142"];
n53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=backtestMode, span="230-230"];
n66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=backtestMode, span="271-271"];
n15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="143-143"];
n242 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers.ContainsKey(config.Type)", span="184-184"];
n41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="195-195"];
n161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="497-497"];
n16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var nextMarginCallTime = DateTime.MinValue", span="144-144"];
n243 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="nextMarginCallTime = time + marginCallFrequency", span="403-403"];
n17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="145-145"];
n97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="356-356"];
n18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var nextSettlementScanTime = DateTime.MinValue", span="146-146"];
n123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="nextSettlementScanTime = time + settlementScanFrequency", span="411-411"];
n19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var delistings = new List<Delisting>()", span="148-148"];
n121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="407-407"];
n244 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.Running", span="152-152"];
n245 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="903-903"];
n185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="561-561"];
n187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="562-562"];
n189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="563-563"];
n191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="564-564"];
n170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="524-524"];
n172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="528-528"];
n174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="532-532"];
n70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=hasOnDataSymbolChangedEvents, span="281-281"];
n246 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n247 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n248 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n249 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
n315 [cluster="lambda expression", label="Entry lambda expression", span="171-171"];
n319 [cluster="lambda expression", label="Entry lambda expression", span="172-172"];
n36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="genericMethod == null && !hasOnDataSlice", span="187-187"];
n33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="config.IsCustomData", span="178-178"];
n250 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="genericMethod != null", span="193-193"];
n251 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="190-190"];
n252 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="191-191"];
n253 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
n254 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n255 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
n44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.UtcNow", span="205-205"];
n210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.MinValue", span="607-607"];
n256 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="693-693"];
n46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="210-210"];
n48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="217-217"];
n51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var time = timeSlice.Time", span="224-224"];
n52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_dataPointCount += timeSlice.DataPointCount", span="225-225"];
n69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="279-279"];
n72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="285-285"];
n75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="295-295"];
n76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges.AddedSecurities", span="297-297"];
n83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecuritiesUpdateData", span="318-318"];
n124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="415-415"];
n132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Dividends.Values", span="432-432"];
n135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Splits.Values", span="439-439"];
n146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.ConsolidatorUpdateData", span="465-465"];
n159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.CustomData", span="494-494"];
n182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Count > 0", span="554-554"];
n183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="556-556"];
n184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="558-558"];
n198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.HasData", span="576-576"];
n45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status != AlgorithmStatus.Running", span="208-208"];
n49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="218-218"];
n258 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n259 [cluster="QuantConnect.Lean.Engine.Server.ILeanManager.Update()", label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.Update()", span="46-46"];
n54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime.Date != time.Date", span="233-233"];
n152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="480-480"];
n207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime = time", span="596-596"];
n260 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="997-997"];
n261 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n262 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="156-156"];
n263 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="164-164"];
n62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="254-254"];
n63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(logMessage)", span="255-255"];
n265 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", span="59-59"];
n266 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="487-487"];
n267 [cluster="Unk.]", label="Entry Unk.]", span=""];
n323 [cluster="lambda expression", label="x.Status.IsOpen() && x.Symbol == symbol", span="288-288"];
n74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="290-290"];
n268 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
n322 [cluster="lambda expression", label="Entry lambda expression", span="288-288"];
n269 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
n270 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
n271 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
n272 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
n84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var security = update.Target", span="320-320"];
n85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="321-321"];
n86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="security.SetMarketPrice(data)", span="323-323"];
n273 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="531-531"];
n274 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49"];
n275 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", span="57-57"];
n276 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
n277 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75"];
n278 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="945-945"];
n93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="345-345"];
n95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="350-350"];
n98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="bool issueMarginCallWarning", span="359-359"];
n100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="marginCallOrders.Count != 0", span="361-361"];
n279 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="543-543"];
n113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=issueMarginCallWarning, span="388-388"];
n101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var executingMarginCall = false", span="363-363"];
n103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="executingMarginCall = true", span="369-369"];
n280 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="432-432"];
n110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="382-382"];
n105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=executedTickets, span="373-373"];
n281 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="43-43"];
n107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="378-378"];
n282 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
n283 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426"];
n109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="381-381"];
n111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="383-383"];
n112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="384-384"];
n284 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="394-394"];
n285 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="437-437"];
n117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="397-397"];
n118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="398-398"];
n119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="399-399"];
n286 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="830-830"];
n287 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="402-402"];
n127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="422-422"];
n288 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="408-408"];
n129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="425-425"];
n130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="426-426"];
n131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="427-427"];
n289 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
n290 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="602-602"];
n327 [cluster="lambda expression", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="449-449"];
n291 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="622-622"];
n141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="453-453"];
n326 [cluster="lambda expression", label="Entry lambda expression", span="449-449"];
n292 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n293 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
n143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="456-456"];
n144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="457-457"];
n145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="458-458"];
n147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var consolidators = update.Target.Consolidators", span="467-467"];
n154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="485-485"];
n149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="470-470"];
n150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="EndTimeIsInNativeResolution(update.Target, dataPoint.EndTime)", span="473-473"];
n148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=consolidators, span="468-468"];
n151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="consolidator.Update(dataPoint)", span="475-475"];
n153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="consolidator.Scan(localTime)", span="481-481"];
n294 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1015-1015"];
n295 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
n296 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
n297 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
n156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="488-488"];
n157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="489-489"];
n158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="490-490"];
n160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="MethodInvoker methodInvoker", span="496-496"];
n162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="504-504"];
n163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.DataType.IsInstanceOfType(dataPoint)", span="506-506"];
n298 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="512-512"];
n299 [cluster="System.Type.IsInstanceOfType(object)", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
n300 [cluster="Unk.methodInvoker", label="Entry Unk.methodInvoker", span=""];
n167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="515-515"];
n168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="516-516"];
n169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="517-517"];
n176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="537-537"];
n178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="540-540"];
n179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="541-541"];
n180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="542-542"];
n301 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="918-918"];
n329 [cluster="lambda expression", label="Entry lambda expression", span="556-556"];
n302 [cluster="Unk.Collapse", label="Entry Unk.Collapse", span=""];
n193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="566-566"];
n195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="569-569"];
n196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="570-570"];
n197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="571-571"];
n201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="583-583"];
n303 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="390-390"];
n304 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="396-396"];
n203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="586-586"];
n204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="587-587"];
n205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="588-588"];
n305 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", span="200-200"];
n306 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="260-260"];
n257 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n264 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", span="109-109"];
n211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="610-610"];
n213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="615-615"];
n307 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="452-452"];
n214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="617-617"];
n216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="619-619"];
n308 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
n217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="620-620"];
n221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="633-633"];
n222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="635-635"];
n226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Stopped", span="642-642"];
n309 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="577-577"];
n310 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="121-121"];
n311 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="226-226"];
n227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="644-644"];
n230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Deleted", span="650-650"];
n231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="652-652"];
n312 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103"];
n313 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="516-516"];
n314 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="188-188"];
n241 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="135-135"];
n316 [cluster="lambda expression", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="171-171"];
n317 [cluster="lambda expression", label="Exit lambda expression", span="171-171"];
n318 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n321 [cluster="lambda expression", label="Exit lambda expression", span="172-172"];
n324 [cluster="lambda expression", label="Exit lambda expression", span="288-288"];
n325 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
n328 [cluster="lambda expression", label="Exit lambda expression", span="449-449"];
n330 [cluster="lambda expression", label="x.Key.ID.SecurityType == SecurityType.Forex", span="556-556"];
n331 [cluster="lambda expression", label="Exit lambda expression", span="556-556"];
n332 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="680-680"];
n333 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="682-682"];
n334 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="state != AlgorithmStatus.Running", span="686-686"];
n335 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithm.Status = state", span="688-688"];
n336 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="680-680"];
n337 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="bool setStartTime = false", span="695-695"];
n380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield break;", span="777-777"];
n390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="796-796"];
n417 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="863-863"];
n338 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var timeZone = algorithm.TimeZone", span="696-696"];
n339 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var history = algorithm.HistoryProvider", span="697-697"];
n340 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode", span="700-700"];
n341 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ProcessVolatilityHistoryRequirements(algorithm)", span="702-702"];
n343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="707-707"];
n346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="712-715"];
n349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="722-722"];
n353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="727-727"];
n368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var security = algorithm.Securities[symbol]", span="763-763"];
n376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="771-771"];
n379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="776-776"];
n385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm warming up...'')", span="786-786"];
n389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="794-794"];
n392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!algorithm.LiveMode || historyRequests.Count == 0", span="803-803"];
n393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="805-805"];
n395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="808-808"];
n397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=feed, span="813-813"];
n401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="820-820"];
n405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="831-831"];
n410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="850-850"];
n411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="851-851"];
n416 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="860-860"];
n382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="782-782"];
n398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="815-815"];
n364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="history.GetHistory(historyRequests, timeZone)", span="754-754"];
n342 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime? lastHistoryTimeUtc = null", span="706-706"];
n419 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="867-867"];
n402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc.HasValue", span="824-824"];
n344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var start = DateTime.UtcNow.Ticks", span="710-710"];
n420 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="594-594"];
n348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="719-719"];
n351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="724-724"];
n357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="738-738"];
n358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="740-740"];
n359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="741-741"];
n361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="747-747"];
n394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="806-806"];
n345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="711-711"];
n362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="749-749"];
n388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="793-793"];
n415 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="859-859"];
n421 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
n386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="788-788"];
n413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="854-854"];
n347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="717-717"];
n422 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n423 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
n424 [cluster="Unk.Min", label="Entry Unk.Min", span=""];
n443 [cluster="lambda expression", label="Entry lambda expression", span="713-713"];
n409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="848-848"];
n350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="723-723"];
n425 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n447 [cluster="lambda expression", label="Entry lambda expression", span="722-722"];
n450 [cluster="lambda expression", label="Entry lambda expression", span="723-723"];
n354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution < minResolution", span="729-729"];
n355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution = minResolution", span="731-731"];
n356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="732-732"];
n352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Security security", span="726-726"];
n426 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
n427 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
n428 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n453 [cluster="lambda expression", label="Entry lambda expression", span="738-738"];
n456 [cluster="lambda expression", label="Entry lambda expression", span="740-740"];
n459 [cluster="lambda expression", label="Entry lambda expression", span="740-740"];
n360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = minResolution", span="743-743"];
n462 [cluster="lambda expression", label="Entry lambda expression", span="741-741"];
n363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="750-750"];
n429 [cluster="System.Math.Min(long, long)", label="Entry System.Math.Min(long, long)", span="0-0"];
n365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="TimeSlice timeSlice", span="756-756"];
n430 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
n367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="slice.Keys", span="761-761"];
n369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var data = slice[symbol]", span="764-764"];
n366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var paired = new List<DataFeedPacket>()", span="760-760"];
n370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var list = new List<BaseData>()", span="765-765"];
n371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var ticks = data as List<Tick>", span="766-766"];
n374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.Add(data)", span="768-768"];
n373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.AddRange(ticks)", span="767-767"];
n372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ticks != null", span="767-767"];
n431 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n432 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n433 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
n434 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=Exception, span="773-773"];
n381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice != null", span="780-780"];
n435 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
n436 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="111-111"];
n384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="785-785"];
n391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = timeSlice.Time", span="797-797"];
n378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Error(err)", span="775-775"];
n437 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
n383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="784-784"];
n438 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="414-414"];
n387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="792-792"];
n439 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="588-588"];
n396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="809-809"];
n418 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="693-693"];
n400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="818-818"];
n404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="828-828"];
n399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="817-817"];
n403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var hasHistoricalData = false", span="827-827"];
n407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=hasHistoricalData, span="837-837"];
n440 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
n441 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n465 [cluster="lambda expression", label="Entry lambda expression", span="828-828"];
n406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="hasHistoricalData = true", span="833-833"];
n408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = null", span="843-843"];
n442 [cluster="Unk.Subtract", label="Entry Unk.Subtract", span=""];
n412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="852-852"];
n414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="858-858"];
n444 [cluster="lambda expression", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="713-713"];
n445 [cluster="lambda expression", label="Exit lambda expression", span="713-713"];
n446 [cluster="QuantConnect.Resolution.ToTimeSpan()", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
n448 [cluster="lambda expression", label="!x.IsInternalFeed", span="722-722"];
n449 [cluster="lambda expression", label="Exit lambda expression", span="722-722"];
n451 [cluster="lambda expression", label="x.Resolution", span="723-723"];
n452 [cluster="lambda expression", label="Exit lambda expression", span="723-723"];
n454 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="738-738"];
n455 [cluster="lambda expression", label="Exit lambda expression", span="738-738"];
n457 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="740-740"];
n458 [cluster="lambda expression", label="Exit lambda expression", span="740-740"];
n460 [cluster="lambda expression", label="x.FillForwardResolution.Value", span="740-740"];
n461 [cluster="lambda expression", label="Exit lambda expression", span="740-740"];
n463 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="741-741"];
n464 [cluster="lambda expression", label="Exit lambda expression", span="741-741"];
n466 [cluster="lambda expression", label=x, span="828-828"];
n467 [cluster="lambda expression", label="Exit lambda expression", span="828-828"];
n468 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="869-869"];
n469 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="algorithm.Securities", span="871-871"];
n472 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="877-877"];
n473 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="historyReq != null && algorithm.HistoryProvider != null", span="879-879"];
n474 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="881-881"];
n470 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var security = kvp.Value", span="873-873"];
n479 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="867-867"];
n471 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel != VolatilityModel.Null", span="875-875"];
n477 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="slice.Bars.ContainsKey(security.Symbol)", span="886-886"];
n478 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="887-887"];
n480 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
n475 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="history != null", span="882-882"];
n476 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label=history, span="884-884"];
n481 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
n482 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
n483 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="905-905"];
n485 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="908-908"];
n484 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="newSplitMethodInfo != null", span="906-906"];
n487 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return false;", span="911-911"];
n486 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return true;", span="909-909"];
n488 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="903-903"];
n489 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="newDelistings.Values", span="920-920"];
n491 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="925-925"];
n492 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.Add(delisting)", span="927-927"];
n495 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="934-934"];
n490 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delisting.Type == DelistingType.Warning", span="923-923"];
n498 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="918-918"];
n501 [cluster="lambda expression", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="925-925"];
n493 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="928-928"];
n494 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="933-933"];
n500 [cluster="lambda expression", label="Entry lambda expression", span="925-925"];
n496 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label=cancelledOrders, span="935-935"];
n499 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="183-183"];
n497 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="937-937"];
n502 [cluster="lambda expression", label="Exit lambda expression", span="925-925"];
n503 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var i = delistings.Count - 1", span="947-947"];
n505 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var security = algorithm.Securities[delistings[i].Symbol]", span="950-950"];
n507 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var delistingTime = delistings[i].Time", span="954-954"];
n515 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="969-970"];
n517 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, message)", span="978-979"];
n518 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="984-985"];
n519 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="algorithm.Transactions.ProcessRequest(request)", span="988-988"];
n520 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.RemoveAt(i)", span="990-990"];
n504 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i >= 0", span="947-947"];
n521 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i--", span="947-947"];
n522 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="945-945"];
n506 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity == 0", span="951-951"];
n508 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="955-955"];
n509 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="956-956"];
n510 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.LocalTime < nextMarketClose", span="958-958"];
n512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Type == SecurityType.Option", span="963-963"];
n513 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var option = (Option)security", span="965-965"];
n514 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity > 0", span="967-967"];
n523 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
n524 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
n511 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="SubmitOrderRequest request", span="961-961"];
n516 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var message = option.GetPayOff(option.Underlying.Price) > 0\r\n                            ? ''Automatic option assignment on expiration''\r\n                            : ''Option expiration''", span="974-976"];
n526 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="214-214"];
n525 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
n527 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133"];
n528 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
n529 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="1002-1002"];
n531 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="algorithm.RunTimeError = err", span="1006-1006"];
n530 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label=Exception, span="1004-1004"];
n534 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="997-997"];
n535 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
n536 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="206-206"];
n537 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="172-172"];
n532 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="1007-1007"];
n533 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Log.Error(err)", span="1008-1008"];
n538 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="config.Increment == TimeSpan.Zero", span="1017-1017"];
n540 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="var roundedDataPointEndTime = dataPointEndTime.RoundDownInTimeZone(config.Increment, config.ExchangeTimeZone, config.DataTimeZone)", span="1022-1022"];
n541 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="return dataPointEndTime == roundedDataPointEndTime;", span="1023-1023"];
n539 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="return true;", span="1019-1019"];
n543 [cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
n542 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1015-1015"];
m1_57 [cluster="System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", file="AlgorithmPythonWrapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", span="0-0"];
m1_8 [cluster="string.ToUpper()", file="AlgorithmPythonWrapper.cs", label="Entry string.ToUpper()", span="0-0"];
m1_20 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="AlgorithmPythonWrapper.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_59 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="34-34"];
m1_56 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="AlgorithmPythonWrapper.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_21 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="103-103"];
m1_22 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="Symbol == CashBook.AccountCurrency", span="105-105"];
m1_26 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="subscriptions.Count == 0", span="112-112"];
m1_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="i < subscriptions.Subscriptions.Count", span="120-120"];
m1_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="var config = subscriptions.Subscriptions[i]", span="122-122"];
m1_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="var minimumResolution = subscriptions.Subscriptions.Min(x => x.Resolution)", span="142-142"];
m1_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="_config = subscriptions.Add(objectType, SecurityType.Forex, symbol, minimumResolution, true, false, isTradeBar, isTradeBar, true)", span="151-151"];
m1_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="securities.Add(symbol, security)", span="153-153"];
m1_23 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="_isBaseCurrency = true", span="107-107"];
m1_24 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="ConversionRate = 1.0m", span="108-108"];
m1_25 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="return;", span="109-109"];
m1_27 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="throw new InvalidOperationException(''Unable to add cash when no subscriptions are present. Please add subscriptions in the Initialize() method.'');", span="114-114"];
m1_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="118-118"];
m1_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="119-119"];
m1_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="config.Symbol == normal", span="127-127"];
m1_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="symbol == normal || symbol == invert", span="147-147"];
m1_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="int i = 0", span="120-120"];
m1_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="config.Symbol == invert", span="132-132"];
m1_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="_invertRealTimePrice = symbol == invert", span="149-149"];
m1_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="i++", span="120-120"];
m1_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="var currencyPairs = Forex.Forex.CurrencyPairs", span="141-141"];
m1_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="config.SecurityType != SecurityType.Forex", span="123-123"];
m1_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="_config = config", span="129-129"];
m1_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="_config = config", span="134-134"];
m1_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="return;", span="130-130"];
m1_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="_invertRealTimePrice = true", span="135-135"];
m1_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="return;", span="136-136"];
m1_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label=currencyPairs, span="145-145"];
m1_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (TradeBar)", span="143-143"];
m1_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="var isTradeBar = objectType == typeof (TradeBar)", span="144-144"];
m1_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="160-160"];
m1_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol + '' for cash '' + this.Symbol + '' currency feed'')", span="154-154"];
m1_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="var security = new Forex.Forex(this, _config, 1m, false)", span="152-152"];
m1_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="return;", span="155-155"];
m1_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="103-103"];
m1_71 [cluster="decimal.RoundToSignificantDigits(int)", file="AlgorithmPythonWrapper.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="132-132"];
m1_0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="61-61"];
m1_1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="symbol == null || symbol.Length != 3", span="63-63"];
m1_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="ConversionRate = conversionRate", span="68-68"];
m1_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="Symbol = symbol.ToUpper()", span="69-69"];
m1_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="61-61"];
m1_62 [cluster="string.Format(string, object, object)", file="AlgorithmPythonWrapper.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_58 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool)", span="82-82"];
m1_60 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", span="55-55"];
m1_9 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="76-76"];
m1_10 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label=_isBaseCurrency, span="79-79"];
m1_13 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="!data.TryGetValue(_config.SubscriptionIndex, out realTimePrice) || realTimePrice.Count == 0", span="82-82"];
m1_11 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="return;", span="79-79"];
m1_12 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="List<BaseData> realTimePrice", span="81-81"];
m1_14 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="return;", span="85-85"];
m1_15 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="decimal rate = realTimePrice[realTimePrice.Count - 1].Value", span="88-88"];
m1_16 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label=_invertRealTimePrice, span="89-89"];
m1_17 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="rate = 1/rate", span="91-91"];
m1_18 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="ConversionRate = rate", span="94-94"];
m1_19 [cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="76-76"];
m1_61 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m1_72 [cluster="System.Math.Round(decimal, int)", file="AlgorithmPythonWrapper.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m1_66 [cluster="QuantConnect.Securities.Cash.ToString()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="167-167"];
m1_67 [cluster="QuantConnect.Securities.Cash.ToString()", file="AlgorithmPythonWrapper.cs", label="decimal rate = ConversionRate", span="170-170"];
m1_68 [cluster="QuantConnect.Securities.Cash.ToString()", file="AlgorithmPythonWrapper.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="171-171"];
m1_69 [cluster="QuantConnect.Securities.Cash.ToString()", file="AlgorithmPythonWrapper.cs", label="return string.Format(''{0}: {1,10} @ ${2,10} = {3}'', Symbol, Quantity.ToString(''0.00''), rate.ToString(''0.00####''), ValueInAccountCurrency.ToString(''C''));", span="172-172"];
m1_70 [cluster="QuantConnect.Securities.Cash.ToString()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="167-167"];
m1_73 [cluster="decimal.ToString(string)", file="AlgorithmPythonWrapper.cs", label="Entry decimal.ToString(string)", span="0-0"];
m1_7 [cluster="System.ArgumentException.ArgumentException(string)", file="AlgorithmPythonWrapper.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_63 [cluster="lambda expression", file="AlgorithmPythonWrapper.cs", label="Entry lambda expression", span="142-142"];
m1_64 [cluster="lambda expression", file="AlgorithmPythonWrapper.cs", label="x.Resolution", span="142-142"];
m1_65 [cluster="lambda expression", file="AlgorithmPythonWrapper.cs", label="Exit lambda expression", span="142-142"];
m1_75 [file="AlgorithmPythonWrapper.cs", label="QuantConnect.Securities.Cash", span=""];
m3_0 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m3_1 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m3_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m3_4 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="57-57"];
m3_5 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="AlgorithmTradingTests.cs", label="return Quantity*security.Price;", span="59-59"];
m3_6 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="57-57"];
m3_2 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m3_3 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m3_7 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="66-66"];
m3_8 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="AlgorithmTradingTests.cs", label="var order = new MarketOnOpenOrder()", span="68-68"];
m3_9 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="AlgorithmTradingTests.cs", label="CopyTo(order)", span="69-69"];
m3_10 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="AlgorithmTradingTests.cs", label="return order;", span="70-70"];
m3_11 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="66-66"];
m3_13 [file="AlgorithmTradingTests.cs", label="QuantConnect.Orders.MarketOnOpenOrder", span=""];
m4_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyMessageApiEventArgs.VerifyMessageApiEventArgs(string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyMessageApiEventArgs.VerifyMessageApiEventArgs(string)", span="32-32"];
m4_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyMessageApiEventArgs.VerifyMessageApiEventArgs(string)", file="BacktestingBrokerage.cs", label="ApiData = apiData", span="34-34"];
m4_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyMessageApiEventArgs.VerifyMessageApiEventArgs(string)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyMessageApiEventArgs.VerifyMessageApiEventArgs(string)", span="32-32"];
m4_3 [file="BacktestingBrokerage.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyMessageApiEventArgs", span=""];
m5_0 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", span="25-25"];
m5_1 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="SetStartDate(2013, 10, 07)", span="27-27"];
m5_2 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="SetEndDate(2013, 10, 11)", span="28-28"];
m5_3 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="SetCash(10000000)", span="30-30"];
m5_4 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Tick)", span="33-33"];
m5_5 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="AddSecurity(SecurityType.Equity, ''BAC'', Resolution.Minute)", span="34-34"];
m5_6 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="AddSecurity(SecurityType.Equity, ''AIG'', Resolution.Hour)", span="35-35"];
m5_7 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="AddSecurity(SecurityType.Equity, ''IBM'', Resolution.Daily)", span="36-36"];
m5_8 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", span="25-25"];
m5_13 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42"];
m5_14 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="Time - lastTradeTradeBars < tradeEvery", span="44-44"];
m5_17 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label=data, span="47-47"];
m5_15 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="return;", span="44-44"];
m5_16 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="lastTradeTradeBars = Time", span="45-45"];
m5_18 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="var symbol = kvp.Key", span="49-49"];
m5_19 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="var bar = kvp.Value", span="50-50"];
m5_21 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="var holdings = Portfolio[symbol]", span="58-58"];
m5_23 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="MarketOrder(symbol, 10)", span="61-61"];
m5_24 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="MarketOrder(symbol, -holdings.Quantity)", span="65-65"];
m5_20 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="bar.Time.RoundDown(bar.Period) != bar.Time", span="52-52"];
m5_22 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="!holdings.Invested", span="59-59"];
m5_25 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42"];
m5_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="546-546"];
m5_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="701-701"];
m5_26 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="BacktestingResultHandler.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="263-263"];
m5_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="521-521"];
m5_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", span="181-181"];
m5_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="470-470"];
m5_28 [file="BacktestingResultHandler.cs", label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", span=""];
m6_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", span="37-37"];
m6_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="IsSuccessful = isSuccessful", span="39-39"];
m6_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="ErrorText = errorText", span="40-40"];
m6_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", span="37-37"];
m6_4 [cluster="lambda expression", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs", span=""];
m6_5 [cluster="lambda expression", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Exit lambda expression", span="43-43"];
m6_14 [cluster="System.Func<T, TResult>.Invoke(T)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_17 [cluster="Unk.ForSource", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry Unk.ForSource", span=""];
m6_19 [cluster="BaseDataCollection.cstr", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry BaseDataCollection.cstr", span=""];
m6_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="35-35"];
m6_21 [cluster="Unk.GetEnumerator", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry Unk.GetEnumerator", span=""];
m6_18 [cluster="Unk.Read", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry Unk.Read", span=""];
m6_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52"];
m6_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="_dataCacheProvider = new SingleEntryDataCacheProvider(dataProvider)", prediction=0, span="54-54"];
m6_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="var configuration = request.Configuration", prediction=1, span="55-55"];
m6_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="var tradableDays = _tradableDaysProvider(request)", prediction=2, span="56-56"];
m6_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="return (\r\n                from date in tradableDays\r\n                let source = sourceFactory.GetSource(configuration, date, false)\r\n                let factory = SubscriptionDataSourceReader.ForSource(source, _dataCacheProvider, configuration, date, false)\r\n                let coarseFundamentalForDate = factory.Read(source)\r\n                select new BaseDataCollection(date.AddDays(1), configuration.Symbol, coarseFundamentalForDate)\r\n                ).GetEnumerator();", prediction=3, span="59-65"];
m6_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="var sourceFactory = (BaseData) Activator.CreateInstance(request.Configuration.Type)", prediction=4, span="57-57"];
m6_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52"];
m6_20 [cluster="Unk.AddDays", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry Unk.AddDays", span=""];
m6_16 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m6_15 [cluster="System.Activator.CreateInstance(System.Type)", file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m6_22 [file="BaseDataCollectionSubscriptionEnumeratorFactory.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory", span=""];
m10_21 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="BrokerageModelPythonWrapper.cs", label="Entry QuantConnect.SecurityIdentifier.ToString()", span="683-683"];
m10_31 [cluster="Unk.Load", file="BrokerageModelPythonWrapper.cs", label="Entry Unk.Load", span=""];
m10_33 [cluster="Symbol.cstr", file="BrokerageModelPythonWrapper.cs", label="Entry Symbol.cstr", span=""];
m10_23 [cluster="QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="Entry QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="62-62"];
m10_24 [cluster="QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="var jobject = JObject.Load(reader)", span="64-64"];
m10_25 [cluster="QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="JToken underlying", span="66-66"];
m10_27 [cluster="QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="jobject.TryGetValue(''Underlying'', out underlying)", span="69-69"];
m10_29 [cluster="QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="return new Symbol(SecurityIdentifier.Parse(jobject[''ID''].ToString()), jobject[''Value''].ToString(), underlyingSymbol);", span="74-74"];
m10_26 [cluster="QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="Symbol underlyingSymbol = null", span="67-67"];
m10_28 [cluster="QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="underlyingSymbol = new Symbol(SecurityIdentifier.Parse(underlying[''ID''].ToString()), underlying[''Value''].ToString())", span="71-71"];
m10_30 [cluster="QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="Exit QuantConnect.SymbolJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="62-62"];
m10_34 [cluster="Unk.ToString", file="BrokerageModelPythonWrapper.cs", label="Entry Unk.ToString", span=""];
m10_18 [cluster="Unk.WriteStartObject", file="BrokerageModelPythonWrapper.cs", label="Entry Unk.WriteStartObject", span=""];
m10_22 [cluster="Unk.WriteEndObject", file="BrokerageModelPythonWrapper.cs", label="Entry Unk.WriteEndObject", span=""];
m10_35 [cluster="Unk.Parse", file="BrokerageModelPythonWrapper.cs", label="Entry Unk.Parse", span=""];
m10_36 [cluster="QuantConnect.SymbolJsonConverter.CanConvert(System.Type)", file="BrokerageModelPythonWrapper.cs", label="Entry QuantConnect.SymbolJsonConverter.CanConvert(System.Type)", span="84-84"];
m10_38 [cluster="QuantConnect.SymbolJsonConverter.CanConvert(System.Type)", file="BrokerageModelPythonWrapper.cs", label="Exit QuantConnect.SymbolJsonConverter.CanConvert(System.Type)", span="84-84"];
m10_19 [cluster="Unk.WritePropertyName", file="BrokerageModelPythonWrapper.cs", label="Entry Unk.WritePropertyName", span=""];
m10_20 [cluster="Unk.WriteValue", file="BrokerageModelPythonWrapper.cs", label="Entry Unk.WriteValue", span=""];
m10_0 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="Entry QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="33-33"];
m10_1 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="var symbol = value as Symbol", span="35-35"];
m10_4 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WriteStartObject()", span="38-38"];
m10_5 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WritePropertyName(''$type'')", span="39-39"];
m10_6 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WriteValue(''QuantConnect.Symbol, QuantConnect.Common'')", span="40-40"];
m10_7 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WritePropertyName(''Value'')", span="41-41"];
m10_8 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WriteValue(symbol.Value)", span="42-42"];
m10_9 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WritePropertyName(''ID'')", span="43-43"];
m10_10 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WriteValue(symbol.ID.ToString())", span="44-44"];
m10_11 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WritePropertyName(''Permtick'')", span="45-45"];
m10_12 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WriteValue(symbol.Value)", span="46-46"];
m10_14 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WritePropertyName(''Underlying'')", span="49-49"];
m10_15 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="WriteJson(writer, symbol.Underlying, serializer)", span="50-50"];
m10_16 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="writer.WriteEndObject()", span="52-52"];
m10_2 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="symbol == null", span="36-36"];
m10_13 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="symbol.HasUnderlying", span="47-47"];
m10_3 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="return;", span="36-36"];
m10_17 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="BrokerageModelPythonWrapper.cs", label="Exit QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="33-33"];
m10_32 [cluster="Unk.TryGetValue", file="BrokerageModelPythonWrapper.cs", label="Entry Unk.TryGetValue", span=""];
m10_39 [file="BrokerageModelPythonWrapper.cs", label="QuantConnect.SymbolJsonConverter", span=""];
m11_20 [cluster="QuantConnect.Securities.ISecuritySeeder.SeedSecurity(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Securities.ISecuritySeeder.SeedSecurity(QuantConnect.Securities.Security)", span="28-28"];
m11_15 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="573-573"];
m11_14 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92"];
m11_6 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", span="55-55"];
m11_7 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="security.SetLeverage(_brokerageModel.GetLeverage(security))", span="58-58"];
m11_8 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="security.FillModel = _brokerageModel.GetFillModel(security)", span="59-59"];
m11_9 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="security.FeeModel = _brokerageModel.GetFeeModel(security)", span="60-60"];
m11_10 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="security.SlippageModel = _brokerageModel.GetSlippageModel(security)", span="61-61"];
m11_11 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="security.SettlementModel = _brokerageModel.GetSettlementModel(security, _brokerageModel.AccountType)", span="62-62"];
m11_12 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="_securitySeeder.SeedSecurity(security)", span="64-64"];
m11_13 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="Exit QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)", span="55-55"];
m11_2 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="45-45"];
m11_3 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="BrokerageModelSecurityInitializer.cs", label="_brokerageModel = brokerageModel", span="47-47"];
m11_4 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="BrokerageModelSecurityInitializer.cs", label="_securitySeeder = securitySeeder", span="48-48"];
m11_5 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="BrokerageModelSecurityInitializer.cs", label="Exit QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="45-45"];
m11_18 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="113-113"];
m11_0 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer()", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer()", span="34-34"];
m11_1 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer()", file="BrokerageModelSecurityInitializer.cs", label="Exit QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer()", span="34-34"];
m11_16 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99"];
m11_17 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="106-106"];
m11_19 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BrokerageModelSecurityInitializer.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121"];
m11_21 [file="BrokerageModelSecurityInitializer.cs", label="QuantConnect.Securities.BrokerageModelSecurityInitializer", span=""];
m12_0 [cluster="QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", span="52-52"];
m12_1 [cluster="QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", file="BrokerageTransactionHandler.cs", label="return (OrderFinancialAdvisorProperties)MemberwiseClone();", span="54-54"];
m12_2 [cluster="QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", span="52-52"];
m12_3 [cluster="object.MemberwiseClone()", file="BrokerageTransactionHandler.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m12_4 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Orders.OrderFinancialAdvisorProperties", span=""];
m13_87 [cluster="Unk.GetEntry", file="Cash.cs", label="Entry Unk.GetEntry", span=""];
m13_75 [cluster="Unk.Where", file="Cash.cs", label="Entry Unk.Where", span=""];
m13_128 [cluster="decimal.RoundToSignificantDigits(int)", file="Cash.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m13_92 [cluster="Unk.Trace", file="Cash.cs", label="Entry Unk.Trace", span=""];
m13_81 [cluster="Unk.Concat", file="Cash.cs", label="Entry Unk.Concat", span=""];
m13_19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="104-104"];
m13_20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label=_locker, span="106-106"];
m13_21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Amount += amount", span="108-108"];
m13_22 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="return Amount;", span="109-109"];
m13_23 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="104-104"];
m13_11 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
m13_12 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label=_isBaseCurrency, span="88-88"];
m13_14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="var rate = data.Value", span="90-90"];
m13_13 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="return;", span="88-88"];
m13_15 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label=_invertRealTimePrice, span="91-91"];
m13_16 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="rate = 1/rate", span="93-93"];
m13_17 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="ConversionRate = rate", span="95-95"];
m13_18 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
m13_85 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Cash.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="235-235"];
m13_123 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="228-228"];
m13_124 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="var rate = ConversionRate", span="231-231"];
m13_125 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="232-232"];
m13_126 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="return $''{Symbol}: {CurrencySymbol}{Amount,15:0.00} @ {rate,10:0.00####} = ${Math.Round(ValueInAccountCurrency, 2)}'';", span="233-233"];
m13_127 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="228-228"];
m13_83 [cluster="Unk.Min", file="Cash.cs", label="Entry Unk.Min", span=""];
m13_120 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="181-181"];
m13_111 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="177-177"];
m13_115 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="178-178"];
m13_118 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="179-179"];
m13_94 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="149-150"];
m13_97 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="167-167"];
m13_100 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="167-167"];
m13_103 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="167-167"];
m13_106 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="167-167"];
m13_110 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="177-177"];
m13_114 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="178-178"];
m13_117 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="179-179"];
m13_95 [cluster="lambda expression", file="Cash.cs", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="149-150"];
m13_96 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="149-150"];
m13_98 [cluster="lambda expression", color=green, community=0, file="Cash.cs", label="x.Key", prediction=5, span="167-167"];
m13_99 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="167-167"];
m13_101 [cluster="lambda expression", color=green, community=0, file="Cash.cs", label="x.SecurityType", prediction=6, span="167-167"];
m13_102 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="167-167"];
m13_104 [cluster="lambda expression", color=green, community=0, file="Cash.cs", label="x.Key", prediction=7, span="167-167"];
m13_105 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="167-167"];
m13_107 [cluster="lambda expression", color=green, community=0, file="Cash.cs", label="y.First().ID.Market", prediction=8, span="167-167"];
m13_108 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="167-167"];
m13_112 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="177-177"];
m13_116 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="178-178"];
m13_119 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="179-179"];
m13_121 [cluster="lambda expression", file="Cash.cs", label="x.Resolution", span="181-181"];
m13_122 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="181-181"];
m13_10 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Cash.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="302-302"];
m13_91 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="Cash.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m13_79 [cluster="Unk.ContainsKey", file="Cash.cs", label="Entry Unk.ContainsKey", span=""];
m13_88 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m13_84 [cluster="Unk.GetSymbolProperties", file="Cash.cs", label="Entry Unk.GetSymbolProperties", span=""];
m13_137 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Cash.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m13_90 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m13_130 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="236-236"];
m13_131 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="string market", span="238-238"];
m13_132 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="!markets.TryGetValue(securityType, out market)", span="239-239"];
m13_133 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="market = marketMap[securityType]", span="241-241"];
m13_134 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="return QuantConnect.Symbol.Create(crypto, securityType, market);", span="244-244"];
m13_135 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="236-236"];
m13_8 [cluster="System.ArgumentException.ArgumentException(string)", file="Cash.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="117-117"];
m13_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label=_locker, span="119-119"];
m13_26 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Amount = amount", span="121-121"];
m13_27 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="117-117"];
m13_80 [cluster="Unk.Add", file="Cash.cs", label="Entry Unk.Add", span=""];
m13_9 [cluster="string.ToUpper()", file="Cash.cs", label="Entry string.ToUpper()", span="0-0"];
m13_89 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m13_129 [cluster="System.Math.Round(decimal, int)", file="Cash.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m13_86 [cluster="Exception.cstr", file="Cash.cs", label="Entry Exception.cstr", span=""];
m13_77 [cluster="Unk.GroupBy", file="Cash.cs", label="Entry Unk.GroupBy", span=""];
m13_113 [cluster="Unk.CreateSymbol", file="Cash.cs", label="Entry Unk.CreateSymbol", span=""];
m13_0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m13_1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="symbol == null || symbol.Length != 3", span="72-72"];
m13_3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Amount = amount", span="76-76"];
m13_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="ConversionRate = conversionRate", span="77-77"];
m13_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Symbol = symbol.ToUpper()", span="78-78"];
m13_2 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="74-74"];
m13_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="CurrencySymbol = Currencies.GetCurrencySymbol(Symbol)", span="79-79"];
m13_7 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m13_93 [cluster="string.Format(string, object, object)", file="Cash.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m13_109 [cluster="Unk.First", file="Cash.cs", label="Entry Unk.First", span=""];
m13_61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="196-196"];
m13_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="136-136"];
m13_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Symbol == CashBook.AccountCurrency", span="138-138"];
m13_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="149-150"];
m13_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="Cash.cs", label="var markets = securities.Select(x => x.Key).GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", prediction=9, span="167-167"];
m13_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="177-179"];
m13_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="181-181"];
m13_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="189-189"];
m13_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="191-191"];
m13_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="195-195"];
m13_62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="198-198"];
m13_70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securities.Add(config.Symbol, security)", span="214-214"];
m13_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="147-147"];
m13_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_isBaseCurrency = true", span="141-141"];
m13_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRate = 1.0m", span="142-142"];
m13_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="143-143"];
m13_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="Cash.cs", label="string invert = CashBook.AccountCurrency + Symbol", prediction=10, span="148-148"];
m13_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == normal", span="152-152"];
m13_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="symbol.Value == normal || symbol.Value == invert", span="185-185"];
m13_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == invert", span="157-157"];
m13_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = symbol.Value == invert", span="187-187"];
m13_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="155-155"];
m13_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = true", span="160-160"];
m13_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="161-161"];
m13_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="168-168"];
m13_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="170-170"];
m13_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="172-172"];
m13_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="174-174"];
m13_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label=potentials, span="183-183"];
m13_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="182-182"];
m13_73 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="Cash.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", prediction=11, span="221-221"];
m13_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var securityType = symbol.ID.SecurityType", span="188-188"];
m13_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.Value);", span="193-193"];
m13_71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="215-215"];
m13_65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Cfd", span="202-202"];
m13_67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Crypto", span="206-206"];
m13_57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Cash quoteCash", span="190-190"];
m13_66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="204-204"];
m13_68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="208-208"];
m13_69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="212-212"];
m13_64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Security security", span="201-201"];
m13_72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return security;", span="216-216"];
m13_74 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="136-136"];
m13_76 [cluster="Unk.Select", file="Cash.cs", label="Entry Unk.Select", span=""];
m13_78 [cluster="Unk.ToDictionary", file="Cash.cs", label="Entry Unk.ToDictionary", span=""];
m13_82 [cluster="Unk.DefaultIfEmpty", file="Cash.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m13_138 [file="Cash.cs", label="QuantConnect.Securities.Cash", span=""];
m13_139 [file="Cash.cs", label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
m13_140 [file="Cash.cs", label=markets, span=""];
m16_29 [cluster="System.Exception.Exception(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m16_26 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="152-152"];
m16_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="118-118"];
m16_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="120-120"];
m16_37 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="118-118"];
m16_34 [cluster="QuantConnect.Util.Composer.AddPart<T>(T)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Util.Composer.AddPart<T>(T)", span="75-75"];
m16_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m16_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="75-75"];
m16_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var errors = new List<string>()", span="76-76"];
m16_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var account = Read<string>(job.BrokerageData, ''ib-account'', errors)", span="85-85"];
m16_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var userId = Read<string>(job.BrokerageData, ''ib-user-name'', errors)", span="87-87"];
m16_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var password = Read<string>(job.BrokerageData, ''ib-password'', errors)", span="88-88"];
m16_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var tradingMode = Read<string>(job.BrokerageData, ''ib-trading-mode'', errors)", span="88-88"];
m16_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var agentDescription = Read<string>(job.BrokerageData, ''ib-agent-description'', errors)", span="89-89"];
m16_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="errors.Count != 0", span="91-91"];
m16_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Composer.Instance.AddPart<IDataQueueHandler>(ib)", span="106-106"];
m16_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var useTws = Config.GetBool(''ib-use-tws'')", span="80-80"];
m16_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="errors.Count != 0", span="93-93"];
m16_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", color=green, community=0, file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="tradingMode.IsNullOrEmpty()", prediction=12, span="97-97"];
m16_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var port = Config.GetInt(''ib-port'', 4001)", span="80-80"];
m16_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var ib = new InteractiveBrokersBrokerage(algorithm, algorithm.Transactions, algorithm.Portfolio, account, host, port, agentDescription)", span="105-105"];
m16_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var host = Config.Get(''ib-host'', ''127.0.0.1'')", span="81-81"];
m16_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var twsDirectory = Config.Get(''ib-tws-dir'', ''C:\\Jts'')", span="83-83"];
m16_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="var ibControllerDirectory = Config.Get(''ib-controller-dir'', ''C:\\IBController'')", span="84-84"];
m16_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", color=green, community=0, file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="throw new Exception(''No trading mode selected. Please select either 'paper' or 'live' trading.'');", prediction=12, span="99-99"];
m16_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="InteractiveBrokersGatewayRunner.Start(ibControllerDirectory, twsDirectory, userId, password, tradingMode, useTws)", span="103-103"];
m16_21 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="return ib;", span="108-108"];
m16_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="74-74"];
m16_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="75-75"];
m16_31 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m16_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", span="183-183"];
m16_25 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m16_24 [cluster="System.Collections.Generic.List<T>.List()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_30 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m16_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="34-34"];
m16_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="34-34"];
m16_28 [cluster="QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", span="86-86"];
m16_27 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m16_38 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m17_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44"];
m17_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_dataCacheProvider = dataCacheProvider", span="46-46"];
m17_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_date = date", span="47-47"];
m17_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_config = config", span="48-48"];
m17_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_isLiveMode = isLiveMode", span="49-49"];
m17_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_factory = (BaseData)ObjectActivator.GetActivator(config.Type).Invoke(new object[] { config.Type })", span="50-50"];
m17_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44"];
m17_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="70-70"];
m17_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="SubscriptionDataSourceReader.CheckRemoteFileCache()", span="72-72"];
m17_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="yield return instances;", span="114-114"];
m17_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="yield return instance;", span="122-122"];
m17_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="source.TransportMedium", span="77-77"];
m17_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="reader = new LocalFileSubscriptionStreamReader(_dataCacheProvider, source.Source)", span="84-84"];
m17_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="reader = new RemoteFileSubscriptionStreamReader(_dataCacheProvider, source.Source, Globals.Cache, source.Headers)", span="87-87"];
m17_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="OnInvalidSource(source, new Exception(''Reader must generate a BaseDataCollection with the FileFormat.Collection''))", span="102-102"];
m17_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="IStreamReader reader = null", span="74-74"];
m17_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.Rest", span="80-80"];
m17_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.LocalFile", span="83-83"];
m17_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.RemoteFile", span="86-86"];
m17_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="var raw = ''''", span="91-91"];
m17_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="!reader.EndOfStream", span="92-92"];
m17_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="raw = reader.ReadLine()", span="97-97"];
m17_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="BaseDataCollection instances", span="94-94"];
m17_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="var result = _factory.Reader(_config, raw, _date, _isLiveMode)", span="98-98"];
m17_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="OnReaderError(raw, err)", span="108-108"];
m17_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="instances = result as BaseDataCollection", span="99-99"];
m17_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="instances == null", span="100-100"];
m17_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="instances.Data", span="118-118"];
m17_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label=Exception, span="106-106"];
m17_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label=_isLiveMode, span="112-112"];
m17_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="instance != null && instance.EndTime != default(DateTime)", span="120-120"];
m17_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="70-70"];
m17_49 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m17_8 [cluster="System.Func<T, TResult>.Invoke(T)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m17_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", span="140-140"];
m17_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="var handler = ReaderError", span="142-142"];
m17_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="handler(this, new ReaderErrorEventArgs(line, exception))", span="143-143"];
m17_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="handler != null", span="143-143"];
m17_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", span="140-140"];
m17_40 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m17_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="37-37"];
m17_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="41-41"];
m17_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45"];
m17_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="46-46"];
m17_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.CheckRemoteFileCache()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.CheckRemoteFileCache()", span="58-58"];
m17_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="151-151"];
m17_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="var handler = InvalidSource", span="153-153"];
m17_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="handler(this, new InvalidSourceEventArgs(source, exception))", span="154-154"];
m17_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="handler != null", span="154-154"];
m17_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="151-151"];
m17_39 [cluster="QuantConnect.Interfaces.IStreamReader.ReadLine()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Interfaces.IStreamReader.ReadLine()", span="38-38"];
m17_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="39-39"];
m17_7 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="50-50"];
m17_55 [file="CollectionSubscriptionDataSourceReader.cs", label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", span=""];
m20_8 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="69-69"];
m20_9 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="Holdings = new CryptoHolding(this)", span="86-86"];
m20_11 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="Forex.Forex.DecomposeCurrencyPair(symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="90-90"];
m20_10 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="89-89"];
m20_12 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="91-91"];
m20_13 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="Exit QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="69-69"];
m20_6 [cluster="QuantConnect.Securities.Crypto.CryptoHolding.CryptoHolding(QuantConnect.Securities.Crypto.Crypto)", file="Crypto.cs", label="Entry QuantConnect.Securities.Crypto.CryptoHolding.CryptoHolding(QuantConnect.Securities.Crypto.Crypto)", span="27-27"];
m20_0 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m20_1 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="Holdings = new CryptoHolding(this)", span="54-54"];
m20_3 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="Forex.Forex.DecomposeCurrencyPair(config.Symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="58-58"];
m20_2 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="57-57"];
m20_4 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="59-59"];
m20_5 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Crypto.cs", label="Exit QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m20_7 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Crypto.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="108-108"];
m20_14 [file="Crypto.cs", label="QuantConnect.Securities.Crypto.Crypto", span=""];
m21_88 [cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33"];
m21_44 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="180-180"];
m21_45 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ImmediateFillModel();", span="182-182"];
m21_46 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="180-180"];
m21_47 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.ImmediateFillModel()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.ImmediateFillModel()", span="26-26"];
m21_64 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="216-216"];
m21_65 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="security.Type", span="218-218"];
m21_66 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Base", span="220-220"];
m21_69 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Forex", span="224-224"];
m21_73 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Commodity", span="229-229"];
m21_67 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Equity", span="221-221"];
m21_68 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantSlippageModel(0);", span="222-222"];
m21_70 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Cfd", span="225-225"];
m21_71 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Crypto", span="226-226"];
m21_72 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantSlippageModel(0);", span="227-227"];
m21_74 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Option", span="230-230"];
m21_75 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Future", span="231-231"];
m21_76 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantSlippageModel(0);", span="233-233"];
m21_77 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="216-216"];
m21_3 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87"];
m21_4 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs", label="message = null", span="89-89"];
m21_5 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs", label="return true;", span="90-90"];
m21_6 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87"];
m21_78 [cluster="QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", span="30-30"];
m21_19 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Entry lambda expression", span="134-139"];
m21_20 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="ticket.Update(new UpdateOrderFields\r\n            {\r\n                Quantity = (int?) (ticket.Quantity/splitFactor),\r\n                LimitPrice = ticket.OrderType.IsLimitOrder() ? ticket.Get(OrderField.LimitPrice)*splitFactor : (decimal?) null,\r\n                StopPrice = ticket.OrderType.IsStopOrder() ? ticket.Get(OrderField.StopPrice)*splitFactor : (decimal?) null\r\n            })", span="134-139"];
m21_21 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Exit lambda expression", span="134-139"];
m21_23 [cluster="QuantConnect.Orders.OrderType.IsLimitOrder()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderType.IsLimitOrder()", span="60-60"];
m21_25 [cluster="QuantConnect.Orders.OrderType.IsStopOrder()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderType.IsStopOrder()", span="70-70"];
m21_22 [cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20"];
m21_7 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="101-101"];
m21_8 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs", label="message = null", span="103-103"];
m21_9 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs", label="return true;", span="104-104"];
m21_10 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="101-101"];
m21_11 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="117-117"];
m21_12 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs", label="return true;", span="119-119"];
m21_13 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="117-117"];
m21_24 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="217-217"];
m21_63 [cluster="QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", span="38-38"];
m21_62 [cluster="QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", span="31-31"];
m21_27 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="147-147"];
m21_28 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="AccountType == AccountType.Cash", span="149-149"];
m21_30 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="security.Type", span="154-154"];
m21_29 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return 1m;", span="151-151"];
m21_31 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Equity", span="156-156"];
m21_33 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Forex", span="159-159"];
m21_36 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Crypto", span="163-163"];
m21_38 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Base", span="166-166"];
m21_32 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return 2m;", span="157-157"];
m21_34 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Cfd", span="160-160"];
m21_35 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return 50m;", span="161-161"];
m21_37 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return 1m;", span="164-164"];
m21_39 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Commodity", span="167-167"];
m21_40 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Option", span="168-168"];
m21_41 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Future", span="169-169"];
m21_42 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return 1m;", span="171-171"];
m21_43 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="147-147"];
m21_79 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="243-243"];
m21_80 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="accountType == AccountType.Cash", span="245-245"];
m21_81 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="security.Type", span="247-247"];
m21_86 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="return new ImmediateSettlementModel();", span="257-257"];
m21_82 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="SecurityType.Equity", span="249-249"];
m21_84 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="SecurityType.Option", span="252-252"];
m21_83 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="return new DelayedSettlementModel(Equity.DefaultSettlementDays, Equity.DefaultSettlementTime);", span="250-250"];
m21_85 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="return new DelayedSettlementModel(Option.DefaultSettlementDays, Option.DefaultSettlementTime);", span="253-253"];
m21_87 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="243-243"];
m21_18 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="DefaultBrokerageModel.cs", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
m21_89 [cluster="QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", span="23-23"];
m21_26 [cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="255-255"];
m21_48 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="190-190"];
m21_49 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="security.Type", span="192-192"];
m21_50 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Base", span="194-194"];
m21_55 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Equity", span="200-200"];
m21_59 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Commodity", span="205-205"];
m21_51 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Forex", span="195-195"];
m21_52 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Cfd", span="196-196"];
m21_53 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Crypto", span="197-197"];
m21_54 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantFeeModel(0m);", span="198-198"];
m21_56 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Option", span="201-201"];
m21_57 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Future", span="202-202"];
m21_58 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new InteractiveBrokersFeeModel();", span="203-203"];
m21_60 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantFeeModel(0m);", span="207-207"];
m21_61 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="190-190"];
m21_0 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m21_1 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="AccountType = accountType", span="73-73"];
m21_2 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m21_14 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="130-130"];
m21_15 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="DefaultBrokerageModel.cs", label="var splitFactor = split.SplitFactor", span="133-133"];
m21_16 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="DefaultBrokerageModel.cs", label="tickets.ForEach(ticket => ticket.Update(new UpdateOrderFields\r\n            {\r\n                Quantity = (int?) (ticket.Quantity/splitFactor),\r\n                LimitPrice = ticket.OrderType.IsLimitOrder() ? ticket.Get(OrderField.LimitPrice)*splitFactor : (decimal?) null,\r\n                StopPrice = ticket.OrderType.IsStopOrder() ? ticket.Get(OrderField.StopPrice)*splitFactor : (decimal?) null\r\n            }))", span="134-139"];
m21_17 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="130-130"];
m21_90 [file="DefaultBrokerageModel.cs", label="QuantConnect.Brokerages.DefaultBrokerageModel", span=""];
m21_91 [file="DefaultBrokerageModel.cs", label=splitFactor, span=""];
m22_4 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", span="63-63"];
m22_5 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="decimal marginBuffer = 0.10m", prediction=14, span="66-66"];
m22_6 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="totalMargin <= netLiquidationValue * (1 + marginBuffer)", prediction=15, span="68-68"];
m22_8 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="!security.Holdings.Invested", prediction=15, span="73-73"];
m22_10 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="security.QuoteCurrency.ConversionRate == 0m", prediction=15, span="78-78"];
m22_12 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="var deltaInQuoteCurrency = (totalMargin - netLiquidationValue) / security.QuoteCurrency.ConversionRate", prediction=18, span="85-85"];
m22_13 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="var unitPriceInQuoteCurrency = security.Price * security.SymbolProperties.ContractMultiplier", prediction=19, span="88-88"];
m22_14 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="var quantity = Math.Round(deltaInQuoteCurrency / unitPriceInQuoteCurrency, MidpointRounding.AwayFromZero) / maintenanceMarginRequirement", prediction=20, span="89-89"];
m22_15 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="quantity = Math.Max(security.SymbolProperties.LotSize, Math.Min(security.Holdings.AbsoluteQuantity, quantity))", prediction=15, span="92-92"];
m22_16 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="security.Holdings.IsLong", prediction=15, span="93-93"];
m22_18 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="return new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, quantity, 0, 0, security.LocalTime.ConvertToUtc(security.Exchange.TimeZone), ''Margin Call'', DefaultOrderProperties?.Clone());", prediction=15, span="99-99"];
m22_7 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="return null;", prediction=24, span="70-70"];
m22_9 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="return null;", prediction=25, span="75-75"];
m22_11 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="return null;", prediction=26, span="81-81"];
m22_17 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="quantity *= -1", prediction=27, span="96-96"];
m22_19 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", span="63-63"];
m22_26 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="108-108"];
m22_27 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", color=green, community=0, file="DefaultMarginCallModel.cs", label="Portfolio.MarginRemaining >= 0", prediction=15, span="111-111"];
m22_30 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", color=green, community=0, file="DefaultMarginCallModel.cs", label="var ordersWithSecurities = generatedMarginCallOrders.ToDictionary(x => x, x => Portfolio[x.Symbol])", prediction=29, span="118-118"];
m22_28 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", color=green, community=0, file="DefaultMarginCallModel.cs", label="return new List<OrderTicket>();", prediction=30, span="113-113"];
m22_29 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", color=green, community=0, file="DefaultMarginCallModel.cs", label="var executedOrders = new List<OrderTicket>()", prediction=31, span="117-117"];
m22_35 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="executedOrders.Add(ticket)", span="124-124"];
m22_37 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="return executedOrders;", span="132-132"];
m22_31 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="var orderedByLosers = ordersWithSecurities.OrderBy(x => x.Value.UnrealizedProfit).Select(x => x.Key)", span="119-119"];
m22_32 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label=orderedByLosers, span="120-120"];
m22_33 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="var ticket = Portfolio.Transactions.AddOrder(request)", span="122-122"];
m22_34 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Portfolio.Transactions.WaitForOrder(request.OrderId)", span="123-123"];
m22_36 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Portfolio.MarginRemaining >= 0", span="127-127"];
m22_38 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="108-108"];
m22_45 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m22_22 [cluster="System.Math.Max(decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m22_21 [cluster="System.Math.Min(decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m22_25 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
m22_0 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Interfaces.IOrderProperties)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Interfaces.IOrderProperties)", span="48-48"];
m22_1 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Interfaces.IOrderProperties)", file="DefaultMarginCallModel.cs", label="Portfolio = portfolio", span="50-50"];
m22_2 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Interfaces.IOrderProperties)", file="DefaultMarginCallModel.cs", label="DefaultOrderProperties = defaultOrderProperties", span="51-51"];
m22_3 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Interfaces.IOrderProperties)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Interfaces.IOrderProperties)", span="48-48"];
m22_43 [cluster="Unk.AddOrder", file="DefaultMarginCallModel.cs", label="Entry Unk.AddOrder", span=""];
m22_39 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m22_20 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m22_41 [cluster="Unk.OrderBy", file="DefaultMarginCallModel.cs", label="Entry Unk.OrderBy", span=""];
m22_42 [cluster="Unk.Select", file="DefaultMarginCallModel.cs", label="Entry Unk.Select", span=""];
m22_40 [cluster="Unk.ToDictionary", file="DefaultMarginCallModel.cs", label="Entry Unk.ToDictionary", span=""];
m22_23 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m22_44 [cluster="Unk.WaitForOrder", file="DefaultMarginCallModel.cs", label="Entry Unk.WaitForOrder", span=""];
m22_55 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="119-119"];
m22_46 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="118-118"];
m22_49 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="118-118"];
m22_52 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="119-119"];
m22_47 [cluster="lambda expression", color=green, community=0, file="DefaultMarginCallModel.cs", label=x, prediction=32, span="118-118"];
m22_48 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="118-118"];
m22_50 [cluster="lambda expression", color=green, community=0, file="DefaultMarginCallModel.cs", label="Portfolio[x.Symbol]", prediction=15, span="118-118"];
m22_51 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="118-118"];
m22_53 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Value.UnrealizedProfit", span="119-119"];
m22_54 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="119-119"];
m22_56 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Key", span="119-119"];
m22_57 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="119-119"];
m22_58 [file="DefaultMarginCallModel.cs", label="QuantConnect.Securities.DefaultMarginCallModel", span=""];
m23_20 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="Delisting.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="136-136"];
m23_27 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", span="98-98"];
m23_28 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var errors = new List<string>()", span="100-100"];
m23_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var account = Read<string>(brokerageData, ''ib-account'', errors)", span="109-109"];
m23_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var userID = Read<string>(brokerageData, ''ib-user-name'', errors)", span="110-110"];
m23_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var password = Read<string>(brokerageData, ''ib-password'', errors)", span="111-111"];
m23_37 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var agentDescription = Read<AgentDescription>(brokerageData, ''ib-agent-description'', errors)", span="112-112"];
m23_41 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="return new InteractiveBrokersBrokerage(orderMapping, account, host, port, agentDescription);", span="123-123"];
m23_29 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var useTws = Config.GetBool(''ib-use-tws'')", span="103-103"];
m23_38 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="errors.Count != 0", span="114-114"];
m23_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="throw new Exception(string.Join(Environment.NewLine, errors));", span="117-117"];
m23_30 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var port = Config.GetInt(''ib-port'', 4001)", span="104-104"];
m23_40 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="InteractiveBrokersGatewayRunner.Start(ibControllerDirectory, twsDirectory, userID, password, useTws)", span="121-121"];
m23_31 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var host = Config.Get(''ib-host'', ''127.0.0.1'')", span="105-105"];
m23_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var twsDirectory = Config.Get(''ib-tws-dir'', ''C:\\Jts'')", span="106-106"];
m23_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="var ibControllerDirectory = Config.Get(''ib-controller-dir'', ''C:\\IBController'')", span="107-107"];
m23_42 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", file="Delisting.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(System.Collections.Generic.Dictionary<string, string>, QuantConnect.Securities.IOrderMapping)", span="98-98"];
m23_43 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="Delisting.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="131-131"];
m23_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="Delisting.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="133-133"];
m23_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="Delisting.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="131-131"];
m23_26 [cluster="InteractiveBrokersBrokerage.cstr", file="Delisting.cs", label="Entry InteractiveBrokersBrokerage.cstr", span=""];
m23_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="64-64"];
m23_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="var errors = new List<string>()", span="66-66"];
m23_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="var account = Read<string>(job.BrokerageData, ''ib-account'', errors)", span="75-75"];
m23_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="var userID = Read<string>(job.BrokerageData, ''ib-user-name'', errors)", span="76-76"];
m23_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="var password = Read<string>(job.BrokerageData, ''ib-password'', errors)", span="77-77"];
m23_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="var agentDescription = Read<AgentDescription>(job.BrokerageData, ''ib-agent-description'', errors)", span="78-78"];
m23_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="return new InteractiveBrokersBrokerage(algorithm.Transactions, account, host, port, agentDescription);", span="89-89"];
m23_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="var useTws = Config.GetBool(''ib-use-tws'')", span="69-69"];
m23_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="errors.Count != 0", span="80-80"];
m23_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="throw new Exception(string.Join(Environment.NewLine, errors));", span="83-83"];
m23_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="var port = Config.GetInt(''ib-port'', 4001)", span="70-70"];
m23_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="InteractiveBrokersGatewayRunner.Start(ibControllerDirectory, twsDirectory, userID, password, useTws)", span="87-87"];
m23_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="var host = Config.Get(''ib-host'', ''127.0.0.1'')", span="71-71"];
m23_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Delisting.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="64-64"];
m23_19 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Delisting.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="125-125"];
m23_18 [cluster="System.Collections.Generic.List<T>.List()", file="Delisting.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m23_25 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Delisting.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", span="58-58"];
m23_24 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Delisting.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m23_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="Delisting.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="33-33"];
m23_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="Delisting.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="33-33"];
m23_22 [cluster="QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", file="Delisting.cs", label="Entry QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", span="72-72"];
m23_21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Delisting.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="87-87"];
m23_46 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Delisting.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="90-90"];
m24_20 [cluster="System.Action<T>.Invoke(T)", file="DisposableExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m24_8 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="Entry QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", span="29-29"];
m24_9 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="disposable == null", span="31-31"];
m24_11 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="disposable.Dispose()", span="38-38"];
m24_16 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="errorHandler(error)", span="48-48"];
m24_10 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="return false;", span="33-33"];
m24_12 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="return true;", span="39-39"];
m24_13 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label=ObjectDisposedException, span="41-41"];
m24_14 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="return true;", span="44-44"];
m24_15 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label=Exception, span="46-46"];
m24_17 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="return false;", span="49-49"];
m24_18 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label="Exit QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", span="29-29"];
m24_19 [cluster="System.IDisposable.Dispose()", file="DisposableExtensions.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m24_3 [cluster="System.IDisposable.DisposeSafely(System.Action<System.Exception>)", file="DisposableExtensions.cs", label="Entry System.IDisposable.DisposeSafely(System.Action<System.Exception>)", span="29-29"];
m24_0 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", file="DisposableExtensions.cs", label="Entry QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", span="15-15"];
m24_1 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", file="DisposableExtensions.cs", label="return disposable.DisposeSafely(error => Log.Error(error));", span="17-17"];
m24_2 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", file="DisposableExtensions.cs", label="Exit QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", span="15-15"];
m24_4 [cluster="lambda expression", file="DisposableExtensions.cs", label="Entry lambda expression", span="17-17"];
m24_5 [cluster="lambda expression", file="DisposableExtensions.cs", label="Log.Error(error)", span="17-17"];
m24_6 [cluster="lambda expression", file="DisposableExtensions.cs", label="Exit lambda expression", span="17-17"];
m25_10 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="Extensions.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m25_9 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Extensions.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="108-108"];
m25_11 [cluster="Unk.IsTrue", file="Extensions.cs", label="Entry Unk.IsTrue", span=""];
m25_0 [cluster="QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", file="Extensions.cs", label="Entry QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", span="25-25"];
m25_1 [cluster="QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", file="Extensions.cs", label="var allPairs = Currencies.CurrencyPairs.Concat(Currencies.CfdCurrencyPairs).Concat(Currencies.CryptoCurrencyPairs)", span="27-27"];
m25_2 [cluster="QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", file="Extensions.cs", label=allPairs, span="28-28"];
m25_3 [cluster="QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", file="Extensions.cs", label="string quotec, basec", span="30-30"];
m25_4 [cluster="QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", file="Extensions.cs", label="Forex.DecomposeCurrencyPair(currencyPair, out basec, out quotec)", span="31-31"];
m25_5 [cluster="QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", file="Extensions.cs", label="Assert.IsTrue(Currencies.CurrencySymbols.ContainsKey(basec), ''Missing currency symbol for: '' + basec)", span="32-32"];
m25_6 [cluster="QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", file="Extensions.cs", label="Assert.IsTrue(Currencies.CurrencySymbols.ContainsKey(quotec), ''Missing currency symbol for: '' + quotec)", span="33-33"];
m25_7 [cluster="QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", file="Extensions.cs", label="Exit QuantConnect.Tests.Common.CurrenciesTests.HasCurrencySymbolForEachPair()", span="25-25"];
m27_49 [cluster="System.Collections.IEnumerator.Reset()", file="FileSystemDataFeedTests.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m27_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Dispose()", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Dispose()", span="167-167"];
m27_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Dispose()", file="FileSystemDataFeedTests.cs", label="_enumerator.Dispose()", span="169-169"];
m27_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Dispose()", file="FileSystemDataFeedTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Dispose()", span="167-167"];
m27_86 [cluster="QuantConnect.Securities.SecurityExchange.DateIsOpen(System.DateTime)", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Securities.SecurityExchange.DateIsOpen(System.DateTime)", span="152-152"];
m27_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", span="50-50"];
m27_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", color=green, community=0, file="FileSystemDataFeedTests.cs", label="_exchange = exchange", prediction=34, span="58-58"];
m27_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", color=green, community=0, file="FileSystemDataFeedTests.cs", label="_enumerator = enumerator", prediction=35, span="59-59"];
m27_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", file="FileSystemDataFeedTests.cs", label="_dataResolution = dataResolution", span="60-60"];
m27_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", file="FileSystemDataFeedTests.cs", label="_fillForwardResolution = fillForwardResolution", span="61-61"];
m27_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", file="FileSystemDataFeedTests.cs", label="_isExtendedMarketHours = isExtendedMarketHours", span="62-62"];
m27_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", file="FileSystemDataFeedTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, System.TimeSpan, bool, System.DateTime, System.TimeSpan)", span="50-50"];
m27_40 [cluster="QuantConnect.Data.BaseData.Clone(bool)", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="204-204"];
m27_39 [cluster="System.Collections.IEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m27_45 [cluster="System.IDisposable.Dispose()", file="FileSystemDataFeedTests.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m27_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Reset()", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Reset()", span="176-176"];
m27_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Reset()", file="FileSystemDataFeedTests.cs", label="_enumerator.Reset()", span="178-178"];
m27_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Reset()", file="FileSystemDataFeedTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.Reset()", span="176-176"];
m27_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetMarketOpen(System.DateTime)", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetMarketOpen(System.DateTime)", span="272-272"];
m27_87 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetMarketOpen(System.DateTime)", file="FileSystemDataFeedTests.cs", label="return date + (_isExtendedMarketHours ? _exchange.ExtendedMarketOpen : _exchange.MarketOpen);", span="274-274"];
m27_88 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetMarketOpen(System.DateTime)", file="FileSystemDataFeedTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetMarketOpen(System.DateTime)", span="272-272"];
m27_81 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="FileSystemDataFeedTests.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="263-263"];
m27_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", span="188-188"];
m27_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="next.EndTime < previous.Time", span="190-190"];
m27_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="next.Time - previous.Time <= _fillForwardResolution", span="196-196"];
m27_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="var barAfterPreviousEndTime = previous.EndTime + _fillForwardResolution", span="203-203"];
m27_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="_exchange.IsOpenDuringBar(previous.EndTime, barAfterPreviousEndTime, _isExtendedMarketHours)", span="204-204"];
m27_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="fillForward = previous.Clone(true)", span="207-207"];
m27_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="fillForward.Time = previous.Time + _fillForwardResolution", span="208-208"];
m27_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="var frontierDate = previous.EndTime.Date", span="217-217"];
m27_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="previous.EndTime > GetMarketOpen(frontierDate) - _fillForwardResolution", span="218-218"];
m27_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="var dailyBarEnd = GetNextOpenDateAfter(previous.Time.Date) + Time.OneDay", span="234-234"];
m27_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="nextFillForwardTime < next.EndTime", span="242-242"];
m27_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="fillForward = previous.Clone(true)", span="245-245"];
m27_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="throw new ArgumentException(''FillForwardEnumerator received data out of order.'');", span="192-192"];
m27_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="fillForward = null", span="198-198"];
m27_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="return false;", span="199-199"];
m27_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="DateTime nextFillForwardTime", span="216-216"];
m27_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="return true;", span="209-209"];
m27_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="nextFillForwardTime = GetMarketOpen(GetNextOpenDateAfter(frontierDate)) + _fillForwardResolution", span="221-221"];
m27_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="nextFillForwardTime = GetMarketOpen(GetNextOpenDateAfter(frontierDate.Date.AddDays(-1))) + _fillForwardResolution", span="228-228"];
m27_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="_dataResolution == Time.OneDay", span="231-231"];
m27_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="dailyBarEnd < nextFillForwardTime", span="235-235"];
m27_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="fillForward.Time = (nextFillForwardTime - _dataResolution).RoundDown(_fillForwardResolution)", span="246-246"];
m27_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="nextFillForwardTime = dailyBarEnd", span="238-238"];
m27_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="fillForward = null", span="251-251"];
m27_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="return true;", span="247-247"];
m27_74 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="return false;", span="252-252"];
m27_75 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", file="FileSystemDataFeedTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.RequiresFillForwardData(QuantConnect.Data.BaseData, QuantConnect.Data.BaseData, out QuantConnect.Data.BaseData)", span="188-188"];
m27_80 [cluster="System.DateTime.AddDays(double)", file="FileSystemDataFeedTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m27_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", span="96-96"];
m27_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", color=green, community=0, file="FileSystemDataFeedTests.cs", label="!_emittedAuxilliaryData", prediction=36, span="98-98"];
m27_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", color=green, community=0, file="FileSystemDataFeedTests.cs", label="_previous = Current", prediction=37, span="102-102"];
m27_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", color=green, community=0, file="FileSystemDataFeedTests.cs", label="BaseData fillForward", prediction=38, span="105-105"];
m27_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", color=green, community=0, file="FileSystemDataFeedTests.cs", label="!_isFillingForward", prediction=36, span="107-107"];
m27_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", color=green, community=0, file="FileSystemDataFeedTests.cs", label="!_enumerator.MoveNext()", prediction=36, span="110-110"];
m27_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="_previous == null", span="135-135"];
m27_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", color=green, community=0, file="FileSystemDataFeedTests.cs", label="_previous == null || _previous.EndTime >= _subscriptionEndTime", prediction=36, span="113-113"];
m27_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", color=green, community=0, file="FileSystemDataFeedTests.cs", label="return false;", prediction=42, span="116-116"];
m27_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="var endOfSubscription = Current.Clone(true)", span="120-120"];
m27_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="endOfSubscription.Time = _subscriptionEndTime - _dataResolution", span="121-121"];
m27_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="RequiresFillForwardData(_previous, endOfSubscription, out fillForward)", span="122-122"];
m27_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Current = endOfSubscription", span="130-130"];
m27_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Current = fillForward", span="126-126"];
m27_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="return true;", span="127-127"];
m27_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="return true;", span="131-131"];
m27_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Current = _enumerator.Current", span="138-138"];
m27_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="_enumerator.Current.DataType == MarketDataType.Auxiliary", span="142-142"];
m27_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="return true;", span="139-139"];
m27_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="_emittedAuxilliaryData = true", span="144-144"];
m27_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="_emittedAuxilliaryData = false", span="149-149"];
m27_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Current = _enumerator.Current", span="145-145"];
m27_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="return true;", span="146-146"];
m27_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="RequiresFillForwardData(_previous, _enumerator.Current, out fillForward)", span="150-150"];
m27_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="_isFillingForward = true", span="153-153"];
m27_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="_isFillingForward = false", span="158-158"];
m27_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Current = fillForward", span="154-154"];
m27_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="return true;", span="155-155"];
m27_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Current = _enumerator.Current", span="159-159"];
m27_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="return true;", span="160-160"];
m27_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", file="FileSystemDataFeedTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.MoveNext()", span="96-96"];
m27_76 [cluster="System.ArgumentException.ArgumentException(string)", file="FileSystemDataFeedTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m27_79 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetNextOpenDateAfter(System.DateTime)", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetNextOpenDateAfter(System.DateTime)", span="258-258"];
m27_82 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetNextOpenDateAfter(System.DateTime)", file="FileSystemDataFeedTests.cs", label="date = date + Time.OneDay", span="262-262"];
m27_83 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetNextOpenDateAfter(System.DateTime)", file="FileSystemDataFeedTests.cs", label="!_exchange.DateIsOpen(date)", span="264-264"];
m27_84 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetNextOpenDateAfter(System.DateTime)", file="FileSystemDataFeedTests.cs", label="return date;", span="265-265"];
m27_85 [cluster="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetNextOpenDateAfter(System.DateTime)", file="FileSystemDataFeedTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator.GetNextOpenDateAfter(System.DateTime)", span="258-258"];
m27_77 [cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="FileSystemDataFeedTests.cs", label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="202-202"];
m27_89 [file="FileSystemDataFeedTests.cs", label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", span=""];
m28_32 [cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry lambda expression", span="53-59"];
m28_34 [cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="var job = systemHandlers.JobQueue.NextJob(out algorithmPath)", span="56-56"];
m28_36 [cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="systemHandlers.JobQueue.AcknowledgeJob(job)", span="58-58"];
m28_35 [cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="engine.Run(job, algorithmPath)", span="57-57"];
m28_33 [cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="string algorithmPath", span="55-55"];
m28_37 [cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Exit lambda expression", span="53-59"];
m28_27 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m28_22 [cluster="System.Console.WriteLine(string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m28_26 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="164-164"];
m28_28 [cluster="System.Threading.Tasks.Task.Wait()", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m28_29 [cluster="Unk.AreEqual", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry Unk.AreEqual", span=""];
m28_21 [cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", span="33-33"];
m28_39 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="176-176"];
m28_30 [cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.Dispose()", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.Dispose()", span="113-113"];
m28_24 [cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="90-90"];
m28_0 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", span="32-32"];
m28_2 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Console.WriteLine(''Running '' + algorithm + ''...'')", span="40-40"];
m28_3 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Config.Set(''algorithm-type-name'', algorithm)", span="43-43"];
m28_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Config.Set(''live-mode'', ''false'')", span="44-44"];
m28_5 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Config.Set(''messaging-handler'', ''QuantConnect.Messaging.Messaging'')", span="45-45"];
m28_6 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Config.Set(''job-queue-handler'', ''QuantConnect.Queues.JobQueue'')", span="46-46"];
m28_7 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Config.Set(''api-handler'', ''QuantConnect.Api.Api'')", span="47-47"];
m28_8 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="var systemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="50-50"];
m28_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="var algorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="51-51"];
m28_10 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="var engine = new Lean.Engine.Engine(systemHandlers, algorithmHandlers, false)", span="52-52"];
m28_11 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Task.Factory.StartNew(() =>\r\n            {\r\n                string algorithmPath;\r\n                var job = systemHandlers.JobQueue.NextJob(out algorithmPath);\r\n                engine.Run(job, algorithmPath);\r\n                systemHandlers.JobQueue.AcknowledgeJob(job);\r\n            }).Wait()", span="53-59"];
m28_17 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="algorithmHandlers.Dispose()", span="70-70"];
m28_18 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", span="32-32"];
m28_31 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="147-147"];
m28_38 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="38-38"];
m28_25 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="126-126"];
m28_40 [cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44"];
m28_23 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="107-107"];
m28_19 [cluster="QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(QuantConnect.Logging.ILogHandler[])", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(QuantConnect.Logging.ILogHandler[])", span="37-37"];
m28_20 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="FineFundamentalSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="31-31"];
m28_41 [file="FineFundamentalSubscriptionEnumeratorFactory.cs", label=systemHandlers, span=""];
m28_42 [file="FineFundamentalSubscriptionEnumeratorFactory.cs", label=engine, span=""];
m29_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="var nextSecond = time.RoundUp(TimeSpan.FromSeconds(1))", span="114-114"];
m29_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m29_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="183-183"];
m29_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="ScheduledEvent scheduledEvent", span="182-182"];
m29_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m29_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="scheduledEvent.Value.Scan(time)", span="123-123"];
m29_88 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m29_33 [cluster="lambda expression", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit lambda expression", span="84-84"];
m29_55 [cluster="System.Threading.Thread.Sleep(int)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m29_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", span="34-34"];
m29_56 [cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="126-126"];
m29_57 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m29_58 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134"];
m29_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Assert.AreEqual(parameters.EquityPerShareGrowth1Y, row.EarningRatios.EquityPerShareGrowth)", prediction=43, span="71-71"];
m29_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Assert.AreEqual(parameters.EquityPerShareGrowth1Y, row.EarningRatios.EquityPerShareGrowth.OneYear)", span="70-70"];
m29_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Assert.AreEqual(parameters.PeRatio, row.ValuationRatios.PERatio)", span="72-72"];
m29_32 [cluster="System.Diagnostics.Stopwatch.StartNew()", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", prediction=44, span="0-0"];
m29_34 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m29_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="var errorMessage = $''LiveTradingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Key}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="127-127"];
m29_49 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_isActive = false", span="140-140"];
m29_50 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Log.Trace(''LiveTradingRealTimeHandler.Run(): Exiting thread... Exit triggered: '' + _cancellationTokenSource.IsCancellationRequested)", span="141-141"];
m29_51 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m29_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Assert.AreEqual(parameters.CostOfRevenue12M, row.FinancialStatements.IncomeStatement.CostOfRevenue.TwelveMonths)", span="68-68"];
m29_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m29_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_cancellationTokenSource.Cancel()", span="211-211"];
m29_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m29_59 [cluster="TestCaseData.cstr", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry TestCaseData.cstr", span=""];
m29_53 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="567-567"];
m29_54 [cluster="Unk.Select", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry Unk.Select", span=""];
m29_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_algorithm.RunTimeError = new Exception(errorMessage)", span="135-135"];
m29_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Assert.AreEqual(parameters.CompanyShortName, row.CompanyReference.ShortName)", span="60-60"];
m29_62 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters.FineFundamentalTestParameters(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters.FineFundamentalTestParameters(string)", span="168-168"];
m29_63 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", span=""];
m29_61 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters.FineFundamentalTestParameters(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Name = name", span="170-170"];
m29_66 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.RefreshMarketHoursToday({0}): Market hours set: Symbol: {1} {2} ({3})'',\r\n                        security.Type, security.Symbol, localMarketHours, security.Exchange.Hours.TimeZone))", span="157-158"];
m29_64 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="security.Exchange.SetMarketHours(marketHours, date.DayOfWeek)", span="155-155"];
m29_65 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="var localMarketHours = security.Exchange.Hours.MarketHours[date.DayOfWeek]", span="156-156"];
m29_67 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="147-147"];
m29_68 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", span="288-288"];
m29_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m29_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_api = api", span="59-59"];
m29_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_resultHandler = resultHandler", span="61-61"];
m29_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="var todayInAlgorithmTimeZone = DateTime.UtcNow.ConvertFromUtc(_algorithm.TimeZone).Date", span="64-64"];
m29_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="scheduledEvent.Value.IsLoggingEnabled = Log.DebuggingEnabled", prediction=45, span="95-95"];
m29_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m29_19 [cluster="System.DateTime.AddDays(double)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m29_20 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m29_21 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m29_22 [cluster="ScheduledEvent.cstr", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry ScheduledEvent.cstr", span=""];
m29_23 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m29_24 [cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64"];
m29_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Assert.AreEqual(parameters.CostOfRevenue3M, row.FinancialStatements.IncomeStatement.CostOfRevenue.ThreeMonths)", span="67-67"];
m29_27 [cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="183-183"];
m29_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_algorithm = algorithm", span="60-60"];
m29_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label=_scheduledEvents, prediction=43, span="90-90"];
m29_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="scheduledEvent.Value.SkipEventsUntil(algorithm.UtcTime)", prediction=43, span="93-93"];
m29_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.SecurityEndOfDayDelta, DateTime.UtcNow))", prediction=43, span="87-87"];
m29_17 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m29_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_cancellationTokenSource = new CancellationTokenSource()", span="62-62"];
m29_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="RefreshMarketHoursToday(todayInAlgorithmTimeZone)", span="67-67"];
m29_8 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Add(new ScheduledEvent(''RefreshMarketHours'', times, (name, triggerTime) =>\r\n            {\r\n                // refresh market hours from api every day\r\n                RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date);\r\n            }))", prediction=43, span="74-78"];
m29_7 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="var times =\r\n                from date in Time.EachDay(todayInAlgorithmTimeZone.AddDays(1), Time.EndOfTime)\r\n                select date.ConvertToUtc(_algorithm.TimeZone)", span="70-72"];
m29_9 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Add(ScheduledEventFactory.EveryAlgorithmEndOfDay(_algorithm, _resultHandler, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.AlgorithmEndOfDayDelta, DateTime.UtcNow))", prediction=43, span="81-81"];
m29_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_algorithm.Securities.Values.Where(x => !x.IsInternalFeed())", prediction=43, span="84-84"];
m29_16 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m29_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Log.Error(errorMessage)", span="129-129"];
m29_80 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m29_36 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_isActive = true", prediction=52, span="105-105"];
m29_35 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m29_37 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", color=green, community=0, file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", prediction=43, span="70-70"];
m29_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="59-59"];
m29_38 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m29_47 [cluster="Unk.AreEqual", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry Unk.AreEqual", span=""];
m29_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="47-47"];
m29_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", span="26-26"];
m29_44 [cluster="System.Collections.Generic.List<T>.Add(T)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m29_69 [cluster="QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", span="126-126"];
m29_75 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m29_52 [cluster="System.TimeSpan.FromSeconds(double)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m29_70 [cluster="Unk.Format", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry Unk.Format", span=""];
m29_60 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m29_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="170-170"];
m29_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_algorithm != null", span="168-168"];
m29_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="_scheduledEvents.AddOrUpdate(scheduledEvent.Name, scheduledEvent)", span="173-173"];
m29_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m29_89 [file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m30_0 [cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", file="ForexHolding.cs", label="Entry QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", span="27-27"];
m30_1 [cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", file="ForexHolding.cs", label="Exit QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", span="27-27"];
m32_0 [cluster="QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", span="30-30"];
m32_1 [cluster="QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", file="FractionalQuantityRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", span="30-30"];
m33_93 [cluster="QuantConnect.Securities.FutureMarginModel.MarginRequirementsEntry.MarginRequirementsEntry()", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.MarginRequirementsEntry.MarginRequirementsEntry()", span="310-310"];
m33_16 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="75-75"];
m33_29 [cluster="QuantConnect.Securities.Security.GetLastData()", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="504-504"];
m33_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label=moveNext, span="58-58"];
m33_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", color=green, community=0, file="FutureMarginModel.cs", label="_current = _enumerator.Current", prediction=54, span="60-60"];
m33_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="_enumerator.DisposeSafely()", span="64-64"];
m33_15 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="FutureMarginModel.cs", label="return orderValue + Math.Sign(orderValue) * orderFees;", span="83-83"];
m33_121 [cluster="string.Split(params char[])", file="FutureMarginModel.cs", label="Entry string.Split(params char[])", span="0-0"];
m33_99 [cluster="Unk.ToArray", file="FutureMarginModel.cs", label="Entry Unk.ToArray", span=""];
m33_122 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="FutureMarginModel.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m33_104 [cluster="string.IsNullOrWhiteSpace(string)", file="FutureMarginModel.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m33_105 [cluster="lambda expression", file="FutureMarginModel.cs", label="Entry lambda expression", span="267-267"];
m33_100 [cluster="lambda expression", file="FutureMarginModel.cs", label="Entry lambda expression", span="264-264"];
m33_102 [cluster="lambda expression", file="FutureMarginModel.cs", label="Exit lambda expression", span="264-264"];
m33_101 [cluster="lambda expression", file="FutureMarginModel.cs", label="!x.StartsWith(''#'') && !string.IsNullOrWhiteSpace(x)", span="264-264"];
m33_106 [cluster="lambda expression", file="FutureMarginModel.cs", label="x.Date", span="267-267"];
m33_107 [cluster="lambda expression", file="FutureMarginModel.cs", label="Exit lambda expression", span="267-267"];
m33_21 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="91-91"];
m33_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="_current = default(T)", span="67-67"];
m33_14 [cluster="System.Func<TResult>.Invoke()", file="FutureMarginModel.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m33_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", span="50-50"];
m33_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="return true;", span="70-70"];
m33_88 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvFile(string)", file="FutureMarginModel.cs", label="return new[] {\r\n                                new MarginRequirementsEntry\r\n                                {\r\n                                  Date = DateTime.MinValue\r\n                                }\r\n                            };", span="253-258"];
m33_89 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvFile(string)", file="FutureMarginModel.cs", label="return File.ReadLines(file)\r\n                .Where(x => !x.StartsWith(''#'') && !string.IsNullOrWhiteSpace(x))\r\n                .Skip(1)\r\n                .Select(FromCsvLine)\r\n                .OrderBy(x => x.Date)\r\n                .ToArray();", span="263-268"];
m33_85 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvFile(string)", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.FromCsvFile(string)", span="247-247"];
m33_86 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvFile(string)", file="FutureMarginModel.cs", label="!File.Exists(file)", span="249-249"];
m33_87 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvFile(string)", file="FutureMarginModel.cs", label="Log.Trace(''Unable to locate future margin requirements file. Defaulting to zero margin for this symbol. File: {0}'' , file)", span="251-251"];
m33_90 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvFile(string)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.FromCsvFile(string)", span="247-247"];
m33_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="FutureMarginModel.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", span="77-77"];
m33_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="FutureMarginModel.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="38-38"];
m33_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", span="50-50"];
m33_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="_enumerator == null", span="52-52"];
m33_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="_enumerator = _enumeratorFactory.Invoke()", span="54-54"];
m33_26 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="var marginReq = GetCurrentMarginRequirements(symbol, date)", span="98-98"];
m33_98 [cluster="Unk.OrderBy", file="FutureMarginModel.cs", label="Entry Unk.OrderBy", span=""];
m33_83 [cluster="System.IO.Path.Combine(string, string, string, string)", file="FutureMarginModel.cs", label="Entry System.IO.Path.Combine(string, string, string, string)", span="0-0"];
m33_52 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="169-169"];
m33_53 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="return GetMaintenanceMarginRequirement(security, security.Holdings.HoldingsCost);", span="171-171"];
m33_54 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="169-169"];
m33_81 [cluster="System.Enum.ToLower()", file="FutureMarginModel.cs", label="Entry System.Enum.ToLower()", span="908-908"];
m33_103 [cluster="string.StartsWith(string)", file="FutureMarginModel.cs", label="Entry string.StartsWith(string)", span="0-0"];
m33_82 [cluster="string.ToLower()", file="FutureMarginModel.cs", label="Entry string.ToLower()", span="0-0"];
m33_123 [cluster="decimal.TryParse(string, out decimal)", file="FutureMarginModel.cs", label="Entry decimal.TryParse(string, out decimal)", span="0-0"];
m33_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="var moveNext = _enumerator.MoveNext()", span="57-57"];
m33_66 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="var marginReq = GetCurrentMarginRequirements(symbol, date)", span="202-202"];
m33_64 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="var symbol = security.Symbol", span="200-200"];
m33_65 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="var date = security.GetLastData().Time.Date", span="201-201"];
m33_67 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="return marginReq.MaintenanceOvernight / holdingValue;", span="204-204"];
m33_62 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="security == null ||\r\n                security.GetLastData() == null ||\r\n                holdingValue == 0m", span="195-197"];
m33_63 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="return 0m;", span="198-198"];
m33_68 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", span="193-193"];
m33_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="FutureMarginModel.cs", label="_enumerator != null", span="79-79"];
m33_96 [cluster="Unk.Skip", file="FutureMarginModel.cs", label="Entry Unk.Skip", span=""];
m33_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="FutureMarginModel.cs", label="_enumerator = null", span="66-66"];
m33_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="FutureMarginModel.cs", label="_enumerator.Reset()", span="81-81"];
m33_57 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", color=green, community=0, file="FutureMarginModel.cs", label="var symbol = security.Symbol", prediction=55, span="183-183"];
m33_55 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="security == null ||\r\n                security.GetLastData() == null ||\r\n                holdingValue == 0m", span="178-180"];
m33_58 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="var date = security.GetLastData().Time.Date", span="184-184"];
m33_59 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", color=green, community=0, file="FutureMarginModel.cs", label="var marginReq = GetCurrentMarginRequirements(symbol, date)", prediction=56, span="185-185"];
m33_60 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="return marginReq.InitialOvernight / holdingValue;", span="187-187"];
m33_56 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="return 0m;", span="181-181"];
m33_61 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", span="176-176"];
m33_92 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="FutureMarginModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m33_91 [cluster="System.IO.File.Exists(string)", file="FutureMarginModel.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m33_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="FutureMarginModel.cs", label="_enumerator != null", span="114-114"];
m33_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="FutureMarginModel.cs", label="_enumerator.Dispose()", span="116-116"];
m33_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="FutureMarginModel.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", span="112-112"];
m33_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="FutureMarginModel.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", span="112-112"];
m33_27 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", span=""];
m33_28 [cluster="QuantConnect.Securities.FutureMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="91-91"];
m33_84 [cluster="System.IO.Path.Combine(string, string)", file="FutureMarginModel.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m33_17 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="FutureMarginModel.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m33_31 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="110-110"];
m33_40 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="return\r\n                            // portion of margin to close the existing position\r\n                            GetMaintenanceMargin(security) +\r\n                            // portion of margin to open the new position\r\n                            security.Holdings.AbsoluteHoldingsValue * GetInitialMarginRequirement(security, security.Holdings.HoldingsValue) +\r\n                            portfolio.MarginRemaining;", span="129-134"];
m33_44 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="return\r\n                            // portion of margin to close the existing position\r\n                            GetMaintenanceMargin(security) +\r\n                            // portion of margin to open the new position\r\n                            security.Holdings.AbsoluteHoldingsValue * GetInitialMarginRequirement(security, security.Holdings.HoldingsValue) +\r\n                            portfolio.MarginRemaining;", span="142-147"];
m33_39 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="OrderDirection.Sell", span="128-128"];
m33_43 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="OrderDirection.Buy", span="141-141"];
m33_32 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="var holdings = security.Holdings", span="112-112"];
m33_33 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="direction == OrderDirection.Hold", span="114-114"];
m33_34 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="return portfolio.MarginRemaining;", span="116-116"];
m33_36 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label=direction, span="123-123"];
m33_38 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="return portfolio.MarginRemaining;", span="126-126"];
m33_42 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label=direction, span="139-139"];
m33_46 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="return portfolio.MarginRemaining;", span="150-150"];
m33_47 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="return portfolio.MarginRemaining;", span="155-155"];
m33_35 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="holdings.IsLong", span="121-121"];
m33_41 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="holdings.IsShort", span="137-137"];
m33_37 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="OrderDirection.Buy", span="125-125"];
m33_45 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="OrderDirection.Sell", span="149-149"];
m33_48 [cluster="QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="110-110"];
m33_30 [cluster="QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", span="208-208"];
m33_69 [cluster="QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", file="FutureMarginModel.cs", label="_marginRequirementsHistory == null", span="210-210"];
m33_70 [cluster="QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", file="FutureMarginModel.cs", label="_marginRequirementsHistory = LoadMarginRequirementsHistory(symbol)", span="212-212"];
m33_72 [cluster="QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", file="FutureMarginModel.cs", label="_marginCurrentIndex + 1 < _marginRequirementsHistory.Length &&\r\n                _marginRequirementsHistory[_marginCurrentIndex + 1].Date <= date", span="216-217"];
m33_71 [cluster="QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", file="FutureMarginModel.cs", label="_marginCurrentIndex = 0", span="213-213"];
m33_73 [cluster="QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", file="FutureMarginModel.cs", label="_marginCurrentIndex++", span="219-219"];
m33_74 [cluster="QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", file="FutureMarginModel.cs", label="return _marginRequirementsHistory[_marginCurrentIndex];", span="222-222"];
m33_75 [cluster="QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.GetCurrentMarginRequirements(QuantConnect.Symbol, System.DateTime)", span="208-208"];
m33_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="FutureMarginModel.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="38-38"];
m33_119 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="return new MarginRequirementsEntry()\r\n                    {\r\n                        Date = date,\r\n                        InitialOvernight = initial,\r\n                        MaintenanceOvernight = maintenance\r\n                    };", span="300-305"];
m33_113 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="var initial = 0m", span="286-286"];
m33_116 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="var maintenance = 0m", span="293-293"];
m33_112 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="Log.Trace(''Couldn't parse date/time while reading future margin requirement file. Date {0}. Line: {1}'', line[0], csvLine)", span="283-283"];
m33_111 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="!DateTime.TryParseExact(line[0], DateFormat.EightCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="281-281"];
m33_114 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="!decimal.TryParse(line[1], out initial)", span="288-288"];
m33_115 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="Log.Trace(''Couldn't parse Initial margin requirements while reading future margin requirement file. Date {0}. Line: {1}'', line[1], csvLine)", span="290-290"];
m33_117 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="!decimal.TryParse(line[2], out maintenance)", span="295-295"];
m33_108 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", span="276-276"];
m33_109 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="var line = csvLine.Split(',')", span="278-278"];
m33_110 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="var date = DateTime.MinValue", span="279-279"];
m33_118 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="Log.Trace(''Couldn't parse Maintenance margin requirements while reading future margin requirement file. Date {0}. Line: {1}'', line[2], csvLine)", span="297-297"];
m33_120 [cluster="QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.FromCsvLine(string)", span="276-276"];
m33_94 [cluster="System.IO.File.ReadLines(string)", file="FutureMarginModel.cs", label="Entry System.IO.File.ReadLines(string)", span="0-0"];
m33_97 [cluster="Unk.Select", file="FutureMarginModel.cs", label="Entry Unk.Select", span=""];
m33_76 [cluster="QuantConnect.Securities.FutureMarginModel.LoadMarginRequirementsHistory(QuantConnect.Symbol)", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.LoadMarginRequirementsHistory(QuantConnect.Symbol)", span="230-230"];
m33_79 [cluster="QuantConnect.Securities.FutureMarginModel.LoadMarginRequirementsHistory(QuantConnect.Symbol)", file="FutureMarginModel.cs", label="return FromCsvFile(Path.Combine(directory, symbol.ID.Symbol + ''.csv''));", span="238-238"];
m33_77 [cluster="QuantConnect.Securities.FutureMarginModel.LoadMarginRequirementsHistory(QuantConnect.Symbol)", file="FutureMarginModel.cs", label=DataFolderSymbolLock, span="232-232"];
m33_78 [cluster="QuantConnect.Securities.FutureMarginModel.LoadMarginRequirementsHistory(QuantConnect.Symbol)", file="FutureMarginModel.cs", label="var directory = Path.Combine(Globals.DataFolder,\r\n                                            symbol.SecurityType.ToLower(),\r\n                                            symbol.ID.Market.ToLower(),\r\n                                            ''margins'')", span="234-237"];
m33_80 [cluster="QuantConnect.Securities.FutureMarginModel.LoadMarginRequirementsHistory(QuantConnect.Symbol)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.LoadMarginRequirementsHistory(QuantConnect.Symbol)", span="230-230"];
m33_49 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="Entry QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="161-161"];
m33_50 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="return GetInitialMarginRequirement(security, security.Holdings.HoldingsCost);", span="163-163"];
m33_51 [cluster="QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="FutureMarginModel.cs", label="Exit QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="161-161"];
m33_124 [file="FutureMarginModel.cs", label="QuantConnect.Securities.FutureMarginModel", span=""];
m34_62 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label="Entry QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", span="196-196"];
m34_78 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label="var timeout = DateTime.UtcNow + (_liveMode ? new TimeSpan(0, 0, 0, 0, 50) : new TimeSpan(0, 0, 30))", span="201-201"];
m34_79 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label=_liveMode, span="203-203"];
m34_81 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label="!AllBridgesHaveData() && DateTime.UtcNow < timeout", span="210-210"];
m34_83 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label="dataStreamFrontier > _feed.LoadedDataFrontier && (!_feed.EndOfBridges && !_feed.LoadingComplete) && DateTime.UtcNow < timeout", span="219-219"];
m34_80 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label="Thread.Sleep(1)", span="206-206"];
m34_82 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label="Thread.Sleep(1)", span="212-212"];
m34_84 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label="Thread.Sleep(1)", span="221-221"];
m34_85 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", file="FuturesMarginModelTests.cs", label="Exit QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(System.DateTime)", span="196-196"];
m34_64 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="FuturesMarginModelTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m34_4 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="Entry QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", span="60-60"];
m34_67 [cluster="System.Collections.Generic.List<T>.List()", file="FuturesMarginModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m34_58 [cluster="Unk.ToArray", file="FuturesMarginModelTests.cs", label="Entry Unk.ToArray", span=""];
m34_70 [cluster="System.DateTime.DateTime(long)", file="FuturesMarginModelTests.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m34_71 [cluster="Unk.Min", file="FuturesMarginModelTests.cs", label="Entry Unk.Min", span=""];
m34_74 [cluster="lambda expression", file="FuturesMarginModelTests.cs", label="Entry lambda expression", span="68-68"];
m34_75 [cluster="lambda expression", file="FuturesMarginModelTests.cs", label="x.Resolution.ToTimeSpan()", span="68-68"];
m34_76 [cluster="lambda expression", file="FuturesMarginModelTests.cs", label="Exit lambda expression", span="68-68"];
m34_69 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="FuturesMarginModelTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m34_0 [cluster="QuantConnect.Lean.Engine.DataStream.DataStream(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, bool)", file="FuturesMarginModelTests.cs", label="Entry QuantConnect.Lean.Engine.DataStream.DataStream(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, bool)", span="48-48"];
m34_1 [cluster="QuantConnect.Lean.Engine.DataStream.DataStream(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, bool)", file="FuturesMarginModelTests.cs", label="_feed = feed", span="50-50"];
m34_2 [cluster="QuantConnect.Lean.Engine.DataStream.DataStream(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, bool)", file="FuturesMarginModelTests.cs", label="_liveMode = liveMode", span="51-51"];
m34_3 [cluster="QuantConnect.Lean.Engine.DataStream.DataStream(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, bool)", file="FuturesMarginModelTests.cs", label="Exit QuantConnect.Lean.Engine.DataStream.DataStream(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, bool)", span="48-48"];
m34_18 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", color=green, community=0, file="FuturesMarginModelTests.cs", label="WaitForDataOrEndOfBridges(frontier)", prediction=57, span="86-86"];
m34_8 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="var frontier = frontierOrigin", span="66-66"];
m34_17 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="var newData = new Dictionary<int, List<BaseData>>()", span="83-83"];
m34_19 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="var i = 0", span="88-88"];
m34_13 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", color=green, community=0, file="FuturesMarginModelTests.cs", label=_liveMode, prediction=57, span="73-73"];
m34_11 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="_feed.Bridge.Length != _subscriptions", span="70-70"];
m34_14 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="_feed.PurgeData()", span="75-75"];
m34_15 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="!_feed.EndOfBridges", span="79-79"];
m34_5 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="_subscriptions = _feed.Subscriptions.Count", span="63-63"];
m34_6 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="AlgorithmTime = frontierOrigin", span="64-64"];
m34_7 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="long algorithmTime = AlgorithmTime.Ticks", span="65-65"];
m34_10 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="var periods = _feed.Subscriptions.Select(x => x.Resolution.ToTimeSpan()).ToArray()", span="68-68"];
m34_20 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="i < _subscriptions", span="88-88"];
m34_21 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="!_feed.Bridge[i].IsEmpty", span="92-92"];
m34_23 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="!_feed.Bridge[i].TryPeek(out result)", span="96-96"];
m34_32 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="_feed.Bridge[i].TryDequeue(out dataPoints)", span="125-125"];
m34_46 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="AlgorithmTime = new DateTime(algorithmTime)", span="165-165"];
m34_50 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="_feed.EndOfBridges", span="175-175"];
m34_51 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="_liveMode && DateTime.Now > nextEmitTime", span="182-182"];
m34_52 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="AlgorithmTime = DateTime.Now.RoundDown(periods.Min())", span="184-184"];
m34_9 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="var nextEmitTime = DateTime.MinValue", span="67-67"];
m34_25 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="result.Count > 0 && endTime > frontier", span="103-103"];
m34_16 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="long earlyBirdTicks = 0", span="82-82"];
m34_39 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="!newData.TryGetValue(i, out dp)", span="148-148"];
m34_41 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="newData[i] = dp", span="151-151"];
m34_45 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="newData.Count > 0", span="163-163"];
m34_47 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="yield return newData;", span="166-166"];
m34_37 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="point.Time = point.Time.RoundDown(periods[i])", span="143-143"];
m34_44 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="i++", span="88-88"];
m34_12 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="Thread.Sleep(100)", span="70-70"];
m34_54 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="yield return new Dictionary<int, List<BaseData>>();", span="186-186"];
m34_55 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="Log.Trace(''DataStream.GetData(): All Streams Completed.'')", span="189-189"];
m34_34 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="algorithmTime < point.EndTime.Ticks", span="131-131"];
m34_43 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="Log.Error(''DataStream.GetData(): Failed to dequeue bridge item'')", span="158-158"];
m34_42 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="dp.AddRange(dataPoints)", span="153-153"];
m34_22 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="List<BaseData> result", span="95-95"];
m34_24 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="DateTime endTime = result[0].EndTime", span="102-102"];
m34_28 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="result.Count > 0", span="113-113"];
m34_31 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="List<BaseData> dataPoints", span="124-124"];
m34_33 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label=dataPoints, span="129-129"];
m34_35 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="algorithmTime = point.EndTime.Ticks", span="139-139"];
m34_48 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="earlyBirdTicks > 0", span="170-170"];
m34_49 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="frontier = new DateTime(earlyBirdTicks)", span="173-173"];
m34_53 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="nextEmitTime = DateTime.Now + TimeSpan.FromSeconds(1)", span="185-185"];
m34_26 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="earlyBirdTicks == 0 || earlyBirdTicks > endTime.Ticks", span="107-107"];
m34_29 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="earlyBirdTicks == 0 || earlyBirdTicks > endTime.Ticks", span="117-117"];
m34_38 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="List<BaseData> dp", span="147-147"];
m34_40 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="dp = new List<BaseData>()", span="150-150"];
m34_36 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="point.IsFillForward", span="141-141"];
m34_27 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="earlyBirdTicks = endTime.Ticks", span="109-109"];
m34_30 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="earlyBirdTicks = endTime.Ticks", span="119-119"];
m34_56 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", file="FuturesMarginModelTests.cs", label="Exit QuantConnect.Lean.Engine.DataStream.GetData(System.DateTime)", span="60-60"];
m34_88 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="Entry QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", span="231-231"];
m34_90 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="i < _subscriptions", span="234-234"];
m34_91 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="_feed.EndOfBridge[i]", span="236-236"];
m34_92 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="_feed.Bridge[i].IsEmpty", span="237-237"];
m34_89 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="var i = 0", span="234-234"];
m34_94 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="i++", span="234-234"];
m34_95 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="return true;", span="242-242"];
m34_93 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="return false;", span="239-239"];
m34_96 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", file="FuturesMarginModelTests.cs", label="Exit QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData()", span="231-231"];
m34_65 [cluster="Unk.RoundDown", file="FuturesMarginModelTests.cs", label="Entry Unk.RoundDown", span=""];
m34_59 [cluster="System.Threading.Thread.Sleep(int)", file="FuturesMarginModelTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m34_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="FuturesMarginModelTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="124-124"];
m34_63 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryPeek(out T)", file="FuturesMarginModelTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryPeek(out T)", span="0-0"];
m34_87 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="FuturesMarginModelTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m34_61 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FuturesMarginModelTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m34_86 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="FuturesMarginModelTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m34_73 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FuturesMarginModelTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m34_77 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="FuturesMarginModelTests.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="389-389"];
m34_57 [cluster="Unk.Select", file="FuturesMarginModelTests.cs", label="Entry Unk.Select", span=""];
m34_72 [cluster="System.TimeSpan.FromSeconds(double)", file="FuturesMarginModelTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m34_68 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="FuturesMarginModelTests.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m34_97 [file="FuturesMarginModelTests.cs", label="QuantConnect.Lean.Engine.DataStream", span=""];
m35_179 [cluster="System.Math.Abs(decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m35_250 [cluster="string.Contains(string)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Contains(string)", span="0-0"];
m35_109 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.Clear()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.Clear()", span="70-70"];
m35_173 [cluster="Unk.Where", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Where", span=""];
m35_180 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", span="78-78"];
m35_35 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m35_108 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.OrderBook(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.OrderBook(QuantConnect.Symbol)", span="62-62"];
m35_185 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m35_37 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="120-120"];
m35_38 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label=_streamLocked, span="126-126"];
m35_39 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="_messageBuffer.Enqueue(e)", span="128-128"];
m35_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnMessageImpl(sender, e)", span="137-137"];
m35_41 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="132-132"];
m35_40 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="129-129"];
m35_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(err)", span="134-134"];
m35_44 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="120-120"];
m35_261 [cluster="string.Substring(int, int)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Substring(int, int)", span="0-0"];
m35_183 [cluster="OrderEvent.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry OrderEvent.cstr", span=""];
m35_252 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="550-550"];
m35_263 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="int delay = 36000000", span="553-553"];
m35_265 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var listener = Task.Factory.StartNew(() =>\r\n            {\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''));\r\n                while (true)\r\n                {\r\n                    var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''));\r\n\r\n                    lock (_tickLocker)\r\n                    {\r\n                        var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        };\r\n                        Ticks.Add(latest);\r\n                    }\r\n\r\n                    Thread.Sleep(delay);\r\n                    if (token.IsCancellationRequested) break;\r\n                }\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''));\r\n            }, token, TaskCreationOptions.LongRunning, TaskScheduler.Default)", span="555-577"];
m35_264 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var token = _canceller.Token", span="554-554"];
m35_266 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="550-550"];
m35_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", span="449-449"];
m35_224 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="GDAXBrokerage.Messaging.cs", label=_tickLocker, span="451-451"];
m35_225 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="GDAXBrokerage.Messaging.cs", label="Ticks.Add(new Tick\r\n                {\r\n                    AskPrice = askPrice,\r\n                    BidPrice = bidPrice,\r\n                    Value = (askPrice + bidPrice) / 2m,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Quote,\r\n                    AskSize = askSize,\r\n                    BidSize = bidSize\r\n                })", span="453-463"];
m35_226 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", span="449-449"];
m35_254 [cluster="Unk.ToArray", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ToArray", span=""];
m35_181 [cluster="Unk.TryGetValue", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.TryGetValue", span=""];
m35_81 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="379-379"];
m35_190 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order completed with data {data}'')", span="381-381"];
m35_191 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var message = JsonConvert.DeserializeObject<Messages.Done>(data, JsonSettings)", span="382-382"];
m35_192 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="message.Reason == ''canceled'' || message.RemainingSize > 0", span="385-385"];
m35_193 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order cancelled. Remaining {message.RemainingSize}'')", span="387-387"];
m35_195 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var cached = CachedOrderIDs.Where(o => o.Value.BrokerId.Contains(message.OrderId)).ToList()", span="392-392"];
m35_197 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order could not locate order in cache with order id {message.OrderId}'')", span="396-396"];
m35_201 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1,\r\n                $''GDAXWebsocketsBrokerage.OrderDone: Encountered done message prior to match filling order brokerId: {message.OrderId} orderId: {orderId}''))", span="403-404"];
m35_203 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                orderId, ConvertProductId(message.ProductId), message.Time, OrderStatus.Filled,\r\n                message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy,\r\n                message.Price, message.Side == ''sell'' ? -split.TotalQuantity() : split.TotalQuantity(),\r\n                GetFee(order), ''GDAX Fill Event''\r\n            )", span="409-415"];
m35_194 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="return;", span="388-388"];
m35_196 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="cached.Count == 0 || cached[0].Value.Status == OrderStatus.Filled", span="394-394"];
m35_199 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var orderId = cached[0].Key", span="400-400"];
m35_200 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var order = cached[0].Value", span="401-401"];
m35_198 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="return;", span="397-397"];
m35_202 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var split = FillSplit[orderId]", span="406-406"];
m35_205 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="CachedOrderIDs.TryRemove(orderId, out outOrder)", span="418-418"];
m35_204 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Order outOrder", span="417-417"];
m35_206 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="OnOrderEvent(orderEvent)", span="420-420"];
m35_207 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="379-379"];
m35_268 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="555-577"];
m35_10 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="80-84"];
m35_11 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="var tickers = new[] {''LTCUSD'', ''LTCEUR'', ''LTCBTC'', ''BTCUSD'', ''BTCEUR'', ''BTCGBP'', ''ETHBTC'', ''ETHUSD'', ''ETHEUR''}", span="82-82"];
m35_12 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Subscribe(tickers.Select(ticker => Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)))", span="83-83"];
m35_13 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="80-84"];
m35_16 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="83-83"];
m35_17 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)", span="83-83"];
m35_18 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="83-83"];
m35_187 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId)", span="311-311"];
m35_186 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="311-311"];
m35_188 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="311-311"];
m35_209 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="o.Value.BrokerId.Contains(message.OrderId)", span="392-392"];
m35_208 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="392-392"];
m35_210 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="392-392"];
m35_258 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="512-512"];
m35_259 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)", span="512-512"];
m35_260 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="512-512"];
m35_269 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''))", span="557-557"];
m35_271 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''))", span="560-560"];
m35_273 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        }", span="564-569"];
m35_277 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''))", span="576-576"];
m35_275 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Thread.Sleep(delay)", span="573-573"];
m35_276 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="token.IsCancellationRequested", span="574-574"];
m35_270 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label=true, span="558-558"];
m35_272 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label=_tickLocker, span="562-562"];
m35_274 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Ticks.Add(latest)", span="570-570"];
m35_278 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="555-577"];
m35_211 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="428-428"];
m35_212 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var req = new RestRequest($''/products/{ConvertSymbol(symbol)}/ticker'', Method.GET)", span="430-430"];
m35_217 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="return new Tick(tick.Time, symbol, tick.Bid, tick.Ask) { Quantity = tick.Volume };", span="438-438"];
m35_213 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var response = RestClient.Execute(req)", span="431-431"];
m35_214 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="432-432"];
m35_215 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="throw new Exception($''GDAXBrokerage.GetTick: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="434-434"];
m35_216 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var tick = JsonConvert.DeserializeObject<Messages.Tick>(response.Content)", span="437-437"];
m35_218 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="428-428"];
m35_78 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m35_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="92-92"];
m35_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.Messaging.cs", label="Log.Trace(''GDAXBrokerage.Messaging.LockStream(): Locking Stream'')", span="94-94"];
m35_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.Messaging.cs", label="_streamLocked = true", span="95-95"];
m35_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="92-92"];
m35_77 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", span="254-254"];
m35_118 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="var message = JsonConvert.DeserializeObject<Messages.L2Update>(data)", span="258-258"];
m35_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(e, ''Data: '' + data)", span="296-296"];
m35_119 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="var symbol = ConvertProductId(message.ProductId)", span="260-260"];
m35_121 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="message.Changes", span="264-264"];
m35_120 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="var orderBook = _orderBooks[symbol]", span="262-262"];
m35_127 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.RemoveBidRow(price)", span="273-273"];
m35_128 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.UpdateBidRow(price, size)", span="277-277"];
m35_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.RemoveAskRow(price)", span="284-284"];
m35_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.UpdateAskRow(price, size)", span="288-288"];
m35_122 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="var side = row[0]", span="266-266"];
m35_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="294-294"];
m35_123 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="var price = Convert.ToDecimal(row[1], CultureInfo.InvariantCulture)", span="267-267"];
m35_124 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="var size = decimal.Parse(row[2], NumberStyles.Float, CultureInfo.InvariantCulture)", span="268-268"];
m35_125 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="side == ''buy''", span="269-269"];
m35_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="side == ''sell''", span="280-280"];
m35_126 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="size == 0", span="271-271"];
m35_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="size == 0", span="282-282"];
m35_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="throw;", span="297-297"];
m35_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", span="254-254"];
m35_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="301-301"];
m35_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var message = JsonConvert.DeserializeObject<Messages.Matched>(data, JsonSettings)", span="303-303"];
m35_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace($''GDAXBrokerage.OrderMatch(): Match: {message.ProductId} {data}'')", span="321-321"];
m35_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label=_isDataQueueHandler, span="305-305"];
m35_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="EmitTradeTick(message)", span="307-307"];
m35_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var cached = CachedOrderIDs\r\n                .Where(o => o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId))\r\n                .ToList()", span="310-312"];
m35_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var symbol = ConvertProductId(message.ProductId)", span="314-314"];
m35_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="split.Add(message)", span="331-331"];
m35_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var status = Math.Abs(message.Size) == Math.Abs(order.Quantity) || Math.Abs(split.OrderQuantity) == Math.Abs(split.TotalQuantity())\r\n                ? OrderStatus.Filled : OrderStatus.PartiallyFilled", span="334-335"];
m35_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="order.BrokerId[0] == message.TakerOrderId", span="339-339"];
m35_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Buy : OrderDirection.Sell", span="341-341"];
m35_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy", span="345-345"];
m35_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var orderFee = totalOrderFee * Math.Abs(message.Size) / Math.Abs(order.Quantity)", span="356-356"];
m35_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                orderId, symbol, message.Time, status,\r\n                direction,\r\n                message.Price, direction == OrderDirection.Sell ? -message.Size : message.Size,\r\n                orderFee, $''GDAX Match Event {direction}''\r\n            )", span="358-364"];
m35_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="cached.Count == 0", span="316-316"];
m35_148 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var orderId = cached[0].Key", span="322-322"];
m35_149 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var order = cached[0].Value", span="323-323"];
m35_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="return;", span="318-318"];
m35_150 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="!FillSplit.ContainsKey(orderId)", span="325-325"];
m35_151 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="FillSplit[orderId] = new GDAXFill(order)", span="327-327"];
m35_152 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var split = FillSplit[orderId]", span="330-330"];
m35_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="!_orderFees.TryGetValue(orderId, out totalOrderFee)", span="349-349"];
m35_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="_orderFees[orderId] = totalOrderFee", span="352-352"];
m35_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="CachedOrderIDs.TryRemove(orderId, out outOrder)", span="370-370"];
m35_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="_orderFees.TryRemove(orderId, out outOrderFee)", span="373-373"];
m35_161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="totalOrderFee = GetFee(order)", span="351-351"];
m35_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="OrderDirection direction", span="337-337"];
m35_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="decimal totalOrderFee", span="348-348"];
m35_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="orderEvent.Status == OrderStatus.Filled", span="367-367"];
m35_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="OnOrderEvent(orderEvent)", span="376-376"];
m35_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="Order outOrder", span="369-369"];
m35_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="decimal outOrderFee", span="372-372"];
m35_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="301-301"];
m35_176 [cluster="GDAXFill.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry GDAXFill.cstr", span=""];
m35_9 [cluster="RestClient.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry RestClient.cstr", span=""];
m35_235 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="490-490"];
m35_236 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label=symbols, span="492-492"];
m35_237 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="item.Value.Contains(''UNIVERSE'') ||\r\n                    item.SecurityType != SecurityType.Forex && item.SecurityType != SecurityType.Crypto", span="494-495"];
m35_241 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="var products = ChannelList.Select(s => s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)).ToArray()", span="512-512"];
m35_238 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="!IsSubscribeAvailable(item)", span="500-500"];
m35_239 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="PollTick(item)", span="504-504"];
m35_240 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="this.ChannelList[item.Value] = new Channel { Name = item.Value, Symbol = item.Value }", span="508-508"];
m35_242 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="var payload = new\r\n            {\r\n                type = ''subscribe'',\r\n                product_ids = products,\r\n                channels = ChannelNames\r\n            }", span="514-519"];
m35_243 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="payload.product_ids.Length == 0", span="521-521"];
m35_245 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="var token = GetAuthenticationToken(JsonConvert.SerializeObject(payload), ''GET'', ''/users/self/verify'')", span="526-526"];
m35_246 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="var json = JsonConvert.SerializeObject(new\r\n            {\r\n                type = payload.type,\r\n                channels = payload.channels,\r\n                product_ids = payload.product_ids,\r\n                SignHeader = token.Signature,\r\n                KeyHeader = ApiKey,\r\n                PassHeader = _passPhrase,\r\n                TimeHeader = token.Timestamp\r\n            })", span="528-537"];
m35_244 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="return;", span="523-523"];
m35_247 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="WebSocket.Send(json)", span="539-539"];
m35_248 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.Subscribe: Sent subscribe.''))", span="542-542"];
m35_249 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="490-490"];
m35_256 [cluster="Unk.GetAuthenticationToken", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m35_137 [cluster="Unk.ToDecimal", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ToDecimal", span=""];
m35_267 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", span="0-0"];
m35_295 [cluster="Unk.SelectToken", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.SelectToken", span=""];
m35_219 [cluster="RestRequest.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry RestRequest.cstr", span=""];
m35_222 [cluster="System.Exception.Exception(string)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m35_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="145-145"];
m35_47 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="var raw = JsonConvert.DeserializeObject<Messages.BaseMessage>(e.Message, JsonSettings)", span="149-149"];
m35_52 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnSnapshot(e.Message)", span="159-159"];
m35_55 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnL2Update(e.Message)", span="164-164"];
m35_58 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Log.Error($''GDAXBrokerage.OnMessage.error(): Data: {Environment.NewLine}{e.Message}'')", span="169-169"];
m35_59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="var error = JsonConvert.DeserializeObject<Messages.Error>(e.Message, JsonSettings)", span="170-170"];
m35_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OrderDone(e.Message)", span="176-176"];
m35_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OrderMatch(e.Message)", span="181-181"];
m35_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, (''GDAXWebsocketsBrokerage.OnMessage: Unexpected message format: '' + e.Message)))", span="190-190"];
m35_72 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''Parsing wss message failed. Data: {e.Message} Exception: {exception}''))", span="194-194"];
m35_48 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="151-151"];
m35_49 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''heartbeat''", span="153-153"];
m35_51 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''snapshot''", span="157-157"];
m35_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''l2update''", span="162-162"];
m35_57 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''error''", span="167-167"];
m35_62 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''done''", span="174-174"];
m35_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''match''", span="179-179"];
m35_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''open'' || raw.Type == ''change'' || raw.Type == ''received'' || raw.Type == ''subscriptions'' || raw.Type == ''last_match''", span="184-184"];
m35_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="155-155"];
m35_53 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="160-160"];
m35_56 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="165-165"];
m35_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''GDAXBrokerage.OnMessage: {error.Message} {error.Reason}''))", span="171-171"];
m35_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="172-172"];
m35_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="177-177"];
m35_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="182-182"];
m35_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="187-187"];
m35_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="192-192"];
m35_73 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="throw;", span="195-195"];
m35_74 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="145-145"];
m35_175 [cluster="Unk.ContainsKey", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ContainsKey", span=""];
m35_281 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="580-580"];
m35_283 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="var response = RateClient.Execute(new RestSharp.RestRequest(Method.GET))", span="582-582"];
m35_288 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="var rate = raw.SelectToken(''rates.'' + currency).Value<decimal>()", span="590-590"];
m35_284 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="583-583"];
m35_285 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: error returned from conversion rate service.''))", span="585-585"];
m35_287 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="var raw = JsonConvert.DeserializeObject<JObject>(response.Content)", span="589-589"];
m35_290 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: zero value returned from conversion rate service.''))", span="593-593"];
m35_286 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="return 0;", span="586-586"];
m35_289 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="rate == 0", span="591-591"];
m35_292 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="return 1m / rate;", span="597-597"];
m35_291 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="return 0;", span="594-594"];
m35_293 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="580-580"];
m35_184 [cluster="Unk.TryRemove", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.TryRemove", span=""];
m35_174 [cluster="Unk.ToList", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ToList", span=""];
m35_19 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m35_298 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m35_75 [cluster="Unk.>", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.>", span=""];
m35_178 [cluster="Unk.Abs", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Abs", span=""];
m35_107 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m35_255 [cluster="Unk.SerializeObject", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.SerializeObject", span=""];
m35_177 [cluster="Unk.Add", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Add", span=""];
m35_8 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m35_112 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.UpdateAskRow(decimal, decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.UpdateAskRow(decimal, decimal)", span="110-110"];
m35_280 [cluster="string.Replace(string, string)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Replace(string, string)", span="0-0"];
m35_76 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", span="199-199"];
m35_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="var message = JsonConvert.DeserializeObject<Messages.Snapshot>(data)", span="203-203"];
m35_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="var symbol = ConvertProductId(message.ProductId)", span="205-205"];
m35_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="message.Bids", span="219-219"];
m35_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="message.Asks", span="225-225"];
m35_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="OrderBook orderBook", span="207-207"];
m35_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="!_orderBooks.TryGetValue(symbol, out orderBook)", span="208-208"];
m35_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook = new OrderBook(symbol)", span="210-210"];
m35_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="_orderBooks[symbol] = orderBook", span="211-211"];
m35_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="EmitQuoteTick(symbol, orderBook.BestBidPrice, orderBook.BestBidSize, orderBook.BestAskPrice, orderBook.BestAskSize)", span="236-236"];
m35_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.BestBidAskUpdated -= OnBestBidAskUpdated", span="215-215"];
m35_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.Clear()", span="216-216"];
m35_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.UpdateBidRow(price, size)", span="223-223"];
m35_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.UpdateAskRow(price, size)", span="229-229"];
m35_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="orderBook.BestBidAskUpdated += OnBestBidAskUpdated", span="232-232"];
m35_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="var price = decimal.Parse(row[0], NumberStyles.Float, CultureInfo.InvariantCulture)", span="221-221"];
m35_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="var size = decimal.Parse(row[1], NumberStyles.Float, CultureInfo.InvariantCulture)", span="222-222"];
m35_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="var price = decimal.Parse(row[0], NumberStyles.Float, CultureInfo.InvariantCulture)", span="227-227"];
m35_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="var size = decimal.Parse(row[1], NumberStyles.Float, CultureInfo.InvariantCulture)", span="228-228"];
m35_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label=_isDataQueueHandler, span="234-234"];
m35_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="239-239"];
m35_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(e)", span="241-241"];
m35_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="throw;", span="242-242"];
m35_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", span="199-199"];
m35_80 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m35_282 [cluster="System.Threading.Thread.Sleep(int)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m35_262 [cluster="string.Substring(int)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Substring(int)", span="0-0"];
m35_257 [cluster="Unk.Send", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Send", span=""];
m35_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m35_221 [cluster="Unk.Execute", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Execute", span=""];
m35_253 [cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", span="313-313"];
m35_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="101-101"];
m35_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="Log.Trace(''GDAXBrokerage.Messaging.UnlockStream(): Processing Backlog...'')", span="103-103"];
m35_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="_messageBuffer.Any()", span="104-104"];
m35_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="WebSocketMessage e", span="106-106"];
m35_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="Log.Trace(''GDAXBrokerage.Messaging.UnlockStream(): Stream Unlocked.'')", span="110-110"];
m35_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="_messageBuffer.TryDequeue(out e)", span="107-107"];
m35_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="OnMessageImpl(this, e)", span="108-108"];
m35_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="_streamLocked = false", span="112-112"];
m35_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="101-101"];
m35_111 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.UpdateBidRow(decimal, decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.UpdateBidRow(decimal, decimal)", span="89-89"];
m35_79 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m35_251 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="600-600"];
m35_296 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="return Regex.IsMatch(symbol.Value, SymbolMatching);", span="602-602"];
m35_297 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="600-600"];
m35_45 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m35_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m35_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="FillSplit = new ConcurrentDictionary<long, GDAXFill>()", span="75-75"];
m35_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="_passPhrase = passPhrase", span="76-76"];
m35_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="_algorithm = algorithm", span="77-77"];
m35_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="RateClient = new RestClient(''http://api.fixer.io/latest?base=usd'')", span="78-78"];
m35_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="WebSocket.Open += (sender, args) =>\r\n            {\r\n                var tickers = new[] {''LTCUSD'', ''LTCEUR'', ''LTCBTC'', ''BTCUSD'', ''BTCEUR'', ''BTCGBP'', ''ETHBTC'', ''ETHUSD'', ''ETHEUR''};\r\n                Subscribe(tickers.Select(ticker => Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)));\r\n            }", span="80-84"];
m35_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="_isDataQueueHandler = this is GDAXDataQueueHandler", span="86-86"];
m35_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m35_139 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.RemoveAskRow(decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.RemoveAskRow(decimal)", span="153-153"];
m35_220 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="127-127"];
m35_228 [cluster="System.Collections.Generic.List<T>.Add(T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m35_229 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", span="470-470"];
m35_230 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="GDAXBrokerage.Messaging.cs", label="var symbol = ConvertProductId(message.ProductId)", span="472-472"];
m35_232 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="GDAXBrokerage.Messaging.cs", label="Ticks.Add(new Tick\r\n                {\r\n                    Value = message.Price,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Trade,\r\n                    Quantity = message.Size\r\n                })", span="476-483"];
m35_231 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="GDAXBrokerage.Messaging.cs", label=_tickLocker, span="474-474"];
m35_233 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", span="470-470"];
m35_234 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", span="117-117"];
m35_299 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="608-608"];
m35_300 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="WebSocket.IsOpen", span="610-610"];
m35_301 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="WebSocket.Send(JsonConvert.SerializeObject(new {type = ''unsubscribe'', channels = ChannelNames}))", span="612-612"];
m35_302 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="608-608"];
m35_110 [cluster="Unk.Parse", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Parse", span=""];
m35_138 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.RemoveBidRow(decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.RemoveBidRow(decimal)", span="130-130"];
m35_189 [cluster="Unk.Contains", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Contains", span=""];
m35_294 [cluster="RestSharp.RestRequest.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry RestSharp.RestRequest.cstr", span=""];
m35_223 [cluster="Tick.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry Tick.cstr", span=""];
m35_182 [cluster="Unk.GetFee", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.GetFee", span=""];
m35_24 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m35_227 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m35_279 [cluster="string.ToString()", file="GDAXBrokerage.Messaging.cs", label="Entry string.ToString()", span="0-0"];
m35_14 [cluster="Unk.Select", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Select", span=""];
m35_172 [cluster="Unk.EmitTradeTick", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.EmitTradeTick", span=""];
m35_15 [cluster="Unk.Subscribe", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Subscribe", span=""];
m35_106 [cluster="Unk.ConvertProductId", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ConvertProductId", span=""];
m35_114 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", span="246-246"];
m35_115 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="GDAXBrokerage.Messaging.cs", label=_isDataQueueHandler, span="248-248"];
m35_116 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="GDAXBrokerage.Messaging.cs", label="EmitQuoteTick(e.Symbol, e.BestBidPrice, e.BestBidSize, e.BestAskPrice, e.BestAskSize)", span="250-250"];
m35_117 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", span="246-246"];
m35_303 [file="GDAXBrokerage.Messaging.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m35_304 [file="GDAXBrokerage.Messaging.cs", label=message, span=""];
m35_305 [file="GDAXBrokerage.Messaging.cs", label=message, span=""];
m35_306 [file="GDAXBrokerage.Messaging.cs", label="QuantConnect.Symbol", span=""];
m35_307 [file="GDAXBrokerage.Messaging.cs", label=delay, span=""];
m35_308 [file="GDAXBrokerage.Messaging.cs", label=token, span=""];
m36_5 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="77-77"];
m36_9 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var statusPingThread = new Thread(statusPing.Run)", span="84-84"];
m36_13 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Thread threadTransactions = null", span="92-92"];
m36_36 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.RuntimeError(errorMessage)", span="150-150"];
m36_35 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Error(''Engine.Run(): '' + errorMessage)", span="149-149"];
m36_206 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="399-399"];
m36_171 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m36_138 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91"];
m36_170 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m36_147 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="187-187"];
m36_181 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="62-62"];
m36_38 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label=Exception, span="154-154"];
m36_207 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="404-404"];
m36_218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="130-130"];
m36_148 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="GDAXBrokerageModel.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m36_137 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44"];
m36_220 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Entry lambda expression", span="291-291"];
m36_192 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress))", span="127-128"];
m36_210 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _algorithmHandlers.CommandQueue, isolator.CancellationToken)", span="224-224"];
m36_191 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="!algorithm.GetLocked() || algorithm.IsWarmingUp", span="125-125"];
m36_197 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="algorithm.BrokerageMessageHandler.Handle(message)", span="179-179"];
m36_198 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="algorithm.OnBrokerageMessage(message)", span="182-182"];
m36_201 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="algorithm.OnBrokerageDisconnect()", span="186-186"];
m36_203 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="algorithm.OnBrokerageReconnect()", span="189-189"];
m36_213 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="algorithm.RunTimeError = err", span="230-230"];
m36_214 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="algorithmManager.SetStatus(AlgorithmStatus.RuntimeError)", span="231-231"];
m36_190 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Entry lambda expression", span="122-130"];
m36_193 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Exit lambda expression", span="122-130"];
m36_209 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Entry lambda expression", span="216-236"];
m36_211 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label=Exception, span="226-226"];
m36_216 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="235-235"];
m36_199 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="message.Type", span="183-183"];
m36_196 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Entry lambda expression", span="177-192"];
m36_200 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="BrokerageMessageType.Disconnect", span="185-185"];
m36_204 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Exit lambda expression", span="177-192"];
m36_202 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="BrokerageMessageType.Reconnect", span="188-188"];
m36_212 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Log.Error(err)", span="229-229"];
m36_215 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="return;", span="232-232"];
m36_217 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Exit lambda expression", span="216-236"];
m36_221 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="x.Status.IsFill()", span="291-291"];
m36_222 [cluster="lambda expression", file="GDAXBrokerageModel.cs", label="Exit lambda expression", span="291-291"];
m36_143 [cluster="QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="35-35"];
m36_159 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m36_149 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m36_156 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="42-42"];
m36_154 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="426-426"];
m36_144 [cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IFileProvider, System.Action<int>)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IFileProvider, System.Action<int>)", span="44-44"];
m36_176 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m36_160 [cluster="QuantConnect.Isolator.Isolator()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m36_163 [cluster="System.Exception.Exception(string)", file="GDAXBrokerageModel.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m36_141 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89"];
m36_189 [cluster="System.IDisposable.Dispose()", file="GDAXBrokerageModel.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m36_145 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", span="60-60"];
m36_161 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="69-69"];
m36_37 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, errorMessage)", span="151-151"];
m36_155 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="52-52"];
m36_142 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IFileProvider)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IFileProvider)", span="53-53"];
m36_135 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="GDAXBrokerageModel.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m36_136 [cluster="System.Threading.Thread.Start()", file="GDAXBrokerageModel.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m36_151 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="235-235"];
m36_42 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.LatestPriceFillModel()", color=green, community=0, file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Orders.Fills.LatestPriceFillModel.LatestPriceFillModel()", prediction=59, span="27-27"];
m36_40 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="return new LatestPriceFillModel();", span="162-162"];
m36_41 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="160-160"];
m36_43 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="GDAXBrokerageModel.cs", label="QuantConnect.Brokerages.GDAXBrokerageModel", prediction=60, span=""];
m36_45 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="GDAXBrokerageModel.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", prediction=59, span="169-169"];
m36_21 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="120-120"];
m36_44 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="GDAXBrokerageModel.cs", label="var startTime = DateTime.Now", prediction=62, span="166-166"];
m36_46 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="GDAXBrokerageModel.cs", label="algorithm.SetLocked()", prediction=59, span="170-170"];
m36_47 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Transactions.Initialize(algorithm, brokerage, _algorithmHandlers.Results)", span="173-173"];
m36_29 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="order.Type != OrderType.Limit && order.Type != OrderType.Market && order.Type != OrderType.StopMarket", span="143-143"];
m36_31 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="149-149"];
m36_32 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return base.CanSubmitOrder(security, order, out message);", span="152-152"];
m36_109 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.Exit()", span="337-337"];
m36_100 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="316-316"];
m36_16 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="105-105"];
m36_17 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="102-102"];
m36_18 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="115-115"];
m36_23 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="MinimumOrderSizes.TryGetValue(security.Symbol.Value, out minimumOrderSize) &&\r\n                Math.Abs(order.Quantity) < minimumOrderSize", span="124-125"];
m36_24 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    $''The minimum order quantity for {security.Symbol.Value} is {minimumOrderSize}''\r\n                )", span="127-129"];
m36_25 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="131-131"];
m36_26 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="security.Type != SecurityType.Crypto", span="134-134"];
m36_27 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model does not support '' + security.Type + '' security type.''\r\n                )", span="136-138"];
m36_28 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="140-140"];
m36_30 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model does not support '' + order.Type + '' order type.''\r\n                )", span="145-147"];
m36_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m36_48 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.RealTime.Setup(algorithm, job, _algorithmHandlers.Results, _systemHandlers.Api)", span="174-174"];
m36_50 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.Running)", span="195-195"];
m36_51 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadFeed = new Thread(_algorithmHandlers.DataFeed.Run) {Name = ''DataFeed Thread''}", span="198-198"];
m36_52 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadTransactions = new Thread(_algorithmHandlers.Transactions.Run) {Name = ''Transaction Thread''}", span="199-199"];
m36_53 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadRealTime = new Thread(_algorithmHandlers.RealTime.Run) {Name = ''RealTime Thread''}", span="200-200"];
m36_57 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Globals.Version))", span="208-208"];
m36_59 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var complete = isolator.ExecuteWithTimeLimit(_algorithmHandlers.Setup.MaximumRuntime, algorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _algorithmHandlers.CommandQueue, isolator.CancellationToken);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(err);\r\n                                algorithm.RunTimeError = err;\r\n                                algorithmManager.SetStatus(AlgorithmStatus.RuntimeError);\r\n                                return;\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n                        }, job.RamAllocation)", span="216-236"];
m36_61 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F''))", span="240-240"];
m36_62 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="throw new Exception(''Failed to complete algorithm within '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F'')\r\n                                + '' seconds. Please make it run faster.'');", span="241-242"];
m36_67 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.DataFeed != null", span="255-255"];
m36_68 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.DataFeed.Exit()", span="255-255"];
m36_69 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results != null", span="256-256"];
m36_72 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.LogMessage(message)", span="260-260"];
m36_73 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.RuntimeError(message, err.StackTrace)", span="261-261"];
m36_74 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="262-262"];
m36_76 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var charts = new Dictionary<string, Chart>(_algorithmHandlers.Results.Charts)", span="269-269"];
m36_77 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var orders = new Dictionary<int, Order>(_algorithmHandlers.Transactions.Orders)", span="270-270"];
m36_91 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="statisticsResults = StatisticsBuilder.Generate(trades, profitLoss, equity, performance, benchmark,\r\n                                    _algorithmHandlers.Setup.StartingPortfolioValue, algorithm.Portfolio.TotalFees, totalTransactions)", span="294-295"];
m36_92 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var netReturn = _algorithmHandlers.Setup.StartingPortfolioValue > 0 ?\r\n                                                (algorithm.Portfolio.TotalPortfolioValue - _algorithmHandlers.Setup.StartingPortfolioValue) / _algorithmHandlers.Setup.StartingPortfolioValue\r\n                                                : 0", span="298-300"];
m36_101 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var dataPoints = algorithmManager.DataPoints + _algorithmHandlers.HistoryProvider.DataPointCount", span="317-317"];
m36_102 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.DebugMessage(\r\n                            string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((dataPoints/(double) 1000)/totalSeconds).ToString(''F0''),\r\n                                dataPoints.ToString(''N0'')))", span="318-321"];
m36_103 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Results.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statisticsResults, banner)", span="323-323"];
m36_106 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Transactions.Exit()", span="331-331"];
m36_107 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.DataFeed.Exit()", span="332-332"];
m36_108 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.RealTime.Exit()", span="333-333"];
m36_112 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="(_algorithmHandlers.Results.IsActive \r\n                    || (_algorithmHandlers.Transactions != null && _algorithmHandlers.Transactions.IsActive) \r\n                    || (_algorithmHandlers.DataFeed != null && _algorithmHandlers.DataFeed.IsActive)\r\n                    || (_algorithmHandlers.RealTime != null && _algorithmHandlers.RealTime.IsActive))\r\n                    && ts.ElapsedMilliseconds < 30*1000", span="342-346"];
m36_126 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Setup != null", span="363-363"];
m36_128 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers.Setup.Dispose()", span="366-366"];
m36_132 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="77-77"];
m36_39 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="160-160"];
m36_20 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = _message", span="119-119"];
m36_22 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="decimal minimumOrderSize", span="123-123"];
m36_33 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="115-115"];
m36_49 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="brokerage.Message += (sender, message) =>\r\n                    {\r\n                        algorithm.BrokerageMessageHandler.Handle(message);\r\n\r\n                        // fire brokerage message events\r\n                        algorithm.OnBrokerageMessage(message);\r\n                        switch (message.Type)\r\n                        {\r\n                            case BrokerageMessageType.Disconnect:\r\n                                algorithm.OnBrokerageDisconnect();\r\n                                break;\r\n                            case BrokerageMessageType.Reconnect:\r\n                                algorithm.OnBrokerageReconnect();\r\n                                break;\r\n                        }\r\n                    }", span="177-192"];
m36_63 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="algorithm.RunTimeError != null", span="246-246"];
m36_64 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="throw algorithm.RunTimeError;", span="248-248"];
m36_75 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var trades = algorithm.TradeBuilder.ClosedTrades", span="268-268"];
m36_88 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var profitLoss = new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="290-290"];
m36_89 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var totalTransactions = algorithm.Transactions.GetOrders(x => x.Status.IsFill()).Count()", span="291-291"];
m36_93 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="banner.Add(''Unrealized'', ''$'' + algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="303-303"];
m36_94 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="banner.Add(''Fees'', ''-$'' + algorithm.Portfolio.TotalFees.ToString(''N2''))", span="304-304"];
m36_95 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="banner.Add(''Net Profit'', ''$'' + algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="305-305"];
m36_97 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="banner.Add(''Equity'', ''$'' + algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="307-307"];
m36_85 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="284-286"];
m36_99 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Error(err, ''Error generating statistics packet'')", span="312-312"];
m36_15 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = _message", span="104-104"];
m36_19 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="order.BrokerId != null && order.BrokerId.Any()", span="117-117"];
m36_119 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadResults != null && threadResults.IsAlive", span="355-355"];
m36_120 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadResults.Abort()", span="355-355"];
m36_123 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="brokerage != null", span="358-358"];
m36_125 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="brokerage.Disconnect()", span="361-361"];
m36_54 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadFeed.Start()", span="203-203"];
m36_115 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadFeed != null && threadFeed.IsAlive", span="353-353"];
m36_116 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadFeed.Abort()", span="353-353"];
m36_55 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadTransactions.Start()", span="204-204"];
m36_117 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="354-354"];
m36_118 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadTransactions.Abort()", span="354-354"];
m36_56 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="threadRealTime.Start()", span="205-205"];
m36_58 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var isolator = new Isolator()", span="213-213"];
m36_60 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="!complete", span="238-238"];
m36_66 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Error(err, ''Breaking out of parent try catch:'')", span="254-254"];
m36_70 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var message = ''Runtime Error: '' + err.Message", span="258-258"];
m36_71 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="259-259"];
m36_86 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="288-288"];
m36_87 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="289-289"];
m36_90 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var benchmark = charts[benchmarkKey].Series[benchmarkKey].Values", span="292-292"];
m36_78 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var holdings = new Dictionary<string, Holding>()", span="271-271"];
m36_96 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="banner.Add(''Return'', netReturn.ToString(''P''))", span="306-306"];
m36_79 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var banner = new Dictionary<string, string>()", span="272-272"];
m36_80 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var statisticsResults = new StatisticsResults()", span="273-273"];
m36_104 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label=Exception, span="325-325"];
m36_105 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Error(err, ''Error sending analysis results'')", span="327-327"];
m36_111 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="var ts = Stopwatch.StartNew()", span="341-341"];
m36_114 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="349-349"];
m36_113 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Thread.Sleep(100)", span="348-348"];
m36_127 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Trace(''Engine.Run(): Disposing of setup handler...'')", span="365-365"];
m36_129 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="368-368"];
m36_131 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Error(err, ''Error running algorithm'')", span="372-372"];
m36_65 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label=Exception, span="251-251"];
m36_98 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label=Exception, span="310-310"];
m36_81 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="string strategyEquityKey = ''Strategy Equity''", span="278-278"];
m36_82 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="string equityKey = ''Equity''", span="279-279"];
m36_83 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="280-280"];
m36_84 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="string benchmarkKey = ''Benchmark''", span="281-281"];
m36_10 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="89-89"];
m36_121 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="statusPingThread != null && statusPingThread.IsAlive", span="356-356"];
m36_122 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="statusPingThread.Abort()", span="356-356"];
m36_14 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="102-102"];
m36_124 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="Log.Trace(''Engine.Run(): Disconnecting from brokerage...'')", span="360-360"];
m36_12 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="89-89"];
m36_130 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label=Exception, span="370-370"];
m36_11 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="return new GDAXFeeModel();", span="91-91"];
m36_110 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="GDAXBrokerageModel.cs", label="statusPing.Exit()", span="338-338"];
m36_157 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="213-213"];
m36_133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="105-105"];
m36_188 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="101-101"];
m36_195 [cluster="string.Format(string, object)", file="GDAXBrokerageModel.cs", label="Entry string.Format(string, object)", span="0-0"];
m36_164 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77"];
m36_187 [cluster="System.Threading.Thread.Abort()", file="GDAXBrokerageModel.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m36_177 [cluster="double.ToString(string)", file="GDAXBrokerageModel.cs", label="Entry double.ToString(string)", span="0-0"];
m36_186 [cluster="System.Threading.Thread.Sleep(int)", file="GDAXBrokerageModel.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m36_183 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="237-237"];
m36_172 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="290-290"];
m36_185 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="GDAXBrokerageModel.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m36_182 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="58-58"];
m36_162 [cluster="System.TimeSpan.ToString(string)", file="GDAXBrokerageModel.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m36_223 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m36_0 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="65-65"];
m36_1 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="GDAXBrokerageModel.cs", label="_liveMode = liveMode", span="67-67"];
m36_3 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="GDAXBrokerageModel.cs", label="_algorithmHandlers = algorithmHandlers", span="69-69"];
m36_139 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="GDAXBrokerageModel.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m36_4 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="65-65"];
m36_205 [cluster="QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="27-27"];
m36_153 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="421-421"];
m36_174 [cluster="QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", span="40-40"];
m36_179 [cluster="string.Format(string, params object[])", file="GDAXBrokerageModel.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m36_168 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m36_208 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="409-409"];
m36_219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="667-667"];
m36_194 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="431-431"];
m36_158 [cluster="string.Format(string, object, object)", file="GDAXBrokerageModel.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m36_169 [cluster="QuantConnect.Statistics.StatisticsResults.StatisticsResults()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Statistics.StatisticsResults.StatisticsResults()", span="55-55"];
m36_167 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m36_146 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101"];
m36_134 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="46-46"];
m36_178 [cluster="long.ToString(string)", file="GDAXBrokerageModel.cs", label="Entry long.ToString(string)", span="0-0"];
m36_165 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m36_166 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="114-114"];
m36_184 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="93-93"];
m36_173 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m36_175 [cluster="decimal.ToString(string)", file="GDAXBrokerageModel.cs", label="Entry decimal.ToString(string)", span="0-0"];
m36_140 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="80-80"];
m36_150 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="128-128"];
m36_180 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="206-206"];
m36_224 [file="GDAXBrokerageModel.cs", label="QuantConnect.Lean.Engine.Engine", span=""];
m36_225 [file="GDAXBrokerageModel.cs", label=algorithm, span=""];
m36_226 [file="GDAXBrokerageModel.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m36_227 [file="GDAXBrokerageModel.cs", label=algorithmManager, span=""];
m36_228 [file="GDAXBrokerageModel.cs", label=isolator, span=""];
m37_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageModelTests.cs", label="Fees.TryGetValue(security.Symbol.Value, out fee)", span="52-52"];
m37_57 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="23-23"];
m37_35 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", span="87-87"];
m37_36 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="89-89"];
m37_39 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidSecurityType, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(1.0m, securityType), order.Object, out message))", span="93-93"];
m37_38 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = 10.0m", span="91-91"];
m37_40 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", span="87-87"];
m37_17 [cluster="Unk.CanUpdateOrder", file="GDAXBrokerageModelTests.cs", label="Entry Unk.CanUpdateOrder", span=""];
m37_15 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", span="54-54"];
m37_62 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", span="123-123"];
m37_63 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="var security = GDAXTestsHelpers.GetSecurity()", span="125-125"];
m37_64 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="security.FeeModel = new GDAXFeeModel()", span="126-126"];
m37_65 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="security.SetMarketPrice(new TradeBar { Symbol = security.Symbol, Close = 5000m })", span="127-127"];
m37_66 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="var orderFee = security.FeeModel.GetOrderFee(security, new LimitOrder(security.Symbol, 1, 5000m, DateTime.MinValue))", span="128-128"];
m37_67 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(0, orderFee)", span="130-130"];
m37_68 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", span="123-123"];
m37_69 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="55-55"];
m37_27 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m37_11 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", span="46-46"];
m37_12 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="48-48"];
m37_14 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", span="46-46"];
m37_48 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="268-268"];
m37_0 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", span="34-34"];
m37_5 [cluster="Unk.AreEqual", color=green, community=0, file="GDAXBrokerageModelTests.cs", label="Entry Unk.AreEqual", prediction=64, span=""];
m37_2 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", color=green, community=0, file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", prediction=65, span="34-34"];
m37_3 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", color=green, community=0, file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", prediction=66, span="12-12"];
m37_6 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", span="40-40"];
m37_16 [cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20"];
m37_59 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="531-531"];
m37_7 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Assert.IsInstanceOf<GDAXFeeModel>(_unit.GetFeeModel(GDAXTestsHelpers.GetSecurity()))", span="42-42"];
m37_8 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m37_10 [cluster="Unk.>", file="GDAXBrokerageModelTests.cs", label="Entry Unk.>", span=""];
m37_26 [cluster="Mock<QuantConnect.Orders.Order>.cstr", file="GDAXBrokerageModelTests.cs", label="Entry Mock<QuantConnect.Orders.Order>.cstr", span=""];
m37_18 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", span="55-55"];
m37_19 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="57-57"];
m37_22 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label=isUpdate, span="61-61"];
m37_24 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(!isUpdate, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(), order.Object, out message))", span="66-66"];
m37_21 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = 10.0m", span="59-59"];
m37_23 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.BrokerId = new List<string>() {''abc123''}", span="63-63"];
m37_25 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", span="55-55"];
m37_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="89-89"];
m37_50 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", span="112-112"];
m37_51 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="var security = GDAXTestsHelpers.GetSecurity()", span="114-114"];
m37_52 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="security.FeeModel = new GDAXFeeModel()", span="115-115"];
m37_53 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="security.SetMarketPrice(new TradeBar { Symbol = security.Symbol, Close = 5000m })", span="116-116"];
m37_54 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(security.Symbol, 1, DateTime.MinValue))", span="117-117"];
m37_55 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(12.5m, orderFee)", span="119-119"];
m37_56 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", span="112-112"];
m37_60 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m37_61 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m37_47 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m37_49 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="115-115"];
m37_28 [cluster="Unk.CanSubmitOrder", file="GDAXBrokerageModelTests.cs", label="Entry Unk.CanSubmitOrder", span=""];
m37_29 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", span="71-71"];
m37_30 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="73-73"];
m37_32 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = orderQuantity", span="76-76"];
m37_33 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidOrderQuantity, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(), order.Object, out message))", span="78-78"];
m37_34 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", span="71-71"];
m37_41 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", span="102-102"];
m37_42 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="104-104"];
m37_44 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="var order = Order.CreateOrder(new SubmitOrderRequest(orderType, SecurityType.Crypto, security.Symbol, 10.0m, 1.0m, 10.0m, DateTime.Now, ''Test Order''))", span="106-106"];
m37_45 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidOrderType, _unit.CanSubmitOrder(security, order, out message))", span="108-108"];
m37_43 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="var security = GDAXTestsHelpers.GetSecurity()", span="105-105"];
m37_46 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", span="102-102"];
m37_58 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m37_70 [file="GDAXBrokerageModelTests.cs", label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", span=""];
m38_13 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="75-75"];
m38_14 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="!IsReady", span="78-78"];
m38_15 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="return input;", span="78-78"];
m38_16 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="var series = window\r\n                .OrderBy(i => i.Time)\r\n                .Select(i => Convert.ToDouble(i.Value))\r\n                .ToArray()", span="81-84"];
m38_18 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="Intercept.Update(input.Time, (decimal)ols.Item1)", span="87-87"];
m38_19 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="Slope.Update(input.Time, (decimal)ols.Item2)", span="88-88"];
m38_17 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="var ols = Fit.Line(x: t, y: series)", span="86-86"];
m38_20 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="return Intercept + Slope * Period;", span="91-91"];
m38_21 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="GDAXDownloader.cs", label="Exit QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="75-75"];
m38_11 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(int)", file="GDAXDownloader.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(int)", span="62-62"];
m38_12 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(int)", file="GDAXDownloader.cs", label="Exit QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(int)", span="62-62"];
m38_25 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="GDAXDownloader.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36"];
m38_33 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="GDAXDownloader.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", span="97-97"];
m38_34 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="GDAXDownloader.cs", label="Intercept.Reset()", span="99-99"];
m38_35 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="GDAXDownloader.cs", label="Slope.Reset()", span="100-100"];
m38_36 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="GDAXDownloader.cs", label="base.Reset()", span="101-101"];
m38_37 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="GDAXDownloader.cs", label="Exit QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", span="97-97"];
m38_7 [cluster="QuantConnect.Indicators.Identity.Identity(string)", file="GDAXDownloader.cs", label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27"];
m38_0 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="GDAXDownloader.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="50-50"];
m38_1 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="GDAXDownloader.cs", label="t = Vector<double>.Build.Dense(period, i => i + 1).ToArray()", span="53-53"];
m38_2 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="GDAXDownloader.cs", label="Intercept = new Identity(name + ''_Intercept'')", span="54-54"];
m38_3 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="GDAXDownloader.cs", label="Slope = new Identity(name + ''_Slope'')", span="55-55"];
m38_4 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="GDAXDownloader.cs", label="Exit QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="50-50"];
m38_32 [cluster="System.Convert.ToDouble(decimal)", file="GDAXDownloader.cs", label="Entry System.Convert.ToDouble(decimal)", span="0-0"];
m38_5 [cluster="Unk.Dense", file="GDAXDownloader.cs", label="Entry Unk.Dense", span=""];
m38_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="GDAXDownloader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m38_39 [cluster="QuantConnect.Indicators.WindowIndicator<T>.Reset()", file="GDAXDownloader.cs", label="Entry QuantConnect.Indicators.WindowIndicator<T>.Reset()", span="69-69"];
m38_6 [cluster="Unk.ToArray", file="GDAXDownloader.cs", label="Entry Unk.ToArray", span=""];
m38_24 [cluster="Unk.Line", file="GDAXDownloader.cs", label="Entry Unk.Line", span=""];
m38_38 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="GDAXDownloader.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="102-102"];
m38_29 [cluster="lambda expression", file="GDAXDownloader.cs", label="Entry lambda expression", span="83-83"];
m38_8 [cluster="lambda expression", file="GDAXDownloader.cs", label="Entry lambda expression", span="53-53"];
m38_9 [cluster="lambda expression", file="GDAXDownloader.cs", label="i + 1", span="53-53"];
m38_10 [cluster="lambda expression", file="GDAXDownloader.cs", label="Exit lambda expression", span="53-53"];
m38_26 [cluster="lambda expression", file="GDAXDownloader.cs", label="Entry lambda expression", span="82-82"];
m38_27 [cluster="lambda expression", file="GDAXDownloader.cs", label="i.Time", span="82-82"];
m38_28 [cluster="lambda expression", file="GDAXDownloader.cs", label="Exit lambda expression", span="82-82"];
m38_30 [cluster="lambda expression", file="GDAXDownloader.cs", label="Convert.ToDouble(i.Value)", span="83-83"];
m38_31 [cluster="lambda expression", file="GDAXDownloader.cs", label="Exit lambda expression", span="83-83"];
m38_40 [file="GDAXDownloader.cs", label="QuantConnect.Indicators.LeastSquaresMovingAverage", span=""];
m39_21 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Global.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="302-302"];
m39_0 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m39_1 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="CurrencySymbol = ''$''", span="85-85"];
m39_2 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="ConversionRate = 1m", span="86-86"];
m39_3 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="Exit QuantConnect.Holding.Holding()", span="83-83"];
m39_23 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="Entry QuantConnect.Holding.Clone()", span="126-126"];
m39_24 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="return new Holding\r\n            {\r\n                AveragePrice = AveragePrice,\r\n                Symbol = Symbol,\r\n                Type = Type,\r\n                Quantity = Quantity,\r\n                MarketPrice = MarketPrice,\r\n                MarketValue = MarketValue,\r\n                UnrealizedPnL = UnrealizedPnL,\r\n                ConversionRate  = ConversionRate,\r\n                CurrencySymbol = CurrencySymbol\r\n            };", span="128-139"];
m39_25 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="Exit QuantConnect.Holding.Clone()", span="126-126"];
m39_33 [cluster="string.Format(string, object)", file="Global.cs", label="Entry string.Format(string, object)", span="0-0"];
m39_26 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="Entry QuantConnect.Holding.ToString()", span="145-145"];
m39_27 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="var value = string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4}'', Symbol.Value, Quantity, CurrencySymbol, AveragePrice, MarketPrice)", span="147-147"];
m39_28 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="ConversionRate != 1m", span="149-149"];
m39_29 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="value += string.Format('' - Conversion: {0}'', ConversionRate)", span="151-151"];
m39_30 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="return value;", span="154-154"];
m39_31 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="Exit QuantConnect.Holding.ToString()", span="145-145"];
m39_34 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Entry QuantConnect.AlgorithmControl.AlgorithmControl()", span="487-487"];
m39_35 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Initialized = false", span="490-490"];
m39_36 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="HasSubscribers = true", span="491-491"];
m39_37 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Status = AlgorithmStatus.Running", span="492-492"];
m39_38 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="ChartSubscription = ''Strategy Equity''", span="493-493"];
m39_39 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Exit QuantConnect.AlgorithmControl.AlgorithmControl()", span="487-487"];
m39_4 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Entry QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="93-93"];
m39_5 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="var holding = security.Holdings", span="96-96"];
m39_10 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="CurrencySymbol = Currencies.GetCurrencySymbol(security.QuoteCurrency.Symbol)", span="102-102"];
m39_11 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="ConversionRate = security.QuoteCurrency.ConversionRate", span="103-103"];
m39_6 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Symbol = holding.Symbol", span="98-98"];
m39_7 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Type = holding.Type", span="99-99"];
m39_8 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Quantity = holding.Quantity", span="100-100"];
m39_9 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="MarketValue = holding.HoldingsValue", span="101-101"];
m39_13 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="holding.Type == SecurityType.Forex || holding.Type == SecurityType.Cfd", span="106-106"];
m39_15 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="holding.Type == SecurityType.Crypto", span="111-111"];
m39_17 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="AveragePrice = Math.Round(holding.AveragePrice, rounding)", span="117-117"];
m39_18 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="MarketPrice = Math.Round(holding.Price, rounding)", span="118-118"];
m39_19 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="UnrealizedPnL = Math.Round(holding.UnrealizedProfit, 2)", span="119-119"];
m39_12 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="var rounding = 2", span="105-105"];
m39_14 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="rounding = 5", span="108-108"];
m39_16 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="rounding = 28", span="113-113"];
m39_20 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Exit QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="93-93"];
m39_22 [cluster="System.Math.Round(decimal, int)", file="Global.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m39_40 [file="Global.cs", label="QuantConnect.Holding", span=""];
m39_41 [file="Global.cs", label="QuantConnect.AlgorithmControl", span=""];
m40_46 [cluster="string.Contains(string)", file="HeikinAshi.cs", label="Entry string.Contains(string)", span="0-0"];
m40_7 [cluster="System.IO.File.ReadAllText(string)", file="HeikinAshi.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m40_50 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="125-125"];
m40_51 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="HeikinAshi.cs", label="return GetValue(key, defaultValue);", span="127-127"];
m40_52 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.GetBool(string, bool)", span="125-125"];
m40_77 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", span="187-187"];
m40_80 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="var environment = settings.SelectToken(''environments.'' + environmentSetting.Value<string>())", span="192-192"];
m40_84 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="return GetToken(environment, key, current);", span="199-199"];
m40_78 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="var environmentSetting = settings.SelectToken(''environment'')", span="189-189"];
m40_79 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="environmentSetting != null", span="190-190"];
m40_81 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="var setting = environment.SelectToken(key)", span="193-193"];
m40_82 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="setting != null", span="194-194"];
m40_83 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="current = setting", span="196-196"];
m40_85 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="current == null", span="201-201"];
m40_86 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="return settings.SelectToken(key);", span="203-203"];
m40_87 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="return current;", span="205-205"];
m40_88 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", span="187-187"];
m40_25 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HeikinAshi.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m40_38 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="107-107"];
m40_43 [cluster="QuantConnect.Configuration.Config.Set(string, string)", color=green, community=0, file="HeikinAshi.cs", label="environment = environment[''environments''][envName]", prediction=67, span="114-114"];
m40_39 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="HeikinAshi.cs", label="JToken environment = Settings.Value", span="109-109"];
m40_41 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="HeikinAshi.cs", label="var envName = key.Substring(0, key.IndexOf(''.''))", span="112-112"];
m40_42 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="HeikinAshi.cs", label="key = key.Substring(key.IndexOf(''.'') + 1)", span="113-113"];
m40_40 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="HeikinAshi.cs", label="key.Contains(''.'')", span="110-110"];
m40_44 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="HeikinAshi.cs", label="environment[key] = value", span="116-116"];
m40_45 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.Set(string, string)", span="107-107"];
m40_48 [cluster="string.Substring(int, int)", file="HeikinAshi.cs", label="Entry string.Substring(int, int)", span="0-0"];
m40_54 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="136-136"];
m40_55 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="HeikinAshi.cs", label="return GetValue(key, defaultValue);", span="138-138"];
m40_56 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.GetInt(string, int)", span="136-136"];
m40_0 [cluster="lambda expression", file="HeikinAshi.cs", label="Entry lambda expression", span="31-53"];
m40_3 [cluster="lambda expression", file="HeikinAshi.cs", label="return JObject.Parse(File.ReadAllText(ConfigurationFileName));", span="52-52"];
m40_1 [cluster="lambda expression", file="HeikinAshi.cs", label="!File.Exists(ConfigurationFileName)", span="34-34"];
m40_2 [cluster="lambda expression", file="HeikinAshi.cs", label="return new JObject\r\n                {\r\n                    {''algorithm-type-name'', ''BasicTemplateAlgorithm''},\r\n                    {''live-mode'', false},\r\n                    {''data-folder'', ''../../../Data/''},\r\n                    {''messaging-handler'', ''QuantConnect.Messaging.Messaging''},\r\n                    {''queue-handler'', ''QuantConnect.Queues.Queues''},\r\n                    {''api-handler'', ''QuantConnect.Api.Api''},\r\n                    {''setup-handler'', ''QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler''},\r\n                    {''result-handler'', ''QuantConnect.Lean.Engine.Results.ConsoleResultHandler''},\r\n                    {''data-feed-handler'', ''QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed''},\r\n                    {''real-time-handler'', ''QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler''},\r\n                    {''transaction-handler'', ''QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler''}\r\n                };", span="36-49"];
m40_4 [cluster="lambda expression", file="HeikinAshi.cs", label="Exit lambda expression", span="31-53"];
m40_76 [cluster="Unk.SelectToken", file="HeikinAshi.cs", label="Entry Unk.SelectToken", span=""];
m40_73 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string)", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.GetToken(JToken, string)", span="182-182"];
m40_74 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string)", file="HeikinAshi.cs", label="return GetToken(settings, key, settings.SelectToken(key));", span="184-184"];
m40_75 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string)", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.GetToken(JToken, string)", span="182-182"];
m40_23 [cluster="Unk.>", file="HeikinAshi.cs", label="Entry Unk.>", span=""];
m40_53 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="160-160"];
m40_67 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="var value = token.Value<string>()", span="174-174"];
m40_62 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="var token = GetToken(Settings.Value, key)", span="166-166"];
m40_66 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="var type = typeof(T)", span="173-173"];
m40_68 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="type.IsEnum", span="175-175"];
m40_69 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="return (T) Enum.Parse(type, value);", span="177-177"];
m40_70 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="return (T) Convert.ChangeType(value, type);", span="179-179"];
m40_60 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="key == ''environment'' && typeof (T) == typeof (string)", span="164-164"];
m40_63 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="token == null", span="167-167"];
m40_64 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="Log.Trace(string.Format(''Config.GetValue(): {0} - Using default value: {1}'', key, defaultValue))", span="169-169"];
m40_61 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="return (T) (object) GetEnvironment();", span="164-164"];
m40_65 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="return defaultValue;", span="170-170"];
m40_71 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="160-160"];
m40_24 [cluster="Unk.Add", file="HeikinAshi.cs", label="Entry Unk.Add", span=""];
m40_72 [cluster="Unk.ChangeType", file="HeikinAshi.cs", label="Entry Unk.ChangeType", span=""];
m40_5 [cluster="System.IO.File.Exists(string)", file="HeikinAshi.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m40_49 [cluster="string.Substring(int)", file="HeikinAshi.cs", label="Entry string.Substring(int)", span="0-0"];
m40_35 [cluster="Unk.GetToken", file="HeikinAshi.cs", label="Entry Unk.GetToken", span=""];
m40_6 [cluster="JObject.cstr", file="HeikinAshi.cs", label="Entry JObject.cstr", span=""];
m40_47 [cluster="string.IndexOf(string)", file="HeikinAshi.cs", label="Entry string.IndexOf(string)", span="0-0"];
m40_36 [cluster="string.Format(string, object, object)", file="HeikinAshi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m40_8 [cluster="Unk.Parse", file="HeikinAshi.cs", label="Entry Unk.Parse", span=""];
m40_57 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="147-147"];
m40_58 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="HeikinAshi.cs", label="return GetValue(key, defaultValue);", span="149-149"];
m40_59 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.GetDouble(string, double)", span="147-147"];
m40_37 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="HeikinAshi.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m40_9 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.GetEnvironment()", span="60-60"];
m40_14 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="var currentEnv = env.Value<string>()", span="67-67"];
m40_12 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="var env = currentEnvironment[''environment'']", span="64-64"];
m40_13 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="currentEnvironment != null && env != null", span="65-65"];
m40_15 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="environments.Add(currentEnv)", span="68-68"];
m40_18 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="currentEnvironment = moreEnvironments[currentEnv]", span="75-75"];
m40_10 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="var environments = new List<string>()", span="62-62"];
m40_11 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="JToken currentEnvironment = Settings.Value", span="63-63"];
m40_19 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="env = currentEnvironment[''environment'']", span="76-76"];
m40_20 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="return string.Join(''.'', environments);", span="78-78"];
m40_16 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="var moreEnvironments = currentEnvironment[''environments'']", span="69-69"];
m40_17 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="moreEnvironments == null", span="70-70"];
m40_21 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.GetEnvironment()", span="60-60"];
m40_26 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HeikinAshi.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="87-87"];
m40_33 [cluster="QuantConnect.Configuration.Config.Get(string, string)", color=green, community=0, file="HeikinAshi.cs", label="return token.Value<string>();", prediction=68, span="98-98"];
m40_29 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HeikinAshi.cs", label="var token = GetToken(Settings.Value, key)", span="92-92"];
m40_30 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HeikinAshi.cs", label="token == null", span="93-93"];
m40_27 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HeikinAshi.cs", label="key == ''environment''", span="90-90"];
m40_31 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HeikinAshi.cs", label="Log.Trace(string.Format(''Config.Get(): Configuration key not found. Key: {0} - Using default value: {1}'', key, defaultValue))", span="95-95"];
m40_32 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HeikinAshi.cs", label="return defaultValue;", span="96-96"];
m40_28 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HeikinAshi.cs", label="return GetEnvironment();", span="90-90"];
m40_34 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HeikinAshi.cs", label="Exit QuantConnect.Configuration.Config.Get(string, string)", span="87-87"];
m41_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs.RequestEndEventArgs(int)", file="HeikinAshiTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs.RequestEndEventArgs(int)", span="39-39"];
m41_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs.RequestEndEventArgs(int)", file="HeikinAshiTests.cs", label="RequestId = requestId", span="41-41"];
m41_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs.RequestEndEventArgs(int)", file="HeikinAshiTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs.RequestEndEventArgs(int)", span="39-39"];
m41_3 [file="HeikinAshiTests.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs", span=""];
m42_7 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m42_42 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="IBrokerageModel.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m42_39 [cluster="QuantConnect.Brokerages.OandaBrokerageModel.OandaBrokerageModel(QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.OandaBrokerageModel.OandaBrokerageModel(QuantConnect.AccountType)", span="56-56"];
m42_4 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m42_5 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m42_8 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92"];
m42_9 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92"];
m42_2 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="66-66"];
m42_3 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="66-66"];
m42_40 [cluster="QuantConnect.Brokerages.FxcmBrokerageModel.FxcmBrokerageModel(QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.FxcmBrokerageModel.FxcmBrokerageModel(QuantConnect.AccountType)", span="55-55"];
m42_14 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="113-113"];
m42_15 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="113-113"];
m42_41 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="59-59"];
m42_0 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m42_1 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m42_10 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99"];
m42_11 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99"];
m42_37 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", span="34-34"];
m42_18 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m42_19 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label=brokerage, span="138-138"];
m42_21 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="return new DefaultBrokerageModel(accountType);", span="141-141"];
m42_23 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="return new InteractiveBrokersBrokerageModel(accountType);", span="144-144"];
m42_25 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="return new TradierBrokerageModel(accountType);", span="147-147"];
m42_27 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="return new OandaBrokerageModel(accountType);", span="150-150"];
m42_29 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="return new FxcmBrokerageModel(accountType);", span="153-153"];
m42_31 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="return new DefaultBrokerageModel(accountType);", span="156-156"];
m42_33 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="return new GDAXBrokerageModel(accountType);", span="159-159"];
m42_20 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="BrokerageName.Default", span="140-140"];
m42_22 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="BrokerageName.InteractiveBrokersBrokerage", span="143-143"];
m42_24 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="BrokerageName.TradierBrokerage", span="146-146"];
m42_26 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="BrokerageName.OandaBrokerage", span="149-149"];
m42_28 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="BrokerageName.FxcmBrokerage", span="152-152"];
m42_30 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", color=green, community=0, file="IBrokerageModel.cs", label="BrokerageName.Bitfinex", prediction=69, span="155-155"];
m42_32 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", color=green, community=0, file="IBrokerageModel.cs", label="BrokerageName.GDAX", prediction=70, span="158-158"];
m42_35 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m42_38 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", span="39-39"];
m42_12 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="106-106"];
m42_13 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="106-106"];
m42_36 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m42_16 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121"];
m42_17 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="IBrokerageModel.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121"];
m43_3 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.FixedSizeHashQueue(int)", file="IMarginCallModel.cs", label="_hash = new HashSet<T>()", span="38-38"];
m43_7 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", file="IMarginCallModel.cs", label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", span="44-44"];
m43_8 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", color=green, community=0, file="IMarginCallModel.cs", label="_hash.Add(item)", prediction=71, span="46-46"];
m43_9 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", file="IMarginCallModel.cs", label="_queue.Enqueue(item)", span="48-48"];
m43_6 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m43_26 [cluster="System.Collections.Generic.Queue<T>.Peek()", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.Queue<T>.Peek()", span="0-0"];
m43_35 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m43_16 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m43_13 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", file="IMarginCallModel.cs", label="return false;", span="56-56"];
m43_10 [cluster="System.Collections.Generic.List<T>.List()", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m43_11 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", file="IMarginCallModel.cs", label="_hash.Remove(_queue.Dequeue())", span="52-52"];
m43_12 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", file="IMarginCallModel.cs", label="return true;", span="54-54"];
m43_14 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", file="IMarginCallModel.cs", label="Exit QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", span="44-44"];
m43_17 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
m43_40 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.System.Collections.IEnumerable.GetEnumerator()", file="IMarginCallModel.cs", label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.System.Collections.IEnumerable.GetEnumerator()", span="110-110"];
m43_41 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.System.Collections.IEnumerable.GetEnumerator()", file="IMarginCallModel.cs", label="return GetEnumerator();", span="112-112"];
m43_42 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.System.Collections.IEnumerable.GetEnumerator()", file="IMarginCallModel.cs", label="Exit QuantConnect.Util.FixedSizeHashQueue<T>.System.Collections.IEnumerable.GetEnumerator()", span="110-110"];
m43_18 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m43_39 [cluster="System.Collections.Generic.Queue<T>.GetEnumerator()", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.Queue<T>.GetEnumerator()", span="0-0"];
m43_5 [cluster="System.Collections.Generic.Queue<T>.Queue(int)", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.Queue<T>.Queue(int)", span="0-0"];
m43_32 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Contains(T)", file="IMarginCallModel.cs", label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.Contains(T)", span="86-86"];
m43_33 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Contains(T)", file="IMarginCallModel.cs", label="return _hash.Contains(item);", span="88-88"];
m43_34 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Contains(T)", file="IMarginCallModel.cs", label="Exit QuantConnect.Util.FixedSizeHashQueue<T>.Contains(T)", span="86-86"];
m43_0 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.FixedSizeHashQueue(int)", file="IMarginCallModel.cs", label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.FixedSizeHashQueue(int)", span="34-34"];
m43_1 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.FixedSizeHashQueue(int)", file="IMarginCallModel.cs", label="_size = size", span="36-36"];
m43_2 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.FixedSizeHashQueue(int)", file="IMarginCallModel.cs", label="_queue = new Queue<T>(size)", span="37-37"];
m43_4 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.FixedSizeHashQueue(int)", file="IMarginCallModel.cs", label="Exit QuantConnect.Util.FixedSizeHashQueue<T>.FixedSizeHashQueue(int)", span="34-34"];
m43_36 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.GetEnumerator()", file="IMarginCallModel.cs", label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.GetEnumerator()", span="98-98"];
m43_37 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.GetEnumerator()", file="IMarginCallModel.cs", label="return _queue.GetEnumerator();", span="100-100"];
m43_38 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.GetEnumerator()", file="IMarginCallModel.cs", label="Exit QuantConnect.Util.FixedSizeHashQueue<T>.GetEnumerator()", span="98-98"];
m43_27 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Dequeue()", file="IMarginCallModel.cs", label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.Dequeue()", span="76-76"];
m43_28 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Dequeue()", file="IMarginCallModel.cs", label="var item = _queue.Dequeue()", span="78-78"];
m43_29 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Dequeue()", file="IMarginCallModel.cs", label="_hash.Remove(item)", span="79-79"];
m43_30 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Dequeue()", file="IMarginCallModel.cs", label="return item;", span="80-80"];
m43_31 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Dequeue()", file="IMarginCallModel.cs", label="Exit QuantConnect.Util.FixedSizeHashQueue<T>.Dequeue()", span="76-76"];
m43_15 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="IMarginCallModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m43_19 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", file="IMarginCallModel.cs", label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", span="62-62"];
m43_20 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", file="IMarginCallModel.cs", label="_queue.Count > 0", span="64-64"];
m43_21 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", file="IMarginCallModel.cs", label="item = _queue.Peek()", span="66-66"];
m43_23 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", file="IMarginCallModel.cs", label="item = default(T)", span="69-69"];
m43_22 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", file="IMarginCallModel.cs", label="return true;", span="67-67"];
m43_24 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", file="IMarginCallModel.cs", label="return false;", span="70-70"];
m43_25 [cluster="QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", file="IMarginCallModel.cs", label="Exit QuantConnect.Util.FixedSizeHashQueue<T>.TryPeek(out T)", span="62-62"];
m43_43 [file="IMarginCallModel.cs", label="QuantConnect.Util.FixedSizeHashQueue<T>", span=""];
m44_13 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.ToString()", span="129-129"];
m44_14 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="InteractiveBrokersBrokerage.cs", label="var proxy = Order.CreateOrder(this)", span="132-132"];
m44_15 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="InteractiveBrokersBrokerage.cs", label="return string.Format(''{0} UTC: Submit Order: ({1}) - {2} {3}'', Time, OrderId, proxy, Tag) + '' Status: '' + Status;", span="133-133"];
m44_16 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.ToString()", span="129-129"];
m44_0 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="101-101"];
m44_1 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="SecurityType = securityType", span="104-104"];
m44_2 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="Symbol = symbol", span="105-105"];
m44_3 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="OrderType = orderType", span="106-106"];
m44_4 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="Quantity = quantity", span="107-107"];
m44_5 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="LimitPrice = limitPrice", span="108-108"];
m44_6 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="StopPrice = stopPrice", span="109-109"];
m44_7 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="OrderProperties = properties ?? new OrderProperties()", span="110-110"];
m44_8 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="101-101"];
m44_10 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="117-117"];
m44_11 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="InteractiveBrokersBrokerage.cs", label="OrderId = orderId", span="119-119"];
m44_12 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="117-117"];
m44_17 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="259-259"];
m44_9 [cluster="QuantConnect.Orders.OrderProperties.OrderProperties()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.OrderProperties.OrderProperties()", span="20-20"];
m44_19 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Orders.SubmitOrderRequest", span=""];
m45_8 [cluster="System.Func<T, TResult>.Invoke(T)", file="IQFeedDataQueueHandler.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m45_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="IQFeedDataQueueHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", span="38-38"];
m45_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="IQFeedDataQueueHandler.cs", label="_factory = factory", span="40-40"];
m45_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="IQFeedDataQueueHandler.cs", label="_configurator = configurator", span="41-41"];
m45_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="IQFeedDataQueueHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", span="38-38"];
m45_7 [cluster="QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="IQFeedDataQueueHandler.cs", label="Entry QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", span="33-33"];
m45_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="IQFeedDataQueueHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", span="50-50"];
m45_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="IQFeedDataQueueHandler.cs", label="return _configurator(_factory.CreateEnumerator(request, fileProvider));", span="52-52"];
m45_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="IQFeedDataQueueHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", span="50-50"];
m45_9 [file="IQFeedDataQueueHandler.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory", span=""];
m46_12 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="ISecurityMarginModel.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="73-73"];
m46_13 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="ISecurityMarginModel.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="73-73"];
m46_4 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ISecurityMarginModel.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m46_5 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ISecurityMarginModel.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m46_0 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="ISecurityMarginModel.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="29-29"];
m46_1 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="ISecurityMarginModel.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="29-29"];
m46_10 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="ISecurityMarginModel.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="68-68"];
m46_11 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="ISecurityMarginModel.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="68-68"];
m46_2 [cluster="QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="ISecurityMarginModel.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="39-39"];
m46_3 [cluster="QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="ISecurityMarginModel.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="39-39"];
m46_8 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="ISecurityMarginModel.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m46_9 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="ISecurityMarginModel.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m46_6 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="ISecurityMarginModel.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="54-54"];
m46_7 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="ISecurityMarginModel.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="54-54"];
m48_36 [cluster="Unk.SerializeObject", file="LatestPriceFillModel.cs", label="Entry Unk.SerializeObject", span=""];
m48_74 [cluster="lambda expression", file="LatestPriceFillModel.cs", label="Entry lambda expression", span="105-105"];
m48_32 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="LatestPriceFillModel.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", span="37-37"];
m48_33 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="LatestPriceFillModel.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m48_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="158-158"];
m48_75 [cluster="lambda expression", file="LatestPriceFillModel.cs", label="Insight.Group(insight1)", span="105-105"];
m48_76 [cluster="lambda expression", file="LatestPriceFillModel.cs", label="Exit lambda expression", span="105-105"];
m48_10 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="subscriptionTypes.Contains(typeof(Tick)) && tick != null", span="53-53"];
m48_16 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="return new Prices(price, 0, 0, 0, 0);", span="65-65"];
m48_17 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="var quoteBar = asset.Cache.GetData<QuoteBar>()", span="72-72"];
m48_24 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="return new Prices(current, open, high, low, close);", span="90-90"];
m48_25 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="Exit QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="35-35"];
m48_26 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.Prices.Prices(decimal, decimal, decimal, decimal, decimal)", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.Prices.Prices(decimal, decimal, decimal, decimal, decimal)", span="463-463"];
m48_27 [cluster="Unk.Select", file="LatestPriceFillModel.cs", label="Entry Unk.Select", span=""];
m48_28 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="LatestPriceFillModel.cs", label="Assert.AreEqual(insight.Score.UpdatedTimeUtc, deserialized.Score.UpdatedTimeUtc)", span="57-57"];
m48_29 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData<T>()", span="171-171"];
m48_30 [cluster="Unk.Contains", file="LatestPriceFillModel.cs", label="Entry Unk.Contains", span=""];
m48_31 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.Prices.Prices(QuantConnect.Data.Market.IBar)", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.Prices.Prices(QuantConnect.Data.Market.IBar)", span="458-458"];
m48_12 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="price != 0m", span="56-56"];
m48_15 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="price != 0m", span="63-63"];
m48_11 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="var price = direction == OrderDirection.Sell ? tick.BidPrice : tick.AskPrice", span="55-55"];
m48_13 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="return new Prices(price, 0, 0, 0, 0);", span="58-58"];
m48_14 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModel.cs", label="price = tick.Price", span="62-62"];
m48_0 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", span="27-27"];
m48_1 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="LatestPriceFillModel.cs", label="var one = Insight.Price(Symbols.SPY, Time.OneSecond, InsightDirection.Up)", span="29-29"];
m48_2 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="LatestPriceFillModel.cs", label="var two = Insight.Price(Symbols.SPY, Time.OneSecond, InsightDirection.Up)", span="30-30"];
m48_3 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="LatestPriceFillModel.cs", label="Assert.AreNotEqual(one, two)", span="31-31"];
m48_4 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="LatestPriceFillModel.cs", label="Assert.AreEqual(one, one)", span="32-32"];
m48_5 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="LatestPriceFillModel.cs", label="Assert.AreEqual(two, two)", span="33-33"];
m48_6 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="LatestPriceFillModel.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", span="27-27"];
m48_8 [cluster="Unk.AreNotEqual", file="LatestPriceFillModel.cs", label="Entry Unk.AreNotEqual", span=""];
m48_9 [cluster="Unk.AreEqual", file="LatestPriceFillModel.cs", label="Entry Unk.AreEqual", span=""];
m48_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="194-194"];
m48_37 [cluster="Unk.>", file="LatestPriceFillModel.cs", label="Entry Unk.>", span=""];
m48_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Group(params QuantConnect.Algorithm.Framework.Alphas.Insight[])", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Group(params QuantConnect.Algorithm.Framework.Alphas.Insight[])", span="203-203"];
m48_60 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="169-169"];
m48_68 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupThrowsExceptionIfInsightAlreadyHasGroupId()", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupThrowsExceptionIfInsightAlreadyHasGroupId()", span="101-101"];
m48_70 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupThrowsExceptionIfInsightAlreadyHasGroupId()", file="LatestPriceFillModel.cs", label="Insight.Group(insight1)", span="104-104"];
m48_69 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupThrowsExceptionIfInsightAlreadyHasGroupId()", file="LatestPriceFillModel.cs", label="var insight1 = Insight.Price(Symbols.SPY, Time.OneMinute, InsightDirection.Up)", span="103-103"];
m48_71 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupThrowsExceptionIfInsightAlreadyHasGroupId()", file="LatestPriceFillModel.cs", label="Assert.That(() => Insight.Group(insight1), Throws.InvalidOperationException)", span="105-105"];
m48_72 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupThrowsExceptionIfInsightAlreadyHasGroupId()", file="LatestPriceFillModel.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupThrowsExceptionIfInsightAlreadyHasGroupId()", span="101-101"];
m48_73 [cluster="Unk.That", file="LatestPriceFillModel.cs", label="Entry Unk.That", span=""];
m48_38 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", span="64-64"];
m48_44 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Confidence, copy.Confidence)", prediction=72, span="73-73"];
m48_40 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="var original = new Insight(time, Symbols.SPY, Time.OneMinute, InsightType.Volatility, InsightDirection.Up, 1, 2, ''source-model'')", span="67-67"];
m48_42 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="var copy = original.Clone()", span="70-70"];
m48_43 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.CloseTimeUtc, copy.CloseTimeUtc)", span="72-72"];
m48_45 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Direction, copy.Direction)", span="74-74"];
m48_46 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.EstimatedValue, copy.EstimatedValue)", prediction=72, span="75-75"];
m48_47 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.GeneratedTimeUtc, copy.GeneratedTimeUtc)", prediction=72, span="76-76"];
m48_48 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.GroupId, copy.GroupId)", prediction=72, span="77-77"];
m48_49 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Id, copy.Id)", prediction=72, span="78-78"];
m48_50 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Magnitude, copy.Magnitude)", prediction=72, span="79-79"];
m48_51 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Period, copy.Period)", prediction=72, span="80-80"];
m48_52 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.SourceModel, copy.SourceModel)", prediction=72, span="81-81"];
m48_53 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Score.Direction, copy.Score.Direction)", prediction=72, span="82-82"];
m48_54 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Score.Magnitude, copy.Score.Magnitude)", span="83-83"];
m48_55 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Score.UpdatedTimeUtc, copy.Score.UpdatedTimeUtc)", prediction=72, span="84-84"];
m48_56 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Score.IsFinalScore, copy.Score.IsFinalScore)", prediction=72, span="85-85"];
m48_57 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Symbol, copy.Symbol)", prediction=72, span="86-86"];
m48_58 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="LatestPriceFillModel.cs", label="Assert.AreEqual(original.Type, copy.Type)", prediction=72, span="87-87"];
m48_39 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="var time = new DateTime(2000, 01, 02, 03, 04, 05, 06)", span="66-66"];
m48_41 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="Insight.Group(original)", span="68-68"];
m48_59 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="LatestPriceFillModel.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", span="64-64"];
m48_61 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", file="LatestPriceFillModel.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", span="91-91"];
m48_65 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", file="LatestPriceFillModel.cs", label="Assert.AreEqual(groupId, insight1.GroupId)", span="96-96"];
m48_66 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", file="LatestPriceFillModel.cs", label="Assert.AreEqual(groupId, insight2.GroupId)", span="97-97"];
m48_62 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", file="LatestPriceFillModel.cs", label="var insight1 = Insight.Price(Symbols.SPY, Time.OneMinute, InsightDirection.Up)", span="93-93"];
m48_64 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", file="LatestPriceFillModel.cs", label="var groupId = Insight.Group(insight1, insight2)", span="95-95"];
m48_63 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", file="LatestPriceFillModel.cs", label="var insight2 = Insight.Price(Symbols.SPY, Time.OneMinute, InsightDirection.Up)", span="94-94"];
m48_67 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", file="LatestPriceFillModel.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.InsightTests.GroupAssignsGroupId()", span="91-91"];
m48_77 [file="LatestPriceFillModel.cs", label=insight1, span=""];
m49_28 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m49_24 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m49_33 [cluster="Unk.AreEqual", file="LatestPriceFillModelTests.cs", label="Entry Unk.AreEqual", span=""];
m49_29 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m49_27 [cluster="Unk.AlwaysOpen", file="LatestPriceFillModelTests.cs", label="Entry Unk.AlwaysOpen", span=""];
m49_0 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", span="17-17"];
m49_1 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", file="LatestPriceFillModelTests.cs", label="_fillModel = new TestableLatestFillModel()", span="19-19"];
m49_2 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", file="LatestPriceFillModelTests.cs", label="Exit QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", span="17-17"];
m49_23 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m49_4 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", span="23-23"];
m49_5 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="var symbol = Symbol.Create(''BTCUSD'', SecurityType.Crypto, ''GDAX'')", prediction=85, span="25-25"];
m49_6 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="var time = new DateTime(2017, 1, 3, 0, 0, 0)", prediction=86, span="26-26"];
m49_10 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="var cryptoSecurity = new Security(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc),\r\n                                              new SubscriptionDataConfig(typeof(QuoteBar), symbol, Resolution.Second, TimeZones.Utc, TimeZones.Utc, true, true, false),\r\n                                              new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                                              SymbolProperties.GetDefault(CashBook.AccountCurrency))", prediction=87, span="32-35"];
m49_7 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="var nextTime = time.AddSeconds(1)", prediction=88, span="27-27"];
m49_11 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="cryptoSecurity.Cache.AddData(quote)", prediction=89, span="36-36"];
m49_12 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="cryptoSecurity.Cache.AddData(trade)", prediction=87, span="37-37"];
m49_13 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="var price = _fillModel.GetPrices(cryptoSecurity, OrderDirection.Sell)", prediction=91, span="39-39"];
m49_14 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="Assert.AreEqual(3, price.Open)", prediction=92, span="41-41"];
m49_15 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="Assert.AreEqual(3, price.High)", prediction=91, span="42-42"];
m49_16 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="Assert.AreEqual(3, price.Low)", prediction=91, span="43-43"];
m49_17 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="Assert.AreEqual(3, price.Close)", prediction=91, span="44-44"];
m49_18 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="LatestPriceFillModelTests.cs", label="Assert.AreEqual(3, price.Current)", prediction=91, span="45-45"];
m49_19 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", file="LatestPriceFillModelTests.cs", label="Exit QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", span="23-23"];
m49_32 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="51-51"];
m49_34 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="LatestPriceFillModelTests.cs", label="return base.GetPrices(asset, direction);", prediction=97, span="53-53"];
m49_35 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModelTests.cs", label="Exit QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="51-51"];
m49_36 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="35-35"];
m49_26 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m49_3 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.TestableLatestFillModel()", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.TestableLatestFillModel()", span="49-49"];
m49_20 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m49_25 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m49_21 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="LatestPriceFillModelTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m49_31 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="94-94"];
m49_30 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="LatestPriceFillModelTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m49_37 [file="LatestPriceFillModelTests.cs", label="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests", span=""];
m49_38 [file="LatestPriceFillModelTests.cs", label="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel", span=""];
m50_166 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m50_167 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, date, resolution, tickType));", span="345-345"];
m50_168 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m50_148 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="734-734"];
m50_344 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="bar == null", span="736-736"];
m50_346 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(bar.Open, bar.High, bar.Low, bar.Close);", span="741-741"];
m50_345 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="738-738"];
m50_347 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="734-734"];
m50_144 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.Scale(decimal)", span="694-694"];
m50_328 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="return (long)(value*10000);", span="696-696"];
m50_329 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.Scale(decimal)", span="694-694"];
m50_7 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m50_8 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var milliseconds = data.Time.TimeOfDay.TotalMilliseconds.ToString(CultureInfo.InvariantCulture)", span="52-52"];
m50_9 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var longTime = data.Time.ToString(DateFormat.TwelveCharacter)", span="53-53"];
m50_10 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=securityType, span="55-55"];
m50_12 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="58-58"];
m50_14 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick) data", span="61-61"];
m50_18 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bar = (TradeBar) data", span="66-66"];
m50_22 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigBar = (TradeBar) data", span="71-71"];
m50_25 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="77-77"];
m50_27 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = data as Tick", span="80-80"];
m50_37 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="94-94"];
m50_40 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="101-101"];
m50_46 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="110-110"];
m50_49 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="117-117"];
m50_55 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="132-132"];
m50_57 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = data as Tick", span="135-135"];
m50_63 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bar = data as QuoteBar", span="141-141"];
m50_69 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigBar = data as QuoteBar", span="149-149"];
m50_74 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="158-158"];
m50_76 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick)data", span="161-161"];
m50_85 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="181-181"];
m50_88 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="188-188"];
m50_91 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var openInterest = data as OpenInterest", span="194-194"];
m50_96 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="204-204"];
m50_99 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="211-211"];
m50_102 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigOpenInterest = data as OpenInterest", span="216-216"];
m50_105 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="224-224"];
m50_107 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="228-228"];
m50_109 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick)data", span="231-231"];
m50_118 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="251-251"];
m50_121 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="258-258"];
m50_124 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var openInterest = data as OpenInterest", span="264-264"];
m50_129 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="274-274"];
m50_132 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="281-281"];
m50_135 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigOpenInterest = data as OpenInterest", span="286-286"];
m50_138 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="294-294"];
m50_139 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''securityType'', securityType, null);", span="299-299"];
m50_140 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NotImplementedException(''LeanData.GenerateLine has not yet been implemented for security type: '' + securityType + '' at resolution: '' + resolution);", span="302-302"];
m50_15 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="62-62"];
m50_19 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close), bar.Volume);", span="67-67"];
m50_31 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.LastPrice, tick.Quantity);", span="85-85"];
m50_33 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize);", span="89-89"];
m50_39 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="97-99"];
m50_42 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="104-104"];
m50_60 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.AskPrice);", span="137-137"];
m50_66 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                ToNonScaledCsv(bar.Bid), bar.LastBidSize,\r\n                                ToNonScaledCsv(bar.Ask), bar.LastAskSize);", span="143-145"];
m50_78 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="164-165"];
m50_80 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.BidPrice), tick.BidSize, Scale(tick.AskPrice), tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="169-170"];
m50_82 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.Value);", span="174-174"];
m50_87 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="184-186"];
m50_90 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tradeBar.Open), Scale(tradeBar.High), Scale(tradeBar.Low), Scale(tradeBar.Close), tradeBar.Volume);", span="191-192"];
m50_93 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="197-197"];
m50_104 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, bigOpenInterest.Value);", span="219-219"];
m50_111 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tick.LastPrice, tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'': ''0'');", span="234-235"];
m50_113 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="239-240"];
m50_115 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.Value);", span="244-244"];
m50_120 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="254-256"];
m50_123 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="261-262"];
m50_126 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="267-267"];
m50_23 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, Scale(bigBar.Open), Scale(bigBar.High), Scale(bigBar.Low), Scale(bigBar.Close), bigBar.Volume);", span="72-72"];
m50_48 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="113-115"];
m50_51 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                             bigTradeBar.Open,\r\n                                             bigTradeBar.High,\r\n                                             bigTradeBar.Low,\r\n                                             bigTradeBar.Close,\r\n                                             bigTradeBar.Volume);", span="120-125"];
m50_72 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                ToNonScaledCsv(bigBar.Bid), bigBar.LastBidSize,\r\n                                ToNonScaledCsv(bigBar.Ask), bigBar.LastAskSize);", span="151-153"];
m50_98 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="207-209"];
m50_101 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, ToScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="214-214"];
m50_131 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="277-279"];
m50_134 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, ToNonScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="284-284"];
m50_137 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, bigOpenInterest.Value);", span="289-289"];
m50_11 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Equity", span="57-57"];
m50_24 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Crypto", span="76-76"];
m50_53 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Forex", span="130-130"];
m50_73 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Option", span="157-157"];
m50_106 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Future", span="227-227"];
m50_13 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="60-60"];
m50_16 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="64-64"];
m50_20 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="69-69"];
m50_17 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="65-65"];
m50_21 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="70-70"];
m50_26 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="79-79"];
m50_35 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="92-92"];
m50_44 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="108-108"];
m50_28 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick == null", span="81-81"];
m50_30 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="83-83"];
m50_32 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="87-87"];
m50_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto tick could not be created'');", span="81-81"];
m50_34 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentException(''Cryto tick could not be created'');", span="91-91"];
m50_36 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="93-93"];
m50_38 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="95-95"];
m50_41 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="102-102"];
m50_43 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto minute/second bar could not be created'');", span="106-106"];
m50_45 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="109-109"];
m50_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="111-111"];
m50_50 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="118-118"];
m50_52 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto hour/daily bar could not be created'');", span="127-127"];
m50_54 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Cfd", span="131-131"];
m50_56 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="134-134"];
m50_61 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="139-139"];
m50_67 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="147-147"];
m50_58 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick == null", span="136-136"];
m50_59 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''tick'');", span="136-136"];
m50_62 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="140-140"];
m50_64 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bar == null", span="142-142"];
m50_65 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''bar'');", span="142-142"];
m50_68 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="148-148"];
m50_70 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigBar == null", span="150-150"];
m50_71 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''big bar'');", span="150-150"];
m50_75 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="160-160"];
m50_83 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="178-178"];
m50_94 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="201-201"];
m50_77 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="162-162"];
m50_79 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="167-167"];
m50_81 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.OpenInterest", span="172-172"];
m50_84 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="179-179"];
m50_86 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="182-182"];
m50_89 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="189-189"];
m50_92 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="openInterest != null", span="195-195"];
m50_95 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="202-202"];
m50_97 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="205-205"];
m50_100 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="212-212"];
m50_103 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigOpenInterest != null", span="217-217"];
m50_108 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="230-230"];
m50_116 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="248-248"];
m50_127 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="271-271"];
m50_110 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="232-232"];
m50_112 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="237-237"];
m50_114 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.OpenInterest", span="242-242"];
m50_117 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="249-249"];
m50_119 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="252-252"];
m50_122 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="259-259"];
m50_125 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="openInterest != null", span="265-265"];
m50_128 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="272-272"];
m50_130 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="275-275"];
m50_133 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="282-282"];
m50_136 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigOpenInterest != null", span="287-287"];
m50_141 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m50_149 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="720-720"];
m50_340 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="bar == null", span="722-722"];
m50_342 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close));", span="727-727"];
m50_341 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="724-724"];
m50_343 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="720-720"];
m50_390 [cluster="string.GetExtension()", file="LeanData.cs", label="Entry string.GetExtension()", span="410-410"];
m50_400 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="LeanData.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m50_387 [cluster="System.Enum.GetNames(System.Type)", file="LeanData.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m50_145 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToCsv(params object[])", span="702-702"];
m50_330 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="var i = 0", span="705-705"];
m50_331 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="i < args.Length", span="705-705"];
m50_332 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="var value = args[i]", span="707-707"];
m50_334 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="args[i] = ((decimal) value).Normalize().ToString(CultureInfo.InvariantCulture)", span="710-710"];
m50_336 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="return string.Join('','', args);", span="714-714"];
m50_335 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="i++", span="705-705"];
m50_333 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="value is decimal", span="708-708"];
m50_337 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToCsv(params object[])", span="702-702"];
m50_152 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m50_153 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Tick", span="313-313"];
m50_155 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="tickType == TickType.OpenInterest", span="314-314"];
m50_157 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="tickType == TickType.Quote", span="315-315"];
m50_154 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(Tick);", span="313-313"];
m50_156 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(OpenInterest);", span="314-314"];
m50_158 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(QuoteBar);", span="315-315"];
m50_159 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(TradeBar);", span="316-316"];
m50_160 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m50_320 [cluster="string.Split(params char[])", file="LeanData.cs", label="Entry string.Split(params char[])", span="0-0"];
m50_355 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(ZipEntryName)", span="765-765"];
m50_348 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="751-751"];
m50_349 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(TradeBar)", span="753-753"];
m50_351 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(QuoteBar)", span="757-757"];
m50_353 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(OpenInterest)", span="761-761"];
m50_357 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(Tick)", span="769-769"];
m50_358 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="771-771"];
m50_350 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="755-755"];
m50_352 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="759-759"];
m50_354 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.OpenInterest;", span="763-763"];
m50_356 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="767-767"];
m50_360 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="777-777"];
m50_359 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="773-773"];
m50_361 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="751-751"];
m50_151 [cluster="System.NotImplementedException.NotImplementedException(string)", file="LeanData.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m50_338 [cluster="decimal.Normalize()", file="LeanData.cs", label="Entry decimal.Normalize()", span="234-234"];
m50_205 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="538-538"];
m50_251 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var tickTypeString = tickType.ToLower()", span="540-540"];
m50_252 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="541-541"];
m50_253 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="542-542"];
m50_254 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol.ID.SecurityType", span="544-544"];
m50_260 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}.zip'',\r\n                            symbol.Value.ToLower()\r\n                            );", span="552-554"];
m50_264 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.Value.ToLower(),\r\n                            tickTypeString\r\n                        );", span="564-567"];
m50_268 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}.zip'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickTypeString,\r\n                            symbol.ID.OptionStyle.ToLower()\r\n                            );", span="577-581"];
m50_269 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString,\r\n                        symbol.ID.OptionStyle.ToLower()\r\n                        );", span="584-588"];
m50_272 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickTypeString);", span="593-595"];
m50_261 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString\r\n                        );", span="557-560"];
m50_265 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString\r\n                    );", span="570-573"];
m50_273 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString);", span="598-600"];
m50_259 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="550-550"];
m50_263 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="562-562"];
m50_267 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="575-575"];
m50_271 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="591-591"];
m50_255 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Base", span="546-546"];
m50_262 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Crypto", span="561-561"];
m50_266 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Option", span="574-574"];
m50_270 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Future", span="590-590"];
m50_274 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Commodity", span="602-602"];
m50_256 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Equity", span="547-547"];
m50_257 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Forex", span="548-548"];
m50_258 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Cfd", span="549-549"];
m50_275 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="604-604"];
m50_276 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="538-538"];
m50_407 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="811-811"];
m50_401 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="794-794"];
m50_408 [cluster="lambda expression", file="LeanData.cs", label="securityTypes.Contains(x.ToLower())", span="811-811"];
m50_405 [cluster="lambda expression", file="LeanData.cs", label="x == fileName.First()", span="802-802"];
m50_404 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="802-802"];
m50_402 [cluster="lambda expression", file="LeanData.cs", label="x.ToLower()", span="794-794"];
m50_403 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="794-794"];
m50_406 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="802-802"];
m50_409 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="811-811"];
m50_150 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="LeanData.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m50_397 [cluster="string.Substring(int, int)", file="LeanData.cs", label="Entry string.Substring(int, int)", span="0-0"];
m50_325 [cluster="QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", file="LeanData.cs", label="Entry QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", span="29-29"];
m50_146 [cluster="System.NullReferenceException.NullReferenceException(string)", file="LeanData.cs", label="Entry System.NullReferenceException.NullReferenceException(string)", span="0-0"];
m50_202 [cluster="System.IO.Path.Combine(params string[])", file="LeanData.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m50_362 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="787-787"];
m50_363 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="symbol = null", span="789-789"];
m50_368 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName = fileName.Replace(fileName.GetExtension(), '''')", span="799-799"];
m50_364 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution = Resolution.Daily", span="790-790"];
m50_365 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="date = default(DateTime)", span="791-791"];
m50_366 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var pathSeparators = new[] { '/', '\\'}", span="793-793"];
m50_367 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var securityTypes = Enum.GetNames(typeof(SecurityType)).Select(x => x.ToLower()).ToList()", span="794-794"];
m50_369 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName.First() == '.' || pathSeparators.Any(x => x == fileName.First())", span="802-802"];
m50_371 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var info = fileName.Split(pathSeparators, StringSplitOptions.RemoveEmptyEntries).ToList()", span="808-808"];
m50_372 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var startIndex = info.FindIndex(x => securityTypes.Contains(x.ToLower()))", span="811-811"];
m50_370 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName = fileName.Remove(0, 1)", span="804-804"];
m50_383 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Log.Error(''LeanData.TryParsePath(): Error encountered while parsing the path {0}. Error: {1}'', fileName, ex.GetBaseException())", span="834-834"];
m50_373 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var market = info[startIndex + 1]", span="814-814"];
m50_374 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var ticker = info[startIndex + 3]", span="815-815"];
m50_375 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution = (Resolution)Enum.Parse(typeof(Resolution), info[startIndex + 2], true)", span="816-816"];
m50_376 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var securityType = (SecurityType)Enum.Parse(typeof(SecurityType), info[startIndex], true)", span="817-817"];
m50_380 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="date = DateTime.ParseExact(info[startIndex + 4].Substring(0, 8), DateFormat.EightCharacter, null)", span="827-827"];
m50_381 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="symbol = Symbol.Create(ticker, securityType, market)", span="830-830"];
m50_379 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution < Resolution.Hour", span="825-825"];
m50_377 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="securityType == SecurityType.Option || securityType == SecurityType.Future", span="819-819"];
m50_378 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentException(''LeanData.TryParsePath(): Options and futures are not supported by this method.'');", span="821-821"];
m50_382 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label=Exception, span="832-832"];
m50_385 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="return true;", span="838-838"];
m50_384 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="return false;", span="835-835"];
m50_386 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="787-787"];
m50_143 [cluster="System.DateTime.ToString(string)", file="LeanData.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m50_250 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="512-512"];
m50_241 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="512-512"];
m50_242 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="securityType != SecurityType.Base && securityType != SecurityType.Equity && securityType != SecurityType.Forex && securityType != SecurityType.Cfd && securityType != SecurityType.Crypto", span="514-514"];
m50_244 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol = symbol.ToLower()", span="519-519"];
m50_245 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="521-521"];
m50_247 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="527-527"];
m50_249 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'', date.ToString(DateFormat.EightCharacter), symbol, resolution.ToLower(), dataType.ToLower());", span="532-532"];
m50_243 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new NotImplementedException(''This method only implements base, equity, forex, crypto and cfd security type.'');", span="516-516"];
m50_246 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return symbol + ''.csv'';", span="523-523"];
m50_248 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="dataType = TickType.Quote", span="529-529"];
m50_195 [cluster="System.Enum.ToLower()", file="LeanData.cs", label="Entry System.Enum.ToLower()", span="908-908"];
m50_398 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m50_196 [cluster="string.ToLower()", file="LeanData.cs", label="Entry string.ToLower()", span="0-0"];
m50_147 [cluster="System.ArgumentException.ArgumentException(string)", file="LeanData.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m50_5 [cluster="QuantConnect.Data.IBaseData.Clone()", file="LeanData.cs", label="Entry QuantConnect.Data.IBaseData.Clone()", span="99-99"];
m50_171 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m50_172 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, securityType, market, date, resolution));", span="353-353"];
m50_173 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m50_323 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanData.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m50_339 [cluster="decimal.ToString(System.IFormatProvider)", file="LeanData.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m50_399 [cluster="System.Exception.GetBaseException()", file="LeanData.cs", label="Entry System.Exception.GetBaseException()", span="0-0"];
m50_211 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="611-611"];
m50_279 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="613-613"];
m50_280 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="return symbol.ToLower() + ''.zip'';", span="615-615"];
m50_281 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="var zipFileName = date.ToString(DateFormat.EightCharacter)", span="618-618"];
m50_282 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="tickType = tickType ?? (securityType == SecurityType.Forex || securityType == SecurityType.Cfd ? TickType.Quote : TickType.Trade)", span="619-619"];
m50_284 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="return zipFileName + suffix;", span="621-621"];
m50_283 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="var suffix = string.Format(''_{0}.zip'', tickType.Value.ToLower())", span="620-620"];
m50_285 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="611-611"];
m50_238 [cluster="string.Format(string, object)", file="LeanData.cs", label="Entry string.Format(string, object)", span="0-0"];
m50_322 [cluster="decimal.Parse(string)", file="LeanData.cs", label="Entry decimal.Parse(string)", span="0-0"];
m50_319 [cluster="string.Replace(string, string)", file="LeanData.cs", label="Entry string.Replace(string, string)", span="0-0"];
m50_327 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="147-147"];
m50_395 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m50_318 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="645-645"];
m50_291 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="645-645"];
m50_292 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var isHourlyOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="647-647"];
m50_293 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var parts = zipEntryName.Replace(''.csv'', string.Empty).Split('_')", span="648-648"];
m50_294 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="symbol.ID.SecurityType", span="649-649"];
m50_296 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label=isHourlyOrDaily, span="652-652"];
m50_308 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label=isHourlyOrDaily, span="671-671"];
m50_297 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[2], true)", span="654-654"];
m50_298 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[3], true)", span="655-655"];
m50_299 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var strike = decimal.Parse(parts[4]) / 10000m", span="656-656"];
m50_300 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiry = DateTime.ParseExact(parts[5], DateFormat.EightCharacter, null)", span="657-657"];
m50_302 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[4], true)", span="662-662"];
m50_303 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[5], true)", span="663-663"];
m50_304 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var strike = decimal.Parse(parts[6]) / 10000m", span="664-664"];
m50_305 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiry = DateTime.ParseExact(parts[7], DateFormat.EightCharacter, null)", span="665-665"];
m50_309 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[2], DateFormat.YearMonth, null)", span="673-673"];
m50_310 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="674-674"];
m50_313 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[4], DateFormat.YearMonth, null)", span="680-680"];
m50_314 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="681-681"];
m50_295 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="SecurityType.Option", span="651-651"];
m50_307 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="SecurityType.Future", span="670-670"];
m50_311 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="675-675"];
m50_315 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="682-682"];
m50_6 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="LeanData.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m50_240 [cluster="string.Join(string, params string[])", file="LeanData.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m50_392 [cluster="Unk.Any", file="LeanData.cs", label="Entry Unk.Any", span=""];
m50_170 [cluster="System.IO.Path.Combine(string, string)", file="LeanData.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m50_161 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="327-327"];
m50_162 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="baseDataType == typeof(TradeBar) ||\r\n                baseDataType == typeof(QuoteBar) ||\r\n                baseDataType == typeof(OpenInterest)", span="329-331"];
m50_163 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="return true;", span="333-333"];
m50_164 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="return false;", span="336-336"];
m50_165 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="327-327"];
m50_199 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m50_200 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="return Path.Combine(Globals.DataFolder,\r\n                                        ''equity'',\r\n                                        symbol.ID.Market,\r\n                                        ''factor_files'',\r\n                                        symbol.Value.ToLower() + ''.csv'');", span="393-397"];
m50_201 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m50_394 [cluster="string.Split(char[], System.StringSplitOptions)", file="LeanData.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m50_174 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="411-411"];
m50_206 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="var directory = Path.Combine(securityType.ToLower(), market.ToLower(), resolution.ToLower())", span="413-413"];
m50_207 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="resolution != Resolution.Daily && resolution != Resolution.Hour", span="414-414"];
m50_208 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="directory = Path.Combine(directory, symbol.ToLower())", span="416-416"];
m50_209 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="return Path.Combine(directory, GenerateZipFileName(symbol, securityType, date, resolution));", span="419-419"];
m50_210 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="411-411"];
m50_237 [cluster="string.Format(string, params object[])", file="LeanData.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m50_278 [cluster="string.Format(string, object, object, object)", file="LeanData.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m50_0 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40"];
m50_1 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="var clone = data.Clone()", span="42-42"];
m50_2 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="clone.Time = data.Time.ConvertTo(exchangeTimeZone, dataTimeZone)", span="43-43"];
m50_3 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="return GenerateLine(clone, clone.Symbol.ID.SecurityType, resolution);", span="44-44"];
m50_4 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40"];
m50_326 [cluster="System.Func<T, TResult>.Invoke(T)", file="LeanData.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m50_198 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="LeanData.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m50_393 [cluster="string.Remove(int, int)", file="LeanData.cs", label="Entry string.Remove(int, int)", span="0-0"];
m50_169 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m50_203 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return Path.Combine(GenerateRelativeZipFileDirectory(symbol, resolution), GenerateZipFileName(symbol, date, resolution, tickType));", span="405-405"];
m50_204 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m50_277 [cluster="string.Format(string, object, object)", file="LeanData.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m50_236 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m50_212 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m50_213 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="427-427"];
m50_214 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="428-428"];
m50_215 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol.ID.SecurityType", span="430-430"];
m50_221 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Tick && symbol.SecurityType == SecurityType.Equity", span="437-437"];
m50_222 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                            formattedDate,\r\n                            symbol.Value.ToLower(),\r\n                            tickType,\r\n                            resolution\r\n                        );", span="439-444"];
m50_224 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}.csv'',\r\n                            symbol.Value.ToLower()\r\n                            );", span="449-451"];
m50_225 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                        formattedDate,\r\n                        symbol.Value.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower()\r\n                        );", span="454-459"];
m50_228 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickType.ToLower(),\r\n                            symbol.ID.OptionStyle.ToLower(),\r\n                            symbol.ID.OptionRight.ToLower(),\r\n                            Scale(symbol.ID.StrikePrice),\r\n                            symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                            ) + ''.csv'';", span="464-471"];
m50_229 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.Underlying.Value.ToLower(), // underlying\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.OptionStyle.ToLower(),\r\n                        symbol.ID.OptionRight.ToLower(),\r\n                        Scale(symbol.ID.StrikePrice),\r\n                        symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                        ) + ''.csv'';", span="474-483"];
m50_232 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickType.ToLower(),\r\n                            symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                            ) + ''.csv'';", span="488-492"];
m50_233 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.ID.Symbol.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                        ) + ''.csv'';", span="495-501"];
m50_223 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="447-447"];
m50_227 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="462-462"];
m50_231 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="486-486"];
m50_216 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Base", span="432-432"];
m50_226 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Option", span="461-461"];
m50_230 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Future", span="485-485"];
m50_234 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Commodity", span="503-503"];
m50_217 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Equity", span="433-433"];
m50_218 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Forex", span="434-434"];
m50_219 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Cfd", span="435-435"];
m50_220 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Crypto", span="436-436"];
m50_235 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="505-505"];
m50_175 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="359-359"];
m50_176 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="361-361"];
m50_177 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var securityType = symbol.ID.SecurityType.ToLower()", span="362-362"];
m50_178 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var market = symbol.ID.Market.ToLower()", span="363-363"];
m50_179 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var res = resolution.ToLower()", span="364-364"];
m50_181 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="symbol.ID.SecurityType", span="366-366"];
m50_187 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Value.ToLower()) : directory;", span="373-373"];
m50_189 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Underlying.Value.ToLower()) : directory;", span="377-377"];
m50_191 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.ID.Symbol.ToLower()) : directory;", span="380-380"];
m50_180 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var directory = Path.Combine(securityType, market, res)", span="365-365"];
m50_182 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Base", span="368-368"];
m50_188 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Option", span="375-375"];
m50_190 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Future", span="379-379"];
m50_192 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Commodity", span="382-382"];
m50_183 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Equity", span="369-369"];
m50_184 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Forex", span="370-370"];
m50_185 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Cfd", span="371-371"];
m50_186 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Crypto", span="372-372"];
m50_193 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="384-384"];
m50_194 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="359-359"];
m50_396 [cluster="System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", span="0-0"];
m50_410 [cluster="Unk.Contains", file="LeanData.cs", label="Entry Unk.Contains", span=""];
m50_286 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="629-629"];
m50_287 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="631-631"];
m50_288 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="633-633"];
m50_289 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="635-635"];
m50_290 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="629-629"];
m50_321 [cluster="System.Enum.Parse(System.Type, string, bool)", file="LeanData.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m50_391 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m50_142 [cluster="double.ToString(System.IFormatProvider)", file="LeanData.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m50_324 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="119-119"];
m50_388 [cluster="Unk.Select", file="LeanData.cs", label="Entry Unk.Select", span=""];
m50_239 [cluster="string.Join(string, params object[])", file="LeanData.cs", label="Entry string.Join(string, params object[])", span="0-0"];
m50_197 [cluster="System.IO.Path.Combine(string, string, string)", file="LeanData.cs", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
m50_411 [file="LeanData.cs", label=string, span=""];
m50_412 [file="LeanData.cs", label=securityTypes, span=""];
m51_24 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", span="126-126"];
m51_12 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="LeanDataPathComponentsTests.cs", label="var resolutions = Enum.GetValues(typeof (Resolution)).Cast<Resolution>()", span="38-38"];
m51_13 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="LeanDataPathComponentsTests.cs", label="var securityTypes = Enum.GetValues(typeof (SecurityType)).Cast<SecurityType>()", span="39-39"];
m51_14 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="LeanDataPathComponentsTests.cs", label="var markets = typeof (Market).GetFields().Where(f => f.IsLiteral && !f.IsInitOnly)\r\n                .Select(f => (string) f.GetValue(null))", span="40-41"];
m51_15 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", color=green, community=0, file="LeanDataPathComponentsTests.cs", label="var results = (\r\n                from securityType in securityTypes\r\n                from market in markets\r\n                from resolution in resolutions\r\n                from tickType in tickTypes\r\n                let date = resolution == Resolution.Hour || resolution == Resolution.Daily ? DateTime.MinValue : referenceDate\r\n                let name = string.Format(''{0}-{1}-{2}-{3}'', securityType.ToLower(), market.ToLower(), resolution.ToLower(), tickType.ToLower())\r\n                where TryInvoke(() => Symbol.Create(name, securityType, market))\r\n                let symbol = securityType != SecurityType.Option\r\n                    ? Symbol.Create(name, securityType, market)\r\n                    : Symbol.CreateOption(name, market, OptionStyle.American, OptionRight.Put, 0, SecurityIdentifier.DefaultDate)\r\n                select new TestCaseData(new Arguments(symbol, date, resolution, market, tickType))\r\n                                .SetName(name)\r\n                ).ToArray()", prediction=98, span="43-56"];
m51_16 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="LeanDataPathComponentsTests.cs", label="return results;", span="58-58"];
m51_17 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", span="33-33"];
m51_18 [cluster="System.DateTime.DateTime(int, int, int)", file="LeanDataPathComponentsTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m51_19 [cluster="System.Enum.GetValues(System.Type)", file="LeanDataPathComponentsTests.cs", label="Entry System.Enum.GetValues(System.Type)", span="0-0"];
m51_20 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="LeanDataPathComponentsTests.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m51_21 [cluster="System.Type.GetFields()", file="LeanDataPathComponentsTests.cs", label="Entry System.Type.GetFields()", span="0-0"];
m51_22 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="105-105"];
m51_52 [cluster="string.Split(params char[])", file="LeanDataPathComponentsTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m51_67 [cluster="System.Convert.ToInt32(string)", file="LeanDataPathComponentsTests.cs", label=market, span=""];
m51_33 [cluster="lambda expression", file="LeanDataPathComponentsTests.cs", label="Entry lambda expression", span="40-40"];
m51_34 [cluster="lambda expression", file="LeanDataPathComponentsTests.cs", label="f.IsLiteral && !f.IsInitOnly", span="40-40"];
m51_35 [cluster="lambda expression", file="LeanDataPathComponentsTests.cs", label="Exit lambda expression", span="40-40"];
m51_36 [cluster="lambda expression", file="LeanDataPathComponentsTests.cs", label="Entry lambda expression", span="41-41"];
m51_37 [cluster="lambda expression", file="LeanDataPathComponentsTests.cs", label="(string) f.GetValue(null)", span="41-41"];
m51_39 [cluster="Unk.GetValue", file="LeanDataPathComponentsTests.cs", label="Entry Unk.GetValue", span=""];
m51_40 [cluster="lambda expression", file="LeanDataPathComponentsTests.cs", label="Entry lambda expression", span="50-50"];
m51_38 [cluster="lambda expression", file="LeanDataPathComponentsTests.cs", label="Exit lambda expression", span="41-41"];
m51_41 [cluster="lambda expression", file="LeanDataPathComponentsTests.cs", label="Symbol.Create(name, securityType, market)", span="50-50"];
m51_32 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", span="126-126"];
m51_23 [cluster="Unk.Select", file="LeanDataPathComponentsTests.cs", label="Entry Unk.Select", span=""];
m51_55 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", span="180-180"];
m51_56 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="var csv = line.Split(',')", span="182-182"];
m51_58 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Symbol = symbol", span="184-184"];
m51_59 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="LeanDataPathComponentsTests.cs", label="action()", span="82-82"];
m51_57 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="DataType = MarketDataType.Tick", span="183-183"];
m51_60 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="LeanDataPathComponentsTests.cs", label="return true;", span="83-83"];
m51_62 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", span="78-78"];
m51_63 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="LeanDataPathComponentsTests.cs", label="return false;", span="87-87"];
m51_64 [cluster="System.Action.Invoke()", file="LeanDataPathComponentsTests.cs", label="Entry System.Action.Invoke()", span="0-0"];
m51_65 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Suspicious = Convert.ToInt32(csv[5]) == 1", span="191-191"];
m51_61 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="LeanDataPathComponentsTests.cs", label="throw;", span="88-88"];
m51_66 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label=securityType, span=""];
m51_103 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="267-267"];
m51_104 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="var dataType = TickType.Trade", span="269-269"];
m51_105 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label=isLiveMode, span="271-271"];
m51_108 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="config.SecurityType == SecurityType.Forex", span="278-278"];
m51_111 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="var symbol = string.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol", span="284-284"];
m51_112 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="var securityType = config.SecurityType.ToString().ToLower()", span="285-285"];
m51_113 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="var market = config.Market.ToLower()", span="286-286"];
m51_114 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="var resolution = config.Resolution.ToString().ToLower()", span="287-287"];
m51_115 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="var file = date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="288-288"];
m51_106 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="274-274"];
m51_107 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="var dateFormat = ''yyyyMMdd''", span="277-277"];
m51_109 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="dataType = TickType.Quote", span="280-280"];
m51_110 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="string source", span="283-283"];
m51_116 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="source = Path.Combine(Constants.DataFolder, securityType, market, resolution, symbol.ToLower(), file)", span="291-291"];
m51_117 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile);", span="293-293"];
m51_118 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="267-267"];
m51_42 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(string, string)", span="162-162"];
m51_68 [cluster="System.DateTime.AddMilliseconds(double)", file="LeanDataPathComponentsTests.cs", label=name, span=""];
m51_97 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m51_98 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="249-249"];
m51_99 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label=isLiveMode, span="251-251"];
m51_101 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="return new Tick(config, line, date);", span="257-257"];
m51_100 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="return new Tick();", span="254-254"];
m51_102 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="249-249"];
m51_124 [cluster="System.IO.Path.Combine(params string[])", file="LeanDataPathComponentsTests.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m51_27 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="Symbol = symbol", span="130-130"];
m51_25 [cluster="string.Format(string, params object[])", file="LeanDataPathComponentsTests.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m51_26 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", span="78-78"];
m51_28 [cluster="Unk.CreateOption", file="LeanDataPathComponentsTests.cs", label="Entry Unk.CreateOption", span=""];
m51_30 [cluster="Arguments.cstr", file="LeanDataPathComponentsTests.cs", label="Entry Arguments.cstr", span=""];
m51_31 [cluster="Unk.SetName", file="LeanDataPathComponentsTests.cs", label="Entry Unk.SetName", span=""];
m51_29 [cluster="TestCaseData.cstr", file="LeanDataPathComponentsTests.cs", label="Entry TestCaseData.cstr", span=""];
m51_123 [cluster="System.DateTime.ToString(string)", file="LeanDataPathComponentsTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m51_125 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="304-304"];
m51_126 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="Value = lastTrade", span="306-306"];
m51_127 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="BidPrice = bidPrice", span="307-307"];
m51_128 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="AskPrice = askPrice", span="308-308"];
m51_129 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="Quantity = Convert.ToInt32(volume)", span="309-309"];
m51_130 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="304-304"];
m51_71 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="201-201"];
m51_72 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="var csv = line.Split(',')", span="205-205"];
m51_74 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="config.SecurityType", span="209-209"];
m51_76 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Symbol = config.Symbol", span="212-212"];
m51_77 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Time = date.Date.AddMilliseconds(Convert.ToInt64(csv[0]))", span="213-213"];
m51_78 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Value = config.GetNormalizedPrice(csv[1].ToDecimal() / 10000m)", span="214-214"];
m51_86 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Symbol = config.Symbol", span="226-226"];
m51_88 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Time = date.Date.AddMilliseconds(Convert.ToInt64(csv[0]))", span="228-228"];
m51_73 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="DataType = MarketDataType.Tick", span="206-206"];
m51_80 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Quantity = Convert.ToInt32(csv[2])", span="216-216"];
m51_81 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="csv.Length > 3", span="217-217"];
m51_82 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Exchange = csv[3]", span="219-219"];
m51_83 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="SaleCondition = csv[4]", span="220-220"];
m51_84 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Suspicious = (csv[5] == ''1'')", span="221-221"];
m51_89 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="BidPrice = csv[1].ToDecimal()", span="229-229"];
m51_90 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="AskPrice = csv[2].ToDecimal()", span="230-230"];
m51_75 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="SecurityType.Equity", span="211-211"];
m51_85 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="SecurityType.Forex", span="225-225"];
m51_79 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="TickType = TickType.Trade", span="215-215"];
m51_92 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label=Exception, span="235-235"];
m51_87 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="TickType = TickType.Quote", span="227-227"];
m51_91 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="231-231"];
m51_93 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Log.Error(''Error Generating Tick: '' + err.Message)", span="237-237"];
m51_94 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="201-201"];
m51_96 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="182-182"];
m51_122 [cluster="string.ToLower()", file="LeanDataPathComponentsTests.cs", label="Entry string.ToLower()", span="0-0"];
m51_53 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanDataPathComponentsTests.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m51_132 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="315-315"];
m51_133 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="LeanDataPathComponentsTests.cs", label="return (TickType == TickType.Trade && LastPrice > 0.0m && Quantity > 0) ||\r\n                   (TickType == TickType.Quote && AskPrice > 0.0m && Quantity > 0) ||\r\n                   (TickType == TickType.Quote && BidPrice > 0.0m && Quantity > 0);", span="317-319"];
m51_134 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.IsValid()", span="315-315"];
m51_119 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="39-39"];
m51_121 [cluster="System.Enum.ToString()", file="LeanDataPathComponentsTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m51_9 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="Suspicious = false", span="98-98"];
m51_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.Tick()", span="88-88"];
m51_11 [cluster="System.DateTime.DateTime()", file="LeanDataPathComponentsTests.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m51_69 [cluster="string.ToDecimal()", file="LeanDataPathComponentsTests.cs", label="Entry string.ToDecimal()", span="145-145"];
m51_131 [cluster="System.Convert.ToInt32(decimal)", file="LeanDataPathComponentsTests.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m51_95 [cluster="System.Convert.ToInt64(string)", file="LeanDataPathComponentsTests.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m51_70 [cluster="string.Trim()", file="LeanDataPathComponentsTests.cs", label="Entry string.Trim()", span="0-0"];
m51_120 [cluster="string.IsNullOrEmpty(string)", file="LeanDataPathComponentsTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m51_43 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="var csv = line.Split(',')", span="164-164"];
m51_45 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="Symbol = symbol", span="166-166"];
m51_44 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="DataType = MarketDataType.Tick", span="165-165"];
m51_46 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="Time = DateTime.ParseExact(csv[0], DateFormat.Forex, CultureInfo.InvariantCulture)", span="167-167"];
m51_49 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="170-170"];
m51_50 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="AskPrice = Convert.ToDecimal(csv[2], CultureInfo.InvariantCulture)", span="171-171"];
m51_47 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="168-168"];
m51_48 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="TickType = TickType.Quote", span="169-169"];
m51_51 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(string, string)", span="162-162"];
m51_0 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="88-88"];
m51_1 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="Value = 0", span="90-90"];
m51_2 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="Time = new DateTime()", span="91-91"];
m51_3 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="DataType = MarketDataType.Tick", span="92-92"];
m51_4 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="Symbol = ''''", span="93-93"];
m51_5 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="TickType = TickType.Trade", span="94-94"];
m51_6 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="Quantity = 0", span="95-95"];
m51_7 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="Exchange = ''''", span="96-96"];
m51_8 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataPathComponentsTests.cs", label="SaleCondition = ''''", span="97-97"];
m51_135 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="LeanDataPathComponentsTests.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="326-326"];
m51_136 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="LeanDataPathComponentsTests.cs", label="return new Tick(this);", span="328-328"];
m51_137 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="LeanDataPathComponentsTests.cs", label="Exit QuantConnect.Data.Market.Tick.Clone()", span="326-326"];
m51_54 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="LeanDataPathComponentsTests.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m51_138 [file="LeanDataPathComponentsTests.cs", label="QuantConnect.Data.Market.Tick", span=""];
m52_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", file="Loader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", span="57-57"];
m52_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", file="Loader.cs", label="TickerId = tickerId", span="59-59"];
m52_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", file="Loader.cs", label="Position = position", span="60-60"];
m52_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", file="Loader.cs", label="Operation = operation", span="61-61"];
m52_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", file="Loader.cs", label="Side = side", span="62-62"];
m52_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", file="Loader.cs", label="Price = price", span="63-63"];
m52_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", file="Loader.cs", label="Size = size", span="64-64"];
m52_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", file="Loader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs.UpdateMarketDepthEventArgs(int, int, int, int, double, int)", span="57-57"];
m52_8 [file="Loader.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateMarketDepthEventArgs", span=""];
m53_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ManagedAccountsEventArgs.ManagedAccountsEventArgs(string)", file="MarginCallModelTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ManagedAccountsEventArgs.ManagedAccountsEventArgs(string)", span="32-32"];
m53_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ManagedAccountsEventArgs.ManagedAccountsEventArgs(string)", file="MarginCallModelTests.cs", label="AccountsList = accountsList", span="34-34"];
m53_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ManagedAccountsEventArgs.ManagedAccountsEventArgs(string)", file="MarginCallModelTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ManagedAccountsEventArgs.ManagedAccountsEventArgs(string)", span="32-32"];
m53_3 [file="MarginCallModelTests.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ManagedAccountsEventArgs", span=""];
m55_447 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="884-884"];
m55_449 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="887-887"];
m55_450 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="889-889"];
m55_453 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50m)", span="895-895"];
m55_448 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="886-886"];
m55_451 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="891-891"];
m55_452 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="892-892"];
m55_454 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="900-900"];
m55_455 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="903-903"];
m55_456 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(2500, actual)", span="906-906"];
m55_457 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="884-884"];
m55_437 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="863-863"];
m55_439 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="866-866"];
m55_440 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="868-868"];
m55_443 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50m)", span="874-874"];
m55_438 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="865-865"];
m55_441 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="870-870"];
m55_442 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="871-871"];
m55_444 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="877-877"];
m55_445 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(2500, actual)", span="880-880"];
m55_446 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="863-863"];
m55_346 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="658-658"];
m55_348 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="661-661"];
m55_349 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="663-663"];
m55_352 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="670-670"];
m55_347 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="660-660"];
m55_350 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="666-666"];
m55_351 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="667-667"];
m55_353 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="674-674"];
m55_354 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-500, actual)", span="677-677"];
m55_355 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="658-658"];
m55_426 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="837-837"];
m55_428 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="840-840"];
m55_429 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="842-842"];
m55_432 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="848-848"];
m55_427 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="839-839"];
m55_430 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="844-844"];
m55_431 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="845-845"];
m55_433 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="853-853"];
m55_434 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="856-856"];
m55_435 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(1250, actual)", span="859-859"];
m55_436 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="837-837"];
m55_479 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m55_584 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="409-409"];
m55_237 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="464-464"];
m55_239 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="467-467"];
m55_240 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="469-469"];
m55_238 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="466-466"];
m55_241 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="471-471"];
m55_242 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="472-472"];
m55_243 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="474-474"];
m55_244 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(4000, actual)", span="475-475"];
m55_245 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="464-464"];
m55_553 [cluster="Mock<IOrderProcessor>.cstr", file="MovingAverageConvergenceDivergence.cs", label="Entry Mock<IOrderProcessor>.cstr", span=""];
m55_147 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="292-292"];
m55_149 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="295-295"];
m55_150 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="297-297"];
m55_148 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="294-294"];
m55_151 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="299-299"];
m55_152 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="300-300"];
m55_153 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="303-303"];
m55_154 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-3600, actual)", span="304-304"];
m55_155 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="292-292"];
m55_563 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="84-84"];
m55_591 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="847-847"];
m55_559 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="39-39"];
m55_596 [cluster="Unk.Process", file="MovingAverageConvergenceDivergence.cs", label="Entry Unk.Process", span=""];
m55_416 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="816-816"];
m55_418 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="819-819"];
m55_419 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="821-821"];
m55_422 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="827-827"];
m55_417 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="818-818"];
m55_420 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="823-823"];
m55_421 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="824-824"];
m55_423 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="830-830"];
m55_424 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-3500, actual)", span="833-833"];
m55_425 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="816-816"];
m55_583 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="396-396"];
m55_356 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="681-681"];
m55_358 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="684-684"];
m55_359 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="686-686"];
m55_362 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="693-693"];
m55_357 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="683-683"];
m55_360 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="689-689"];
m55_361 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="690-690"];
m55_363 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="697-697"];
m55_364 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-499, actual)", span="700-700"];
m55_365 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="681-681"];
m55_102 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="215-215"];
m55_104 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="218-218"];
m55_105 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="220-220"];
m55_103 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="217-217"];
m55_106 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="222-222"];
m55_107 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="223-223"];
m55_108 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="225-225"];
m55_109 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-2000, actual)", span="226-226"];
m55_110 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="215-215"];
m55_219 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="422-422"];
m55_221 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="425-425"];
m55_222 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="427-427"];
m55_220 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="424-424"];
m55_223 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="429-429"];
m55_224 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="430-430"];
m55_225 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="438-438"];
m55_226 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-999, actual)", span="439-439"];
m55_227 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="422-422"];
m55_9 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="MovingAverageConvergenceDivergence.cs", label="Fast.Update(input)", span="81-81"];
m55_406 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="793-793"];
m55_408 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="796-796"];
m55_409 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="798-798"];
m55_412 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="805-805"];
m55_407 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="795-795"];
m55_410 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(25000)", span="801-801"];
m55_411 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="802-802"];
m55_413 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="809-809"];
m55_414 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-1250, actual)", span="812-812"];
m55_415 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="793-793"];
m55_396 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="771-771"];
m55_398 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="774-774"];
m55_399 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="776-776"];
m55_402 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="782-782"];
m55_397 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="773-773"];
m55_400 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="778-778"];
m55_401 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="779-779"];
m55_403 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="786-786"];
m55_404 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(50, actual)", span="789-789"];
m55_405 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="771-771"];
m55_481 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1025-1025"];
m55_301 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="573-573"];
m55_303 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="576-576"];
m55_304 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="578-578"];
m55_302 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="575-575"];
m55_305 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="580-580"];
m55_306 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="581-581"];
m55_307 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="584-584"];
m55_308 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-5999, actual)", span="585-585"];
m55_309 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="573-573"];
m55_605 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m55_55 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m55_589 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="834-834"];
m55_246 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="479-479"];
m55_248 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="482-482"];
m55_249 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="484-484"];
m55_247 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="481-481"];
m55_250 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="486-486"];
m55_251 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="487-487"];
m55_252 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="489-489"];
m55_253 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(3999, actual)", span="490-490"];
m55_254 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="479-479"];
m55_8 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="79-79"];
m55_615 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="MovingAverageConvergenceDivergence.cs", label="security.SetMarketPrice(new TradeBar\r\n            {\r\n                Time = DateTime.Now,\r\n                Symbol = security.Symbol,\r\n                Open = close,\r\n                High = close,\r\n                Low = close,\r\n                Close = close\r\n            })", span="1188-1196"];
m55_616 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1186-1186"];
m55_576 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="291-291"];
m55_32 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="103-103"];
m55_34 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="106-106"];
m55_35 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="108-108"];
m55_33 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="105-105"];
m55_36 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="109-109"];
m55_37 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-1999, actual)", span="110-110"];
m55_38 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="103-103"];
m55_17 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="68-68"];
m55_292 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="557-557"];
m55_294 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="560-560"];
m55_295 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="562-562"];
m55_293 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="559-559"];
m55_296 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="564-564"];
m55_297 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="565-565"];
m55_298 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="568-568"];
m55_299 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-6000, actual)", span="569-569"];
m55_300 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="557-557"];
m55_588 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="860-860"];
m55_556 [cluster="Orders.OrderTicket.cstr", file="MovingAverageConvergenceDivergence.cs", label="Entry Orders.OrderTicket.cstr", span=""];
m55_577 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="303-303"];
m55_319 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="605-605"];
m55_321 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="608-608"];
m55_322 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="610-610"];
m55_320 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="607-607"];
m55_323 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="612-612"];
m55_324 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="613-613"];
m55_325 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="616-616"];
m55_326 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-10000, actual)", span="617-617"];
m55_327 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="605-605"];
m55_210 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="401-401"];
m55_212 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="404-404"];
m55_213 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="406-406"];
m55_211 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="403-403"];
m55_214 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="408-408"];
m55_215 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="409-409"];
m55_216 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="417-417"];
m55_217 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-1000, actual)", span="418-418"];
m55_218 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="401-401"];
m55_310 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="589-589"];
m55_312 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="592-592"];
m55_313 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="594-594"];
m55_311 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="591-591"];
m55_314 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="596-596"];
m55_315 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="597-597"];
m55_316 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="600-600"];
m55_317 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-5600, actual)", span="601-601"];
m55_318 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="589-589"];
m55_575 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="271-271"];
m55_592 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="Entry lambda expression", span="1109-1109"];
m55_593 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="m.Process(It.IsAny<Orders.OrderRequest>())", span="1109-1109"];
m55_594 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="Exit lambda expression", span="1109-1109"];
m55_590 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="875-875"];
m55_468 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="944-944"];
m55_475 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Update(eurusd, 26)", span="953-953"];
m55_474 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="951-951"];
m55_476 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="955-955"];
m55_477 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(3000m, actual)", span="956-956"];
m55_469 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="var algo = new QCAlgorithm()", span="946-946"];
m55_473 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="950-950"];
m55_470 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="947-947"];
m55_471 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetCash(100000)", span="948-948"];
m55_472 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="949-949"];
m55_478 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="944-944"];
m55_120 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="245-245"];
m55_122 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="248-248"];
m55_123 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="250-250"];
m55_121 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="247-247"];
m55_124 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="252-252"];
m55_125 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="253-253"];
m55_126 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="255-255"];
m55_127 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-2000, actual)", span="256-256"];
m55_128 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="245-245"];
m55_93 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="200-200"];
m55_95 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="203-203"];
m55_96 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="205-205"];
m55_94 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="202-202"];
m55_97 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(25000)", span="207-207"];
m55_98 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="208-208"];
m55_99 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="210-210"];
m55_100 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-600, actual)", span="211-211"];
m55_101 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="200-200"];
m55_580 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="349-349"];
m55_138 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="276-276"];
m55_140 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="279-279"];
m55_141 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="281-281"];
m55_139 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="278-278"];
m55_142 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="283-283"];
m55_143 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="284-284"];
m55_144 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="287-287"];
m55_145 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-3999, actual)", span="288-288"];
m55_146 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="276-276"];
m55_581 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="362-362"];
m55_585 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="431-431"];
m55_66 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="155-155"];
m55_68 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="158-158"];
m55_69 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="160-160"];
m55_67 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="157-157"];
m55_70 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="162-162"];
m55_71 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="163-163"];
m55_72 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="165-165"];
m55_73 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(600, actual)", span="166-166"];
m55_74 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="155-155"];
m55_24 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="80-80"];
m55_495 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="977-977"];
m55_502 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Update(eurusd, 25)", span="986-986"];
m55_501 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="984-984"];
m55_503 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="988-988"];
m55_504 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(0m, actual)", span="989-989"];
m55_496 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="var algo = new QCAlgorithm()", span="979-979"];
m55_500 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="983-983"];
m55_497 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="980-980"];
m55_498 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetCash(10000)", span="981-981"];
m55_499 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="982-982"];
m55_505 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="977-977"];
m55_129 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="260-260"];
m55_131 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="263-263"];
m55_132 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="265-265"];
m55_130 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="262-262"];
m55_133 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="267-267"];
m55_134 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="268-268"];
m55_135 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="271-271"];
m55_136 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-4000, actual)", span="272-272"];
m55_137 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="260-260"];
m55_458 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="916-916"];
m55_460 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="919-919"];
m55_461 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="921-921"];
m55_464 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 12.5m)", span="926-926"];
m55_459 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="918-918"];
m55_462 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="923-923"];
m55_463 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="924-924"];
m55_465 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="935-935"];
m55_466 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-3000, actual)", span="936-936"];
m55_467 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="916-916"];
m55_506 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", span="1098-1098"];
m55_508 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, 1, 0)", span="1101-1101"];
m55_509 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="1103-1103"];
m55_507 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="1100-1100"];
m55_510 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="1105-1105"];
m55_514 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Transactions.SetOrderProcessor(mock.Object)", span="1110-1110"];
m55_515 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Buy(Symbols.MSFT, 1)", span="1112-1112"];
m55_516 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Buy(Symbols.MSFT, 1.0)", span="1113-1113"];
m55_517 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Buy(Symbols.MSFT, 1.0m)", span="1114-1114"];
m55_518 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Buy(Symbols.MSFT, 1.0f)", span="1115-1115"];
m55_519 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Sell(Symbols.MSFT, 1)", span="1117-1117"];
m55_520 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Sell(Symbols.MSFT, 1.0)", span="1118-1118"];
m55_521 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Sell(Symbols.MSFT, 1.0m)", span="1119-1119"];
m55_522 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Sell(Symbols.MSFT, 1.0f)", span="1120-1120"];
m55_523 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Order(Symbols.MSFT, 1)", span="1122-1122"];
m55_524 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Order(Symbols.MSFT, 1.0)", span="1123-1123"];
m55_525 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Order(Symbols.MSFT, 1.0m)", span="1124-1124"];
m55_526 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.Order(Symbols.MSFT, 1.0f)", span="1125-1125"];
m55_527 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOrder(Symbols.MSFT, 1)", span="1127-1127"];
m55_528 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOrder(Symbols.MSFT, 1.0)", span="1128-1128"];
m55_529 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOrder(Symbols.MSFT, 1.0m)", span="1129-1129"];
m55_530 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOrder(Symbols.MSFT, 1.0f)", span="1130-1130"];
m55_531 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOnOpenOrder(Symbols.MSFT, 1)", span="1132-1132"];
m55_532 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOnOpenOrder(Symbols.MSFT, 1.0)", span="1133-1133"];
m55_533 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOnOpenOrder(Symbols.MSFT, 1.0m)", span="1134-1134"];
m55_534 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOnCloseOrder(Symbols.MSFT, 1)", span="1136-1136"];
m55_535 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOnCloseOrder(Symbols.MSFT, 1.0)", span="1137-1137"];
m55_536 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.MarketOnCloseOrder(Symbols.MSFT, 1.0m)", span="1138-1138"];
m55_537 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.LimitOrder(Symbols.MSFT, 1, 1)", span="1140-1140"];
m55_538 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.LimitOrder(Symbols.MSFT, 1.0, 1)", span="1141-1141"];
m55_539 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.LimitOrder(Symbols.MSFT, 1.0m, 1)", span="1142-1142"];
m55_540 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.StopMarketOrder(Symbols.MSFT, 1, 1)", span="1144-1144"];
m55_541 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.StopMarketOrder(Symbols.MSFT, 1.0, 1)", span="1145-1145"];
m55_542 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.StopMarketOrder(Symbols.MSFT, 1.0m, 1)", span="1146-1146"];
m55_543 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.StopLimitOrder(Symbols.MSFT, 1, 1, 2)", span="1148-1148"];
m55_544 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.StopLimitOrder(Symbols.MSFT, 1.0, 1, 2)", span="1149-1149"];
m55_545 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.StopLimitOrder(Symbols.MSFT, 1.0m, 1, 2)", span="1150-1150"];
m55_546 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetHoldings(Symbols.MSFT, 1)", span="1152-1152"];
m55_547 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetHoldings(Symbols.MSFT, 1.0)", span="1153-1153"];
m55_548 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetHoldings(Symbols.MSFT, 1.0m)", span="1154-1154"];
m55_549 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetHoldings(Symbols.MSFT, 1.0f)", span="1155-1155"];
m55_551 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(expected, algo.Transactions.LastOrderId)", span="1158-1158"];
m55_511 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="var mock = new Mock<IOrderProcessor>()", span="1107-1107"];
m55_513 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="mock.Setup(m => m.Process(It.IsAny<Orders.OrderRequest>())).Returns(new Orders.OrderTicket(null, request.Object))", span="1109-1109"];
m55_550 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="int expected = 32", span="1157-1157"];
m55_512 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="var request = new Mock<Orders.SubmitOrderRequest>(null, null, null, null, null, null, null, null)", span="1108-1108"];
m55_552 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", span="1098-1098"];
m55_18 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", span="96-96"];
m55_19 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", color=green, community=0, file="MovingAverageConvergenceDivergence.cs", label="Fast.Reset()", prediction=99, span="98-98"];
m55_20 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="MovingAverageConvergenceDivergence.cs", label="Slow.Reset()", span="99-99"];
m55_21 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="MovingAverageConvergenceDivergence.cs", label="Signal.Reset()", span="100-100"];
m55_22 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="MovingAverageConvergenceDivergence.cs", label="base.Reset()", span="102-102"];
m55_23 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", span="96-96"];
m55_568 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="126-126"];
m55_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="135-135"];
m55_574 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="247-247"];
m55_614 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m55_558 [cluster="Unk.SetOrderProcessor", file="MovingAverageConvergenceDivergence.cs", label="Entry Unk.SetOrderProcessor", span=""];
m55_255 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="494-494"];
m55_257 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="497-497"];
m55_258 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="499-499"];
m55_256 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="496-496"];
m55_259 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="501-501"];
m55_260 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="502-502"];
m55_261 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="504-504"];
m55_262 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(3600, actual)", span="505-505"];
m55_263 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="494-494"];
m55_2 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="60-60"];
m55_3 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="62-62"];
m55_4 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="63-63"];
m55_5 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(2000, actual)", span="64-64"];
m55_6 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="57-57"];
m55_283 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="541-541"];
m55_285 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="544-544"];
m55_286 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="546-546"];
m55_284 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="543-543"];
m55_287 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="548-548"];
m55_288 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="549-549"];
m55_289 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="552-552"];
m55_290 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-3600, actual)", span="553-553"];
m55_291 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="541-541"];
m55_0 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="57-57"];
m55_1 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="59-59"];
m55_75 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="170-170"];
m55_77 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="173-173"];
m55_78 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="175-175"];
m55_76 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="172-172"];
m55_79 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(25000)", span="177-177"];
m55_80 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="178-178"];
m55_81 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="180-180"];
m55_82 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-1000, actual)", span="181-181"];
m55_83 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="170-170"];
m55_11 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="MovingAverageConvergenceDivergence.cs", label="var macd = Fast - Slow", span="84-84"];
m55_13 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="MovingAverageConvergenceDivergence.cs", label="Signal.Update(input.Time, macd)", span="87-87"];
m55_14 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="MovingAverageConvergenceDivergence.cs", label="return macd;", span="90-90"];
m55_12 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="MovingAverageConvergenceDivergence.cs", label="Fast.IsReady && Slow.IsReady", span="85-85"];
m55_15 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="79-79"];
m55_16 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m55_7 [cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="81-81"];
m55_597 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = new QCAlgorithm()", span="1165-1165"];
m55_600 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1168-1168"];
m55_602 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="msft.SetLeverage(leverage)", span="1170-1170"];
m55_601 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="msft = algo.Securities[Symbols.MSFT]", span="1169-1169"];
m55_603 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="return algo;", span="1171-1171"];
m55_598 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1166-1166"];
m55_599 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.SetCash(100000)", span="1167-1167"];
m55_604 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1162-1162"];
m55_376 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="727-727"];
m55_378 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="730-730"];
m55_379 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="732-732"];
m55_382 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="738-738"];
m55_377 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="729-729"];
m55_380 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="734-734"];
m55_381 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="735-735"];
m55_383 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="742-742"];
m55_384 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(250, actual)", span="745-745"];
m55_385 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="727-727"];
m55_228 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="443-443"];
m55_230 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="446-446"];
m55_231 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="448-448"];
m55_229 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="445-445"];
m55_232 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="450-450"];
m55_233 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="451-451"];
m55_234 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="459-459"];
m55_235 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-600, actual)", span="460-460"];
m55_236 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="443-443"];
m55_386 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="749-749"];
m55_388 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="752-752"];
m55_389 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="754-754"];
m55_392 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="760-760"];
m55_387 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="751-751"];
m55_390 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="756-756"];
m55_391 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="757-757"];
m55_393 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="764-764"];
m55_394 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(249, actual)", span="767-767"];
m55_395 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="749-749"];
m55_564 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="95-95"];
m55_201 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="386-386"];
m55_203 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="389-389"];
m55_204 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="391-391"];
m55_202 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="388-388"];
m55_205 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="393-393"];
m55_206 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="394-394"];
m55_207 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="396-396"];
m55_208 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(2000, actual)", span="397-397"];
m55_209 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="386-386"];
m55_46 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="125-125"];
m55_48 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="128-128"];
m55_49 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="130-130"];
m55_47 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="127-127"];
m55_50 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="132-132"];
m55_51 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="133-133"];
m55_52 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="135-135"];
m55_53 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(1000, actual)", span="136-136"];
m55_54 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="125-125"];
m55_582 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="383-383"];
m55_554 [cluster="Mock<Orders.SubmitOrderRequest>.cstr", file="MovingAverageConvergenceDivergence.cs", label="Entry Mock<Orders.SubmitOrderRequest>.cstr", span=""];
m55_183 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="356-356"];
m55_185 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="359-359"];
m55_186 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="361-361"];
m55_184 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="358-358"];
m55_187 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="363-363"];
m55_188 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="364-364"];
m55_189 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="366-366"];
m55_190 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(2000, actual)", span="367-367"];
m55_191 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="356-356"];
m55_571 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="183-183"];
m55_557 [cluster="Unk.Returns", file="MovingAverageConvergenceDivergence.cs", label="Entry Unk.Returns", span=""];
m55_573 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="259-259"];
m55_165 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="324-324"];
m55_167 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="327-327"];
m55_168 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="329-329"];
m55_166 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="326-326"];
m55_169 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="331-331"];
m55_170 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="332-332"];
m55_171 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="335-335"];
m55_172 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-5999, actual)", span="336-336"];
m55_173 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="324-324"];
m55_587 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="459-459"];
m55_25 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", span=""];
m55_27 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="95-95"];
m55_28 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="97-97"];
m55_26 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="94-94"];
m55_29 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="98-98"];
m55_30 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-2000, actual)", span="99-99"];
m55_31 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="92-92"];
m55_10 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="MovingAverageConvergenceDivergence.cs", label="Slow.Update(input)", span="82-82"];
m55_174 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="340-340"];
m55_176 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="343-343"];
m55_177 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="345-345"];
m55_175 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="342-342"];
m55_178 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="347-347"];
m55_179 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="348-348"];
m55_180 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="351-351"];
m55_181 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-5600, actual)", span="352-352"];
m55_182 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="340-340"];
m55_579 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="336-336"];
m55_561 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="61-61"];
m55_482 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="890-890"];
m55_328 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="621-621"];
m55_330 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="624-624"];
m55_331 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="626-626"];
m55_329 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="623-623"];
m55_332 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="628-628"];
m55_333 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="629-629"];
m55_334 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="632-632"];
m55_335 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-9999, actual)", span="633-633"];
m55_336 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="621-621"];
m55_274 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="525-525"];
m55_276 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="528-528"];
m55_277 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="530-530"];
m55_275 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="527-527"];
m55_278 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="532-532"];
m55_279 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="533-533"];
m55_280 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="536-536"];
m55_281 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-3999, actual)", span="537-537"];
m55_282 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="525-525"];
m55_617 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m55_480 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1268-1268"];
m55_192 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="371-371"];
m55_194 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="374-374"];
m55_195 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="376-376"];
m55_193 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="373-373"];
m55_196 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(150000)", span="378-378"];
m55_197 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="379-379"];
m55_198 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="381-381"];
m55_199 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(2000, actual)", span="382-382"];
m55_200 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="371-371"];
m55_483 [cluster="QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", span="31-31"];
m55_111 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="230-230"];
m55_113 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="233-233"];
m55_114 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="235-235"];
m55_112 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="232-232"];
m55_115 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="237-237"];
m55_116 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="238-238"];
m55_117 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="240-240"];
m55_118 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-2000, actual)", span="241-241"];
m55_119 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="230-230"];
m55_569 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="144-144"];
m55_570 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="170-170"];
m55_264 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="509-509"];
m55_266 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="512-512"];
m55_267 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="514-514"];
m55_265 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="511-511"];
m55_268 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="516-516"];
m55_269 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="517-517"];
m55_270 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="520-520"];
m55_271 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-4000, actual)", span="521-521"];
m55_272 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="509-509"];
m55_578 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="315-315"];
m55_366 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="704-704"];
m55_368 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="707-707"];
m55_369 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="709-709"];
m55_372 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 50)", span="716-716"];
m55_367 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="706-706"];
m55_370 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="712-712"];
m55_371 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="713-713"];
m55_373 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="720-720"];
m55_374 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-300, actual)", span="723-723"];
m55_375 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="704-704"];
m55_337 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="637-637"];
m55_339 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="640-640"];
m55_340 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="642-642"];
m55_338 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="639-639"];
m55_341 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="644-644"];
m55_342 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="645-645"];
m55_343 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="648-648"];
m55_344 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-9200, actual)", span="649-649"];
m55_345 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="637-637"];
m55_555 [cluster="Unk.Setup", file="MovingAverageConvergenceDivergence.cs", label="Entry Unk.Setup", span=""];
m55_572 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="196-196"];
m55_562 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="72-72"];
m55_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="106-106"];
m55_560 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="50-50"];
m55_39 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="114-114"];
m55_41 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="117-117"];
m55_42 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="119-119"];
m55_40 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="116-116"];
m55_43 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="120-120"];
m55_44 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-1600, actual)", span="121-121"];
m55_45 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="114-114"];
m55_595 [cluster="Unk.>", file="MovingAverageConvergenceDivergence.cs", label="Entry Unk.>", span=""];
m55_84 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="185-185"];
m55_86 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="188-188"];
m55_87 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="190-190"];
m55_85 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="187-187"];
m55_88 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(25000)", span="192-192"];
m55_89 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="193-193"];
m55_90 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="195-195"];
m55_91 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-999, actual)", span="196-196"];
m55_92 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="185-185"];
m55_156 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="308-308"];
m55_158 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="311-311"];
m55_159 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="313-313"];
m55_157 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="310-310"];
m55_160 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="315-315"];
m55_161 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="316-316"];
m55_162 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="319-319"];
m55_163 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-6000, actual)", span="320-320"];
m55_164 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="308-308"];
m55_484 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="961-961"];
m55_491 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Update(eurusd, 26)", span="970-970"];
m55_490 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="968-968"];
m55_492 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, -1m)", span="972-972"];
m55_493 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(-3000m, actual)", span="973-973"];
m55_485 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="var algo = new QCAlgorithm()", span="963-963"];
m55_489 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="967-967"];
m55_486 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="964-964"];
m55_487 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetCash(100000)", span="965-965"];
m55_488 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="966-966"];
m55_494 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="961-961"];
m55_57 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="140-140"];
m55_59 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="143-143"];
m55_60 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Update(msft, 25)", span="145-145"];
m55_58 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Security msft", span="142-142"];
m55_61 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio.SetCash(50000)", span="147-147"];
m55_62 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="148-148"];
m55_63 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="150-150"];
m55_64 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Assert.AreEqual(999, actual)", span="151-151"];
m55_65 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="140-140"];
m55_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="117-117"];
m55_56 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m55_273 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1174-1174"];
m55_606 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="var algo = new QCAlgorithm()", span="1177-1177"];
m55_609 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1180-1180"];
m55_611 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="msft.MarginModel = new SecurityMarginModel(initialMarginRequirement, maintenanceMarginRequirement)", span="1182-1182"];
m55_610 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="msft = algo.Securities[Symbols.MSFT]", span="1181-1181"];
m55_612 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="return algo;", span="1183-1183"];
m55_607 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1178-1178"];
m55_608 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="algo.SetCash(100000)", span="1179-1179"];
m55_613 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1174-1174"];
m55_586 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="445-445"];
m55_619 [file="MovingAverageConvergenceDivergence.cs", label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", span=""];
m56_20 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44"];
m56_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m56_54 [cluster="QuantConnect.Indicators.RollingWindow<T>.RollingWindow(int)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Indicators.RollingWindow<T>.RollingWindow(int)", span="45-45"];
m56_46 [cluster="lambda expression", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry lambda expression", span="151-151"];
m56_25 [cluster="lambda expression", file="MultipleSymbolConsolidationAlgorithm.cs", label="symbolData.SMA.Update(bar.Time, bar.Close)", span="114-114"];
m56_26 [cluster="lambda expression", file="MultipleSymbolConsolidationAlgorithm.cs", label="symbolData.Bars.Add(bar)", span="116-116"];
m56_24 [cluster="lambda expression", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry lambda expression", span="111-117"];
m56_27 [cluster="lambda expression", file="MultipleSymbolConsolidationAlgorithm.cs", label="Exit lambda expression", span="111-117"];
m56_47 [cluster="lambda expression", file="MultipleSymbolConsolidationAlgorithm.cs", label="x.Value.Symbol", span="151-151"];
m56_48 [cluster="lambda expression", file="MultipleSymbolConsolidationAlgorithm.cs", label="Exit lambda expression", span="151-151"];
m56_17 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.SymbolData(string, QuantConnect.SecurityType, System.TimeSpan, int)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.SymbolData(string, QuantConnect.SecurityType, System.TimeSpan, int)", span="193-193"];
m56_49 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.SymbolData(string, QuantConnect.SecurityType, System.TimeSpan, int)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Symbol = symbol", span="195-195"];
m56_51 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.SymbolData(string, QuantConnect.SecurityType, System.TimeSpan, int)", file="MultipleSymbolConsolidationAlgorithm.cs", label="BarPeriod = barPeriod", span="197-197"];
m56_53 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.SymbolData(string, QuantConnect.SecurityType, System.TimeSpan, int)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.SymbolData(string, QuantConnect.SecurityType, System.TimeSpan, int)", span="193-193"];
m56_0 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", span="79-79"];
m56_1 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", color=green, community=0, file="MultipleSymbolConsolidationAlgorithm.cs", label="SetStartDate(2014, 12, 01)", prediction=100, span="81-81"];
m56_2 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label="SetEndDate(2015, 02, 01)", span="82-82"];
m56_18 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m56_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1151-1151"];
m56_38 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnEndOfDay()", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnEndOfDay()", span="148-148"];
m56_39 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnEndOfDay()", file="MultipleSymbolConsolidationAlgorithm.cs", label="int i = 0", span="150-150"];
m56_40 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnEndOfDay()", file="MultipleSymbolConsolidationAlgorithm.cs", label="Data.OrderBy(x => x.Value.Symbol)", span="151-151"];
m56_41 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnEndOfDay()", file="MultipleSymbolConsolidationAlgorithm.cs", label="kvp.Value.IsReady && ++i%2 == 0", span="154-154"];
m56_43 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnEndOfDay()", file="MultipleSymbolConsolidationAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnEndOfDay()", span="148-148"];
m56_30 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="128-128"];
m56_31 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Data.Values", span="131-131"];
m56_32 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MultipleSymbolConsolidationAlgorithm.cs", label="symbolData.IsReady && symbolData.WasJustUpdated(Time)", span="134-134"];
m56_33 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MultipleSymbolConsolidationAlgorithm.cs", label="!Portfolio[symbolData.Symbol].Invested", span="136-136"];
m56_34 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MultipleSymbolConsolidationAlgorithm.cs", label="MarketOrder(symbolData.Symbol, 1)", span="138-138"];
m56_35 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="128-128"];
m56_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219"];
m56_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="237-237"];
m56_23 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m56_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1176-1176"];
m56_36 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.WasJustUpdated(System.DateTime)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.WasJustUpdated(System.DateTime)", span="215-215"];
m56_55 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.WasJustUpdated(System.DateTime)", file="MultipleSymbolConsolidationAlgorithm.cs", label="return Bars.Count > 0 && Bars[0].Time == current - BarPeriod;", span="217-217"];
m56_56 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.WasJustUpdated(System.DateTime)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData.WasJustUpdated(System.DateTime)", span="215-215"];
m56_21 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m56_44 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m56_3 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label="QuantConnect.Brokerages.WebSocketMessage", span=""];
m56_5 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label=ForexSymbols, span="91-91"];
m56_7 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label=Data, span="97-97"];
m56_8 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label="var symbolData = kvp.Value", span="101-101"];
m56_11 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label="symbolData.SMA = new SimpleMovingAverage(CreateIndicatorName(symbolData.Symbol, ''SMA'' + SimpleMovingAveragePeriod, Resolution.Minute), SimpleMovingAveragePeriod)", span="109-109"];
m56_13 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label="SubscriptionManager.AddConsolidator(symbolData.Symbol, consolidator)", span="120-120"];
m56_14 [cluster="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", file="MultipleSymbolConsolidationAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.Initialize()", span="79-79"];
m56_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1343-1343"];
m56_29 [cluster="QuantConnect.Indicators.RollingWindow<T>.Add(T)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Indicators.RollingWindow<T>.Add(T)", span="247-247"];
m56_28 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="MultipleSymbolConsolidationAlgorithm.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m56_57 [file="MultipleSymbolConsolidationAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", span=""];
m56_58 [file="MultipleSymbolConsolidationAlgorithm.cs", label=symbolData, span=""];
m56_59 [file="MultipleSymbolConsolidationAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData", span=""];
m57_24 [cluster="Unk.All", file="Option.cs", label="Entry Unk.All", span=""];
m57_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", span="29-29"];
m57_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", span="29-29"];
m57_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="var time = new DateTime(2016, 03, 03, 12, 48, 15)", span="31-31"];
m57_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="var source = Path.Combine(''TestData'', ''20151224_quote_american.zip'')", span="32-32"];
m57_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="var factory = new ZipEntryNameSubscriptionDataSourceReader(fileProvider, config, time, false)", span="36-36"];
m57_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="var config = new SubscriptionDataConfig(typeof (ZipEntryName), Symbol.Create(''XLRE'', SecurityType.Option, Market.USA), Resolution.Tick,\r\n                TimeZones.NewYork, TimeZones.NewYork, false, false, false)", span="33-34"];
m57_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="var actual = factory.Read(new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.ZipEntryName)).ToList()", span="44-44"];
m57_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="var fileProvider = new DefaultFileProvider()", span="35-35"];
m57_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="var expected = new[]\r\n            {\r\n                Symbol.CreateOption(''XLRE'', Market.USA, OptionStyle.American, OptionRight.Call, 21m, new DateTime(2016, 08, 19)),\r\n                Symbol.CreateOption(''XLRE'', Market.USA, OptionStyle.American, OptionRight.Call, 22m, new DateTime(2016, 08, 19)),\r\n                Symbol.CreateOption(''XLRE'', Market.USA, OptionStyle.American, OptionRight.Put, 37m, new DateTime(2016, 08, 19)),\r\n            }", span="37-42"];
m57_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="CollectionAssert.AreEqual(expected, actual.Select(x => x.Symbol))", span="47-47"];
m57_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.ZipEntryNameSubsciptionFactoryTests.ReadsZipEntryNames()", file="Option.cs", label="Assert.IsTrue(actual.All(x => x is ZipEntryName))", span="48-48"];
m57_19 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="Option.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57"];
m57_23 [cluster="Unk.AreEqual", file="Option.cs", label="Entry Unk.AreEqual", span=""];
m57_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultFileProvider.DefaultFileProvider()", file="Option.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultFileProvider.DefaultFileProvider()", span="23-23"];
m57_13 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="Option.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="156-156"];
m57_17 [cluster="System.DateTime.DateTime(int, int, int)", file="Option.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m57_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IFileProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Option.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IFileProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="48-48"];
m57_22 [cluster="Unk.Select", file="Option.cs", label="Entry Unk.Select", span=""];
m57_25 [cluster="Unk.IsTrue", file="Option.cs", label="Entry Unk.IsTrue", span=""];
m57_18 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Option.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="87-87"];
m57_14 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Option.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m57_12 [cluster="System.IO.Path.Combine(string, string)", file="Option.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m57_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="Option.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="62-62"];
m57_11 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="Option.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m57_30 [cluster="lambda expression", file="Option.cs", label="x is ZipEntryName", span="48-48"];
m57_26 [cluster="lambda expression", file="Option.cs", label="Entry lambda expression", span="47-47"];
m57_29 [cluster="lambda expression", file="Option.cs", label="Entry lambda expression", span="48-48"];
m57_27 [cluster="lambda expression", file="Option.cs", label="x.Symbol", span="47-47"];
m57_28 [cluster="lambda expression", file="Option.cs", label="Exit lambda expression", span="47-47"];
m57_31 [cluster="lambda expression", file="Option.cs", label="Exit lambda expression", span="48-48"];
m59_14 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m59_16 [cluster="System.Math.Sign(decimal)", file="OptionMarginModel.cs", label="Entry System.Math.Sign(decimal)", span="0-0"];
m59_17 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="79-79"];
m59_18 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="return security.Holdings.AbsoluteHoldingsCost * GetMaintenanceMarginRequirement(security, security.Holdings.HoldingsCost);", span="81-81"];
m59_19 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="79-79"];
m59_6 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="OptionMarginModel.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m59_15 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", span="158-158"];
m59_45 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="return GetMarginRequirement(security, holding);", span="160-160"];
m59_46 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security, decimal)", span="158-158"];
m59_67 [cluster="System.Math.Max(decimal, decimal)", file="OptionMarginModel.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m59_20 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", span="166-166"];
m59_48 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="return GetMarginRequirement(security, holding);", span="168-168"];
m59_49 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security, decimal)", span="166-166"];
m59_47 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", span="177-177"];
m59_51 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="value == 0m ||\r\n                option.Close == 0m ||\r\n                option.StrikePrice == 0m ||\r\n                option.Underlying == null ||\r\n                option.Underlying.Close == 0m", span="181-185"];
m59_53 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="value > 0m", span="190-190"];
m59_55 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var absValue = -value", span="195-195"];
m59_56 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var optionProperties = (OptionSymbolProperties) option.SymbolProperties", span="196-196"];
m59_57 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var underlying = option.Underlying", span="197-197"];
m59_62 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var amountOTM = option.Right == OptionRight.Call\r\n                ? Math.Max(0, option.StrikePrice - underlying.Close)\r\n                : Math.Max(0, underlying.Close - option.StrikePrice)", span="206-208"];
m59_65 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="return OptionMarginRequirement +\r\n                   option.Holdings.AbsoluteQuantity * Math.Max(NakedPositionMarginRequirement * underlyingValueRatio,\r\n                       NakedPositionMarginRequirementOtm * underlyingValueRatio - underlyingValueRatioOTM);", span="212-214"];
m59_52 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="return 0m;", span="187-187"];
m59_54 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="return OptionMarginRequirement;", span="192-192"];
m59_60 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var priceRatio = underlying.Close / (absValue / quantityRatio)", span="202-202"];
m59_63 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var priceRatioOTM = amountOTM / (absValue / quantityRatio)", span="209-209"];
m59_58 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var multiplierRatio = underlying.SymbolProperties.ContractMultiplier / optionProperties.ContractMultiplier", span="200-200"];
m59_59 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var quantityRatio = optionProperties.ContractUnitOfTrade", span="201-201"];
m59_61 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var underlyingValueRatio = multiplierRatio * quantityRatio * priceRatio", span="203-203"];
m59_64 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="var underlyingValueRatioOTM = multiplierRatio * quantityRatio * priceRatioOTM", span="210-210"];
m59_66 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security, decimal)", span="177-177"];
m59_42 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="150-150"];
m59_43 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="return GetMaintenanceMarginRequirement(security, security.Holdings.HoldingsValue);", span="152-152"];
m59_44 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="150-150"];
m59_0 [cluster="QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="40-40"];
m59_1 [cluster="QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="return 1;", span="43-43"];
m59_2 [cluster="QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="40-40"];
m59_39 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="142-142"];
m59_40 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="return GetInitialMarginRequirement(security, security.Holdings.HoldingsValue);", span="144-144"];
m59_41 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="142-142"];
m59_7 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="63-63"];
m59_8 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionMarginModel.cs", label="var orderFees = security.FeeModel.GetOrderFee(security, order)", span="67-67"];
m59_9 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionMarginModel.cs", label="var value = order.GetValue(security)", span="68-68"];
m59_10 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionMarginModel.cs", label="var orderValue = value * GetInitialMarginRequirement(security, value)", span="69-69"];
m59_11 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionMarginModel.cs", label="return orderValue + Math.Sign(orderValue) * orderFees;", span="71-71"];
m59_12 [cluster="QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="63-63"];
m59_3 [cluster="QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="51-51"];
m59_4 [cluster="QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="throw new InvalidOperationException(''Options are leveraged products and different leverage cannot be set by user'');", span="54-54"];
m59_5 [cluster="QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="51-51"];
m59_21 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="91-91"];
m59_22 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="var holdings = security.Holdings", span="93-93"];
m59_23 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="direction == OrderDirection.Hold", span="95-95"];
m59_24 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="return portfolio.MarginRemaining;", span="97-97"];
m59_26 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label=direction, span="104-104"];
m59_28 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="return portfolio.MarginRemaining;", span="107-107"];
m59_30 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="return\r\n                            // portion of margin to close the existing position\r\n                            GetMaintenanceMargin(security) +\r\n                            // portion of margin to open the new position\r\n                            security.Holdings.AbsoluteHoldingsValue * GetInitialMarginRequirement(security, security.Holdings.HoldingsValue) +\r\n                            portfolio.MarginRemaining;", span="110-115"];
m59_32 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label=direction, span="120-120"];
m59_34 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="return\r\n                            // portion of margin to close the existing position\r\n                            GetMaintenanceMargin(security) +\r\n                            // portion of margin to open the new position\r\n                            security.Holdings.AbsoluteHoldingsValue * GetInitialMarginRequirement(security, security.Holdings.HoldingsValue) +\r\n                            portfolio.MarginRemaining;", span="123-128"];
m59_36 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="return portfolio.MarginRemaining;", span="131-131"];
m59_37 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="return portfolio.MarginRemaining;", span="136-136"];
m59_25 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="holdings.IsLong", span="102-102"];
m59_31 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="holdings.IsShort", span="118-118"];
m59_27 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="OrderDirection.Buy", span="106-106"];
m59_29 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="OrderDirection.Sell", span="109-109"];
m59_33 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="OrderDirection.Buy", span="122-122"];
m59_35 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="OrderDirection.Sell", span="130-130"];
m59_38 [cluster="QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="OptionMarginModel.cs", label="Exit QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="91-91"];
m59_13 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionMarginModel.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m59_68 [file="OptionMarginModel.cs", label="QuantConnect.Securities.OptionMarginModel", span=""];
m60_85 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", span="138-138"];
m60_86 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="decimal price = 14m", span="140-140"];
m60_87 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="decimal underlyingPrice = 196m", span="141-141"];
m60_92 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="optionCall.SetMarketPrice(new Tick { Value = price })", span="148-148"];
m60_94 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="optionCall.Holdings.SetHoldings(price, -2)", span="150-150"];
m60_88 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="var tz = TimeZones.NewYork", span="142-142"];
m60_90 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="145-145"];
m60_91 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="var optionCall = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="147-147"];
m60_93 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="optionCall.Underlying = equity", span="149-149"];
m60_97 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", file="OptionMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsOTM()", span="138-138"];
m60_18 [cluster="lambda expression", file="OptionMarginModelTests.cs", label="Entry lambda expression", span="40-40"];
m60_20 [cluster="lambda expression", file="OptionMarginModelTests.cs", label="Exit lambda expression", span="40-40"];
m60_10 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m60_22 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", span="45-45"];
m60_23 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="decimal price = 1.2345m", span="47-47"];
m60_24 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="decimal underlyingPrice = 200m", span="48-48"];
m60_29 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="optionPut.SetMarketPrice(new Tick { Value = price })", span="55-55"];
m60_33 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="optionCall.SetMarketPrice(new Tick { Value = price })", span="60-60"];
m60_25 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="var tz = TimeZones.NewYork", span="49-49"];
m60_27 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="52-52"];
m60_28 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="var optionPut = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="54-54"];
m60_32 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="var optionCall = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_C_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="59-59"];
m60_30 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="optionPut.Underlying = equity", span="56-56"];
m60_34 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="optionCall.Underlying = equity", span="61-61"];
m60_31 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="optionPut.Holdings.SetHoldings(1m, 2)", span="57-57"];
m60_35 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="optionCall.Holdings.SetHoldings(1.5m, 2)", span="62-62"];
m60_39 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", file="OptionMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestLongCallsPuts()", span="45-45"];
m60_45 [cluster="QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="79-79"];
m60_72 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", span="116-116"];
m60_73 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="decimal price = 14m", span="118-118"];
m60_74 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="decimal underlyingPrice = 182m", span="119-119"];
m60_79 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="optionPut.SetMarketPrice(new Tick { Value = price })", span="126-126"];
m60_81 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="optionPut.Holdings.SetHoldings(price, -2)", span="128-128"];
m60_75 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="var tz = TimeZones.NewYork", span="120-120"];
m60_77 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="123-123"];
m60_78 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="var optionPut = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="125-125"];
m60_80 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="optionPut.Underlying = equity", span="127-127"];
m60_84 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", file="OptionMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutsITM()", span="116-116"];
m60_59 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", span="94-94"];
m60_60 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="decimal price = 14m", span="96-96"];
m60_61 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="decimal underlyingPrice = 180m", span="97-97"];
m60_66 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="optionCall.SetMarketPrice(new Tick { Value = price })", span="104-104"];
m60_68 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="optionCall.Holdings.SetHoldings(price, -2)", span="106-106"];
m60_62 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="var tz = TimeZones.NewYork", span="98-98"];
m60_64 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="101-101"];
m60_65 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="var optionCall = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_C_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="103-103"];
m60_67 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="optionCall.Underlying = equity", span="105-105"];
m60_71 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", file="OptionMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsOTM()", span="94-94"];
m60_112 [cluster="System.DateTime.DateTime(int, int, int)", file="OptionMarginModelTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m60_17 [cluster="Unk.>", file="OptionMarginModelTests.cs", label="Entry Unk.>", span=""];
m60_98 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", span="160-160"];
m60_99 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="decimal price = 0.18m", span="162-162"];
m60_100 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="decimal underlyingPrice = 200m", span="163-163"];
m60_106 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="optionPut.SetMarketPrice(new Tick { Value = price })", span="171-171"];
m60_108 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="optionPut.Holdings.SetHoldings(price, -2)", span="173-173"];
m60_101 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="var tz = TimeZones.NewYork", span="165-165"];
m60_103 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="167-167"];
m60_105 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="var optionPut = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), optionPutSymbol, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="170-170"];
m60_107 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="optionPut.Underlying = equity", span="172-172"];
m60_104 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="var optionPutSymbol = Symbol.CreateOption(Symbols.SPY, Market.USA, OptionStyle.American, OptionRight.Put, 207m, new DateTime(2015, 02, 27))", span="169-169"];
m60_111 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", file="OptionMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutFarITM()", span="160-160"];
m60_13 [cluster="string.ToUpper()", file="OptionMarginModelTests.cs", label="Entry string.ToUpper()", span="0-0"];
m60_46 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", span="72-72"];
m60_47 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="decimal price = 14m", span="74-74"];
m60_48 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="decimal underlyingPrice = 196m", span="75-75"];
m60_53 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="optionCall.SetMarketPrice(new Tick { Value = price })", span="82-82"];
m60_55 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="optionCall.Holdings.SetHoldings(price, -2)", span="84-84"];
m60_49 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="var tz = TimeZones.NewYork", span="76-76"];
m60_51 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="equity.SetMarketPrice(new Tick { Value = underlyingPrice })", span="79-79"];
m60_52 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="var optionCall = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_C_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="81-81"];
m60_54 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="optionCall.Underlying = equity", span="83-83"];
m60_58 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", file="OptionMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortCallsITM()", span="72-72"];
m60_9 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m60_16 [cluster="Unk.AreEqual", file="OptionMarginModelTests.cs", label="Entry Unk.AreEqual", span=""];
m60_114 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", span="183-183"];
m60_115 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="decimal optionPriceStart = 4.68m", span="185-185"];
m60_116 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="decimal underlyingPriceStart = 192m", span="186-186"];
m60_124 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="optionPut.SetMarketPrice(new Tick { Value = optionPriceStart })", span="196-196"];
m60_126 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="optionPut.Holdings.SetHoldings(optionPriceStart, -2)", span="198-198"];
m60_117 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="decimal optionPriceEnd = 0.18m", span="187-187"];
m60_121 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="equity.SetMarketPrice(new Tick { Value = underlyingPriceStart })", span="192-192"];
m60_118 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="decimal underlyingPriceEnd = 200m", span="188-188"];
m60_130 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="optionPut.SetMarketPrice(new Tick { Value = optionPriceEnd })", span="207-207"];
m60_119 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="var tz = TimeZones.NewYork", span="190-190"];
m60_129 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="equity.SetMarketPrice(new Tick { Value = underlyingPriceEnd })", span="206-206"];
m60_123 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="var optionPut = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), optionPutSymbol, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="195-195"];
m60_125 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="optionPut.Underlying = equity", span="197-197"];
m60_122 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="var optionPutSymbol = Symbol.CreateOption(Symbols.SPY, Market.USA, OptionStyle.American, OptionRight.Put, 207m, new DateTime(2015, 02, 27))", span="194-194"];
m60_132 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", file="OptionMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.TestShortPutMovingFarITM()", span="183-183"];
m60_15 [cluster="QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="40-40"];
m60_0 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", span="32-32"];
m60_1 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="OptionMarginModelTests.cs", label="var tz = TimeZones.NewYork", span="34-34"];
m60_2 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="OptionMarginModelTests.cs", label="var option = new Option(SecurityExchangeHours.AlwaysOpen(tz), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, tz, tz, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 100, 0.01m, 1))", span="35-35"];
m60_7 [cluster="QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", file="OptionMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Margin.OptionMarginModelTests.MarginModelInitializationTests()", span="32-32"];
m60_41 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m60_14 [cluster="QuantConnect.Securities.OptionMarginModel.OptionMarginModel()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.OptionMarginModel.OptionMarginModel()", span="28-28"];
m60_11 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m60_44 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m60_8 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="49-49"];
m60_42 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m60_113 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="119-119"];
m60_21 [cluster="QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="51-51"];
m60_12 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", span="34-34"];
m60_40 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="OptionMarginModelTests.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65"];
m60_133 [file="OptionMarginModelTests.cs", label=option, span=""];
m60_134 [file="OptionMarginModelTests.cs", label=marginModel, span=""];
m61_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1439-1439"];
m61_13 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="326-326"];
m61_52 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="67-67"];
m61_55 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="88-88"];
m61_15 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="44-46"];
m61_49 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="66-66"];
m61_57 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="88-88"];
m61_56 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="x.Value.Holdings.AbsoluteQuantity != 0", span="88-88"];
m61_17 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="44-46"];
m61_16 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="u.IncludeWeeklys()\r\n                       .Strikes(-2, +2)\r\n                       .Expiration(TimeSpan.Zero, TimeSpan.FromDays(365 * 2))", span="44-46"];
m61_51 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="66-66"];
m61_50 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="x.Expiry", span="66-66"];
m61_53 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="x.Right == OptionRight.Call && x.Strike == 650", span="67-67"];
m61_54 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="67-67"];
m61_47 [cluster="System.Exception.Exception(string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m61_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1151-1151"];
m61_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="1043-1043"];
m61_21 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271"];
m61_19 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199"];
m61_58 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="106-106"];
m61_59 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionSplitRegressionAlgorithm.cs", label="Log(orderEvent.ToString())", span="108-108"];
m61_60 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="106-106"];
m61_42 [cluster="Unk.Skip", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.Skip", span=""];
m61_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1737-1737"];
m61_43 [cluster="Unk.FirstOrDefault", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m61_20 [cluster="System.TimeSpan.FromDays(double)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m61_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1176-1176"];
m61_39 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m61_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m61_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
m61_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1100-1100"];
m61_0 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", span="33-33"];
m61_1 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", color=green, community=0, file="OptionSplitRegressionAlgorithm.cs", label="SetStartDate(2014, 06, 06)", prediction=101, span="36-36"];
m61_2 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="SetEndDate(2014, 06, 09)", span="37-37"];
m61_3 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="SetCash(1000000)", span="38-38"];
m61_4 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="var option = AddOption(''AAPL'')", span="40-40"];
m61_5 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="_optionSymbol = option.Symbol", span="41-41"];
m61_7 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="SetBenchmark(''AAPL'')", span="49-49"];
m61_6 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="option.SetFilter(u => u.IncludeWeeklys()\r\n                       .Strikes(-2, +2)\r\n                       .Expiration(TimeSpan.Zero, TimeSpan.FromDays(365 * 2)))", span="44-46"];
m61_8 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", span="33-33"];
m61_44 [cluster="Unk.Buy", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.Buy", span=""];
m61_48 [cluster="Unk.Format", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.Format", span=""];
m61_46 [cluster="Unk.First", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.First", span=""];
m61_22 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="56-56"];
m61_23 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="!Portfolio.Invested", span="58-58"];
m61_24 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Time.Hour > 9 && Time.Minute > 0", span="60-60"];
m61_26 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="slice.OptionChains.TryGetValue(_optionSymbol, out chain)", span="63-63"];
m61_29 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Buy(contract.Symbol, 1)", span="73-73"];
m61_30 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Time.Day > 6 && Time.Hour > 14 && Time.Minute > 0", span="80-80"];
m61_31 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Liquidate()", span="82-82"];
m61_32 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Portfolio.Invested", span="86-86"];
m61_33 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="var holdings = Portfolio.Securities.Where(x => x.Value.Holdings.AbsoluteQuantity != 0).First().Value.Holdings.AbsoluteQuantity", span="88-88"];
m61_34 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Time.Day == 6 && holdings != 1", span="90-90"];
m61_36 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Time.Day == 9 && holdings != 7", span="94-94"];
m61_25 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="OptionChain chain", span="62-62"];
m61_27 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="var contract =\r\n                            chain.OrderBy(x => x.Expiry)\r\n                            .Where(x => x.Right == OptionRight.Call && x.Strike == 650)\r\n                            .Skip(1)\r\n                            .FirstOrDefault()", span="65-69"];
m61_28 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="contract != null", span="71-71"];
m61_35 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="throw new Exception(string.Format(''Expected position quantity of 1 but was {0}'', holdings));", span="92-92"];
m61_37 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="throw new Exception(string.Format(''Expected position quantity of 7 but was {0}'', holdings));", span="96-96"];
m61_38 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="56-56"];
m61_61 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169"];
m61_18 [cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98"];
m61_63 [file="OptionSplitRegressionAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", span=""];
m64_13 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", span="52-52"];
m64_14 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel()", span="54-54"];
m64_16 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="security.MarginModel = new PatternDayTradingMarginModel()", span="59-59"];
m64_15 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="var security = CreateSecurity(Noon)", span="57-57"];
m64_19 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="security = CreateSecurity(Midnight)", span="65-65"];
m64_18 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreNotEqual(10m, model.GetLeverage(security))", span="62-62"];
m64_21 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreNotEqual(10m, model.GetLeverage(security))", span="68-68"];
m64_17 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="model.SetLeverage(security, 10m)", span="61-61"];
m64_20 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="model.SetLeverage(security, 10m)", span="67-67"];
m64_22 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="security.Holdings.SetHoldings(100m, 100)", span="70-70"];
m64_23 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.SetLeverageTest()", span="52-52"];
m64_24 [cluster="QuantConnect.Securities.PatternDayTradingMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.PatternDayTradingMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="52-52"];
m64_12 [cluster="QuantConnect.Securities.PatternDayTradingMarginModel.PatternDayTradingMarginModel(decimal, decimal)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.PatternDayTradingMarginModel.PatternDayTradingMarginModel(decimal, decimal)", span="38-38"];
m64_114 [cluster="QuantConnect.Securities.IMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.IMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", span="35-35"];
m64_115 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", span="215-215"];
m64_122 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel()", span="224-224"];
m64_123 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var security = CreateSecurity(Noon)", span="227-227"];
m64_128 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="security = CreateSecurity(Midnight)", span="236-236"];
m64_127 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual(expected, actual)", span="233-233"];
m64_132 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual(expected, actual)", span="242-242"];
m64_121 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var portfolio = GetPortfolio(orderProcessor, quantity)", span="223-223"];
m64_120 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var orderProcessor = new MarginCallModelTests.OrderProcessor()", span="222-222"];
m64_119 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var quantity = -300", span="220-220"];
m64_126 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var actual = portfolio.MarginCallModel.GenerateMarginCallOrder(security, netLiquidationValue, totalMargin, model.GetMaintenanceMarginRequirement(security)).Quantity", span="231-231"];
m64_131 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="actual = portfolio.MarginCallModel.GenerateMarginCallOrder(security, netLiquidationValue, totalMargin, model.GetMaintenanceMarginRequirement(security)).Quantity", span="240-240"];
m64_124 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="security.Holdings.SetHoldings(securityPrice, quantity)", span="228-228"];
m64_129 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="security.Holdings.SetHoldings(securityPrice, quantity)", span="237-237"];
m64_125 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var expected = (int)(Math.Round((totalMargin - netLiquidationValue) / securityPrice, MidpointRounding.AwayFromZero) * 4m)", span="230-230"];
m64_130 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="expected = (int)(Math.Round((totalMargin - netLiquidationValue) / securityPrice, MidpointRounding.AwayFromZero) * 2m)", span="239-239"];
m64_118 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var securityPrice = 100m", span="219-219"];
m64_116 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var netLiquidationValue = 5000m", span="217-217"];
m64_117 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="var totalMargin = 10000m", span="218-218"];
m64_133 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderShort()", span="215-215"];
m64_8 [cluster="QuantConnect.Securities.PatternDayTradingMarginModel.PatternDayTradingMarginModel()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.PatternDayTradingMarginModel.PatternDayTradingMarginModel()", span="28-28"];
m64_156 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateTradeBarConfig()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateTradeBarConfig()", span="284-284"];
m64_189 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateTradeBarConfig()", file="PatternDayTradingMarginModelTests.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, TimeZones.NewYork,\r\n                TimeZones.NewYork, true, true, false);", span="286-287"];
m64_190 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateTradeBarConfig()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateTradeBarConfig()", span="284-284"];
m64_37 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="102-102"];
m64_143 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.SecurityManager)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.SecurityManager)", span="51-51"];
m64_186 [cluster="lambda expression", file="PatternDayTradingMarginModelTests.cs", label="Entry lambda expression", span="281-281"];
m64_183 [cluster="lambda expression", file="PatternDayTradingMarginModelTests.cs", label="Entry lambda expression", span="278-278"];
m64_185 [cluster="lambda expression", file="PatternDayTradingMarginModelTests.cs", label="Exit lambda expression", span="278-278"];
m64_184 [cluster="lambda expression", file="PatternDayTradingMarginModelTests.cs", label="x.Date", span="278-278"];
m64_187 [cluster="lambda expression", file="PatternDayTradingMarginModelTests.cs", label="x.DayOfWeek", span="281-281"];
m64_188 [cluster="lambda expression", file="PatternDayTradingMarginModelTests.cs", label="Exit lambda expression", span="281-281"];
m64_191 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m64_111 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", span="245-245"];
m64_134 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", file="PatternDayTradingMarginModelTests.cs", label="var securities = new SecurityManager(new TimeKeeper(DateTime.Now, new[] { TimeZones.NewYork }))", span="247-247"];
m64_136 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", file="PatternDayTradingMarginModelTests.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="249-249"];
m64_138 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", file="PatternDayTradingMarginModelTests.cs", label="portfolio.SetCash(quantity)", span="252-252"];
m64_137 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", file="PatternDayTradingMarginModelTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="251-251"];
m64_139 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", file="PatternDayTradingMarginModelTests.cs", label="return portfolio;", span="254-254"];
m64_135 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", file="PatternDayTradingMarginModelTests.cs", label="var transactions = new SecurityTransactionManager(null, securities)", span="248-248"];
m64_140 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.GetPortfolio(QuantConnect.Securities.IOrderProcessor, int)", span="245-245"];
m64_160 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m64_177 [cluster="QuantConnect.Securities.LocalMarketHours.LocalMarketHours(System.DayOfWeek, System.TimeSpan, System.TimeSpan)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.LocalMarketHours.LocalMarketHours(System.DayOfWeek, System.TimeSpan, System.TimeSpan)", span="161-161"];
m64_27 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", span="74-74"];
m64_31 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", color=green, community=0, file="PatternDayTradingMarginModelTests.cs", label="var security = CreateSecurity(Noon)", prediction=102, span="82-82"];
m64_30 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel()", span="81-81"];
m64_32 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var order = new MarketOrder(security.Symbol, 100, security.LocalTime)", span="83-83"];
m64_33 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)leverage, (double)model.GetLeverage(security), 1e-3)", span="85-85"];
m64_34 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)expected, (double)model.GetInitialMarginRequiredForOrder(security, order), 1e-3)", span="86-86"];
m64_29 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var expected = 100 * 100m / leverage + 1", span="79-79"];
m64_28 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var leverage = 4m", span="78-78"];
m64_35 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverage()", span="74-74"];
m64_145 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", span="66-66"];
m64_0 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", span="37-37"];
m64_1 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", color=green, community=0, file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel()", prediction=103, span="40-40"];
m64_2 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", color=green, community=0, file="PatternDayTradingMarginModelTests.cs", label="var leverage = model.GetLeverage(CreateSecurity(Noon))", prediction=104, span="41-41"];
m64_3 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", color=green, community=0, file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual(4.0m, leverage)", prediction=105, span="43-43"];
m64_4 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", color=green, community=0, file="PatternDayTradingMarginModelTests.cs", label="model = new PatternDayTradingMarginModel(2.0m, 5.0m)", prediction=106, span="45-45"];
m64_5 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", color=green, community=0, file="PatternDayTradingMarginModelTests.cs", label="leverage = model.GetLeverage(CreateSecurity(Noon))", prediction=107, span="46-46"];
m64_6 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", color=green, community=0, file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual(5.0m, leverage)", prediction=108, span="48-48"];
m64_7 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.InitializationTests()", span="37-37"];
m64_141 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m64_91 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", span="184-184"];
m64_96 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", color=green, community=0, file="PatternDayTradingMarginModelTests.cs", label="var orderProcessor = new MarginCallModelTests.OrderProcessor()", prediction=109, span="191-191"];
m64_95 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var quantity = 300", span="189-189"];
m64_97 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var portfolio = GetPortfolio(orderProcessor, quantity)", span="192-192"];
m64_98 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel()", span="193-193"];
m64_99 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var security = CreateSecurity(Noon)", span="196-196"];
m64_104 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="security = CreateSecurity(Midnight)", span="205-205"];
m64_103 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual(expected, actual)", span="202-202"];
m64_108 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual(expected, actual)", span="211-211"];
m64_94 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var securityPrice = 100m", span="188-188"];
m64_100 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="security.Holdings.SetHoldings(securityPrice, quantity)", span="197-197"];
m64_105 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="security.Holdings.SetHoldings(securityPrice, quantity)", span="206-206"];
m64_102 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var actual = portfolio.MarginCallModel.GenerateMarginCallOrder(security, netLiquidationValue, totalMargin, model.GetMaintenanceMarginRequirement(security)).Quantity", span="200-200"];
m64_107 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="actual = portfolio.MarginCallModel.GenerateMarginCallOrder(security, netLiquidationValue, totalMargin, model.GetMaintenanceMarginRequirement(security)).Quantity", span="209-209"];
m64_101 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var expected = -(int)(Math.Round((totalMargin - netLiquidationValue) / securityPrice, MidpointRounding.AwayFromZero) * 4m)", span="199-199"];
m64_106 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="expected = -(int)(Math.Round((totalMargin - netLiquidationValue) / securityPrice, MidpointRounding.AwayFromZero) * 2m)", span="208-208"];
m64_93 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var totalMargin = 10000m", span="187-187"];
m64_92 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="var netLiquidationValue = 5000m", span="186-186"];
m64_109 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMarginCallOrderLong()", span="184-184"];
m64_10 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="71-71"];
m64_47 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", span="106-106"];
m64_50 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel()", span="111-111"];
m64_51 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var security = CreateSecurity(Midnight)", span="114-114"];
m64_55 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="security = CreateSecurity(NoonHoliday)", span="121-121"];
m64_59 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="security = CreateSecurity(NoonWeekend)", span="128-128"];
m64_53 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)leverage, (double)model.GetLeverage(security), 1e-3)", span="117-117"];
m64_57 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)leverage, (double)model.GetLeverage(security), 1e-3)", span="124-124"];
m64_61 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)leverage, (double)model.GetLeverage(security), 1e-3)", span="131-131"];
m64_54 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)expected, (double)model.GetInitialMarginRequiredForOrder(security, order), 1e-3)", span="118-118"];
m64_58 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)expected, (double)model.GetInitialMarginRequiredForOrder(security, order), 1e-3)", span="125-125"];
m64_62 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)expected, (double)model.GetInitialMarginRequiredForOrder(security, order), 1e-3)", span="132-132"];
m64_49 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var expected = 100 * 100m / leverage + 1", span="109-109"];
m64_52 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var order = new MarketOrder(security.Symbol, 100, security.LocalTime)", span="115-115"];
m64_56 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="order = new MarketOrder(security.Symbol, 100, security.LocalTime)", span="122-122"];
m64_60 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="order = new MarketOrder(security.Symbol, 100, security.LocalTime)", span="129-129"];
m64_48 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="var leverage = 2m", span="108-108"];
m64_63 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverage()", span="106-106"];
m64_176 [cluster="QuantConnect.Securities.LocalMarketHours.ClosedAllDay(System.DayOfWeek)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.LocalMarketHours.ClosedAllDay(System.DayOfWeek)", span="294-294"];
m64_162 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m64_110 [cluster="QuantConnect.Tests.Common.Securities.MarginCallModelTests.OrderProcessor.OrderProcessor()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.MarginCallModelTests.OrderProcessor.OrderProcessor()", span="228-228"];
m64_163 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="514-514"];
m64_164 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m64_11 [cluster="Unk.AreEqual", file="PatternDayTradingMarginModelTests.cs", label="Entry Unk.AreEqual", span=""];
m64_81 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", span="166-166"];
m64_82 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel()", span="168-168"];
m64_83 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="var security = CreateSecurity(Noon)", span="171-171"];
m64_86 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="security = CreateSecurity(Midnight)", span="177-177"];
m64_85 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)100 * 100 / 4, (double)model.GetMaintenanceMargin(security), 1e-3)", span="174-174"];
m64_88 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)100 * 100 / 2, (double)model.GetMaintenanceMargin(security), 1e-3)", span="180-180"];
m64_84 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="security.Holdings.SetHoldings(100m, 100)", span="172-172"];
m64_87 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="security.Holdings.SetHoldings(100m, 100)", span="178-178"];
m64_89 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyMaintenaceMargin()", span="166-166"];
m64_144 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="388-388"];
m64_36 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m64_142 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m64_154 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m64_161 [cluster="QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", span="86-86"];
m64_9 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", span="257-257"];
m64_147 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="var security = new Security(CreateUsEquitySecurityExchangeHours(), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="259-259"];
m64_148 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="TimeKeeper.SetUtcDateTime(newLocalTime.ConvertToUtc(security.Exchange.TimeZone))", span="260-260"];
m64_149 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="security.Exchange.SetLocalDateTimeFrontier(newLocalTime)", span="261-261"];
m64_151 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="security.SetMarketPrice(new IndicatorDataPoint(Symbols.SPY, newLocalTime, 100m))", span="263-263"];
m64_152 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="return security;", span="264-264"];
m64_150 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="security.SetLocalTimeKeeper(TimeKeeper.GetLocalTimeKeeper(TimeZones.NewYork))", span="262-262"];
m64_153 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateSecurity(System.DateTime)", span="257-257"];
m64_159 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="PatternDayTradingMarginModelTests.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m64_178 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="PatternDayTradingMarginModelTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m64_158 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m64_113 [cluster="QuantConnect.Securities.PatternDayTradingMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.PatternDayTradingMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="67-67"];
m64_179 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PatternDayTradingMarginModelTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m64_146 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="474-474"];
m64_38 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", span="90-90"];
m64_42 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var security = CreateSecurity(Noon)", span="98-98"];
m64_44 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)leverage, (double)model.GetLeverage(security), 1e-3)", span="101-101"];
m64_45 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)expected, (double)model.GetInitialMarginRequiredForOrder(security, order), 1e-3)", span="102-102"];
m64_41 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel(2m, leverage)", span="97-97"];
m64_43 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var order = new MarketOrder(security.Symbol, 100, security.LocalTime)", span="99-99"];
m64_39 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var leverage = 5m", span="94-94"];
m64_40 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var expected = 100 * 100m / leverage + 1", span="95-95"];
m64_46 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyOpenMarketLeverageAltVersion()", span="90-90"];
m64_157 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m64_180 [cluster="SecurityExchangeHours.cstr", file="PatternDayTradingMarginModelTests.cs", label="Entry SecurityExchangeHours.cstr", span=""];
m64_25 [cluster="Unk.AreNotEqual", file="PatternDayTradingMarginModelTests.cs", label="Entry Unk.AreNotEqual", span=""];
m64_26 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m64_181 [cluster="Unk.Select", file="PatternDayTradingMarginModelTests.cs", label="Entry Unk.Select", span=""];
m64_90 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="117-117"];
m64_112 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="PatternDayTradingMarginModelTests.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m64_155 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", span="267-267"];
m64_166 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="var sunday = LocalMarketHours.ClosedAllDay(DayOfWeek.Sunday)", span="269-269"];
m64_174 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="return new SecurityExchangeHours(TimeZones.NewYork, USHoliday.Dates.Select(x => x.Date), new[]\r\n            {\r\n                sunday, monday, tuesday, wednesday, thursday, friday, saturday\r\n            }.ToDictionary(x => x.DayOfWeek), earlyCloses);", span="278-281"];
m64_167 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="var monday = new LocalMarketHours(DayOfWeek.Monday, new TimeSpan(9, 30, 0), new TimeSpan(16, 0, 0))", span="270-270"];
m64_168 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="var tuesday = new LocalMarketHours(DayOfWeek.Tuesday, new TimeSpan(9, 30, 0), new TimeSpan(16, 0, 0))", span="271-271"];
m64_169 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="var wednesday = new LocalMarketHours(DayOfWeek.Wednesday, new TimeSpan(9, 30, 0), new TimeSpan(16, 0, 0))", span="272-272"];
m64_170 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="var thursday = new LocalMarketHours(DayOfWeek.Thursday, new TimeSpan(9, 30, 0), new TimeSpan(16, 0, 0))", span="273-273"];
m64_171 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="var friday = new LocalMarketHours(DayOfWeek.Friday, new TimeSpan(9, 30, 0), new TimeSpan(16, 0, 0))", span="274-274"];
m64_172 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="var saturday = LocalMarketHours.ClosedAllDay(DayOfWeek.Saturday)", span="275-275"];
m64_173 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="var earlyCloses = new Dictionary<DateTime, TimeSpan>()", span="277-277"];
m64_175 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.CreateUsEquitySecurityExchangeHours()", span="267-267"];
m64_182 [cluster="Unk.ToDictionary", file="PatternDayTradingMarginModelTests.cs", label="Entry Unk.ToDictionary", span=""];
m64_64 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Entry QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", span="136-136"];
m64_68 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var security = CreateSecurity(Midnight)", span="144-144"];
m64_72 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="security = CreateSecurity(NoonHoliday)", span="151-151"];
m64_76 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="security = CreateSecurity(NoonWeekend)", span="158-158"];
m64_70 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)leverage, (double)model.GetLeverage(security), 1e-3)", span="147-147"];
m64_74 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)leverage, (double)model.GetLeverage(security), 1e-3)", span="154-154"];
m64_78 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)leverage, (double)model.GetLeverage(security), 1e-3)", span="161-161"];
m64_71 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)expected, (double)model.GetInitialMarginRequiredForOrder(security, order), 1e-3)", span="148-148"];
m64_75 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)expected, (double)model.GetInitialMarginRequiredForOrder(security, order), 1e-3)", span="155-155"];
m64_79 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Assert.AreEqual((double)expected, (double)model.GetInitialMarginRequiredForOrder(security, order), 1e-3)", span="162-162"];
m64_67 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var model = new PatternDayTradingMarginModel(leverage, 4m)", span="141-141"];
m64_69 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var order = new MarketOrder(security.Symbol, 100, security.LocalTime)", span="145-145"];
m64_73 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="order = new MarketOrder(security.Symbol, 100, security.LocalTime)", span="152-152"];
m64_77 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="order = new MarketOrder(security.Symbol, 100, security.LocalTime)", span="159-159"];
m64_65 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var leverage = 3m", span="138-138"];
m64_66 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="var expected = 100 * 100m / leverage + 1", span="139-139"];
m64_80 [cluster="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", file="PatternDayTradingMarginModelTests.cs", label="Exit QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests.VerifyClosedMarketLeverageAltVersion()", span="136-136"];
m64_192 [file="PatternDayTradingMarginModelTests.cs", label="QuantConnect.Tests.Common.Securities.PatternDayTradingMarginModelTests", span=""];
m67_4 [cluster="System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", file="QCAlgorithm.cs", label="Entry System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", span="0-0"];
m67_30 [cluster="System.Math.Max(long, long)", file="QCAlgorithm.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m67_79 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="295-295"];
m67_80 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="var day = from.Date", span="297-297"];
m67_83 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="yield return day;", span="301-301"];
m67_81 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="day.Date <= thru.Date", span="297-297"];
m67_82 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="exchange.IsDateOpen(day)", span="299-299"];
m67_84 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="day = day.AddDays(1)", span="297-297"];
m67_85 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="295-295"];
m67_101 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141"];
m67_32 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", span="181-181"];
m67_33 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="return TimeSpan.FromTicks(Math.Min(one.Ticks, two.Ticks));", span="183-183"];
m67_34 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", span="181-181"];
m67_0 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", span="89-89"];
m67_1 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="QCAlgorithm.cs", label="utcDateTime = TimeZoneInfo.ConvertTimeToUtc(dateTime, timeZone)", span="91-91"];
m67_2 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="QCAlgorithm.cs", label="this.timeZone = timeZone", span="92-92"];
m67_3 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", span="89-89"];
m67_27 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="174-174"];
m67_28 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="return TimeSpan.FromTicks(Math.Max(one.Ticks, two.Ticks));", span="176-176"];
m67_29 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="174-174"];
m67_58 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="QCAlgorithm.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m67_59 [cluster="string.Substring(int, int)", file="QCAlgorithm.cs", label="Entry string.Substring(int, int)", span="0-0"];
m67_36 [cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.Max(System.DateTime, System.DateTime)", span="189-189"];
m67_37 [cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="return one > two ? one : two;", span="191-191"];
m67_38 [cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.Max(System.DateTime, System.DateTime)", span="189-189"];
m67_5 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m67_6 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.cs", label="DateTime time", span="129-129"];
m67_7 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.cs", label="time = EpochTime.AddSeconds(unixTimeStamp)", span="133-133"];
m67_9 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.cs", label="Log.Error(err, ''UnixTimeStamp: '' + unixTimeStamp)", span="137-137"];
m67_8 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.cs", label=Exception, span="135-135"];
m67_11 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.cs", label="return time;", span="140-140"];
m67_10 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.cs", label="time = DateTime.Now", span="138-138"];
m67_12 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m67_42 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.ParseDate(string)", span="207-207"];
m67_43 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="DateTime date", span="212-212"];
m67_44 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.SixCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="213-213"];
m67_46 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.EightCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="217-217"];
m67_48 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="DateTime.TryParseExact(dateToParse.Substring(0, 19), DateFormat.JsonFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="221-221"];
m67_50 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.US, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="225-225"];
m67_52 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="DateTime.TryParse(dateToParse, out date)", span="229-229"];
m67_45 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="return date;", span="215-215"];
m67_47 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="return date;", span="219-219"];
m67_49 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="return date;", span="223-223"];
m67_51 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="return date;", span="227-227"];
m67_53 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="return date;", span="231-231"];
m67_54 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label=Exception, span="234-234"];
m67_56 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="return DateTime.Now;", span="239-239"];
m67_55 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="Log.Error(err)", span="236-236"];
m67_57 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.ParseDate(string)", span="207-207"];
m67_24 [cluster="QuantConnect.Time.TimeStamp()", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.TimeStamp()", span="166-166"];
m67_25 [cluster="QuantConnect.Time.TimeStamp()", file="QCAlgorithm.cs", label="return DateTimeToUnixTimeStamp(DateTime.UtcNow);", span="168-168"];
m67_26 [cluster="QuantConnect.Time.TimeStamp()", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.TimeStamp()", span="166-166"];
m67_68 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="263-263"];
m67_69 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="var day = from.Date", span="265-265"];
m67_72 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="yield return day;", span="269-269"];
m67_70 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="day.Date <= thru.Date", span="265-265"];
m67_71 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="TradableDate(securities, day)", span="267-267"];
m67_73 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="day = day.AddDays(1)", span="265-265"];
m67_74 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="263-263"];
m67_23 [cluster="System.DateTime.ToString(string)", file="QCAlgorithm.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m67_110 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="376-376"];
m67_111 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="var count = 0", span="378-378"];
m67_112 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Log.Trace(''Time.TradeableDates(): Security Count: '' + securities.Count)", span="379-379"];
m67_113 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="EachDay(start, finish)", span="382-382"];
m67_114 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="TradableDate(securities, day)", span="384-384"];
m67_115 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="count++", span="386-386"];
m67_118 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="return count;", span="394-394"];
m67_116 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label=Exception, span="390-390"];
m67_117 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Log.Error(err)", span="392-392"];
m67_119 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="376-376"];
m67_134 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m67_109 [cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="115-115"];
m67_22 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m67_100 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithm.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m67_31 [cluster="System.TimeSpan.FromTicks(long)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m67_13 [cluster="System.DateTime.AddSeconds(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m67_86 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)", span="177-177"];
m67_35 [cluster="System.Math.Min(long, long)", file="QCAlgorithm.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m67_61 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m67_62 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="var day = from.Date", span="251-251"];
m67_64 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="yield return day;", span="252-252"];
m67_63 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="day.Date <= thru.Date", span="251-251"];
m67_65 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="day = day.AddDays(1)", span="251-251"];
m67_66 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m67_60 [cluster="System.DateTime.TryParse(string, out System.DateTime)", file="QCAlgorithm.cs", label="Entry System.DateTime.TryParse(string, out System.DateTime)", span="0-0"];
m67_15 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m67_16 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.cs", label="double timestamp = 0", span="150-150"];
m67_17 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.cs", label="timestamp = (time - new DateTime(1970, 1, 1, 0, 0, 0, 0)).TotalSeconds", span="153-153"];
m67_19 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.cs", label="Log.Error(err, time.ToString(''o''))", span="157-157"];
m67_18 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.cs", label=Exception, span="155-155"];
m67_20 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.cs", label="return timestamp;", span="159-159"];
m67_21 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m67_39 [cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.Min(System.DateTime, System.DateTime)", span="197-197"];
m67_40 [cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="return one < two ? one : two;", span="199-199"];
m67_41 [cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.Min(System.DateTime, System.DateTime)", span="197-197"];
m67_133 [cluster="System.ArgumentException.ArgumentException(string, string)", file="QCAlgorithm.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m67_75 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="352-352"];
m67_102 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.cs", label=securities, span="356-356"];
m67_103 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.cs", label="security.Exchange.IsOpenDuringBar(day.Date, day.Date.AddDays(1), security.IsExtendedMarketHours)", span="358-358"];
m67_105 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.cs", label=Exception, span="361-361"];
m67_107 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.cs", label="return false;", span="365-365"];
m67_104 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.cs", label="return true;", span="358-358"];
m67_106 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.cs", label="Log.Error(err)", span="363-363"];
m67_108 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="352-352"];
m67_76 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="282-282"];
m67_77 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="return EachTradeableDay(security.Exchange.Hours, from, thru);", span="284-284"];
m67_78 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="282-282"];
m67_120 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m67_121 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="406-406"];
m67_122 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="barSize <= TimeSpan.Zero", span="408-408"];
m67_124 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="var current = end.RoundDown(barSize)", span="413-413"];
m67_126 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="i < barCount", span="414-414"];
m67_128 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="current = current - barSize", span="417-417"];
m67_129 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="exchange.IsOpen(current, previous, extendedMarketHours)", span="418-418"];
m67_123 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="throw new ArgumentException(''barSize must be greater than TimeSpan.Zero'', ''barSize'');", span="410-410"];
m67_125 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="int i = 0", span="414-414"];
m67_127 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="var previous = current", span="416-416"];
m67_131 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="return current;", span="423-423"];
m67_130 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="i++", span="420-420"];
m67_132 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="406-406"];
m67_67 [cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m67_87 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="319-319"];
m67_88 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="var currentExchangeTime = from", span="321-321"];
m67_97 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="yield return currentInTimeZone.Date;", span="339-339"];
m67_89 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="thru = thru.Date.AddDays(1)", span="322-322"];
m67_91 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="var currentInTimeZone = currentExchangeTime.ConvertTo(exchange.TimeZone, timeZone)", span="326-326"];
m67_93 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone) > thru", span="330-330"];
m67_94 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="currentInTimeZoneEod = thru.ConvertTo(exchange.TimeZone, timeZone)", span="332-332"];
m67_95 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="var currentExchangeTimeEod = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="336-336"];
m67_96 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="exchange.IsOpen(currentExchangeTime, currentExchangeTimeEod, includeExtendedMarketHours)", span="337-337"];
m67_98 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="currentExchangeTime = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="342-342"];
m67_90 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="currentExchangeTime < thru", span="323-323"];
m67_92 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="var currentInTimeZoneEod = currentInTimeZone.Date.AddDays(1)", span="327-327"];
m67_99 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="319-319"];
m67_135 [file="QCAlgorithm.cs", label="out QuantConnect.Time.DateTimeWithZone", span=""];
m68_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", span="63-63"];
m68_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="RequestId = reqId", span="66-66"];
m68_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="Exchange = exchange", span="67-67"];
m68_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="UnderlyingConId = underlyingConId", span="68-68"];
m68_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="TradingClass = tradingClass", span="69-69"];
m68_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="Multiplier = multiplier", span="70-70"];
m68_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="Expirations = expirations", span="71-71"];
m68_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="Strikes = strikes", span="72-72"];
m68_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs.SecurityDefinitionOptionParameterEventArgs(int, string, int, string, string, System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<double>)", span="63-63"];
m68_9 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.SecurityDefinitionOptionParameterEventArgs", span=""];
m69_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", span="730-730"];
m69_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="var dict = new Dictionary<string, string>()", span="732-732"];
m69_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="headers != null", span="734-734"];
m69_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="PyDict.IsDictType(headers)", span="740-740"];
m69_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label=headers, span="742-742"];
m69_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="var value = (string)headers.GetItem(pyKey).AsManagedObject(typeof(string))", span="745-745"];
m69_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="throw new ArgumentException($''QCAlgorithm.Fetch(): Invalid argument. {headers.Repr()} is not a dict'');", span="751-751"];
m69_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="return Download(address, dict, userName, password);", span="755-755"];
m69_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="dict.Add(key, value)", span="746-746"];
m69_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="736-736"];
m69_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="var key = (string)pyKey.AsManagedObject(typeof(string))", span="744-744"];
m69_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", span="730-730"];
m69_374 [cluster="Unk.IsDictType", file="QCAlgorithm.Python.cs", label="Entry Unk.IsDictType", span=""];
m69_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="420-420"];
m69_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="422-422"];
m69_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="420-420"];
m69_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1366-1366"];
m69_432 [cluster="Unk.Split", file="QCAlgorithm.Python.cs", label="Entry Unk.Split", span=""];
m69_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="428-428"];
m69_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="430-430"];
m69_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, array[0], array[1], array[2], array[3])", span="431-431"];
m69_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="428-428"];
m69_185 [cluster="Unk.PlotIndicator", file="QCAlgorithm.Python.cs", label="Entry Unk.PlotIndicator", span=""];
m69_255 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m69_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="477-477"];
m69_163 [cluster="Unk.ToArray", file="QCAlgorithm.Python.cs", label="Entry Unk.ToArray", span=""];
m69_122 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m69_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="488-488"];
m69_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="490-490"];
m69_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="491-491"];
m69_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="492-492"];
m69_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="494-494"];
m69_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="493-493"];
m69_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="495-495"];
m69_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="488-488"];
m69_376 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m69_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="288-288"];
m69_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="288-288"];
m69_377 [cluster="Unk.Repr", file="QCAlgorithm.Python.cs", label="Entry Unk.Repr", span=""];
m69_34 [cluster="Unk.AddUniverse", file="QCAlgorithm.Python.cs", label="Entry Unk.AddUniverse", span=""];
m69_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m69_375 [cluster="Unk.GetItem", file="QCAlgorithm.Python.cs", label="Entry Unk.GetItem", span=""];
m69_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m69_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="583-583"];
m69_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="585-585"];
m69_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="588-598"];
m69_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="586-586"];
m69_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="586-586"];
m69_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", span="600-600"];
m69_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="583-583"];
m69_410 [cluster="Unk.Count", file="QCAlgorithm.Python.cs", label="Entry Unk.Count", span=""];
m69_434 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="QCAlgorithm.Python.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m69_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="612-612"];
m69_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return History(type, tickers, Time - span, Time, resolution);", span="614-614"];
m69_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="612-612"];
m69_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="974-974"];
m69_40 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Python.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m69_396 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m69_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m69_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="538-538"];
m69_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="540-540"];
m69_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(symbols, start, end, resolution));", span="543-543"];
m69_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="541-541"];
m69_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="541-541"];
m69_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="538-538"];
m69_433 [cluster="Unk.Replace", file="QCAlgorithm.Python.cs", label="Entry Unk.Replace", span=""];
m69_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1444-1444"];
m69_162 [cluster="Unk.Where", file="QCAlgorithm.Python.cs", label="Entry Unk.Where", span=""];
m69_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="326-326"];
m69_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="326-326"];
m69_394 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m69_79 [cluster="Unk.selector", file="QCAlgorithm.Python.cs", label="Entry Unk.selector", span=""];
m69_359 [cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31"];
m69_19 [cluster="QuantConnect.Securities.MarketHoursDatabase.SetEntryAlwaysOpen(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.SetEntryAlwaysOpen(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m69_395 [cluster="string.IsNullOrWhiteSpace(string)", file="QCAlgorithm.Python.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m69_421 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="822-822"];
m69_38 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="coarse(c).Select(x => (Symbol)x)", span="110-110"];
m69_37 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="110-110"];
m69_39 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="110-110"];
m69_42 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="110-110"];
m69_43 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="110-110"];
m69_44 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="110-110"];
m69_51 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="coarse(c).Select(x => (Symbol)x)", span="128-128"];
m69_57 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="fine(f).Select(x => (Symbol)x)", span="128-128"];
m69_50 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="128-128"];
m69_56 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="128-128"];
m69_52 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="128-128"];
m69_53 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="128-128"];
m69_54 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="128-128"];
m69_55 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="128-128"];
m69_58 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="128-128"];
m69_59 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="128-128"];
m69_60 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="128-128"];
m69_61 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="128-128"];
m69_67 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="141-141"];
m69_66 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="141-141"];
m69_68 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="141-141"];
m69_69 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="141-141"];
m69_70 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="141-141"];
m69_71 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="141-141"];
m69_77 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="153-153"];
m69_76 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="153-153"];
m69_78 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="153-153"];
m69_80 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="153-153"];
m69_81 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="153-153"];
m69_82 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="153-153"];
m69_88 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="168-168"];
m69_87 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="168-168"];
m69_89 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="168-168"];
m69_90 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="168-168"];
m69_91 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="168-168"];
m69_92 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="168-168"];
m69_126 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))", span="277-278"];
m69_129 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="278-278"];
m69_125 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="277-278"];
m69_127 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="277-278"];
m69_128 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="278-278"];
m69_130 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="278-278"];
m69_165 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="394-394"];
m69_166 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="394-394"];
m69_167 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="394-394"];
m69_171 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="408-408"];
m69_172 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="408-408"];
m69_173 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="408-408"];
m69_177 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="422-422"];
m69_178 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="422-422"];
m69_179 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="422-422"];
m69_250 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="563-564"];
m69_262 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Type.BaseType == CreateType(type).BaseType", span="564-564"];
m69_253 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return CreateHistoryRequest(config, start, end, resolution);", span="567-567"];
m69_248 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="560-568"];
m69_264 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="570-570"];
m69_249 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var security = Securities[x]", span="562-562"];
m69_251 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="config == null", span="565-565"];
m69_258 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="563-563"];
m69_261 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="564-564"];
m69_252 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return null;", span="565-565"];
m69_254 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="560-568"];
m69_259 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Resolution", span="563-563"];
m69_260 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="563-563"];
m69_263 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="564-564"];
m69_265 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="570-570"];
m69_266 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="570-570"];
m69_276 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="591-592"];
m69_291 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Type.BaseType == CreateType(type).BaseType", span="592-592"];
m69_279 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Resolution? res = resolution ?? security.Resolution", span="595-595"];
m69_280 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="596-596"];
m69_281 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return CreateHistoryRequest(config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="597-597"];
m69_274 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="588-598"];
m69_293 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="600-600"];
m69_275 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var security = Securities[x]", span="590-590"];
m69_277 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="config == null", span="593-593"];
m69_287 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="591-591"];
m69_290 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="592-592"];
m69_278 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return null;", span="593-593"];
m69_282 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="588-598"];
m69_288 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Resolution", span="591-591"];
m69_289 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="591-591"];
m69_292 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="592-592"];
m69_294 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="600-600"];
m69_295 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="600-600"];
m69_318 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Type.BaseType == requestedType.BaseType", span="632-632"];
m69_314 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="631-631"];
m69_317 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="632-632"];
m69_320 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="635-635"];
m69_315 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Resolution", span="631-631"];
m69_316 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="631-631"];
m69_319 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="632-632"];
m69_321 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x.Type.Name", span="635-635"];
m69_322 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="635-635"];
m69_412 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="814-820"];
m69_418 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="822-822"];
m69_413 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x == null", span="816-816"];
m69_415 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type))", span="817-817"];
m69_416 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return (dynamic)x.AsManagedObject(type);", span="818-818"];
m69_414 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return null;", span="816-816"];
m69_417 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="814-820"];
m69_419 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="822-822"];
m69_420 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="822-822"];
m69_422 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="GetIndicatorBaseType(x.GetType())", span="822-822"];
m69_423 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="822-822"];
m69_245 [cluster="Unk.History", file="QCAlgorithm.Python.cs", label="Entry Unk.History", span=""];
m69_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="208-208"];
m69_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="210-210"];
m69_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="208-208"];
m69_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="150-150"];
m69_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="152-152"];
m69_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="153-153"];
m69_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="150-150"];
m69_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="700-700"];
m69_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="702-702"];
m69_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="700-700"];
m69_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="378-378"];
m69_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="378-378"];
m69_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="352-352"];
m69_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="352-352"];
m69_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m69_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="return AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m);", span="56-56"];
m69_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m69_23 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="433-433"];
m69_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="626-626"];
m69_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var security = Securities[symbol]", span="628-628"];
m69_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var requestedType = CreateType(type)", span="630-630"];
m69_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="636-636"];
m69_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var request = CreateHistoryRequest(config, start, end, resolution)", span="639-639"];
m69_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                .FirstOrDefault(s => s.Type.BaseType == requestedType.BaseType)", span="631-632"];
m69_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="635-635"];
m69_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="config == null", span="633-633"];
m69_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(request).Memoize());", span="640-640"];
m69_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="626-626"];
m69_310 [cluster="ArgumentException.cstr", file="QCAlgorithm.Python.cs", label="Entry ArgumentException.cstr", span=""];
m69_33 [cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="74-74"];
m69_247 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="99-99"];
m69_436 [cluster="Unk.HasAttr", file="QCAlgorithm.Python.cs", label="Entry Unk.HasAttr", span=""];
m69_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="313-313"];
m69_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="313-313"];
m69_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="365-365"];
m69_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="365-365"];
m69_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="1067-1067"];
m69_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1265-1265"];
m69_284 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.Python.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m69_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433"];
m69_213 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Python.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m69_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1057-1057"];
m69_36 [cluster="Unk.AsManagedObject", file="QCAlgorithm.Python.cs", label="Entry Unk.AsManagedObject", span=""];
m69_164 [cluster="Unk.Plot", file="QCAlgorithm.Python.cs", label="Entry Unk.Plot", span=""];
m69_41 [cluster="Unk.Select", file="QCAlgorithm.Python.cs", label="Entry Unk.Select", span=""];
m69_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="763-763"];
m69_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="765-765"];
m69_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="!PyList.IsListType(pyObject)", span="768-768"];
m69_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="tmp.Append(pyObject)", span="771-771"];
m69_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label=pyObject, span="776-776"];
m69_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var tmp = new PyList()", span="770-770"];
m69_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var symbols = new List<Symbol>()", span="775-775"];
m69_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="pyObject = tmp", span="772-772"];
m69_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="symbols.Add(symbol)", span="785-785"];
m69_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="return symbols.Count == 0 ? null : symbols;", span="787-787"];
m69_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="778-778"];
m69_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="string.IsNullOrWhiteSpace(symbol.Value)", span="780-780"];
m69_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="763-763"];
m69_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="93-94"];
m69_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="84-84"];
m69_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = MarketHoursDatabase.SetEntryAlwaysOpen(Market.USA, symbol, SecurityType.Base, timeZone)", span="86-86"];
m69_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="89-89"];
m69_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="90-90"];
m69_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddToUserDefinedUniverse(security)", span="96-96"];
m69_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="return security;", span="97-97"];
m69_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="84-84"];
m69_123 [cluster="FuncUniverse.cstr", file="QCAlgorithm.Python.cs", label="Entry FuncUniverse.cstr", span=""];
m69_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="506-506"];
m69_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="508-508"];
m69_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(symbols, periods, resolution));", span="511-511"];
m69_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="509-509"];
m69_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="509-509"];
m69_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="506-506"];
m69_313 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m69_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="105-105"];
m69_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="107-107"];
m69_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var type = (Type)pycoarse.GetPythonType().AsManagedObject(typeof(Type))", span="114-114"];
m69_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse((dynamic)pycoarse.AsManagedObject(type))", span="115-115"];
m69_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="coarse != null", span="108-108"];
m69_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x))", span="110-110"];
m69_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="111-111"];
m69_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="105-105"];
m69_311 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m69_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="796-796"];
m69_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="type.BaseType == typeof(object)", span="798-798"];
m69_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="return type;", span="800-800"];
m69_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="return GetIndicatorBaseType(type.BaseType);", span="802-802"];
m69_401 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="796-796"];
m69_411 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Python.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m69_357 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="32-32"];
m69_392 [cluster="PyList.cstr", file="QCAlgorithm.Python.cs", label="Entry PyList.cstr", span=""];
m69_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1338-1338"];
m69_438 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m69_330 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Python.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m69_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="419-419"];
m69_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219"];
m69_204 [cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35"];
m69_256 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.Python.cs", label="Entry Unk.FirstOrDefault", span=""];
m69_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="138-138"];
m69_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="140-140"];
m69_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, resolution, d => selector(d).Select(x => (string)x))", span="141-141"];
m69_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="138-138"];
m69_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="271-271"];
m69_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="267-267"];
m69_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = MarketHoursDatabase.GetEntry(market, name, securityType)", span="269-269"];
m69_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="272-272"];
m69_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="273-273"];
m69_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<IEnumerable<IBaseData>, object[]>(pySelector)", span="275-275"];
m69_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="277-278"];
m69_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="270-270"];
m69_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="267-267"];
m69_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Download(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string)", span="1903-1903"];
m69_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="193-193"];
m69_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="195-195"];
m69_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="193-193"];
m69_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="300-300"];
m69_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="300-300"];
m69_393 [cluster="Unk.Append", file="QCAlgorithm.Python.cs", label="Entry Unk.Append", span=""];
m69_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="449-449"];
m69_391 [cluster="Unk.IsListType", file="QCAlgorithm.Python.cs", label="Entry Unk.IsListType", span=""];
m69_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1380-1380"];
m69_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="838-838"];
m69_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="840-840"];
m69_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="842-842"];
m69_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="845-854"];
m69_427 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="843-843"];
m69_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="844-844"];
m69_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="838-838"];
m69_223 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m69_20 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m69_22 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m69_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="681-681"];
m69_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="683-683"];
m69_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="685-685"];
m69_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="691-691"];
m69_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="pyBenchmark != null", span="686-686"];
m69_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="SetBenchmark(pyBenchmark)", span="688-688"];
m69_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="689-689"];
m69_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="681-681"];
m69_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="619-619"];
m69_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="522-522"];
m69_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="524-524"];
m69_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(symbols, span, resolution));", span="527-527"];
m69_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="525-525"];
m69_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="525-525"];
m69_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="522-522"];
m69_21 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m69_285 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m69_348 [cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38"];
m69_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="709-709"];
m69_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="711-711"];
m69_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="718-718"];
m69_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="securityInitializer1 != null", span="712-712"];
m69_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="SetSecurityInitializer(securityInitializer1)", span="714-714"];
m69_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="715-715"];
m69_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="709-709"];
m69_435 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m69_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="339-339"];
m69_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="339-339"];
m69_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="809-809"];
m69_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="811-811"];
m69_403 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = new[] { first, second, third, fourth }\r\n                    .Select(x =>\r\n                    {\r\n                        if (x == null) return null;\r\n                        var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type));\r\n                        return (dynamic)x.AsManagedObject(type);\r\n\r\n                    }).ToArray()", span="813-820"];
m69_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var types = array.Where(x => x != null).Select(x => GetIndicatorBaseType(x.GetType())).Distinct()", span="822-822"];
m69_407 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="return array;", span="829-829"];
m69_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="types.Count() > 1", span="824-824"];
m69_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="throw new Exception(''QCAlgorithm.GetIndicatorArray(). All indicators must be of the same type: data point, bar or tradebar.'');", span="826-826"];
m69_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="809-809"];
m69_120 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175"];
m69_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="222-222"];
m69_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="224-224"];
m69_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="222-222"];
m69_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="124-124"];
m69_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="126-126"];
m69_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var fine = PythonUtil.ToFunc<IEnumerable<FineFundamental>, object[]>(pyfine)", span="127-127"];
m69_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x), f => fine(f).Select(x => (Symbol)x))", span="128-128"];
m69_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="124-124"];
m69_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="457-457"];
m69_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1352-1352"];
m69_286 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.Python.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m69_121 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m69_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", span="41-41"];
m69_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="QCAlgorithm.Python.cs", label="PandasConverter = new PandasConverter()", span="43-43"];
m69_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", span="41-41"];
m69_431 [cluster="AssemblyName.cstr", file="QCAlgorithm.Python.cs", label="Entry AssemblyName.cstr", span=""];
m69_409 [cluster="Unk.Distinct", file="QCAlgorithm.Python.cs", label="Entry Unk.Distinct", span=""];
m69_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="468-468"];
m69_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="470-470"];
m69_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="471-471"];
m69_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="472-472"];
m69_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="474-474"];
m69_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="473-473"];
m69_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="475-475"];
m69_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="468-468"];
m69_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="653-653"];
m69_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="resolution == Resolution.Tick", span="655-655"];
m69_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="657-657"];
m69_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var end = Time.RoundDown((resolution ?? Securities[symbol].Resolution).ToTimeSpan())", span="658-658"];
m69_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return History(type, symbol, start, end, resolution);", span="659-659"];
m69_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="655-655"];
m69_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="653-653"];
m69_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="406-406"];
m69_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="408-408"];
m69_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="406-406"];
m69_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="671-671"];
m69_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return History(type, symbol, Time - span, Time, resolution);", span="673-673"];
m69_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="671-671"];
m69_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="640-640"];
m69_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="165-165"];
m69_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="167-167"];
m69_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="168-168"];
m69_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="165-165"];
m69_437 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m69_35 [cluster="Unk.GetPythonType", file="QCAlgorithm.Python.cs", label="Entry Unk.GetPythonType", span=""];
m69_342 [cluster="Unk.GIL", file="QCAlgorithm.Python.cs", label="Entry Unk.GIL", span=""];
m69_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="252-252"];
m69_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="254-254"];
m69_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="252-252"];
m69_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="437-437"];
m69_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="439-439"];
m69_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, array[0], array[1], array[2], array[3])", span="440-440"];
m69_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="437-437"];
m69_373 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m69_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="237-237"];
m69_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="239-239"];
m69_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="237-237"];
m69_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="179-179"];
m69_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="181-181"];
m69_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="179-179"];
m69_246 [cluster="Unk.Memoize", file="QCAlgorithm.Python.cs", label="Entry Unk.Memoize", span=""];
m69_257 [cluster="Unk.CreateHistoryRequest", file="QCAlgorithm.Python.cs", label="Entry Unk.CreateHistoryRequest", span=""];
m69_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m69_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="return AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage);", span="71-71"];
m69_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m69_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="452-452"];
m69_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var resolution = GetSubscription(symbol).Resolution", span="454-454"];
m69_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="455-455"];
m69_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="452-452"];
m69_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="392-392"];
m69_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="394-394"];
m69_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="392-392"];
m69_309 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.Python.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m69_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="555-555"];
m69_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="557-557"];
m69_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(config, start, end, resolution);\r\n            })", span="560-568"];
m69_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="558-558"];
m69_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="558-558"];
m69_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", span="570-570"];
m69_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="555-555"];
m69_439 [file="QCAlgorithm.Python.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m69_440 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m69_441 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m69_442 [file="QCAlgorithm.Python.cs", label=fine, span=""];
m69_443 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m69_444 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m69_445 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m69_446 [file="QCAlgorithm.Python.cs", label="QuantConnect.SecurityType", span=""];
m69_447 [file="QCAlgorithm.Python.cs", label=string, span=""];
m69_448 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m69_449 [file="QCAlgorithm.Python.cs", label=PyObject, span=""];
m69_450 [file="QCAlgorithm.Python.cs", label="System.DateTime", span=""];
m69_451 [file="QCAlgorithm.Python.cs", label="System.DateTime", span=""];
m69_452 [file="QCAlgorithm.Python.cs", label="QuantConnect.Resolution?", span=""];
m69_453 [file="QCAlgorithm.Python.cs", label=PyObject, span=""];
m69_454 [file="QCAlgorithm.Python.cs", label="QuantConnect.Resolution?", span=""];
m69_455 [file="QCAlgorithm.Python.cs", label=int, span=""];
m69_456 [file="QCAlgorithm.Python.cs", label=requestedType, span=""];
m70_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m70_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.Trading.cs", label="RequestId = requestId", span="45-45"];
m70_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.Trading.cs", label="Contract = contract", span="46-46"];
m70_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.Trading.cs", label="Execution = execution", span="47-47"];
m70_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m70_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m70_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="QCAlgorithm.Trading.cs", label="return $''RequestId: {RequestId}, Symbol: {Contract.Symbol}, OrderId: {Execution.OrderId}, Time: {Execution.Time}, Side: {Execution.Side}, Shares: {Execution.Shares}, Price: {Execution.Price}, CumQty: {Execution.CumQty}, PermId: {Execution.PermId}, Account: {Execution.AcctNumber}, ExecId: {Execution.ExecId}'';", span="55-55"];
m70_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m70_8 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", span=""];
m71_38 [cluster="System.Math.Truncate(decimal)", file="RegressionTests.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m71_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m71_37 [cluster="System.Math.Abs(decimal)", file="RegressionTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m71_21 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", span="47-47"];
m71_22 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="var quantity = Math.Truncate((Portfolio.Cash + Portfolio.TotalFees) / Math.Abs(e.Value + 1))", span="49-49"];
m71_23 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="!Portfolio.Invested", span="50-50"];
m71_24 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Order(''BTCUSD'', quantity)", span="52-52"];
m71_25 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Portfolio[''BTCUSD''].Quantity == quantity", span="54-54"];
m71_27 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Portfolio[''BTCUSD''].Quantity == quantity + 0.1m", span="58-58"];
m71_29 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Portfolio[''BTCUSD''].Quantity == quantity + 0.11m", span="62-62"];
m71_31 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Portfolio[''BTCUSD''].Quantity == quantity + 0.09m", span="66-66"];
m71_26 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Order(''BTCUSD'', 0.1)", span="56-56"];
m71_28 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Order(''BTCUSD'', 0.01)", span="60-60"];
m71_30 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Order(''BTCUSD'', -0.02)", span="64-64"];
m71_32 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Order(''BTCUSD'', 0.001)", span="69-69"];
m71_33 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="SetHoldings(''BTCUSD'', -2.0m)", span="71-71"];
m71_34 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="SetHoldings(''BTCUSD'', 2.0m)", span="72-72"];
m71_35 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Quit()", span="73-73"];
m71_36 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="RegressionTests.cs", label="Exit QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", span="47-47"];
m71_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m71_18 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(int)", file="RegressionTests.cs", label="Entry QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(int)", span="38-38"];
m71_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1362-1362"];
m71_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1046-1046"];
m71_19 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="RegressionTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m71_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m71_0 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", span="30-30"];
m71_1 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="SetStartDate(2015, 11, 12)", span="32-32"];
m71_2 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="SetEndDate(2016, 04, 01)", span="33-33"];
m71_3 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="SetCash(100000)", span="36-36"];
m71_4 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="SetBrokerageModel(BrokerageName.GDAX, AccountType.Cash)", span="37-37"];
m71_5 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="SetTimeZone(NodaTime.DateTimeZone.Utc)", span="39-39"];
m71_6 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="var security = AddSecurity(SecurityType.Crypto, ''BTCUSD'', Resolution.Daily, Market.GDAX, false, 3.3m, true)", span="40-40"];
m71_7 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="var con = new QuoteBarConsolidator(1)", span="41-41"];
m71_10 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="SetBenchmark(security.Symbol)", span="44-44"];
m71_8 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="SubscriptionManager.AddConsolidator(''BTCUSD'', con)", span="42-42"];
m71_9 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="con.DataConsolidated += DataConsolidated", span="43-43"];
m71_11 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="RegressionTests.cs", label="Exit QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", span="30-30"];
m71_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1165-1165"];
m71_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1756-1756"];
m71_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="954-954"];
m71_16 [cluster="Unk.SetTimeZone", file="RegressionTests.cs", label="Entry Unk.SetTimeZone", span=""];
m71_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1140-1140"];
m71_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1089-1089"];
m71_43 [file="RegressionTests.cs", label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", span=""];
m72_9 [cluster="Unk.AddHeader", file="RestSubscriptionStreamReader.cs", label="Entry Unk.AddHeader", span=""];
m72_7 [cluster="RestClient.cstr", file="RestSubscriptionStreamReader.cs", label="Entry RestClient.cstr", span=""];
m72_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", file="RestSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", span="70-70"];
m72_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", file="RestSubscriptionStreamReader.cs", label="var response = _client.Execute(_request)", span="74-74"];
m72_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", file="RestSubscriptionStreamReader.cs", label="response != null", span="75-75"];
m72_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", file="RestSubscriptionStreamReader.cs", label="return response.Content;", span="77-77"];
m72_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", file="RestSubscriptionStreamReader.cs", label=Exception, span="80-80"];
m72_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", file="RestSubscriptionStreamReader.cs", label="return string.Empty;", span="85-85"];
m72_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", file="RestSubscriptionStreamReader.cs", label="Log.Error(err)", span="82-82"];
m72_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", file="RestSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.ReadLine()", span="70-70"];
m72_8 [cluster="RestRequest.cstr", file="RestSubscriptionStreamReader.cs", label="Entry RestRequest.cstr", span=""];
m72_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.Dispose()", file="RestSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.Dispose()", span="91-91"];
m72_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.Dispose()", file="RestSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.Dispose()", span="91-91"];
m72_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RestSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="37-37"];
m72_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=green, community=0, file="RestSubscriptionStreamReader.cs", label="_client = new RestClient(source)", prediction=110, span="39-39"];
m72_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RestSubscriptionStreamReader.cs", label="headers != null", span="42-42"];
m72_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=green, community=0, file="RestSubscriptionStreamReader.cs", label=headers, prediction=111, span="44-44"];
m72_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RestSubscriptionStreamReader.cs", label="_request = new RestRequest(Method.GET)", span="40-40"];
m72_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RestSubscriptionStreamReader.cs", label="_request.AddHeader(header.Key, header.Value)", span="46-46"];
m72_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RestSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="37-37"];
m72_18 [cluster="Unk.Execute", file="RestSubscriptionStreamReader.cs", label="Entry Unk.Execute", span=""];
m72_22 [file="RestSubscriptionStreamReader.cs", label="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader", span=""];
m73_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="ScheduledEvent.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="47-47"];
m73_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="ScheduledEvent.cs", label="Time = time", span="49-49"];
m73_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="ScheduledEvent.cs", label="Data = data", span="50-50"];
m73_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="ScheduledEvent.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="47-47"];
m73_4 [file="ScheduledEvent.cs", label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", span=""];
m74_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.DisplayGroupListEventArgs.DisplayGroupListEventArgs(int, string)", file="ScheduledEventTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.DisplayGroupListEventArgs.DisplayGroupListEventArgs(int, string)", span="39-39"];
m74_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.DisplayGroupListEventArgs.DisplayGroupListEventArgs(int, string)", file="ScheduledEventTests.cs", label="RequestId = reqId", span="41-41"];
m74_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.DisplayGroupListEventArgs.DisplayGroupListEventArgs(int, string)", file="ScheduledEventTests.cs", label="Groups = groups", span="42-42"];
m74_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.DisplayGroupListEventArgs.DisplayGroupListEventArgs(int, string)", file="ScheduledEventTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.DisplayGroupListEventArgs.DisplayGroupListEventArgs(int, string)", span="39-39"];
m74_4 [file="ScheduledEventTests.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.DisplayGroupListEventArgs", span=""];
m75_0 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="ScheduleManager.cs", label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m75_1 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="ScheduleManager.cs", label="var path = $''{id}-log.txt''", span="19-19"];
m75_2 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="ScheduleManager.cs", label="File.WriteAllLines(path, logs)", span="20-20"];
m75_58 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="ScheduleManager.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="0-0"];
m75_7 [cluster="System.IO.Path.Combine(string, string)", file="ScheduleManager.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m75_5 [cluster="QuantConnect.Securities.UniverseManager.GetEnumerator()", file="ScheduleManager.cs", label="return _universes.GetEnumerator();", span="56-56"];
m75_50 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m75_51 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="ScheduleManager.cs", label="return _universes.TryGetValue(key, out value);", span="196-196"];
m75_52 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m75_43 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", span="176-176"];
m75_45 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", color=green, community=0, file="ScheduleManager.cs", label="_universes.TryRemove(key, out universe)", prediction=112, span="179-179"];
m75_44 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="ScheduleManager.cs", label="Universe universe", span="178-178"];
m75_46 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="ScheduleManager.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, universe))", span="181-181"];
m75_48 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", color=green, community=0, file="ScheduleManager.cs", label="return false;", prediction=113, span="184-184"];
m75_47 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="ScheduleManager.cs", label="return true;", span="182-182"];
m75_49 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", span="176-176"];
m75_8 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", file="ScheduleManager.cs", label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", span="29-29"];
m75_9 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", file="ScheduleManager.cs", label="File.WriteAllText(Path.Combine(Directory.GetCurrentDirectory(), name), JsonConvert.SerializeObject(result, Formatting.Indented))", span="31-31"];
m75_10 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", file="ScheduleManager.cs", label="Exit QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", span="29-29"];
m75_6 [cluster="QuantConnect.Securities.UniverseManager.GetEnumerator()", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.GetEnumerator()", span="54-54"];
m75_12 [cluster="QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="75-75"];
m75_33 [cluster="QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", span="152-152"];
m75_34 [cluster="QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", file="ScheduleManager.cs", label="return _universes.ContainsKey(key);", span="154-154"];
m75_35 [cluster="QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", span="152-152"];
m75_11 [cluster="Unk.SerializeObject", file="ScheduleManager.cs", label="Entry Unk.SerializeObject", span=""];
m75_42 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="260-260"];
m75_54 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="ScheduleManager.cs", label="var handler = CollectionChanged", span="262-262"];
m75_56 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="ScheduleManager.cs", label="handler(this, e)", span="263-263"];
m75_55 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="ScheduleManager.cs", label="handler != null", span="263-263"];
m75_57 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="260-260"];
m75_13 [cluster="QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="Add(item.Key, item.Value)", span="77-77"];
m75_14 [cluster="QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="75-75"];
m75_40 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="ScheduleManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m75_27 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="ScheduleManager.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m75_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ScheduleManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m75_32 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="ScheduleManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m75_4 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="ScheduleManager.cs", label="Exit QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m75_3 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="ScheduleManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m75_28 [cluster="QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="117-117"];
m75_30 [cluster="QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="return _universes.TryRemove(item.Key, out universe);", span="120-120"];
m75_29 [cluster="QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="Universe universe", span="119-119"];
m75_31 [cluster="QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="117-117"];
m75_15 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m75_37 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="ScheduleManager.cs", label="_universes.TryAdd(key, universe)", span="163-163"];
m75_38 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="ScheduleManager.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, universe))", span="165-165"];
m75_39 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m75_36 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="ScheduleManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m75_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ScheduleManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m75_24 [cluster="QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", span="105-105"];
m75_25 [cluster="QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", file="ScheduleManager.cs", label="((IDictionary<Symbol, Universe>)_universes).CopyTo(array, arrayIndex)", span="107-107"];
m75_26 [cluster="QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", span="105-105"];
m75_41 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="ScheduleManager.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m75_20 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="96-96"];
m75_21 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="return _universes.Contains(item);", span="98-98"];
m75_22 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="96-96"];
m75_19 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="ScheduleManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m75_16 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="ScheduleManager.cs", label="Entry QuantConnect.Securities.UniverseManager.Clear()", span="84-84"];
m75_17 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="ScheduleManager.cs", label="_universes.Clear()", span="86-86"];
m75_18 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="ScheduleManager.cs", label="Exit QuantConnect.Securities.UniverseManager.Clear()", span="84-84"];
m75_59 [file="ScheduleManager.cs", label="QuantConnect.Securities.UniverseManager", span=""];
m76_10 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m76_12 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="Security.cs", label="_currencies.AddOrUpdate(symbol, cash)", span="66-66"];
m76_11 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="Security.cs", label="var cash = new Cash(symbol, quantity, conversionRate)", span="65-65"];
m76_13 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m76_97 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", file="Security.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m76_51 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="166-166"];
m76_52 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="_currencies.AddOrUpdate(item.Key, item.Value)", span="168-168"];
m76_53 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="166-166"];
m76_50 [cluster="System.Text.StringBuilder.ToString()", file="Security.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m76_101 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="Security.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m76_46 [cluster="QuantConnect.Securities.Cash.ToString()", file="Security.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="222-222"];
m76_82 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m76_83 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Security.cs", label="return _currencies.TryGetValue(symbol, out value);", span="238-238"];
m76_84 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m76_61 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.Remove(string)", span="193-193"];
m76_63 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="Security.cs", label="var removed = _currencies.TryRemove(symbol, out cash)", span="196-196"];
m76_62 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="Security.cs", label="Cash cash = null", span="195-195"];
m76_64 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="Security.cs", label="!removed", span="197-197"];
m76_66 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="Security.cs", label="return removed;", span="201-201"];
m76_65 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="Security.cs", label="Log.Error(string.Format(''CashBook.Remove(): Failed to remove the cash book record for symbol {0}'', symbol))", span="199-199"];
m76_67 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.Remove(string)", span="193-193"];
m76_54 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="176-176"];
m76_55 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="Security.cs", label="_currencies.AddOrUpdate(symbol, value)", span="178-178"];
m76_56 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="176-176"];
m76_70 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Security.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m76_47 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Security.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
m76_3 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m76_4 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="Security.cs", label="_currencies = new ConcurrentDictionary<string, Cash>()", span="52-52"];
m76_5 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="Security.cs", label="_currencies.AddOrUpdate(AccountCurrency, new Cash(AccountCurrency, 0, 1.0m))", span="53-53"];
m76_6 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m76_98 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", span="308-308"];
m76_99 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="Security.cs", label="return ((IEnumerable) _currencies).GetEnumerator();", span="310-310"];
m76_100 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", span="308-308"];
m76_93 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="Security.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m76_85 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Security.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m76_34 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.ToString()", span="125-125"];
m76_37 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label=Values, span="129-129"];
m76_40 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label="sb.AppendLine(string.Format(''CashBook Total Value:                {0}{1}'', \r\n                Currencies.GetCurrencySymbol(AccountCurrency), \r\n                Math.Round(TotalValueInAccountCurrency, 2))\r\n                )", span="134-137"];
m76_36 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label="sb.AppendLine(string.Format(''{0} {1,13}    {2,10} = {3}'', ''Symbol'', ''Quantity'', ''Conversion'', ''Value in '' + AccountCurrency))", span="128-128"];
m76_38 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label="sb.AppendLine(value.ToString())", span="131-131"];
m76_39 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label="sb.AppendLine(''-------------------------------------------------'')", span="133-133"];
m76_35 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label="var sb = new StringBuilder()", span="127-127"];
m76_41 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label="return sb.ToString();", span="139-139"];
m76_42 [cluster="QuantConnect.Securities.CashBook.ToString()", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.ToString()", span="125-125"];
m76_68 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="Security.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m76_57 [cluster="QuantConnect.Securities.CashBook.Clear()", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.Clear()", span="184-184"];
m76_58 [cluster="QuantConnect.Securities.CashBook.Clear()", file="Security.cs", label="_currencies.Clear()", span="186-186"];
m76_59 [cluster="QuantConnect.Securities.CashBook.Clear()", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.Clear()", span="184-184"];
m76_7 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="Security.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m76_78 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="224-224"];
m76_79 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="Security.cs", label="return _currencies.ContainsKey(symbol);", span="226-226"];
m76_80 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.ContainsKey(string)", span="224-224"];
m76_69 [cluster="string.Format(string, object)", file="Security.cs", label="Entry string.Format(string, object)", span="0-0"];
m76_14 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m76_16 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="Security.cs", label="_currencies.Values", span="81-81"];
m76_17 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="Security.cs", label="var security = cash.EnsureCurrencyDataFeed(securities, subscriptions, marketHoursDatabase, symbolPropertiesDatabase, marketMap, this)", span="83-83"];
m76_15 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="Security.cs", label="var addedSecurities = new List<Security>()", span="80-80"];
m76_19 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="Security.cs", label="addedSecurities.Add(security)", span="86-86"];
m76_18 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="Security.cs", label="security != null", span="84-84"];
m76_20 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="Security.cs", label="return addedSecurities;", span="89-89"];
m76_21 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m76_9 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="Security.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m76_48 [cluster="System.Math.Round(decimal, int)", file="Security.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m76_31 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="113-113"];
m76_32 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="Security.cs", label="return Convert(sourceQuantity, sourceCurrency, AccountCurrency);", span="115-115"];
m76_33 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="113-113"];
m76_43 [cluster="System.Text.StringBuilder.StringBuilder()", file="Security.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m76_81 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="Security.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m76_44 [cluster="string.Format(string, params object[])", file="Security.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m76_25 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.Convert(decimal, string, string)", span="99-99"];
m76_26 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="Security.cs", label="var source = this[sourceCurrency]", span="101-101"];
m76_27 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="Security.cs", label="var destination = this[destinationCurrency]", span="102-102"];
m76_28 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="Security.cs", label="var conversionRate = source.ConversionRate*destination.ConversionRate", span="103-103"];
m76_29 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="Security.cs", label="return sourceQuantity*conversionRate;", span="104-104"];
m76_30 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.Convert(decimal, string, string)", span="99-99"];
m76_24 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Security.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m76_89 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="Security.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m76_8 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Security.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="65-65"];
m76_49 [cluster="string.Format(string, object, object)", file="Security.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m76_94 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.GetEnumerator()", span="303-303"];
m76_95 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="Security.cs", label="return _currencies.GetEnumerator();", span="305-305"];
m76_96 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.GetEnumerator()", span="303-303"];
m76_45 [cluster="System.Text.StringBuilder.AppendLine(string)", file="Security.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m76_23 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Security.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="130-130"];
m76_90 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="255-255"];
m76_91 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="Security.cs", label="((IDictionary<string, Cash>) _currencies).CopyTo(array, arrayIndex)", span="257-257"];
m76_92 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="255-255"];
m76_60 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="Security.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m76_86 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="245-245"];
m76_87 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", color=green, community=0, file="Security.cs", label="return _currencies.Contains(item);", prediction=114, span="247-247"];
m76_88 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="245-245"];
m76_71 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="208-208"];
m76_73 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="var removed = _currencies.TryRemove(item.Key, out cash)", span="211-211"];
m76_72 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="Cash cash = null", span="210-210"];
m76_74 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="!removed", span="212-212"];
m76_75 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="Log.Error(string.Format(''CashBook.Remove(): Failed to remove the cash book record for symbol {0} - {1}'', item.Key, item.Value != null ? item.Value.ToString() : ''(null)''))", span="214-214"];
m76_76 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="return removed;", span="216-216"];
m76_77 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="Security.cs", label="Exit QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="208-208"];
m76_102 [file="Security.cs", label="QuantConnect.Securities.CashBook", span=""];
m78_5 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", file="SecurityHolding.cs", label="Exit QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", span="57-57"];
m78_8 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Exit()", file="SecurityHolding.cs", label="Entry QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Exit()", span="67-67"];
m78_9 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Exit()", file="SecurityHolding.cs", label="Exit QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Exit()", span="67-67"];
m78_0 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi)", file="SecurityHolding.cs", label="Entry QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi)", span="45-45"];
m78_1 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi)", file="SecurityHolding.cs", label="Exit QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi)", span="45-45"];
m78_6 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Run()", file="SecurityHolding.cs", label="Entry QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Run()", span="62-62"];
m78_7 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Run()", file="SecurityHolding.cs", label="Exit QuantConnect.Lean.Engine.Alpha.IAlphaHandler.Run()", span="62-62"];
m78_2 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.OnAfterAlgorithmInitialized(QuantConnect.Interfaces.IAlgorithm)", file="SecurityHolding.cs", label="Entry QuantConnect.Lean.Engine.Alpha.IAlphaHandler.OnAfterAlgorithmInitialized(QuantConnect.Interfaces.IAlgorithm)", span="52-52"];
m78_3 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.OnAfterAlgorithmInitialized(QuantConnect.Interfaces.IAlgorithm)", file="SecurityHolding.cs", label="Exit QuantConnect.Lean.Engine.Alpha.IAlphaHandler.OnAfterAlgorithmInitialized(QuantConnect.Interfaces.IAlgorithm)", span="52-52"];
m80_24 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Assert.IsNotNull(security.PortfolioModel)", span="56-56"];
m80_12 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="SecurityTests.cs", label="GetRealBody(window[2]) <= GetCandleAverage(CandleSettingType.BodyDoji, _bodyDojiPeriodTotal, window[2]) &&\r\n                // 2nd: doji\r\n                GetRealBody(window[1]) <= GetCandleAverage(CandleSettingType.BodyDoji, _bodyDojiPeriodTotal, window[2]) &&\r\n                // 3rd: doji\r\n                GetRealBody(input) <= GetCandleAverage(CandleSettingType.BodyDoji, _bodyDojiPeriodTotal, window[2])", span="83-87"];
m80_180 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", file="SecurityTests.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, false);", span="213-213"];
m80_181 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", span="211-211"];
m80_0 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar(string)", file="SecurityTests.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar(string)", span="40-40"];
m80_3 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandleSettings.Get(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType)", file="SecurityTests.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandleSettings.Get(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType)", span="46-46"];
m80_1 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar(string)", file="SecurityTests.cs", label="_bodyDojiAveragePeriod = CandleSettings.Get(CandleSettingType.BodyDoji).AveragePeriod", span="43-43"];
m80_2 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar(string)", file="SecurityTests.cs", label="Exit QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar(string)", span="40-40"];
m80_9 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="SecurityTests.cs", label="_bodyDojiPeriodTotal += GetCandleRange(CandleSettingType.BodyDoji, input)", span="74-74"];
m80_4 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar()", file="SecurityTests.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar()", span="49-49"];
m80_5 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar()", file="SecurityTests.cs", label="Exit QuantConnect.Indicators.CandlestickPatterns.Tristar.Tristar()", span="49-49"];
m80_6 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="SecurityTests.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.Tristar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", span="68-68"];
m80_7 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="SecurityTests.cs", label="!IsReady", span="70-70"];
m80_8 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="SecurityTests.cs", label="Samples >= Period - _bodyDojiAveragePeriod - 2 && Samples < Period - 2", span="72-72"];
m80_10 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="SecurityTests.cs", label="return 0m;", span="77-77"];
m80_162 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", span="185-185"];
m80_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="Assert.AreEqual(0, securityCache.Volume)", span="195-195"];
m80_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="Assert.AreEqual(10, securityCache.Volume)", span="199-199"];
m80_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="Assert.AreEqual(20, securityCache.Volume)", span="203-203"];
m80_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="var securityCache = new SecurityCache()", span="193-193"];
m80_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="securityCache.AddData(tick1)", span="197-197"];
m80_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="securityCache.AddData(tick2)", span="201-201"];
m80_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="tick2.Update(1, 1, 1, 20, 1, 1)", span="191-191"];
m80_163 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="var tick1 = new Tick()", span="187-187"];
m80_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="var tick2 = new Tick()", span="190-190"];
m80_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="tick1.Update(1, 1, 1, 10, 1, 1)", span="188-188"];
m80_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", span="185-185"];
m80_108 [cluster="Unk.AlwaysOpen", file="SecurityTests.cs", label="Entry Unk.AlwaysOpen", span=""];
m80_40 [cluster="Unk.IsNotNull", file="SecurityTests.cs", label="Entry Unk.IsNotNull", span=""];
m80_175 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityTests.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="398-398"];
m80_42 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", span="73-73"];
m80_43 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="var security = GetSecurity()", span="75-75"];
m80_44 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="security.Holdings.SetHoldings(100m, 100)", span="78-78"];
m80_45 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="80-80"];
m80_46 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.AreEqual(100, security.Holdings.Quantity)", span="81-81"];
m80_47 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsTrue(security.HoldStock)", span="82-82"];
m80_48 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsTrue(security.Invested)", span="83-83"];
m80_49 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsTrue(security.Holdings.IsLong)", span="84-84"];
m80_50 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsFalse(security.Holdings.IsShort)", span="85-85"];
m80_51 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="security.Holdings.SetHoldings(100m, -100)", span="88-88"];
m80_52 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="90-90"];
m80_53 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.AreEqual(-100, security.Holdings.Quantity)", span="91-91"];
m80_54 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsTrue(security.HoldStock)", span="92-92"];
m80_55 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsTrue(security.Invested)", span="93-93"];
m80_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsFalse(security.Holdings.IsLong)", span="94-94"];
m80_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsTrue(security.Holdings.IsShort)", span="95-95"];
m80_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="security.Holdings.SetHoldings(100m, 0)", span="98-98"];
m80_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="100-100"];
m80_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="101-101"];
m80_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsFalse(security.HoldStock)", span="102-102"];
m80_62 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsFalse(security.Invested)", span="103-103"];
m80_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsFalse(security.Holdings.IsLong)", span="104-104"];
m80_64 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Assert.IsFalse(security.Holdings.IsShort)", span="105-105"];
m80_65 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", span="73-73"];
m80_14 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m80_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="SecurityTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m80_19 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="var security = GetSecurity()", span="50-50"];
m80_11 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m80_13 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m80_18 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", span="48-48"];
m80_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Assert.IsNotNull(security.Exchange)", span="52-52"];
m80_15 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m80_17 [cluster="Unk.AreEqual", file="SecurityTests.cs", label="Entry Unk.AreEqual", span=""];
m80_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Assert.IsInstanceOf<SecurityExchange>(security.Exchange)", span="53-53"];
m80_69 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", span="110-110"];
m80_70 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="var security = GetSecurity()", span="112-112"];
m80_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="security.SetMarketPrice(new TradeBar(DateTime.Now, Symbols.SPY, 101m, 103m, 100m, 102m, 100000))", span="115-115"];
m80_72 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(101m, security.Open)", span="117-117"];
m80_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(103m, security.High)", span="118-118"];
m80_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(100m, security.Low)", span="119-119"];
m80_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(102m, security.Close)", span="120-120"];
m80_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(100000, security.Volume)", span="121-121"];
m80_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, Symbols.SPY, 104m, 104m, 104m))", span="124-124"];
m80_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(103m, security.High)", span="125-125"];
m80_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(102m, security.Close)", span="126-126"];
m80_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(104m, security.Price)", span="127-127"];
m80_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, Symbols.SPY, 99m, 99m, 99m))", span="130-130"];
m80_82 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(100m, security.Low)", span="131-131"];
m80_83 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(102m, security.Close)", span="132-132"];
m80_84 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Assert.AreEqual(99m, security.Price)", span="133-133"];
m80_85 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", span="110-110"];
m80_177 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="94-94"];
m80_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Assert.IsInstanceOf<SecurityCache>(security.Cache)", span="55-55"];
m80_159 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="181-181"];
m80_100 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="147-147"];
m80_101 [cluster="lambda expression", file="SecurityTests.cs", label="security.SetLeverage(0.1m)", span="147-147"];
m80_102 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="147-147"];
m80_122 [cluster="lambda expression", file="SecurityTests.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="164-164"];
m80_126 [cluster="lambda expression", file="SecurityTests.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="166-166"];
m80_129 [cluster="lambda expression", file="SecurityTests.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="167-167"];
m80_132 [cluster="lambda expression", file="SecurityTests.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="168-168"];
m80_135 [cluster="lambda expression", file="SecurityTests.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="169-169"];
m80_147 [cluster="lambda expression", file="SecurityTests.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="177-177"];
m80_151 [cluster="lambda expression", file="SecurityTests.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="178-178"];
m80_154 [cluster="lambda expression", file="SecurityTests.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="179-179"];
m80_157 [cluster="lambda expression", file="SecurityTests.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="180-180"];
m80_160 [cluster="lambda expression", file="SecurityTests.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="181-181"];
m80_121 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="164-164"];
m80_123 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="164-164"];
m80_125 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="166-166"];
m80_127 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="166-166"];
m80_128 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="167-167"];
m80_130 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="167-167"];
m80_131 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="168-168"];
m80_133 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="168-168"];
m80_134 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="169-169"];
m80_136 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="169-169"];
m80_146 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="177-177"];
m80_148 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="177-177"];
m80_150 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="178-178"];
m80_152 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="178-178"];
m80_153 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="179-179"];
m80_155 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="179-179"];
m80_156 [cluster="lambda expression", file="SecurityTests.cs", label="Entry lambda expression", span="180-180"];
m80_158 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="180-180"];
m80_161 [cluster="lambda expression", file="SecurityTests.cs", label="Exit lambda expression", span="181-181"];
m80_88 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="SecurityTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m80_68 [cluster="Unk.IsFalse", file="SecurityTests.cs", label="Entry Unk.IsFalse", span=""];
m80_182 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="SecurityTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m80_25 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Assert.IsInstanceOf<SecurityPortfolioModel>(security.PortfolioModel)", span="57-57"];
m80_119 [cluster="Unk.DoesNotThrow", file="SecurityTests.cs", label="Entry Unk.DoesNotThrow", span=""];
m80_34 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", color=green, community=0, file="SecurityTests.cs", label="QuantConnect.Indicators.CandlestickPatterns.Tristar", prediction=115, span=""];
m80_33 [cluster="QuantConnect.Indicators.WindowIndicator<T>.Reset()", file="SecurityTests.cs", label="Entry QuantConnect.Indicators.WindowIndicator<T>.Reset()", span="69-69"];
m80_35 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", color=green, community=0, file="SecurityTests.cs", label="Assert.IsInstanceOf<SecurityMarginModel>(security.MarginModel)", prediction=115, span="67-67"];
m80_36 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Assert.IsNotNull(security.DataFilter)", span="68-68"];
m80_22 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetCandleRange(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType, QuantConnect.Data.Market.TradeBar)", file="SecurityTests.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetCandleRange(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType, QuantConnect.Data.Market.TradeBar)", span="67-67"];
m80_26 [cluster="System.Math.Max(decimal, decimal)", file="SecurityTests.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m80_27 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetRealBodyGapDown(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="SecurityTests.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetRealBodyGapDown(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", span="112-112"];
m80_28 [cluster="System.Math.Min(decimal, decimal)", file="SecurityTests.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m80_29 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Reset()", file="SecurityTests.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.Tristar.Reset()", span="120-120"];
m80_30 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Reset()", file="SecurityTests.cs", label="_bodyDojiPeriodTotal = 0m", span="122-122"];
m80_31 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Reset()", file="SecurityTests.cs", label="base.Reset()", span="123-123"];
m80_32 [cluster="QuantConnect.Indicators.CandlestickPatterns.Tristar.Reset()", file="SecurityTests.cs", label="Exit QuantConnect.Indicators.CandlestickPatterns.Tristar.Reset()", span="120-120"];
m80_37 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Assert.IsInstanceOf<SecurityDataFilter>(security.DataFilter)", span="69-69"];
m80_38 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", span="48-48"];
m80_67 [cluster="Unk.IsTrue", file="SecurityTests.cs", label="Entry Unk.IsTrue", span=""];
m80_98 [cluster="Unk.EqualTo", file="SecurityTests.cs", label="Entry Unk.EqualTo", span=""];
m80_41 [cluster="Unk.>", file="SecurityTests.cs", label="Entry Unk.>", span=""];
m80_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", span="152-152"];
m80_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="SecurityTests.cs", label="var option = new Option(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties(SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="154-154"];
m80_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="SecurityTests.cs", label="Assert.AreEqual(option.DataNormalizationMode, DataNormalizationMode.Raw)", span="156-156"];
m80_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", span="152-152"];
m80_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", span="173-173"];
m80_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="SecurityTests.cs", label="var equity = new QuantConnect.Securities.Equity.Equity(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="175-175"];
m80_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="SecurityTests.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="177-177"];
m80_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="SecurityTests.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="178-178"];
m80_141 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="SecurityTests.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="179-179"];
m80_142 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="SecurityTests.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="180-180"];
m80_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="SecurityTests.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="181-181"];
m80_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", span="173-173"];
m80_176 [cluster="QuantConnect.Securities.SecurityCache.SecurityCache()", file="SecurityTests.cs", label="Entry QuantConnect.Securities.SecurityCache.SecurityCache()", span="29-29"];
m80_99 [cluster="Unk.That", file="SecurityTests.cs", label="Entry Unk.That", span=""];
m80_109 [cluster="SubscriptionDataConfig.cstr", file="SecurityTests.cs", label="Entry SubscriptionDataConfig.cstr", span=""];
m80_110 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43"];
m80_39 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", span="206-206"];
m80_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="SecurityTests.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="208-208"];
m80_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", span="206-206"];
m80_97 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="573-573"];
m80_124 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="349-349"];
m80_111 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", span="160-160"];
m80_112 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="SecurityTests.cs", label="var option = new Option(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties(SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="162-162"];
m80_113 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="SecurityTests.cs", label="Assert.DoesNotThrow(() => { option.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="164-164"];
m80_114 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="SecurityTests.cs", label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="166-166"];
m80_115 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="SecurityTests.cs", label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="167-167"];
m80_116 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="SecurityTests.cs", label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="168-168"];
m80_117 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="SecurityTests.cs", label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="169-169"];
m80_118 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", span="160-160"];
m80_66 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m80_149 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m80_107 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="49-49"];
m80_120 [cluster="Unk.Throws", file="SecurityTests.cs", label="Entry Unk.Throws", span=""];
m80_174 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="SecurityTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m80_86 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m80_145 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityTests.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65"];
m80_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="SecurityTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", span="137-137"];
m80_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="SecurityTests.cs", label="Assert.That(() => security.SetLeverage(0.1m),\r\n                Throws.TypeOf<ArgumentException>().With.Message.EqualTo(''Leverage must be greater than or equal to 1.''))", span="147-148"];
m80_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="SecurityTests.cs", label="var security = GetSecurity()", span="139-139"];
m80_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="SecurityTests.cs", label="Assert.AreEqual(5m, security.Leverage)", span="145-145"];
m80_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="SecurityTests.cs", label="security.SetLeverage(4m)", span="141-141"];
m80_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="SecurityTests.cs", label="Assert.AreEqual(4m,security.Leverage)", span="142-142"];
m80_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="SecurityTests.cs", label="security.SetLeverage(5m)", span="144-144"];
m80_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="SecurityTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", span="137-137"];
m80_183 [file="SecurityTests.cs", label="QuantConnect.Tests.Common.Securities.SecurityTests", span=""];
m80_184 [file="SecurityTests.cs", label=security, span=""];
m80_185 [file="SecurityTests.cs", label=option, span=""];
m80_186 [file="SecurityTests.cs", label=equity, span=""];
m81_66 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="var type = typeof(T)", span="173-173"];
m81_67 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="var value = token.Value<string>()", span="174-174"];
m81_68 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="type.IsEnum", span="175-175"];
m81_61 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="return (T) (object) GetEnvironment();", span="164-164"];
m81_195 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="SecurityTransactionManager.cs", label="return (long)(value*10000);", span="413-413"];
m81_196 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.Scale(decimal)", span="411-411"];
m81_0 [cluster="lambda expression", file="SecurityTransactionManager.cs", label="Entry lambda expression", span="31-53"];
m81_1 [cluster="lambda expression", file="SecurityTransactionManager.cs", label="!File.Exists(ConfigurationFileName)", span="34-34"];
m81_2 [cluster="lambda expression", file="SecurityTransactionManager.cs", label="return new JObject\r\n                {\r\n                    {''algorithm-type-name'', ''BasicTemplateAlgorithm''},\r\n                    {''live-mode'', false},\r\n                    {''data-folder'', ''../../../Data/''},\r\n                    {''messaging-handler'', ''QuantConnect.Messaging.Messaging''},\r\n                    {''queue-handler'', ''QuantConnect.Queues.Queues''},\r\n                    {''api-handler'', ''QuantConnect.Api.Api''},\r\n                    {''setup-handler'', ''QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler''},\r\n                    {''result-handler'', ''QuantConnect.Lean.Engine.Results.ConsoleResultHandler''},\r\n                    {''data-feed-handler'', ''QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed''},\r\n                    {''real-time-handler'', ''QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler''},\r\n                    {''transaction-handler'', ''QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler''}\r\n                };", span="36-49"];
m81_3 [cluster="lambda expression", file="SecurityTransactionManager.cs", label="return JObject.Parse(File.ReadAllText(ConfigurationFileName));", span="52-52"];
m81_5 [cluster="System.IO.File.Exists(string)", file="SecurityTransactionManager.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m81_7 [cluster="System.IO.File.ReadAllText(string)", file="SecurityTransactionManager.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m81_11 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="JToken currentEnvironment = Settings.Value", span="63-63"];
m81_15 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="environments.Add(currentEnv)", span="68-68"];
m81_19 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="env = currentEnvironment[''environment'']", span="76-76"];
m81_21 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Configuration.Config.GetEnvironment()", span="60-60"];
m81_25 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="SecurityTransactionManager.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m81_29 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="var token = GetToken(Settings.Value, key)", span="92-92"];
m81_32 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="return defaultValue;", span="96-96"];
m81_33 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="return token.Value<string>();", span="98-98"];
m81_35 [cluster="Unk.GetToken", file="SecurityTransactionManager.cs", label="Entry Unk.GetToken", span=""];
m81_42 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="var quoteBar = data as QuoteBar", span="98-98"];
m81_45 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="var tradeBar = data as TradeBar", span="105-105"];
m81_50 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="125-125"];
m81_53 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="160-160"];
m81_56 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Configuration.Config.GetInt(string, int)", span="136-136"];
m81_57 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="147-147"];
m81_8 [cluster="Unk.Parse", file="SecurityTransactionManager.cs", label="Entry Unk.Parse", span=""];
m81_12 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="var env = currentEnvironment[''environment'']", span="64-64"];
m81_22 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.AskPrice);", span="63-63"];
m81_26 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="87-87"];
m81_37 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m81_39 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.BidPrice), tick.BidSize, Scale(tick.AskPrice), tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="90-91"];
m81_44 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="return ToCsv(milliseconds,\r\n                                    ToCsv(quoteBar.Bid), quoteBar.LastBidSize, \r\n                                    ToCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="101-103"];
m81_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tradeBar.Open), Scale(tradeBar.High), Scale(tradeBar.Low), Scale(tradeBar.Close), tradeBar.Volume);", span="108-109"];
m81_16 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="var moreEnvironments = currentEnvironment[''environments'']", span="69-69"];
m81_30 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="token == null", span="93-93"];
m81_52 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Configuration.Config.GetBool(string, bool)", span="125-125"];
m81_55 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="SecurityTransactionManager.cs", label="return GetValue(key, defaultValue);", span="138-138"];
m81_4 [cluster="lambda expression", file="SecurityTransactionManager.cs", label="Exit lambda expression", span="31-53"];
m81_17 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="moreEnvironments == null", span="70-70"];
m81_31 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="Log.Trace(string.Format(''Config.Get(): Configuration key not found. Key: {0} - Using default value: {1}'', key, defaultValue))", span="95-95"];
m81_6 [cluster="JObject.cstr", file="SecurityTransactionManager.cs", label="Entry JObject.cstr", span=""];
m81_9 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Configuration.Config.GetEnvironment()", span="60-60"];
m81_13 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="currentEnvironment != null && env != null", span="65-65"];
m81_10 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="var environments = new List<string>()", span="62-62"];
m81_14 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="var currentEnv = env.Value<string>()", span="67-67"];
m81_18 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="currentEnvironment = moreEnvironments[currentEnv]", span="75-75"];
m81_20 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="SecurityTransactionManager.cs", label="return string.Join(''.'', environments);", span="78-78"];
m81_23 [cluster="Unk.>", file="SecurityTransactionManager.cs", label="Entry Unk.>", span=""];
m81_27 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="key == ''environment''", span="90-90"];
m81_24 [cluster="Unk.Add", file="SecurityTransactionManager.cs", label="Entry Unk.Add", span=""];
m81_28 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="return GetEnvironment();", span="90-90"];
m81_34 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Configuration.Config.Get(string, string)", span="87-87"];
m81_40 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="Resolution.Second", span="95-95"];
m81_48 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="Resolution.Hour", span="113-113"];
m81_36 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="tick.TickType == TickType.Trade", span="83-83"];
m81_38 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="tick.TickType == TickType.Quote", span="88-88"];
m81_41 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="Resolution.Minute", span="96-96"];
m81_43 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="quoteBar != null", span="99-99"];
m81_46 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="tradeBar != null", span="106-106"];
m81_49 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="Resolution.Daily", span="114-114"];
m81_51 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="SecurityTransactionManager.cs", label="return GetValue(key, defaultValue);", span="127-127"];
m81_54 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="136-136"];
m81_58 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="SecurityTransactionManager.cs", label="return GetValue(key, defaultValue);", span="149-149"];
m81_77 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="var securityType = symbol.ID.SecurityType.ToLower()", span="162-162"];
m81_82 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=0, file="SecurityTransactionManager.cs", label="SecurityType.Base", prediction=117, span="168-168"];
m81_81 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="symbol.ID.SecurityType", span="166-166"];
m81_83 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="SecurityType.Equity", span="169-169"];
m81_84 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="SecurityType.Forex", span="170-170"];
m81_78 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="var market = symbol.ID.Market.ToLower()", span="163-163"];
m81_80 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="var directory = Path.Combine(securityType, market, res)", span="165-165"];
m81_86 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Value.ToLower()) : directory;", span="172-172"];
m81_85 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="SecurityType.Cfd", span="171-171"];
m81_87 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="SecurityType.Option", span="174-174"];
m81_79 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="var res = resolution.ToLower()", span="164-164"];
m81_88 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.ID.Symbol.ToLower()) : directory;", span="176-176"];
m81_62 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="var token = GetToken(Settings.Value, key)", span="166-166"];
m81_197 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SecurityTransactionManager.cs", label="var i = 0", span="422-422"];
m81_198 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SecurityTransactionManager.cs", label="i < args.Length", span="422-422"];
m81_199 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SecurityTransactionManager.cs", label="var value = args[i]", span="424-424"];
m81_201 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SecurityTransactionManager.cs", label="args[i] = ((decimal) value).ToString(CultureInfo.InvariantCulture)", span="427-427"];
m81_203 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SecurityTransactionManager.cs", label="return string.Join('','', args);", span="431-431"];
m81_202 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SecurityTransactionManager.cs", label="i++", span="422-422"];
m81_200 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SecurityTransactionManager.cs", label="value is decimal", span="425-425"];
m81_204 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.ToCsv(params object[])", span="419-419"];
m81_190 [cluster="string.Split(params char[])", file="SecurityTransactionManager.cs", label="Entry string.Split(params char[])", span="0-0"];
m81_65 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="return defaultValue;", span="170-170"];
m81_99 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="295-295"];
m81_138 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="var tickTypeString = tickType.ToLower()", span="297-297"];
m81_139 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="298-298"];
m81_140 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="299-299"];
m81_141 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="symbol.ID.SecurityType", span="301-301"];
m81_146 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label=isHourOrDaily, span="307-307"];
m81_142 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Base", span="303-303"];
m81_143 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Equity", span="304-304"];
m81_144 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Forex", span="305-305"];
m81_145 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Cfd", span="306-306"];
m81_156 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="295-295"];
m81_64 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="Log.Trace(string.Format(''Config.GetValue(): {0} - Using default value: {1}'', key, defaultValue))", span="169-169"];
m81_76 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="161-161"];
m81_73 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="151-151"];
m81_74 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", color=green, community=0, file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", prediction=118, span="196-196"];
m81_75 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="159-159"];
m81_60 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="key == ''environment'' && typeof (T) == typeof (string)", span="164-164"];
m81_137 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="269-269"];
m81_128 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="269-269"];
m81_129 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="securityType != SecurityType.Base && securityType != SecurityType.Equity && securityType != SecurityType.Forex && securityType != SecurityType.Cfd", span="271-271"];
m81_131 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="symbol = symbol.ToLower()", span="276-276"];
m81_132 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="278-278"];
m81_134 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="284-284"];
m81_136 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'', date.ToString(DateFormat.EightCharacter), symbol, resolution.ToLower(), dataType.ToLower());", span="289-289"];
m81_130 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="throw new NotImplementedException(''This method only implements base, equity, forex and cfd security type.'');", span="273-273"];
m81_133 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="return symbol + ''.csv'';", span="280-280"];
m81_135 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="dataType = TickType.Quote", span="286-286"];
m81_93 [cluster="System.Enum.ToLower()", file="SecurityTransactionManager.cs", label="Entry System.Enum.ToLower()", span="726-726"];
m81_94 [cluster="string.ToLower()", file="SecurityTransactionManager.cs", label="Entry string.ToLower()", span="0-0"];
m81_71 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="160-160"];
m81_72 [cluster="Unk.ChangeType", file="SecurityTransactionManager.cs", label="Entry Unk.ChangeType", span=""];
m81_63 [cluster="QuantConnect.Util.LeanData.ToCsv(QuantConnect.Data.Market.IBar)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.ToCsv(QuantConnect.Data.Market.IBar)", span="437-437"];
m81_69 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="188-188"];
m81_70 [cluster="System.IO.Path.Combine(string, string)", file="SecurityTransactionManager.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m81_193 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="SecurityTransactionManager.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m81_205 [cluster="decimal.ToString(System.IFormatProvider)", file="SecurityTransactionManager.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m81_105 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="345-345"];
m81_165 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="345-345"];
m81_125 [cluster="string.Format(string, object)", file="SecurityTransactionManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m81_192 [cluster="decimal.Parse(string)", file="SecurityTransactionManager.cs", label="Entry decimal.Parse(string)", span="0-0"];
m81_189 [cluster="string.Replace(string, string)", file="SecurityTransactionManager.cs", label="Entry string.Replace(string, string)", span="0-0"];
m81_194 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="87-87"];
m81_100 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="var directory = Path.Combine(securityType.ToLower(), market.ToLower(), resolution.ToLower())", span="198-198"];
m81_101 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="resolution != Resolution.Daily && resolution != Resolution.Hour", span="199-199"];
m81_102 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="directory = Path.Combine(directory, symbol.ToLower())", span="201-201"];
m81_103 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="return Path.Combine(directory, GenerateZipFileName(symbol, securityType, date, resolution));", span="204-204"];
m81_104 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="196-196"];
m81_126 [cluster="string.Format(string, params object[])", file="SecurityTransactionManager.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m81_158 [cluster="string.Format(string, object, object, object)", file="SecurityTransactionManager.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m81_188 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="379-379"];
m81_171 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="379-379"];
m81_172 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var isHourlyOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="381-381"];
m81_173 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label=securityType, span="382-382"];
m81_175 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var parts = zipEntryName.Replace(''.csv'', string.Empty).Split('_')", span="385-385"];
m81_187 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="throw new NotImplementedException(''ReadSymbolFromZipEntry is not implemented for '' + securityType + '' '' + resolution);", span="404-404"];
m81_176 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label=isHourlyOrDaily, span="386-386"];
m81_174 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="SecurityType.Option", span="384-384"];
m81_177 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[2], true)", span="388-388"];
m81_178 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[3], true)", span="389-389"];
m81_179 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var strike = decimal.Parse(parts[4]) / 10000m", span="390-390"];
m81_180 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var expiry = DateTime.ParseExact(parts[5], DateFormat.EightCharacter, null)", span="391-391"];
m81_181 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="return Symbol.CreateOption(parts[0], Market.USA, style, right, strike, expiry);", span="392-392"];
m81_182 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[4], true)", span="396-396"];
m81_183 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[5], true)", span="397-397"];
m81_184 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var strike = decimal.Parse(parts[6]) / 10000m", span="398-398"];
m81_185 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="var expiry = DateTime.ParseExact(parts[7], DateFormat.EightCharacter, null)", span="399-399"];
m81_186 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="SecurityTransactionManager.cs", label="return Symbol.CreateOption(parts[1], Market.USA, style, right, strike, expiry);", span="400-400"];
m81_96 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="SecurityTransactionManager.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m81_206 [cluster="QuantConnect.Util.LeanData.ToCsv(QuantConnect.Data.Market.IBar)", file="SecurityTransactionManager.cs", label="bar == null", span="439-439"];
m81_208 [cluster="QuantConnect.Util.LeanData.ToCsv(QuantConnect.Data.Market.IBar)", file="SecurityTransactionManager.cs", label="return ToCsv(Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close));", span="443-443"];
m81_207 [cluster="QuantConnect.Util.LeanData.ToCsv(QuantConnect.Data.Market.IBar)", file="SecurityTransactionManager.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="441-441"];
m81_209 [cluster="QuantConnect.Util.LeanData.ToCsv(QuantConnect.Data.Market.IBar)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.ToCsv(QuantConnect.Data.Market.IBar)", span="437-437"];
m81_97 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="return Path.Combine(GenerateRelativeZipFileDirectory(symbol, resolution), GenerateZipFileName(symbol, date, resolution, tickType));", span="190-190"];
m81_98 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="188-188"];
m81_157 [cluster="string.Format(string, object, object)", file="SecurityTransactionManager.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m81_124 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="210-210"];
m81_106 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="210-210"];
m81_107 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="212-212"];
m81_108 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="213-213"];
m81_109 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="symbol.ID.SecurityType", span="215-215"];
m81_115 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="return string.Format(''{0}.csv'', \r\n                            symbol.Value.ToLower()\r\n                            );", span="223-225"];
m81_116 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'', \r\n                        formattedDate, \r\n                        symbol.Value.ToLower(), \r\n                        resolution.ToLower(), \r\n                        tickType.ToLower()\r\n                        );", span="228-233"];
m81_119 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="return string.Join(''_'',\r\n                            symbol.ID.Symbol.ToLower(), // underlying\r\n                            tickType.ToLower(),\r\n                            symbol.ID.OptionStyle.ToLower(),\r\n                            symbol.ID.OptionRight.ToLower(),\r\n                            Scale(symbol.ID.StrikePrice),\r\n                            symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                            ) + ''.csv'';", span="238-245"];
m81_120 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.ID.Symbol.ToLower(), // underlying\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.OptionStyle.ToLower(),\r\n                        symbol.ID.OptionRight.ToLower(),\r\n                        Scale(symbol.ID.StrikePrice),\r\n                        symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                        ) + ''.csv'';", span="248-257"];
m81_114 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label=isHourOrDaily, span="221-221"];
m81_118 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label=isHourOrDaily, span="236-236"];
m81_110 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Base", span="217-217"];
m81_117 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Option", span="235-235"];
m81_121 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Commodity", span="259-259"];
m81_111 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Equity", span="218-218"];
m81_112 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Forex", span="219-219"];
m81_113 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Cfd", span="220-220"];
m81_122 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="SecurityType.Future", span="260-260"];
m81_123 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityTransactionManager.cs", label="throw new ArgumentOutOfRangeException();", span="262-262"];
m81_89 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="SecurityType.Commodity", span="178-178"];
m81_90 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="SecurityType.Future", span="179-179"];
m81_91 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="throw new ArgumentOutOfRangeException();", span="181-181"];
m81_92 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="159-159"];
m81_59 [cluster="double.ToString(System.IFormatProvider)", file="SecurityTransactionManager.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m81_166 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="SecurityTransactionManager.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="363-363"];
m81_170 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="SecurityTransactionManager.cs", label="Exit QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="363-363"];
m81_191 [cluster="System.Enum.Parse(System.Type, string, bool)", file="SecurityTransactionManager.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m81_127 [cluster="string.Join(string, params object[])", file="SecurityTransactionManager.cs", label="Entry string.Join(string, params object[])", span="0-0"];
m81_95 [cluster="System.IO.Path.Combine(string, string, string)", file="SecurityTransactionManager.cs", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
m82_17 [cluster="System.IO.Stream.Dispose()", file="SingleEntryDataCacheProvider.cs", label="Entry System.IO.Stream.Dispose()", span="0-0"];
m82_16 [cluster="Unk.Error", file="SingleEntryDataCacheProvider.cs", label="Entry Unk.Error", span=""];
m82_13 [cluster="QuantConnect.Interfaces.IDataProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs", label="Entry QuantConnect.Interfaces.IDataProvider.Fetch(string)", span="33-33"];
m82_24 [cluster="Unk.Dispose", file="SingleEntryDataCacheProvider.cs", label="Entry Unk.Dispose", span=""];
m82_15 [cluster="Unk.UnzipStream", file="SingleEntryDataCacheProvider.cs", label="Entry Unk.UnzipStream", span=""];
m82_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="SingleEntryDataCacheProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="35-35"];
m82_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="SingleEntryDataCacheProvider.cs", label="_dataProvider = dataProvider", span="37-37"];
m82_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="SingleEntryDataCacheProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="35-35"];
m82_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", file="SingleEntryDataCacheProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", span="80-80"];
m82_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", file="SingleEntryDataCacheProvider.cs", label="_zipFile != null", span="82-82"];
m82_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", file="SingleEntryDataCacheProvider.cs", label="_zipFile.Dispose()", span="84-84"];
m82_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", file="SingleEntryDataCacheProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Dispose()", span="80-80"];
m82_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", span="45-45"];
m82_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", color=green, community=0, file="SingleEntryDataCacheProvider.cs", label="Log.Error(''SingleEntryDataCacheProvider.Fetch(): Corrupt file: '' + key + '' Error: '' + exception)", prediction=119, span="58-58"];
m82_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", span="45-45"];
m82_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", color=green, community=0, file="SingleEntryDataCacheProvider.cs", label=ZipException, prediction=120, span="56-56"];
m82_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", color=green, community=0, file="SingleEntryDataCacheProvider.cs", label="stream.Dispose()", prediction=121, span="59-59"];
m82_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs", label="var stream = _dataProvider.Fetch(key)", span="47-47"];
m82_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", color=green, community=0, file="SingleEntryDataCacheProvider.cs", label="return null;", prediction=122, span="60-60"];
m82_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs", label="key.EndsWith(''.zip'') && stream != null", span="49-49"];
m82_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs", label="return Compression.UnzipStream(stream, out _zipFile);", span="54-54"];
m82_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.Fetch(string)", file="SingleEntryDataCacheProvider.cs", label="return stream;", span="64-64"];
m82_14 [cluster="string.EndsWith(string)", file="SingleEntryDataCacheProvider.cs", label="Entry string.EndsWith(string)", span="0-0"];
m82_25 [file="SingleEntryDataCacheProvider.cs", label="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider", span=""];
m83_9 [cluster="QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Split.cs", label="Entry QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="75-75"];
m83_10 [cluster="QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Split.cs", label="throw new NotImplementedException(''This method is not supposed to be called on the Split type.'');", span="78-78"];
m83_11 [cluster="QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Split.cs", label="Exit QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="75-75"];
m83_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.MarketDataTypeEventArgs.MarketDataTypeEventArgs(int, int)", file="Split.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.MarketDataTypeEventArgs.MarketDataTypeEventArgs(int, int)", span="37-37"];
m83_4 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="Split.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.MarketDataTypeEventArgs", span=""];
m83_5 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="Split.cs", label="Time = date", span="44-44"];
m83_6 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="Split.cs", label="ReferencePrice = price", span="45-45"];
m83_7 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="Split.cs", label="SplitFactor = splitFactor", span="46-46"];
m83_8 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="Split.cs", label="Exit QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", span="40-40"];
m83_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.MarketDataTypeEventArgs.MarketDataTypeEventArgs(int, int)", file="Split.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.MarketDataTypeEventArgs.MarketDataTypeEventArgs(int, int)", span="37-37"];
m83_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.MarketDataTypeEventArgs.MarketDataTypeEventArgs(int, int)", color=green, community=0, file="Split.cs", label="RequestId = requestId", prediction=123, span="39-39"];
m83_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.MarketDataTypeEventArgs.MarketDataTypeEventArgs(int, int)", color=green, community=0, file="Split.cs", label="MarketDataType = marketDataType", prediction=124, span="40-40"];
m83_16 [cluster="QuantConnect.Data.Market.Split.ToString()", file="Split.cs", label="Entry QuantConnect.Data.Market.Split.ToString()", span="98-98"];
m83_18 [cluster="QuantConnect.Data.Market.Split.ToString()", file="Split.cs", label="Exit QuantConnect.Data.Market.Split.ToString()", span="98-98"];
m83_20 [cluster="QuantConnect.Data.Market.Split.Clone()", file="Split.cs", label="Entry QuantConnect.Data.Market.Split.Clone()", span="110-110"];
m83_22 [cluster="QuantConnect.Data.Market.Split.Clone()", file="Split.cs", label="Exit QuantConnect.Data.Market.Split.Clone()", span="110-110"];
m83_13 [cluster="QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Split.cs", label="Entry QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="88-88"];
m83_14 [cluster="QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Split.cs", label="throw new NotImplementedException(''This method is not supposed to be called on the Split type.'');", span="91-91"];
m83_15 [cluster="QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Split.cs", label="Exit QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="88-88"];
m83_12 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Split.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m83_23 [file="Split.cs", label="QuantConnect.Data.Market.Split", span=""];
m84_313 [cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", file="Subscription.cs", label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40"];
m84_160 [cluster="System.TimeSpan.FromHours(double)", file="Subscription.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m84_509 [cluster="QuantConnect.Securities.Security.GetLastData()", file="Subscription.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="585-585"];
m84_138 [cluster="System.DateTime.ToUniversalTime()", file="Subscription.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m84_42 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="Subscription.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m84_202 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", file="Subscription.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74"];
m84_147 [cluster="int.ToString()", file="Subscription.cs", label="Entry int.ToString()", span="0-0"];
m84_159 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="859-859"];
m84_353 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.StoreResult(): Begin store result sampling'')", span="863-863"];
m84_354 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="packet.Type != PacketType.LiveResult", span="866-866"];
m84_356 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var live = packet as LiveResultPacket", span="869-869"];
m84_355 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="return;", span="866-866"];
m84_357 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="live != null", span="871-871"];
m84_360 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="Truncate(live.Results, start, stop)", span="880-880"];
m84_361 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var highResolutionCharts = new Dictionary<string, Chart>(live.Results.Charts)", span="882-882"];
m84_363 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var minuteCharts = minuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="886-886"];
m84_364 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="live.Results.Charts = minuteCharts", span="889-889"];
m84_365 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="SaveResults(CreateKey(''minute''), live.Results)", span="890-890"];
m84_367 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var tenminuteCharts = tenminuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="894-894"];
m84_368 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="live.Results.Charts = tenminuteCharts", span="896-896"];
m84_369 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="SaveResults(CreateKey(''10minute''), live.Results)", span="897-897"];
m84_370 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="live.Results.Charts = highResolutionCharts", span="900-900"];
m84_373 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="Truncate(live.Results, start, stop)", span="904-904"];
m84_374 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="live.Results.Charts.Keys", span="906-906"];
m84_376 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="result.Orders = new Dictionary<int, Order>(live.Results.Orders)", span="909-909"];
m84_377 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="result.Holdings = new Dictionary<string, Holding>(live.Results.Holdings)", span="910-910"];
m84_379 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="result.Charts.Add(name, live.Results.Charts[name])", span="912-912"];
m84_358 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var start = DateTime.UtcNow.Date", span="876-876"];
m84_381 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="Log.Error(''LiveResultHandler.StoreResult(): Result Null.'')", span="919-919"];
m84_359 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var stop = start.AddDays(1)", span="877-877"];
m84_362 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var minuteSampler = new SeriesSampler(TimeSpan.FromMinutes(1))", span="885-885"];
m84_366 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var tenminuteSampler = new SeriesSampler(TimeSpan.FromMinutes(10))", span="893-893"];
m84_371 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="start = DateTime.UtcNow.RoundDown(TimeSpan.FromHours(1))", span="901-901"];
m84_372 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="stop = DateTime.UtcNow.RoundUp(TimeSpan.FromHours(1))", span="902-902"];
m84_375 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="var result = new LiveResult{IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm}", span="908-908"];
m84_382 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.StoreResult(): End store result sampling'')", span="922-922"];
m84_380 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="SaveResults(CreateKey(''second_'' + CreateSafeChartName(name), ''yyyy-MM-dd-HH''), result)", span="914-914"];
m84_378 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="result.Charts = new Dictionary<string, Chart>()", span="911-911"];
m84_383 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label=Exception, span="924-924"];
m84_384 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="Log.Error(err)", span="926-926"];
m84_385 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="859-859"];
m84_331 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="798-798"];
m84_332 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="var charts = new Dictionary<string, Chart>()", span="803-803"];
m84_336 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="var result = new LiveResultPacket((LiveNodePacket)job, new LiveResult(_algorithm.IsFrameworkAlgorithm, charts, orders, profitLoss, holdings, cashbook, statisticsResults.Summary, runtime))", span="813-813"];
m84_333 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label=_chartLock, span="804-804"];
m84_335 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="charts.Add(kvp.Key, kvp.Value.Clone())", span="808-808"];
m84_334 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label=Charts, span="806-806"];
m84_337 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="result.ProcessingTime = (DateTime.Now - _startTime).TotalSeconds", span="816-816"];
m84_338 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="StoreResult(result, false)", span="819-819"];
m84_339 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="result.Results = new LiveResult{IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm}", span="822-822"];
m84_340 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="_messagingHandler.Send(result)", span="825-825"];
m84_341 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label=Exception, span="827-827"];
m84_342 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="Log.Error(err)", span="829-829"];
m84_343 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="798-798"];
m84_404 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="953-953"];
m84_405 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="Subscription.cs", label="!_exitTriggered && _algorithm != null && !_algorithm.GetLocked()", span="957-957"];
m84_406 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="Subscription.cs", label="ProcessSynchronousEvents(true)", span="959-959"];
m84_408 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="Subscription.cs", label="_exitTriggered = true", span="963-963"];
m84_407 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="Subscription.cs", label="StoreLog(_logStore)", span="960-960"];
m84_409 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="Subscription.cs", label="Update()", span="965-965"];
m84_410 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="953-953"];
m84_262 [cluster="System.DateTime.ToShortTimeString()", file="Subscription.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m84_452 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="1031-1031"];
m84_453 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="Subscription.cs", label="_subscription = symbol", span="1033-1033"];
m84_454 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="1031-1031"];
m84_520 [cluster="object.GetType()", file="Subscription.cs", label="Entry object.GetType()", span="0-0"];
m84_512 [cluster="Unk.SingleOrDefault", file="Subscription.cs", label="Entry Unk.SingleOrDefault", span=""];
m84_230 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="Subscription.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m84_195 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Subscription.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m84_144 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Subscription.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m84_412 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="971-971"];
m84_413 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="Subscription.cs", label="Messages.Clear()", span="973-973"];
m84_414 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="971-971"];
m84_223 [cluster="System.DateTime.ToString(string)", file="Subscription.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m84_162 [cluster="Unk.ToList", file="Subscription.cs", label="Entry Unk.ToList", span=""];
m84_153 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="436-436"];
m84_176 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="var groupSize = 3", span="446-446"];
m84_179 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="deltaCharts.Values", span="455-455"];
m84_189 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="var packets = new[]\r\n            {\r\n                new LiveResultPacket(_job, new LiveResult {IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm, Orders = deltaOrders}),\r\n                new LiveResultPacket(_job, new LiveResult {IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm, Holdings = holdings, Cash = cashbook}),\r\n                new LiveResultPacket(_job, new LiveResult\r\n                {\r\n                    IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm,\r\n                    Statistics = deltaStatistics,\r\n                    RuntimeStatistics = runtimeStatistics,\r\n                    ServerStatistics = serverStatistics,\r\n                    AlphaRuntimeStatistics = AlphaRuntimeStatistics\r\n                })\r\n            }", span="484-496"];
m84_177 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="var current = new Dictionary<string, Chart>()", span="447-447"];
m84_184 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="current.Count >= groupSize && _subscription != ''*''", span="467-467"];
m84_178 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="var chartPackets = new List<LiveResultPacket>()", span="448-448"];
m84_181 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="current.Add(deltaChart.Name, chart)", span="458-458"];
m84_185 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm, Charts = current }))", span="470-470"];
m84_187 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="current.Count > 0 && _subscription != ''*''", span="478-478"];
m84_188 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult {IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm, Charts = current}))", span="480-480"];
m84_190 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="return packets.Concat(chartPackets);", span="498-498"];
m84_180 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="var chart = new Chart(deltaChart.Name)", span="457-457"];
m84_182 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="deltaChart.Name == _subscription || (_subscription == ''*'' && deltaChart.Name == ''Strategy Equity'')", span="460-460"];
m84_183 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="chart.Series = deltaChart.Series", span="462-462"];
m84_186 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="current = new Dictionary<string, Chart>()", span="472-472"];
m84_191 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="436-436"];
m84_137 [cluster="decimal.SmartRounding()", file="Subscription.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m84_391 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", span="34-34"];
m84_108 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="List<LogEntry> logs", span="361-361"];
m84_44 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="233-233"];
m84_48 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Dictionary<int, Order> deltaOrders", span="236-236"];
m84_49 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_algorithm == null || _algorithm.Transactions == null || _transactionHandler.Orders == null || !_algorithm.GetLocked()", span="239-239"];
m84_50 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Error(''LiveTradingResultHandler.Update(): Algorithm not yet initialized.'')", span="241-241"];
m84_52 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="DateTime.Now > _nextUpdate || _exitTriggered", span="247-247"];
m84_51 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="return;", span="242-242"];
m84_53 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="OrderEvent orderEvent", span="250-250"];
m84_129 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=Exception, span="425-425"];
m84_54 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="deltaOrders = new Dictionary<int, Order>()", span="251-251"];
m84_55 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var stopwatch = Stopwatch.StartNew()", span="253-253"];
m84_58 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="deltaOrders[orderEvent.OrderId] = order.Clone()", span="257-257"];
m84_59 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=deltaOrders, span="261-261"];
m84_62 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_lastOrderId = (from order in deltaOrders.Values select order.Id).DefaultIfEmpty(_lastOrderId).Max()", span="268-268"];
m84_92 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, holdings, _algorithm.Portfolio.CashBook, deltaStatistics, runtimeStatistics, serverStatistics)", span="330-330"];
m84_56 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_orderEvents.TryDequeue(out orderEvent) && stopwatch.ElapsedMilliseconds < 15", span="254-254"];
m84_57 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var order = _algorithm.Transactions.GetOrderById(orderEvent.OrderId)", span="256-256"];
m84_60 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="order.Value.Price = order.Value.Price.SmartRounding()", span="263-263"];
m84_61 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="264-264"];
m84_63 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var deltaCharts = new Dictionary<string, Chart>()", span="274-274"];
m84_64 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): Build delta charts'')", span="275-275"];
m84_68 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="deltaCharts.Add(safeName, chart.Value.GetUpdates())", span="283-283"];
m84_65 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=_chartLock, span="276-276"];
m84_66 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=_charts, span="279-279"];
m84_67 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var safeName = chart.Value.Name.Replace('/', '-')", span="282-282"];
m84_69 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): End build delta charts'')", span="286-286"];
m84_70 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var holdings = new Dictionary<string, Holding>()", span="289-289"];
m84_71 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var deltaStatistics = new Dictionary<string, string>()", span="290-290"];
m84_78 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="holdings.Add(asset.Symbol.Value, new Holding(asset))", span="300-300"];
m84_104 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var complete = new LiveResultPacket(_job, new LiveResult(_algorithm.IsFrameworkAlgorithm, chartComplete, orders, _algorithm.Transactions.TransactionRecord, holdings, _algorithm.Portfolio.CashBook, deltaStatistics, runtimeStatistics, serverStatistics))", span="353-353"];
m84_72 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var runtimeStatistics = new Dictionary<string, string>()", span="291-291"];
m84_73 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var serverStatistics = OS.GetServerStatistics()", span="292-292"];
m84_82 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="runtimeStatistics.Add(pair.Key, pair.Value)", span="309-309"];
m84_85 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="runtimeStatistics.Add(''Unrealized:'', ''$'' + _algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="320-320"];
m84_86 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="runtimeStatistics.Add(''Fees:'', ''-$'' + _algorithm.Portfolio.TotalFees.ToString(''N2''))", span="321-321"];
m84_87 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="runtimeStatistics.Add(''Net Profit:'', ''$'' + (_algorithm.Portfolio.TotalProfit - _algorithm.Portfolio.TotalFees).ToString(''N2''))", span="322-322"];
m84_88 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="runtimeStatistics.Add(''Return:'', netReturn.ToString(''P''))", span="323-323"];
m84_89 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="runtimeStatistics.Add(''Equity:'', ''$'' + _algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="324-324"];
m84_90 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="runtimeStatistics.Add(''Holdings:'', ''$'' + _algorithm.Portfolio.TotalHoldingsValue.ToString(''N2''))", span="325-325"];
m84_91 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="runtimeStatistics.Add(''Volume:'', ''$'' + _algorithm.Portfolio.TotalSaleVolume.ToString(''N2''))", span="326-326"];
m84_74 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var upTime = DateTime.UtcNow - _launchTimeUtc", span="293-293"];
m84_75 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="serverStatistics[''Up Time''] = string.Format(''{0}d {1:hh\\:mm\\:ss}'', upTime.Days, upTime)", span="294-294"];
m84_76 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="serverStatistics[''Total RAM (MB)''] = _job.Controls.RamAllocation.ToString()", span="295-295"];
m84_77 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_algorithm.Securities.Values.Where(x => !x.IsInternalFeed() && !x.Symbol.IsCanonical()).OrderBy(x => x.Symbol.Value)", span="298-298"];
m84_79 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): Build run time stats'')", span="304-304"];
m84_80 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=_runtimeLock, span="305-305"];
m84_81 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=_runtimeStatistics, span="307-307"];
m84_83 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): End build run time stats'')", span="312-312"];
m84_84 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var netReturn = _setupHandler.StartingPortfolioValue > 0 ?\r\n                                    (_algorithm.Portfolio.TotalPortfolioValue - _setupHandler.StartingPortfolioValue) / _setupHandler.StartingPortfolioValue\r\n                                    : 0", span="315-317"];
m84_118 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_api.SendStatistics(\r\n                                _job.AlgorithmId,\r\n                                _algorithm.Portfolio.TotalUnrealizedProfit,\r\n                                _algorithm.Portfolio.TotalFees,\r\n                                _algorithm.Portfolio.TotalProfit,\r\n                                _algorithm.Portfolio.TotalHoldingsValue,\r\n                                _algorithm.Portfolio.TotalPortfolioValue,\r\n                                netReturn,\r\n                                _algorithm.Portfolio.TotalSaleVolume,\r\n                                _lastOrderId, 0)", span="382-391"];
m84_93 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=splitPackets, span="332-332"];
m84_94 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_messagingHandler.Send(liveResultPacket)", span="334-334"];
m84_95 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="DateTime.Now > _nextChartsUpdate || _exitTriggered", span="338-338"];
m84_96 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): Pre-store result'')", span="340-340"];
m84_107 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="DateTime.Now > _nextLogStoreUpdate || _exitTriggered", span="359-359"];
m84_97 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_nextChartsUpdate = DateTime.Now.AddMinutes(1)", span="341-341"];
m84_98 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var chartComplete = new Dictionary<string, Chart>()", span="342-342"];
m84_99 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=_chartLock, span="343-343"];
m84_102 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="chartComplete.Add(safeName, chart.Value.Clone())", span="349-349"];
m84_100 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=Charts, span="345-345"];
m84_101 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var safeName = chart.Value.Name.Replace('/', '-')", span="348-348"];
m84_103 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var orders = new Dictionary<int, Order>(_transactionHandler.Orders)", span="352-352"];
m84_105 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="StoreResult(complete)", span="354-354"];
m84_106 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): End-store result'')", span="355-355"];
m84_117 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="DateTime.Now > _nextStatisticsUpdate || _exitTriggered", span="378-378"];
m84_109 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): Storing log...'')", span="362-362"];
m84_110 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=_logStoreLock, span="363-363"];
m84_111 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="var utc = DateTime.UtcNow", span="365-365"];
m84_112 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="logs = (from log in _logStore\r\n                                    where log.Time >= utc.RoundDown(TimeSpan.FromHours(1))\r\n                                    select log).ToList()", span="366-368"];
m84_113 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_logStore = logs", span="370-370"];
m84_114 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="StoreLog(logs)", span="372-372"];
m84_115 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_nextLogStoreUpdate = DateTime.Now.AddMinutes(2)", span="373-373"];
m84_116 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): Finished storing log'')", span="374-374"];
m84_122 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): Trimming charts'')", span="401-401"];
m84_119 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=Exception, span="393-393"];
m84_121 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_nextStatisticsUpdate = DateTime.Now.AddMinutes(1)", span="397-397"];
m84_120 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Error(err, ''Error sending statistics:'')", span="395-395"];
m84_123 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=_chartLock, span="402-402"];
m84_124 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label=Charts, span="404-404"];
m84_125 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="chart.Value.Series", span="406-406"];
m84_127 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): Finished trimming charts'')", span="416-416"];
m84_126 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="series.Value.Values =\r\n                                    (from v in series.Value.Values\r\n                                     where v.x > Time.DateTimeToUnixTimeStamp(DateTime.UtcNow.AddDays(-2))\r\n                                     select v).ToList()", span="409-412"];
m84_128 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="_nextUpdate = DateTime.Now.AddSeconds(2)", span="421-421"];
m84_130 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Log.Error(err, ''LiveTradingResultHandler().Update(): '', true)", span="427-427"];
m84_131 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="233-233"];
m84_395 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="934-934"];
m84_396 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="_orderEvents.Enqueue(newEvent)", span="937-937"];
m84_397 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="Log.Trace(''LiveTradingResultHandler.OrderEvent(): '' + newEvent, true)", span="940-940"];
m84_398 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="Messages.Enqueue(new OrderEventPacket(_deployId, newEvent))", span="941-941"];
m84_399 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="var message = ''New Order Event: '' + newEvent", span="943-943"];
m84_400 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="DebugMessage(message)", span="944-944"];
m84_401 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="LogMessage(message)", span="947-947"];
m84_402 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="934-934"];
m84_253 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="Subscription.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m84_315 [cluster="System.Console.SetError(System.IO.TextWriter)", file="Subscription.cs", label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0"];
m84_252 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="Subscription.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m84_390 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="1012-1012"];
m84_446 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="Subscription.cs", label="return string.Format(''{0}-{1}_{2}.json'', _job.DeployId, DateTime.UtcNow.ToString(dateFormat), suffix);", span="1014-1014"];
m84_447 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="1012-1012"];
m84_387 [cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", file="Subscription.cs", label="Entry QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", span="31-31"];
m84_194 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Subscription.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m84_232 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="568-568"];
m84_233 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="Subscription.cs", label="var packet = new SecurityTypesPacket { Types = types }", span="570-570"];
m84_234 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="Subscription.cs", label="Messages.Enqueue(packet)", span="571-571"];
m84_235 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="568-568"];
m84_155 [cluster="QuantConnect.Chart.Clone()", file="Subscription.cs", label="Entry QuantConnect.Chart.Clone()", span="111-111"];
m84_435 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="Subscription.cs", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
m84_511 [cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", file="Subscription.cs", label="Entry QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", span="627-627"];
m84_275 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="674-674"];
m84_276 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="Subscription.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="676-676"];
m84_277 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="674-674"];
m84_299 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="Subscription.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m84_158 [cluster="QuantConnect.Packets.LiveResult.LiveResult(bool, System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="Subscription.cs", label="Entry QuantConnect.Packets.LiveResult.LiveResult(bool, System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="159-159"];
m84_46 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Subscription.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m84_386 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="979-979"];
m84_416 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="var unixDateStart = Time.DateTimeToUnixTimeStamp(start)", span="981-981"];
m84_417 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="var unixDateStop = Time.DateTimeToUnixTimeStamp(stop)", span="982-982"];
m84_419 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="result.Charts", span="988-988"];
m84_427 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="result.Charts = charts", span="1000-1000"];
m84_428 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="result.Orders = result.Orders.Values.Where(x => x.Time >= start && x.Time <= stop).ToDictionary(x => x.Id)", span="1001-1001"];
m84_429 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="result.Orders", span="1006-1006"];
m84_425 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="newSeries.Values.AddRange(series.Values.Where(chartPoint => chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop))", span="996-996"];
m84_418 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="var charts = new Dictionary<string, Chart>()", span="987-987"];
m84_422 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="charts.Add(kvp.Key, newChart)", span="992-992"];
m84_420 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="var chart = kvp.Value", span="990-990"];
m84_421 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="var newChart = new Chart(chart.Name, chart.ChartType)", span="991-991"];
m84_423 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="chart.Series.Values", span="993-993"];
m84_426 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="newChart.AddSeries(newSeries)", span="997-997"];
m84_424 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="var newSeries = new Series(series.Name, series.SeriesType)", span="995-995"];
m84_430 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="1008-1008"];
m84_431 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="979-979"];
m84_12 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="Subscription.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m84_192 [cluster="QuantConnect.Chart.Chart(string)", file="Subscription.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m84_148 [cluster="Unk.Where", file="Subscription.cs", label="Entry Unk.Where", span=""];
m84_389 [cluster="QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", file="Subscription.cs", label="Entry QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", span="129-129"];
m84_15 [cluster="System.Collections.Generic.List<T>.List()", file="Subscription.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m84_172 [cluster="QuantConnect.Symbol.IsCanonical()", file="Subscription.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m84_300 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="736-736"];
m84_301 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="_algorithm = algorithm", span="738-738"];
m84_307 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="var debug = new FuncTextWriter(algorithm.Debug)", span="748-748"];
m84_308 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="var error = new FuncTextWriter(algorithm.Error)", span="749-749"];
m84_302 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="var types = new List<SecurityType>()", span="740-740"];
m84_303 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="_algorithm.Securities.Values", span="741-741"];
m84_304 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="!types.Contains(security.Type)", span="743-743"];
m84_305 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="types.Add(security.Type)", span="743-743"];
m84_306 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="SecurityType(types)", span="745-745"];
m84_309 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="Console.SetOut(debug)", span="750-750"];
m84_310 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="Console.SetError(error)", span="751-751"];
m84_311 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="736-736"];
m84_443 [cluster="lambda expression", file="Subscription.cs", label="Entry lambda expression", span="1001-1001"];
m84_168 [cluster="lambda expression", file="Subscription.cs", label="Entry lambda expression", span="298-298"];
m84_173 [cluster="lambda expression", file="Subscription.cs", label="Entry lambda expression", span="298-298"];
m84_169 [cluster="lambda expression", file="Subscription.cs", label="!x.IsInternalFeed() && !x.Symbol.IsCanonical()", span="298-298"];
m84_170 [cluster="lambda expression", file="Subscription.cs", label="Exit lambda expression", span="298-298"];
m84_174 [cluster="lambda expression", file="Subscription.cs", label="x.Symbol.Value", span="298-298"];
m84_175 [cluster="lambda expression", file="Subscription.cs", label="Exit lambda expression", span="298-298"];
m84_350 [cluster="lambda expression", file="Subscription.cs", label="Entry lambda expression", span="842-842"];
m84_351 [cluster="lambda expression", file="Subscription.cs", label="x.Message", span="842-842"];
m84_352 [cluster="lambda expression", file="Subscription.cs", label="Exit lambda expression", span="842-842"];
m84_441 [cluster="lambda expression", file="Subscription.cs", label="x.Time >= start && x.Time <= stop", span="1001-1001"];
m84_438 [cluster="lambda expression", file="Subscription.cs", label="chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop", span="996-996"];
m84_437 [cluster="lambda expression", file="Subscription.cs", label="Entry lambda expression", span="996-996"];
m84_440 [cluster="lambda expression", file="Subscription.cs", label="Entry lambda expression", span="1001-1001"];
m84_439 [cluster="lambda expression", file="Subscription.cs", label="Exit lambda expression", span="996-996"];
m84_442 [cluster="lambda expression", file="Subscription.cs", label="Exit lambda expression", span="1001-1001"];
m84_444 [cluster="lambda expression", file="Subscription.cs", label="x.Id", span="1001-1001"];
m84_445 [cluster="lambda expression", file="Subscription.cs", label="Exit lambda expression", span="1001-1001"];
m84_515 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="Subscription.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m84_164 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="Subscription.cs", label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="280-280"];
m84_392 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="Subscription.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="567-567"];
m84_411 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="1041-1041"];
m84_455 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="var time = DateTime.UtcNow", span="1043-1043"];
m84_456 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="time > _nextSample || forceProcess", span="1045-1045"];
m84_499 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.Notify.Messages.Count > 0 && (DateTime.Now < start.AddSeconds(1) || forceProcess)", span="1156-1156"];
m84_458 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_nextSample = time.Add(ResamplePeriod)", span="1050-1050"];
m84_474 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="security.SetMarketPrice(new Tick(time, subscription.Configuration.Symbol, price, price))", span="1091-1091"];
m84_475 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="SampleAssetPrices(subscription.Configuration.Symbol, time, price)", span="1096-1096"];
m84_476 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="1102-1102"];
m84_478 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="!_algorithm.IsWarmingUp && time > _nextRunningStatus", span="1109-1109"];
m84_479 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_nextRunningStatus = time.Add(TimeSpan.FromMinutes(1))", span="1111-1111"];
m84_457 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.ProcessSynchronousEvents(): Enter'')", span="1047-1047"];
m84_459 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_dataFeed != null", span="1053-1053"];
m84_460 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_dataFeed.Subscriptions", span="1055-1055"];
m84_461 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="subscription.Configuration.TickType == TickType.OpenInterest", span="1058-1058"];
m84_463 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.Securities.TryGetValue(subscription.Configuration.Symbol, out security)", span="1062-1062"];
m84_464 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="var price = subscription.RealtimePrice", span="1065-1065"];
m84_462 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="Security security", span="1061-1061"];
m84_465 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="var last = security.GetLastData()", span="1067-1067"];
m84_469 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="security.SetRealTimePrice(last)", span="1074-1074"];
m84_466 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="last != null && price > 0", span="1068-1068"];
m84_468 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="last.Value = price", span="1073-1073"];
m84_473 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="price > 0", span="1089-1089"];
m84_467 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="last = last.Clone(last.IsFillForward)", span="1071-1071"];
m84_470 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="var cash = (from c in _algorithm.Portfolio.CashBook.Values\r\n                                    where c.SecuritySymbol == last.Symbol\r\n                                    select c).SingleOrDefault()", span="1077-1079"];
m84_472 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="cash.Update(last)", span="1083-1083"];
m84_471 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="cash != null", span="1081-1081"];
m84_477 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="SampleRange(_algorithm.GetChartUpdates(true))", span="1105-1105"];
m84_481 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="var debugStopWatch = Stopwatch.StartNew()", span="1116-1116"];
m84_480 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_api.SetAlgorithmStatus(_job.AlgorithmId, AlgorithmStatus.Running)", span="1112-1112"];
m84_482 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.DebugMessages.Count > 0 && debugStopWatch.ElapsedMilliseconds < 250", span="1117-1117"];
m84_483 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="string message", span="1119-1119"];
m84_486 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="var errorStopWatch = Stopwatch.StartNew()", span="1127-1127"];
m84_484 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.DebugMessages.TryDequeue(out message)", span="1120-1120"];
m84_485 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="DebugMessage(message)", span="1122-1122"];
m84_487 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.ErrorMessages.Count > 0 && errorStopWatch.ElapsedMilliseconds < 250", span="1128-1128"];
m84_488 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="string message", span="1130-1130"];
m84_491 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="var logStopWatch = Stopwatch.StartNew()", span="1138-1138"];
m84_489 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.ErrorMessages.TryDequeue(out message)", span="1131-1131"];
m84_490 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="ErrorMessage(message)", span="1133-1133"];
m84_492 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.LogMessages.Count > 0 && logStopWatch.ElapsedMilliseconds < 250", span="1139-1139"];
m84_493 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="string message", span="1141-1141"];
m84_496 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.RuntimeStatistics", span="1149-1149"];
m84_494 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.LogMessages.TryDequeue(out message)", span="1142-1142"];
m84_495 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="LogMessage(message)", span="1144-1144"];
m84_497 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="RuntimeStatistic(pair.Key, pair.Value)", span="1151-1151"];
m84_498 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="var start = DateTime.Now", span="1155-1155"];
m84_500 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="Notification message", span="1158-1158"];
m84_506 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.ProcessSynchronousEvents(): Exit'')", span="1174-1174"];
m84_501 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_algorithm.Notify.Messages.TryDequeue(out message)", span="1159-1159"];
m84_502 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="Log.Trace(''LiveTradingResultHandler.ProcessSynchronousEvents(): Processing Notification...'')", span="1162-1162"];
m84_503 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="_messagingHandler.SendNotification(message)", span="1165-1165"];
m84_505 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="Log.Error(err, ''Sending notification: '' + message.GetType().FullName)", span="1169-1169"];
m84_504 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label=Exception, span="1167-1167"];
m84_507 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="1041-1041"];
m84_151 [cluster="Unk.Add", file="Subscription.cs", label="Entry Unk.Add", span=""];
m84_216 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="Subscription.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m84_403 [cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", file="Subscription.cs", label="Entry QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", span="49-49"];
m84_16 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="180-180"];
m84_17 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="_api = api", span="182-182"];
m84_19 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="_messagingHandler = messagingHandler", span="184-184"];
m84_20 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="_setupHandler = setupHandler", span="185-185"];
m84_21 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="_transactionHandler = transactionHandler", span="186-186"];
m84_22 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="_job = (LiveNodePacket)job", span="187-187"];
m84_23 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="_job == null", span="188-188"];
m84_24 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="throw new Exception(''LiveResultHandler.Constructor(): Submitted Job type invalid.'');", span="188-188"];
m84_25 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="_deployId = _job.DeployId", span="189-189"];
m84_26 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="_compileId = _job.CompileId", span="190-190"];
m84_27 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="180-180"];
m84_514 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Subscription.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m84_278 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="684-684"];
m84_279 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.SampleRange(): Begin sampling'')", span="686-686"];
m84_281 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label=updates, span="689-689"];
m84_280 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label=_chartLock, span="687-687"];
m84_282 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="!Charts.ContainsKey(update.Name)", span="692-692"];
m84_295 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.SampleRange(): Finished sampling'')", span="729-729"];
m84_283 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="694-694"];
m84_284 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="update.Series.Values", span="698-698"];
m84_285 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="var chart = Charts[update.Name]", span="701-701"];
m84_286 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="!chart.Series.ContainsKey(series.Name)", span="702-702"];
m84_287 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="chart.Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit)\r\n                            {\r\n                                Color = series.Color, ScatterMarkerSymbol = series.ScatterMarkerSymbol\r\n                            })", span="704-707"];
m84_288 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="var thisSeries = chart.Series[series.Name]", span="710-710"];
m84_289 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="series.Values.Count > 0", span="711-711"];
m84_290 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="series.SeriesType == SeriesType.Pie", span="714-714"];
m84_291 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="var lastValue = series.Values.Last()", span="716-716"];
m84_294 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="chart.Series[series.Name].Values.AddRange(series.Values)", span="723-723"];
m84_292 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="thisSeries.Purge()", span="717-717"];
m84_293 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="thisSeries.Values.Add(lastValue)", span="718-718"];
m84_296 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="684-684"];
m84_316 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="760-760"];
m84_317 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="Subscription.cs", label="var msg = status + (string.IsNullOrEmpty(message) ? string.Empty : '' '' + message)", span="762-762"];
m84_319 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="Subscription.cs", label="var packet = new AlgorithmStatusPacket(_job.AlgorithmId, _job.ProjectId, status, message)", span="764-764"];
m84_318 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="Subscription.cs", label="Log.Trace(''LiveTradingResultHandler.SendStatusUpdate(): '' + msg)", span="763-763"];
m84_320 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="Subscription.cs", label="Messages.Enqueue(packet)", span="765-765"];
m84_321 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="760-760"];
m84_433 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="Subscription.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType)", span="195-195"];
m84_448 [cluster="string.Format(string, object, object, object)", file="Subscription.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m84_47 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Subscription.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m84_432 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="Subscription.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m84_142 [cluster="string.Replace(char, char)", file="Subscription.cs", label="Entry string.Replace(char, char)", span="0-0"];
m84_165 [cluster="System.DateTime.AddDays(double)", file="Subscription.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m84_348 [cluster="Unk.Select", file="Subscription.cs", label="Entry Unk.Select", span=""];
m84_436 [cluster="Unk.ToDictionary", file="Subscription.cs", label="Entry Unk.ToDictionary", span=""];
m84_271 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="Subscription.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m84_298 [cluster="QuantConnect.Series.Purge()", file="Subscription.cs", label="Entry QuantConnect.Series.Purge()", span="349-349"];
m84_9 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_logStore = new List<LogEntry>()", span="168-168"];
m84_0 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", span="155-155"];
m84_1 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_charts = new ConcurrentDictionary<string, Chart>()", span="157-157"];
m84_2 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_orderEvents = new ConcurrentQueue<OrderEvent>()", span="158-158"];
m84_3 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_messages = new ConcurrentQueue<Packet>()", span="159-159"];
m84_4 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_isActive = true", span="160-160"];
m84_5 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_runtimeStatistics = new Dictionary<string, string>()", span="161-161"];
m84_6 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_resamplePeriod = TimeSpan.FromSeconds(1)", span="163-163"];
m84_7 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_notificationPeriod = TimeSpan.FromSeconds(1)", span="164-164"];
m84_8 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="_startTime = DateTime.Now", span="165-165"];
m84_10 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", span="155-155"];
m84_272 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="Subscription.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
m84_394 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", span="1022-1022"];
m84_449 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", file="Subscription.cs", label="return Uri.EscapeDataString(chartName);", span="1024-1024"];
m84_450 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", span="1022-1022"];
m84_157 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="Subscription.cs", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="109-109"];
m84_135 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="Subscription.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272"];
m84_136 [cluster="QuantConnect.Orders.Order.Clone()", file="Subscription.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="241-241"];
m84_143 [cluster="QuantConnect.Chart.GetUpdates()", file="Subscription.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
m84_257 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="625-625"];
m84_258 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="Subscription.cs", label="value > 0", span="627-627"];
m84_259 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.SampleEquity(): '' + time.ToShortTimeString() + '' >'' + value)", span="629-629"];
m84_260 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="Subscription.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value)", span="630-630"];
m84_261 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="625-625"];
m84_519 [cluster="QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)", file="Subscription.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)", span="56-56"];
m84_393 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="Subscription.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m84_140 [cluster="Unk.Max", file="Subscription.cs", label="Entry Unk.Max", span=""];
m84_210 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="530-530"];
m84_211 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="Subscription.cs", label="Messages.Count > 500", span="533-533"];
m84_213 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="Subscription.cs", label="Messages.Enqueue(new LogPacket(_deployId, message))", span="534-534"];
m84_214 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="Subscription.cs", label="AddToLogStore(message)", span="535-535"];
m84_212 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="Subscription.cs", label="return;", span="533-533"];
m84_215 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="530-530"];
m84_28 [cluster="System.Exception.Exception(string)", file="Subscription.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m84_314 [cluster="System.Console.SetOut(System.IO.TextWriter)", file="Subscription.cs", label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0"];
m84_149 [cluster="Unk.OrderBy", file="Subscription.cs", label="Entry Unk.OrderBy", span=""];
m84_513 [cluster="Unk.Update", file="Subscription.cs", label="Entry Unk.Update", span=""];
m84_518 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Subscription.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265"];
m84_347 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="838-838"];
m84_163 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="838-838"];
m84_344 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="Subscription.cs", label="SaveLogs(_job.DeployId, logs.Select(x => x.Message))", span="842-842"];
m84_345 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="Subscription.cs", label=Exception, span="844-844"];
m84_346 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="Subscription.cs", label="Log.Error(err)", span="846-846"];
m84_11 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="Subscription.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m84_43 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="Subscription.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
m84_312 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Subscription.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m84_349 [cluster="Unk.SaveLogs", file="Subscription.cs", label="Entry Unk.SaveLogs", span=""];
m84_510 [cluster="QuantConnect.Data.BaseData.Clone(bool)", file="Subscription.cs", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="249-249"];
m84_134 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Subscription.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m84_219 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="Subscription.cs", label="_logStore.Add(new LogEntry(DateTime.Now.ToString(DateFormat.UI) + '' '' + message))", span="547-547"];
m84_204 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="542-542"];
m84_217 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.AddToLogStore(): Adding'')", span="544-544"];
m84_218 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="Subscription.cs", label=_logStoreLock, span="545-545"];
m84_220 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.AddToLogStore(): Finished adding'')", span="549-549"];
m84_221 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="542-542"];
m84_516 [cluster="System.Math.Round(decimal, int)", file="Subscription.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m84_171 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="Subscription.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m84_154 [cluster="System.DateTime.AddMinutes(double)", file="Subscription.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m84_146 [cluster="string.Format(string, object, object)", file="Subscription.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m84_222 [cluster="QuantConnect.Logging.LogEntry.LogEntry(string)", file="Subscription.cs", label="Entry QuantConnect.Logging.LogEntry.LogEntry(string)", span="44-44"];
m84_434 [cluster="Unk.AddRange", file="Subscription.cs", label="Entry Unk.AddRange", span=""];
m84_156 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Subscription.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m84_209 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="Subscription.cs", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
m84_205 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", span="518-518"];
m84_206 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", file="Subscription.cs", label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="520-520"];
m84_207 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", file="Subscription.cs", label="AddToLogStore(message)", span="521-521"];
m84_208 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", span="518-518"];
m84_14 [cluster="System.TimeSpan.FromSeconds(double)", file="Subscription.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m84_152 [cluster="decimal.ToString(string)", file="Subscription.cs", label="Entry decimal.ToString(string)", span="0-0"];
m84_415 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="Subscription.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71"];
m84_254 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Subscription.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m84_263 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="641-641"];
m84_264 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="Subscription.cs", label="Security security", span="644-644"];
m84_265 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="Subscription.cs", label="_algorithm.Securities.TryGetValue(symbol, out security) && !security.IsInternalFeed() && value > 0", span="645-645"];
m84_268 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="Subscription.cs", label="Sample(''Stockplot: '' + symbol.Value, ''Stockplot: '' + symbol.Value, 0, SeriesType.Line, time, value)", span="650-650"];
m84_266 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="Subscription.cs", label="var now = DateTime.UtcNow.ConvertFromUtc(security.Exchange.TimeZone)", span="647-647"];
m84_267 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="Subscription.cs", label="security.Exchange.Hours.IsOpen(now, security.IsExtendedMarketHours)", span="648-648"];
m84_269 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="641-641"];
m84_322 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", file="Subscription.cs", label="Entry QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", span="74-74"];
m84_255 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="Subscription.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="228-228"];
m84_297 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="Subscription.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m84_237 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="579-579"];
m84_238 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="Subscription.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _deployId, message, stacktrace))", span="581-581"];
m84_239 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="Subscription.cs", label="AddToLogStore(message + (!string.IsNullOrEmpty(stacktrace) ? '': StackTrace: '' + stacktrace : string.Empty))", span="582-582"];
m84_240 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="579-579"];
m84_133 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Subscription.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m84_388 [cluster="System.TimeSpan.FromMinutes(double)", file="Subscription.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m84_242 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="596-596"];
m84_243 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Sample(): Sampling '' + chartName + ''.'' + seriesName)", span="598-598"];
m84_245 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="!Charts.ContainsKey(chartName)", span="602-602"];
m84_246 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="604-604"];
m84_247 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="608-608"];
m84_248 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="610-610"];
m84_249 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="614-614"];
m84_250 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.Sample(): Done sampling '' + chartName + ''.'' + seriesName)", span="616-616"];
m84_244 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label=_chartLock, span="599-599"];
m84_251 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="596-596"];
m84_508 [cluster="System.DateTime.Add(System.TimeSpan)", file="Subscription.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m84_161 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="Subscription.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m84_224 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="557-557"];
m84_225 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="Subscription.cs", label="Messages.Count > 500", span="559-559"];
m84_227 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="Subscription.cs", label="Messages.Enqueue(new HandledErrorPacket(_deployId, message, stacktrace))", span="560-560"];
m84_228 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="Subscription.cs", label="AddToLogStore(message + (!string.IsNullOrEmpty(stacktrace) ? '': StackTrace: '' + stacktrace : string.Empty))", span="561-561"];
m84_226 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="Subscription.cs", label="return;", span="559-559"];
m84_229 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="557-557"];
m84_150 [cluster="Holding.cstr", file="Subscription.cs", label="Entry Holding.cstr", span=""];
m84_323 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="774-774"];
m84_324 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.RuntimeStatistic(): Begin setting statistic'')", span="776-776"];
m84_326 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="Subscription.cs", label="!_runtimeStatistics.ContainsKey(key)", span="779-779"];
m84_327 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="Subscription.cs", label="_runtimeStatistics.Add(key, value)", span="781-781"];
m84_328 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="Subscription.cs", label="_runtimeStatistics[key] = value", span="783-783"];
m84_325 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="Subscription.cs", label=_runtimeLock, span="777-777"];
m84_329 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="Subscription.cs", label="Log.Debug(''LiveTradingResultHandler.RuntimeStatistic(): End setting statistic'')", span="785-785"];
m84_330 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="774-774"];
m84_270 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="Subscription.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m84_141 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Subscription.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m84_45 [cluster="System.Threading.Thread.Sleep(int)", file="Subscription.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m84_236 [cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", file="Subscription.cs", label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52"];
m84_241 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="Subscription.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m84_451 [cluster="System.Uri.EscapeDataString(string)", file="Subscription.cs", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m84_167 [cluster="System.DateTime.AddSeconds(double)", file="Subscription.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m84_193 [cluster="QuantConnect.Packets.LiveResult.LiveResult()", file="Subscription.cs", label="Entry QuantConnect.Packets.LiveResult.LiveResult()", span="153-153"];
m84_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Subscription.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m84_196 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="507-507"];
m84_197 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="Subscription.cs", label="Messages.Count > 500", span="509-509"];
m84_199 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="Subscription.cs", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="510-510"];
m84_200 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="Subscription.cs", label="AddToLogStore(message)", span="511-511"];
m84_198 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="Subscription.cs", label="return;", span="509-509"];
m84_201 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="507-507"];
m84_203 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="Subscription.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m84_166 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Subscription.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169"];
m84_132 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="Subscription.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="498-498"];
m84_29 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="196-196"];
m84_30 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="!(_exitTriggered && Messages.Count == 0)", span="199-199"];
m84_31 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Packet packet", span="204-204"];
m84_39 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Log.Trace(''LiveTradingResultHandler.Run(): Ending Thread...'')", span="225-225"];
m84_32 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Messages.TryDequeue(out packet)", span="205-205"];
m84_33 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="_messagingHandler.Send(packet)", span="207-207"];
m84_34 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Update()", span="211-211"];
m84_35 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Messages.Count == 0", span="213-213"];
m84_36 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Thread.Sleep(10)", span="216-216"];
m84_37 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label=Exception, span="219-219"];
m84_38 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Log.Error(err)", span="221-221"];
m84_40 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="_isActive = false", span="226-226"];
m84_41 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="196-196"];
m84_256 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="Subscription.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="411-411"];
m84_145 [cluster="QuantConnect.OS.GetServerStatistics()", file="Subscription.cs", label="Entry QuantConnect.OS.GetServerStatistics()", span="217-217"];
m84_231 [cluster="string.IsNullOrEmpty(string)", file="Subscription.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m84_273 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", file="Subscription.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", span="661-661"];
m84_274 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", file="Subscription.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", span="661-661"];
m84_139 [cluster="Unk.DefaultIfEmpty", file="Subscription.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m84_521 [file="Subscription.cs", label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", span=""];
m84_522 [file="Subscription.cs", label=unixDateStart, span=""];
m84_523 [file="Subscription.cs", label=unixDateStop, span=""];
m84_524 [file="Subscription.cs", label="System.DateTime", span=""];
m84_525 [file="Subscription.cs", label="System.DateTime", span=""];
m85_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="76-76"];
m85_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return _subscriptions.TryGetValue(configuration, out subscription);", span="78-78"];
m85_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="76-76"];
m85_4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m85_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", span="38-38"];
m85_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="SubscriptionCollection.cs", label="_subscriptions = new ConcurrentDictionary<SubscriptionDataConfig, Subscription>()", span="40-40"];
m85_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="SubscriptionCollection.cs", label="_subscriptionsByTickType = new List<Subscription>()", span="41-41"];
m85_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", span="38-38"];
m85_32 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="SubscriptionCollection.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m85_21 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m85_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="60-60"];
m85_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="!_subscriptions.TryAdd(subscription.Configuration, subscription)", span="62-62"];
m85_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="SortSubscriptions()", span="65-65"];
m85_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return false;", span="63-63"];
m85_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return true;", span="67-67"];
m85_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="60-60"];
m85_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", span="103-103"];
m85_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="SubscriptionCollection.cs", label="return _subscriptionsByTickType.GetEnumerator();", span="105-105"];
m85_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", span="103-103"];
m85_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SortSubscriptions()", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SortSubscriptions()", span="119-119"];
m85_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SortSubscriptions()", color=green, community=0, file="SubscriptionCollection.cs", label="_subscriptionsByTickType = _subscriptions\r\n                .Select(x => x.Value)\r\n                .OrderBy(x => x.Configuration.TickType)\r\n                .ToList()", prediction=125, span="121-124"];
m85_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SortSubscriptions()", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SortSubscriptions()", span="119-119"];
m85_39 [cluster="Unk.OrderBy", file="SubscriptionCollection.cs", label="Entry Unk.OrderBy", span=""];
m85_16 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m85_40 [cluster="Unk.ToList", file="SubscriptionCollection.cs", label="Entry Unk.ToList", span=""];
m85_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", span="114-114"];
m85_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionCollection.cs", label="return GetEnumerator();", span="116-116"];
m85_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", span="114-114"];
m85_38 [cluster="Unk.Select", file="SubscriptionCollection.cs", label="Entry Unk.Select", span=""];
m85_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="87-87"];
m85_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="!_subscriptions.TryRemove(configuration, out subscription)", span="89-89"];
m85_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="SortSubscriptions()", span="92-92"];
m85_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return false;", span="90-90"];
m85_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return true;", span="94-94"];
m85_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="87-87"];
m85_9 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m85_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", span="49-49"];
m85_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="return _subscriptions.ContainsKey(configuration);", span="51-51"];
m85_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", span="49-49"];
m85_28 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m85_44 [cluster="lambda expression", file="SubscriptionCollection.cs", label="Entry lambda expression", span="123-123"];
m85_41 [cluster="lambda expression", file="SubscriptionCollection.cs", label="Entry lambda expression", span="122-122"];
m85_42 [cluster="lambda expression", color=green, community=0, file="SubscriptionCollection.cs", label="x.Value", prediction=126, span="122-122"];
m85_43 [cluster="lambda expression", file="SubscriptionCollection.cs", label="Exit lambda expression", span="122-122"];
m85_45 [cluster="lambda expression", color=green, community=0, file="SubscriptionCollection.cs", label="x.Configuration.TickType", prediction=127, span="123-123"];
m85_46 [cluster="lambda expression", file="SubscriptionCollection.cs", label="Exit lambda expression", span="123-123"];
m85_47 [file="SubscriptionCollection.cs", label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", span=""];
m86_117 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return false;", span="394-394"];
m86_186 [cluster="string.Format(string, object, object, object)", file="SubscriptionDataReader.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m86_231 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", span="94-94"];
m86_98 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator = ResolveDataEnumerator(false)", span="348-348"];
m86_214 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="SubscriptionDataReader.cs", label="MarketDataType.Tick", span="460-460"];
m86_248 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.AskSize = (long)tick.AskSize", span="510-510"];
m86_250 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.BidPrice = tick.BidPrice", span="514-514"];
m86_255 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", span="499-499"];
m86_249 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.BidPrice != 0m", span="512-512"];
m86_254 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.OpenInterest = tick.Value", span="522-522"];
m86_251 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.BidSize = (long)tick.BidSize", span="515-515"];
m86_252 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.OpenInterest", span="518-518"];
m86_253 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.Value != 0m", span="520-520"];
m86_256 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="SubscriptionDataReader.cs", label="quote.Ask != null && quote.Ask.Close != 0m", span="529-529"];
m86_257 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="SubscriptionDataReader.cs", label="contract.AskPrice = quote.Ask.Close", span="531-531"];
m86_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_tradeableDates = tradeableDates.GetEnumerator()", span="160-160"];
m86_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", color=green, community=0, file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", prediction=128, span="249-249"];
m86_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", span="412-412"];
m86_53 [cluster="QuantConnect.Data.Auxiliary.FactorFile.FactorFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.FactorFileRow>, System.DateTime?)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Auxiliary.FactorFile.FactorFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.FactorFileRow>, System.DateTime?)", span="56-56"];
m86_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label=_endOfStream, span="251-251"];
m86_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return false;", span="253-253"];
m86_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="!config.IsCustomData && config.SecurityType == SecurityType.Option", span="224-224"];
m86_62 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m86_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SubscriptionDataReader.cs", label="optionChains[baseData.Symbol] = (OptionChain) baseData", span="200-200"];
m86_59 [cluster="System.DateTime.ToShortDateString()", file="SubscriptionDataReader.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m86_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="Current != null && Current.DataType != MarketDataType.Auxiliary", span="256-256"];
m86_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="var mapFile = mapFileResolver.ResolveMapFile(config.Symbol.Underlying.ID.Symbol, config.Symbol.Underlying.ID.Date)", span="228-228"];
m86_52 [cluster="QuantConnect.Data.Custom.Quandl.SetAuthCode(string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Custom.Quandl.SetAuthCode(string)", span="136-136"];
m86_51 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m86_54 [cluster="System.Collections.Generic.List<T>.List()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m86_55 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", span="57-57"];
m86_56 [cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124"];
m86_58 [cluster="QuantConnect.Interfaces.IFactorFileProvider.Get(QuantConnect.Symbol)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Interfaces.IFactorFileProvider.Get(QuantConnect.Symbol)", span="32-32"];
m86_60 [cluster="string.Format(string, object, object)", file="SubscriptionDataReader.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m86_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_previous = Current", span="259-259"];
m86_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label=_isLiveMode, span="265-265"];
m86_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return true;", span="269-269"];
m86_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_endOfStream = true", span="272-272"];
m86_75 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="HasAuxDataBefore(_lastInstanceBeforeAuxilliaryData)", span="279-279"];
m86_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return true;", span="284-284"];
m86_79 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_emittedAuxilliaryData = false", span="289-289"];
m86_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label=Exception, span="217-217"];
m86_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="var factorFile = factorFileProvider.Get(_config.Symbol)", span="196-196"];
m86_90 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="instance.EndTime < _periodStart", span="321-321"];
m86_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="Log.Error(err, ''Fetching Price/Map Factors: '' + config.Symbol.ID + '': '')", span="219-219"];
m86_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_mapFile = mapFile", span="231-231"];
m86_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator = ResolveDataEnumerator(true)", span="239-239"];
m86_89 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="instance.EndTime <= _previous.EndTime", span="317-317"];
m86_91 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_previous = instance", span="324-324"];
m86_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="mapFile.Any()", span="231-231"];
m86_47 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="50-50"];
m86_48 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m86_57 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m86_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="Current = null", span="268-268"];
m86_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="Current = _lastInstanceBeforeAuxilliaryData", span="290-290"];
m86_83 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator.MoveNext()", span="296-296"];
m86_85 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="instance == null", span="299-299"];
m86_87 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_config.IsCustomData", span="308-308"];
m86_88 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="instance.EndTime < _previous.EndTime", span="312-312"];
m86_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="var quandl = _dataFactory as Quandl", span="174-174"];
m86_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_mapFile = mapFile", span="194-194"];
m86_50 [cluster="System.Func<T, TResult>.Invoke(T)", file="SubscriptionDataReader.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m86_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label=Exception, span="233-233"];
m86_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="Log.Error(err, ''Map Factors: '' + config.Symbol.ID + '': '')", span="235-235"];
m86_46 [cluster="System.Collections.Generic.Queue<T>.Queue()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.Queue<T>.Queue()", span="0-0"];
m86_49 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", span="128-128"];
m86_81 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_lastInstanceBeforeAuxilliaryData = null", span="291-291"];
m86_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator == null", span="262-262"];
m86_82 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return true;", span="292-292"];
m86_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="var userObj = objectActivator.Invoke(new object[] { config.Type })", span="169-169"];
m86_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_hasScaleFactors = factorFile != null", span="197-197"];
m86_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label=_hasScaleFactors, span="198-198"];
m86_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_factorFile = factorFile", span="200-200"];
m86_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label=_emittedAuxilliaryData, span="287-287"];
m86_74 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return false;", span="273-273"];
m86_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="Current = _auxiliaryData.Dequeue()", span="283-283"];
m86_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="!_isLiveMode && _factorFile != null && _factorFile.FactorFileMinimumDate.HasValue", span="203-203"];
m86_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_periodStart < _factorFile.FactorFileMinimumDate.Value", span="205-205"];
m86_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_periodStart = _factorFile.FactorFileMinimumDate.Value", span="207-207"];
m86_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="objectActivator == null", span="161-161"];
m86_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_dataFactory = userObj as BaseData", span="171-171"];
m86_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="!Quandl.IsAuthCodeSet", span="177-177"];
m86_84 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="var instance = _subscriptionFactoryEnumerator.Current", span="298-298"];
m86_92 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="instance.Time > _periodFinish", span="328-328"];
m86_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="return;", span="165-165"];
m86_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", span="127-127"];
m86_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_endOfStream = true", span="164-164"];
m86_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="quandl != null", span="175-175"];
m86_86 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_previous != null && _config.Resolution != Resolution.Tick", span="306-306"];
m86_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_resultHandler.ErrorMessage(''Custom data type ''' + config.Type.Name + ''' missing parameterless constructor E.g. public '' + config.Type.Name + ''() { }'')", span="163-163"];
m86_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="mapFile.Any()", span="194-194"];
m86_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="Quandl.SetAuthCode(Config.Get(''quandl-auth-token''))", span="179-179"];
m86_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_factorFile = new FactorFile(config.Symbol.Value, new List<FactorFileRow>())", span="183-183"];
m86_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="var mapFile = mapFileResolver.ResolveMapFile(config.Symbol.ID.Symbol, config.Symbol.ID.Date)", span="191-191"];
m86_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_mapFile = new MapFile(config.Symbol.Value, new List<MapFileRow>())", span="184-184"];
m86_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="!config.IsCustomData && config.SecurityType == SecurityType.Equity", span="187-187"];
m86_93 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_endOfStream = true", span="331-331"];
m86_277 [cluster="QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", file="SubscriptionDataReader.cs", label=slice, span=""];
m86_156 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="universeData.FilteredContracts", span="358-358"];
m86_182 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", span="321-321"];
m86_196 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="!_mapFile.HasData(date)", span="537-537"];
m86_152 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="universeData != null", span="349-349"];
m86_155 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="addedContract.Value.UnderlyingLastPrice = chain.Underlying.Price", span="355-355"];
m86_157 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="chain.FilteredContracts.Add(contractSymbol)", span="360-360"];
m86_158 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="return false;", span="362-362"];
m86_159 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="OptionContract contract", span="365-365"];
m86_160 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="!chain.Contracts.TryGetValue(baseData.Symbol, out contract)", span="366-366"];
m86_192 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="date = _tradeableDates.Current", span="529-529"];
m86_189 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="date = _tradeableDates.Current", span="523-523"];
m86_114 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator = ResolveDataEnumerator(true)", span="389-389"];
m86_138 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="var newSource = _dataFactory.GetSource(_config, dateInDataTimeZone, _isLiveMode)", span="428-428"];
m86_141 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="sourceChanged || liveRemoteFile", span="433-433"];
m86_142 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator != null", span="436-436"];
m86_143 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator.Dispose()", span="438-438"];
m86_144 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="_source = newSource", span="442-442"];
m86_148 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="return _subscriptionFactoryEnumerator;", span="451-451"];
m86_151 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", span="518-518"];
m86_161 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="37-37"];
m86_162 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", span="468-468"];
m86_163 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", file="SubscriptionDataReader.cs", label="dataSourceReader.InvalidSource += (sender, args) =>\r\n            {\r\n                switch (args.Source.TransportMedium)\r\n                {\r\n                    case SubscriptionTransportMedium.LocalFile:\r\n                        // the local uri doesn't exist, write an error and return null so we we don't try to get data for today\r\n                        // Log.Trace(string.Format(''SubscriptionDataReader.GetReader(): Could not find QC Data, skipped: {0}'', source));\r\n                        break;\r\n\r\n                    case SubscriptionTransportMedium.RemoteFile:\r\n                        _resultHandler.ErrorMessage(string.Format(''Error downloading custom data source file, skipped: {0} Error: {1}'', source, args.Exception.Message), args.Exception.StackTrace);\r\n                        break;\r\n\r\n                    case SubscriptionTransportMedium.Rest:\r\n                        break;\r\n\r\n                    default:\r\n                        throw new ArgumentOutOfRangeException();\r\n                }\r\n            }", span="471-490"];
m86_165 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", file="SubscriptionDataReader.cs", label="var textSubscriptionFactory = (TextSubscriptionDataSourceReader)dataSourceReader", span="495-495"];
m86_166 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", file="SubscriptionDataReader.cs", label="textSubscriptionFactory.CreateStreamReaderError += (sender, args) =>\r\n                {\r\n                    //Log.Error(string.Format(''Failed to get StreamReader for data source({0}), symbol({1}). Skipping date({2}). Reader is null.'', args.Source.Source, _mappedSymbol, args.Date.ToShortDateString()));\r\n                    if (_config.IsCustomData)\r\n                    {\r\n                        _resultHandler.ErrorMessage(string.Format(''We could not fetch the requested data. This may not be valid data, or a failed download of custom data. Skipping source ({0}).'', args.Source.Source));\r\n                    }\r\n                }", span="496-503"];
m86_168 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", span="468-468"];
m86_172 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="SubscriptionTransportMedium.RemoteFile", span="480-480"];
m86_176 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="471-490"];
m86_180 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="_resultHandler.ErrorMessage(string.Format(''We could not fetch the requested data. This may not be valid data, or a failed download of custom data. Skipping source ({0}).'', args.Source.Source))", span="501-501"];
m86_181 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="496-503"];
m86_139 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="var sourceChanged = _source != newSource && newSource.Source != ''''", span="431-431"];
m86_140 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="var liveRemoteFile = _isLiveMode && (_source == null || _source.TransportMedium == SubscriptionTransportMedium.RemoteFile)", span="432-432"];
m86_173 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="_resultHandler.ErrorMessage(string.Format(''Error downloading custom data source file, skipped: {0} Error: {1}'', source, args.Exception.Message), args.Exception.StackTrace)", span="481-481"];
m86_177 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="SubscriptionDataReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m86_150 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", span="412-412"];
m86_154 [cluster="System.IDisposable.Dispose()", file="SubscriptionDataReader.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m86_169 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="471-490"];
m86_145 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="var subscriptionFactory = CreateSubscriptionFactory(newSource)", span="443-443"];
m86_146 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="return subscriptionFactory.Read(newSource).GetEnumerator();", span="444-444"];
m86_164 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", file="SubscriptionDataReader.cs", label="dataSourceReader is TextSubscriptionDataSourceReader", span="492-492"];
m86_147 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="!endOfEnumerator", span="449-449"];
m86_149 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label=true, span="458-458"];
m86_153 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m86_170 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="args.Source.TransportMedium", span="473-473"];
m86_174 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="SubscriptionTransportMedium.Rest", span="484-484"];
m86_178 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="496-503"];
m86_167 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.AttachEventHandlers(QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader, QuantConnect.Data.SubscriptionDataSource)", file="SubscriptionDataReader.cs", label="textSubscriptionFactory.ReaderError += (sender, args) =>\r\n                {\r\n                    _resultHandler.RuntimeError(string.Format(''Error invoking {0} data reader. Line: {1} Error: {2}'', _config.Symbol, args.Line, args.Exception.Message), args.Exception.StackTrace);\r\n                }", span="506-509"];
m86_171 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="SubscriptionTransportMedium.LocalFile", span="475-475"];
m86_175 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="throw new ArgumentOutOfRangeException();", span="488-488"];
m86_179 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="_config.IsCustomData", span="499-499"];
m86_218 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="SubscriptionDataReader.cs", label="MarketDataType.TradeBar", span="466-466"];
m86_112 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="Current = instance", span="383-383"];
m86_212 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="SubscriptionDataReader.cs", label="chain.Contracts[baseData.Symbol] = contract", span="454-454"];
m86_260 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="SubscriptionDataReader.cs", label="contract.BidPrice = quote.Bid.Close", span="536-536"];
m86_267 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.AskPrice = tick.AskPrice", span="551-551"];
m86_270 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.BidPrice = tick.BidPrice", span="556-556"];
m86_271 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.BidSize = (long)tick.BidSize", span="557-557"];
m86_261 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="SubscriptionDataReader.cs", label="contract.BidSize = (long)quote.LastBidSize", span="537-537"];
m86_262 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", span="527-527"];
m86_264 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.LastPrice = tick.Price", span="545-545"];
m86_266 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.AskPrice != 0m", span="549-549"];
m86_263 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.Trade", span="543-543"];
m86_265 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.Quote", span="547-547"];
m86_274 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.OpenInterest = tick.Value", span="564-564"];
m86_268 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.AskSize = (long)tick.AskSize", span="552-552"];
m86_269 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.BidPrice != 0m", span="554-554"];
m86_272 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.OpenInterest", span="560-560"];
m86_273 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.Value != 0m", span="562-562"];
m86_275 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", span="541-541"];
m86_183 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="506-509"];
m86_105 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="var bar = tradeBar", span="368-368"];
m86_113 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return true;", span="385-385"];
m86_124 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="!_includeAuxilliaryData", span="403-403"];
m86_125 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="_auxiliaryData.Clear()", span="403-403"];
m86_127 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="return false;", span="404-404"];
m86_129 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="return true;", span="405-405"];
m86_131 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", span="397-397"];
m86_133 [cluster="System.Collections.Generic.Queue<T>.Peek()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.Queue<T>.Peek()", span="0-0"];
m86_135 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="!TryGetNextDate(out date) && !_isLiveMode", span="420-420"];
m86_126 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="_auxiliaryData.Count == 0", span="404-404"];
m86_128 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="instance == null", span="405-405"];
m86_130 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="return _auxiliaryData.Peek().EndTime < instance.EndTime;", span="406-406"];
m86_132 [cluster="System.Collections.Generic.Queue<T>.Clear()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.Queue<T>.Clear()", span="0-0"];
m86_134 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="DateTime date", span="419-419"];
m86_136 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.ResolveDataEnumerator(bool)", file="SubscriptionDataReader.cs", label="return null;", span="423-423"];
m86_246 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.AskPrice != 0m", span="507-507"];
m86_137 [cluster="System.Collections.Generic.IDictionary<TKey, TCollection>.Add<TKey, TElement, TCollection>(TKey, TElement)", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TCollection>.Add<TKey, TElement, TCollection>(TKey, TElement)", span="164-164"];
m86_94 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return false;", span="332-332"];
m86_104 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="tradeBar != null", span="366-366"];
m86_109 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="bar.Close = _config.GetNormalizedPrice(GetRawValue(bar.Close, _config.SumOfDividends, currentPriceScaleFactor))", span="372-372"];
m86_118 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", span="249-249"];
m86_184 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m86_185 [cluster="QuantConnect.Data.Market.OptionChain.OptionChain(QuantConnect.Symbol, System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.OptionChain.OptionChain(QuantConnect.Symbol, System.DateTime)", span="94-94"];
m86_121 [cluster="System.Collections.IEnumerator.MoveNext()", file="SubscriptionDataReader.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m86_123 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="273-273"];
m86_122 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", span="704-704"];
m86_194 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label=_delisted, span="532-532"];
m86_119 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.HasAuxDataBefore(QuantConnect.Data.BaseData)", span="397-397"];
m86_193 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="CheckForDelisting(date)", span="531-531"];
m86_195 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="return true;", span="534-534"];
m86_120 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
m86_281 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="_config.DataNormalizationMode", span="706-706"];
m86_285 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="price = price / priceScaleFactor", span="714-714"];
m86_287 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="price = (price - sumOfDividends) / priceScaleFactor", span="719-719"];
m86_282 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="DataNormalizationMode.Raw", span="708-708"];
m86_283 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="DataNormalizationMode.SplitAdjusted", span="711-711"];
m86_286 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="DataNormalizationMode.TotalReturn", span="717-717"];
m86_288 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="throw new ArgumentOutOfRangeException();", span="723-723"];
m86_284 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="DataNormalizationMode.Adjusted", span="712-712"];
m86_289 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="return price;", span="725-725"];
m86_290 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawValue(decimal, decimal, decimal)", span="704-704"];
m86_217 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="SubscriptionDataReader.cs", label="UpdateContract(contract, tick)", span="463-463"];
m86_103 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="var tradeBar = instance as TradeBar", span="365-365"];
m86_233 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.Reset()", file="SubscriptionDataReader.cs", label="throw new NotImplementedException(''Reset method not implemented. Assumes loop will only be used once.'');", span="612-612"];
m86_232 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="115-115"];
m86_234 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", span="527-527"];
m86_116 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_endOfStream = true", span="393-393"];
m86_115 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator != null", span="391-391"];
m86_197 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="_previous != null && _previous.EndTime > _tradeableDates.Current", span="543-543"];
m86_200 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label=_hasScaleFactors, span="553-553"];
m86_201 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="UpdateScaleFactors(date)", span="556-556"];
m86_202 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="var newSymbol = _mapFile.GetMappedSymbol(date)", span="560-560"];
m86_203 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="newSymbol != _mappedSymbol", span="561-561"];
m86_209 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="date = DateTime.MaxValue.Date", span="576-576"];
m86_210 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="return false;", span="577-577"];
m86_211 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", span="518-518"];
m86_213 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", span="84-84"];
m86_215 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.CheckForSplit(System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.CheckForSplit(System.DateTime)", span="618-618"];
m86_219 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m86_223 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="DataNormalizationMode.TotalReturn", span="592-592"];
m86_227 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="_config.PriceScaleFactor = _factorFile.GetPriceScaleFactor(date)", span="598-598"];
m86_207 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="_config.MappedSymbol = _mappedSymbol = newSymbol", span="568-568"];
m86_228 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="throw new ArgumentOutOfRangeException();", span="602-602"];
m86_198 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="CheckForDividend(date)", span="549-549"];
m86_199 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="CheckForSplit(date)", span="550-550"];
m86_220 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="_config.DataNormalizationMode", span="587-587"];
m86_224 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="DataNormalizationMode.SplitAdjusted", span="593-593"];
m86_206 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="_auxiliaryData.Enqueue(changed)", span="566-566"];
m86_216 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", span="585-585"];
m86_204 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="_mappedSymbol != ''''", span="563-563"];
m86_205 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="var changed = new SymbolChangedEvent(_config.Symbol, date, _mappedSymbol, newSymbol)", span="565-565"];
m86_208 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="return true;", span="572-572"];
m86_221 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="DataNormalizationMode.Raw", span="589-589"];
m86_225 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="_config.PriceScaleFactor = _factorFile.GetSplitFactor(date)", span="594-594"];
m86_222 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="return;", span="590-590"];
m86_226 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="DataNormalizationMode.Adjusted", span="597-597"];
m86_229 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", span="585-585"];
m86_259 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="SubscriptionDataReader.cs", label="quote.Bid != null && quote.Bid.Close != 0m", span="534-534"];
m86_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", span="127-127"];
m86_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_periodFinish = periodFinish", span="146-146"];
m86_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_periodStart = periodStart", span="145-145"];
m86_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_dataProvider = dataProvider", span="147-147"];
m86_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_config = config", span="140-140"];
m86_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_auxiliaryData = new Queue<BaseData>()", span="142-142"];
m86_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_dataCacheProvider = dataCacheProvider", span="148-148"];
m86_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_isLiveMode = isLiveMode", span="151-151"];
m86_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_includeAuxilliaryData = includeAuxilliaryData", span="152-152"];
m86_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="var objectActivator = ObjectActivator.GetActivator(config.Type)", span="157-157"];
m86_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="SubscriptionDataReader.cs", label="_resultHandler = resultHandler", span="159-159"];
m86_191 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="_tradeableDates.MoveNext()", span="527-527"];
m86_237 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.CheckForSplit(System.DateTime)", file="SubscriptionDataReader.cs", label="var close = GetRawClose()", span="622-622"];
m86_239 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.CheckForSplit(System.DateTime)", file="SubscriptionDataReader.cs", label="_auxiliaryData.Enqueue(split)", span="624-624"];
m86_240 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.CheckForSplit(System.DateTime)", file="SubscriptionDataReader.cs", label="_splitFactor = null", span="625-625"];
m86_241 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.CheckForSplit(System.DateTime)", file="SubscriptionDataReader.cs", label="decimal splitFactor", span="628-628"];
m86_242 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.CheckForSplit(System.DateTime)", file="SubscriptionDataReader.cs", label="_factorFile.HasSplitEventOnNextTradingDay(date, out splitFactor)", span="629-629"];
m86_111 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="return true;", span="377-377"];
m86_110 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_lastInstanceBeforeAuxilliaryData = instance", span="376-376"];
m86_243 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="tick.TickType == TickType.Trade", span="501-501"];
m86_244 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.LastPrice = tick.Price", span="503-503"];
m86_258 [cluster="QuantConnect.Data.Market.Dividend.Dividend(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.Dividend.Dividend(QuantConnect.Symbol, System.DateTime, decimal, decimal)", span="40-40"];
m86_247 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="SubscriptionDataReader.cs", label="contract.AskPrice = tick.AskPrice", span="509-509"];
m86_190 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.TryGetNextDate(out System.DateTime)", file="SubscriptionDataReader.cs", label="return false;", span="524-524"];
m86_245 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawClose()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawClose()", span="696-696"];
m86_278 [cluster="System.DateTime.AddDays(double)", file="SubscriptionDataReader.cs", label="System.Lazy<QuantConnect.Data.Slice>", span=""];
m86_100 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="Current = _auxiliaryData.Dequeue()", span="356-356"];
m86_291 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.Dispose()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.Dispose()", span="731-731"];
m86_292 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.Dispose()", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator != null", span="733-733"];
m86_293 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.Dispose()", file="SubscriptionDataReader.cs", label="_subscriptionFactoryEnumerator.Dispose()", span="735-735"];
m86_294 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.Dispose()", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.Dispose()", span="731-731"];
m86_107 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="bar.High = _config.GetNormalizedPrice(GetRawValue(bar.High, _config.SumOfDividends, currentPriceScaleFactor))", span="370-370"];
m86_235 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", span="293-293"];
m86_188 [cluster="QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="165-165"];
m86_97 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="!_config.IsInternalFeed", span="344-344"];
m86_101 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="_emittedAuxilliaryData = true", span="357-357"];
m86_108 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="bar.Low = _config.GetNormalizedPrice(GetRawValue(bar.Low, _config.SumOfDividends, currentPriceScaleFactor))", span="371-371"];
m86_279 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawClose()", file="SubscriptionDataReader.cs", label=option, span=""];
m86_280 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.GetRawClose()", file="SubscriptionDataReader.cs", label=contract, span=""];
m86_106 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="bar.Open = _config.GetNormalizedPrice(GetRawValue(bar.Open, _config.SumOfDividends, currentPriceScaleFactor))", span="369-369"];
m86_230 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m86_276 [cluster="QuantConnect.Securities.Option.OptionSymbol.GetLastDayOfTrading(QuantConnect.Symbol)", file="SubscriptionDataReader.cs", label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", span=""];
m86_187 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="135-135"];
m86_95 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="instance.EndTime.Date > _tradeableDates.Current", span="337-337"];
m86_99 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="HasAuxDataBefore(instance)", span="353-353"];
m86_96 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.MoveNext()", file="SubscriptionDataReader.cs", label="var currentPriceScaleFactor = _config.PriceScaleFactor", span="339-339"];
m86_102 [cluster="QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", span="34-34"];
m86_295 [file="SubscriptionDataReader.cs", label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", span=""];
m86_296 [file="SubscriptionDataReader.cs", label="QuantConnect.Data.SubscriptionDataSource", span=""];
m87_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", file="SubscriptionDataSource.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", span="109-109"];
m87_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", file="SubscriptionDataSource.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", span="109-109"];
m87_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="SubscriptionDataSource.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="124-124"];
m87_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="SubscriptionDataSource.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="124-124"];
m87_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="SubscriptionDataSource.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m87_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="SubscriptionDataSource.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m87_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="SubscriptionDataSource.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="114-114"];
m87_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="SubscriptionDataSource.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="114-114"];
m88_196 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="294-294"];
m88_197 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="int id = 0", span="296-296"];
m88_198 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="297-297"];
m88_202 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="var order = new LimitOrder(Symbols.USDJPY, -buyQuantity, limitPrice, DateTime.UtcNow) {Id = ++id}", span="309-309"];
m88_199 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="bool filled = false", span="299-299"];
m88_200 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filled = true;\r\n                }\r\n            }", span="300-306"];
m88_204 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="311-311"];
m88_209 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.UpdateOrder(order)", span="319-319"];
m88_201 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="decimal limitPrice = 10000m", span="308-308"];
m88_206 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="!filled && stopwatch.Elapsed.TotalSeconds < 10", span="314-314"];
m88_210 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="Assert.IsTrue(filled)", span="322-322"];
m88_203 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="310-310"];
m88_208 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="order.LimitPrice = order.LimitPrice/2", span="318-318"];
m88_205 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="var stopwatch = Stopwatch.StartNew()", span="313-313"];
m88_207 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="Thread.Sleep(1000)", span="317-317"];
m88_211 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="294-294"];
m88_76 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="127-127"];
m88_451 [cluster="Unk.Pass", file="SubscriptionSynchronizer.cs", label="Entry Unk.Pass", span=""];
m88_61 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="99-99"];
m88_72 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Symbol.ToString() + '' '' + x.Quantity", span="111-111"];
m88_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="nextFrontier = new DateTime(Math.Max(earlyBirdTicks, frontier.Ticks), DateTimeKind.Utc)", span="173-173"];
m88_440 [cluster="System.Console.WriteLine(string)", file="SubscriptionSynchronizer.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m88_70 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="111-111"];
m88_74 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="59-59"];
m88_292 [cluster="Unk.ContainsKey", file="SubscriptionSynchronizer.cs", label="Entry Unk.ContainsKey", span=""];
m88_79 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionSynchronizer.cs", label="handler != null", span="184-184"];
m88_75 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="SubscriptionSynchronizer.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m88_77 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="SubscriptionSynchronizer.cs", label="Assert.IsTrue(ib.IsConnected)", span="128-128"];
m88_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionSynchronizer.cs", label="var handler = SubscriptionFinished", span="183-183"];
m88_420 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="579-579"];
m88_421 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="581-581"];
m88_422 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Assert.IsTrue(ib.IsConnected)", span="582-582"];
m88_427 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="ib.IsConnected", span="591-591"];
m88_434 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="!ib.IsConnected && stopwatch.Elapsed < tenMinutes", span="604-604"];
m88_437 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Assert.IsTrue(ib.IsConnected)", span="610-610"];
m88_423 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="var tenMinutes = TimeSpan.FromMinutes(10)", span="584-584"];
m88_424 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(''------'')", span="586-586"];
m88_425 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(''Waiting for internet disconnection '')", span="587-587"];
m88_426 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(''------'')", span="588-588"];
m88_428 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Thread.Sleep(2500)", span="593-593"];
m88_430 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="var stopwatch = Stopwatch.StartNew()", span="597-597"];
m88_429 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Console.Write(''.'')", span="594-594"];
m88_431 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(''------'')", span="599-599"];
m88_432 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(''Trying to reconnect '')", span="600-600"];
m88_433 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(''------'')", span="601-601"];
m88_435 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Thread.Sleep(2500)", span="606-606"];
m88_436 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Console.Write(''.'')", span="607-607"];
m88_438 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="579-579"];
m88_219 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="326-326"];
m88_220 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="var orderedResetEvent = new ManualResetEvent(false)", span="328-328"];
m88_221 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="329-329"];
m88_223 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderedResetEvent.Set();\r\n                }\r\n                if (orderEvent.Status == OrderStatus.Canceled)\r\n                {\r\n                    canceledResetEvent.Set();\r\n                }\r\n            }", span="333-343"];
m88_227 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="orderedResetEvent.WaitOneAssertFail(2500, ''Limit order failed to be submitted.'')", span="349-349"];
m88_222 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="331-331"];
m88_230 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="canceledResetEvent.WaitOneAssertFail(2500, ''Canceled event did not fire.'')", span="355-355"];
m88_226 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="348-348"];
m88_229 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.CancelOrder(order)", span="353-353"];
m88_231 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="var openOrders = ib.GetOpenOrders()", span="357-357"];
m88_224 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="var order = new LimitOrder(Symbols.USDJPY, -buyQuantity, 100000, DateTime.UtcNow, null)", span="346-346"];
m88_225 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="347-347"];
m88_232 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="var cancelledOrder = openOrders.FirstOrDefault(x => x.BrokerId.Contains(order.BrokerId[0]))", span="358-358"];
m88_228 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="Thread.Sleep(500)", span="351-351"];
m88_233 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="Assert.IsNull(cancelledOrder)", span="359-359"];
m88_234 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="326-326"];
m88_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label=subscriptions, span="69-69"];
m88_313 [cluster="Unk.Any", file="SubscriptionSynchronizer.cs", label="Entry Unk.Any", span=""];
m88_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", color=green, community=0, file="SubscriptionSynchronizer.cs", label="changes += newChanges", prediction=129, span="169-169"];
m88_291 [cluster="Unk.WriteLine", file="SubscriptionSynchronizer.cs", label="Entry Unk.WriteLine", span=""];
m88_66 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="107-107"];
m88_93 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m88_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="327-327"];
m88_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="earlyBirdTicks = Math.Min(earlyBirdTicks, Math.Min(subscription.Current.EndTime.Ticks - currentOffsetTicks, offsetProvider.GetNextDiscontinuity()))", span="158-158"];
m88_68 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="111-111"];
m88_64 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="107-107"];
m88_237 [cluster="Unk.IsNull", file="SubscriptionSynchronizer.cs", label="Entry Unk.IsNull", span=""];
m88_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", color=green, community=0, file="SubscriptionSynchronizer.cs", label="var baseDataCollection = kvp.Value", prediction=130, span="165-165"];
m88_56 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="filledResetEvent.Set()", span="75-75"];
m88_342 [cluster="System.Collections.Generic.List<T>.List()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m88_455 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="621-621"];
m88_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m88_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", span="56-56"];
m88_57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m88_71 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="57-57"];
m88_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="return TimeSlice.Create(frontier, sliceTimeZone, cashBook, data, changes);", span="175-175"];
m88_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="181-181"];
m88_62 [cluster="QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)", span="84-84"];
m88_63 [cluster="QuantConnect.Data.BaseData.Clone(bool)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="249-249"];
m88_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.Add(QuantConnect.Data.BaseData)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.Add(QuantConnect.Data.BaseData)", span="91-91"];
m88_69 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.OptionChainUniverseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.BaseData)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.OptionChainUniverseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.BaseData)", span="52-52"];
m88_73 [cluster="System.Math.Min(long, long)", file="SubscriptionSynchronizer.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m88_114 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="manualResetEvent.Set()", span="162-162"];
m88_112 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderEvent.Status == OrderStatus.Filled", span="159-159"];
m88_111 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="157-164"];
m88_113 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderFilled = true", span="161-161"];
m88_115 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="157-164"];
m88_131 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="manualResetEvent.Set()", span="188-188"];
m88_129 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderEvent.Status == OrderStatus.Filled", span="185-185"];
m88_128 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="183-190"];
m88_130 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderFilled = true", span="187-187"];
m88_132 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="183-190"];
m88_160 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="manualResetEvent.Set()", span="217-217"];
m88_158 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderEvent.Status == OrderStatus.Filled", span="214-214"];
m88_161 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="price = orderEvent.FillPrice", span="219-219"];
m88_157 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="212-221"];
m88_159 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderFilled = true", span="216-216"];
m88_163 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="212-221"];
m88_162 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="delta = 0.02m", span="220-220"];
m88_194 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="manualResetEvent.Set()", span="262-262"];
m88_192 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="fillPrice = args.FillPrice", span="260-260"];
m88_190 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="257-263"];
m88_191 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderFilled = true", span="259-259"];
m88_195 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="257-263"];
m88_193 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="delta = 0.02m", span="261-261"];
m88_216 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="args.Status == OrderStatus.Filled", span="302-302"];
m88_215 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="300-306"];
m88_217 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="filled = true", span="304-304"];
m88_218 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="300-306"];
m88_240 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderedResetEvent.Set()", span="337-337"];
m88_242 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="canceledResetEvent.Set()", span="341-341"];
m88_239 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderEvent.Status == OrderStatus.Submitted", span="335-335"];
m88_241 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderEvent.Status == OrderStatus.Canceled", span="339-339"];
m88_245 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.BrokerId.Contains(order.BrokerId[0])", span="358-358"];
m88_244 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="358-358"];
m88_238 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="333-343"];
m88_243 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="333-343"];
m88_246 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="358-358"];
m88_265 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="order.Status = fill.Status", span="381-381"];
m88_264 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderFilledResetEvent.Set()", span="377-377"];
m88_262 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="fill.Status == OrderStatus.Filled", span="374-374"];
m88_263 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderFilledEventCount++", span="376-376"];
m88_261 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="372-382"];
m88_266 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="372-382"];
m88_293 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="401-401"];
m88_298 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderResetEvent.Set()", span="416-416"];
m88_297 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="fill.Status == OrderStatus.Filled", span="416-416"];
m88_300 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="431-431"];
m88_294 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Symbol", span="401-401"];
m88_295 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="401-401"];
m88_296 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="414-417"];
m88_299 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="414-417"];
m88_301 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Symbol", span="431-431"];
m88_302 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="431-431"];
m88_316 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="450-450"];
m88_319 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="456-456"];
m88_317 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Symbol == ''USD''", span="450-450"];
m88_318 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="450-450"];
m88_320 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Symbol == ''USD''", span="456-456"];
m88_321 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="456-456"];
m88_345 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderEventFired.Set()", span="471-471"];
m88_344 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="args.Status == OrderStatus.Filled", span="469-469"];
m88_348 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="cashBalanceUpdates.Add(args.CashBalance)", span="479-479"];
m88_349 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="accountChangedFired.Set()", span="480-480"];
m88_343 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="467-473"];
m88_346 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="467-473"];
m88_347 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="477-481"];
m88_350 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="477-481"];
m88_363 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="505-505"];
m88_367 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="manualResetEvent.Set()", span="509-509"];
m88_369 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="517-517"];
m88_364 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Symbol == ''USD''", span="505-505"];
m88_365 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="505-505"];
m88_366 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="509-509"];
m88_368 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="509-509"];
m88_370 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Symbol == ''USD''", span="517-517"];
m88_371 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="517-517"];
m88_392 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderEventFired.Set()", span="532-532"];
m88_391 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="args.Status == OrderStatus.Filled", span="530-530"];
m88_395 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="order.BrokerId.Any(id => executions.Any(e => e.Execution.OrderId == int.Parse(id)))", span="548-548"];
m88_398 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="executions.Any(e => e.Execution.OrderId == int.Parse(id))", span="548-548"];
m88_394 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="548-548"];
m88_390 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="528-534"];
m88_393 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="528-534"];
m88_396 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="548-548"];
m88_397 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="548-548"];
m88_401 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="e.Execution.OrderId == int.Parse(id)", span="548-548"];
m88_399 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="548-548"];
m88_400 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="548-548"];
m88_402 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="548-548"];
m88_418 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="orderEventFired.Set()", span="561-561"];
m88_417 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="args.Status == OrderStatus.Submitted", span="559-559"];
m88_416 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="557-563"];
m88_419 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="557-563"];
m88_453 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="order.BrokerId.Any(x => x == id)", span="621-621"];
m88_452 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="621-621"];
m88_456 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x == id", span="621-621"];
m88_454 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="621-621"];
m88_457 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="621-621"];
m88_351 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="501-501"];
m88_352 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="503-503"];
m88_353 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="decimal balance = ib.GetCashBalance().Single(x => x.Symbol == ''USD'').Amount", span="505-505"];
m88_355 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="ib.AccountChanged += (sender, orderEvent) => manualResetEvent.Set()", span="509-509"];
m88_358 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="513-513"];
m88_360 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="decimal balanceAfterTrade = ib.GetCashBalance().Single(x => x.Symbol == ''USD'').Amount", span="517-517"];
m88_354 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="508-508"];
m88_361 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="Assert.AreNotEqual(balance, balanceAfterTrade)", span="519-519"];
m88_359 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.WaitOneAssertFail(1500, ''Didn't receive account changed event'')", span="515-515"];
m88_356 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="511-511"];
m88_357 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="512-512"];
m88_362 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="501-501"];
m88_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="205-205"];
m88_388 [cluster="System.Diagnostics.Stopwatch.Stop()", file="SubscriptionSynchronizer.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m88_97 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="151-151"];
m88_98 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="bool orderFilled = false", span="153-153"];
m88_99 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="154-154"];
m88_100 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="155-155"];
m88_105 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.WaitOne(2500)", span="170-170"];
m88_104 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="168-168"];
m88_106 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="171-171"];
m88_103 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="167-167"];
m88_107 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="172-172"];
m88_108 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="151-151"];
m88_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="collection = new BaseDataCollection(frontier, subscription.Configuration.Symbol,\r\n                                        packetData)", span="146-147"];
m88_314 [cluster="System.Console.WriteLine(object)", file="SubscriptionSynchronizer.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m88_403 [cluster="int.Parse(string)", file="SubscriptionSynchronizer.cs", label="Entry int.Parse(string)", span="0-0"];
m88_116 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="176-176"];
m88_117 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="bool orderFilled = false", span="178-178"];
m88_118 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="179-179"];
m88_119 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="181-181"];
m88_120 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="183-190"];
m88_124 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.WaitOne(2500)", span="197-197"];
m88_123 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="195-195"];
m88_125 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="199-199"];
m88_121 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="var order = new MarketOrder(Symbols.USDJPY, -buyQuantity, DateTime.UtcNow)", span="193-193"];
m88_122 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="194-194"];
m88_126 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="200-200"];
m88_127 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="176-176"];
m88_441 [cluster="System.Console.Write(string)", file="SubscriptionSynchronizer.cs", label="Entry System.Console.Write(string)", span="0-0"];
m88_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="newChanges = SecurityChanges.None", span="68-68"];
m88_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var configuration = subscription.Configuration", span="89-89"];
m88_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var offsetProvider = subscription.OffsetProvider", span="90-90"];
m88_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var currentOffsetTicks = offsetProvider.GetOffsetTicks(frontier)", span="91-91"];
m88_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="subscription.Current.EndTime.Ticks - currentOffsetTicks <= frontier.Ticks", span="92-92"];
m88_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var clone = subscription.Current.Clone(subscription.Current.IsFillForward)", span="96-96"];
m88_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="clone.Time = clone.Time.ExchangeRoundDownInTimeZone(configuration.Increment, subscription.Security.Exchange.Hours, configuration.DataTimeZone, configuration.ExtendedMarketHours)", span="97-97"];
m88_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", color=green, community=0, file="SubscriptionSynchronizer.cs", label="packet.Add(clone)", prediction=131, span="99-99"];
m88_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="!subscription.MoveNext()", span="101-101"];
m88_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="OnSubscriptionFinished(subscription)", span="103-103"];
m88_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="packet.Count > 0", span="108-108"];
m88_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="!subscription.IsUniverseSelectionSubscription", span="111-111"];
m88_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var packetData = packetBaseDataCollection == null\r\n                                ? packet.Data\r\n                                : packetBaseDataCollection.Data", span="120-122"];
m88_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="BaseDataCollection collection", span="124-124"];
m88_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="universeData.TryGetValue(subscription.Universe, out collection)", span="125-125"];
m88_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="collection.Data.AddRange(packetData)", span="127-127"];
m88_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="packetBaseDataCollection is OptionChainUniverseDataCollection", span="131-131"];
m88_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var current = subscription.Current as OptionChainUniverseDataCollection", span="133-133"];
m88_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var underlying = current != null ? current.Underlying : null", span="134-134"];
m88_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="collection = new OptionChainUniverseDataCollection(frontier,\r\n                                        subscription.Configuration.Symbol, packetData, underlying)", span="135-136"];
m88_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="packetBaseDataCollection is FuturesChainUniverseDataCollection", span="138-138"];
m88_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var current = subscription.Current as FuturesChainUniverseDataCollection", span="140-140"];
m88_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", color=green, community=0, file="SubscriptionSynchronizer.cs", label="OnSubscriptionFinished(subscription)", prediction=132, span="73-73"];
m88_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="41-41"];
m88_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", color=green, community=0, file="SubscriptionSynchronizer.cs", label="collection = new FuturesChainUniverseDataCollection(frontier,\r\n                                        subscription.Configuration.Symbol, packetData)", prediction=133, span="141-142"];
m88_260 [cluster="System.DateTime.DateTime()", file="SubscriptionSynchronizer.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m88_386 [cluster="System.DateTime.AddDays(double)", file="SubscriptionSynchronizer.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m88_290 [cluster="Unk.ToDictionary", file="SubscriptionSynchronizer.cs", label="Entry Unk.ToDictionary", span=""];
m88_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", color=green, community=0, file="SubscriptionSynchronizer.cs", label="newChanges += _universeSelection.ApplyUniverseSelection(universe, frontier, baseDataCollection)", prediction=134, span="166-166"];
m88_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.MoveNext()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Subscription.MoveNext()", span="130-130"];
m88_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var data = new List<DataFeedPacket>()", span="61-61"];
m88_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", color=green, community=0, file="SubscriptionSynchronizer.cs", label="var universe = kvp.Key", prediction=135, span="164-164"];
m88_67 [cluster="QuantConnect.Symbol.ToString()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Symbol.ToString()", span="208-208"];
m88_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", color=green, community=0, file="SubscriptionSynchronizer.cs", label="newChanges != SecurityChanges.None", prediction=134, span="171-171"];
m88_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="252-252"];
m88_47 [cluster="System.Threading.EventWaitHandle.Reset()", file="SubscriptionSynchronizer.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m88_5 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", color=green, community=0, file="SubscriptionSynchronizer.cs", label="_interactiveBrokersBrokerage.Connect()", prediction=131, span="57-57"];
m88_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", color=green, community=0, file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", prediction=138, span="41-41"];
m88_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", span="58-58"];
m88_13 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="156-156"];
m88_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="386-386"];
m88_17 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", span="32-32"];
m88_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="226-226"];
m88_15 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m88_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="99-99"];
m88_8 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m88_10 [cluster="QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", span="33-33"];
m88_95 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m88_389 [cluster="System.Console.WriteLine(string, object, object)", file="SubscriptionSynchronizer.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m88_110 [cluster="Unk.AreEqual", file="SubscriptionSynchronizer.cs", label="Entry Unk.AreEqual", span=""];
m88_236 [cluster="Unk.FirstOrDefault", file="SubscriptionSynchronizer.cs", label="Entry Unk.FirstOrDefault", span=""];
m88_247 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m88_450 [cluster="Unk.Fail", file="SubscriptionSynchronizer.cs", label="Entry Unk.Fail", span=""];
m88_212 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="SubscriptionSynchronizer.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m88_92 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m88_82 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="136-136"];
m88_189 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, int, decimal, System.DateTime, string)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, int, decimal, System.DateTime, string)", span="53-53"];
m88_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionSynchronizer.cs", label="handler(this, subscription)", span="184-184"];
m88_81 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="181-181"];
m88_84 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="138-138"];
m88_89 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="145-145"];
m88_83 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", span=""];
m88_85 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="var brokerageID = order.BrokerId.Single()", span="140-140"];
m88_90 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="Assert.AreNotEqual(brokerageID, order.BrokerId.Single())", span="147-147"];
m88_87 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="143-143"];
m88_88 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="144-144"];
m88_91 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="132-132"];
m88_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="184-184"];
m88_156 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, int, decimal, System.DateTime, string)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, int, decimal, System.DateTime, string)", span="53-53"];
m88_315 [cluster="Unk.Single", file="SubscriptionSynchronizer.cs", label="Entry Unk.Single", span=""];
m88_164 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="249-249"];
m88_165 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="bool orderFilled = false", span="251-251"];
m88_166 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="252-252"];
m88_167 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="253-253"];
m88_170 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                fillPrice = args.FillPrice;\r\n                delta = 0.02m;\r\n                manualResetEvent.Set();\r\n            }", span="257-263"];
m88_175 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.WaitOne(2000)", span="271-271"];
m88_176 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.Reset()", span="272-272"];
m88_185 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.WaitOne(1000)", span="287-287"];
m88_168 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="decimal fillPrice = 100m", span="255-255"];
m88_174 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="269-269"];
m88_181 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="281-281"];
m88_184 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="285-285"];
m88_186 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="289-289"];
m88_169 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="decimal delta = 85.0m", span="256-256"];
m88_171 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="int id = 0", span="266-266"];
m88_172 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="Order order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) { Id = ++id }", span="267-267"];
m88_173 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="268-268"];
m88_179 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="order = new StopMarketOrder(Symbols.USDJPY, buyQuantity, fillPrice - delta, DateTime.UtcNow) { Id = ++id }", span="279-279"];
m88_177 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="Assert.IsTrue(orderFilled)", span="273-273"];
m88_178 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="orderFilled = false", span="275-275"];
m88_180 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="280-280"];
m88_182 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="order = new StopMarketOrder(Symbols.USDJPY, -buyQuantity, fillPrice + delta, DateTime.UtcNow) { Id = ++id }", span="283-283"];
m88_183 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="284-284"];
m88_187 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="Assert.AreEqual(OrderType.StopMarket, orderFromIB.Type)", span="290-290"];
m88_188 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="249-249"];
m88_133 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="204-204"];
m88_134 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="bool orderFilled = false", span="206-206"];
m88_135 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="207-207"];
m88_136 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="208-208"];
m88_139 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n                price = orderEvent.FillPrice;\r\n                delta = 0.02m;\r\n            }", span="212-221"];
m88_144 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.WaitOne(2000)", span="229-229"];
m88_145 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.Reset()", span="230-230"];
m88_152 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="manualResetEvent.WaitOne(1000)", span="242-242"];
m88_137 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="decimal price = 100m", span="210-210"];
m88_143 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="227-227"];
m88_148 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="236-236"];
m88_151 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="240-240"];
m88_153 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="244-244"];
m88_138 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="decimal delta = 85.0m", span="211-211"];
m88_140 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="int id = 0", span="224-224"];
m88_141 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="Order order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) { Id = ++id }", span="225-225"];
m88_142 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="226-226"];
m88_146 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="order = new LimitOrder(Symbols.USDJPY, buyQuantity, price - delta, DateTime.UtcNow, null) { Id = ++id }", span="234-234"];
m88_147 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="235-235"];
m88_149 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="order = new LimitOrder(Symbols.USDJPY, -buyQuantity, price + delta, DateTime.UtcNow, null) { Id = ++id }", span="238-238"];
m88_150 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="239-239"];
m88_154 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="Assert.AreEqual(OrderType.Limit, orderFromIB.Type)", span="245-245"];
m88_155 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="204-204"];
m88_387 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="336-336"];
m88_322 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="462-462"];
m88_323 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="464-464"];
m88_324 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="var orderEventFired = new ManualResetEvent(false)", span="466-466"];
m88_325 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="467-473"];
m88_328 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="ib.AccountChanged += (sender, args) =>\r\n            {\r\n                cashBalanceUpdates.Add(args.CashBalance);\r\n                accountChangedFired.Set();\r\n            }", span="477-481"];
m88_334 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="488-488"];
m88_335 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="orderEventFired.WaitOneAssertFail(1500, ''Didnt receive order event #'' + i)", span="490-490"];
m88_336 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="orderEventFired.Reset()", span="491-491"];
m88_326 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="var cashBalanceUpdates = new List<decimal>()", span="475-475"];
m88_327 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="var accountChangedFired = new ManualResetEvent(false)", span="476-476"];
m88_340 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="Assert.AreEqual(orderCount, cashBalanceUpdates.Count)", span="497-497"];
m88_337 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="accountChangedFired.WaitOneAssertFail(1500, ''Didnt receive account event #'' + i)", span="493-493"];
m88_338 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="accountChangedFired.Reset()", span="494-494"];
m88_329 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="int orderCount = 3", span="483-483"];
m88_330 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="int i = 0", span="484-484"];
m88_331 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="i < orderCount", span="484-484"];
m88_332 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity*(i + 1), new DateTime()) {Id = i + 1}", span="486-486"];
m88_339 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="i++", span="484-484"];
m88_333 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="487-487"];
m88_341 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="462-462"];
m88_248 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="363-363"];
m88_249 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="365-365"];
m88_250 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, new DateTime()) {Id = 1}", span="367-367"];
m88_254 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilledEventCount++;\r\n                    orderFilledResetEvent.Set();\r\n                }\r\n\r\n                // mimic what the transaction handler would do\r\n                order.Status = fill.Status;\r\n            }", span="372-382"];
m88_255 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="384-384"];
m88_251 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="368-368"];
m88_252 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="int orderFilledEventCount = 0", span="370-370"];
m88_253 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="var orderFilledResetEvent = new ManualResetEvent(false)", span="371-371"];
m88_256 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="orderFilledResetEvent.WaitOneAssertFail(2500, ''Didnt fire order filled event'')", span="386-386"];
m88_258 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="Assert.AreEqual(1, orderFilledEventCount)", span="391-391"];
m88_257 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="Thread.Sleep(2000)", span="389-389"];
m88_259 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="363-363"];
m88_439 [cluster="System.TimeSpan.FromMinutes(double)", file="SubscriptionSynchronizer.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m88_372 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="523-523"];
m88_373 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="525-525"];
m88_374 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="var orderEventFired = new ManualResetEvent(false)", span="527-527"];
m88_375 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="528-534"];
m88_378 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="538-538"];
m88_381 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="var executions = ib.GetExecutions(null, null, null, DateTime.UtcNow.AddDays(-1), null)", span="543-543"];
m88_379 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="orderEventFired.WaitOne(1500)", span="539-539"];
m88_376 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="var order = new MarketOrder(Symbols.USDJPY, -buyQuantity, new DateTime())", span="536-536"];
m88_377 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="537-537"];
m88_384 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="Assert.IsTrue(executions.Any(x => order.BrokerId.Any(id => executions.Any(e => e.Execution.OrderId == int.Parse(id)))))", span="548-548"];
m88_380 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="var stopwatch = Stopwatch.StartNew()", span="541-541"];
m88_382 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="stopwatch.Stop()", span="545-545"];
m88_383 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(''Total executions fetched: {0}, elapsed time: {1} ms'', executions.Count, stopwatch.ElapsedMilliseconds)", span="546-546"];
m88_385 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="523-523"];
m88_267 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="395-395"];
m88_268 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="397-397"];
m88_269 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Thread.Sleep(500)", span="399-399"];
m88_270 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="var previousHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="401-401"];
m88_276 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled) orderResetEvent.Set();\r\n            }", span="414-417"];
m88_280 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="423-423"];
m88_283 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="var newHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="431-431"];
m88_271 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label=previousHoldings, span="403-403"];
m88_273 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Log.Trace(''Quantity: '' + previousHoldings[Symbols.USDJPY].Quantity)", span="408-408"];
m88_274 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="bool hasSymbol = previousHoldings.ContainsKey(Symbols.USDJPY)", span="410-410"];
m88_286 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Assert.AreEqual(previousHoldings[Symbols.USDJPY].Quantity, newHoldings[Symbols.USDJPY].Quantity - quantity)", span="436-436"];
m88_272 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(holding.Value)", span="405-405"];
m88_275 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="var orderResetEvent = new ManualResetEvent(false)", span="413-413"];
m88_285 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label=hasSymbol, span="434-434"];
m88_281 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="orderResetEvent.WaitOneAssertFail(3000, ''Didn't receive order event'')", span="426-426"];
m88_277 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="int quantity = -buyQuantity", span="420-420"];
m88_278 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="var order = new MarketOrder(Symbols.USDJPY, quantity, DateTime.UtcNow)", span="421-421"];
m88_288 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Assert.AreEqual(newHoldings[Symbols.USDJPY].Quantity, quantity)", span="441-441"];
m88_279 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="422-422"];
m88_282 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Thread.Sleep(5000)", span="429-429"];
m88_284 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Log.Trace(''New Quantity: '' + newHoldings[Symbols.USDJPY].Quantity)", span="432-432"];
m88_287 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Assert.IsTrue(newHoldings.ContainsKey(Symbols.USDJPY))", span="440-440"];
m88_289 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="395-395"];
m88_303 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="446-446"];
m88_304 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="448-448"];
m88_305 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label="var cashBalance = ib.GetCashBalance()", span="449-449"];
m88_306 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label="Assert.IsTrue(cashBalance.Any(x => x.Symbol == ''USD''))", span="450-450"];
m88_307 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label=cashBalance, span="451-451"];
m88_310 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label="Assert.AreNotEqual(0m, cashBalance.Single(x => x.Symbol == ''USD''))", span="456-456"];
m88_308 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label="Console.WriteLine(cash)", span="453-453"];
m88_309 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label="cash.Symbol == ''USD''", span="454-454"];
m88_311 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="446-446"];
m88_404 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="552-552"];
m88_405 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="var ib = _interactiveBrokersBrokerage", span="554-554"];
m88_406 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="var orderEventFired = new ManualResetEvent(false)", span="556-556"];
m88_407 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="557-563"];
m88_410 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="ib.PlaceOrder(order)", span="567-567"];
m88_413 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="var openOrders = ib.GetOpenOrders()", span="573-573"];
m88_411 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="orderEventFired.WaitOne(1500)", span="569-569"];
m88_408 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="var order = new LimitOrder(Symbols.USDJPY, buyQuantity, 0.01m, DateTime.UtcNow)", span="565-565"];
m88_409 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="_orders.Add(order)", span="566-566"];
m88_412 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="Thread.Sleep(250)", span="571-571"];
m88_414 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="Assert.AreNotEqual(0, openOrders.Count)", span="575-575"];
m88_415 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="552-552"];
m88_213 [cluster="System.Threading.Thread.Sleep(int)", file="SubscriptionSynchronizer.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m88_235 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="SubscriptionSynchronizer.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m88_96 [cluster="Unk.AreNotEqual", file="SubscriptionSynchronizer.cs", label="Entry Unk.AreNotEqual", span=""];
m88_109 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="613-613"];
m88_442 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="!orderFilled", span="616-616"];
m88_443 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="ib.GetOpenOrders()", span="619-619"];
m88_444 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="openOrder.BrokerId.Any(id => order.BrokerId.Any(x => x == id))", span="621-621"];
m88_447 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="Assert.Pass(''The order was successfully filled!'')", span="629-629"];
m88_446 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="Assert.Fail(''The order was not filled and was unable to be located via GetOpenOrders()'')", span="626-626"];
m88_445 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="return openOrder;", span="623-623"];
m88_448 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="return null;", span="630-630"];
m88_449 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="613-613"];
m88_458 [file="SubscriptionSynchronizer.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", span=""];
m88_459 [file="SubscriptionSynchronizer.cs", label=filledResetEvent, span=""];
m88_460 [file="SubscriptionSynchronizer.cs", label=canceledResetEvent, span=""];
m88_461 [file="SubscriptionSynchronizer.cs", label=manualResetEvent, span=""];
m88_462 [file="SubscriptionSynchronizer.cs", label=manualResetEvent, span=""];
m88_463 [file="SubscriptionSynchronizer.cs", label=manualResetEvent, span=""];
m88_464 [file="SubscriptionSynchronizer.cs", label=manualResetEvent, span=""];
m88_465 [file="SubscriptionSynchronizer.cs", label=orderedResetEvent, span=""];
m88_466 [file="SubscriptionSynchronizer.cs", label=canceledResetEvent, span=""];
m88_467 [file="SubscriptionSynchronizer.cs", label=order, span=""];
m88_468 [file="SubscriptionSynchronizer.cs", label=orderFilledEventCount, span=""];
m88_469 [file="SubscriptionSynchronizer.cs", label=orderFilledResetEvent, span=""];
m88_470 [file="SubscriptionSynchronizer.cs", label=order, span=""];
m88_471 [file="SubscriptionSynchronizer.cs", label=orderResetEvent, span=""];
m88_472 [file="SubscriptionSynchronizer.cs", label=orderEventFired, span=""];
m88_473 [file="SubscriptionSynchronizer.cs", label=cashBalanceUpdates, span=""];
m88_474 [file="SubscriptionSynchronizer.cs", label=accountChangedFired, span=""];
m88_475 [file="SubscriptionSynchronizer.cs", label=manualResetEvent, span=""];
m88_476 [file="SubscriptionSynchronizer.cs", label=orderEventFired, span=""];
m88_477 [file="SubscriptionSynchronizer.cs", label=order, span=""];
m88_478 [file="SubscriptionSynchronizer.cs", label=executions, span=""];
m88_479 [file="SubscriptionSynchronizer.cs", label=string, span=""];
m88_480 [file="SubscriptionSynchronizer.cs", label=orderEventFired, span=""];
m88_481 [file="SubscriptionSynchronizer.cs", label="QuantConnect.Orders.Order", span=""];
m88_482 [file="SubscriptionSynchronizer.cs", label=string, span=""];
m90_5 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="Symbols.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m90_10 [cluster="QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", file="Symbols.cs", label="Entry QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", span="90-90"];
m90_11 [cluster="QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", file="Symbols.cs", label="return Symbol.Create(symbol, SecurityType.Equity, Market.USA);", span="92-92"];
m90_12 [cluster="QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", file="Symbols.cs", label="Exit QuantConnect.Tests.Symbols.CreateEquitySymbol(string)", span="90-90"];
m90_3 [cluster="System.Enum.ToString()", file="Symbols.cs", label="Entry System.Enum.ToString()", span="0-0"];
m90_13 [cluster="QuantConnect.Tests.Symbols.CreateFutureSymbol(string, System.DateTime)", file="Symbols.cs", label="Entry QuantConnect.Tests.Symbols.CreateFutureSymbol(string, System.DateTime)", span="94-94"];
m90_14 [cluster="QuantConnect.Tests.Symbols.CreateFutureSymbol(string, System.DateTime)", file="Symbols.cs", label="return Symbol.CreateFuture(symbol, Market.USA, expiry);", span="96-96"];
m90_15 [cluster="QuantConnect.Tests.Symbols.CreateFutureSymbol(string, System.DateTime)", file="Symbols.cs", label="Exit QuantConnect.Tests.Symbols.CreateFutureSymbol(string, System.DateTime)", span="94-94"];
m90_16 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Symbols.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="147-147"];
m90_4 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="Symbols.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m90_20 [cluster="QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", file="Symbols.cs", label="Entry QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", span="104-104"];
m90_21 [cluster="QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", file="Symbols.cs", label="return Symbol.CreateOption(symbol, Market.USA, OptionStyle.American, right, strike, expiry);", span="106-106"];
m90_22 [cluster="QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", file="Symbols.cs", label="Exit QuantConnect.Tests.Symbols.CreateOptionSymbol(string, QuantConnect.OptionRight, decimal, System.DateTime)", span="104-104"];
m90_0 [cluster="QuantConnect.Tests.Symbols.Lookup(QuantConnect.Tests.Symbols.SymbolsKey)", file="Symbols.cs", label="Entry QuantConnect.Tests.Symbols.Lookup(QuantConnect.Tests.Symbols.SymbolsKey)", span="80-80"];
m90_1 [cluster="QuantConnect.Tests.Symbols.Lookup(QuantConnect.Tests.Symbols.SymbolsKey)", file="Symbols.cs", label="return (Symbol)typeof(Symbols).GetField(key.ToString(), BindingFlags.Public | BindingFlags.Static).GetValue(null);", span="82-82"];
m90_2 [cluster="QuantConnect.Tests.Symbols.Lookup(QuantConnect.Tests.Symbols.SymbolsKey)", file="Symbols.cs", label="Exit QuantConnect.Tests.Symbols.Lookup(QuantConnect.Tests.Symbols.SymbolsKey)", span="80-80"];
m90_17 [cluster="QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", file="Symbols.cs", label="Entry QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", span="99-99"];
m90_18 [cluster="QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", file="Symbols.cs", label="return Symbol.Create(symbol, SecurityType.Cfd, market);", span="101-101"];
m90_19 [cluster="QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", file="Symbols.cs", label="Exit QuantConnect.Tests.Symbols.CreateCfdSymbol(string, string)", span="99-99"];
m90_6 [cluster="QuantConnect.Tests.Symbols.CreateForexSymbol(string)", file="Symbols.cs", label="Entry QuantConnect.Tests.Symbols.CreateForexSymbol(string)", span="85-85"];
m90_7 [cluster="QuantConnect.Tests.Symbols.CreateForexSymbol(string)", file="Symbols.cs", label="return Symbol.Create(symbol, SecurityType.Forex, Market.FXCM);", span="87-87"];
m90_8 [cluster="QuantConnect.Tests.Symbols.CreateForexSymbol(string)", file="Symbols.cs", label="Exit QuantConnect.Tests.Symbols.CreateForexSymbol(string)", span="85-85"];
m90_23 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", file="Symbols.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", span="99-99"];
m90_9 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Symbols.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m90_24 [cluster="QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", file="Symbols.cs", label="Entry QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", span="109-109"];
m90_25 [cluster="QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", file="Symbols.cs", label="return Symbol.Create(symbol, SecurityType.Crypto, Market.GDAX);", span="111-111"];
m90_26 [cluster="QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", file="Symbols.cs", label="Exit QuantConnect.Tests.Symbols.CreateCryptoSymbol(string)", span="109-109"];
m91_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", span="117-117"];
m91_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="IStreamReader reader", span="119-119"];
m91_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="subscriptionDataSource.TransportMedium", span="120-120"];
m91_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="reader = HandleLocalFileSource(subscriptionDataSource)", span="123-123"];
m91_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="reader = HandleRemoteSourceFile(subscriptionDataSource)", span="127-127"];
m91_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="throw new InvalidEnumArgumentException(''Unexpected SubscriptionTransportMedium specified: '' + subscriptionDataSource.TransportMedium);", span="135-135"];
m91_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.LocalFile", span="122-122"];
m91_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.RemoteFile", span="126-126"];
m91_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.Rest", span="130-130"];
m91_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="return reader;", span="137-137"];
m91_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.CreateStreamReader(QuantConnect.Data.SubscriptionDataSource)", span="117-117"];
m91_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45"];
m91_42 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string)", file="TextSubscriptionDataSourceReader.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string)", span="0-0"];
m91_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnCreateStreamReaderError(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnCreateStreamReaderError(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", span="167-167"];
m91_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnCreateStreamReaderError(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="var handler = CreateStreamReaderError", span="169-169"];
m91_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnCreateStreamReaderError(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="handler(this, new CreateStreamReaderErrorEventArgs(date, source))", span="170-170"];
m91_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnCreateStreamReaderError(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="handler != null", span="170-170"];
m91_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnCreateStreamReaderError(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnCreateStreamReaderError(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", span="167-167"];
m91_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="37-37"];
m91_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="41-41"];
m91_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleLocalFileSource(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleLocalFileSource(QuantConnect.Data.SubscriptionDataSource)", span="176-176"];
m91_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleLocalFileSource(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="return new LocalFileSubscriptionStreamReader(_dataCacheProvider, source.Source);", span="179-179"];
m91_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleLocalFileSource(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleLocalFileSource(QuantConnect.Data.SubscriptionDataSource)", span="176-176"];
m91_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", span="185-185"];
m91_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="SubscriptionDataSourceReader.CheckRemoteFileCache()", span="187-187"];
m91_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="return new RemoteFileSubscriptionStreamReader(_dataCacheProvider, source.Source, Globals.Cache, source.Headers);", span="192-192"];
m91_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="OnInvalidSource(source, err)", span="196-196"];
m91_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label=Exception, span="194-194"];
m91_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="return null;", span="197-197"];
m91_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.HandleRemoteSourceFile(QuantConnect.Data.SubscriptionDataSource)", span="185-185"];
m91_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.CheckRemoteFileCache()", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.CheckRemoteFileCache()", span="58-58"];
m91_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", span="46-46"];
m91_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", span="156-156"];
m91_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="var handler = ReaderError", span="158-158"];
m91_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="handler(this, new ReaderErrorEventArgs(line, exception))", span="159-159"];
m91_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="handler != null", span="159-159"];
m91_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", span="156-156"];
m91_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="64-64"];
m91_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TextSubscriptionDataSourceReader.cs", label="_dataCacheProvider = dataCacheProvider", span="66-66"];
m91_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TextSubscriptionDataSourceReader.cs", label="_date = date", span="67-67"];
m91_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TextSubscriptionDataSourceReader.cs", label="_config = config", span="68-68"];
m91_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TextSubscriptionDataSourceReader.cs", label="_isLiveMode = isLiveMode", span="69-69"];
m91_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TextSubscriptionDataSourceReader.cs", label="_factory = (BaseData) ObjectActivator.GetActivator(config.Type).Invoke(new object[] { config.Type })", span="70-70"];
m91_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TextSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="64-64"];
m91_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="39-39"];
m91_7 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="50-50"];
m91_49 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="TextSubscriptionDataSourceReader.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m91_8 [cluster="System.Func<T, TResult>.Invoke(T)", file="TextSubscriptionDataSourceReader.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m91_26 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m91_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="145-145"];
m91_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="var handler = InvalidSource", span="147-147"];
m91_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="handler(this, new InvalidSourceEventArgs(source, exception))", span="148-148"];
m91_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="handler != null", span="148-148"];
m91_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="145-145"];
m91_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="78-78"];
m91_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="var reader = CreateStreamReader(source)", span="80-80"];
m91_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="yield break;", span="86-86"];
m91_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="yield return instance;", span="106-106"];
m91_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="OnCreateStreamReaderError(_date, source)", span="85-85"];
m91_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="reader == null || reader.EndOfStream", span="83-83"];
m91_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="!reader.EndOfStream", span="90-90"];
m91_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="var line = reader.ReadLine()", span="93-93"];
m91_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="BaseData instance = null", span="94-94"];
m91_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="instance = _factory.Reader(_config, line, _date, _isLiveMode)", span="97-97"];
m91_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="OnReaderError(line, err)", span="101-101"];
m91_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label=Exception, span="99-99"];
m91_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="instance != null && instance.EndTime != default(DateTime)", span="104-104"];
m91_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="TextSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="78-78"];
m91_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="46-46"];
m91_25 [cluster="QuantConnect.Interfaces.IStreamReader.ReadLine()", file="TextSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Interfaces.IStreamReader.ReadLine()", span="38-38"];
m91_71 [file="TextSubscriptionDataSourceReader.cs", label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", span=""];
m92_236 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", span="293-293"];
m92_118 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", span="194-194"];
m92_108 [cluster="QuantConnect.Data.Market.OptionChains.OptionChains(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionChains.OptionChains(System.DateTime)", span="34-34"];
m92_187 [cluster="QuantConnect.Securities.Security.GetLastData()", file="TimeSlice.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="504-504"];
m92_188 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="TimeSlice.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m92_96 [cluster="System.Collections.Generic.List<T>.List(int)", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m92_105 [cluster="QuantConnect.Data.Market.Splits.Splits(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Splits.Splits(System.DateTime)", span="36-36"];
m92_110 [cluster="QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", span="36-36"];
m92_194 [cluster="lambda expression", file="TimeSlice.cs", label="Entry lambda expression", span="387-387"];
m92_120 [cluster="lambda expression", color=green, community=0, file="TimeSlice.cs", label=slice, prediction=139, span="136-136"];
m92_122 [cluster="lambda expression", file="TimeSlice.cs", label="Entry lambda expression", span="150-150"];
m92_119 [cluster="lambda expression", file="TimeSlice.cs", label="Entry lambda expression", span="136-136"];
m92_121 [cluster="lambda expression", file="TimeSlice.cs", label="Exit lambda expression", span="136-136"];
m92_124 [cluster="lambda expression", file="TimeSlice.cs", label="Exit lambda expression", span="150-150"];
m92_195 [cluster="lambda expression", file="TimeSlice.cs", label="option.PriceModel.Evaluate(option, sliceFuture.Value, contract)", span="387-387"];
m92_196 [cluster="lambda expression", file="TimeSlice.cs", label="Exit lambda expression", span="387-387"];
m92_99 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m92_98 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m92_102 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
m92_138 [cluster="System.Collections.Generic.IDictionary<TKey, TCollection>.Add<TKey, TElement, TCollection>(TKey, TElement)", file="TimeSlice.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TCollection>.Add<TKey, TElement, TCollection>(TKey, TElement)", span="164-164"];
m92_233 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="115-115"];
m92_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="111-111"];
m92_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="int count = 0", span="113-113"];
m92_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var allDataForAlgorithm = new List<BaseData>(data.Count)", span="117-117"];
m92_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var algorithmTime = utcDateTime.ConvertFromUtc(algorithmTimeZone)", span="138-138"];
m92_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var security = new List<UpdateData<Security>>()", span="114-114"];
m92_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="count += baseDataCollectionCount", span="165-165"];
m92_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="count += list.Count", span="169-169"];
m92_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var custom = new List<UpdateData<Security>>()", span="115-115"];
m92_89 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="security.Add(new UpdateData<Security>(packet.Security, packet.Configuration.Type, securityUpdate))", span="278-278"];
m92_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var consolidator = new List<UpdateData<SubscriptionDataConfig>>()", span="116-116"];
m92_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="custom.Add(new UpdateData<Security>(packet.Security, packet.Configuration.Type, list))", span="175-175"];
m92_91 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidator.Add(new UpdateData<SubscriptionDataConfig>(packet.Configuration, packet.Configuration.Type, consolidatorUpdate))", span="282-282"];
m92_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="allDataForAlgorithm.Add(baseData)", span="186-186"];
m92_92 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="slice = new Slice(algorithmTime, allDataForAlgorithm, tradeBars, quoteBars, ticks, optionChains, futuresChains, splits, dividends, delistings, symbolChanges, allDataForAlgorithm.Count > 0)", span="286-286"];
m92_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var optionUnderlyingUpdates = new Dictionary<Symbol, BaseData>()", span="119-119"];
m92_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!HandleOptionData(algorithmTime, baseData, optionChains, packet.Security, sliceFuture, optionUnderlyingUpdates)", span="202-202"];
m92_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="optionUnderlyingUpdates[packet.Security.Symbol] = baseData", span="235-235"];
m92_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Split split", span="127-127"];
m92_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Dividend dividend", span="128-128"];
m92_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Delisting delisting", span="129-129"];
m92_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SymbolChangedEvent symbolChange", span="130-130"];
m92_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Slice slice = null", span="135-135"];
m92_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="var sliceFuture = new Lazy<Slice>(() => slice)", prediction=140, span="136-136"];
m92_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var tradeBars = new TradeBars(algorithmTime)", span="139-139"];
m92_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var quoteBars = new QuoteBars(algorithmTime)", span="140-140"];
m92_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var ticks = new Ticks(algorithmTime)", span="141-141"];
m92_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var splits = new Splits(algorithmTime)", span="142-142"];
m92_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var dividends = new Dividends(algorithmTime)", span="143-143"];
m92_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var delistings = new Delistings(algorithmTime)", span="144-144"];
m92_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var optionChains = new OptionChains(algorithmTime)", span="145-145"];
m92_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var futuresChains = new FuturesChains(algorithmTime)", span="146-146"];
m92_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var symbolChanges = new SymbolChangedEvents(algorithmTime)", span="147-147"];
m92_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!HandleFuturesData(algorithmTime, baseData, futuresChains, packet.Security)", span="215-215"];
m92_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="PopulateDataDictionaries(baseData, ticks, tradeBars, quoteBars, optionChains, futuresChains)", span="193-193"];
m92_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="splits[symbol] = split", span="249-249"];
m92_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="dividends[symbol] = dividend", span="245-245"];
m92_74 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="delistings[symbol] = delisting", span="241-241"];
m92_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="optionChains[baseData.Symbol] = (OptionChain) baseData", span="200-200"];
m92_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="futuresChains[baseData.Symbol] = (FuturesChain)baseData", span="213-213"];
m92_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="symbolChanges[packet.Configuration.Symbol] = symbolChange", span="254-254"];
m92_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var list = packet.Data", span="152-152"];
m92_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var symbol = packet.Security.Symbol", span="153-153"];
m92_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!packet.Configuration.IsInternalFeed && packet.Configuration.IsCustomData", span="172-172"];
m92_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!packet.Configuration.IsInternalFeed", span="183-183"];
m92_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!packet.Configuration.IsInternalFeed", span="191-191"];
m92_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="packet.Security.Type == SecurityType.Option", span="196-196"];
m92_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="packet.Security.Type == SecurityType.Future", span="209-209"];
m92_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="packet.Security.Symbol.SecurityType == SecurityType.Equity", span="233-233"];
m92_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="list.Count == 0", span="155-155"];
m92_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="list.Count == 1 && list[0] is BaseDataCollection", span="158-158"];
m92_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var baseDataCollectionCount = ((BaseDataCollection)list[0]).Data.Count", span="160-160"];
m92_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var securityUpdate = new List<BaseData>(list.Count)", span="178-178"];
m92_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var consolidatorUpdate = new List<BaseData>(list.Count)", span="179-179"];
m92_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="i < list.Count", span="180-180"];
m92_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var baseData = list[i]", span="182-182"];
m92_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseDataCollectionCount == 0", span="161-161"];
m92_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="securityUpdate.Add(baseData)", span="230-230"];
m92_82 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="securityUpdate.Count > 0", span="258-258"];
m92_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="int i = 0", span="180-180"];
m92_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidatorUpdate.Add(baseData)", span="222-222"];
m92_90 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidatorUpdate.Count > 0", span="280-280"];
m92_81 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="i++", span="180-180"];
m92_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType != MarketDataType.Auxiliary", span="189-189"];
m92_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType == MarketDataType.OptionChain", span="198-198"];
m92_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType == MarketDataType.FuturesChain", span="211-211"];
m92_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var tick = baseData as Tick", span="227-227"];
m92_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(delisting = baseData as Delisting) != null", span="239-239"];
m92_75 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(dividend = baseData as Dividend) != null", span="243-243"];
m92_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(split = baseData as Split) != null", span="247-247"];
m92_79 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(symbolChange = baseData as SymbolChangedEvent) != null", span="251-251"];
m92_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="tick != null && tick.Suspicious", span="228-228"];
m92_94 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="111-111"];
m92_104 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
m92_109 [cluster="QuantConnect.Data.Market.FuturesChains.FuturesChains(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.FuturesChains.FuturesChains(System.DateTime)", span="34-34"];
m92_231 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="TimeSlice.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m92_234 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", span="543-543"];
m92_264 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.TickType == TickType.Trade", span="545-545"];
m92_265 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.LastPrice = tick.Price", span="547-547"];
m92_266 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.TickType == TickType.Quote", span="549-549"];
m92_267 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.AskPrice != 0m", span="551-551"];
m92_268 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.AskPrice = tick.AskPrice", span="553-553"];
m92_269 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.AskSize = (long)tick.AskSize", span="554-554"];
m92_270 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.BidPrice != 0m", span="556-556"];
m92_271 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.BidPrice = tick.BidPrice", span="558-558"];
m92_272 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.BidSize = (long)tick.BidSize", span="559-559"];
m92_273 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.TickType == TickType.OpenInterest", span="562-562"];
m92_274 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.Value != 0m", span="564-564"];
m92_275 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.OpenInterest = tick.Value", span="566-566"];
m92_276 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", span="543-543"];
m92_100 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="TimeSlice.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m92_117 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m92_116 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", span="420-420"];
m92_198 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="var symbol = baseData.Symbol", span="422-422"];
m92_201 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="!futuresChains.TryGetValue(canonical, out chain)", span="426-426"];
m92_202 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="chain = new FuturesChain(canonical, algorithmTime)", span="428-428"];
m92_203 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="futuresChains[canonical] = chain", span="429-429"];
m92_204 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="var universeData = baseData as FuturesChainUniverseDataCollection", span="432-432"];
m92_210 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="!chain.Contracts.TryGetValue(baseData.Symbol, out contract)", span="443-443"];
m92_211 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="var underlyingSymbol = baseData.Symbol.Underlying", span="445-445"];
m92_212 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="contract = new FuturesContract(baseData.Symbol, underlyingSymbol)\r\n                {\r\n                    Time = baseData.EndTime,\r\n                    LastPrice = security.Close,\r\n                    BidPrice = security.BidPrice,\r\n                    BidSize = (long)security.BidSize,\r\n                    AskPrice = security.AskPrice,\r\n                    AskSize = (long)security.AskSize,\r\n                    OpenInterest = security.OpenInterest\r\n                }", span="446-455"];
m92_213 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="chain.Contracts[baseData.Symbol] = contract", span="456-456"];
m92_214 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="baseData.DataType", span="460-460"];
m92_216 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="var tick = (Tick)baseData", span="463-463"];
m92_220 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="var tradeBar = (TradeBar)baseData", span="469-469"];
m92_224 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="var quote = (QuoteBar)baseData", span="475-475"];
m92_228 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="chain.AddAuxData(baseData)", span="481-481"];
m92_199 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="FuturesChain chain", span="424-424"];
m92_200 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="var canonical = Symbol.Create(symbol.ID.Symbol, SecurityType.Future, symbol.ID.Market)", span="425-425"];
m92_221 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="chain.TradeBars[symbol] = tradeBar", span="470-470"];
m92_225 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="chain.QuoteBars[symbol] = quote", span="476-476"];
m92_207 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="chain.FilteredContracts.Add(contractSymbol)", span="437-437"];
m92_217 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="chain.Ticks.Add(tick.Symbol, tick)", span="464-464"];
m92_205 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="universeData != null", span="433-433"];
m92_206 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="universeData.FilteredContracts", span="435-435"];
m92_209 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="FuturesContract contract", span="442-442"];
m92_208 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="return false;", span="439-439"];
m92_218 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="UpdateContract(contract, tick)", span="465-465"];
m92_222 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="contract.LastPrice = tradeBar.Close", span="471-471"];
m92_226 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="UpdateContract(contract, quote)", span="477-477"];
m92_215 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="MarketDataType.Tick", span="462-462"];
m92_219 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="MarketDataType.TradeBar", span="468-468"];
m92_223 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="MarketDataType.QuoteBar", span="474-474"];
m92_227 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="MarketDataType.Base", span="480-480"];
m92_229 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="return true;", span="484-484"];
m92_230 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", span="420-420"];
m92_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="81-81"];
m92_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Time = time", span="91-91"];
m92_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Data = data", span="92-92"];
m92_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Slice = slice", span="93-93"];
m92_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="CustomData = customData", span="94-94"];
m92_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="DataPointCount = dataPointCount", span="95-95"];
m92_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SecuritiesUpdateData = securitiesUpdateData", span="97-97"];
m92_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="ConsolidatorUpdateData = consolidatorUpdateData", span="98-98"];
m92_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SecurityChanges = securityChanges", span="99-99"];
m92_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="81-81"];
m92_197 [cluster="QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="TimeSlice.cs", label="Entry QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="34-34"];
m92_107 [cluster="QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", span="36-36"];
m92_192 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", span="487-487"];
m92_237 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="quote.Ask != null && quote.Ask.Close != 0m", span="489-489"];
m92_238 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.AskPrice = quote.Ask.Close", span="491-491"];
m92_239 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.AskSize = (long)quote.LastAskSize", span="492-492"];
m92_240 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="quote.Bid != null && quote.Bid.Close != 0m", span="494-494"];
m92_241 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.BidPrice = quote.Bid.Close", span="496-496"];
m92_242 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.BidSize = (long)quote.LastBidSize", span="497-497"];
m92_243 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", span="487-487"];
m92_232 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", span="94-94"];
m92_112 [cluster="QuantConnect.Lean.Engine.DataFeeds.UpdateData<T>.UpdateData(T, System.Type, System.Collections.Generic.IReadOnlyList<QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UpdateData<T>.UpdateData(T, System.Type, System.Collections.Generic.IReadOnlyList<QuantConnect.Data.BaseData>)", span="49-49"];
m92_185 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m92_111 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="TimeSlice.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m92_193 [cluster="QuantConnect.Data.Market.OptionChain.AddAuxData(QuantConnect.Data.BaseData)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionChain.AddAuxData(QuantConnect.Data.BaseData)", span="297-297"];
m92_190 [cluster="QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", span="175-175"];
m92_97 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TimeSlice.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m92_115 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", span="323-323"];
m92_139 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var symbol = baseData.Symbol", span="325-325"];
m92_142 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="!optionChains.TryGetValue(canonical, out chain)", span="329-329"];
m92_143 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain = new OptionChain(canonical, algorithmTime)", span="331-331"];
m92_144 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="optionChains[canonical] = chain", span="332-332"];
m92_145 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var option = security as Option", span="336-336"];
m92_149 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="optionUnderlyingUpdates.TryGetValue(option.Underlying.Symbol, out underlyingUpdate)", span="342-342"];
m92_152 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var universeData = baseData as OptionChainUniverseDataCollection", span="350-350"];
m92_161 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="!chain.Contracts.TryGetValue(baseData.Symbol, out contract)", span="368-368"];
m92_162 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var underlyingSymbol = baseData.Symbol.Underlying", span="370-370"];
m92_163 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="contract = new OptionContract(baseData.Symbol, underlyingSymbol)\r\n                {\r\n                    Time = baseData.EndTime,\r\n                    LastPrice = security.Close,\r\n                    BidPrice = security.BidPrice,\r\n                    BidSize = (long)security.BidSize,\r\n                    AskPrice = security.AskPrice,\r\n                    AskSize = (long)security.AskSize,\r\n                    OpenInterest = security.OpenInterest,\r\n                    UnderlyingLastPrice = chain.Underlying.Price\r\n                }", span="371-381"];
m92_164 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain.Contracts[baseData.Symbol] = contract", span="383-383"];
m92_166 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="contract.SetOptionPriceModel(() => option.PriceModel.Evaluate(option, sliceFuture.Value, contract))", span="387-387"];
m92_167 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="baseData.DataType", span="392-392"];
m92_169 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var tick = (Tick)baseData", span="395-395"];
m92_173 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var tradeBar = (TradeBar)baseData", span="401-401"];
m92_177 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var quote = (QuoteBar)baseData", span="407-407"];
m92_181 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain.AddAuxData(baseData)", span="413-413"];
m92_140 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="OptionChain chain", span="327-327"];
m92_141 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var canonical = Symbol.CreateOption(symbol.Underlying, symbol.ID.Market, default(OptionStyle), default(OptionRight), 0, SecurityIdentifier.DefaultDate)", span="328-328"];
m92_174 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain.TradeBars[symbol] = tradeBar", span="402-402"];
m92_178 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain.QuoteBars[symbol] = quote", span="408-408"];
m92_151 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain.Underlying = underlyingData", span="347-347"];
m92_155 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain.Contracts", span="355-355"];
m92_156 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="addedContract.Value.UnderlyingLastPrice = chain.Underlying.Price", span="357-357"];
m92_158 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain.FilteredContracts.Add(contractSymbol)", span="362-362"];
m92_170 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="chain.Ticks.Add(tick.Symbol, tick)", span="396-396"];
m92_146 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="option != null", span="337-337"];
m92_147 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="var underlyingData = option.Underlying.GetLastData()", span="339-339"];
m92_165 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="option != null", span="385-385"];
m92_148 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="BaseData underlyingUpdate", span="341-341"];
m92_150 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="underlyingData = underlyingUpdate", span="344-344"];
m92_153 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="universeData != null", span="351-351"];
m92_154 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="universeData.Underlying != null", span="353-353"];
m92_157 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="universeData.FilteredContracts", span="360-360"];
m92_160 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="OptionContract contract", span="367-367"];
m92_159 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="return false;", span="364-364"];
m92_171 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="UpdateContract(contract, tick)", span="397-397"];
m92_175 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="contract.LastPrice = tradeBar.Close", span="403-403"];
m92_179 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="UpdateContract(contract, quote)", span="409-409"];
m92_168 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="MarketDataType.Tick", span="394-394"];
m92_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="MarketDataType.TradeBar", span="400-400"];
m92_176 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="MarketDataType.QuoteBar", span="406-406"];
m92_180 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="MarketDataType.Base", span="412-412"];
m92_182 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="return true;", span="416-416"];
m92_183 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", span="323-323"];
m92_189 [cluster="QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="165-165"];
m92_113 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m92_235 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", span="529-529"];
m92_257 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="quote.Ask != null && quote.Ask.Close != 0m", span="531-531"];
m92_258 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.AskPrice = quote.Ask.Close", span="533-533"];
m92_259 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.AskSize = (long)quote.LastAskSize", span="534-534"];
m92_260 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="quote.Bid != null && quote.Bid.Close != 0m", span="536-536"];
m92_261 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.BidPrice = quote.Bid.Close", span="538-538"];
m92_262 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.BidSize = (long)quote.LastBidSize", span="539-539"];
m92_263 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", span="529-529"];
m92_186 [cluster="QuantConnect.Data.Market.OptionChain.OptionChain(QuantConnect.Symbol, System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionChain.OptionChain(QuantConnect.Symbol, System.DateTime)", span="94-94"];
m92_103 [cluster="QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", span="34-34"];
m92_191 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", span="501-501"];
m92_244 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.TickType == TickType.Trade", span="503-503"];
m92_245 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.LastPrice = tick.Price", span="505-505"];
m92_246 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.TickType == TickType.Quote", span="507-507"];
m92_247 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.AskPrice != 0m", span="509-509"];
m92_248 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.AskPrice = tick.AskPrice", span="511-511"];
m92_249 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.AskSize = (long)tick.AskSize", span="512-512"];
m92_250 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.BidPrice != 0m", span="514-514"];
m92_251 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.BidPrice = tick.BidPrice", span="516-516"];
m92_252 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.BidSize = (long)tick.BidSize", span="517-517"];
m92_253 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.TickType == TickType.OpenInterest", span="520-520"];
m92_254 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.Value != 0m", span="522-522"];
m92_255 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.OpenInterest = tick.Value", span="524-524"];
m92_256 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", span="501-501"];
m92_184 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="TimeSlice.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="119-119"];
m92_106 [cluster="QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", span="36-36"];
m92_114 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", span="294-294"];
m92_125 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="var symbol = baseData.Symbol", span="296-296"];
m92_126 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="baseData.DataType", span="299-299"];
m92_128 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="ticks.Add(symbol, (Tick)baseData)", span="302-302"];
m92_130 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="tradeBars[symbol] = (TradeBar) baseData", span="306-306"];
m92_132 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="quoteBars[symbol] = (QuoteBar) baseData", span="310-310"];
m92_134 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="optionChains[symbol] = (OptionChain) baseData", span="314-314"];
m92_136 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="futuresChains[symbol] = (FuturesChain)baseData", span="318-318"];
m92_127 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="MarketDataType.Tick", span="301-301"];
m92_129 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="MarketDataType.TradeBar", span="305-305"];
m92_131 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="MarketDataType.QuoteBar", span="309-309"];
m92_133 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="MarketDataType.OptionChain", span="313-313"];
m92_135 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="MarketDataType.FuturesChain", span="317-317"];
m92_137 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", span="294-294"];
m92_101 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="TimeSlice.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m92_277 [file="TimeSlice.cs", label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", span=""];
m92_278 [file="TimeSlice.cs", label=slice, span=""];
m92_279 [file="TimeSlice.cs", label="System.Lazy<QuantConnect.Data.Slice>", span=""];
m92_280 [file="TimeSlice.cs", label=option, span=""];
m92_281 [file="TimeSlice.cs", label=contract, span=""];
m93_3 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="VolatilityModelPythonWrapper.cs", label="Entry QuantConnect.Python.VolatilityModelPythonWrapper.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="56-56"];
m93_4 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", color=green, community=0, file="VolatilityModelPythonWrapper.cs", label="Py.GIL()", prediction=141, span="58-58"];
m93_5 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", color=green, community=0, file="VolatilityModelPythonWrapper.cs", label="_model.Update(security, data)", prediction=142, span="60-60"];
m93_6 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="VolatilityModelPythonWrapper.cs", label="Exit QuantConnect.Python.VolatilityModelPythonWrapper.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="56-56"];
m93_13 [cluster="Unk.GetHistoryRequirements", file="VolatilityModelPythonWrapper.cs", label="Entry Unk.GetHistoryRequirements", span=""];
m93_9 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", file="VolatilityModelPythonWrapper.cs", label="Entry QuantConnect.Python.VolatilityModelPythonWrapper.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="70-70"];
m93_10 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="VolatilityModelPythonWrapper.cs", label="Py.GIL()", prediction=143, span="72-72"];
m93_11 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="VolatilityModelPythonWrapper.cs", label="return _model.GetHistoryRequirements(security, utcTime);", prediction=142, span="74-74"];
m93_12 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", file="VolatilityModelPythonWrapper.cs", label="Exit QuantConnect.Python.VolatilityModelPythonWrapper.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="70-70"];
m93_0 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.VolatilityModelPythonWrapper(PyObject)", file="VolatilityModelPythonWrapper.cs", label="Entry QuantConnect.Python.VolatilityModelPythonWrapper.VolatilityModelPythonWrapper(PyObject)", span="34-34"];
m93_1 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.VolatilityModelPythonWrapper(PyObject)", color=green, community=0, file="VolatilityModelPythonWrapper.cs", label="_model = model", prediction=145, span="36-36"];
m93_2 [cluster="QuantConnect.Python.VolatilityModelPythonWrapper.VolatilityModelPythonWrapper(PyObject)", file="VolatilityModelPythonWrapper.cs", label="Exit QuantConnect.Python.VolatilityModelPythonWrapper.VolatilityModelPythonWrapper(PyObject)", span="34-34"];
m93_7 [cluster="Unk.GIL", file="VolatilityModelPythonWrapper.cs", label="Entry Unk.GIL", span=""];
m93_8 [cluster="Unk.Update", file="VolatilityModelPythonWrapper.cs", label="Entry Unk.Update", span=""];
m93_14 [file="VolatilityModelPythonWrapper.cs", label="QuantConnect.Python.VolatilityModelPythonWrapper", span=""];
m94_56 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="175-175"];
m94_77 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="ZipDataCacheProvider.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork),\r\n                new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, false, false, false),\r\n                new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="177-179"];
m94_78 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="175-175"];
m94_252 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="55-55"];
m94_76 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", span="53-53"];
m94_140 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="313-313"];
m94_141 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="315-315"];
m94_144 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="319-319"];
m94_145 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="322-322"];
m94_142 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace(''CLOSE FROM SHORT'')", span="316-316"];
m94_143 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="317-317"];
m94_146 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="313-313"];
m94_216 [cluster="object.Object()", file="ZipDataCacheProvider.cs", label="Entry object.Object()", span="0-0"];
m94_253 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="91-91"];
m94_50 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="196-196"];
m94_84 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="196-196"];
m94_75 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392"];
m94_200 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="393-393"];
m94_201 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="395-395"];
m94_202 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="var qty = 1000000m", span="397-397"];
m94_205 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="Brokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                lock (sync)\r\n                {\r\n                    remaining -= orderEvent.FillQuantity;\r\n                    Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity);\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        manualResetEvent.Set();\r\n                    }\r\n                }\r\n            }", span="400-411"];
m94_209 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="manualResetEvent.WaitOne(2500)", span="419-419"];
m94_210 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="manualResetEvent.WaitOne(2500)", span="420-420"];
m94_211 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="manualResetEvent.WaitOne(2500)", span="421-421"];
m94_203 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="var remaining = qty", span="398-398"];
m94_207 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="var order = new MarketOrder(symbol, qty, DateTime.UtcNow) { Id = 1 }", span="415-415"];
m94_204 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="var sync = new object()", span="399-399"];
m94_206 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="var symbol = Symbols.EURUSD", span="414-414"];
m94_208 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="Brokerage.PlaceOrder(order)", span="416-416"];
m94_212 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="Console.WriteLine(''Remaining: '' + remaining)", span="423-423"];
m94_213 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="Assert.AreEqual(0, remaining)", span="424-424"];
m94_214 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="393-393"];
m94_74 [cluster="QuantConnect.Tests.Brokerages.SecurityProvider.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.SecurityProvider.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="52-52"];
m94_180 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="372-372"];
m94_181 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="374-374"];
m94_182 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="375-375"];
m94_183 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="376-376"];
m94_184 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="var before = Brokerage.GetAccountHoldings()", span="377-377"];
m94_185 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(new MarketOrder(Symbol, GetDefaultQuantity(), DateTime.Now))", span="379-379"];
m94_187 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="var beforeHoldings = before.FirstOrDefault(x => x.Symbol == Symbol)", span="383-383"];
m94_186 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="var after = Brokerage.GetAccountHoldings()", span="381-381"];
m94_188 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="var afterHoldings = after.FirstOrDefault(x => x.Symbol == Symbol)", span="384-384"];
m94_189 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="var beforeQuantity = beforeHoldings == null ? 0 : beforeHoldings.Quantity", span="386-386"];
m94_190 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="var afterQuantity = afterHoldings == null ? 0 : afterHoldings.Quantity", span="387-387"];
m94_191 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="Assert.AreEqual(GetDefaultQuantity(), afterQuantity - beforeQuantity)", span="389-389"];
m94_192 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="372-372"];
m94_18 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="76-76"];
m94_19 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="80-80"];
m94_20 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="81-81"];
m94_21 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Log.Trace(''--- TEARDOWN ---'')", span="82-82"];
m94_22 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="83-83"];
m94_23 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="84-84"];
m94_24 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Thread.Sleep(1000)", span="85-85"];
m94_25 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="CancelOpenOrders()", span="86-86"];
m94_26 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="LiquidateHoldings()", span="87-87"];
m94_27 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Thread.Sleep(1000)", span="88-88"];
m94_28 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="76-76"];
m94_16 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="227-227"];
m94_100 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="229-229"];
m94_101 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label="Log.Trace(''CANCEL OPEN ORDERS'')", span="230-230"];
m94_102 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="231-231"];
m94_103 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label="var openOrders = Brokerage.GetOpenOrders()", span="232-232"];
m94_104 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label=openOrders, span="233-233"];
m94_105 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label="Log.Trace(''Canceling: '' + openOrder)", span="235-235"];
m94_106 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label="Brokerage.CancelOrder(openOrder)", span="236-236"];
m94_107 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="227-227"];
m94_274 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Entry lambda expression", span="496-514"];
m94_59 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace(''ORDER STATUS CHANGED: '' + args)", span="145-145"];
m94_61 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled", span="149-149"];
m94_62 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString())", span="151-151"];
m94_64 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="_securityProvider.TryGetValue(args.Symbol, out security)", span="154-154"];
m94_65 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="var holding = _securityProvider[args.Symbol].Holdings", span="156-156"];
m94_66 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity)", span="157-157"];
m94_67 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="_securityProvider[args.Symbol] = CreateSecurity(args.Symbol)", span="161-161"];
m94_68 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="_securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity)", span="162-162"];
m94_69 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol])", span="165-165"];
m94_70 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="var order = _orderProvider.GetOrderById(args.OrderId)", span="168-168"];
m94_71 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="order.Status = args.Status", span="169-169"];
m94_57 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Entry lambda expression", span="142-171"];
m94_58 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="144-144"];
m94_60 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="146-146"];
m94_72 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Exit lambda expression", span="142-171"];
m94_63 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Security security", span="153-153"];
m94_177 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Entry lambda expression", span="368-368"];
m94_178 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="x.Symbol == ''USD''", span="368-368"];
m94_179 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Exit lambda expression", span="368-368"];
m94_194 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Entry lambda expression", span="383-383"];
m94_197 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Entry lambda expression", span="384-384"];
m94_195 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="x.Symbol == Symbol", span="383-383"];
m94_196 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Exit lambda expression", span="383-383"];
m94_198 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="x.Symbol == Symbol", span="384-384"];
m94_199 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Exit lambda expression", span="384-384"];
m94_225 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="manualResetEvent.Set()", span="408-408"];
m94_221 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label=sync, span="402-402"];
m94_222 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="remaining -= orderEvent.FillQuantity", span="404-404"];
m94_223 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity)", span="405-405"];
m94_224 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="orderEvent.Status == OrderStatus.Filled", span="406-406"];
m94_220 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Entry lambda expression", span="400-411"];
m94_226 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Exit lambda expression", span="400-411"];
m94_258 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace(''ModifyOrderUntilFilled(): '' + order)", span="449-449"];
m94_256 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="filledResetEvent.Set()", span="445-445"];
m94_255 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="args.Status == OrderStatus.Filled", span="443-443"];
m94_257 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid", span="447-447"];
m94_259 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Assert.Fail(''Unexpected order status: '' + args.Status)", span="450-450"];
m94_254 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Entry lambda expression", span="441-452"];
m94_260 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Exit lambda expression", span="441-452"];
m94_280 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="args.Status == expectedStatus", span="507-507"];
m94_279 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="requiredStatusEvent.Set()", span="504-504"];
m94_284 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="desiredStatusEvent.Set()", span="512-512"];
m94_275 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid", span="499-499"];
m94_277 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace(''SUBMITTED: '' + args)", span="502-502"];
m94_282 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace(''EXPECTED: '' + args)", span="510-510"];
m94_276 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="501-501"];
m94_278 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="503-503"];
m94_281 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="509-509"];
m94_283 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="511-511"];
m94_285 [cluster="lambda expression", file="ZipDataCacheProvider.cs", label="Exit lambda expression", span="496-514"];
m94_73 [cluster="QuantConnect.Symbol.ToString()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m94_55 [cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71"];
m94_81 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m94_124 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", span="51-51"];
m94_134 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="304-304"];
m94_135 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="306-306"];
m94_138 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="309-309"];
m94_136 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace(''SHORT FROM ZERO'')", span="307-307"];
m94_137 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="308-308"];
m94_139 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="304-304"];
m94_147 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", span="39-39"];
m94_219 [cluster="System.Console.WriteLine(string)", file="ZipDataCacheProvider.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m94_251 [cluster="System.Threading.EventWaitHandle.Reset()", file="ZipDataCacheProvider.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m94_215 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="ZipDataCacheProvider.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m94_158 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="344-344"];
m94_159 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="346-346"];
m94_162 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(-GetDefaultQuantity()), OrderStatus.Filled)", span="350-350"];
m94_163 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="var order = PlaceOrderWaitForStatus(parameters.CreateLongOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="353-353"];
m94_164 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="parameters.ModifyUntilFilled", span="355-355"];
m94_165 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="ModifyOrderUntilFilled(order, parameters)", span="357-357"];
m94_160 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace(''LONG FROM SHORT'')", span="347-347"];
m94_161 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="348-348"];
m94_166 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="344-344"];
m94_117 [cluster="Unk.IsTrue", file="ZipDataCacheProvider.cs", label="Entry Unk.IsTrue", span=""];
m94_54 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.Add(QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.Add(QuantConnect.Orders.Order)", span="42-42"];
m94_174 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m94_118 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="282-282"];
m94_119 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="284-284"];
m94_122 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="287-287"];
m94_120 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace(''LONG FROM ZERO'')", span="285-285"];
m94_121 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="286-286"];
m94_123 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="282-282"];
m94_217 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="84-84"];
m94_111 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="270-270"];
m94_112 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="ZipDataCacheProvider.cs", label="return 1;", span="272-272"];
m94_113 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="270-270"];
m94_85 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", span="202-202"];
m94_86 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", span="202-202"];
m94_99 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="492-492"];
m94_261 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="var requiredStatusEvent = new ManualResetEvent(false)", span="494-494"];
m94_263 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                // no matter what, every order should fire at least one of these\r\n                if (args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''SUBMITTED: '' + args);\r\n                    Log.Trace('''');\r\n                    requiredStatusEvent.Set();\r\n                }\r\n                // make sure we fire the status we're expecting\r\n                if (args.Status == expectedStatus)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''EXPECTED: '' + args);\r\n                    Log.Trace('''');\r\n                    desiredStatusEvent.Set();\r\n                }\r\n            }", span="496-514"];
m94_265 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="OrderProvider.Add(order)", span="518-518"];
m94_266 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="!Brokerage.PlaceOrder(order) && !allowFailedSubmission", span="519-519"];
m94_267 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="Assert.Fail(''Brokerage failed to place the order: '' + order)", span="521-521"];
m94_268 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="requiredStatusEvent.WaitOneAssertFail((int) (1000*secondsTimeout), ''Expected every order to fire a submitted or invalid status event'')", span="523-523"];
m94_269 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="desiredStatusEvent.WaitOneAssertFail((int) (1000*secondsTimeout), ''OrderStatus '' + expectedStatus + '' was not encountered within the timeout. Order Id:'' + order.Id)", span="524-524"];
m94_271 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="return order;", span="528-528"];
m94_262 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="var desiredStatusEvent = new ManualResetEvent(false)", span="495-495"];
m94_264 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="516-516"];
m94_270 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="526-526"];
m94_272 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="492-492"];
m94_167 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="362-362"];
m94_168 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="364-364"];
m94_169 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="ZipDataCacheProvider.cs", label="Log.Trace(''GET CASH BALANCE'')", span="365-365"];
m94_170 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="366-366"];
m94_171 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="ZipDataCacheProvider.cs", label="var balance = Brokerage.GetCashBalance()", span="367-367"];
m94_172 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="ZipDataCacheProvider.cs", label="Assert.AreEqual(1, balance.Count(x => x.Symbol == ''USD''))", span="368-368"];
m94_173 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="362-362"];
m94_80 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m94_53 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65"];
m94_176 [cluster="Unk.AreEqual", file="ZipDataCacheProvider.cs", label="Entry Unk.AreEqual", span=""];
m94_52 [cluster="Unk.Fail", file="ZipDataCacheProvider.cs", label="Entry Unk.Fail", span=""];
m94_125 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="291-291"];
m94_126 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="293-293"];
m94_129 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="297-297"];
m94_130 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="300-300"];
m94_127 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace(''CLOSE FROM LONG'')", span="294-294"];
m94_128 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="295-295"];
m94_131 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="291-291"];
m94_148 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="326-326"];
m94_149 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="328-328"];
m94_152 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()))", span="332-332"];
m94_153 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="var order = PlaceOrderWaitForStatus(parameters.CreateShortOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="335-335"];
m94_154 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="parameters.ModifyUntilFilled", span="337-337"];
m94_155 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="ModifyOrderUntilFilled(order, parameters)", span="339-339"];
m94_150 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace(''SHORT FROM LONG'')", span="329-329"];
m94_151 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="330-330"];
m94_156 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="326-326"];
m94_15 [cluster="System.Threading.Thread.Sleep(int)", file="ZipDataCacheProvider.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m94_79 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m94_250 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="ZipDataCacheProvider.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m94_273 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="ZipDataCacheProvider.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m94_51 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103"];
m94_17 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="209-209"];
m94_87 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="211-211"];
m94_88 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="Log.Trace(''LIQUIDATE HOLDINGS'')", span="212-212"];
m94_89 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="213-213"];
m94_90 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="var holdings = Brokerage.GetAccountHoldings()", span="215-215"];
m94_91 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label=holdings, span="217-217"];
m94_92 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="holding.Quantity == 0", span="219-219"];
m94_93 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="Log.Trace(''Liquidating: '' + holding)", span="220-220"];
m94_94 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="var order = new MarketOrder(holding.Symbol, (int)-holding.Quantity, DateTime.Now)", span="221-221"];
m94_95 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="_orderProvider.Add(order)", span="222-222"];
m94_96 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="PlaceOrderWaitForStatus(order, OrderStatus.Filled)", span="223-223"];
m94_97 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="209-209"];
m94_83 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m94_157 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="433-433"];
m94_228 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="order.Status == OrderStatus.Filled", span="435-435"];
m94_231 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filledResetEvent.Set();\r\n                }\r\n                if (args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace(''ModifyOrderUntilFilled(): '' + order);\r\n                    Assert.Fail(''Unexpected order status: '' + args.Status);\r\n                }\r\n            }", span="441-452"];
m94_234 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Log.Trace(''MODIFY UNTIL FILLED: '' + order)", span="457-457"];
m94_237 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="!filledResetEvent.WaitOne(3000) && stopwatch.Elapsed.TotalSeconds < secondsTimeout", span="460-460"];
m94_239 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="order.Status == OrderStatus.PartiallyFilled", span="463-463"];
m94_240 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="var marketPrice = GetAskPrice(order.Symbol)", span="465-465"];
m94_242 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="var updateOrder = parameters.ModifyOrderToFill(Brokerage, order, marketPrice)", span="468-468"];
m94_244 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="order.Status == OrderStatus.Filled", span="471-471"];
m94_245 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): '' + order)", span="473-473"];
m94_246 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="!Brokerage.UpdateOrder(order)", span="474-474"];
m94_229 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="return;", span="437-437"];
m94_230 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="var filledResetEvent = new ManualResetEvent(false)", span="440-440"];
m94_238 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="filledResetEvent.Reset()", span="462-462"];
m94_232 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="454-454"];
m94_248 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="481-481"];
m94_233 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="456-456"];
m94_235 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="458-458"];
m94_236 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="var stopwatch = Stopwatch.StartNew()", span="459-459"];
m94_241 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): Ask: '' + marketPrice)", span="466-466"];
m94_243 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label=updateOrder, span="469-469"];
m94_247 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Assert.Fail(''Brokerage failed to update the order'')", span="476-476"];
m94_249 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="433-433"];
m94_82 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m94_108 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="98-98"];
m94_132 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", span="35-35"];
m94_29 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="111-111"];
m94_30 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="113-113"];
m94_31 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace(''- INITIALIZING BROKERAGE -'')", span="114-114"];
m94_32 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="115-115"];
m94_33 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="var brokerage = CreateBrokerage(OrderProvider, SecurityProvider)", span="117-117"];
m94_34 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="brokerage.Connect()", span="118-118"];
m94_35 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="!brokerage.IsConnected", span="120-120"];
m94_40 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="brokerage.GetOpenOrders()", span="128-128"];
m94_45 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="brokerage.GetAccountHoldings()", span="136-136"];
m94_47 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="brokerage.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                Log.Trace('''');\r\n                Log.Trace(''ORDER STATUS CHANGED: '' + args);\r\n                Log.Trace('''');\r\n\r\n                // we need to keep this maintained properly\r\n                if (args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled)\r\n                {\r\n                    Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString());\r\n\r\n                    Security security;\r\n                    if (_securityProvider.TryGetValue(args.Symbol, out security))\r\n                    {\r\n                        var holding = _securityProvider[args.Symbol].Holdings;\r\n                        holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity);\r\n                    }\r\n                    else\r\n                    {\r\n                        _securityProvider[args.Symbol] = CreateSecurity(args.Symbol);\r\n                        _securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity);\r\n                    }\r\n\r\n                    Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol]);\r\n\r\n                    // update order mapping\r\n                    var order = _orderProvider.GetOrderById(args.OrderId);\r\n                    order.Status = args.Status;\r\n                }\r\n            }", span="142-171"];
m94_48 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="return brokerage;", span="172-172"];
m94_36 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Assert.Fail(''Failed to connect to brokerage'')", span="122-122"];
m94_37 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="125-125"];
m94_38 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace(''GET OPEN ORDERS'')", span="126-126"];
m94_39 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="127-127"];
m94_41 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="OrderProvider.Add(openOrder)", span="130-130"];
m94_42 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="133-133"];
m94_43 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="134-134"];
m94_44 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="135-135"];
m94_46 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="SecurityProvider[accountHolding.Symbol] = CreateSecurity(accountHolding.Symbol)", span="140-140"];
m94_49 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="111-111"];
m94_109 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="265-265"];
m94_110 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="265-265"];
m94_133 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", span="47-47"];
m94_175 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="ZipDataCacheProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m94_0 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", span="58-58"];
m94_1 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="60-60"];
m94_2 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="61-61"];
m94_3 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Log.Trace(''--- SETUP ---'')", span="62-62"];
m94_4 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="63-63"];
m94_5 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Log.Trace('''')", span="64-64"];
m94_6 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="_brokerage = null", span="66-66"];
m94_7 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="_orderProvider = null", span="67-67"];
m94_8 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="_securityProvider = null", span="68-68"];
m94_9 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Thread.Sleep(1000)", span="69-69"];
m94_10 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="CancelOpenOrders()", span="70-70"];
m94_11 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="LiquidateHoldings()", span="71-71"];
m94_12 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Thread.Sleep(1000)", span="72-72"];
m94_13 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", span="58-58"];
m94_14 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m94_218 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="ZipDataCacheProvider.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m94_227 [cluster="System.Threading.EventWaitHandle.Set()", file="ZipDataCacheProvider.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m94_98 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m94_114 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="ZipDataCacheProvider.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="276-276"];
m94_115 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="ZipDataCacheProvider.cs", label="Assert.IsTrue(Brokerage.IsConnected)", span="278-278"];
m94_116 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="ZipDataCacheProvider.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="276-276"];
m94_286 [file="ZipDataCacheProvider.cs", label="QuantConnect.Tests.Brokerages.BrokerageTests", span=""];
m94_287 [file="ZipDataCacheProvider.cs", label=sync, span=""];
m94_288 [file="ZipDataCacheProvider.cs", label=remaining, span=""];
m94_289 [file="ZipDataCacheProvider.cs", label=manualResetEvent, span=""];
m94_290 [file="ZipDataCacheProvider.cs", label=filledResetEvent, span=""];
m94_291 [file="ZipDataCacheProvider.cs", label="QuantConnect.Orders.Order", span=""];
m94_292 [file="ZipDataCacheProvider.cs", label=requiredStatusEvent, span=""];
m94_293 [file="ZipDataCacheProvider.cs", label="QuantConnect.Orders.OrderStatus", span=""];
m94_294 [file="ZipDataCacheProvider.cs", label=desiredStatusEvent, span=""];
n544 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n237  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n544 -> n341  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n545 -> n320  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n546 -> n323  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n547 -> n327  [color=darkseagreen4, key=1, label=split, style=dashed];
n548 -> n501  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n9 -> n320  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n9 -> n50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Server.ILeanManager", style=dashed];
n9 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n59  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n9 -> n68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n71  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n78  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n87  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler", style=dashed];
n9 -> n89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n9 -> n90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n91  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n92  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n94  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n96  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n102  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n106  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n114  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n122  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n125  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n126  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n133  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n134  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n136  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n137  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n140  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n164  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n171  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n173  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n175  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n181  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n186  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n188  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n190  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n192  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n199  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n200  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n208  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n209  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n212  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n218  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler", style=dashed];
n9 -> n219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n223  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n232  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n9 -> n233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n235  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n236  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n237  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n240  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n12 -> n57  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n59  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n61  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n238  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n240  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n13 -> n53  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n66  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n237  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n239  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n240  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n23 -> n185  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
n24 -> n187  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
n25 -> n189  [color=darkseagreen4, key=1, label=hasOnDataOptionChains, style=dashed];
n26 -> n191  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
n27 -> n170  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
n28 -> n172  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
n29 -> n174  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
n30 -> n70  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
n31 -> n315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n31 -> n319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n31 -> n36  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
n32 -> n35  [color=darkseagreen4, key=1, label=config, style=dashed];
n32 -> n41  [color=darkseagreen4, key=1, label=config, style=dashed];
n34 -> n36  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n34 -> n40  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n34 -> n41  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n47 -> n47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n60 -> n238  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n60 -> n240  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n73 -> n322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n139 -> n326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n14 -> n35  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n41  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n71  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n161  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n171  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n173  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n175  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n186  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n188  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n190  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n192  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n161 -> n164  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
n16 -> n97  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
n18 -> n121  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
n19 -> n91  [color=darkseagreen4, key=1, label=delistings, style=dashed];
n19 -> n181  [color=darkseagreen4, key=1, label=delistings, style=dashed];
n245 -> n485  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
n256 -> n340  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n341  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n353  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n385  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n389  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n256 -> n392  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n393  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n395  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n397  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n256 -> n401  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n405  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n410  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n411  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n256 -> n416  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n51 -> n54  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n65  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n67  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n68  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n97  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n121  [color=darkseagreen4, key=1, label=time, style=dashed];
n72 -> n323  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n76 -> n78  [color=darkseagreen4, key=1, label=security, style=dashed];
n83 -> n85  [color=darkseagreen4, key=1, label=update, style=dashed];
n132 -> n134  [color=darkseagreen4, key=1, label=dividend, style=dashed];
n135 -> n137  [color=darkseagreen4, key=1, label=split, style=dashed];
n135 -> n138  [color=darkseagreen4, key=1, label=split, style=dashed];
n135 -> n327  [color=darkseagreen4, key=1, label=split, style=dashed];
n135 -> n140  [color=darkseagreen4, key=1, label=split, style=dashed];
n146 -> n149  [color=darkseagreen4, key=1, label=update, style=dashed];
n146 -> n150  [color=darkseagreen4, key=1, label=update, style=dashed];
n159 -> n161  [color=darkseagreen4, key=1, label=update, style=dashed];
n159 -> n162  [color=darkseagreen4, key=1, label=update, style=dashed];
n159 -> n163  [color=darkseagreen4, key=1, label=update, style=dashed];
n183 -> n329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n62 -> n64  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
n84 -> n86  [color=darkseagreen4, key=1, label=security, style=dashed];
n84 -> n87  [color=darkseagreen4, key=1, label=security, style=dashed];
n278 -> n519  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n278 -> n520  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n149 -> n151  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n148 -> n151  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
n148 -> n153  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
n294 -> n541  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n162 -> n164  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n301 -> n491  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n301 -> n492  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n330 -> n330  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
n332 -> n334  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
n337 -> n382  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n337 -> n398  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n338 -> n364  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
n339 -> n364  [color=darkseagreen4, key=1, label=history, style=dashed];
n343 -> n348  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n343 -> n351  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n343 -> n357  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n343 -> n359  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n343 -> n361  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n343 -> n364  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n343 -> n392  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n343 -> n394  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n346 -> n443  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n349 -> n447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n353 -> n353  [color=darkseagreen4, key=1, label=security, style=dashed];
n376 -> n390  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n397 -> n404  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n397 -> n409  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n397 -> n417  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n364 -> n367  [color=darkseagreen4, key=1, label=slice, style=dashed];
n342 -> n402  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n342 -> n405  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n419 -> n469  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n419 -> n473  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n351 -> n353  [color=darkseagreen4, key=1, label=request, style=dashed];
n351 -> n354  [color=darkseagreen4, key=1, label=request, style=dashed];
n357 -> n453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n358 -> n456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n358 -> n459  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n359 -> n462  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n361 -> n363  [color=darkseagreen4, key=1, label=request, style=dashed];
n345 -> n386  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n345 -> n413  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n347 -> n409  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
n350 -> n450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n350 -> n354  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
n369 -> n374  [color=darkseagreen4, key=1, label=data, style=dashed];
n370 -> n373  [color=darkseagreen4, key=1, label=list, style=dashed];
n370 -> n374  [color=darkseagreen4, key=1, label=list, style=dashed];
n371 -> n373  [color=darkseagreen4, key=1, label=ticks, style=dashed];
n391 -> n402  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n391 -> n405  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n383 -> n398  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n387 -> n413  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n404 -> n465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n403 -> n407  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
n444 -> n444  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
n474 -> n476  [color=darkseagreen4, key=1, label=history, style=dashed];
n470 -> n477  [color=darkseagreen4, key=1, label=security, style=dashed];
n470 -> n478  [color=darkseagreen4, key=1, label=security, style=dashed];
n476 -> n478  [color=darkseagreen4, key=1, label=slice, style=dashed];
n483 -> n485  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
n489 -> n491  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n489 -> n501  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n489 -> n492  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n489 -> n493  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n489 -> n494  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n491 -> n500  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n503 -> n520  [color=darkseagreen4, key=1, label=i, style=dashed];
n503 -> n521  [color=darkseagreen4, key=1, label=i, style=dashed];
n505 -> n510  [color=darkseagreen4, key=1, label=security, style=dashed];
n505 -> n512  [color=darkseagreen4, key=1, label=security, style=dashed];
n505 -> n514  [color=darkseagreen4, key=1, label=security, style=dashed];
n521 -> n521  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_21 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m1_21 -> m1_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m1_21 -> m1_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_32 -> m1_37  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_43 -> m1_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_28 -> m1_34  [color=darkseagreen4, key=1, label=normal, style=dashed];
m1_28 -> m1_47  [color=darkseagreen4, key=1, label=normal, style=dashed];
m1_29 -> m1_37  [color=darkseagreen4, key=1, label=invert, style=dashed];
m1_29 -> m1_47  [color=darkseagreen4, key=1, label=invert, style=dashed];
m1_30 -> m1_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_41 -> m1_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_42 -> m1_46  [color=darkseagreen4, key=1, label=currencyPairs, style=dashed];
m1_46 -> m1_51  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_46 -> m1_52  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_9 -> m1_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>", style=dashed];
m1_13 -> m1_13  [color=darkseagreen4, key=1, label=realTimePrice, style=dashed];
m1_75 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m1_75 -> m1_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m1_75 -> m1_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m1_75 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m1_75 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m1_75 -> m1_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_13 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m3_13 -> m3_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m5_13 -> m5_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m5_18 -> m5_23  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_18 -> m5_24  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_21 -> m5_24  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m5_28 -> m5_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m5_28 -> m5_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m10_24 -> m10_27  [color=darkseagreen4, key=1, label=jobject, style=dashed];
m10_24 -> m10_29  [color=darkseagreen4, key=1, label=jobject, style=dashed];
m10_26 -> m10_29  [color=darkseagreen4, key=1, label=underlyingSymbol, style=dashed];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_7  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_8  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_9  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_10  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_11  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_12  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_14  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_15  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_0 -> m10_16  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m10_1 -> m10_8  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m10_1 -> m10_10  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m10_1 -> m10_12  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m10_1 -> m10_13  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m10_1 -> m10_15  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m10_39 -> m10_15  [color=darkseagreen4, key=1, label="QuantConnect.SymbolJsonConverter", style=dashed];
m11_6 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_21 -> m11_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.BrokerageModelSecurityInitializer", style=dashed];
m11_21 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.BrokerageModelSecurityInitializer", style=dashed];
m12_4 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderFinancialAdvisorProperties", style=dashed];
m13_98 -> m13_98  [color=green, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m13_130 -> m13_132  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>", style=dashed];
m13_130 -> m13_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_28 -> m13_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m13_28 -> m13_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m13_28 -> m13_115  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m13_28 -> m13_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m13_28 -> m13_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m13_28 -> m13_70  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m13_36 -> m13_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_36 -> m13_40  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_44 -> m13_97  [color=green, key=1, label="lambda expression", style=dashed];
m13_44 -> m13_100  [color=green, key=1, label="lambda expression", style=dashed];
m13_44 -> m13_103  [color=green, key=1, label="lambda expression", style=dashed];
m13_44 -> m13_106  [color=green, key=1, label="lambda expression", style=dashed];
m13_44 -> m13_46  [color=green, key=1, label=markets, style=dashed];
m13_44 -> m13_47  [color=green, key=1, label=markets, style=dashed];
m13_44 -> m13_48  [color=green, key=1, label=markets, style=dashed];
m13_44 -> m13_111  [color=green, key=1, label=markets, style=dashed];
m13_44 -> m13_115  [color=green, key=1, label=markets, style=dashed];
m13_44 -> m13_118  [color=green, key=1, label=markets, style=dashed];
m13_49 -> m13_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_49 -> m13_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_49 -> m13_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_49 -> m13_52  [color=darkseagreen4, key=1, label=potentials, style=dashed];
m13_50 -> m13_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_56 -> m13_58  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m13_56 -> m13_59  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m13_62 -> m13_70  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_34 -> m13_37  [color=darkseagreen4, key=1, label=normal, style=dashed];
m13_34 -> m13_53  [color=darkseagreen4, key=1, label=normal, style=dashed];
m13_35 -> m13_40  [color=green, key=1, label=invert, style=dashed];
m13_35 -> m13_53  [color=green, key=1, label=invert, style=dashed];
m13_52 -> m13_59  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m13_52 -> m13_71  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m13_55 -> m13_65  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m13_55 -> m13_67  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m13_66 -> m13_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_68 -> m13_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_69 -> m13_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_138 -> m13_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_115  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_118  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_138 -> m13_73  [color=green, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m13_139 -> m13_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m13_139 -> m13_115  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m13_139 -> m13_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m13_140 -> m13_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m13_140 -> m13_115  [color=darkseagreen4, key=1, label=markets, style=dashed];
m13_140 -> m13_118  [color=darkseagreen4, key=1, label=markets, style=dashed];
m16_2 -> m16_14  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m16_2 -> m16_20  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m16_3 -> m16_14  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_3 -> m16_15  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_3 -> m16_16  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_9 -> m16_20  [color=darkseagreen4, key=1, label=account, style=dashed];
m16_10 -> m16_18  [color=darkseagreen4, key=1, label=userId, style=dashed];
m16_11 -> m16_18  [color=darkseagreen4, key=1, label=password, style=dashed];
m16_12 -> m16_17  [color=darkseagreen4, key=1, label=tradingMode, style=dashed];
m16_12 -> m16_16  [color=green, key=1, label=tradingMode, style=dashed];
m16_12 -> m16_18  [color=darkseagreen4, key=1, label=tradingMode, style=dashed];
m16_13 -> m16_20  [color=darkseagreen4, key=1, label=agentDescription, style=dashed];
m16_14 -> m16_20  [color=darkseagreen4, key=1, label=financialAdvisor, style=dashed];
m16_20 -> m16_22  [color=darkseagreen4, key=1, label=ib, style=dashed];
m16_4 -> m16_18  [color=darkseagreen4, key=1, label=useTws, style=dashed];
m16_5 -> m16_20  [color=darkseagreen4, key=1, label=port, style=dashed];
m16_19 -> m16_21  [color=darkseagreen4, key=1, label=ib, style=dashed];
m16_6 -> m16_20  [color=darkseagreen4, key=1, label=host, style=dashed];
m16_7 -> m16_18  [color=darkseagreen4, key=1, label=twsDirectory, style=dashed];
m16_8 -> m16_18  [color=darkseagreen4, key=1, label=ibControllerDirectory, style=dashed];
m17_9 -> m17_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m17_9 -> m17_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m17_18 -> m17_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m17_22 -> m17_28  [color=darkseagreen4, key=1, label=raw, style=dashed];
m17_24 -> m17_30  [color=darkseagreen4, key=1, label=instances, style=dashed];
m17_24 -> m17_31  [color=darkseagreen4, key=1, label=instances, style=dashed];
m17_31 -> m17_33  [color=darkseagreen4, key=1, label=instance, style=dashed];
m17_43 -> m17_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_44 -> m17_46  [color=darkseagreen4, key=1, label=handler, style=dashed];
m17_42 -> m17_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m17_50 -> m17_52  [color=darkseagreen4, key=1, label=handler, style=dashed];
m17_55 -> m17_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m17_55 -> m17_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m17_55 -> m17_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m17_55 -> m17_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m17_55 -> m17_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m20_8 -> m20_11  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_0 -> m20_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m21_4 -> m21_6  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m21_8 -> m21_10  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m21_27 -> m21_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m21_79 -> m21_81  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m21_16 -> m21_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_90 -> m21_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.DefaultBrokerageModel", style=dashed];
m22_4 -> m22_6  [color=green, key=1, label=decimal, style=dashed];
m22_4 -> m22_8  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_4 -> m22_10  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_4 -> m22_16  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_4 -> m22_18  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_15 -> m22_18  [color=green, key=1, label=quantity, style=dashed];
m22_30 -> m22_46  [color=green, key=1, label="lambda expression", style=dashed];
m22_30 -> m22_49  [color=green, key=1, label="lambda expression", style=dashed];
m22_29 -> m22_35  [color=green, key=1, label=executedOrders, style=dashed];
m22_29 -> m22_37  [color=green, key=1, label=executedOrders, style=dashed];
m22_31 -> m22_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_31 -> m22_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_32 -> m22_34  [color=darkseagreen4, key=1, label=request, style=dashed];
m22_33 -> m22_35  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m22_58 -> m22_18  [color=green, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m22_58 -> m22_27  [color=green, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m22_58 -> m22_50  [color=green, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m22_58 -> m22_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m22_58 -> m22_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m23_27 -> m23_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IOrderMapping", style=dashed];
m23_28 -> m23_38  [color=darkseagreen4, key=1, label=errors, style=dashed];
m23_28 -> m23_39  [color=darkseagreen4, key=1, label=errors, style=dashed];
m23_34 -> m23_41  [color=darkseagreen4, key=1, label=account, style=dashed];
m23_35 -> m23_40  [color=darkseagreen4, key=1, label=userID, style=dashed];
m23_36 -> m23_40  [color=darkseagreen4, key=1, label=password, style=dashed];
m23_37 -> m23_41  [color=darkseagreen4, key=1, label=agentDescription, style=dashed];
m23_29 -> m23_40  [color=darkseagreen4, key=1, label=useTws, style=dashed];
m23_30 -> m23_41  [color=darkseagreen4, key=1, label=port, style=dashed];
m23_31 -> m23_41  [color=darkseagreen4, key=1, label=host, style=dashed];
m23_32 -> m23_40  [color=darkseagreen4, key=1, label=twsDirectory, style=dashed];
m23_33 -> m23_40  [color=darkseagreen4, key=1, label=ibControllerDirectory, style=dashed];
m23_2 -> m23_16  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m23_3 -> m23_13  [color=darkseagreen4, key=1, label=errors, style=dashed];
m23_3 -> m23_14  [color=darkseagreen4, key=1, label=errors, style=dashed];
m23_9 -> m23_16  [color=darkseagreen4, key=1, label=account, style=dashed];
m23_10 -> m23_15  [color=darkseagreen4, key=1, label=userID, style=dashed];
m23_11 -> m23_15  [color=darkseagreen4, key=1, label=password, style=dashed];
m23_12 -> m23_16  [color=darkseagreen4, key=1, label=agentDescription, style=dashed];
m23_4 -> m23_15  [color=darkseagreen4, key=1, label=useTws, style=dashed];
m23_5 -> m23_16  [color=darkseagreen4, key=1, label=port, style=dashed];
m23_6 -> m23_16  [color=darkseagreen4, key=1, label=host, style=dashed];
m24_8 -> m24_11  [color=darkseagreen4, key=1, label="System.IDisposable", style=dashed];
m24_8 -> m24_16  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m24_1 -> m24_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_2 -> m25_4  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m25_4 -> m25_6  [color=darkseagreen4, key=1, label=quotec, style=dashed];
m27_41 -> m27_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_41 -> m27_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_41 -> m27_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_41 -> m27_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_63 -> m27_67  [color=darkseagreen4, key=1, label=nextFillForwardTime, style=dashed];
m27_63 -> m27_69  [color=darkseagreen4, key=1, label=nextFillForwardTime, style=dashed];
m27_64 -> m27_67  [color=darkseagreen4, key=1, label=nextFillForwardTime, style=dashed];
m27_64 -> m27_69  [color=darkseagreen4, key=1, label=nextFillForwardTime, style=dashed];
m27_73 -> m27_75  [color=darkseagreen4, key=1, label="out QuantConnect.Data.BaseData", style=dashed];
m27_16 -> m27_18  [color=darkseagreen4, key=1, label=endOfSubscription, style=dashed];
m27_82 -> m27_84  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m27_89 -> m27_9  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_12  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_13  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_14  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m27_89 -> m27_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FillForwardEnumerator", style=dashed];
m28_34 -> m28_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_0 -> m28_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_0 -> m28_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_8 -> m28_36  [color=darkseagreen4, key=1, label=systemHandlers, style=dashed];
m28_9 -> m28_17  [color=darkseagreen4, key=1, label=algorithmHandlers, style=dashed];
m28_10 -> m28_35  [color=darkseagreen4, key=1, label=engine, style=dashed];
m28_11 -> m28_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_41 -> m28_36  [color=darkseagreen4, key=1, label=systemHandlers, style=dashed];
m28_42 -> m28_35  [color=darkseagreen4, key=1, label=engine, style=dashed];
m29_76 -> m29_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_43 -> m29_43  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m29_45 -> m29_47  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m29_50 -> m29_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_62 -> m29_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_62 -> m29_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_61 -> m29_63  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_61 -> m29_64  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_0 -> m29_15  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_19  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_20  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_22  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_23  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_28  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_29  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_30  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m29_0 -> m29_13  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m29_1 -> m29_12  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m29_1 -> m29_13  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m29_5 -> m29_8  [color=darkseagreen4, key=1, label=request, style=dashed];
m29_5 -> m29_9  [color=green, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m29_5 -> m29_11  [color=green, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m29_5 -> m29_7  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m29_23 -> m29_72  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m29_23 -> m29_73  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m29_2 -> m29_11  [color=darkseagreen4, key=1, label=rows, style=dashed];
m29_2 -> m29_13  [color=darkseagreen4, key=1, label=rows, style=dashed];
m29_2 -> m29_17  [color=darkseagreen4, key=1, label=rows, style=dashed];
m29_13 -> m29_13  [color=green, key=1, label=scheduledEvent, style=dashed];
m29_17 -> m29_19  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_20  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_21  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_22  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_23  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_24  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_25  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_26  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_27  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_28  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_29  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_17 -> m29_30  [color=darkseagreen4, key=1, label=row, style=dashed];
m29_6 -> m29_8  [color=darkseagreen4, key=1, label=fileProvider, style=dashed];
m29_8 -> m29_10  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m29_8 -> m29_29  [color=green, key=1, label="System.DateTime", style=dashed];
m29_7 -> m29_7  [color=darkseagreen4, key=1, label=date, style=dashed];
m29_10 -> m29_31  [color=green, key=1, label="lambda expression", style=dashed];
m29_38 -> m29_40  [color=darkseagreen4, key=1, label=time, style=dashed];
m29_38 -> m29_43  [color=darkseagreen4, key=1, label=time, style=dashed];
m29_89 -> m29_9  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_11  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_8  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_29  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_10  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_12  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_37  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_89 -> m29_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m33_21 -> m33_24  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m33_21 -> m33_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m33_21 -> m33_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m33_11 -> m33_14  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m33_11 -> m33_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m33_12 -> m33_15  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m33_89 -> m33_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_89 -> m33_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_85 -> m33_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_85 -> m33_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_6 -> m33_67  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m33_19 -> m33_60  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m33_27 -> m33_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m33_27 -> m33_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m33_27 -> m33_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m33_27 -> m33_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m33_27 -> m33_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m33_27 -> m33_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m33_31 -> m33_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m33_31 -> m33_44  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m33_31 -> m33_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m33_31 -> m33_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m33_31 -> m33_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m33_31 -> m33_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m33_31 -> m33_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m33_31 -> m33_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m33_31 -> m33_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m33_32 -> m33_35  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m33_32 -> m33_41  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m33_30 -> m33_72  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_108 -> m33_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_108 -> m33_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_108 -> m33_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_109 -> m33_112  [color=darkseagreen4, key=1, label=line, style=dashed];
m33_109 -> m33_111  [color=darkseagreen4, key=1, label=line, style=dashed];
m33_109 -> m33_114  [color=darkseagreen4, key=1, label=line, style=dashed];
m33_109 -> m33_115  [color=darkseagreen4, key=1, label=line, style=dashed];
m33_109 -> m33_117  [color=darkseagreen4, key=1, label=line, style=dashed];
m33_109 -> m33_118  [color=darkseagreen4, key=1, label=line, style=dashed];
m33_76 -> m33_79  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m33_124 -> m33_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_14  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_44  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_50  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_69  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_72  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_73  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_74  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m33_124 -> m33_89  [color=darkseagreen4, key=1, label="QuantConnect.Securities.FutureMarginModel", style=dashed];
m34_62 -> m34_83  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m34_78 -> m34_81  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m34_78 -> m34_83  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m34_8 -> m34_18  [color=green, key=1, label=frontier, style=dashed];
m34_8 -> m34_25  [color=darkseagreen4, key=1, label=frontier, style=dashed];
m34_17 -> m34_39  [color=darkseagreen4, key=1, label=newData, style=dashed];
m34_17 -> m34_45  [color=darkseagreen4, key=1, label=newData, style=dashed];
m34_17 -> m34_47  [color=darkseagreen4, key=1, label=newData, style=dashed];
m34_19 -> m34_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_19 -> m34_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_19 -> m34_32  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_19 -> m34_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_19 -> m34_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_7 -> m34_34  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m34_10 -> m34_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_23 -> m34_25  [color=darkseagreen4, key=1, label=result, style=dashed];
m34_23 -> m34_28  [color=darkseagreen4, key=1, label=result, style=dashed];
m34_32 -> m34_42  [color=darkseagreen4, key=1, label=dataPoints, style=dashed];
m34_9 -> m34_51  [color=darkseagreen4, key=1, label=nextEmitTime, style=dashed];
m34_16 -> m34_26  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m34_16 -> m34_29  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m34_16 -> m34_48  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m34_44 -> m34_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_24 -> m34_26  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m34_24 -> m34_29  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m34_33 -> m34_36  [color=darkseagreen4, key=1, label=point, style=dashed];
m34_40 -> m34_42  [color=darkseagreen4, key=1, label=dp, style=dashed];
m34_27 -> m34_48  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m34_27 -> m34_29  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m34_30 -> m34_48  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m34_89 -> m34_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_89 -> m34_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_89 -> m34_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_94 -> m34_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_97 -> m34_18  [color=green, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_13  [color=green, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_15  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m34_97 -> m34_92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataStream", style=dashed];
m35_37 -> m35_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m35_37 -> m35_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m35_252 -> m35_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_252 -> m35_277  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_263 -> m35_275  [color=darkseagreen4, key=1, label=delay, style=dashed];
m35_265 -> m35_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_265 -> m35_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m35_265 -> m35_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m35_191 -> m35_193  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_191 -> m35_209  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_191 -> m35_197  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_191 -> m35_201  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_195 -> m35_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_203 -> m35_206  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m35_199 -> m35_201  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m35_199 -> m35_205  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m35_12 -> m35_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_187 -> m35_187  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m35_209 -> m35_209  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m35_259 -> m35_259  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel>", style=dashed];
m35_276 -> m35_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m35_276 -> m35_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m35_213 -> m35_215  [color=darkseagreen4, key=1, label=response, style=dashed];
m35_77 -> m35_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_118 -> m35_121  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_120 -> m35_127  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_120 -> m35_128  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_120 -> m35_131  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_120 -> m35_132  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_122 -> m35_125  [color=darkseagreen4, key=1, label=side, style=dashed];
m35_122 -> m35_129  [color=darkseagreen4, key=1, label=side, style=dashed];
m35_123 -> m35_127  [color=darkseagreen4, key=1, label=price, style=dashed];
m35_123 -> m35_128  [color=darkseagreen4, key=1, label=price, style=dashed];
m35_123 -> m35_131  [color=darkseagreen4, key=1, label=price, style=dashed];
m35_123 -> m35_132  [color=darkseagreen4, key=1, label=price, style=dashed];
m35_124 -> m35_126  [color=darkseagreen4, key=1, label=size, style=dashed];
m35_124 -> m35_128  [color=darkseagreen4, key=1, label=size, style=dashed];
m35_124 -> m35_130  [color=darkseagreen4, key=1, label=size, style=dashed];
m35_124 -> m35_132  [color=darkseagreen4, key=1, label=size, style=dashed];
m35_82 -> m35_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_140 -> m35_142  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_140 -> m35_187  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_140 -> m35_147  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_140 -> m35_153  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_140 -> m35_156  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_143 -> m35_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_143 -> m35_145  [color=darkseagreen4, key=1, label=cached, style=dashed];
m35_164 -> m35_170  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m35_148 -> m35_150  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m35_148 -> m35_160  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m35_148 -> m35_167  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m35_148 -> m35_169  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m35_149 -> m35_156  [color=darkseagreen4, key=1, label=order, style=dashed];
m35_236 -> m35_238  [color=darkseagreen4, key=1, label=item, style=dashed];
m35_236 -> m35_239  [color=darkseagreen4, key=1, label=item, style=dashed];
m35_241 -> m35_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_36 -> m35_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m35_36 -> m35_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m35_36 -> m35_58  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m35_36 -> m35_63  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m35_36 -> m35_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m35_36 -> m35_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m35_36 -> m35_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m35_47 -> m35_49  [color=darkseagreen4, key=1, label=raw, style=dashed];
m35_47 -> m35_51  [color=darkseagreen4, key=1, label=raw, style=dashed];
m35_47 -> m35_54  [color=darkseagreen4, key=1, label=raw, style=dashed];
m35_47 -> m35_57  [color=darkseagreen4, key=1, label=raw, style=dashed];
m35_47 -> m35_62  [color=darkseagreen4, key=1, label=raw, style=dashed];
m35_47 -> m35_65  [color=darkseagreen4, key=1, label=raw, style=dashed];
m35_47 -> m35_68  [color=darkseagreen4, key=1, label=raw, style=dashed];
m35_283 -> m35_285  [color=darkseagreen4, key=1, label=response, style=dashed];
m35_283 -> m35_290  [color=darkseagreen4, key=1, label=response, style=dashed];
m35_288 -> m35_292  [color=darkseagreen4, key=1, label=rate, style=dashed];
m35_83 -> m35_91  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_83 -> m35_95  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_84 -> m35_86  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_84 -> m35_101  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_86 -> m35_90  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_86 -> m35_94  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_86 -> m35_98  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_86 -> m35_101  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_87 -> m35_94  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_87 -> m35_98  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_87 -> m35_101  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m35_92 -> m35_94  [color=darkseagreen4, key=1, label=price, style=dashed];
m35_96 -> m35_98  [color=darkseagreen4, key=1, label=price, style=dashed];
m35_114 -> m35_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs", style=dashed];
m35_303 -> m35_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_43  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_63  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_115  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_170  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_224  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_231  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_239  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_247  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_248  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_269  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_272  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_274  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_277  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_290  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_303 -> m35_300  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m35_304 -> m35_187  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_305 -> m35_209  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_306 -> m35_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_306 -> m35_277  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_307 -> m35_275  [color=darkseagreen4, key=1, label=delay, style=dashed];
m35_308 -> m35_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m35_308 -> m35_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m36_5 -> m36_42  [color=green, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_45  [color=green, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_16  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_17  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_21  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_23  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_25  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_26  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_28  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_29  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_37  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_48  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_57  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_210  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_74  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_102  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_5 -> m36_103  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_9 -> m36_121  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m36_9 -> m36_122  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m36_13 -> m36_117  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m36_13 -> m36_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m36_190 -> m36_192  [color=darkseagreen4, key=1, label=int, style=dashed];
m36_196 -> m36_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m36_196 -> m36_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m36_40 -> m36_42  [color=green, key=1, label=runtimeMessage, style=dashed];
m36_43 -> m36_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAXBrokerageModel", style=dashed];
m36_21 -> m36_45  [color=green, key=1, label=algorithm, style=dashed];
m36_21 -> m36_46  [color=green, key=1, label=algorithm, style=dashed];
m36_21 -> m36_23  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_25  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_26  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_191  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_28  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_29  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_31  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_33  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_47  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_48  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_197  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_201  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_203  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_210  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_63  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_64  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_93  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_94  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_95  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_97  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_21 -> m36_103  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_29 -> m36_43  [color=green, key=1, label=initializeComplete, style=dashed];
m36_29 -> m36_31  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m36_32 -> m36_43  [color=green, key=1, label=initializeComplete, style=dashed];
m36_100 -> m36_102  [color=darkseagreen4, key=1, label=totalSeconds, style=dashed];
m36_18 -> m36_119  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m36_18 -> m36_120  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m36_18 -> m36_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m36_18 -> m36_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m36_18 -> m36_29  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m36_18 -> m36_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m36_23 -> m36_47  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m36_23 -> m36_29  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m36_23 -> m36_28  [color=darkseagreen4, key=1, label=factory, style=dashed];
m36_23 -> m36_123  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m36_23 -> m36_125  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m36_23 -> m36_23  [color=darkseagreen4, key=1, label=minimumOrderSize, style=dashed];
m36_26 -> m36_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_34 -> m36_37  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m36_34 -> m36_34  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m36_34 -> m36_36  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m36_51 -> m36_54  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m36_51 -> m36_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m36_51 -> m36_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m36_52 -> m36_55  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m36_52 -> m36_117  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m36_52 -> m36_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m36_53 -> m36_56  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m36_59 -> m36_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_76 -> m36_85  [color=darkseagreen4, key=1, label=charts, style=dashed];
m36_77 -> m36_103  [color=darkseagreen4, key=1, label=orders, style=dashed];
m36_91 -> m36_103  [color=darkseagreen4, key=1, label=statisticsResults, style=dashed];
m36_92 -> m36_96  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
m36_49 -> m36_197  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m36_49 -> m36_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m36_49 -> m36_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m36_89 -> m36_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_15 -> m36_17  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m36_58 -> m36_210  [color=darkseagreen4, key=1, label=isolator, style=dashed];
m36_70 -> m36_72  [color=darkseagreen4, key=1, label=message, style=dashed];
m36_70 -> m36_73  [color=darkseagreen4, key=1, label=message, style=dashed];
m36_70 -> m36_74  [color=darkseagreen4, key=1, label=message, style=dashed];
m36_78 -> m36_103  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m36_79 -> m36_103  [color=darkseagreen4, key=1, label=banner, style=dashed];
m36_79 -> m36_93  [color=darkseagreen4, key=1, label=banner, style=dashed];
m36_79 -> m36_94  [color=darkseagreen4, key=1, label=banner, style=dashed];
m36_79 -> m36_95  [color=darkseagreen4, key=1, label=banner, style=dashed];
m36_79 -> m36_97  [color=darkseagreen4, key=1, label=banner, style=dashed];
m36_79 -> m36_96  [color=darkseagreen4, key=1, label=banner, style=dashed];
m36_80 -> m36_103  [color=darkseagreen4, key=1, label=statisticsResults, style=dashed];
m36_81 -> m36_85  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m36_82 -> m36_85  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m36_83 -> m36_85  [color=darkseagreen4, key=1, label=dailyPerformanceKey, style=dashed];
m36_12 -> m36_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m36_12 -> m36_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m36_224 -> m36_42  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_192  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_106  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_112  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_126  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_224 -> m36_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m36_225 -> m36_210  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_225 -> m36_191  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_225 -> m36_197  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_225 -> m36_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_225 -> m36_201  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_225 -> m36_203  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m36_226 -> m36_210  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m36_227 -> m36_210  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m36_227 -> m36_214  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m36_228 -> m36_210  [color=darkseagreen4, key=1, label=isolator, style=dashed];
m37_35 -> m37_39  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m37_0 -> m37_5  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_0 -> m37_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_18 -> m37_22  [color=darkseagreen4, key=1, label=bool, style=dashed];
m37_18 -> m37_24  [color=darkseagreen4, key=1, label=bool, style=dashed];
m37_21 -> m37_24  [color=darkseagreen4, key=1, label=order, style=dashed];
m37_29 -> m37_33  [color=darkseagreen4, key=1, label=bool, style=dashed];
m37_41 -> m37_45  [color=darkseagreen4, key=1, label=bool, style=dashed];
m37_43 -> m37_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_70 -> m37_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m37_70 -> m37_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m37_70 -> m37_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m37_70 -> m37_39  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m37_70 -> m37_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m38_13 -> m38_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m38_13 -> m38_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m38_13 -> m38_19  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m38_16 -> m38_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_16 -> m38_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_17 -> m38_19  [color=darkseagreen4, key=1, label=ols, style=dashed];
m38_1 -> m38_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_40 -> m38_14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.LeastSquaresMovingAverage", style=dashed];
m38_40 -> m38_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.LeastSquaresMovingAverage", style=dashed];
m38_40 -> m38_19  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.LeastSquaresMovingAverage", style=dashed];
m38_40 -> m38_20  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.LeastSquaresMovingAverage", style=dashed];
m38_40 -> m38_34  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.LeastSquaresMovingAverage", style=dashed];
m38_40 -> m38_35  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.LeastSquaresMovingAverage", style=dashed];
m38_40 -> m38_36  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.LeastSquaresMovingAverage", style=dashed];
m39_27 -> m39_30  [color=darkseagreen4, key=1, label=value, style=dashed];
m39_5 -> m39_13  [color=darkseagreen4, key=1, label=holding, style=dashed];
m39_5 -> m39_15  [color=darkseagreen4, key=1, label=holding, style=dashed];
m39_40 -> m39_28  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m40_77 -> m40_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_77 -> m40_85  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m40_77 -> m40_86  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m40_77 -> m40_87  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m40_80 -> m40_84  [color=darkseagreen4, key=1, label=environment, style=dashed];
m40_83 -> m40_85  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m40_83 -> m40_87  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m40_38 -> m40_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_53 -> m40_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_53 -> m40_65  [color=darkseagreen4, key=1, label=T, style=dashed];
m40_67 -> m40_69  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_67 -> m40_70  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_66 -> m40_68  [color=darkseagreen4, key=1, label=type, style=dashed];
m40_66 -> m40_69  [color=darkseagreen4, key=1, label=type, style=dashed];
m40_66 -> m40_70  [color=darkseagreen4, key=1, label=type, style=dashed];
m40_10 -> m40_15  [color=darkseagreen4, key=1, label=environments, style=dashed];
m40_10 -> m40_20  [color=darkseagreen4, key=1, label=environments, style=dashed];
m40_11 -> m40_13  [color=darkseagreen4, key=1, label=currentEnvironment, style=dashed];
m40_26 -> m40_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_26 -> m40_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_29 -> m40_33  [color=green, key=1, label=token, style=dashed];
m42_18 -> m42_21  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m42_18 -> m42_23  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m42_18 -> m42_25  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m42_18 -> m42_27  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m42_18 -> m42_29  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m42_18 -> m42_31  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m42_18 -> m42_33  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m43_7 -> m43_9  [color=darkseagreen4, key=1, label=T, style=dashed];
m43_28 -> m43_30  [color=darkseagreen4, key=1, label=item, style=dashed];
m43_23 -> m43_25  [color=darkseagreen4, key=1, label="out T", style=dashed];
m43_43 -> m43_8  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m43_43 -> m43_9  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m43_43 -> m43_10  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m43_43 -> m43_11  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m43_43 -> m43_20  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m43_43 -> m43_29  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m43_43 -> m43_33  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m43_43 -> m43_37  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m43_43 -> m43_41  [color=darkseagreen4, key=1, label="QuantConnect.Util.FixedSizeHashQueue<T>", style=dashed];
m44_19 -> m44_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_9 -> m45_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory", style=dashed];
m48_12 -> m48_16  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_12 -> m48_24  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_12 -> m48_25  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_12 -> m48_26  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_12 -> m48_27  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_12 -> m48_28  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_12 -> m48_29  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_12 -> m48_30  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_12 -> m48_31  [color=darkseagreen4, key=1, label=insight, style=dashed];
m48_15 -> m48_24  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m48_15 -> m48_25  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m48_15 -> m48_26  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m48_15 -> m48_27  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m48_15 -> m48_28  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m48_15 -> m48_29  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m48_15 -> m48_30  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m48_15 -> m48_31  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m48_11 -> m48_13  [color=darkseagreen4, key=1, label=price, style=dashed];
m48_14 -> m48_16  [color=darkseagreen4, key=1, label=price, style=dashed];
m48_0 -> m48_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m48_0 -> m48_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m48_0 -> m48_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m48_0 -> m48_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m48_0 -> m48_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m48_0 -> m48_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m48_1 -> m48_7  [color=darkseagreen4, key=1, label=low, style=dashed];
m48_1 -> m48_24  [color=darkseagreen4, key=1, label=low, style=dashed];
m48_1 -> m48_4  [color=darkseagreen4, key=1, label=one, style=dashed];
m48_1 -> m48_3  [color=darkseagreen4, key=1, label=one, style=dashed];
m48_2 -> m48_7  [color=darkseagreen4, key=1, label=high, style=dashed];
m48_2 -> m48_24  [color=darkseagreen4, key=1, label=high, style=dashed];
m48_2 -> m48_5  [color=darkseagreen4, key=1, label=two, style=dashed];
m48_3 -> m48_7  [color=darkseagreen4, key=1, label=open, style=dashed];
m48_3 -> m48_24  [color=darkseagreen4, key=1, label=open, style=dashed];
m48_4 -> m48_7  [color=darkseagreen4, key=1, label=close, style=dashed];
m48_4 -> m48_24  [color=darkseagreen4, key=1, label=close, style=dashed];
m48_5 -> m48_7  [color=darkseagreen4, key=1, label=current, style=dashed];
m48_5 -> m48_24  [color=darkseagreen4, key=1, label=current, style=dashed];
m48_8 -> m48_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_8 -> m48_10  [color=darkseagreen4, key=1, label=subscriptionTypes, style=dashed];
m48_69 -> m48_75  [color=darkseagreen4, key=1, label=insight1, style=dashed];
m48_69 -> m48_71  [color=darkseagreen4, key=1, label=insight1, style=dashed];
m48_71 -> m48_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_40 -> m48_44  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_46  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_47  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_48  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_49  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_50  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_51  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_52  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_53  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_55  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_56  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_57  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_58  [color=green, key=1, label=original, style=dashed];
m48_40 -> m48_43  [color=darkseagreen4, key=1, label=original, style=dashed];
m48_40 -> m48_45  [color=darkseagreen4, key=1, label=original, style=dashed];
m48_40 -> m48_54  [color=darkseagreen4, key=1, label=original, style=dashed];
m48_42 -> m48_44  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_46  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_47  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_48  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_49  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_50  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_51  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_52  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_53  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_55  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_56  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_57  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_58  [color=green, key=1, label=copy, style=dashed];
m48_42 -> m48_45  [color=darkseagreen4, key=1, label=copy, style=dashed];
m48_42 -> m48_54  [color=darkseagreen4, key=1, label=copy, style=dashed];
m48_62 -> m48_65  [color=darkseagreen4, key=1, label=insight1, style=dashed];
m48_64 -> m48_66  [color=darkseagreen4, key=1, label=groupId, style=dashed];
m48_63 -> m48_66  [color=darkseagreen4, key=1, label=insight2, style=dashed];
m48_77 -> m48_75  [color=darkseagreen4, key=1, label=insight1, style=dashed];
m49_10 -> m49_12  [color=green, key=1, label=cryptoSecurity, style=dashed];
m49_13 -> m49_15  [color=green, key=1, label=price, style=dashed];
m49_13 -> m49_16  [color=green, key=1, label=price, style=dashed];
m49_13 -> m49_17  [color=green, key=1, label=price, style=dashed];
m49_13 -> m49_18  [color=green, key=1, label=price, style=dashed];
m49_38 -> m49_34  [color=green, key=1, label="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel", style=dashed];
m50_148 -> m50_346  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m50_7 -> m50_10  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m50_7 -> m50_12  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_7 -> m50_25  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_7 -> m50_55  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_7 -> m50_74  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_7 -> m50_105  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_7 -> m50_107  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_7 -> m50_138  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_7 -> m50_139  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m50_7 -> m50_140  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m50_8 -> m50_15  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_19  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_31  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_33  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_39  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_42  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_60  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_66  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_78  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_80  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_82  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_87  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_90  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_93  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_104  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_111  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_113  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_115  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_120  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_123  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_8 -> m50_126  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m50_9 -> m50_23  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_9 -> m50_48  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_9 -> m50_51  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_9 -> m50_72  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_9 -> m50_98  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_9 -> m50_101  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_9 -> m50_131  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_9 -> m50_134  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_9 -> m50_137  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m50_27 -> m50_30  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_27 -> m50_31  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_27 -> m50_32  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_27 -> m50_33  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_37 -> m50_39  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m50_40 -> m50_42  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m50_46 -> m50_48  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m50_49 -> m50_51  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m50_57 -> m50_60  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_63 -> m50_66  [color=darkseagreen4, key=1, label=bar, style=dashed];
m50_69 -> m50_72  [color=darkseagreen4, key=1, label=bigBar, style=dashed];
m50_76 -> m50_78  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_76 -> m50_79  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_76 -> m50_80  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_76 -> m50_81  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_76 -> m50_82  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_85 -> m50_87  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m50_88 -> m50_90  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m50_91 -> m50_93  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m50_96 -> m50_98  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m50_99 -> m50_101  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m50_102 -> m50_104  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m50_109 -> m50_111  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_109 -> m50_112  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_109 -> m50_113  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_109 -> m50_114  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_109 -> m50_115  [color=darkseagreen4, key=1, label=tick, style=dashed];
m50_118 -> m50_120  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m50_121 -> m50_123  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m50_124 -> m50_126  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m50_129 -> m50_131  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m50_132 -> m50_134  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m50_135 -> m50_137  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m50_149 -> m50_342  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m50_145 -> m50_331  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m50_145 -> m50_336  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m50_330 -> m50_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m50_335 -> m50_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m50_152 -> m50_155  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m50_152 -> m50_157  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m50_348 -> m50_351  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m50_348 -> m50_353  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m50_348 -> m50_355  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m50_348 -> m50_357  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m50_348 -> m50_358  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m50_205 -> m50_254  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_205 -> m50_260  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_205 -> m50_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_205 -> m50_268  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_205 -> m50_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_205 -> m50_272  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_251 -> m50_261  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m50_251 -> m50_264  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m50_251 -> m50_265  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m50_251 -> m50_268  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m50_251 -> m50_269  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m50_251 -> m50_272  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m50_251 -> m50_273  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m50_252 -> m50_261  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m50_252 -> m50_265  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m50_252 -> m50_269  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m50_252 -> m50_273  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m50_253 -> m50_259  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_253 -> m50_263  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_253 -> m50_267  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_253 -> m50_271  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_368 -> m50_405  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_368 -> m50_383  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_365 -> m50_386  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m50_366 -> m50_369  [color=darkseagreen4, key=1, label=pathSeparators, style=dashed];
m50_367 -> m50_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m50_367 -> m50_408  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m50_369 -> m50_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m50_372 -> m50_407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m50_370 -> m50_383  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_375 -> m50_379  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m50_375 -> m50_386  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m50_380 -> m50_386  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m50_381 -> m50_386  [color=darkseagreen4, key=1, label="out QuantConnect.Symbol", style=dashed];
m50_241 -> m50_245  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_241 -> m50_247  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m50_241 -> m50_249  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m50_244 -> m50_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_244 -> m50_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_211 -> m50_280  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_281 -> m50_284  [color=darkseagreen4, key=1, label=zipFileName, style=dashed];
m50_291 -> m50_294  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_292 -> m50_296  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m50_292 -> m50_308  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m50_174 -> m50_207  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_174 -> m50_209  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_206 -> m50_209  [color=darkseagreen4, key=1, label=directory, style=dashed];
m50_0 -> m50_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_1 -> m50_3  [color=darkseagreen4, key=1, label=clone, style=dashed];
m50_212 -> m50_215  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_212 -> m50_221  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_212 -> m50_222  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_212 -> m50_224  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_212 -> m50_225  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_212 -> m50_228  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_212 -> m50_229  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_212 -> m50_232  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_212 -> m50_233  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_213 -> m50_222  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m50_213 -> m50_225  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m50_213 -> m50_229  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m50_213 -> m50_233  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m50_214 -> m50_223  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_214 -> m50_227  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_214 -> m50_231  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_175 -> m50_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_175 -> m50_187  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_175 -> m50_189  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_175 -> m50_191  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_176 -> m50_187  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_176 -> m50_189  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_176 -> m50_191  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m50_180 -> m50_187  [color=darkseagreen4, key=1, label=directory, style=dashed];
m50_180 -> m50_189  [color=darkseagreen4, key=1, label=directory, style=dashed];
m50_180 -> m50_191  [color=darkseagreen4, key=1, label=directory, style=dashed];
m50_411 -> m50_405  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_412 -> m50_408  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m51_24 -> m51_26  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m51_24 -> m51_28  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_24 -> m51_30  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_24 -> m51_31  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_12 -> m51_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_12 -> m51_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_12 -> m51_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_12 -> m51_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_12 -> m51_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_14 -> m51_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_14 -> m51_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_15 -> m51_40  [color=green, key=1, label="lambda expression", style=dashed];
m51_15 -> m51_41  [color=green, key=1, label=securityType, style=dashed];
m51_67 -> m51_41  [color=darkseagreen4, key=1, label=market, style=dashed];
m51_33 -> m51_35  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m51_33 -> m51_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_33 -> m51_37  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_33 -> m51_39  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_33 -> m51_40  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_55 -> m51_59  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m51_56 -> m51_59  [color=darkseagreen4, key=1, label=csv, style=dashed];
m51_56 -> m51_60  [color=darkseagreen4, key=1, label=csv, style=dashed];
m51_56 -> m51_62  [color=darkseagreen4, key=1, label=csv, style=dashed];
m51_56 -> m51_63  [color=darkseagreen4, key=1, label=csv, style=dashed];
m51_56 -> m51_64  [color=darkseagreen4, key=1, label=csv, style=dashed];
m51_66 -> m51_41  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m51_103 -> m51_105  [color=darkseagreen4, key=1, label=bool, style=dashed];
m51_103 -> m51_108  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m51_68 -> m51_41  [color=darkseagreen4, key=1, label=name, style=dashed];
m51_98 -> m51_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m51_71 -> m51_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m51_72 -> m51_81  [color=darkseagreen4, key=1, label=csv, style=dashed];
m51_138 -> m51_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_59  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_61  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_133  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m51_138 -> m51_136  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m55_449 -> m55_451  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_449 -> m55_452  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_449 -> m55_453  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_449 -> m55_454  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_439 -> m55_441  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_439 -> m55_442  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_439 -> m55_443  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_348 -> m55_350  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_348 -> m55_351  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_348 -> m55_352  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_428 -> m55_430  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_428 -> m55_431  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_428 -> m55_432  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_428 -> m55_433  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_239 -> m55_241  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_239 -> m55_242  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_149 -> m55_151  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_149 -> m55_152  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_418 -> m55_420  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_418 -> m55_421  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_418 -> m55_422  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_358 -> m55_360  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_358 -> m55_361  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_358 -> m55_362  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_104 -> m55_106  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_104 -> m55_107  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_221 -> m55_223  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_221 -> m55_224  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_408 -> m55_410  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_408 -> m55_411  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_408 -> m55_412  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_398 -> m55_400  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_398 -> m55_401  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_398 -> m55_402  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_303 -> m55_305  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_303 -> m55_306  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_248 -> m55_250  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_248 -> m55_251  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_8 -> m55_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m55_8 -> m55_13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m55_294 -> m55_296  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_294 -> m55_297  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_321 -> m55_323  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_321 -> m55_324  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_212 -> m55_214  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_212 -> m55_215  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_312 -> m55_314  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_312 -> m55_315  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_469 -> m55_471  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_469 -> m55_472  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_122 -> m55_124  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_122 -> m55_125  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_95 -> m55_97  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_95 -> m55_98  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_140 -> m55_142  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_140 -> m55_143  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_68 -> m55_70  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_68 -> m55_71  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_496 -> m55_498  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_496 -> m55_499  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_131 -> m55_133  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_131 -> m55_134  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_460 -> m55_462  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_460 -> m55_463  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_460 -> m55_464  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_508 -> m55_510  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_514  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_515  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_516  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_517  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_518  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_519  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_520  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_521  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_522  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_523  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_524  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_525  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_526  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_527  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_528  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_529  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_530  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_531  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_532  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_533  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_534  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_535  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_536  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_537  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_538  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_539  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_540  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_541  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_542  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_543  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_544  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_545  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_546  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_547  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_548  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_549  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_508 -> m55_551  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_511 -> m55_514  [color=darkseagreen4, key=1, label=mock, style=dashed];
m55_511 -> m55_513  [color=darkseagreen4, key=1, label=mock, style=dashed];
m55_513 -> m55_592  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m55_18 -> m55_20  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m55_20 -> m55_22  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_257 -> m55_259  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_257 -> m55_260  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_2 -> m55_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_285 -> m55_287  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_285 -> m55_288  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_77 -> m55_79  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_77 -> m55_80  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_11 -> m55_13  [color=darkseagreen4, key=1, label=macd, style=dashed];
m55_11 -> m55_14  [color=darkseagreen4, key=1, label=macd, style=dashed];
m55_13 -> m55_15  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_7 -> m55_602  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m55_597 -> m55_599  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_597 -> m55_603  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_601 -> m55_604  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.Security", style=dashed];
m55_378 -> m55_380  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_378 -> m55_381  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_378 -> m55_382  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_230 -> m55_232  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_230 -> m55_233  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_388 -> m55_390  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_388 -> m55_391  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_388 -> m55_392  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_203 -> m55_205  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_203 -> m55_206  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_48 -> m55_50  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_48 -> m55_51  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_185 -> m55_187  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_185 -> m55_188  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_167 -> m55_169  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_167 -> m55_170  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_25 -> m55_3  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_5  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_19  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_20  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_21  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_25 -> m55_22  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m55_176 -> m55_178  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_176 -> m55_179  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_330 -> m55_332  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_330 -> m55_333  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_276 -> m55_278  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_276 -> m55_279  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_194 -> m55_196  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_194 -> m55_197  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_113 -> m55_115  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_113 -> m55_116  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_266 -> m55_268  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_266 -> m55_269  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_368 -> m55_370  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_368 -> m55_371  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_368 -> m55_372  [color=darkseagreen4, key=1, label=msft, style=dashed];
m55_339 -> m55_341  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_339 -> m55_342  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_86 -> m55_88  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_86 -> m55_89  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_158 -> m55_160  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_158 -> m55_161  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_485 -> m55_487  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_485 -> m55_488  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_59 -> m55_61  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_59 -> m55_62  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_606 -> m55_608  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_606 -> m55_612  [color=darkseagreen4, key=1, label=algo, style=dashed];
m55_610 -> m55_613  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.Security", style=dashed];
m55_619 -> m55_20  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_28  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_42  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_60  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_69  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_87  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_114  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_123  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_132  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_150  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_159  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_168  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_177  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_186  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_204  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_213  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_222  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_231  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_258  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_267  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_277  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_286  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_295  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_304  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_313  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_322  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_331  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_340  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_349  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_352  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_359  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_362  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_369  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_372  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_379  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_382  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_389  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_392  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_399  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_402  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_409  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_412  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_419  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_422  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_429  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_432  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_440  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_443  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_450  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_453  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_461  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_464  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_475  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_491  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_502  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m55_619 -> m55_509  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m56_24 -> m56_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m56_47 -> m56_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData>", style=dashed];
m56_39 -> m56_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m56_40 -> m56_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_41 -> m56_41  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m56_31 -> m56_33  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m56_31 -> m56_34  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m56_3 -> m56_1  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m56_8 -> m56_25  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m56_8 -> m56_26  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m56_8 -> m56_13  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m56_57 -> m56_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_57 -> m56_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm", style=dashed];
m56_58 -> m56_25  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m56_58 -> m56_26  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m56_59 -> m56_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MultipleSymbolConsolidationAlgorithm.SymbolData", style=dashed];
m57_7 -> m57_9  [color=darkseagreen4, key=1, label=actual, style=dashed];
m57_6 -> m57_8  [color=darkseagreen4, key=1, label=expected, style=dashed];
m57_8 -> m57_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m57_9 -> m57_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_47 -> m59_51  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m59_47 -> m59_53  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m59_61 -> m59_65  [color=darkseagreen4, key=1, label=underlyingValueRatio, style=dashed];
m59_8 -> m59_11  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m59_21 -> m59_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m59_21 -> m59_24  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m59_21 -> m59_26  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m59_21 -> m59_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m59_21 -> m59_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m59_21 -> m59_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m59_21 -> m59_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m59_21 -> m59_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m59_21 -> m59_37  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m59_22 -> m59_25  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m59_22 -> m59_31  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m59_68 -> m59_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionMarginModel", style=dashed];
m59_68 -> m59_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionMarginModel", style=dashed];
m59_68 -> m59_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionMarginModel", style=dashed];
m59_68 -> m59_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionMarginModel", style=dashed];
m59_68 -> m59_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionMarginModel", style=dashed];
m59_68 -> m59_45  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionMarginModel", style=dashed];
m59_68 -> m59_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionMarginModel", style=dashed];
m60_86 -> m60_94  [color=darkseagreen4, key=1, label=price, style=dashed];
m60_91 -> m60_94  [color=darkseagreen4, key=1, label=optionCall, style=dashed];
m60_28 -> m60_31  [color=darkseagreen4, key=1, label=optionPut, style=dashed];
m60_32 -> m60_35  [color=darkseagreen4, key=1, label=optionCall, style=dashed];
m60_73 -> m60_81  [color=darkseagreen4, key=1, label=price, style=dashed];
m60_78 -> m60_81  [color=darkseagreen4, key=1, label=optionPut, style=dashed];
m60_60 -> m60_68  [color=darkseagreen4, key=1, label=price, style=dashed];
m60_65 -> m60_68  [color=darkseagreen4, key=1, label=optionCall, style=dashed];
m60_99 -> m60_108  [color=darkseagreen4, key=1, label=price, style=dashed];
m60_105 -> m60_108  [color=darkseagreen4, key=1, label=optionPut, style=dashed];
m60_47 -> m60_55  [color=darkseagreen4, key=1, label=price, style=dashed];
m60_52 -> m60_55  [color=darkseagreen4, key=1, label=optionCall, style=dashed];
m60_115 -> m60_126  [color=darkseagreen4, key=1, label=optionPriceStart, style=dashed];
m60_123 -> m60_126  [color=darkseagreen4, key=1, label=optionPut, style=dashed];
m61_56 -> m61_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m61_4 -> m61_6  [color=darkseagreen4, key=1, label=option, style=dashed];
m61_6 -> m61_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_22 -> m61_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m61_33 -> m61_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_33 -> m61_35  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m61_33 -> m61_36  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m61_33 -> m61_37  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m61_27 -> m61_29  [color=darkseagreen4, key=1, label=contract, style=dashed];
m61_27 -> m61_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_27 -> m61_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_63 -> m61_1  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m61_63 -> m61_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", style=dashed];
m64_14 -> m64_17  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_14 -> m64_18  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_14 -> m64_20  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_14 -> m64_21  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_15 -> m64_17  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_15 -> m64_18  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_19 -> m64_21  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_19 -> m64_22  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_119 -> m64_124  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m64_119 -> m64_129  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m64_125 -> m64_127  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_130 -> m64_132  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_118 -> m64_124  [color=darkseagreen4, key=1, label=securityPrice, style=dashed];
m64_118 -> m64_129  [color=darkseagreen4, key=1, label=securityPrice, style=dashed];
m64_111 -> m64_136  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IOrderProcessor", style=dashed];
m64_111 -> m64_138  [color=darkseagreen4, key=1, label=int, style=dashed];
m64_137 -> m64_139  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m64_31 -> m64_33  [color=green, key=1, label=security, style=dashed];
m64_31 -> m64_34  [color=green, key=1, label=security, style=dashed];
m64_30 -> m64_33  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_30 -> m64_34  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_32 -> m64_34  [color=darkseagreen4, key=1, label=order, style=dashed];
m64_29 -> m64_34  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_28 -> m64_33  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m64_95 -> m64_100  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m64_95 -> m64_105  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m64_94 -> m64_100  [color=darkseagreen4, key=1, label=securityPrice, style=dashed];
m64_94 -> m64_105  [color=darkseagreen4, key=1, label=securityPrice, style=dashed];
m64_101 -> m64_103  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_106 -> m64_108  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_50 -> m64_53  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_50 -> m64_54  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_50 -> m64_57  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_50 -> m64_58  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_50 -> m64_61  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_50 -> m64_62  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_51 -> m64_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_51 -> m64_54  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_55 -> m64_57  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_55 -> m64_58  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_59 -> m64_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_59 -> m64_62  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_49 -> m64_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_49 -> m64_58  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_49 -> m64_62  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_52 -> m64_54  [color=darkseagreen4, key=1, label=order, style=dashed];
m64_56 -> m64_58  [color=darkseagreen4, key=1, label=order, style=dashed];
m64_60 -> m64_62  [color=darkseagreen4, key=1, label=order, style=dashed];
m64_48 -> m64_53  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m64_48 -> m64_57  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m64_48 -> m64_61  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m64_82 -> m64_85  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_82 -> m64_88  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_83 -> m64_85  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_86 -> m64_88  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_9 -> m64_148  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m64_9 -> m64_149  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m64_9 -> m64_151  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m64_147 -> m64_149  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_147 -> m64_150  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_147 -> m64_151  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_147 -> m64_152  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_42 -> m64_44  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_42 -> m64_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_41 -> m64_44  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_41 -> m64_45  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_43 -> m64_45  [color=darkseagreen4, key=1, label=order, style=dashed];
m64_39 -> m64_44  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m64_40 -> m64_45  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_166 -> m64_174  [color=darkseagreen4, key=1, label=sunday, style=dashed];
m64_174 -> m64_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m64_174 -> m64_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m64_167 -> m64_174  [color=darkseagreen4, key=1, label=monday, style=dashed];
m64_168 -> m64_174  [color=darkseagreen4, key=1, label=tuesday, style=dashed];
m64_169 -> m64_174  [color=darkseagreen4, key=1, label=wednesday, style=dashed];
m64_170 -> m64_174  [color=darkseagreen4, key=1, label=thursday, style=dashed];
m64_171 -> m64_174  [color=darkseagreen4, key=1, label=friday, style=dashed];
m64_172 -> m64_174  [color=darkseagreen4, key=1, label=saturday, style=dashed];
m64_68 -> m64_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_68 -> m64_71  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_72 -> m64_74  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_72 -> m64_75  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_76 -> m64_78  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_76 -> m64_79  [color=darkseagreen4, key=1, label=security, style=dashed];
m64_67 -> m64_70  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_67 -> m64_74  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_67 -> m64_78  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_67 -> m64_71  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_67 -> m64_75  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_67 -> m64_79  [color=darkseagreen4, key=1, label=model, style=dashed];
m64_69 -> m64_71  [color=darkseagreen4, key=1, label=order, style=dashed];
m64_73 -> m64_75  [color=darkseagreen4, key=1, label=order, style=dashed];
m64_77 -> m64_79  [color=darkseagreen4, key=1, label=order, style=dashed];
m64_65 -> m64_70  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m64_65 -> m64_74  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m64_65 -> m64_78  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m64_66 -> m64_71  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_66 -> m64_75  [color=darkseagreen4, key=1, label=expected, style=dashed];
m64_66 -> m64_79  [color=darkseagreen4, key=1, label=expected, style=dashed];
m67_79 -> m67_81  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m67_79 -> m67_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m67_80 -> m67_82  [color=darkseagreen4, key=1, label=day, style=dashed];
m67_80 -> m67_83  [color=darkseagreen4, key=1, label=day, style=dashed];
m67_33 -> m67_33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m67_1 -> m67_135  [color=darkseagreen4, key=1, label="QuantConnect.Time.DateTimeWithZone", style=dashed];
m67_2 -> m67_135  [color=darkseagreen4, key=1, label="QuantConnect.Time.DateTimeWithZone", style=dashed];
m67_28 -> m67_28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m67_5 -> m67_9  [color=darkseagreen4, key=1, label=double, style=dashed];
m67_42 -> m67_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_42 -> m67_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_42 -> m67_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_42 -> m67_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_42 -> m67_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_68 -> m67_70  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m67_68 -> m67_71  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m67_69 -> m67_71  [color=darkseagreen4, key=1, label=day, style=dashed];
m67_69 -> m67_72  [color=darkseagreen4, key=1, label=day, style=dashed];
m67_110 -> m67_112  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m67_110 -> m67_113  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m67_110 -> m67_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m67_111 -> m67_115  [color=darkseagreen4, key=1, label=count, style=dashed];
m67_111 -> m67_118  [color=darkseagreen4, key=1, label=count, style=dashed];
m67_115 -> m67_115  [color=darkseagreen4, key=1, label=count, style=dashed];
m67_115 -> m67_118  [color=darkseagreen4, key=1, label=count, style=dashed];
m67_61 -> m67_63  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m67_62 -> m67_64  [color=darkseagreen4, key=1, label=day, style=dashed];
m67_15 -> m67_19  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m67_75 -> m67_103  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m67_121 -> m67_126  [color=darkseagreen4, key=1, label=int, style=dashed];
m67_121 -> m67_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m67_124 -> m67_131  [color=darkseagreen4, key=1, label=current, style=dashed];
m67_128 -> m67_131  [color=darkseagreen4, key=1, label=current, style=dashed];
m67_125 -> m67_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m67_127 -> m67_129  [color=darkseagreen4, key=1, label=previous, style=dashed];
m67_130 -> m67_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m67_87 -> m67_93  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m67_87 -> m67_96  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m67_88 -> m67_90  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m67_88 -> m67_96  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m67_89 -> m67_93  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m67_91 -> m67_97  [color=darkseagreen4, key=1, label=currentInTimeZone, style=dashed];
m69_361 -> m69_363  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_361 -> m69_365  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_361 -> m69_366  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_361 -> m69_370  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_361 -> m69_371  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_362 -> m69_369  [color=darkseagreen4, key=1, label=dict, style=dashed];
m69_362 -> m69_371  [color=darkseagreen4, key=1, label=dict, style=dashed];
m69_367 -> m69_369  [color=darkseagreen4, key=1, label=key, style=dashed];
m69_175 -> m69_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_180 -> m69_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_205 -> m69_210  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m69_207 -> m69_210  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m69_209 -> m69_211  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m69_267 -> m69_291  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_267 -> m69_281  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m69_271 -> m69_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_272 -> m69_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_231 -> m69_235  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m69_232 -> m69_235  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m69_38 -> m69_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_51 -> m69_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_57 -> m69_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_67 -> m69_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_77 -> m69_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_88 -> m69_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_126 -> m69_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_250 -> m69_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_250 -> m69_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_250 -> m69_253  [color=darkseagreen4, key=1, label=config, style=dashed];
m69_276 -> m69_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_276 -> m69_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_276 -> m69_281  [color=darkseagreen4, key=1, label=config, style=dashed];
m69_279 -> m69_281  [color=darkseagreen4, key=1, label=res, style=dashed];
m69_412 -> m69_416  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_72 -> m69_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_73 -> m69_77  [color=darkseagreen4, key=1, label=selector, style=dashed];
m69_74 -> m69_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_299 -> m69_305  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m69_301 -> m69_318  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m69_301 -> m69_305  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m69_302 -> m69_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_302 -> m69_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_304 -> m69_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_221 -> m69_380  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_221 -> m69_382  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_221 -> m69_385  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_384 -> m69_388  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m69_384 -> m69_389  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m69_383 -> m69_385  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_386 -> m69_388  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m69_15 -> m69_17  [color=darkseagreen4, key=1, label=security, style=dashed];
m69_215 -> m69_219  [color=darkseagreen4, key=1, label=int, style=dashed];
m69_216 -> m69_219  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m69_25 -> m69_31  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_26 -> m69_28  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m69_26 -> m69_38  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m69_28 -> m69_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_397 -> m69_399  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_397 -> m69_400  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_62 -> m69_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_63 -> m69_67  [color=darkseagreen4, key=1, label=selector, style=dashed];
m69_64 -> m69_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_96 -> m69_118  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m69_96 -> m69_126  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m69_96 -> m69_129  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m69_116 -> m69_118  [color=darkseagreen4, key=1, label=config, style=dashed];
m69_117 -> m69_126  [color=darkseagreen4, key=1, label=selector, style=dashed];
m69_118 -> m69_126  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m69_10 -> m69_429  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_426 -> m69_429  [color=darkseagreen4, key=1, label=an, style=dashed];
m69_334 -> m69_340  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_336 -> m69_338  [color=darkseagreen4, key=1, label=pyBenchmark, style=dashed];
m69_224 -> m69_228  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m69_225 -> m69_228  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m69_350 -> m69_355  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_351 -> m69_353  [color=darkseagreen4, key=1, label=securityInitializer1, style=dashed];
m69_403 -> m69_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_403 -> m69_407  [color=darkseagreen4, key=1, label=array, style=dashed];
m69_404 -> m69_418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_404 -> m69_421  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_46 -> m69_48  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m69_46 -> m69_51  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m69_47 -> m69_57  [color=darkseagreen4, key=1, label=fine, style=dashed];
m69_48 -> m69_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_48 -> m69_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_195 -> m69_200  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m69_197 -> m69_200  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m69_199 -> m69_201  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m69_323 -> m69_328  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_326 -> m69_328  [color=darkseagreen4, key=1, label=start, style=dashed];
m69_169 -> m69_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_83 -> m69_85  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m69_84 -> m69_88  [color=darkseagreen4, key=1, label=selector, style=dashed];
m69_85 -> m69_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_186 -> m69_188  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_190 -> m69_192  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m69_160 -> m69_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_238 -> m69_262  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_238 -> m69_253  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m69_242 -> m69_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_243 -> m69_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_439 -> m69_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_74  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_118  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_169  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_175  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_182  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_192  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_200  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_210  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_219  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_235  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_253  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_243  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_291  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_281  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_272  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_297  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_307  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_328  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_332  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_338  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_346  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_353  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_400  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_439 -> m69_422  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m69_440 -> m69_38  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m69_441 -> m69_51  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m69_442 -> m69_57  [color=darkseagreen4, key=1, label=fine, style=dashed];
m69_443 -> m69_67  [color=darkseagreen4, key=1, label=selector, style=dashed];
m69_444 -> m69_77  [color=darkseagreen4, key=1, label=selector, style=dashed];
m69_445 -> m69_88  [color=darkseagreen4, key=1, label=selector, style=dashed];
m69_446 -> m69_126  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m69_446 -> m69_129  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m69_447 -> m69_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_447 -> m69_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_448 -> m69_126  [color=darkseagreen4, key=1, label=selector, style=dashed];
m69_449 -> m69_262  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_450 -> m69_253  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m69_451 -> m69_253  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m69_452 -> m69_253  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m69_453 -> m69_291  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m69_454 -> m69_281  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m69_456 -> m69_318  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m70_8 -> m70_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m71_22 -> m71_24  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m71_22 -> m71_25  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m71_22 -> m71_27  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m71_22 -> m71_29  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m71_22 -> m71_31  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m71_6 -> m71_10  [color=darkseagreen4, key=1, label=security, style=dashed];
m71_43 -> m71_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m71_43 -> m71_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m72_11 -> m72_13  [color=darkseagreen4, key=1, label=response, style=dashed];
m72_0 -> m72_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m72_0 -> m72_4  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m72_5 -> m72_5  [color=darkseagreen4, key=1, label=header, style=dashed];
m72_22 -> m72_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader", style=dashed];
m75_0 -> m75_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m75_43 -> m75_45  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m75_42 -> m75_56  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m75_54 -> m75_56  [color=darkseagreen4, key=1, label=handler, style=dashed];
m75_13 -> m75_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m75_28 -> m75_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m75_30 -> m75_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m75_15 -> m75_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m75_59 -> m75_45  [color=green, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_37  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_59 -> m75_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m76_10 -> m76_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m76_52 -> m76_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m76_61 -> m76_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m76_63 -> m76_66  [color=darkseagreen4, key=1, label=removed, style=dashed];
m76_35 -> m76_40  [color=darkseagreen4, key=1, label=sb, style=dashed];
m76_35 -> m76_38  [color=darkseagreen4, key=1, label=sb, style=dashed];
m76_35 -> m76_39  [color=darkseagreen4, key=1, label=sb, style=dashed];
m76_35 -> m76_41  [color=darkseagreen4, key=1, label=sb, style=dashed];
m76_17 -> m76_19  [color=darkseagreen4, key=1, label=security, style=dashed];
m76_15 -> m76_19  [color=darkseagreen4, key=1, label=addedSecurities, style=dashed];
m76_15 -> m76_20  [color=darkseagreen4, key=1, label=addedSecurities, style=dashed];
m76_25 -> m76_29  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m76_73 -> m76_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m76_73 -> m76_76  [color=darkseagreen4, key=1, label=removed, style=dashed];
m76_75 -> m76_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m76_102 -> m76_87  [color=green, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_37  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_83  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_91  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m76_102 -> m76_99  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m80_3 -> m80_5  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_3 -> m80_6  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_3 -> m80_7  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_3 -> m80_8  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_1 -> m80_3  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m80_2 -> m80_4  [color=darkseagreen4, key=1, label=config, style=dashed];
m80_2 -> m80_5  [color=darkseagreen4, key=1, label=config, style=dashed];
m80_2 -> m80_6  [color=darkseagreen4, key=1, label=config, style=dashed];
m80_2 -> m80_7  [color=darkseagreen4, key=1, label=config, style=dashed];
m80_2 -> m80_8  [color=darkseagreen4, key=1, label=config, style=dashed];
m80_6 -> m80_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>", style=dashed];
m80_6 -> m80_14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>", style=dashed];
m80_6 -> m80_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>", style=dashed];
m80_167 -> m80_170  [color=darkseagreen4, key=1, label=securityCache, style=dashed];
m80_167 -> m80_172  [color=darkseagreen4, key=1, label=securityCache, style=dashed];
m80_167 -> m80_169  [color=darkseagreen4, key=1, label=securityCache, style=dashed];
m80_167 -> m80_171  [color=darkseagreen4, key=1, label=securityCache, style=dashed];
m80_163 -> m80_169  [color=darkseagreen4, key=1, label=tick1, style=dashed];
m80_165 -> m80_171  [color=darkseagreen4, key=1, label=tick2, style=dashed];
m80_43 -> m80_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_46  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_47  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_48  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_49  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_50  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_51  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_52  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_54  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_55  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_56  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_57  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_58  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_59  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_60  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_62  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_63  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_43 -> m80_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_34  [color=green, key=1, label=security, style=dashed];
m80_19 -> m80_35  [color=green, key=1, label=security, style=dashed];
m80_19 -> m80_21  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_23  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_24  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_25  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_26  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_27  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_28  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_29  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_31  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_32  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_33  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_36  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_19 -> m80_37  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_13 -> m80_20  [color=darkseagreen4, key=1, label=value, style=dashed];
m80_18 -> m80_20  [color=darkseagreen4, key=1, label=value, style=dashed];
m80_15 -> m80_20  [color=darkseagreen4, key=1, label=value, style=dashed];
m80_17 -> m80_20  [color=darkseagreen4, key=1, label=value, style=dashed];
m80_70 -> m80_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_73  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_74  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_75  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_76  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_77  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_78  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_79  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_80  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_81  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_82  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_83  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_70 -> m80_84  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_34 -> m80_7  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CandlestickPatterns.Tristar", style=dashed];
m80_34 -> m80_8  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CandlestickPatterns.Tristar", style=dashed];
m80_34 -> m80_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CandlestickPatterns.Tristar", style=dashed];
m80_34 -> m80_31  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CandlestickPatterns.Tristar", style=dashed];
m80_138 -> m80_147  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_138 -> m80_140  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_138 -> m80_151  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_138 -> m80_141  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_138 -> m80_154  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_138 -> m80_142  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_138 -> m80_157  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_138 -> m80_143  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_138 -> m80_160  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_139 -> m80_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_140 -> m80_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_141 -> m80_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_142 -> m80_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_143 -> m80_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_112 -> m80_122  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_112 -> m80_114  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_112 -> m80_126  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_112 -> m80_115  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_112 -> m80_129  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_112 -> m80_116  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_112 -> m80_132  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_112 -> m80_117  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_112 -> m80_135  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_113 -> m80_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_114 -> m80_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_115 -> m80_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_116 -> m80_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_117 -> m80_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_95 -> m80_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_90 -> m80_95  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_90 -> m80_92  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_90 -> m80_93  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_90 -> m80_94  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_90 -> m80_101  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_184 -> m80_101  [color=darkseagreen4, key=1, label=security, style=dashed];
m80_185 -> m80_122  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_185 -> m80_126  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_185 -> m80_129  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_185 -> m80_132  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_185 -> m80_135  [color=darkseagreen4, key=1, label=option, style=dashed];
m80_186 -> m80_147  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_186 -> m80_151  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_186 -> m80_154  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_186 -> m80_157  [color=darkseagreen4, key=1, label=equity, style=dashed];
m80_186 -> m80_160  [color=darkseagreen4, key=1, label=equity, style=dashed];
m81_66 -> m81_68  [color=darkseagreen4, key=1, label=type, style=dashed];
m81_66 -> m81_69  [color=darkseagreen4, key=1, label=type, style=dashed];
m81_66 -> m81_70  [color=darkseagreen4, key=1, label=type, style=dashed];
m81_0 -> m81_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_3  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m81_0 -> m81_5  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m81_0 -> m81_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_33  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m81_0 -> m81_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m81_0 -> m81_56  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m81_0 -> m81_57  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m81_1 -> m81_8  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m81_1 -> m81_22  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m81_1 -> m81_26  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m81_1 -> m81_37  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m81_1 -> m81_39  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m81_1 -> m81_44  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m81_1 -> m81_47  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m81_2 -> m81_30  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m81_2 -> m81_52  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m81_2 -> m81_55  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m81_11 -> m81_13  [color=darkseagreen4, key=1, label=currentEnvironment, style=dashed];
m81_29 -> m81_33  [color=darkseagreen4, key=1, label=token, style=dashed];
m81_35 -> m81_37  [color=darkseagreen4, key=1, label=tick, style=dashed];
m81_35 -> m81_38  [color=darkseagreen4, key=1, label=tick, style=dashed];
m81_35 -> m81_39  [color=darkseagreen4, key=1, label=tick, style=dashed];
m81_42 -> m81_44  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m81_45 -> m81_47  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m81_50 -> m81_52  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m81_53 -> m81_55  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m81_53 -> m81_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_53 -> m81_65  [color=darkseagreen4, key=1, label=T, style=dashed];
m81_26 -> m81_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_26 -> m81_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_10 -> m81_15  [color=darkseagreen4, key=1, label=environments, style=dashed];
m81_10 -> m81_20  [color=darkseagreen4, key=1, label=environments, style=dashed];
m81_77 -> m81_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_77 -> m81_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_77 -> m81_86  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m81_77 -> m81_85  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m81_77 -> m81_87  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m81_81 -> m81_83  [color=darkseagreen4, key=1, label=setting, style=dashed];
m81_83 -> m81_85  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m81_83 -> m81_87  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m81_80 -> m81_84  [color=darkseagreen4, key=1, label=environment, style=dashed];
m81_80 -> m81_86  [color=darkseagreen4, key=1, label=directory, style=dashed];
m81_80 -> m81_88  [color=darkseagreen4, key=1, label=directory, style=dashed];
m81_62 -> m81_198  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m81_62 -> m81_203  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m81_197 -> m81_202  [color=darkseagreen4, key=1, label=i, style=dashed];
m81_202 -> m81_202  [color=darkseagreen4, key=1, label=i, style=dashed];
m81_99 -> m81_141  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_140 -> m81_146  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m81_76 -> m81_86  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m81_76 -> m81_88  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m81_74 -> m81_101  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m81_74 -> m81_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_75 -> m81_81  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_75 -> m81_86  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_75 -> m81_88  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_128 -> m81_132  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m81_128 -> m81_134  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m81_128 -> m81_136  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m81_131 -> m81_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_131 -> m81_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_63 -> m81_208  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m81_100 -> m81_103  [color=darkseagreen4, key=1, label=directory, style=dashed];
m81_171 -> m81_173  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m81_171 -> m81_187  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m81_172 -> m81_176  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m81_175 -> m81_181  [color=darkseagreen4, key=1, label=parts, style=dashed];
m81_175 -> m81_186  [color=darkseagreen4, key=1, label=parts, style=dashed];
m81_177 -> m81_181  [color=darkseagreen4, key=1, label=style, style=dashed];
m81_178 -> m81_181  [color=darkseagreen4, key=1, label=right, style=dashed];
m81_179 -> m81_181  [color=darkseagreen4, key=1, label=strike, style=dashed];
m81_182 -> m81_186  [color=darkseagreen4, key=1, label=style, style=dashed];
m81_183 -> m81_186  [color=darkseagreen4, key=1, label=right, style=dashed];
m81_184 -> m81_186  [color=darkseagreen4, key=1, label=strike, style=dashed];
m81_106 -> m81_109  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_106 -> m81_115  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_106 -> m81_116  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_106 -> m81_119  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_106 -> m81_120  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m81_107 -> m81_116  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m81_107 -> m81_120  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m81_108 -> m81_114  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m81_108 -> m81_118  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m82_3 -> m82_8  [color=green, key=1, label=string, style=dashed];
m82_3 -> m82_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m82_4 -> m82_9  [color=green, key=1, label=stream, style=dashed];
m82_4 -> m82_6  [color=darkseagreen4, key=1, label=stream, style=dashed];
m82_4 -> m82_11  [color=darkseagreen4, key=1, label=stream, style=dashed];
m82_25 -> m82_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider", style=dashed];
m82_25 -> m82_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider", style=dashed];
m82_25 -> m82_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider", style=dashed];
m83_23 -> m83_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m84_159 -> m84_354  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m84_356 -> m84_360  [color=darkseagreen4, key=1, label=live, style=dashed];
m84_356 -> m84_365  [color=darkseagreen4, key=1, label=live, style=dashed];
m84_356 -> m84_369  [color=darkseagreen4, key=1, label=live, style=dashed];
m84_356 -> m84_373  [color=darkseagreen4, key=1, label=live, style=dashed];
m84_356 -> m84_374  [color=darkseagreen4, key=1, label=live, style=dashed];
m84_356 -> m84_379  [color=darkseagreen4, key=1, label=live, style=dashed];
m84_374 -> m84_379  [color=darkseagreen4, key=1, label=name, style=dashed];
m84_374 -> m84_380  [color=darkseagreen4, key=1, label=name, style=dashed];
m84_358 -> m84_360  [color=darkseagreen4, key=1, label=start, style=dashed];
m84_371 -> m84_373  [color=darkseagreen4, key=1, label=start, style=dashed];
m84_375 -> m84_379  [color=darkseagreen4, key=1, label=result, style=dashed];
m84_375 -> m84_380  [color=darkseagreen4, key=1, label=result, style=dashed];
m84_332 -> m84_335  [color=darkseagreen4, key=1, label=charts, style=dashed];
m84_336 -> m84_338  [color=darkseagreen4, key=1, label=result, style=dashed];
m84_336 -> m84_340  [color=darkseagreen4, key=1, label=result, style=dashed];
m84_335 -> m84_335  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m84_153 -> m84_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>", style=dashed];
m84_176 -> m84_184  [color=darkseagreen4, key=1, label=groupSize, style=dashed];
m84_179 -> m84_181  [color=darkseagreen4, key=1, label=deltaChart, style=dashed];
m84_179 -> m84_182  [color=darkseagreen4, key=1, label=deltaChart, style=dashed];
m84_177 -> m84_181  [color=darkseagreen4, key=1, label=current, style=dashed];
m84_177 -> m84_184  [color=darkseagreen4, key=1, label=current, style=dashed];
m84_177 -> m84_187  [color=darkseagreen4, key=1, label=current, style=dashed];
m84_178 -> m84_190  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
m84_186 -> m84_187  [color=darkseagreen4, key=1, label=current, style=dashed];
m84_54 -> m84_59  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m84_63 -> m84_68  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m84_68 -> m84_68  [color=darkseagreen4, key=1, label=chart, style=dashed];
m84_70 -> m84_78  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m84_72 -> m84_82  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m84_72 -> m84_85  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m84_72 -> m84_86  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m84_72 -> m84_87  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m84_72 -> m84_88  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m84_72 -> m84_89  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m84_72 -> m84_90  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m84_72 -> m84_91  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m84_82 -> m84_82  [color=darkseagreen4, key=1, label=pair, style=dashed];
m84_77 -> m84_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_77 -> m84_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_84 -> m84_88  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
m84_84 -> m84_118  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
m84_98 -> m84_102  [color=darkseagreen4, key=1, label=chartComplete, style=dashed];
m84_102 -> m84_102  [color=darkseagreen4, key=1, label=chart, style=dashed];
m84_112 -> m84_114  [color=darkseagreen4, key=1, label=logs, style=dashed];
m84_125 -> m84_125  [color=darkseagreen4, key=1, label=chart, style=dashed];
m84_126 -> m84_126  [color=darkseagreen4, key=1, label=series, style=dashed];
m84_395 -> m84_397  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m84_395 -> m84_398  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m84_399 -> m84_401  [color=darkseagreen4, key=1, label=message, style=dashed];
m84_386 -> m84_419  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m84_386 -> m84_441  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m84_386 -> m84_429  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m84_416 -> m84_425  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m84_416 -> m84_438  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m84_417 -> m84_425  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m84_417 -> m84_438  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m84_428 -> m84_440  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_428 -> m84_443  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_425 -> m84_437  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_418 -> m84_422  [color=darkseagreen4, key=1, label=charts, style=dashed];
m84_422 -> m84_422  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m84_420 -> m84_422  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m84_420 -> m84_423  [color=darkseagreen4, key=1, label=chart, style=dashed];
m84_421 -> m84_426  [color=darkseagreen4, key=1, label=newChart, style=dashed];
m84_423 -> m84_425  [color=darkseagreen4, key=1, label=series, style=dashed];
m84_424 -> m84_426  [color=darkseagreen4, key=1, label=newSeries, style=dashed];
m84_307 -> m84_309  [color=darkseagreen4, key=1, label=debug, style=dashed];
m84_308 -> m84_310  [color=darkseagreen4, key=1, label=error, style=dashed];
m84_302 -> m84_304  [color=darkseagreen4, key=1, label=types, style=dashed];
m84_302 -> m84_305  [color=darkseagreen4, key=1, label=types, style=dashed];
m84_302 -> m84_306  [color=darkseagreen4, key=1, label=types, style=dashed];
m84_303 -> m84_305  [color=darkseagreen4, key=1, label=security, style=dashed];
m84_411 -> m84_456  [color=darkseagreen4, key=1, label=bool, style=dashed];
m84_411 -> m84_499  [color=darkseagreen4, key=1, label=bool, style=dashed];
m84_455 -> m84_474  [color=darkseagreen4, key=1, label=time, style=dashed];
m84_455 -> m84_475  [color=darkseagreen4, key=1, label=time, style=dashed];
m84_455 -> m84_476  [color=darkseagreen4, key=1, label=time, style=dashed];
m84_455 -> m84_478  [color=darkseagreen4, key=1, label=time, style=dashed];
m84_460 -> m84_463  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m84_460 -> m84_474  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m84_460 -> m84_475  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m84_463 -> m84_469  [color=darkseagreen4, key=1, label=security, style=dashed];
m84_463 -> m84_474  [color=darkseagreen4, key=1, label=security, style=dashed];
m84_464 -> m84_466  [color=darkseagreen4, key=1, label=price, style=dashed];
m84_464 -> m84_473  [color=darkseagreen4, key=1, label=price, style=dashed];
m84_464 -> m84_474  [color=darkseagreen4, key=1, label=price, style=dashed];
m84_464 -> m84_475  [color=darkseagreen4, key=1, label=price, style=dashed];
m84_467 -> m84_469  [color=darkseagreen4, key=1, label=last, style=dashed];
m84_467 -> m84_472  [color=darkseagreen4, key=1, label=last, style=dashed];
m84_470 -> m84_472  [color=darkseagreen4, key=1, label=cash, style=dashed];
m84_497 -> m84_497  [color=darkseagreen4, key=1, label=pair, style=dashed];
m84_501 -> m84_503  [color=darkseagreen4, key=1, label=message, style=dashed];
m84_501 -> m84_505  [color=darkseagreen4, key=1, label=message, style=dashed];
m84_278 -> m84_281  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
m84_281 -> m84_283  [color=darkseagreen4, key=1, label=update, style=dashed];
m84_281 -> m84_284  [color=darkseagreen4, key=1, label=update, style=dashed];
m84_284 -> m84_286  [color=darkseagreen4, key=1, label=series, style=dashed];
m84_284 -> m84_289  [color=darkseagreen4, key=1, label=series, style=dashed];
m84_284 -> m84_290  [color=darkseagreen4, key=1, label=series, style=dashed];
m84_284 -> m84_294  [color=darkseagreen4, key=1, label=series, style=dashed];
m84_285 -> m84_294  [color=darkseagreen4, key=1, label=chart, style=dashed];
m84_288 -> m84_292  [color=darkseagreen4, key=1, label=thisSeries, style=dashed];
m84_288 -> m84_293  [color=darkseagreen4, key=1, label=thisSeries, style=dashed];
m84_291 -> m84_293  [color=darkseagreen4, key=1, label=lastValue, style=dashed];
m84_257 -> m84_259  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m84_257 -> m84_260  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m84_210 -> m84_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_210 -> m84_214  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_344 -> m84_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_204 -> m84_219  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_205 -> m84_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_263 -> m84_265  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m84_263 -> m84_268  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m84_265 -> m84_265  [color=darkseagreen4, key=1, label=security, style=dashed];
m84_265 -> m84_267  [color=darkseagreen4, key=1, label=security, style=dashed];
m84_237 -> m84_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_242 -> m84_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_242 -> m84_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_242 -> m84_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_242 -> m84_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_242 -> m84_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_242 -> m84_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_224 -> m84_227  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_224 -> m84_228  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_323 -> m84_326  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_323 -> m84_327  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_196 -> m84_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_196 -> m84_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_521 -> m84_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_182  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_184  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_187  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_197  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_199  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_200  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_207  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_211  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_213  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_218  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_238  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_247  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_248  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_249  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_260  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_265  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_268  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_276  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_280  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_282  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_283  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_303  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_306  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_320  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_325  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_326  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_334  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_338  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_340  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_344  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_365  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_369  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_380  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_396  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_398  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_400  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_401  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_405  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_406  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_407  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_409  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_413  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_446  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_456  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_459  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_460  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_463  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_475  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_476  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_477  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_478  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_480  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_482  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_484  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_485  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_487  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_489  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_490  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_492  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_494  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_495  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_496  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_497  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_499  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_501  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_521 -> m84_503  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m84_522 -> m84_438  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m84_523 -> m84_438  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m84_524 -> m84_441  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m84_525 -> m84_441  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m85_36 -> m85_41  [color=green, key=1, label="lambda expression", style=dashed];
m85_36 -> m85_44  [color=green, key=1, label="lambda expression", style=dashed];
m85_23 -> m85_27  [color=darkseagreen4, key=1, label="out QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m85_42 -> m85_42  [color=green, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Lean.Engine.DataFeeds.Subscription>", style=dashed];
m85_47 -> m85_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m85_47 -> m85_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m85_47 -> m85_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m85_47 -> m85_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m85_47 -> m85_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m85_47 -> m85_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m85_47 -> m85_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m85_47 -> m85_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m86_214 -> m86_255  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m86_250 -> m86_252  [color=darkseagreen4, key=1, label=dividend, style=dashed];
m86_11 -> m86_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>", style=dashed];
m86_11 -> m86_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m86_11 -> m86_92  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m86_63 -> m86_147  [color=darkseagreen4, key=1, label=bool, style=dashed];
m86_53 -> m86_64  [color=green, key=1, label=baseData, style=dashed];
m86_53 -> m86_55  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_56  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_58  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_60  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_62  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_65  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_66  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_67  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_70  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_72  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_75  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_53 -> m86_77  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m86_38 -> m86_63  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_66  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_38 -> m86_40  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_47  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_48  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_54  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_57  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_59  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_62  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_72  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_83  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_85  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_87  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_88  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_38 -> m86_90  [color=darkseagreen4, key=1, label=packet, style=dashed];
m86_39 -> m86_53  [color=darkseagreen4, key=1, label=list, style=dashed];
m86_39 -> m86_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m86_39 -> m86_43  [color=darkseagreen4, key=1, label=list, style=dashed];
m86_39 -> m86_46  [color=darkseagreen4, key=1, label=list, style=dashed];
m86_39 -> m86_48  [color=darkseagreen4, key=1, label=list, style=dashed];
m86_39 -> m86_49  [color=darkseagreen4, key=1, label=list, style=dashed];
m86_39 -> m86_50  [color=darkseagreen4, key=1, label=list, style=dashed];
m86_39 -> m86_52  [color=darkseagreen4, key=1, label=list, style=dashed];
m86_51 -> m86_53  [color=darkseagreen4, key=1, label=i, style=dashed];
m86_36 -> m86_65  [color=darkseagreen4, key=1, label=futuresChains, style=dashed];
m86_36 -> m86_66  [color=darkseagreen4, key=1, label=futuresChains, style=dashed];
m86_36 -> m86_58  [color=darkseagreen4, key=1, label=futuresChains, style=dashed];
m86_28 -> m86_66  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m86_28 -> m86_62  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m86_28 -> m86_36  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m86_28 -> m86_30  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m86_28 -> m86_32  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m86_28 -> m86_33  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m86_28 -> m86_37  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m86_40 -> m86_74  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_40 -> m86_78  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_85 -> m86_85  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m86_85 -> m86_87  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m86_87 -> m86_87  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m86_18 -> m86_62  [color=darkseagreen4, key=1, label=optionUnderlyingUpdates, style=dashed];
m86_18 -> m86_72  [color=darkseagreen4, key=1, label=optionUnderlyingUpdates, style=dashed];
m86_27 -> m86_62  [color=darkseagreen4, key=1, label=sliceFuture, style=dashed];
m86_50 -> m86_67  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m86_50 -> m86_90  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m86_50 -> m86_89  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m86_43 -> m86_45  [color=darkseagreen4, key=1, label=baseDataCollectionCount, style=dashed];
m86_46 -> m86_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m86_46 -> m86_92  [color=darkseagreen4, key=1, label=count, style=dashed];
m86_49 -> m86_70  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m86_49 -> m86_88  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m86_49 -> m86_82  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m86_49 -> m86_86  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m86_16 -> m86_55  [color=darkseagreen4, key=1, label=allDataForAlgorithm, style=dashed];
m86_29 -> m86_58  [color=darkseagreen4, key=1, label=tradeBars, style=dashed];
m86_30 -> m86_58  [color=darkseagreen4, key=1, label=quoteBars, style=dashed];
m86_31 -> m86_58  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m86_32 -> m86_78  [color=darkseagreen4, key=1, label=splits, style=dashed];
m86_34 -> m86_74  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m86_12 -> m86_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m86_12 -> m86_45  [color=darkseagreen4, key=1, label=count, style=dashed];
m86_12 -> m86_92  [color=darkseagreen4, key=1, label=count, style=dashed];
m86_17 -> m86_87  [color=darkseagreen4, key=1, label=cash, style=dashed];
m86_17 -> m86_92  [color=darkseagreen4, key=1, label=cash, style=dashed];
m86_84 -> m86_89  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_84 -> m86_90  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_84 -> m86_92  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_84 -> m86_95  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_84 -> m86_99  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_15 -> m86_90  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m86_15 -> m86_92  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m86_45 -> m86_92  [color=darkseagreen4, key=1, label=count, style=dashed];
m86_45 -> m86_45  [color=darkseagreen4, key=1, label=count, style=dashed];
m86_14 -> m86_48  [color=darkseagreen4, key=1, label=custom, style=dashed];
m86_14 -> m86_92  [color=darkseagreen4, key=1, label=custom, style=dashed];
m86_19 -> m86_83  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m86_19 -> m86_21  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m86_13 -> m86_88  [color=darkseagreen4, key=1, label=security, style=dashed];
m86_13 -> m86_92  [color=darkseagreen4, key=1, label=security, style=dashed];
m86_26 -> m86_119  [color=darkseagreen4, key=1, label=slice, style=dashed];
m86_277 -> m86_119  [color=darkseagreen4, key=1, label=slice, style=dashed];
m86_155 -> m86_158  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m86_157 -> m86_159  [color=darkseagreen4, key=1, label=factory, style=dashed];
m86_160 -> m86_170  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_160 -> m86_174  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_160 -> m86_178  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_192 -> m86_196  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m86_192 -> m86_198  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m86_192 -> m86_199  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m86_192 -> m86_201  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m86_114 -> m86_141  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionChains", style=dashed];
m86_114 -> m86_142  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m86_114 -> m86_143  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionChains", style=dashed];
m86_114 -> m86_148  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>", style=dashed];
m86_114 -> m86_151  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_114 -> m86_160  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_114 -> m86_161  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_114 -> m86_162  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_114 -> m86_194  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m86_114 -> m86_168  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_114 -> m86_172  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_114 -> m86_176  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_114 -> m86_180  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_138 -> m86_173  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_138 -> m86_177  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_138 -> m86_146  [color=darkseagreen4, key=1, label=newSource, style=dashed];
m86_141 -> m86_150  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_141 -> m86_154  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_141 -> m86_157  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_141 -> m86_160  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_141 -> m86_162  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_141 -> m86_169  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_141 -> m86_173  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_141 -> m86_177  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_141 -> m86_180  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_150  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_154  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_157  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_160  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_162  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_169  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_173  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_177  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_142 -> m86_180  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_144 -> m86_146  [color=darkseagreen4, key=1, label=option, style=dashed];
m86_144 -> m86_148  [color=darkseagreen4, key=1, label=option, style=dashed];
m86_144 -> m86_164  [color=darkseagreen4, key=1, label=option, style=dashed];
m86_144 -> m86_194  [color=darkseagreen4, key=1, label=option, style=dashed];
m86_151 -> m86_153  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m86_151 -> m86_156  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m86_162 -> m86_194  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_162 -> m86_170  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_162 -> m86_174  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_162 -> m86_178  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_162 -> m86_173  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m86_162 -> m86_164  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader", style=dashed];
m86_163 -> m86_170  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs", style=dashed];
m86_163 -> m86_173  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs", style=dashed];
m86_165 -> m86_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_166 -> m86_180  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs", style=dashed];
m86_168 -> m86_170  [color=darkseagreen4, key=1, label=tick, style=dashed];
m86_172 -> m86_174  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m86_176 -> m86_178  [color=darkseagreen4, key=1, label=quote, style=dashed];
m86_139 -> m86_141  [color=darkseagreen4, key=1, label=sourceChanged, style=dashed];
m86_140 -> m86_142  [color=darkseagreen4, key=1, label=canonical, style=dashed];
m86_140 -> m86_143  [color=darkseagreen4, key=1, label=canonical, style=dashed];
m86_169 -> m86_173  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs", style=dashed];
m86_146 -> m86_150  [color=darkseagreen4, key=1, label=underlyingData, style=dashed];
m86_178 -> m86_180  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs", style=dashed];
m86_167 -> m86_184  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs", style=dashed];
m86_113 -> m86_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_113 -> m86_127  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_113 -> m86_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_113 -> m86_131  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_113 -> m86_133  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_113 -> m86_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_124 -> m86_127  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_124 -> m86_129  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_124 -> m86_131  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_124 -> m86_133  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_124 -> m86_135  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_119 -> m86_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_119 -> m86_130  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_233 -> m86_265  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_233 -> m86_266  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_233 -> m86_269  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_233 -> m86_272  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_233 -> m86_273  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_234 -> m86_258  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesContract", style=dashed];
m86_234 -> m86_259  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m86_115 -> m86_200  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChains", style=dashed];
m86_115 -> m86_201  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m86_115 -> m86_203  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_115 -> m86_210  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_115 -> m86_211  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_115 -> m86_213  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_115 -> m86_215  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_115 -> m86_219  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_115 -> m86_223  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m86_197 -> m86_199  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_197 -> m86_220  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_197 -> m86_224  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m86_200 -> m86_206  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_200 -> m86_216  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_200 -> m86_220  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_200 -> m86_224  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_201 -> m86_206  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_201 -> m86_216  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_201 -> m86_220  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_201 -> m86_224  [color=darkseagreen4, key=1, label=chain, style=dashed];
m86_209 -> m86_217  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_209 -> m86_221  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_209 -> m86_211  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m86_211 -> m86_217  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_211 -> m86_221  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_215 -> m86_217  [color=darkseagreen4, key=1, label=tick, style=dashed];
m86_215 -> m86_242  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m86_219 -> m86_221  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m86_199 -> m86_201  [color=darkseagreen4, key=1, label=canonical, style=dashed];
m86_0 -> m86_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m86_0 -> m86_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m86_0 -> m86_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m86_0 -> m86_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m86_0 -> m86_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m86_9 -> m86_12  [color=darkseagreen4, key=1, label=objectActivator, style=dashed];
m86_191 -> m86_239  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m86_191 -> m86_241  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m86_190 -> m86_252  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_190 -> m86_245  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_190 -> m86_246  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_190 -> m86_249  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_190 -> m86_253  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m86_278 -> m86_194  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m86_279 -> m86_194  [color=darkseagreen4, key=1, label=option, style=dashed];
m86_280 -> m86_194  [color=darkseagreen4, key=1, label=contract, style=dashed];
m86_295 -> m86_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_126  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_130  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_135  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_137  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_142  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_143  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_157  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_158  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_173  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_179  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_180  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_184  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_188  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_191  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_193  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_194  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_196  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_197  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_198  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_199  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_200  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_201  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_203  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_204  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_242  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_243  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_249  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_252  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_253  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_255  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_256  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_263  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_265  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_266  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_269  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_272  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_273  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_279  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_281  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_292  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_295 -> m86_293  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader", style=dashed];
m86_296 -> m86_173  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m88_198 -> m88_204  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_198 -> m88_209  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_202 -> m88_204  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_202 -> m88_209  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_200 -> m88_216  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_200 -> m88_206  [color=darkseagreen4, key=1, label=filled, style=dashed];
m88_200 -> m88_210  [color=darkseagreen4, key=1, label=filled, style=dashed];
m88_53 -> m88_55  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m88_78 -> m88_80  [color=darkseagreen4, key=1, label=handler, style=dashed];
m88_421 -> m88_427  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_421 -> m88_434  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_421 -> m88_437  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_423 -> m88_434  [color=darkseagreen4, key=1, label=tenMinutes, style=dashed];
m88_430 -> m88_434  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m88_220 -> m88_240  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m88_220 -> m88_227  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m88_221 -> m88_242  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m88_221 -> m88_230  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m88_223 -> m88_239  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_223 -> m88_241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_222 -> m88_226  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_222 -> m88_229  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_224 -> m88_226  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_224 -> m88_229  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_224 -> m88_245  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_232 -> m88_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_12 -> m88_14  [color=green, key=1, label=subscription, style=dashed];
m88_12 -> m88_15  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_16  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_17  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_18  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_22  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_26  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_27  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_29  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_34  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_44  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_12 -> m88_45  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m88_51 -> m88_54  [color=green, key=1, label=changes, style=dashed];
m88_54 -> m88_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_59 -> m88_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m88_113 -> m88_115  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m88_130 -> m88_132  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m88_161 -> m88_163  [color=darkseagreen4, key=1, label=price, style=dashed];
m88_159 -> m88_163  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m88_192 -> m88_195  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m88_191 -> m88_177  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m88_191 -> m88_195  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m88_193 -> m88_195  [color=darkseagreen4, key=1, label=delta, style=dashed];
m88_217 -> m88_206  [color=darkseagreen4, key=1, label=filled, style=dashed];
m88_217 -> m88_210  [color=darkseagreen4, key=1, label=filled, style=dashed];
m88_238 -> m88_241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_263 -> m88_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m88_263 -> m88_258  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m88_263 -> m88_266  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m88_395 -> m88_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_398 -> m88_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_397 -> m88_401  [color=darkseagreen4, key=1, label=string, style=dashed];
m88_453 -> m88_455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_452 -> m88_456  [color=darkseagreen4, key=1, label=string, style=dashed];
m88_352 -> m88_358  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_353 -> m88_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_353 -> m88_361  [color=darkseagreen4, key=1, label=balance, style=dashed];
m88_360 -> m88_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_354 -> m88_367  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_354 -> m88_359  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_356 -> m88_358  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_99 -> m88_114  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_99 -> m88_105  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_100 -> m88_104  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_118 -> m88_131  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_118 -> m88_124  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_119 -> m88_123  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_120 -> m88_129  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_121 -> m88_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_11 -> m88_52  [color=green, key=1, label=newChanges, style=dashed];
m88_23 -> m88_25  [color=green, key=1, label=clone, style=dashed];
m88_23 -> m88_58  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m88_24 -> m88_56  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m88_25 -> m88_55  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_25 -> m88_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_32 -> m88_35  [color=darkseagreen4, key=1, label=packetData, style=dashed];
m88_34 -> m88_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_35 -> m88_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_37 -> m88_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_37 -> m88_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_50 -> m88_52  [color=green, key=1, label=newChanges, style=dashed];
m88_7 -> m88_54  [color=darkseagreen4, key=1, label=data, style=dashed];
m88_18 -> m88_25  [color=green, key=1, label=packet, style=dashed];
m88_18 -> m88_28  [color=darkseagreen4, key=1, label=packet, style=dashed];
m88_8 -> m88_44  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m88_8 -> m88_47  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m88_8 -> m88_34  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m88_8 -> m88_10  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m88_82 -> m88_84  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_81 -> m88_84  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_81 -> m88_89  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_83 -> m88_14  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m88_83 -> m88_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m88_83 -> m88_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m88_83 -> m88_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m88_85 -> m88_90  [color=darkseagreen4, key=1, label=brokerageID, style=dashed];
m88_87 -> m88_89  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_87 -> m88_90  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_166 -> m88_194  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_166 -> m88_175  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_166 -> m88_176  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_166 -> m88_185  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_167 -> m88_174  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_167 -> m88_181  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_167 -> m88_184  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_172 -> m88_174  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_179 -> m88_181  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_182 -> m88_184  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_135 -> m88_160  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_135 -> m88_144  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_135 -> m88_145  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_135 -> m88_152  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_136 -> m88_143  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_136 -> m88_148  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_136 -> m88_151  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_139 -> m88_158  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_141 -> m88_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_146 -> m88_148  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_149 -> m88_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_323 -> m88_334  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_324 -> m88_345  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_324 -> m88_335  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_324 -> m88_336  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_325 -> m88_344  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_328 -> m88_348  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m88_326 -> m88_348  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m88_326 -> m88_340  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m88_327 -> m88_349  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m88_327 -> m88_337  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m88_327 -> m88_338  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m88_329 -> m88_331  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m88_329 -> m88_340  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m88_330 -> m88_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m88_330 -> m88_337  [color=darkseagreen4, key=1, label=i, style=dashed];
m88_330 -> m88_339  [color=darkseagreen4, key=1, label=i, style=dashed];
m88_332 -> m88_334  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_339 -> m88_339  [color=darkseagreen4, key=1, label=i, style=dashed];
m88_249 -> m88_255  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_250 -> m88_255  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_254 -> m88_262  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_254 -> m88_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m88_254 -> m88_258  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m88_253 -> m88_264  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m88_253 -> m88_256  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m88_373 -> m88_378  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_374 -> m88_392  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_374 -> m88_379  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_375 -> m88_391  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_381 -> m88_383  [color=darkseagreen4, key=1, label=executions, style=dashed];
m88_381 -> m88_384  [color=darkseagreen4, key=1, label=executions, style=dashed];
m88_381 -> m88_395  [color=darkseagreen4, key=1, label=executions, style=dashed];
m88_381 -> m88_398  [color=darkseagreen4, key=1, label=executions, style=dashed];
m88_376 -> m88_378  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_376 -> m88_384  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_376 -> m88_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_384 -> m88_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_380 -> m88_382  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m88_380 -> m88_383  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m88_268 -> m88_280  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_270 -> m88_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_270 -> m88_273  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m88_270 -> m88_286  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m88_276 -> m88_297  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_283 -> m88_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_283 -> m88_286  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m88_283 -> m88_287  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m88_283 -> m88_288  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m88_274 -> m88_285  [color=darkseagreen4, key=1, label=hasSymbol, style=dashed];
m88_275 -> m88_298  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m88_275 -> m88_281  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m88_277 -> m88_286  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m88_277 -> m88_288  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m88_278 -> m88_280  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_305 -> m88_307  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m88_305 -> m88_310  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m88_306 -> m88_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_307 -> m88_309  [color=darkseagreen4, key=1, label=cash, style=dashed];
m88_310 -> m88_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_405 -> m88_410  [color=darkseagreen4, key=1, label=ib, style=dashed];
m88_406 -> m88_418  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_406 -> m88_411  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_407 -> m88_417  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m88_408 -> m88_410  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_109 -> m88_443  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m88_109 -> m88_444  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m88_109 -> m88_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m88_443 -> m88_445  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m88_444 -> m88_452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_458 -> m88_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_29  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_83  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_88  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_103  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_142  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_147  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_150  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_173  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_180  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_183  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_203  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_225  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_251  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_279  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_333  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_357  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_377  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_458 -> m88_409  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m88_459 -> m88_56  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m88_460 -> m88_58  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m88_461 -> m88_114  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_462 -> m88_131  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_463 -> m88_160  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_464 -> m88_194  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_465 -> m88_240  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m88_466 -> m88_242  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m88_467 -> m88_245  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_468 -> m88_263  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m88_468 -> m88_266  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m88_469 -> m88_264  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m88_471 -> m88_298  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m88_472 -> m88_345  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_473 -> m88_348  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m88_474 -> m88_349  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m88_475 -> m88_367  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m88_476 -> m88_392  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_477 -> m88_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m88_478 -> m88_395  [color=darkseagreen4, key=1, label=executions, style=dashed];
m88_478 -> m88_398  [color=darkseagreen4, key=1, label=executions, style=dashed];
m88_479 -> m88_401  [color=darkseagreen4, key=1, label=string, style=dashed];
m88_480 -> m88_418  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m88_481 -> m88_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m88_482 -> m88_456  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_23 -> m91_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m91_23 -> m91_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m91_24 -> m91_57  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m91_55 -> m91_57  [color=darkseagreen4, key=1, label=handler, style=dashed];
m91_40 -> m91_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m91_40 -> m91_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m91_27 -> m91_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_50 -> m91_52  [color=darkseagreen4, key=1, label=handler, style=dashed];
m91_43 -> m91_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m91_44 -> m91_46  [color=darkseagreen4, key=1, label=handler, style=dashed];
m91_9 -> m91_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m91_10 -> m91_14  [color=darkseagreen4, key=1, label=reader, style=dashed];
m91_15 -> m91_19  [color=darkseagreen4, key=1, label=line, style=dashed];
m91_17 -> m91_21  [color=darkseagreen4, key=1, label=instance, style=dashed];
m91_71 -> m91_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", style=dashed];
m91_71 -> m91_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", style=dashed];
m91_71 -> m91_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", style=dashed];
m91_71 -> m91_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", style=dashed];
m91_71 -> m91_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", style=dashed];
m91_71 -> m91_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", style=dashed];
m91_71 -> m91_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", style=dashed];
m91_71 -> m91_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader", style=dashed];
m92_16 -> m92_55  [color=darkseagreen4, key=1, label=allDataForAlgorithm, style=dashed];
m92_28 -> m92_62  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m92_28 -> m92_66  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m92_13 -> m92_89  [color=darkseagreen4, key=1, label=security, style=dashed];
m92_14 -> m92_48  [color=darkseagreen4, key=1, label=custom, style=dashed];
m92_15 -> m92_91  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m92_18 -> m92_62  [color=darkseagreen4, key=1, label=optionUnderlyingUpdates, style=dashed];
m92_26 -> m92_120  [color=green, key=1, label=slice, style=dashed];
m92_27 -> m92_62  [color=green, key=1, label=sliceFuture, style=dashed];
m92_29 -> m92_58  [color=darkseagreen4, key=1, label=tradeBars, style=dashed];
m92_30 -> m92_58  [color=darkseagreen4, key=1, label=quoteBars, style=dashed];
m92_31 -> m92_58  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m92_35 -> m92_58  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m92_35 -> m92_62  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m92_36 -> m92_58  [color=darkseagreen4, key=1, label=futuresChains, style=dashed];
m92_36 -> m92_66  [color=darkseagreen4, key=1, label=futuresChains, style=dashed];
m92_39 -> m92_41  [color=darkseagreen4, key=1, label=list, style=dashed];
m92_39 -> m92_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m92_39 -> m92_48  [color=darkseagreen4, key=1, label=list, style=dashed];
m92_39 -> m92_52  [color=darkseagreen4, key=1, label=list, style=dashed];
m92_49 -> m92_70  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m92_49 -> m92_82  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m92_49 -> m92_89  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m92_50 -> m92_67  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m92_50 -> m92_90  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m92_50 -> m92_91  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m92_53 -> m92_55  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_53 -> m92_56  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_53 -> m92_58  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_53 -> m92_60  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_53 -> m92_62  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_53 -> m92_64  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_53 -> m92_66  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_53 -> m92_67  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_53 -> m92_70  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m92_51 -> m92_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m92_81 -> m92_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m92_234 -> m92_266  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_234 -> m92_267  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_234 -> m92_270  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_234 -> m92_273  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_234 -> m92_274  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_116 -> m92_201  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChains", style=dashed];
m92_116 -> m92_210  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m92_116 -> m92_214  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m92_116 -> m92_228  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m92_201 -> m92_207  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_201 -> m92_210  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_201 -> m92_217  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_201 -> m92_228  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_202 -> m92_207  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_202 -> m92_210  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_202 -> m92_217  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_202 -> m92_228  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_204 -> m92_206  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m92_210 -> m92_218  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_210 -> m92_226  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_212 -> m92_218  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_212 -> m92_226  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_216 -> m92_218  [color=darkseagreen4, key=1, label=tick, style=dashed];
m92_224 -> m92_226  [color=darkseagreen4, key=1, label=quote, style=dashed];
m92_192 -> m92_240  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m92_115 -> m92_142  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionChains", style=dashed];
m92_115 -> m92_149  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>", style=dashed];
m92_115 -> m92_161  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m92_115 -> m92_166  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m92_115 -> m92_195  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m92_115 -> m92_167  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m92_115 -> m92_181  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m92_142 -> m92_155  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_142 -> m92_158  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_142 -> m92_161  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_142 -> m92_170  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_142 -> m92_181  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_143 -> m92_155  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_143 -> m92_158  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_143 -> m92_161  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_143 -> m92_170  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_143 -> m92_181  [color=darkseagreen4, key=1, label=chain, style=dashed];
m92_145 -> m92_149  [color=darkseagreen4, key=1, label=option, style=dashed];
m92_145 -> m92_165  [color=darkseagreen4, key=1, label=option, style=dashed];
m92_145 -> m92_166  [color=darkseagreen4, key=1, label=option, style=dashed];
m92_145 -> m92_195  [color=darkseagreen4, key=1, label=option, style=dashed];
m92_152 -> m92_154  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m92_152 -> m92_157  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m92_161 -> m92_171  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_161 -> m92_179  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_163 -> m92_166  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_163 -> m92_195  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_163 -> m92_171  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_163 -> m92_179  [color=darkseagreen4, key=1, label=contract, style=dashed];
m92_166 -> m92_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_169 -> m92_171  [color=darkseagreen4, key=1, label=tick, style=dashed];
m92_177 -> m92_179  [color=darkseagreen4, key=1, label=quote, style=dashed];
m92_235 -> m92_260  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m92_191 -> m92_246  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_191 -> m92_247  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_191 -> m92_250  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_191 -> m92_253  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_191 -> m92_254  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m92_114 -> m92_126  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m92_114 -> m92_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m92_125 -> m92_128  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m92_278 -> m92_120  [color=green, key=1, label=slice, style=dashed];
m92_279 -> m92_195  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m92_280 -> m92_195  [color=darkseagreen4, key=1, label=option, style=dashed];
m92_281 -> m92_195  [color=darkseagreen4, key=1, label=contract, style=dashed];
m93_3 -> m93_5  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m93_9 -> m93_11  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m93_14 -> m93_5  [color=green, key=1, label="QuantConnect.Python.VolatilityModelPythonWrapper", style=dashed];
m93_14 -> m93_11  [color=green, key=1, label="QuantConnect.Python.VolatilityModelPythonWrapper", style=dashed];
m94_140 -> m94_144  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_140 -> m94_145  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_201 -> m94_225  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m94_201 -> m94_209  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m94_201 -> m94_210  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m94_201 -> m94_211  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m94_205 -> m94_223  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_205 -> m94_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_204 -> m94_221  [color=darkseagreen4, key=1, label=sync, style=dashed];
m94_187 -> m94_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m94_188 -> m94_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m94_189 -> m94_191  [color=darkseagreen4, key=1, label=beforeQuantity, style=dashed];
m94_104 -> m94_106  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m94_274 -> m94_277  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_274 -> m94_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_274 -> m94_282  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_57 -> m94_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_57 -> m94_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_57 -> m94_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_57 -> m94_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_57 -> m94_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_57 -> m94_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_57 -> m94_69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_222 -> m94_212  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m94_222 -> m94_213  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m94_222 -> m94_226  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m94_220 -> m94_223  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_220 -> m94_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_254 -> m94_257  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_254 -> m94_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_134 -> m94_138  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_158 -> m94_162  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_158 -> m94_164  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_158 -> m94_165  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_163 -> m94_165  [color=darkseagreen4, key=1, label=order, style=dashed];
m94_118 -> m94_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_99 -> m94_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m94_99 -> m94_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_99 -> m94_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_99 -> m94_267  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_99 -> m94_268  [color=darkseagreen4, key=1, label=double, style=dashed];
m94_99 -> m94_269  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_99 -> m94_271  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_261 -> m94_279  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m94_261 -> m94_268  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m94_263 -> m94_275  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_263 -> m94_277  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_263 -> m94_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_263 -> m94_282  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_262 -> m94_284  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m94_262 -> m94_269  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m94_172 -> m94_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m94_125 -> m94_129  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_125 -> m94_130  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_148 -> m94_152  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_148 -> m94_154  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_148 -> m94_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m94_153 -> m94_155  [color=darkseagreen4, key=1, label=order, style=dashed];
m94_91 -> m94_93  [color=darkseagreen4, key=1, label=holding, style=dashed];
m94_94 -> m94_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m94_157 -> m94_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_157 -> m94_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_157 -> m94_237  [color=darkseagreen4, key=1, label=double, style=dashed];
m94_157 -> m94_239  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_157 -> m94_244  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_157 -> m94_245  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_157 -> m94_246  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_231 -> m94_255  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_231 -> m94_257  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_231 -> m94_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_230 -> m94_256  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m94_230 -> m94_237  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m94_230 -> m94_238  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m94_33 -> m94_35  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m94_33 -> m94_40  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m94_33 -> m94_45  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m94_33 -> m94_48  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m94_47 -> m94_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_47 -> m94_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_47 -> m94_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_47 -> m94_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_47 -> m94_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_47 -> m94_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_47 -> m94_69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m94_286 -> m94_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_68  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_69  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_95  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_106  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_115  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_129  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_130  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_138  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_144  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_145  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_152  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_162  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_165  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_185  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_198  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_191  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_208  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_246  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_265  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_286 -> m94_266  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m94_287 -> m94_221  [color=darkseagreen4, key=1, label=sync, style=dashed];
m94_289 -> m94_225  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m94_290 -> m94_256  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m94_291 -> m94_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m94_292 -> m94_279  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m94_293 -> m94_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m94_294 -> m94_284  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
}
