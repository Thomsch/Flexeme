digraph  {
m0_0 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand()", span="33-33"];
m0_1 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand()", file="AlgorithmTradingTests.cs", label="Status = AlgorithmStatus.Running", span="35-35"];
m0_2 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand()", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand()", span="33-33"];
m0_10 [cluster="QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", span="38-38"];
m0_6 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Commands.AlgorithmStatusCommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="51-51"];
m0_7 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="algorithm.Status = Status", span="53-53"];
m0_8 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="return new CommandResultPacket(this, true);", span="54-54"];
m0_9 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Commands.AlgorithmStatusCommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="51-51"];
m0_3 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand(QuantConnect.AlgorithmStatus)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand(QuantConnect.AlgorithmStatus)", span="42-42"];
m0_4 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand(QuantConnect.AlgorithmStatus)", file="AlgorithmTradingTests.cs", label="Status = status", span="44-44"];
m0_5 [cluster="QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand(QuantConnect.AlgorithmStatus)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Commands.AlgorithmStatusCommand.AlgorithmStatusCommand(QuantConnect.AlgorithmStatus)", span="42-42"];
m0_11 [file="AlgorithmTradingTests.cs", label="QuantConnect.Commands.AlgorithmStatusCommand", span=""];
m4_86 [cluster="Unk.GetEntry", file="Cash.cs", label="Entry Unk.GetEntry", span=""];
m4_73 [cluster="Unk.Where", file="Cash.cs", label="Entry Unk.Where", span=""];
m4_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = true", span="157-157"];
m4_14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="rate = 1/rate", span="90-90"];
m4_124 [cluster="decimal.RoundToSignificantDigits(int)", file="Cash.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m4_91 [cluster="Unk.Trace", file="Cash.cs", label="Entry Unk.Trace", span=""];
m4_18 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label=_locker, span="103-103"];
m4_19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", color=red, community=0, file="Cash.cs", label="4: Amount += amount", span="105-105"];
m4_22 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m4_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="145-145"];
m4_20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="return Amount;", span="106-106"];
m4_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRate = 1.0m", span="139-139"];
m4_21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101"];
m4_23 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label=_locker, span="116-116"];
m4_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Amount = amount", span="118-118"];
m4_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m4_26 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
m4_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = QuantConnect.Symbol.Empty", span="137-137"];
m4_27 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Symbol == CashBook.AccountCurrency", span="135-135"];
m4_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_isBaseCurrency = true", span="138-138"];
m4_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="140-140"];
m4_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="144-144"];
m4_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="146-147"];
m4_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == normal", span="149-149"];
m4_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="151-151"];
m4_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="152-152"];
m4_79 [cluster="Unk.Concat", file="Cash.cs", label="Entry Unk.Concat", span=""];
m4_9 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", span="35-35"];
m4_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="Cash.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m4_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="Cash.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1339-1339"];
m4_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Cash.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m4_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="Cash.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m4_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="Cash.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m4_16 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="Cash.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m4_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="Cash.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="971-971"];
m4_83 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Cash.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m4_119 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="225-225"];
m4_120 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="decimal rate = ConversionRate", span="228-228"];
m4_122 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="return string.Format(''{0}: {1,15} @ ${2,10} = {3}{4}'',\r\n                Symbol,\r\n                Amount.ToString(''0.00''),\r\n                rate.ToString(''0.00####''),\r\n                Currencies.GetCurrencySymbol(Symbol),\r\n                Math.Round(ValueInAccountCurrency, 2)\r\n                );", span="230-236"];
m4_121 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="229-229"];
m4_123 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="225-225"];
m4_81 [cluster="Unk.Min", file="Cash.cs", label="Entry Unk.Min", span=""];
m4_116 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="178-178"];
m4_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="169-169"];
m4_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="178-178"];
m4_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = symbol.Value == invert", span="184-184"];
m4_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="Cash.cs", label="4: Cash quoteCash", span="187-187"];
m4_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="171-171"];
m4_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="174-176"];
m4_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="179-179"];
m4_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label=potentials, span="180-180"];
m4_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var securityType = symbol.ID.SecurityType", span="185-185"];
m4_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="186-186"];
m4_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="188-188"];
m4_57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.ToString());", span="190-190"];
m4_107 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="174-174"];
m4_111 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="175-175"];
m4_114 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="176-176"];
m4_106 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="174-174"];
m4_110 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="175-175"];
m4_113 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="176-176"];
m4_108 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="174-174"];
m4_112 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="175-175"];
m4_115 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="176-176"];
m4_93 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="146-147"];
m4_96 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="164-164"];
m4_99 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="164-164"];
m4_102 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="164-164"];
m4_95 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="146-147"];
m4_94 [cluster="lambda expression", file="Cash.cs", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="146-147"];
m4_98 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="164-164"];
m4_97 [cluster="lambda expression", file="Cash.cs", label="x.SecurityType", span="164-164"];
m4_101 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="164-164"];
m4_100 [cluster="lambda expression", file="Cash.cs", label="x.Key", span="164-164"];
m4_104 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="164-164"];
m4_103 [cluster="lambda expression", file="Cash.cs", label="y.First().ID.Market", span="164-164"];
m4_117 [cluster="lambda expression", file="Cash.cs", label="x.Resolution", span="178-178"];
m4_118 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="178-178"];
m4_127 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Cash.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
m4_90 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="Cash.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m4_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="192-192"];
m4_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="193-193"];
m4_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="195-195"];
m4_80 [cluster="Unk.DefaultIfEmpty", file="Cash.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m4_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="165-165"];
m4_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="symbol.Value == normal || symbol.Value == invert", span="182-182"];
m4_85 [cluster="Unk.ToString", file="Cash.cs", label="Entry Unk.ToString", span=""];
m4_87 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m4_76 [cluster="Unk.ContainsKey", file="Cash.cs", label="Entry Unk.ContainsKey", span=""];
m4_82 [cluster="Unk.GetSymbolProperties", file="Cash.cs", label="Entry Unk.GetSymbolProperties", span=""];
m4_89 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m4_7 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="option.SetFilter(-1, +1, TimeSpan.Zero, TimeSpan.MaxValue)", span="48-48"];
m4_77 [cluster="Unk.Add", file="Cash.cs", label="Entry Unk.Add", span=""];
m4_8 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="SetBenchmark(equity.Symbol)", span="51-51"];
m4_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="158-158"];
m4_62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Security security", span="198-198"];
m4_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == invert", span="154-154"];
m4_88 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m4_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="156-156"];
m4_125 [cluster="System.Math.Round(decimal, int)", file="Cash.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m4_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="167-167"];
m4_84 [cluster="Exception.cstr", file="Cash.cs", label="Entry Exception.cstr", span=""];
m4_128 [cluster="string.Format(string, params object[])", file="Cash.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m4_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Cash.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var markets = securities.Keys.GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="164-164"];
m4_0 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", span="35-35"];
m4_3 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="SetCash(1000000)", span="40-40"];
m4_4 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=red, community=0, file="Cash.cs", label="8: var equity = AddEquity(UnderlyingTicker)", span="42-42"];
m4_5 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="var option = AddOption(UnderlyingTicker)", span="43-43"];
m4_1 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="SetStartDate(2013, 06, 28)", span="38-38"];
m4_2 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="SetEndDate(2013, 07, 02)", span="39-39"];
m4_6 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="Cash.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="45-45"];
m4_109 [cluster="Unk.CreateSymbol", file="Cash.cs", label="Entry Unk.CreateSymbol", span=""];
m4_92 [cluster="string.Format(string, object, object)", file="Cash.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="196-196"];
m4_64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="201-201"];
m4_66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="205-205"];
m4_67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="209-209"];
m4_69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="212-212"];
m4_71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="218-218"];
m4_68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securities.Add(config.Symbol, security)", span="211-211"];
m4_63 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", span=""];
m4_65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Crypto", span="203-203"];
m4_70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return security;", span="213-213"];
m4_72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
m4_105 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Cash.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_78 [cluster="Unk.Select", file="Cash.cs", label="Entry Unk.Select", span=""];
m4_75 [cluster="Unk.ToDictionary", file="Cash.cs", label="Entry Unk.ToDictionary", span=""];
m4_126 [cluster="decimal.ToString(string)", file="Cash.cs", label="Entry decimal.ToString(string)", span="0-0"];
m4_137 [file="Cash.cs", label="QuantConnect.Securities.Cash", span=""];
m4_138 [file="Cash.cs", label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
m4_139 [file="Cash.cs", label=markets, span=""];
m5_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33"];
m5_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="CommissionReport = commissionReport", span="35-35"];
m5_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33"];
m5_3 [file="CommissionReportEventArgs.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", span=""];
m6_14 [cluster="System.Console.ResetColor()", file="ConsoleLogHandler.cs", label="Entry System.Console.ResetColor()", span="0-0"];
m6_2 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", span="42-42"];
m6_3 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="ConsoleLogHandler.cs", label="_trace = Console.Out", span="46-46"];
m6_5 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="ConsoleLogHandler.cs", label="_dateFormat = dateFormat", span="48-48"];
m6_4 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="ConsoleLogHandler.cs", label="_error = Console.Error", span="47-47"];
m6_6 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", span="42-42"];
m6_12 [cluster="System.DateTime.ToString(string)", file="ConsoleLogHandler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_18 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="75-75"];
m6_19 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="ConsoleLogHandler.cs", label="_trace.WriteLine(DateTime.Now.ToString(_dateFormat) + '' Trace:: '' + text)", span="77-77"];
m6_20 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="75-75"];
m6_13 [cluster="System.IO.TextWriter.WriteLine(string)", file="ConsoleLogHandler.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m6_7 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="55-55"];
m6_8 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Console.ForegroundColor = ConsoleColor.Red", span="57-57"];
m6_9 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="_error.WriteLine(DateTime.Now.ToString(_dateFormat) + '' ERROR:: '' + text)", span="58-58"];
m6_10 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Console.ResetColor()", span="59-59"];
m6_11 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="55-55"];
m6_21 [cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="84-84"];
m6_22 [cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="84-84"];
m6_0 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33"];
m6_1 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33"];
m6_15 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="66-66"];
m6_16 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="ConsoleLogHandler.cs", label="_trace.WriteLine(DateTime.Now.ToString(_dateFormat) + '' DEBUG:: '' + text)", span="68-68"];
m6_17 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="66-66"];
m6_23 [file="ConsoleLogHandler.cs", label="QuantConnect.Logging.ConsoleLogHandler", span=""];
m7_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m7_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m7_0 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="41-41"];
m7_6 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="3: return null;", span="62-62"];
m7_2 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="41-41"];
m7_5 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="totalMargin <= netLiquidationValue * (1 + marginBuffer)", span="60-60"];
m7_1 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="DefaultMarginCallModel.cs", label="Portfolio = portfolio", span="43-43"];
m7_3 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", span="55-55"];
m7_4 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="decimal marginBuffer = 0.10m", span="58-58"];
m7_7 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="!security.Holdings.Invested", span="65-65"];
m7_40 [cluster="Unk.Select", file="DefaultMarginCallModel.cs", label="Entry Unk.Select", span=""];
m7_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-703"];
m7_43 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m7_8 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="return null;", span="67-67"];
m7_44 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="110-110"];
m7_47 [cluster="TestCaseData.cstr", file="DefaultMarginCallModel.cs", label="Entry TestCaseData.cstr", span=""];
m7_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DefaultMarginCallModel.cs", label="Statistics = statistics", span="715-715"];
m7_53 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m7_45 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703"];
m7_46 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="703-703"];
m7_48 [cluster="Unk.SetName", file="DefaultMarginCallModel.cs", label="Entry Unk.SetName", span=""];
m7_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DefaultMarginCallModel.cs", label="Algorithm = algorithm", span="714-714"];
m7_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DefaultMarginCallModel.cs", label="Language = language", span="716-716"];
m7_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m7_54 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Key", span="111-111"];
m7_55 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="111-111"];
m7_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_42 [cluster="Unk.Select", file="DefaultMarginCallModel.cs", label="Entry Unk.Select", span=""];
m7_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m7_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="DefaultMarginCallModel.cs", label="3: var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m7_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m7_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="DefaultMarginCallModel.cs", label="3: var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m7_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m7_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m7_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="DefaultMarginCallModel.cs", label="3: var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m7_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m7_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m7_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m7_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m7_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385"];
m7_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m7_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m7_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m7_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569"];
m7_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''-16.58%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''19.400%''},\r\n                {''Expectancy'', ''-0.667''},\r\n                {''Net Profit'', ''-16.499%''},\r\n                {''Sharpe Ratio'', ''-5.342''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.00''},\r\n                {''Alpha'', ''-11.859''},\r\n                {''Beta'', ''2.85''},\r\n                {''Annual Standard Deviation'', ''1.487''},\r\n                {''Annual Variance'', ''2.21''},\r\n                {''Information Ratio'', ''-8.353''},\r\n                {''Tracking Error'', ''1.115''},\r\n                {''Treynor Ratio'', ''-2.786''},\r\n                {''Total Fees'', ''$19077.09''}\r\n            }", span="594-615"];
m7_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m7_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m7_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m7_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546"];
m7_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592"];
m7_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m7_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m7_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m7_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DefaultMarginCallModel.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m7_19 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m7_38 [cluster="Unk.ToDictionary", file="DefaultMarginCallModel.cs", label="Entry Unk.ToDictionary", span=""];
m7_56 [file="DefaultMarginCallModel.cs", label="QuantConnect.Securities.DefaultMarginCallModel", span=""];
m8_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="DisposableExtensions.cs", label="parameters.Algorithm == ''BasicTemplateIntrinioEconomicData''", span="39-39"];
m8_54 [cluster="Unk.ToArray", file="DisposableExtensions.cs", label="Entry Unk.ToArray", span=""];
m8_59 [cluster="Unk.SetName", file="DisposableExtensions.cs", label="Entry Unk.SetName", span=""];
m8_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="54-75"];
m8_13 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DisposableExtensions.cs", label=Exception, span="41-41"];
m8_8 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", color=green, community=0, file="DisposableExtensions.cs", label="8: var intrinioCredentials = new Dictionary<string, string>\r\n                {\r\n                    {''intrinio-username'', ''121078c02c20a09aa5d9c541087e7fa4''},\r\n                    {''intrinio-password'', ''65be35238b14de4cd0afc0edf364efc3'' }\r\n                }", span="41-45"];
m8_9 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="DisposableExtensions.cs", label="QuantConnect.Configuration.Config.Set(''parameters'', JsonConvert.SerializeObject(intrinioCredentials))", span="46-46"];
m8_11 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="DisposableExtensions.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="26-26"];
m8_14 [cluster="Unk.SerializeObject", file="DisposableExtensions.cs", label="Entry Unk.SerializeObject", span=""];
m8_10 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="DisposableExtensions.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.AlphaStatistics, parameters.Language)", span="49-49"];
m8_12 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="DisposableExtensions.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m8_15 [cluster="Unk.Set", file="DisposableExtensions.cs", label="Entry Unk.Set", span=""];
m8_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="DisposableExtensions.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="43-43"];
m8_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m8_0 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", file="DisposableExtensions.cs", label="Entry QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", span="15-15"];
m8_3 [cluster="System.IDisposable.DisposeSafely(System.Action<System.Exception>)", file="DisposableExtensions.cs", label="Entry System.IDisposable.DisposeSafely(System.Action<System.Exception>)", span="29-29"];
m8_2 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", file="DisposableExtensions.cs", label="Exit QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", span="15-15"];
m8_6 [cluster="lambda expression", file="DisposableExtensions.cs", label="Exit lambda expression", span="17-17"];
m8_1 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)", file="DisposableExtensions.cs", label="return disposable.DisposeSafely(error => Log.Error(error));", span="17-17"];
m8_4 [cluster="lambda expression", file="DisposableExtensions.cs", label="Entry lambda expression", span="17-17"];
m8_5 [cluster="lambda expression", file="DisposableExtensions.cs", label="Log.Error(error)", span="17-17"];
m8_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="77-98"];
m8_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$151474.9016''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$24404.2897''},\r\n                {''Mean Population Estimated Insight Value'', ''$246.508''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''}\r\n            }", span="100-134"];
m8_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="136-157"];
m8_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="159-180"];
m8_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="182-203"];
m8_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="205-226"];
m8_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="228-249"];
m8_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="251-272"];
m8_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="274-295"];
m8_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="297-318"];
m8_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="320-341"];
m8_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="343-364"];
m8_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="366-387"];
m8_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="389-410"];
m8_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.288''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.105''},\r\n                {''Beta'', ''-46.73''},\r\n                {''Annual Standard Deviation'', ''0.235''},\r\n                {''Annual Variance'', ''0.055''},\r\n                {''Information Ratio'', ''-3.366''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''0.017''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="412-433"];
m8_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="435-456"];
m8_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="458-479"];
m8_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="481-502"];
m8_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="504-525"];
m8_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="527-548"];
m8_39 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="550-571"];
m8_40 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="573-594"];
m8_41 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="596-617"];
m8_42 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="619-640"];
m8_43 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="642-663"];
m8_44 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="665-686"];
m8_45 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="688-709"];
m8_46 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''25''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.46%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.400%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-5.603%''},\r\n                {''Sharpe Ratio'', ''-19.82''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-11.165''},\r\n                {''Beta'', ''585.081''},\r\n                {''Annual Standard Deviation'', ''0.36''},\r\n                {''Annual Variance'', ''0.129''},\r\n                {''Information Ratio'', ''-19.873''},\r\n                {''Tracking Error'', ''0.359''},\r\n                {''Treynor Ratio'', ''-0.012''},\r\n                {''Total Fees'', ''$6076.49''}\r\n            }", span="711-732"];
m8_47 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var indicatorSuiteAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''19.097%''},\r\n                {''Drawdown'', ''7.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''41.840%''},\r\n                {''Sharpe Ratio'', ''1.639''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.29''},\r\n                {''Beta'', ''-5.494''},\r\n                {''Annual Standard Deviation'', ''0.11''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''1.457''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''-0.033''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="734-755"];
m8_48 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="var basicTemplateIntrinioEconomicData = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''89''},\r\n                {''Average Win'', ''0.09%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''5.704%''},\r\n                {''Drawdown'', ''4.800%''},\r\n                {''Expectancy'', ''1.469''},\r\n                {''Net Profit'', ''24.865%''},\r\n                {''Sharpe Ratio'', ''1.143''},\r\n                {''Loss Rate'', ''70%''},\r\n                {''Win Rate'', ''30%''},\r\n                {''Profit-Loss Ratio'', ''7.23''},\r\n                {''Alpha'', ''0.065''},\r\n                {''Beta'', ''-0.522''},\r\n                {''Annual Standard Deviation'', ''0.048''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''0.74''},\r\n                {''Tracking Error'', ''0.048''},\r\n                {''Treynor Ratio'', ''-0.105''},\r\n                {''Total Fees'', ''$100.58''}\r\n            }", span="757-778"];
m8_49 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateIntrinioEconomicData'', basicTemplateIntrinioEconomicData, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DuplicateSecurityWithBenchmarkRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="780-855"];
m8_50 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="DisposableExtensions.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m8_51 [cluster="System.Collections.Generic.List<T>.List()", file="DisposableExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DisposableExtensions.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="865-865"];
m8_60 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DisposableExtensions.cs", label="Algorithm = algorithm", span="867-867"];
m8_61 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DisposableExtensions.cs", label="Statistics = statistics", span="868-868"];
m8_62 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DisposableExtensions.cs", label="Language = language", span="869-869"];
m8_63 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="DisposableExtensions.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="865-865"];
m8_53 [cluster="Unk.Select", file="DisposableExtensions.cs", label="Entry Unk.Select", span=""];
m8_58 [cluster="TestCaseData.cstr", file="DisposableExtensions.cs", label="Entry TestCaseData.cstr", span=""];
m8_55 [cluster="lambda expression", file="DisposableExtensions.cs", label="Entry lambda expression", span="855-855"];
m8_56 [cluster="lambda expression", file="DisposableExtensions.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="855-855"];
m8_57 [cluster="lambda expression", file="DisposableExtensions.cs", label="Exit lambda expression", span="855-855"];
m8_64 [file="DisposableExtensions.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m9_5 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", file="DisposableExtensionsTests.cs", label="SetBrokerageModel(new MinimumAccountBalanceBrokerageModel(this, 500.00m))", span="52-52"];
m9_13 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="61-61"];
m9_40 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Disposable(bool)", file="DisposableExtensionsTests.cs", label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.MinimumAccountBalanceBrokerageModel", span=""];
m9_41 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Disposable(bool)", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Disposable(bool)", span="55-55"];
m9_36 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m9_42 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", color=green, community=0, file="DisposableExtensionsTests.cs", label="3: DisposeWasCalled", span="62-62"];
m9_43 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", color=green, community=0, file="DisposableExtensionsTests.cs", label="0: throw new ObjectDisposedException(GetType().FullName);", span="64-64"];
m9_44 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="DisposableExtensionsTests.cs", label="DisposeWasCalled = true", span="67-67"];
m9_45 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="DisposableExtensionsTests.cs", label=_throwException, span="69-69"];
m9_46 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="DisposableExtensionsTests.cs", label="throw new Exception();", span="71-71"];
m9_47 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", span="60-60"];
m9_11 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="DisposableExtensionsTests.cs", label="Assert.IsTrue(disposable.DisposeWasCalled)", span="23-23"];
m9_23 [cluster="System.IDisposable.DisposeSafely(System.Action<System.Exception>)", file="DisposableExtensionsTests.cs", label="Entry System.IDisposable.DisposeSafely(System.Action<System.Exception>)", span="29-29"];
m9_24 [cluster="lambda expression", file="DisposableExtensionsTests.cs", label="Entry lambda expression", span="31-31"];
m9_25 [cluster="lambda expression", file="DisposableExtensionsTests.cs", label="errorHandlerWasInvoked = true", span="31-31"];
m9_49 [cluster="object.GetType()", file="DisposableExtensionsTests.cs", label="Entry object.GetType()", span="0-0"];
m9_14 [cluster="Unk.IsTrue", file="DisposableExtensionsTests.cs", label="Entry Unk.IsTrue", span=""];
m9_15 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", span="27-27"];
m9_16 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="var errorHandlerWasInvoked = false", span="29-29"];
m9_17 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="var disposable = new Disposable(throwException: true)", span="30-30"];
m9_19 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="Assert.IsFalse(result)", span="32-32"];
m9_18 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="var result = disposable.DisposeSafely(error => errorHandlerWasInvoked = true)", span="31-31"];
m9_20 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="Assert.IsTrue(errorHandlerWasInvoked)", span="33-33"];
m9_37 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m9_38 [cluster="string.Format(string, object, object)", color=green, community=0, file="DisposableExtensionsTests.cs", label="8: Entry string.Format(string, object, object)", span="0-0"];
m9_39 [cluster="lambda expression", file="DisposableExtensionsTests.cs", label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", span=""];
m9_26 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.MinimumAccountBalanceBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.MinimumAccountBalanceBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="97-97"];
m9_21 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="Assert.IsTrue(disposable.DisposeWasCalled)", span="34-34"];
m9_6 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", span="33-33"];
m9_27 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", span="38-38"];
m9_28 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="4: var errorHandlerWasInvoked = false", span="40-40"];
m9_32 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="8: var result = disposable.DisposeSafely(error => errorHandlerWasInvoked = true)", span="45-45"];
m9_29 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="3: var disposable = new Disposable()", span="41-41"];
m9_30 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="4: disposable.Dispose()", span="42-42"];
m9_31 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="8: Assert.IsTrue(disposable.DisposeWasCalled)", span="43-43"];
m9_34 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="4: Assert.IsFalse(errorHandlerWasInvoked)", span="47-47"];
m9_33 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="8: Assert.IsTrue(result)", span="46-46"];
m9_35 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", span="38-38"];
m9_7 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", span="18-18"];
m9_22 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", span="27-27"];
m9_48 [cluster="System.ObjectDisposedException.ObjectDisposedException(string)", file="DisposableExtensionsTests.cs", label="Entry System.ObjectDisposedException.ObjectDisposedException(string)", span="0-0"];
m9_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m9_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262"];
m9_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019"];
m9_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="894-894"];
m9_0 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", span="33-33"];
m9_3 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", file="DisposableExtensionsTests.cs", label="SetCash(100000)", span="37-37"];
m9_2 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", file="DisposableExtensionsTests.cs", label="SetEndDate(2013, 10, 11)", span="36-36"];
m9_1 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", file="DisposableExtensionsTests.cs", label="SetStartDate(2013, 10, 07)", span="35-35"];
m9_4 [cluster="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.Initialize()", file="DisposableExtensionsTests.cs", label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Second)", span="39-39"];
m9_50 [cluster="System.Exception.Exception()", file="DisposableExtensionsTests.cs", label="Entry System.Exception.Exception()", span="0-0"];
m9_51 [file="DisposableExtensionsTests.cs", label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", span=""];
m10_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m10_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="RequestId = requestId", span="45-45"];
m10_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Contract = contract", span="46-46"];
m10_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Execution = execution", span="47-47"];
m10_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m10_8 [cluster="Unk.Format", file="ExecutionDetailsEventArgs.cs", label="Entry Unk.Format", span=""];
m10_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m10_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", color=green, community=0, file="ExecutionDetailsEventArgs.cs", label="0: return string.Format(\r\n                ''RequestId: {0}, Symbol: {1}, OrderId: {2}, Time: {3}, Side: {4}, Shares: {5}, Price: {6}, CumQty: {7}, PermId: {8}'',\r\n                RequestId, Contract.Symbol, Execution.OrderId, Execution.Time, Execution.Side, Execution.Shares, Execution.Price, Execution.CumQty, Execution.PermId);", span="55-57"];
m10_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m10_9 [file="ExecutionDetailsEventArgs.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", span=""];
m11_0 [cluster="QuantConnect.Brokerages.Tradier.TradierPositionsContainer.TradierPositionsContainer()", file="Extensions.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierPositionsContainer.TradierPositionsContainer()", span="41-41"];
m11_1 [cluster="QuantConnect.Brokerages.Tradier.TradierPositionsContainer.TradierPositionsContainer()", file="Extensions.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierPositionsContainer.TradierPositionsContainer()", span="41-41"];
m11_2 [cluster="QuantConnect.Brokerages.Tradier.TradierPositions.TradierPositions()", file="Extensions.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierPositions.TradierPositions()", span="56-56"];
m11_3 [cluster="QuantConnect.Brokerages.Tradier.TradierPositions.TradierPositions()", file="Extensions.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierPositions.TradierPositions()", span="56-56"];
m14_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m14_119 [cluster="Unk.ConvertOrderStatus", file="GDAXBrokerage.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m14_74 [cluster="Unk.All", file="GDAXBrokerage.cs", label="Entry Unk.All", span=""];
m14_39 [cluster="System.Math.Abs(decimal)", file="GDAXBrokerage.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m14_148 [cluster="Securities.Cash.cstr", file="GDAXBrokerage.cs", label="Entry Securities.Cash.cstr", span=""];
m14_121 [cluster="Unk.Where", file="GDAXBrokerage.cs", label="Entry Unk.Where", span=""];
m14_56 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m14_58 [cluster="int.ToString()", file="GDAXBrokerage.cs", label="Entry int.ToString()", span="0-0"];
m14_161 [cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m14_151 [cluster="Unk.ToUpper", file="GDAXBrokerage.cs", label="Entry Unk.ToUpper", span=""];
m14_72 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_115 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m14_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="288-288"];
m14_75 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Entry lambda expression", span="135-135"];
m14_125 [cluster="lambda expression", file="GDAXBrokerage.cs", label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="204-204"];
m14_124 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Entry lambda expression", span="204-204"];
m14_126 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="204-204"];
m14_76 [cluster="lambda expression", file="GDAXBrokerage.cs", label=a, span="135-135"];
m14_77 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="135-135"];
m14_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="83-83"];
m14_45 [cluster="Unk.GetAuthenticationToken", file="GDAXBrokerage.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m14_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="150-150"];
m14_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: list.Add(order)", span="191-191"];
m14_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="var list = new List<Order>()", span="152-152"];
m14_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="Order order = null", span="165-165"];
m14_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: order = new MarketOrder { Price = item.Price }", span="168-168"];
m14_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: order = new LimitOrder { LimitPrice = item.Price }", span="172-172"];
m14_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: order = new StopMarketOrder { StopPrice = item.Price }", span="176-176"];
m14_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="3: order.Price = item.Price", span="190-190"];
m14_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: orders", span="163-163"];
m14_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: GetAuthenticationToken(req)", span="157-157"];
m14_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/orders?status=open&status=pending'', Method.GET)", span="156-156"];
m14_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="3: var response = RestClient.Execute(req)", span="158-158"];
m14_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="3: response != null", span="160-160"];
m14_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="var orders = JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="162-162"];
m14_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode,\r\n                                ''GDAXBrokerage.GetOpenOrders: Unsupported order type returned from brokerage: '' + item.Type))", span="180-181"];
m14_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="0: Exception", span="195-195"];
m14_107 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label=list, span="200-200"];
m14_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: item.Type == ''stop''", span="174-174"];
m14_106 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="throw;", span="197-197"];
m14_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: item.Type == ''market''", span="166-166"];
m14_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: item.Type == ''limit''", span="170-170"];
m14_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: order.Quantity = item.Side == ''sell'' ? -item.Size : item.Size", span="185-185"];
m14_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: order.BrokerId = new List<string> { item.Id.ToString() }", span="186-186"];
m14_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: order.Symbol = ConvertProductId(item.ProductId)", span="187-187"];
m14_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="4: order.Status = ConvertOrderStatus(item)", span="189-189"];
m14_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="GDAXBrokerage.cs", label="0: order.Time = DateTime.UtcNow", span="188-188"];
m14_112 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="return list;", span="212-212"];
m14_109 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="var cached = this.CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="204-204"];
m14_111 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="this.CachedOrderIDs[cached.First().Key] = item", span="207-207"];
m14_108 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="item.Status.IsOpen()", span="202-202"];
m14_110 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="cached.Any()", span="205-205"];
m14_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="150-150"];
m14_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104"];
m14_37 [cluster="RestRequest.cstr", file="GDAXBrokerage.cs", label="Entry RestRequest.cstr", span=""];
m14_117 [cluster="Unk.ToString", file="GDAXBrokerage.cs", label="Entry Unk.ToString", span=""];
m14_48 [cluster="BrokerageMessageEvent.cstr", file="GDAXBrokerage.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m14_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="43-43"];
m14_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="LockStream()", span="45-45"];
m14_9 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="_algorithm.BrokerageModel.AccountType == AccountType.Margin", span="57-57"];
m14_12 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", span="64-64"];
m14_13 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="65-65"];
m14_17 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GDAXBrokerage.PlaceOrder: Error parsing response from place order: '' + response.Content))", span="73-73"];
m14_18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="UnlockStream()", span="74-74"];
m14_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs.ContainsKey(order.Id)", span="79-79"];
m14_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="81-81"];
m14_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs.TryAdd(order.Id, order)", span="86-86"];
m14_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="90-90"];
m14_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="93-93"];
m14_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.PlaceOrder: Order completed successfully orderid:'' + order.Id.ToString()))", span="95-95"];
m14_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="UnlockStream()", span="96-96"];
m14_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="100-100"];
m14_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, message))", span="103-103"];
m14_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="UnlockStream()", span="104-104"];
m14_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/orders'', Method.POST)", span="47-47"];
m14_15 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var raw = JsonConvert.DeserializeObject<Messages.Order>(response.Content)", span="69-69"];
m14_8 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.product_id = ConvertSymbol(order.Symbol)", span="55-55"];
m14_10 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.overdraft_enabled = true", span="59-59"];
m14_11 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="req.AddJsonBody(payload)", span="62-62"];
m14_14 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="67-67"];
m14_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var message = $''GDAXBrokerage.PlaceOrder: Order failed Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity} content: {response.Content}''", span="102-102"];
m14_16 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="raw == null || raw.Id == null", span="71-71"];
m14_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return false;", span="75-75"];
m14_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var brokerId = raw.Id", span="78-78"];
m14_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="order.BrokerId.Add(brokerId)", span="85-85"];
m14_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return true;", span="97-97"];
m14_34 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return false;", span="105-105"];
m14_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="dynamic payload = new ExpandoObject()", span="49-49"];
m14_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.size = Math.Abs(order.Quantity)", span="51-51"];
m14_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.side = order.Direction.ToString().ToLower()", span="52-52"];
m14_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.type = ConvertOrderType(order.Type)", span="53-53"];
m14_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.price = order is LimitOrder ? ((LimitOrder)order).LimitPrice : order is StopMarketOrder ? ((StopMarketOrder)order).StopPrice : 0", span="54-54"];
m14_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="43-43"];
m14_152 [cluster="Unk.Create", file="GDAXBrokerage.cs", label="Entry Unk.Create", span=""];
m14_38 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="GDAXBrokerage.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m14_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m14_44 [cluster="Unk.AddJsonBody", file="GDAXBrokerage.cs", label="Entry Unk.AddJsonBody", span=""];
m14_47 [cluster="Unk.>", file="GDAXBrokerage.cs", label="Entry Unk.>", span=""];
m14_41 [cluster="string.ToLower()", file="GDAXBrokerage.cs", label="Entry string.ToLower()", span="0-0"];
m14_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="123-123"];
m14_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="success.Add(response.StatusCode == System.Net.HttpStatusCode.OK)", span="132-132"];
m14_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", span="130-130"];
m14_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="131-131"];
m14_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var success = new List<bool>()", span="125-125"];
m14_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="order.BrokerId", span="127-127"];
m14_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="129-129"];
m14_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return success.All(a => a);", span="135-135"];
m14_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="123-123"];
m14_114 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m14_81 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="45-45"];
m14_52 [cluster="Unk.Add", file="GDAXBrokerage.cs", label="Entry Unk.Add", span=""];
m14_128 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m14_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="220-220"];
m14_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="return new List<Holding>();", span="227-227"];
m14_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="220-220"];
m14_40 [cluster="System.Enum.ToString()", file="GDAXBrokerage.cs", label="Entry System.Enum.ToString()", span="0-0"];
m14_49 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m14_78 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m14_79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="WebSocket.Close()", span="143-143"];
m14_80 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m14_150 [cluster="Unk.GetConversionRate", file="GDAXBrokerage.cs", label="Entry Unk.GetConversionRate", span=""];
m14_122 [cluster="Unk.Any", file="GDAXBrokerage.cs", label="Entry Unk.Any", span=""];
m14_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="286-286"];
m14_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", color=green, community=0, file="GDAXBrokerage.cs", label="4: order.BrokerId", span="290-290"];
m14_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var totalFee = 0m", span="288-288"];
m14_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="totalFee += (decimal)fill.fill_fees", span="297-297"];
m14_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="292-292"];
m14_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", color=green, community=0, file="GDAXBrokerage.cs", label="5: return totalFee;", span="300-300"];
m14_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", span="293-293"];
m14_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="294-294"];
m14_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="295-295"];
m14_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="286-286"];
m14_46 [cluster="Unk.Execute", file="GDAXBrokerage.cs", label="Entry Unk.Execute", span=""];
m14_116 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m14_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="GDAXBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m14_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="92-92"];
m14_57 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m14_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="234-234"];
m14_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="GDAXBrokerage.cs", label="4: var list = new List<Securities.Cash>()", span="236-236"];
m14_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="GDAXBrokerage.cs", label="3: var req = new RestRequest(''/accounts'', Method.GET)", span="238-238"];
m14_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="list.Add(new Securities.Cash(item.Currency, item.Balance, 1))", span="248-248"];
m14_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="GDAXBrokerage.cs", label="4: list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, rate))", span="253-253"];
m14_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="259-259"];
m14_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="return list;", span="263-263"];
m14_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="GDAXBrokerage.cs", label="3: GetAuthenticationToken(req)", span="239-239"];
m14_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="GDAXBrokerage.cs", label="4: var response = RestClient.Execute(req)", span="240-240"];
m14_137 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="GDAXBrokerage.cs", label="4: JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="242-242"];
m14_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var rate = GetConversionRate(item.Currency)", span="252-252"];
m14_138 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="item.Balance > 0", span="244-244"];
m14_139 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="item.Currency == ''USD''", span="246-246"];
m14_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="new[] {''GBP'', ''EUR'' }.Contains(item.Currency)", span="250-250"];
m14_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="257-257"];
m14_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="234-234"];
m14_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m14_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m14_149 [cluster="Unk.Contains", file="GDAXBrokerage.cs", label="Entry Unk.Contains", span=""];
m14_120 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m14_123 [cluster="Unk.First", file="GDAXBrokerage.cs", label="Entry Unk.First", span=""];
m14_160 [cluster="System.Collections.Generic.List<T>.ToArray()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m14_127 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m14_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="270-270"];
m14_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label=Ticks, span="272-272"];
m14_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="var copy = Ticks.ToArray()", span="274-274"];
m14_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Ticks.Clear()", span="275-275"];
m14_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="return copy;", span="276-276"];
m14_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="270-270"];
m14_55 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m14_118 [cluster="Unk.ConvertProductId", file="GDAXBrokerage.cs", label="Entry Unk.ConvertProductId", span=""];
m14_172 [file="GDAXBrokerage.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m14_173 [file="GDAXBrokerage.cs", label=item, span=""];
m15_11 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", span="40-40"];
m15_17 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="370-370"];
m15_26 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="54-54"];
m15_27 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="AssertResult(expected, actual.Current.Value)", span="54-54"];
m15_28 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="54-54"];
m15_25 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, double>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, double>)", span="170-170"];
m15_32 [cluster="System.Math.Abs(decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m15_22 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", span="52-52"];
m15_23 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="GDAXBrokerage.Messaging.cs", label="TestHelper.TestIndicator(indicator, ''frama.txt'', ''Filt'', (actual, expected) => {AssertResult(expected, actual.Current.Value);})", span="54-54"];
m15_24 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", span="52-52"];
m15_0 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", span="27-27"];
m15_1 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="FractalAdaptiveMovingAverage frama = new FractalAdaptiveMovingAverage('''', 6, 198)", span="30-30"];
m15_2 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="TestHelper.GetDataStream(7)", span="32-32"];
m15_3 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="frama.Update(new TradeBar { High = data, Low = data })", span="34-34"];
m15_4 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="Assert.IsTrue(frama.IsReady)", span="36-36"];
m15_5 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="Assert.AreNotEqual(0m, frama.Current.Value)", span="37-37"];
m15_6 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="Assert.AreNotEqual(0, frama.Samples)", span="38-38"];
m15_7 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="frama.Reset()", span="40-40"];
m15_8 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="TestHelper.AssertIndicatorIsInDefaultState(frama)", span="42-42"];
m15_9 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", span="27-27"];
m15_15 [cluster="Unk.AreNotEqual", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.AreNotEqual", span=""];
m15_13 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m15_29 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", span="57-57"];
m15_30 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="GDAXBrokerage.Messaging.cs", label="Assert.IsTrue(Math.Abs((decimal)expected - actual) < 0.006m)", span="59-59"];
m15_31 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", span="57-57"];
m15_14 [cluster="Unk.IsTrue", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.IsTrue", span=""];
m15_12 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m15_16 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", span="134-134"];
m15_18 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", span="46-46"];
m15_19 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="GDAXBrokerage.Messaging.cs", label="var indicator = new FractalAdaptiveMovingAverage('''', 16, 198)", span="48-48"];
m15_20 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="GDAXBrokerage.Messaging.cs", label="RunTestIndicator(indicator)", span="49-49"];
m15_21 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", span="46-46"];
m15_10 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40"];
m18_744 [cluster="IBApi.Order.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry IBApi.Order.cstr", span=""];
m18_970 [cluster="QuantConnect.Holding.Holding()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m18_404 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m18_333 [cluster="int.ToString()", file="InteractiveBrokersBrokerage.cs", label="Entry int.ToString()", span="0-0"];
m18_505 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m18_721 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m18_589 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", span="78-78"];
m18_121 [cluster="Unk.ToArray", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToArray", span=""];
m18_294 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676"];
m18_295 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Dispose(): Disposing of IB resources.'')", span="678-678"];
m18_296 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="_client != null", span="680-680"];
m18_297 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="682-682"];
m18_299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="_messagingRateLimiter.Dispose()", span="686-686"];
m18_298 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="_client.Dispose()", span="683-683"];
m18_300 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="_ctsRestartGateway.Cancel(false)", span="688-688"];
m18_301 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676"];
m18_590 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m18_238 [cluster="EReader.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry EReader.cstr", span=""];
m18_277 [cluster="Unk.reqAccountUpdates", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqAccountUpdates", span=""];
m18_811 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="65-65"];
m18_1350 [cluster="System.IO.File.ReadAllLines(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.File.ReadAllLines(string)", span="0-0"];
m18_1253 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2467-2467"];
m18_1269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="int timeOut = 60", span="2477-2477"];
m18_1273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var useRegularTradingHours = Convert.ToInt32(!request.IncludeExtendedMarketHours)", span="2483-2483"];
m18_1274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="endTime >= startTime", span="2486-2486"];
m18_1278 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[historicalTicker] = ''GetHistory: '' + contract", span="2492-2492"];
m18_1279 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        var bar = ConvertTradeBar(request.Symbol, request.Resolution, args);\r\n                        if (request.Resolution != Resolution.Daily)\r\n                        {\r\n                            bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone);\r\n                        }\r\n\r\n                        historyPiece.Add(bar);\r\n                        dataDownloading.Set();\r\n                    }\r\n                }", span="2494-2507"];
m18_1285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.ClientSocket.reqHistoricalData(historicalTicker, contract, endTime.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                    duration, resolution, dataType, useRegularTradingHours, 2, false, new List<TagValue>())", span="2534-2535"];
m18_1270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var history = new List<TradeBar>()", span="2479-2479"];
m18_1288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="waitResult = WaitHandle.WaitAny(new WaitHandle[] {dataDownloading, dataDownloaded}, timeOut*1000)", span="2540-2540"];
m18_1294 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Pacing violation. Paused for {0} secs.'', timeOut)", span="2552-2552"];
m18_1295 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() History request timed out ({0} sec)'', timeOut)", span="2556-2556"];
m18_1271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var dataDownloading = new AutoResetEvent(false)", span="2480-2480"];
m18_1298 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="history.AddRange(filteredPiece)", span="2568-2568"];
m18_1300 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="return history;", span="2574-2574"];
m18_1272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var dataDownloaded = new ManualResetEvent(false)", span="2481-2481"];
m18_1280 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2509-2515"];
m18_1281 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                {\r\n                    if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                    {\r\n                        // pacing violation happened\r\n                        pacing = true;\r\n                    }\r\n                    if (args.Code == 162 && args.Message.Contains(''no data''))\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2517-2528"];
m18_1275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var pacing = false", span="2488-2488"];
m18_1276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var historyPiece = new List<TradeBar>()", span="2489-2489"];
m18_1277 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var historicalTicker = GetNextTickerId()", span="2490-2490"];
m18_1296 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="!historyPiece.Any()", span="2561-2561"];
m18_1297 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var filteredPiece = historyPiece.OrderBy(x => x.Time)", span="2566-2566"];
m18_1283 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.HistoricalData += clientOnHistoricalData", span="2531-2531"];
m18_1290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.HistoricalData -= clientOnHistoricalData", span="2544-2544"];
m18_1284 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="2532-2532"];
m18_1291 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="2545-2545"];
m18_1282 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.Error += clientOnError", span="2530-2530"];
m18_1289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.Error -= clientOnError", span="2543-2543"];
m18_1293 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label=pacing, span="2549-2549"];
m18_1286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var waitResult = 0", span="2537-2537"];
m18_1287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="waitResult == 0", span="2538-2538"];
m18_1292 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="waitResult == WaitHandle.WaitTimeout", span="2547-2547"];
m18_1299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="endTime = filteredPiece.First().Time", span="2571-2571"];
m18_1301 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2467-2467"];
m18_569 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1198-1198"];
m18_604 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="!_disconnected1100Fired", span="1202-1202"];
m18_605 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="return;", span="1204-1204"];
m18_606 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="var isResetTime = IsWithinScheduledServerResetTimes()", span="1207-1207"];
m18_607 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="!isResetTime", span="1209-1209"];
m18_614 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="_previouslyInResetTime = isResetTime", span="1234-1234"];
m18_608 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label=_previouslyInResetTime, span="1211-1211"];
m18_612 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Within server reset times, trying to wait for reconnect...'')", span="1228-1228"];
m18_609 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Reset time finished and still disconnected. Restarting...'')", span="1214-1214"];
m18_611 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="OnMessage(BrokerageMessageEvent.Disconnected(''Connection with Interactive Brokers lost. '' +\r\n                                                                 ''This could be because of internet connectivity issues or a log in from another location.''\r\n                        ))", span="1221-1223"];
m18_610 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="_resetEventRestartGateway.Set()", span="1216-1216"];
m18_613 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(_ => TryWaitForReconnect())", span="1231-1231"];
m18_615 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1198-1198"];
m18_1059 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m18_784 [cluster="Unk.ToString", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToString", span=""];
m18_1264 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m18_176 [cluster="System.DateTime.ToString(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m18_397 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m18_120 [cluster="Unk.ToList", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToList", span=""];
m18_27 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m18_1093 [cluster="string.ToLower()", file="InteractiveBrokersBrokerage.cs", label="Entry string.ToLower()", span="0-0"];
m18_1212 [cluster="Unk.Count", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Count", span=""];
m18_140 [cluster="Unk.Substring", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Substring", span=""];
m18_1142 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="412-412"];
m18_775 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1700-1700"];
m18_851 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="order.OrderType", span="1702-1702"];
m18_861 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="order.Tif == IB.TimeInForce.MarketOnOpen", span="1710-1710"];
m18_864 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(order.OrderType, ''order.OrderType'');", span="1717-1717"];
m18_852 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.Limit", span="1704-1704"];
m18_854 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.Stop", span="1705-1705"];
m18_856 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.StopLimit", span="1706-1706"];
m18_858 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.MarketOnClose", span="1707-1707"];
m18_860 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.Market", span="1709-1709"];
m18_853 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.Limit;", span="1704-1704"];
m18_855 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.StopMarket;", span="1705-1705"];
m18_857 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.StopLimit;", span="1706-1706"];
m18_859 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.MarketOnClose;", span="1707-1707"];
m18_862 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.MarketOnOpen;", span="1712-1712"];
m18_863 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.Market;", span="1714-1714"];
m18_865 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1700-1700"];
m18_331 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1591-1591"];
m18_785 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="var securityType = ConvertSecurityType(symbol.ID.SecurityType)", span="1593-1593"];
m18_786 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="var ibSymbol = _symbolMapper.GetBrokerageSymbol(symbol)", span="1594-1594"];
m18_787 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="var contract = new Contract\r\n            {\r\n                Symbol = ibSymbol,\r\n                Exchange = exchange ?? ''Smart'',\r\n                SecType = securityType,\r\n                Currency = ''USD''\r\n            }", span="1595-1601"];
m18_788 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Forex", span="1602-1602"];
m18_792 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Equity", span="1610-1610"];
m18_794 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Option", span="1615-1615"];
m18_795 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.EightCharacter)", span="1617-1617"];
m18_796 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Right = symbol.ID.OptionRight == OptionRight.Call ? IB.RightType.Call : IB.RightType.Put", span="1618-1618"];
m18_797 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Strike = Convert.ToDouble(symbol.ID.StrikePrice)", span="1619-1619"];
m18_801 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Future", span="1625-1625"];
m18_803 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.YearMonth)", span="1631-1631"];
m18_804 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.Market == Market.USA", span="1633-1633"];
m18_807 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Exchange = _futuresExchanges.ContainsKey(symbol.ID.Market) ?\r\n                                            _futuresExchanges[symbol.ID.Market] :\r\n                                            symbol.ID.Market", span="1640-1642"];
m18_790 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Symbol = ibSymbol.Substring(0, 3)", span="1606-1606"];
m18_791 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Currency = ibSymbol.Substring(3)", span="1607-1607"];
m18_798 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Symbol = ibSymbol", span="1620-1620"];
m18_802 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Symbol = ibSymbol", span="1630-1630"];
m18_789 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Exchange = ''IDEALPRO''", span="1605-1605"];
m18_793 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.PrimaryExch = GetPrimaryExchange(contract)", span="1612-1612"];
m18_808 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="return contract;", span="1646-1646"];
m18_799 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Multiplier = ''100''", span="1621-1621"];
m18_800 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.TradingClass = GetTradingClass(contract)", span="1622-1622"];
m18_805 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Exchange = ''''", span="1635-1635"];
m18_806 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Exchange = GetFuturesContractExchange(contract)", span="1636-1636"];
m18_809 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1591-1591"];
m18_601 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m18_617 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", span="68-68"];
m18_634 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m18_1213 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m18_99 [cluster="Unk.reqAllOpenOrders", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqAllOpenOrders", span=""];
m18_355 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="779-779"];
m18_356 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details", span="781-781"];
m18_357 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="782-782"];
m18_359 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="details = GetContractDetails(contract)", span="787-787"];
m18_358 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details.Summary.TradingClass;", span="784-784"];
m18_360 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="details == null", span="788-788"];
m18_362 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details.Summary.TradingClass;", span="794-794"];
m18_361 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="return null;", span="791-791"];
m18_363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="779-779"];
m18_1354 [cluster="Unk.Any", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Any", span=""];
m18_334 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m18_591 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="214-214"];
m18_665 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1724-1724"];
m18_867 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label=status, span="1726-1726"];
m18_889 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(status, ''status'');", span="1759-1759"];
m18_868 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.ApiPending", span="1728-1728"];
m18_872 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.ApiCancelled", span="1733-1733"];
m18_876 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Submitted", span="1738-1738"];
m18_878 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Filled", span="1741-1741"];
m18_880 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.PartiallyFilled", span="1744-1744"];
m18_882 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Error", span="1747-1747"];
m18_884 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Inactive", span="1750-1750"];
m18_887 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.None", span="1754-1754"];
m18_869 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.PendingSubmit", span="1729-1729"];
m18_870 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.PreSubmitted", span="1730-1730"];
m18_871 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.New;", span="1731-1731"];
m18_873 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.PendingCancel", span="1734-1734"];
m18_874 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Cancelled", span="1735-1735"];
m18_875 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.Canceled;", span="1736-1736"];
m18_877 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.Submitted;", span="1739-1739"];
m18_879 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.Filled;", span="1742-1742"];
m18_881 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.PartiallyFilled;", span="1745-1745"];
m18_883 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.Invalid;", span="1748-1748"];
m18_885 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.ConvertOrderStatus(): Inactive order'')", span="1751-1751"];
m18_886 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.None;", span="1752-1752"];
m18_888 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.None;", span="1755-1755"];
m18_890 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1724-1724"];
m18_1254 [cluster="System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", span="0-0"];
m18_1057 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_747 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1682-1682"];
m18_836 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label=type, span="1684-1684"];
m18_849 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="1693-1693"];
m18_837 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.Market", span="1686-1686"];
m18_839 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.Limit", span="1687-1687"];
m18_841 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.StopMarket", span="1688-1688"];
m18_843 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.StopLimit", span="1689-1689"];
m18_845 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.MarketOnOpen", span="1690-1690"];
m18_847 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.MarketOnClose", span="1691-1691"];
m18_838 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.Market;", span="1686-1686"];
m18_840 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.Limit;", span="1687-1687"];
m18_842 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.Stop;", span="1688-1688"];
m18_844 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.StopLimit;", span="1689-1689"];
m18_846 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.Market;", span="1690-1690"];
m18_848 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.MarketOnClose;", span="1691-1691"];
m18_850 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1682-1682"];
m18_990 [cluster="System.Math.Round(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Math.Round(decimal)", span="0-0"];
m18_1211 [cluster="Unk.GroupBy", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GroupBy", span=""];
m18_187 [cluster="System.Collections.Generic.List<T>.Add(T)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m18_928 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m18_145 [cluster="Unk.GetUsdConversion", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetUsdConversion", span=""];
m18_343 [cluster="Unk.Format", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Format", span=""];
m18_105 [cluster="Unk.ConvertOrder", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ConvertOrder", span=""];
m18_781 [cluster="StopMarketOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry StopMarketOrder.cstr", span=""];
m18_1094 [cluster="string.IndexOf(string)", file="InteractiveBrokersBrokerage.cs", label="Entry string.IndexOf(string)", span="0-0"];
m18_149 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411"];
m18_150 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="InteractiveBrokersBrokerage.cs", label="CheckIbGateway()", span="413-413"];
m18_151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: return _cashBalances.Select(x => new Cash(x.Key, x.Value, GetUsdConversion(x.Key))).ToList();", span="415-415"];
m18_152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411"];
m18_303 [cluster="QuantConnect.Util.RateGate.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.RateGate.Dispose()", span="196-196"];
m18_502 [cluster="Unk.reqMktData", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqMktData", span=""];
m18_1307 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m18_100 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m18_244 [cluster="Unk.setServerLogLevel", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.setServerLogLevel", span=""];
m18_1306 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m18_603 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2040-2040"];
m18_1033 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=symbols, span="2044-2044"];
m18_1034 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="CanSubscribe(symbol)", span="2046-2046"];
m18_1053 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="2092-2092"];
m18_1036 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Request: '' + symbol.Value)", span="2050-2050"];
m18_1037 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="!_subscribedSymbols.ContainsKey(symbol)", span="2052-2052"];
m18_1038 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var subscribeSymbol = symbol", span="2055-2055"];
m18_1039 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Option && symbol.IsCanonical()", span="2058-2058"];
m18_1040 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="subscribeSymbol = symbol.Underlying", span="2060-2060"];
m18_1041 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_underlyings.Add(subscribeSymbol, symbol)", span="2061-2061"];
m18_1042 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Future && symbol.IsCanonical()", span="2065-2065"];
m18_1050 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscribedSymbols[symbol] = id", span="2083-2083"];
m18_1052 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Processed: {0} ({1}) # {2}'', symbol.Value, contract.ToString(), id)", span="2086-2086"];
m18_1035 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=_sync, span="2048-2048"];
m18_1045 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var contract = CreateContract(subscribeSymbol)", span="2071-2071"];
m18_1051 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscribedTickets[id] = subscribeSymbol", span="2084-2084"];
m18_1043 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2067-2067"];
m18_1044 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var id = GetNextTickerId()", span="2070-2070"];
m18_1046 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[id] = ''Subscribe: '' + contract", span="2073-2073"];
m18_1048 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscriptionTimes[id] = DateTime.UtcNow", span="2078-2078"];
m18_1049 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Client.ClientSocket.reqMktData(id, contract, ''101'', false, false, new List<TagValue>())", span="2081-2081"];
m18_1047 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_messagingRateLimiter.WaitToProceed()", span="2075-2075"];
m18_1054 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.Subscribe(): '' + err.Message)", span="2094-2094"];
m18_1055 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2040-2040"];
m18_245 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m18_750 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1517-1517"];
m18_751 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="Order order", span="1524-1524"];
m18_752 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="var mappedSymbol = MapSymbol(contract)", span="1525-1525"];
m18_753 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="var direction = ConvertOrderDirection(ibOrder.Action)", span="1526-1526"];
m18_755 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="var orderType = ConvertOrderType(ibOrder)", span="1528-1528"];
m18_758 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new MarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime() // not sure how to get this data\r\n                        )", span="1532-1535"];
m18_760 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new MarketOnOpenOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime())", span="1539-1541"];
m18_762 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new MarketOnCloseOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime()\r\n                        )", span="1545-1548"];
m18_764 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new LimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1552-1556"];
m18_766 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new StopMarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        new DateTime()\r\n                        )", span="1560-1564"];
m18_768 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new StopLimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1568-1573"];
m18_770 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order.BrokerId.Add(ibOrder.OrderId.ToString())", span="1580-1580"];
m18_754 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="var quantitySign = direction == OrderDirection.Sell ? -1 : 1", span="1527-1527"];
m18_756 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label=orderType, span="1529-1529"];
m18_769 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidEnumArgumentException(''orderType'', (int) orderType, typeof (OrderType));", span="1577-1577"];
m18_757 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.Market", span="1531-1531"];
m18_759 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.MarketOnOpen", span="1538-1538"];
m18_761 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.MarketOnClose", span="1544-1544"];
m18_763 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.Limit", span="1551-1551"];
m18_765 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.StopMarket", span="1559-1559"];
m18_767 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.StopLimit", span="1567-1567"];
m18_771 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="return order;", span="1582-1582"];
m18_772 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1517-1517"];
m18_746 [cluster="System.Math.Abs(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m18_387 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m18_119 [cluster="Unk.Where", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Where", span=""];
m18_354 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="815-815"];
m18_373 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="int timeout = 60", span="817-817"];
m18_376 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[requestId] = ''GetContractDetails: '' + contract", span="822-822"];
m18_378 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails = (sender, args) =>\r\n            {\r\n                // ignore other requests\r\n                if (args.RequestId != requestId) return;\r\n                details = args.ContractDetails;\r\n                var uniqueKey = GetUniqueKey(contract);\r\n                _contractDetails.TryAdd(uniqueKey, details);\r\n                manualResetEvent.Set();\r\n                Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey);\r\n            }", span="827-836"];
m18_380 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="841-841"];
m18_374 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details = null", span="819-819"];
m18_381 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(timeout * 1000)", span="843-843"];
m18_382 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetContractDetails(): failed to receive response from IB within {0} seconds'', timeout)", span="845-845"];
m18_375 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="var requestId = GetNextRequestId()", span="820-820"];
m18_377 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="824-824"];
m18_379 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetails += clientOnContractDetails", span="838-838"];
m18_383 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetails -= clientOnContractDetails", span="849-849"];
m18_384 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details;", span="851-851"];
m18_385 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="815-815"];
m18_574 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m18_243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", span="610-610"];
m18_260 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.AccountDownloadEndEventArgs> clientOnAccountDownloadEnd = (sender, args) =>\r\n            {\r\n                Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account);\r\n                _accountHoldingsResetEvent.Set();\r\n            }", span="613-617"];
m18_261 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.AccountDownloadEnd += clientOnAccountDownloadEnd", span="618-618"];
m18_269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="643-643"];
m18_273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="652-652"];
m18_262 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="var firstAccountUpdateReceived = new ManualResetEvent(false)", span="622-622"];
m18_263 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.UpdateAccountValueEventArgs> clientOnUpdateAccountValue = (sender, args) =>\r\n            {\r\n                firstAccountUpdateReceived.Set();\r\n            }", span="623-626"];
m18_266 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="firstAccountUpdateReceived.WaitOne(2500)", span="634-634"];
m18_264 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.UpdateAccountValue += clientOnUpdateAccountValue", span="628-628"];
m18_270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="644-644"];
m18_274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="653-653"];
m18_265 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="0: _client.ClientSocket.reqAccountUpdates(true, _account)", span="631-631"];
m18_267 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(2500)", span="638-638"];
m18_268 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="!_accountHoldingsResetEvent.WaitOne(15000)", span="640-640"];
m18_271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Operation took longer than 15 seconds.'')", span="646-646"];
m18_272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="return false;", span="648-648"];
m18_275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="return true;", span="655-655"];
m18_276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", span="610-610"];
m18_97 [cluster="System.Collections.Generic.List<T>.List()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m18_259 [cluster="Unk.processMsgs", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.processMsgs", span=""];
m18_339 [cluster="Unk.placeOrder", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.placeOrder", span=""];
m18_237 [cluster="Unk.eConnect", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.eConnect", span=""];
m18_1058 [cluster="QuantConnect.Symbol.IsCanonical()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m18_1358 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2611-2611"];
m18_31 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_nextValidId = e.OrderId", span="208-208"];
m18_33 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId)", span="211-211"];
m18_44 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in ResetGatewayConnection: '' + exception)", span="233-233"];
m18_48 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in reset handler thread: '' + exception)", span="244-244"];
m18_29 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="203-212"];
m18_30 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_nextValidId == 0", span="206-206"];
m18_32 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_waitForNextValidId.Set()", span="209-209"];
m18_34 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="203-212"];
m18_37 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="215-246"];
m18_38 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread started.'')", span="219-219"];
m18_39 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="!_ctsRestartGateway.IsCancellationRequested", span="221-221"];
m18_40 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_resetEventRestartGateway.WaitOne(1000, _ctsRestartGateway.Token)", span="223-223"];
m18_46 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread ended.'')", span="240-240"];
m18_41 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence start.'')", span="225-225"];
m18_42 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="ResetGatewayConnection()", span="229-229"];
m18_43 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label=Exception, span="231-231"];
m18_45 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence end.'')", span="236-236"];
m18_47 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label=Exception, span="242-242"];
m18_49 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="215-246"];
m18_103 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="orders.Add(ConvertOrder(args.Order, args.Contract))", span="344-344"];
m18_108 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="349-349"];
m18_102 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="341-345"];
m18_104 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="341-345"];
m18_107 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="346-350"];
m18_109 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="346-350"];
m18_123 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="378-378"];
m18_127 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="378-378"];
m18_130 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="381-400"];
m18_146 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="400-400"];
m18_124 [cluster="lambda expression", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="0: ObjectActivator.Clone(x.Value)", span="378-378"];
m18_125 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="378-378"];
m18_128 [cluster="lambda expression", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="1: x.Quantity != 0", span="378-378"];
m18_129 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="378-378"];
m18_131 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="local.Type != SecurityType.Forex", span="384-384"];
m18_132 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="local.ConversionRate = 1m", span="387-387"];
m18_134 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var currency = local.Symbol.Value.Substring(3)", span="391-391"];
m18_136 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="local.ConversionRate = 1m", span="394-394"];
m18_138 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));", span="399-399"];
m18_133 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return null;", span="388-388"];
m18_135 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="currency == ''USD''", span="392-392"];
m18_143 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="local.ConversionRate = GetUsdConversion(currency)", span="399-399"];
m18_137 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return null;", span="395-395"];
m18_139 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="381-400"];
m18_142 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="399-399"];
m18_144 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="399-399"];
m18_147 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x != null", span="400-400"];
m18_148 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="400-400"];
m18_153 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="415-415"];
m18_154 [cluster="lambda expression", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: new Cash(x.Key, x.Value, GetUsdConversion(x.Key))", span="415-415"];
m18_155 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="415-415"];
m18_185 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="details.Add(args)", span="450-450"];
m18_181 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="446-446"];
m18_180 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == requestId", span="446-446"];
m18_184 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == requestId", span="450-450"];
m18_179 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="444-447"];
m18_182 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="444-447"];
m18_183 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="448-451"];
m18_186 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="448-451"];
m18_252 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="reader.processMsgs()", span="510-510"];
m18_254 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error)", span="515-515"];
m18_248 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="501-520"];
m18_249 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId)", span="503-503"];
m18_250 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.IsConnected()", span="505-505"];
m18_251 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_signal.waitForSignal()", span="509-509"];
m18_255 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId)", span="519-519"];
m18_253 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label=Exception, span="512-512"];
m18_256 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="501-520"];
m18_279 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account)", span="615-615"];
m18_283 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="firstAccountUpdateReceived.Set()", span="625-625"];
m18_278 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="613-617"];
m18_280 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_accountHoldingsResetEvent.Set()", span="616-616"];
m18_281 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="613-617"];
m18_282 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="623-626"];
m18_284 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="623-626"];
m18_392 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var uniqueKey = GetUniqueKey(contract)", span="832-832"];
m18_389 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId != requestId", span="830-830"];
m18_394 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="834-834"];
m18_391 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="details = args.ContractDetails", span="831-831"];
m18_388 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="827-836"];
m18_390 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return;", span="830-830"];
m18_393 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_contractDetails.TryAdd(uniqueKey, details)", span="833-833"];
m18_396 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="827-836"];
m18_395 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey)", span="835-835"];
m18_412 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Array.IndexOf(exchanges, e)", span="864-864"];
m18_408 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="863-863"];
m18_411 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="864-864"];
m18_409 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="details.Summary.Exchange", span="863-863"];
m18_410 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="863-863"];
m18_413 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="864-864"];
m18_435 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="884-884"];
m18_432 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="contractDetails.Add(args.ContractDetails)", span="881-881"];
m18_431 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="881-881"];
m18_433 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="881-881"];
m18_434 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="884-884"];
m18_436 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="884-884"];
m18_515 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency)", span="961-961"];
m18_510 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x == invertedSymbol || x == normalSymbol", span="920-920"];
m18_509 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="920-920"];
m18_516 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="962-962"];
m18_525 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="1007-1007"];
m18_513 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK", span="958-958"];
m18_514 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="rate = Convert.ToDecimal(args.Price)", span="960-960"];
m18_521 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="data.Add(args)", span="999-999"];
m18_520 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == historicalTicker", span="997-997"];
m18_524 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == historicalTicker", span="1005-1005"];
m18_528 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="1013-1013"];
m18_531 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="1044-1044"];
m18_511 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="920-920"];
m18_512 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="956-964"];
m18_517 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="956-964"];
m18_519 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="995-1001"];
m18_522 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="995-1001"];
m18_523 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="1003-1009"];
m18_526 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="1003-1009"];
m18_527 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="1011-1018"];
m18_529 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="pacingViolation = true", span="1016-1016"];
m18_530 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="1011-1018"];
m18_532 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Bar.Time", span="1044-1044"];
m18_533 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="1044-1044"];
m18_621 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="1231-1231"];
m18_622 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="TryWaitForReconnect()", span="1231-1231"];
m18_623 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="1231-1231"];
m18_1215 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2352-2352"];
m18_1225 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="exchangeFilter(g.Key)", span="2386-2386"];
m18_1218 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2384-2384"];
m18_1221 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2385-2385"];
m18_1224 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2386-2386"];
m18_1214 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2352-2352"];
m18_1216 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2352-2352"];
m18_1219 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Summary", span="2384-2384"];
m18_1220 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2384-2384"];
m18_1222 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Exchange", span="2385-2385"];
m18_1223 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2385-2385"];
m18_1226 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2386-2386"];
m18_1255 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2438-2438"];
m18_1258 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2439-2439"];
m18_1261 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2440-2447"];
m18_1267 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="bar.Time >= requestStartTime && bar.EndTime <= requestEndTime", span="2459-2459"];
m18_1266 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2459-2459"];
m18_1256 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="bid.Time", span="2438-2438"];
m18_1257 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2438-2438"];
m18_1259 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="ask.Time", span="2439-2439"];
m18_1260 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2439-2439"];
m18_1262 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period)", span="2440-2447"];
m18_1263 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2440-2447"];
m18_1268 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2459-2459"];
m18_1310 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var bar = ConvertTradeBar(request.Symbol, request.Resolution, args)", span="2498-2498"];
m18_1311 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="request.Resolution != Resolution.Daily", span="2499-2499"];
m18_1312 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone)", span="2501-2501"];
m18_1314 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="dataDownloading.Set()", span="2505-2505"];
m18_1318 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="dataDownloaded.Set()", span="2513-2513"];
m18_1324 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="dataDownloaded.Set()", span="2526-2526"];
m18_1313 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="historyPiece.Add(bar)", span="2504-2504"];
m18_1309 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == historicalTicker", span="2496-2496"];
m18_1317 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == historicalTicker", span="2511-2511"];
m18_1321 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="2519-2519"];
m18_1323 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.Code == 162 && args.Message.Contains(''no data'')", span="2524-2524"];
m18_1326 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2566-2566"];
m18_1308 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2494-2507"];
m18_1315 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2494-2507"];
m18_1316 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2509-2515"];
m18_1319 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2509-2515"];
m18_1320 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2517-2528"];
m18_1322 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="pacing = true", span="2522-2522"];
m18_1325 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2517-2528"];
m18_1327 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Time", span="2566-2566"];
m18_1328 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2566-2566"];
m18_1356 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Contains(separatorLine)", span="2609-2609"];
m18_1355 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2609-2609"];
m18_1357 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2609-2609"];
m18_1359 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="line.Contains(''End this session and let the other session proceed'')", span="2611-2611"];
m18_1360 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2611-2611"];
m18_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="283-283"];
m18_63 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="287-287"];
m18_64 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="IBPlaceOrder(order, false)", span="289-289"];
m18_65 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="291-291"];
m18_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return true;", span="296-296"];
m18_66 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.UpdateOrder(): '' + err)", span="293-293"];
m18_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="294-294"];
m18_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="283-283"];
m18_958 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m18_1265 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m18_748 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1934-1934"];
m18_986 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="minTick == 0", span="1936-1936"];
m18_987 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="return minTick;", span="1936-1936"];
m18_988 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="return Math.Round(input/minTick)*minTick;", span="1937-1937"];
m18_989 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1934-1934"];
m18_98 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m18_779 [cluster="MarketOnCloseOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry MarketOnCloseOrder.cstr", span=""];
m18_1014 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="1999-1999"];
m18_1015 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_brokerTimeDiff = e.CurrentTimeUtc.Subtract(DateTime.UtcNow)", span="2002-2002"];
m18_1016 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="1999-1999"];
m18_812 [cluster="Contract.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry Contract.cstr", span=""];
m18_1085 [cluster="System.Convert.ToInt32(double)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m18_499 [cluster="Unk.Create", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Create", span=""];
m18_616 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1977-1977"];
m18_1003 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="bool result", span="1979-1979"];
m18_1004 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="var time = DateTime.UtcNow.ConvertFromUtc(TimeZones.NewYork)", span="1980-1980"];
m18_1005 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="time.DayOfWeek == DayOfWeek.Saturday", span="1983-1983"];
m18_1007 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="var timeOfDay = time.TimeOfDay", span="1989-1989"];
m18_1006 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="result = true", span="1985-1985"];
m18_1008 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="result = timeOfDay > new TimeSpan(23, 0, 0) || timeOfDay < new TimeSpan(1, 30, 0)", span="1991-1991"];
m18_1009 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes(): '' + result)", span="1994-1994"];
m18_1010 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="return result;", span="1996-1996"];
m18_1011 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1977-1977"];
m18_82 [cluster="Unk.cancelOrder", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.cancelOrder", span=""];
m18_866 [cluster="ArgumentException.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry ArgumentException.cstr", span=""];
m18_500 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1958-1958"];
m18_999 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="InteractiveBrokersBrokerage.cs", label="return Interlocked.Increment(ref _nextTickerId);", span="1960-1960"];
m18_1000 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1958-1958"];
m18_1149 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2262-2262"];
m18_1150 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Symbol symbol", span="2264-2264"];
m18_1151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2266-2266"];
m18_1156 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Quantity = AdjustQuantity(securityType, e.Size)", span="2273-2273"];
m18_1160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="e.Field", span="2278-2278"];
m18_1183 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!_openInterests.ContainsKey(symbol) || _openInterests[symbol] != e.Size", span="2320-2320"];
m18_1185 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = e.Size", span="2323-2323"];
m18_1186 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_openInterests[symbol] = e.Size", span="2324-2324"];
m18_1152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2266-2266"];
m18_1153 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var tick = new Tick()", span="2268-2268"];
m18_1154 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Symbol = symbol", span="2271-2271"];
m18_1155 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var securityType = symbol.ID.SecurityType", span="2272-2272"];
m18_1157 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Time = GetRealTimeTickTime(symbol)", span="2274-2274"];
m18_1163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastBidPrices.TryGetValue(symbol, out tick.BidPrice)", span="2284-2284"];
m18_1164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastBidSizes[symbol] = (int)tick.Quantity", span="2285-2285"];
m18_1169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastAskPrices.TryGetValue(symbol, out tick.AskPrice)", span="2295-2295"];
m18_1170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastAskSizes[symbol] = (int)tick.Quantity", span="2296-2296"];
m18_1176 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastPrices.TryGetValue(symbol, out lastPrice)", span="2307-2307"];
m18_1177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastVolumes[symbol] = (int)tick.Quantity", span="2308-2308"];
m18_1182 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Option || symbol.ID.SecurityType == SecurityType.Future", span="2318-2318"];
m18_1158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Quantity == 0", span="2276-2276"];
m18_1162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Quote", span="2282-2282"];
m18_1165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = tick.BidPrice", span="2287-2287"];
m18_1166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.BidSize = tick.Quantity", span="2288-2288"];
m18_1168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Quote", span="2293-2293"];
m18_1171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = tick.AskPrice", span="2298-2298"];
m18_1172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.AskSize = tick.Quantity", span="2299-2299"];
m18_1174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Trade", span="2304-2304"];
m18_1178 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = lastPrice", span="2310-2310"];
m18_1184 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.OpenInterest", span="2322-2322"];
m18_1189 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.IsValid()", span="2333-2333"];
m18_1190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_ticks.Add(tick)", span="2333-2333"];
m18_1159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2276-2276"];
m18_1161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.BID_SIZE", span="2280-2280"];
m18_1167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.ASK_SIZE", span="2291-2291"];
m18_1173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.LAST_SIZE", span="2303-2303"];
m18_1179 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.OPEN_INTEREST", span="2314-2314"];
m18_1187 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2330-2330"];
m18_1175 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="decimal lastPrice", span="2306-2306"];
m18_1180 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.OPTION_CALL_OPEN_INTEREST", span="2315-2315"];
m18_1181 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.OPTION_PUT_OPEN_INTEREST", span="2316-2316"];
m18_1188 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label=_ticks, span="2332-2332"];
m18_1191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2262-2262"];
m18_969 [cluster="Unk.GetCurrencySymbol", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetCurrencySymbol", span=""];
m18_774 [cluster="Unk.ConvertOrderDirection", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ConvertOrderDirection", span=""];
m18_1032 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="424-424"];
m18_568 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m18_669 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1392-1392"];
m18_696 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: var orderFee = 0m", span="1396-1396"];
m18_697 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: currentQuantityFilled == totalQuantityFilled", span="1397-1397"];
m18_698 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: var security = _securityProvider.GetSecurity(order.Symbol)", span="1399-1399"];
m18_699 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: orderFee = security.FeeModel.GetOrderFee(security, order)", span="1400-1400"];
m18_700 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="var fillQuantity = order.Direction == OrderDirection.Buy ? currentQuantityFilled : -currentQuantityFilled", span="1404-1404"];
m18_701 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="order.PriceCurrency = _securityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="1405-1405"];
m18_702 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee, ''Interactive Brokers Order Fill Event'')\r\n            {\r\n                Status = status,\r\n                FillPrice = price,\r\n                FillQuantity = fillQuantity\r\n            }", span="1406-1411"];
m18_703 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="remainingQuantity != 0", span="1412-1412"];
m18_704 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="orderEvent.Message += '' - '' + remainingQuantity + '' remaining''", span="1414-1414"];
m18_705 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="OnOrderEvent(orderEvent)", span="1418-1418"];
m18_706 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1392-1392"];
m18_106 [cluster="Unk.Add", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Add", span=""];
m18_175 [cluster="ExecutionFilter.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry ExecutionFilter.cstr", span=""];
m18_81 [cluster="int.Parse(string)", file="InteractiveBrokersBrokerage.cs", label="Entry int.Parse(string)", span="0-0"];
m18_236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661"];
m18_285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.eDisconnect()", span="663-663"];
m18_286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread != null", span="665-665"];
m18_287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="_signal.issueSignal()", span="667-667"];
m18_288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread.Join()", span="668-668"];
m18_289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread = null", span="669-669"];
m18_290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661"];
m18_776 [cluster="MarketOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry MarketOrder.cstr", span=""];
m18_960 [cluster="TradeBar.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry TradeBar.cstr", span=""];
m18_302 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", span="424-424"];
m18_1106 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2191-2191"];
m18_1107 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Symbol symbol", span="2193-2193"];
m18_1108 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2195-2195"];
m18_1110 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var price = Convert.ToDecimal(e.Price)", span="2197-2197"];
m18_1116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="e.Price <= 0 &&\r\n                securityType != SecurityType.Future &&\r\n                securityType != SecurityType.Option", span="2207-2209"];
m18_1119 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="e.Field", span="2213-2213"];
m18_1109 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2195-2195"];
m18_1112 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Symbol = symbol", span="2202-2202"];
m18_1113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Time = GetRealTimeTickTime(symbol)", span="2203-2203"];
m18_1114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var securityType = symbol.ID.SecurityType", span="2204-2204"];
m18_1123 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastBidSizes.TryGetValue(symbol, out quantity)", span="2219-2219"];
m18_1125 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastBidPrices[symbol] = price", span="2221-2221"];
m18_1129 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastAskSizes.TryGetValue(symbol, out quantity)", span="2228-2228"];
m18_1131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastAskPrices[symbol] = price", span="2230-2230"];
m18_1135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastPrices[symbol] = price", span="2237-2237"];
m18_1111 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var tick = new Tick()", span="2199-2199"];
m18_1115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = price", span="2205-2205"];
m18_1122 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.BidPrice = price", span="2218-2218"];
m18_1128 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.AskPrice = price", span="2227-2227"];
m18_1134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = price", span="2236-2236"];
m18_1121 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Quote", span="2217-2217"];
m18_1124 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Quantity = quantity", span="2220-2220"];
m18_1127 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Quote", span="2226-2226"];
m18_1130 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Quantity = quantity", span="2229-2229"];
m18_1133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Trade", span="2235-2235"];
m18_1138 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.IsValid()", span="2245-2245"];
m18_1139 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_ticks.Add(tick)", span="2245-2245"];
m18_1117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2210-2210"];
m18_1118 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="int quantity", span="2212-2212"];
m18_1120 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.BID", span="2215-2215"];
m18_1126 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.ASK", span="2224-2224"];
m18_1132 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.LAST", span="2233-2233"];
m18_1136 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2241-2241"];
m18_1137 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label=_ticks, span="2244-2244"];
m18_1140 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2191-2191"];
m18_257 [cluster="Unk.IsConnected", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsConnected", span=""];
m18_1095 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2176-2176"];
m18_1096 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="var time = DateTime.UtcNow.Add(_brokerTimeDiff)", span="2178-2178"];
m18_1098 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="2181-2181"];
m18_1099 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType).TimeZone", span="2184-2184"];
m18_1100 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="2185-2185"];
m18_1097 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="DateTimeZone exchangeTimeZone", span="2180-2180"];
m18_1101 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="return time.ConvertFromUtc(exchangeTimeZone);", span="2188-2188"];
m18_1102 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2176-2176"];
m18_50 [cluster="System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", span="827-827"];
m18_959 [cluster="Unk.ParseExact", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ParseExact", span=""];
m18_1305 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m18_694 [cluster="Unk.ToInt32", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToInt32", span=""];
m18_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="156-156"];
m18_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="156-156"];
m18_633 [cluster="decimal.Parse(string, System.IFormatProvider)", file="InteractiveBrokersBrokerage.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m18_1349 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m18_636 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="151-151"];
m18_996 [cluster="System.Threading.Interlocked.Increment(ref int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m18_1353 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m18_953 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1874-1874"];
m18_954 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var time = resolution != Resolution.Daily ?\r\n                Time.UnixTimeStampToDateTime(Convert.ToDouble(historyBar.Bar.Time, CultureInfo.InvariantCulture)) :\r\n                DateTime.ParseExact(historyBar.Bar.Time, ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="1876-1878"];
m18_955 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return new TradeBar(time, symbol, (decimal)historyBar.Bar.Open, (decimal)historyBar.Bar.High, (decimal)historyBar.Bar.Low,\r\n                (decimal)historyBar.Bar.Close, historyBar.Bar.Volume, resolution.ToTimeSpan());", span="1880-1881"];
m18_956 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1874-1874"];
m18_156 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m18_338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1471-1471"];
m18_728 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="var ibOrder = new IBApi.Order\r\n            {\r\n                ClientId = _clientId,\r\n                OrderId = ibOrderId,\r\n                Account = _account,\r\n                Action = ConvertOrderDirection(order.Direction),\r\n                TotalQuantity = (int)Math.Abs(order.Quantity),\r\n                OrderType = ConvertOrderType(order.Type),\r\n                AllOrNone = false,\r\n                Tif = IB.TimeInForce.GoodTillCancel,\r\n                Transmit = true,\r\n                Rule80A = _agentDescription\r\n            }", span="1473-1485"];
m18_729 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="order.Type == OrderType.MarketOnOpen", span="1487-1487"];
m18_731 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="var limitOrder = order as LimitOrder", span="1492-1492"];
m18_732 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="var stopMarketOrder = order as StopMarketOrder", span="1493-1493"];
m18_733 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="var stopLimitOrder = order as StopLimitOrder", span="1494-1494"];
m18_735 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(limitOrder.LimitPrice, GetMinTick(contract)))", span="1497-1497"];
m18_737 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopMarketOrder.StopPrice, GetMinTick(contract)))", span="1501-1501"];
m18_739 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="var minTick = GetMinTick(contract)", span="1505-1505"];
m18_730 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="ibOrder.Tif = IB.TimeInForce.MarketOnOpen", span="1489-1489"];
m18_740 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.LimitPrice, minTick))", span="1506-1506"];
m18_742 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="return ibOrder;", span="1514-1514"];
m18_734 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="limitOrder != null", span="1495-1495"];
m18_736 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="stopMarketOrder != null", span="1499-1499"];
m18_738 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="stopLimitOrder != null", span="1503-1503"];
m18_741 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.StopPrice, minTick))", span="1507-1507"];
m18_743 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1471-1471"];
m18_782 [cluster="StopLimitOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry StopLimitOrder.cstr", span=""];
m18_247 [cluster="System.Exception.Exception(string, System.Exception)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m18_1348 [cluster="System.IO.File.GetLastWriteTimeUtc(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.File.GetLastWriteTimeUtc(string)", span="0-0"];
m18_635 [cluster="QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", span="37-37"];
m18_1017 [cluster="System.DateTime.Subtract(System.DateTime)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0"];
m18_1060 [cluster="QuantConnect.Util.RateGate.WaitToProceed()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.RateGate.WaitToProceed()", span="181-181"];
m18_1209 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", span="144-144"];
m18_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m18_1143 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2251-2251"];
m18_1144 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label=type, span="2253-2253"];
m18_1146 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="return size * 100;", span="2256-2256"];
m18_1147 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="return size;", span="2258-2258"];
m18_1145 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Equity", span="2255-2255"];
m18_1148 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2251-2251"];
m18_1304 [cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0"];
m18_777 [cluster="System.DateTime.DateTime()", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m18_118 [cluster="Unk.Select", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Select", span=""];
m18_234 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m18_177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1953-1953"];
m18_997 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="InteractiveBrokersBrokerage.cs", label="return Interlocked.Increment(ref _nextRequestId);", span="1955-1955"];
m18_998 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1953-1953"];
m18_101 [cluster="System.TimeoutException.TimeoutException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m18_35 [cluster="System.Threading.EventWaitHandle.Set()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m18_26 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.InteractiveBrokersClient(EReaderSignal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.InteractiveBrokersClient(EReaderSignal)", span="416-416"];
m18_386 [cluster="Unk.reqContractDetails", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqContractDetails", span=""];
m18_1012 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m18_995 [cluster="System.Threading.Thread.Yield()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m18_1302 [cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m18_246 [cluster="string.Contains(string)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Contains(string)", span="0-0"];
m18_110 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374"];
m18_111 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="CheckIbGateway()", span="376-376"];
m18_112 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="0: var holdings = _accountHoldings.Select(x => ObjectActivator.Clone(x.Value)).Where(x => x.Quantity != 0).ToList()", span="378-378"];
m18_113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="var tasks = holdings.Select(local =>\r\n            {\r\n                // we need to resolve the conversion rate for non-USD currencies\r\n                if (local.Type != SecurityType.Forex)\r\n                {\r\n                    // this assumes all non-forex are us denominated, we should add the currency to 'holding'\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n                // if quote currency is in USD don't bother making the request\r\n                var currency = local.Symbol.Value.Substring(3);\r\n                if (currency == ''USD'')\r\n                {\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n\r\n                // this will allow us to do this in parallel\r\n                return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));\r\n            }).Where(x => x != null).ToArray()", span="381-400"];
m18_115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="return holdings;", span="404-404"];
m18_114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="Task.WaitAll(tasks, 5000)", span="402-402"];
m18_116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374"];
m18_1345 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m18_620 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m18_720 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m18_693 [cluster="Unk.Error", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Error", span=""];
m18_1303 [cluster="System.Convert.ToInt32(bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToInt32(bool)", span="0-0"];
m18_501 [cluster="Unk.Trace", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Trace", span=""];
m18_783 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", span="0-0"];
m18_157 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="908-908"];
m18_437 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="currency == ''USD''", span="910-910"];
m18_439 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Getting USD conversion for '' + currency)", span="915-915"];
m18_440 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var invertedSymbol = ''USD'' + currency", span="918-918"];
m18_441 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var normalSymbol = currency + ''USD''", span="919-919"];
m18_444 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''Unable to resolve currency conversion pair for currency: '' + currency);", span="923-923"];
m18_452 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''Unable to resolve conversion for currency: '' + currency);", span="939-939"];
m18_458 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.TickPriceEventArgs> clientOnTickPrice = (sender, args) =>\r\n            {\r\n                if (args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK)\r\n                {\r\n                    rate = Convert.ToDecimal(args.Price);\r\n                    Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency);\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="956-964"];
m18_492 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Last historical price rate is '' + rate + '' for currency '' + currency)", span="1052-1052"];
m18_438 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="return 1m;", span="912-912"];
m18_442 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var currencyPair = Currencies.CurrencyPairs.FirstOrDefault(x => x == invertedSymbol || x == normalSymbol)", span="920-920"];
m18_445 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="bool inverted = invertedSymbol == currencyPair", span="927-927"];
m18_443 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="currencyPair == null", span="921-921"];
m18_446 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var symbol = Symbol.Create(currencyPair, SecurityType.Forex, Market.FXCM)", span="928-928"];
m18_459 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting market data for '' + currencyPair)", span="966-966"];
m18_476 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting historical data for '' + currencyPair)", span="1020-1020"];
m18_490 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''Unable to get recent quote for '' + currencyPair);", span="1048-1048"];
m18_497 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="return inverted ? 1 / rate : rate;", span="1063-1063"];
m18_447 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var contract = CreateContract(symbol)", span="929-929"];
m18_448 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details", span="931-931"];
m18_449 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="!_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="932-932"];
m18_450 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="details = GetContractDetails(contract)", span="934-934"];
m18_457 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[marketDataTicker] = ''GetUsdConversion.MarketData: '' + contract", span="954-954"];
m18_461 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqMktData(marketDataTicker, contract, string.Empty, true, false, new List<TagValue>())", span="969-969"];
m18_472 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[historicalTicker] = ''GetUsdConversion.Historical: '' + contract", span="993-993"];
m18_481 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqHistoricalData(historicalTicker, contract, DateTime.UtcNow.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                        requestSpan, IB.BarSize.OneSecond, HistoricalDataType.Ask, 0, 2, false, new List<TagValue>())", span="1027-1028"];
m18_451 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="details == null", span="937-937"];
m18_453 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var rate = 0m", span="943-943"];
m18_454 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="944-944"];
m18_455 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="int requestTimeout = 60", span="949-949"];
m18_462 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="971-971"];
m18_469 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Reset()", span="988-988"];
m18_474 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            manualResetEvent.Set();\r\n                        }\r\n                    }", span="1003-1009"];
m18_482 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="1030-1030"];
m18_456 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var marketDataTicker = GetNextTickerId()", span="952-952"];
m18_463 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="973-973"];
m18_483 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="1032-1032"];
m18_460 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.TickPrice += clientOnTickPrice", span="967-967"];
m18_464 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.TickPrice -= clientOnTickPrice", span="976-976"];
m18_465 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="rate <= 0", span="980-980"];
m18_466 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="bool pacingViolation", span="982-982"];
m18_467 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="int pacingDelaySeconds = 60", span="983-983"];
m18_468 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="pacingViolation = false", span="987-987"];
m18_485 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion() Pacing violation, pausing for {0} secs.'', pacingDelaySeconds)", span="1038-1038"];
m18_486 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(pacingDelaySeconds * 1000)", span="1039-1039"];
m18_470 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var data = new List<IB.HistoricalDataEventArgs>()", span="990-990"];
m18_471 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var historicalTicker = GetNextTickerId()", span="991-991"];
m18_473 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            data.Add(args);\r\n                        }\r\n                    }", span="995-1001"];
m18_487 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var ordered = data.OrderByDescending(x => x.Bar.Time)", span="1044-1044"];
m18_477 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.HistoricalData += clientOnHistoricalData", span="1021-1021"];
m18_493 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.HistoricalData -= clientOnHistoricalData", span="1056-1056"];
m18_475 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                    {\r\n                        if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                        {\r\n                            // pacing violation happened\r\n                            pacingViolation = true;\r\n                        }\r\n                    }", span="1011-1018"];
m18_478 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="1022-1022"];
m18_494 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="1057-1057"];
m18_479 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.Error += clientOnError", span="1023-1023"];
m18_484 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label=pacingViolation, span="1035-1035"];
m18_495 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.Error -= clientOnError", span="1058-1058"];
m18_496 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label=pacingViolation, span="1060-1060"];
m18_480 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="string requestSpan = ''100 S''", span="1026-1026"];
m18_488 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var mostRecentQuote = ordered.FirstOrDefault()", span="1045-1045"];
m18_489 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="mostRecentQuote == null", span="1046-1046"];
m18_491 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="rate = Convert.ToDecimal(mostRecentQuote.Bar.Close)", span="1051-1051"];
m18_498 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="908-908"];
m18_929 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1835-1835"];
m18_930 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label=resolution, span="1837-1837"];
m18_931 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Tick", span="1839-1839"];
m18_934 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Minute", span="1842-1842"];
m18_936 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Hour", span="1844-1844"];
m18_938 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Daily", span="1846-1846"];
m18_932 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Second", span="1840-1840"];
m18_933 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return IB.BarSize.OneSecond;", span="1841-1841"];
m18_935 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return IB.BarSize.OneMinute;", span="1843-1843"];
m18_937 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return IB.BarSize.OneHour;", span="1845-1845"];
m18_939 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return IB.BarSize.OneDay;", span="1848-1848"];
m18_940 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1835-1835"];
m18_1031 [cluster="System.Collections.Generic.List<T>.Clear()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m18_518 [cluster="System.Convert.ToDecimal(double)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m18_810 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1766-1766"];
m18_891 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label=type, span="1768-1768"];
m18_904 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(SecurityType));", span="1789-1789"];
m18_892 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Equity", span="1770-1770"];
m18_894 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Option", span="1773-1773"];
m18_896 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Commodity", span="1776-1776"];
m18_898 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Forex", span="1779-1779"];
m18_900 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Future", span="1782-1782"];
m18_902 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Base", span="1785-1785"];
m18_893 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Stock;", span="1771-1771"];
m18_895 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Option;", span="1774-1774"];
m18_897 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Commodity;", span="1777-1777"];
m18_899 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Cash;", span="1780-1780"];
m18_901 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Future;", span="1783-1783"];
m18_903 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(''InteractiveBrokers does not support SecurityType.Base'');", span="1786-1786"];
m18_905 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1766-1766"];
m18_1104 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m18_414 [cluster="Unk.IndexOf", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IndexOf", span=""];
m18_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304"];
m18_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="308-308"];
m18_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="order.BrokerId", span="311-311"];
m18_74 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[orderId] = ''CancelOrder: '' + order", span="315-315"];
m18_77 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.CancelOrder(): OrderID: '' + order.Id + '' - '' + err)", span="324-324"];
m18_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="var orderId = int.Parse(id)", span="313-313"];
m18_76 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="322-322"];
m18_79 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return true;", span="327-327"];
m18_75 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.cancelOrder(orderId)", span="317-317"];
m18_78 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="325-325"];
m18_80 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304"];
m18_692 [cluster="Unk.GetOrderByBrokerageId", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m18_773 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1910-1910"];
m18_972 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var securityType = ConvertSecurityType(contract.SecType)", span="1912-1912"];
m18_973 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var ibSymbol = securityType == SecurityType.Forex ? contract.Symbol + contract.Currency : contract.Symbol", span="1913-1913"];
m18_976 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var contractDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1918-1918"];
m18_979 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var expiryDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1924-1924"];
m18_980 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var right = contract.Right == IB.RightType.Call ? OptionRight.Call : OptionRight.Put", span="1925-1925"];
m18_981 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var strike = Convert.ToDecimal(contract.Strike)", span="1926-1926"];
m18_974 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var market = securityType == SecurityType.Forex ? Market.FXCM : Market.USA", span="1914-1914"];
m18_975 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="securityType == SecurityType.Future", span="1916-1916"];
m18_977 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, contractDate);", span="1920-1920"];
m18_978 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="securityType == SecurityType.Option", span="1922-1922"];
m18_982 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, expiryDate, strike, right);", span="1928-1928"];
m18_983 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market);", span="1931-1931"];
m18_984 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1910-1910"];
m18_503 [cluster="System.Threading.EventWaitHandle.Reset()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m18_292 [cluster="Unk.issueSignal", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.issueSignal", span=""];
m18_816 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1652-1652"];
m18_817 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label=direction, span="1654-1654"];
m18_824 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(direction, ''direction'');", span="1660-1660"];
m18_818 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="IB.ActionSide.Buy", span="1656-1656"];
m18_820 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="IB.ActionSide.Sell", span="1657-1657"];
m18_822 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="IB.ActionSide.Undefined", span="1658-1658"];
m18_819 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderDirection.Buy;", span="1656-1656"];
m18_821 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderDirection.Sell;", span="1657-1657"];
m18_823 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderDirection.Hold;", span="1658-1658"];
m18_825 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1652-1652"];
m18_25 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1966-1966"];
m18_1001 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="InteractiveBrokersBrokerage.cs", label="return Interlocked.Increment(ref _nextClientId);", span="1968-1968"];
m18_1002 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1966-1966"];
m18_305 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="694-694"];
m18_306 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="5: return new Dictionary<string, string>(_accountProperties);", span="696-696"];
m18_307 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="694-694"];
m18_1367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="186-186"];
m18_241 [cluster="System.Exception.Exception(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m18_258 [cluster="Unk.waitForSignal", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.waitForSignal", span=""];
m18_722 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1461-1461"];
m18_723 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_accountHoldingsResetEvent.Reset()", span="1463-1463"];
m18_724 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var holding = CreateHolding(e)", span="1464-1464"];
m18_725 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: _accountHoldings[holding.Symbol.Value] = holding", span="1465-1465"];
m18_726 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1461-1461"];
m18_364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="797-797"];
m18_365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details", span="799-799"];
m18_366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="800-800"];
m18_368 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="details = GetContractDetails(contract)", span="805-805"];
m18_367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="return (decimal) details.MinTick;", span="802-802"];
m18_369 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="details == null", span="806-806"];
m18_371 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="return (decimal) details.MinTick;", span="812-812"];
m18_370 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="return 0;", span="809-809"];
m18_372 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="797-797"];
m18_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149"];
m18_575 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="_disconnected1100Fired = false", span="1151-1151"];
m18_576 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1154-1154"];
m18_577 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Disconnecting...'')", span="1156-1156"];
m18_578 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="1157-1157"];
m18_579 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Stopping IB Gateway...'')", span="1159-1159"];
m18_580 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="1160-1160"];
m18_581 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restarting IB Gateway...'')", span="1162-1162"];
m18_582 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="InteractiveBrokersGatewayRunner.Restart()", span="1163-1163"];
m18_583 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Reconnecting...'')", span="1165-1165"];
m18_584 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Connect()", span="1166-1166"];
m18_585 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restoring data subscriptions...'')", span="1168-1168"];
m18_586 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="RestoreDataSubscriptions()", span="1169-1169"];
m18_587 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1173-1173"];
m18_588 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149"];
m18_335 [cluster="System.ArgumentException.ArgumentException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m18_1084 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m18_534 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1069-1069"];
m18_535 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var requestId = e.Id", span="1073-1073"];
m18_536 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var errorCode = e.Code", span="1074-1074"];
m18_537 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var errorMsg = e.Message", span="1075-1075"];
m18_540 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation.TryGetValue(requestId, out requestMessage)", span="1082-1082"];
m18_542 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace($''InteractiveBrokersBrokerage.HandleError(): RequestId: {requestId} ErrorCode: {errorCode} - {errorMsg}'')", span="1087-1087"];
m18_560 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace($''InteractiveBrokersBrokerage.HandleError.InvalidateOrder(): IBOrderId: {requestId} ErrorCode: {message}'')", span="1130-1130"];
m18_561 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var order = _orderProvider.GetOrderByBrokerageId(requestId)", span="1133-1133"];
m18_544 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="ErrorCodes.Contains(errorCode)", span="1091-1091"];
m18_546 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="WarningCodes.Contains(errorCode)", span="1095-1095"];
m18_548 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorCode == 1100 && !_disconnected1100Fired", span="1101-1101"];
m18_551 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorCode == 1102 || errorCode == 1101", span="1108-1108"];
m18_552 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1111-1111"];
m18_556 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorCode == 506", span="1122-1122"];
m18_558 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="InvalidatingCodes.Contains(errorCode)", span="1127-1127"];
m18_559 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var message = $''{errorCode} - {errorMsg}''", span="1129-1129"];
m18_565 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1143-1143"];
m18_538 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorMsg = errorMsg.Replace(''\r\n'', ''. '').Replace(''\r'', ''. '').Replace(''\n'', ''. '')", span="1078-1078"];
m18_539 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="string requestMessage", span="1081-1081"];
m18_541 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorMsg += ''. Origin: '' + requestMessage", span="1084-1084"];
m18_543 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var brokerageMessageType = BrokerageMessageType.Information", span="1090-1090"];
m18_545 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="brokerageMessageType = BrokerageMessageType.Error", span="1093-1093"];
m18_547 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="brokerageMessageType = BrokerageMessageType.Warning", span="1097-1097"];
m18_549 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_disconnected1100Fired = true", span="1103-1103"];
m18_550 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="TryWaitForReconnect()", span="1106-1106"];
m18_553 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Reconnect message received. Restarting...'')", span="1116-1116"];
m18_554 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_resetEventRestartGateway.Set()", span="1118-1118"];
m18_555 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="1120-1120"];
m18_557 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Server Version: '' + _client.ClientSocket.ServerVersion)", span="1124-1124"];
m18_563 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Invalid,\r\n                    Message = message\r\n                }", span="1135-1139"];
m18_562 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="int orderFee = 0", span="1134-1134"];
m18_564 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnOrderEvent(orderEvent)", span="1140-1140"];
m18_566 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1069-1069"];
m18_1352 [cluster="System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", span="0-0"];
m18_727 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1887-1887"];
m18_962 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var currencySymbol = Currencies.GetCurrencySymbol(e.Contract.Currency)", span="1889-1889"];
m18_963 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var symbol = MapSymbol(e.Contract)", span="1890-1890"];
m18_964 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var multiplier = Convert.ToDecimal(e.Contract.Multiplier)", span="1892-1892"];
m18_967 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = ConvertSecurityType(e.Contract.SecType),\r\n                Quantity = e.Position,\r\n                AveragePrice = Convert.ToDecimal(e.AverageCost) / multiplier,\r\n                MarketPrice = Convert.ToDecimal(e.MarketPrice),\r\n                ConversionRate = 1m, // this will be overwritten when GetAccountHoldings is called to ensure fresh values\r\n                CurrencySymbol = currencySymbol\r\n            };", span="1895-1904"];
m18_965 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="multiplier == 0m", span="1893-1893"];
m18_966 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="multiplier = 1m", span="1893-1893"];
m18_968 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1887-1887"];
m18_666 [cluster="System.Convert.ToInt32(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToInt32(int)", span="0-0"];
m18_1018 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2012-2012"];
m18_1019 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="Tick[] ticks", span="2014-2014"];
m18_1024 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="yield return tick;", span="2024-2024"];
m18_1028 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="yield return underlyingTick;", span="2030-2030"];
m18_1020 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label=_ticks, span="2016-2016"];
m18_1021 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="ticks = _ticks.ToArray()", span="2018-2018"];
m18_1022 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="_ticks.Clear()", span="2019-2019"];
m18_1023 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label=ticks, span="2022-2022"];
m18_1025 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="_underlyings.ContainsKey(tick.Symbol)", span="2026-2026"];
m18_1026 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="var underlyingTick = tick.Clone()", span="2028-2028"];
m18_1027 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="underlyingTick.Symbol = _underlyings[tick.Symbol]", span="2029-2029"];
m18_1029 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2012-2012"];
m18_778 [cluster="MarketOnOpenOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry MarketOnOpenOrder.cstr", span=""];
m18_405 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m18_407 [cluster="Unk.FirstOrDefault", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.FirstOrDefault", span=""];
m18_235 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m18_1056 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2159-2159"];
m18_1087 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="var market = symbol.ID.Market", span="2161-2161"];
m18_1088 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="var securityType = symbol.ID.SecurityType", span="2162-2162"];
m18_1089 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="symbol.Value.ToLower().IndexOf(''universe'') != -1", span="2164-2164"];
m18_1091 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="return\r\n                (securityType == SecurityType.Equity && market == Market.USA) ||\r\n                (securityType == SecurityType.Forex && market == Market.FXCM) ||\r\n                (securityType == SecurityType.Option && market == Market.USA) ||\r\n                (securityType == SecurityType.Future);", span="2166-2170"];
m18_1090 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="2164-2164"];
m18_1092 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2159-2159"];
m18_571 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m18_1105 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m18_814 [cluster="string.Substring(int)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Substring(int)", span="0-0"];
m18_941 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1857-1857"];
m18_942 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label=resolution, span="1859-1859"];
m18_943 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Tick", span="1861-1861"];
m18_946 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Minute", span="1864-1864"];
m18_948 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Hour", span="1866-1866"];
m18_950 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Daily", span="1868-1868"];
m18_944 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Second", span="1862-1862"];
m18_945 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return ''60 S'';", span="1863-1863"];
m18_947 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return ''1 D'';", span="1865-1865"];
m18_949 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return ''1 M'';", span="1867-1867"];
m18_951 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return ''1 Y'';", span="1870-1870"];
m18_952 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1857-1857"];
m18_141 [cluster="Unk.StartNew", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.StartNew", span=""];
m18_504 [cluster="Unk.reqHistoricalData", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqHistoricalData", span=""];
m18_1346 [cluster="System.IO.Path.Combine(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m18_602 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m18_507 [cluster="Exception.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry Exception.cstr", span=""];
m18_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="705-705"];
m18_309 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="Connect()", span="708-708"];
m18_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="exchange == null &&\r\n                order.Symbol.SecurityType == SecurityType.Option &&\r\n                (order.Type == OrderType.MarketOnOpen || order.Type == OrderType.MarketOnClose)", span="716-718"];
m18_314 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="var contract = CreateContract(order.Symbol, exchange)", span="723-723"];
m18_316 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label=needsNewId, span="726-726"];
m18_318 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="order.BrokerId.Add(id.ToString())", span="730-730"];
m18_320 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="order.BrokerId.Any()", span="733-733"];
m18_321 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="ibOrderId = int.Parse(order.BrokerId[0])", span="736-736"];
m18_324 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="order.Type == OrderType.OptionExercise", span="745-745"];
m18_325 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.exerciseOptions(ibOrderId, contract, 1, decimal.ToInt32(order.Quantity), _account, 0)", span="747-747"];
m18_326 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="var ibOrder = ConvertOrder(order, contract, ibOrderId)", span="751-751"];
m18_310 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="!IsConnected", span="710-710"];
m18_311 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidOperationException(''InteractiveBrokersBrokerage.IBPlaceOrder(): Unable to place order while not connected.'');", span="712-712"];
m18_313 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="exchange = Market.CBOE.ToUpper()", span="720-720"];
m18_315 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="int ibOrderId", span="725-725"];
m18_323 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[ibOrderId] = ''IBPlaceOrder: '' + contract", span="743-743"];
m18_327 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.placeOrder(ibOrder.OrderId, contract, ibOrder)", span="752-752"];
m18_317 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="var id = GetNextBrokerageOrderId()", span="729-729"];
m18_319 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="ibOrderId = id", span="731-731"];
m18_322 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(''Expected order with populated BrokerId for updating orders.'');", span="740-740"];
m18_328 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="705-705"];
m18_671 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1344-1344"];
m18_672 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + executionDetails)", span="1348-1348"];
m18_678 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var order = _orderProvider.GetOrderByBrokerageId(executionDetails.Execution.OrderId)", span="1363-1363"];
m18_680 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Unable to locate order with BrokerageID '' + executionDetails.Execution.OrderId)", span="1366-1366"];
m18_682 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: var currentQuantityFilled = Convert.ToInt32(executionDetails.Execution.Shares)", span="1370-1370"];
m18_683 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: var totalQuantityFilled = Convert.ToInt32(executionDetails.Execution.CumQty)", span="1371-1371"];
m18_685 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: var price = Convert.ToDecimal(executionDetails.Execution.Price)", span="1373-1373"];
m18_687 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: !IsFillAlreadyHandled(order, executionDetails.Execution.OrderId, remainingQuantity)", span="1378-1378"];
m18_673 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!IsConnected", span="1350-1350"];
m18_674 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_client != null", span="1352-1352"];
m18_675 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1354-1354"];
m18_676 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; _client is null'')", span="1358-1358"];
m18_677 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="1360-1360"];
m18_679 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="order == null", span="1364-1364"];
m18_684 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: var remainingQuantity = Convert.ToInt32(order.AbsoluteQuantity - totalQuantityFilled)", span="1372-1372"];
m18_688 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1380-1380"];
m18_681 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="1367-1367"];
m18_686 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: var status = remainingQuantity > 0 ? OrderStatus.PartiallyFilled : OrderStatus.Filled", span="1376-1376"];
m18_689 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="1383-1383"];
m18_690 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + err)", span="1385-1385"];
m18_691 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1344-1344"];
m18_336 [cluster="decimal.ToInt32(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry decimal.ToInt32(decimal)", span="0-0"];
m18_695 [cluster="Unk.IsFillAlreadyHandled", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsFillAlreadyHandled", span=""];
m18_122 [cluster="Unk.WaitAll", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.WaitAll", span=""];
m18_308 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m18_624 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1240-1240"];
m18_625 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: _accountProperties[e.Currency + '':'' + e.Key] = e.Value", span="1246-1246"];
m18_626 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="e.Key == AccountValueKeys.CashBalance && e.Currency != ''BASE''", span="1249-1249"];
m18_627 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var cashBalance = decimal.Parse(e.Value, CultureInfo.InvariantCulture)", span="1251-1251"];
m18_628 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: _cashBalances.AddOrUpdate(e.Currency, cashBalance)", span="1252-1252"];
m18_629 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnAccountChanged(new AccountEvent(e.Currency, cashBalance))", span="1253-1253"];
m18_630 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="1256-1256"];
m18_631 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleUpdateAccountValue(): '' + err)", span="1258-1258"];
m18_632 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1240-1240"];
m18_961 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m18_1141 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m18_1347 [cluster="System.IO.Directory.GetFiles(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0"];
m18_332 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1944-1944"];
m18_991 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="_nextValidId == 0", span="1948-1948"];
m18_992 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="Thread.Yield()", span="1948-1948"];
m18_993 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="return Interlocked.Increment(ref _nextValidId);", span="1950-1950"];
m18_994 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1944-1944"];
m18_83 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334"];
m18_84 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="var orders = new List<Order>()", span="336-336"];
m18_85 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="338-338"];
m18_86 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.OpenOrderEventArgs> clientOnOpenOrder = (sender, args) =>\r\n            {\r\n                // convert IB order objects returned from RequestOpenOrders\r\n                orders.Add(ConvertOrder(args.Order, args.Contract));\r\n            }", span="341-345"];
m18_95 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="return orders;", span="367-367"];
m18_87 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="EventHandler clientOnOpenOrderEnd = (sender, args) =>\r\n            {\r\n                // this signals the end of our RequestOpenOrders call\r\n                manualResetEvent.Set();\r\n            }", span="346-350"];
m18_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(15000)", span="358-358"];
m18_88 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.OpenOrder += clientOnOpenOrder", span="352-352"];
m18_93 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.OpenOrder -= clientOnOpenOrder", span="364-364"];
m18_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.OpenOrderEnd += clientOnOpenOrderEnd", span="353-353"];
m18_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.OpenOrderEnd -= clientOnOpenOrderEnd", span="365-365"];
m18_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqAllOpenOrders()", span="355-355"];
m18_92 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetOpenOrders(): Operation took longer than 15 seconds.'');", span="360-360"];
m18_96 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334"];
m18_239 [cluster="Unk.Start", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Start", span=""];
m18_573 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m18_1351 [cluster="string.String(char, int)", file="InteractiveBrokersBrokerage.cs", label="Entry string.String(char, int)", span="0-0"];
m18_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="262-262"];
m18_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.PlaceOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="266-266"];
m18_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="IBPlaceOrder(order, true)", span="268-268"];
m18_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return true;", span="269-269"];
m18_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="271-271"];
m18_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.PlaceOrder(): '' + err)", span="273-273"];
m18_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="274-274"];
m18_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="262-262"];
m18_815 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_707 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m18_906 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1796-1796"];
m18_907 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label=type, span="1798-1798"];
m18_908 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Stock", span="1800-1800"];
m18_910 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Option", span="1803-1803"];
m18_912 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Commodity", span="1806-1806"];
m18_914 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Cash", span="1809-1809"];
m18_916 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Future", span="1812-1812"];
m18_918 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Index", span="1816-1816"];
m18_926 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentOutOfRangeException(''type'');", span="1826-1826"];
m18_909 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Equity;", span="1801-1801"];
m18_911 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Option;", span="1804-1804"];
m18_913 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Commodity;", span="1807-1807"];
m18_915 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Forex;", span="1810-1810"];
m18_917 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Future;", span="1813-1813"];
m18_919 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.FutureOption", span="1817-1817"];
m18_920 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Bag", span="1818-1818"];
m18_921 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Bond", span="1819-1819"];
m18_922 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Warrant", span="1820-1820"];
m18_923 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Bill", span="1821-1821"];
m18_924 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Undefined", span="1822-1822"];
m18_925 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Base;", span="1823-1823"];
m18_927 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1796-1796"];
m18_1210 [cluster="QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m18_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617"];
m18_1361 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): start'')", span="2619-2619"];
m18_1362 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="!InteractiveBrokersGatewayRunner.IsRunning()", span="2620-2620"];
m18_1363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): IB Gateway not running. Restarting...'')", span="2622-2622"];
m18_1365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): end'')", span="2625-2625"];
m18_1364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="_resetEventRestartGateway.Set()", span="2623-2623"];
m18_1366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617"];
m18_158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422"];
m18_159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="var filter = new ExecutionFilter\r\n            {\r\n                AcctCode = _account,\r\n                ClientId = _clientId,\r\n                Exchange = exchange,\r\n                SecType = type ?? IB.SecurityType.Undefined,\r\n                Symbol = symbol,\r\n                Time = (timeSince ?? DateTime.MinValue).ToString(''yyyyMMdd HH:mm:ss''),\r\n                Side = side ?? IB.ActionSide.Undefined\r\n            }", span="424-433"];
m18_163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[requestId] = ''GetExecutions: '' + symbol", span="441-441"];
m18_160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="var details = new List<IB.ExecutionDetailsEventArgs>()", span="435-435"];
m18_168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqExecutions(requestId, filter)", span="457-457"];
m18_161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="437-437"];
m18_165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ExecutionDetailsEventArgs> clientOnExecDetails = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) details.Add(args);\r\n            }", span="448-451"];
m18_173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="return details;", span="468-468"];
m18_162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="var requestId = GetNextRequestId()", span="439-439"];
m18_164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.RequestEndEventArgs> clientOnExecutionDataEnd = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) manualResetEvent.Set();\r\n            }", span="444-447"];
m18_169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(5000)", span="459-459"];
m18_167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetailsEnd += clientOnExecutionDataEnd", span="454-454"];
m18_172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetailsEnd -= clientOnExecutionDataEnd", span="466-466"];
m18_166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetails += clientOnExecDetails", span="453-453"];
m18_171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetails -= clientOnExecDetails", span="465-465"];
m18_170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetExecutions(): Operation took longer than 5 seconds.'');", span="461-461"];
m18_174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422"];
m18_619 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m18_637 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1265-1265"];
m18_638 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + update)", span="1269-1269"];
m18_644 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var order = _orderProvider.GetOrderByBrokerageId(update.OrderId)", span="1284-1284"];
m18_646 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to locate order with BrokerageID '' + update.OrderId)", span="1287-1287"];
m18_648 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var status = ConvertOrderStatus(update.Status)", span="1291-1291"];
m18_650 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: var currentQuantityFilled = Convert.ToInt32(update.Filled)", span="1295-1295"];
m18_651 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: var totalQuantityFilled = Convert.ToInt32(order.AbsoluteQuantity - update.Remaining)", span="1296-1296"];
m18_652 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: var remainingQuantity = update.Remaining", span="1297-1297"];
m18_653 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: var price = Convert.ToDecimal(update.LastFillPrice)", span="1298-1298"];
m18_654 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: !IsFillAlreadyHandled(order, update.OrderId, remainingQuantity)", span="1300-1300"];
m18_639 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!IsConnected", span="1271-1271"];
m18_640 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_client != null", span="1273-1273"];
m18_641 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1275-1275"];
m18_642 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; _client is null'')", span="1279-1279"];
m18_643 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="1281-1281"];
m18_645 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="order == null", span="1285-1285"];
m18_655 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1302-1302"];
m18_656 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: status != order.Status", span="1308-1308"];
m18_657 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: order.Status.IsClosed()", span="1310-1310"];
m18_658 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring update in closed state - order.Status: '' + order.Status + '', status: '' + status)", span="1313-1313"];
m18_659 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: order.Status == OrderStatus.PartiallyFilled && (status == OrderStatus.New || status == OrderStatus.Submitted)", span="1315-1315"];
m18_661 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=1, file="InteractiveBrokersBrokerage.cs", label="3: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Interactive Brokers Order Event'')\r\n                            {\r\n                                Status = status\r\n                            })", span="1323-1326"];
m18_647 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="1288-1288"];
m18_649 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="status == OrderStatus.Filled || status == OrderStatus.PartiallyFilled", span="1293-1293"];
m18_660 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring status '' + status + '' after partial fills'')", span="1318-1318"];
m18_662 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="1331-1331"];
m18_663 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + err)", span="1333-1333"];
m18_664 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1265-1265"];
m18_813 [cluster="string.Substring(int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Substring(int, int)", span="0-0"];
m18_52 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m18_780 [cluster="LimitOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry LimitOrder.cstr", span=""];
m18_618 [cluster="System.TimeSpan.FromMinutes(double)", file="InteractiveBrokersBrokerage.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m18_745 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1667-1667"];
m18_827 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label=direction, span="1669-1669"];
m18_834 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidEnumArgumentException(''direction'', (int) direction, typeof (OrderDirection));", span="1675-1675"];
m18_828 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="OrderDirection.Buy", span="1671-1671"];
m18_830 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="OrderDirection.Sell", span="1672-1672"];
m18_832 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="OrderDirection.Hold", span="1673-1673"];
m18_829 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="return IB.ActionSide.Buy;", span="1671-1671"];
m18_831 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="return IB.ActionSide.Sell;", span="1672-1672"];
m18_833 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="return IB.ActionSide.Undefined;", span="1673-1673"];
m18_835 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1667-1667"];
m18_188 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474"];
m18_189 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label=IsConnected, span="476-476"];
m18_190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="return;", span="476-476"];
m18_191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: _accountHoldings.Clear()", span="479-479"];
m18_192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: _accountProperties.Clear()", span="480-480"];
m18_193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="var attempt = 1", span="482-482"];
m18_194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="int maxAttempts = 5", span="483-483"];
m18_197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Attempting to connect ({0}/{1}) ...'', attempt, maxAttempts)", span="489-489"];
m18_210 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="attempt++ < maxAttempts", span="540-540"];
m18_219 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: attempt++ < maxAttempts", span="559-559"];
m18_227 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="attempt++ < maxAttempts", span="583-583"];
m18_195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="var existingSessionDetected = false", span="484-484"];
m18_196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label=true, span="485-485"];
m18_224 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label=existingSessionDetected, span="576-576"];
m18_198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="492-492"];
m18_199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.eConnect(_host, _port, _clientId)", span="495-495"];
m18_200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="var reader = new EReader(_client.ClientSocket, _signal)", span="498-498"];
m18_201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="reader.Start()", span="499-499"];
m18_202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread = new Thread(() =>\r\n                    {\r\n                        Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId);\r\n\r\n                        while (_client.ClientSocket.IsConnected())\r\n                        {\r\n                            try\r\n                            {\r\n                                _signal.waitForSignal();\r\n                                reader.processMsgs();\r\n                            }\r\n                            catch (Exception error)\r\n                            {\r\n                                // error in message processing thread, log error and disconnect\r\n                                Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error);\r\n                            }\r\n                        }\r\n\r\n                        Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId);\r\n                    }) { IsBackground = true }", span="501-520"];
m18_203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread.Start()", span="522-522"];
m18_204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="!_waitForNextValidId.WaitOne(15000)", span="525-525"];
m18_205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'')", span="527-527"];
m18_213 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''IB next valid id received.'')", span="549-549"];
m18_206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="530-530"];
m18_207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="ExistingSessionDetected()", span="533-533"];
m18_208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="existingSessionDetected = true", span="535-535"];
m18_209 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): An existing session was detected and will not be automatically disconnected. Please close the existing session manually.'');", span="536-536"];
m18_211 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(1000)", span="542-542"];
m18_212 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'');", span="546-546"];
m18_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="!_client.Connected", span="551-551"];
m18_215 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): Connection returned but was not in connected state.'');", span="551-551"];
m18_216 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: !DownloadAccount()", span="553-553"];
m18_217 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: Log.Trace(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed. Operation took longer than 15 seconds.'')", span="555-555"];
m18_222 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.setServerLogLevel(5)", span="569-569"];
m18_218 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: Disconnect()", span="557-557"];
m18_220 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: Thread.Sleep(1000)", span="561-561"];
m18_221 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed.'');", span="565-565"];
m18_223 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label=Exception, span="573-573"];
m18_225 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Error(err)", span="578-578"];
m18_226 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw;", span="579-579"];
m18_228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(15000)", span="585-585"];
m18_229 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Error(err)", span="590-590"];
m18_230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="err.Message.Contains(''Connection refused'')", span="593-593"];
m18_231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(err.Message + ''. Be sure to logout of Trader Workstation. '' +\r\n                            ''IB only allows one active log in at a time. '' +\r\n                            ''This can also be caused by requiring two-factor authentication. '' +\r\n                            ''Be sure to disable this in IB Account Management > Security > SLS Opt out.'', err);", span="595-598"];
m18_232 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw;", span="601-601"];
m18_233 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474"];
m18_508 [cluster="Unk.ToDecimal", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToDecimal", span=""];
m18_126 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.ObjectActivator.Clone<T>(T)", span="129-129"];
m18_1103 [cluster="System.DateTime.Add(System.TimeSpan)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m18_1228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2401-2401"];
m18_1229 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="!CanSubscribe(request.Symbol) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Option && request.Symbol.IsCanonical()) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Future && request.Symbol.IsCanonical())", span="2404-2406"];
m18_1230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="yield break;", span="2408-2408"];
m18_1250 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="yield return bar;", span="2461-2461"];
m18_1231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var contract = CreateContract(request.Symbol)", span="2412-2412"];
m18_1232 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var resolution = ConvertResolution(request.Resolution)", span="2413-2413"];
m18_1233 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var duration = ConvertResolutionToDuration(request.Resolution)", span="2414-2414"];
m18_1234 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var startTime = request.Resolution == Resolution.Daily ? request.StartTimeUtc.Date : request.StartTimeUtc", span="2415-2415"];
m18_1235 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var endTime = request.Resolution == Resolution.Daily ? request.EndTimeUtc.Date : request.EndTimeUtc", span="2416-2416"];
m18_1236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory(): Submitting request: {0}({1}): {2} {3} UTC -> {4} UTC'',\r\n                request.Symbol.Value, contract, request.Resolution, startTime, endTime)", span="2418-2419"];
m18_1238 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="!_symbolExchangeTimeZones.TryGetValue(request.Symbol, out exchangeTimeZone)", span="2422-2422"];
m18_1239 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(request.Symbol.ID.Market, request.Symbol, request.Symbol.SecurityType).TimeZone", span="2425-2425"];
m18_1240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="_symbolExchangeTimeZones.Add(request.Symbol, exchangeTimeZone)", span="2426-2426"];
m18_1242 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="request.Symbol.SecurityType == SecurityType.Forex || request.Symbol.SecurityType == SecurityType.Cfd", span="2430-2430"];
m18_1243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var historyBid = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Bid)", span="2434-2434"];
m18_1244 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var historyAsk = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Ask)", span="2435-2435"];
m18_1246 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="history = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Trades)", span="2452-2452"];
m18_1247 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var requestStartTime = request.StartTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2456-2456"];
m18_1248 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var requestEndTime = request.EndTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2457-2457"];
m18_1237 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="DateTimeZone exchangeTimeZone", span="2421-2421"];
m18_1241 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="IEnumerable<BaseData> history", span="2429-2429"];
m18_1245 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="history = historyBid.Join(historyAsk,\r\n                    bid => bid.Time,\r\n                    ask => ask.Time,\r\n                    (bid, ask) => new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period))", span="2437-2447"];
m18_1249 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="history.Where(bar => bar.Time >= requestStartTime && bar.EndTime <= requestEndTime)", span="2459-2459"];
m18_1251 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Download completed'')", span="2464-2464"];
m18_1252 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2401-2401"];
m18_1086 [cluster="Unk.cancelMktData", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.cancelMktData", span=""];
m18_749 [cluster="System.Convert.ToDouble(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToDouble(decimal)", span="0-0"];
m18_28 [cluster="System.Threading.Thread.Start()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m18_506 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m18_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="136-136"];
m18_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="136-136"];
m18_353 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m18_971 [cluster="Unk.ConvertSecurityType", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ConvertSecurityType", span=""];
m18_330 [cluster="string.ToUpper()", file="InteractiveBrokersBrokerage.cs", label="Entry string.ToUpper()", span="0-0"];
m18_957 [cluster="Unk.ToDouble", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToDouble", span=""];
m18_592 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1179-1179"];
m18_593 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="List<Symbol> subscribedSymbols", span="1181-1181"];
m18_594 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label=_sync, span="1182-1182"];
m18_595 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="subscribedSymbols = _subscribedSymbols.Keys.ToList()", span="1184-1184"];
m18_596 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="_subscribedSymbols.Clear()", span="1186-1186"];
m18_599 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Subscribe(null, subscribedSymbols)", span="1191-1191"];
m18_597 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="_subscribedTickets.Clear()", span="1187-1187"];
m18_598 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="_underlyings.Clear()", span="1188-1188"];
m18_600 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1179-1179"];
m18_329 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m18_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179"];
m18_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_algorithm = algorithm", span="182-182"];
m18_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_orderProvider = orderProvider", span="183-183"];
m18_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_securityProvider = securityProvider", span="184-184"];
m18_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_account = account", span="185-185"];
m18_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_host = host", span="186-186"];
m18_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_port = port", span="187-187"];
m18_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_agentDescription = agentDescription", span="189-189"];
m18_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_clientId = IncrementClientId()", span="188-188"];
m18_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client = new IB.InteractiveBrokersClient(_signal)", span="190-190"];
m18_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.UpdatePortfolio += HandlePortfolioUpdates", span="193-193"];
m18_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.OrderStatus += HandleOrderStatusUpdates", span="194-194"];
m18_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.UpdateAccountValue += HandleUpdateAccountValue", span="195-195"];
m18_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetails += HandleExecutionDetails", span="196-196"];
m18_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.Error += HandleError", span="197-197"];
m18_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.TickPrice += HandleTickPrice", span="198-198"];
m18_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.TickSize += HandleTickSize", span="199-199"];
m18_21 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.CurrentTimeUtc += HandleBrokerTime", span="200-200"];
m18_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.NextValidId += (sender, e) =>\r\n            {\r\n                // only grab this id when we initialize, and we'll manually increment it here to avoid threading issues\r\n                if (_nextValidId == 0)\r\n                {\r\n                    _nextValidId = e.OrderId;\r\n                    _waitForNextValidId.Set();\r\n                }\r\n                Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId);\r\n            }", span="203-212"];
m18_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="new Thread(() =>\r\n            {\r\n                try\r\n                {\r\n                    Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread started.'');\r\n\r\n                    while (!_ctsRestartGateway.IsCancellationRequested)\r\n                    {\r\n                        if (_resetEventRestartGateway.WaitOne(1000, _ctsRestartGateway.Token))\r\n                        {\r\n                            Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence start.'');\r\n\r\n                            try\r\n                            {\r\n                                ResetGatewayConnection();\r\n                            }\r\n                            catch (Exception exception)\r\n                            {\r\n                                Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in ResetGatewayConnection: '' + exception);\r\n                            }\r\n\r\n                            Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence end.'');\r\n                        }\r\n                    }\r\n\r\n                    Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread ended.'');\r\n                }\r\n                catch (Exception exception)\r\n                {\r\n                    Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in reset handler thread: '' + exception);\r\n                }\r\n            }) { IsBackground = true }.Start()", span="215-246"];
m18_24 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179"];
m18_403 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="868-868"];
m18_415 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="int timeout = 60", span="870-870"];
m18_417 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[requestId] = ''FindContracts: '' + contract", span="874-874"];
m18_424 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="890-890"];
m18_416 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="var requestId = GetNextRequestId()", span="872-872"];
m18_425 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(timeout * 1000)", span="892-892"];
m18_426 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.FindContracts(): failed to receive response from IB within {0} seconds'', timeout)", span="894-894"];
m18_418 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="876-876"];
m18_419 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="var contractDetails = new List<ContractDetails>()", span="877-877"];
m18_421 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.RequestEndEventArgs> clientOnContractDetailsEnd =\r\n                (sender, args) => manualResetEvent.Set()", span="883-884"];
m18_420 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails =\r\n                (sender, args) => contractDetails.Add(args.ContractDetails)", span="880-881"];
m18_429 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="return contractDetails;", span="901-901"];
m18_422 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetails += clientOnContractDetails", span="886-886"];
m18_428 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetails -= clientOnContractDetails", span="899-899"];
m18_423 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetailsEnd += clientOnContractDetailsEnd", span="887-887"];
m18_427 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetailsEnd -= clientOnContractDetailsEnd", span="898-898"];
m18_430 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="868-868"];
m18_572 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", span="90-90"];
m18_567 [cluster="string.Replace(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Replace(string, string)", span="0-0"];
m18_242 [cluster="System.Threading.Thread.Sleep(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m18_304 [cluster="System.Threading.CancellationTokenSource.Cancel(bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.CancellationTokenSource.Cancel(bool)", span="0-0"];
m18_708 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m18_178 [cluster="Unk.reqExecutions", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqExecutions", span=""];
m18_985 [cluster="Unk.GetLeanSymbol", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetLeanSymbol", span=""];
m18_344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="761-761"];
m18_345 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details", span="763-763"];
m18_346 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="764-764"];
m18_348 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="details = GetContractDetails(contract)", span="769-769"];
m18_347 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details.Summary.PrimaryExch;", span="766-766"];
m18_349 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="details == null", span="770-770"];
m18_351 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details.Summary.PrimaryExch;", span="776-776"];
m18_350 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="return null;", span="773-773"];
m18_352 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="761-761"];
m18_291 [cluster="Unk.eDisconnect", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.eDisconnect", span=""];
m18_398 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="854-854"];
m18_399 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="var contractDetails = FindContracts(contract)", span="857-857"];
m18_400 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="var exchanges = _futuresExchanges.Values.Reverse().ToArray()", span="859-859"];
m18_401 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="return contractDetails\r\n                    .Select(details => details.Summary.Exchange)\r\n                    .OrderByDescending(e => Array.IndexOf(exchanges, e))\r\n                    .FirstOrDefault();", span="862-865"];
m18_402 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="854-854"];
m18_570 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m18_667 [cluster="System.Convert.ToInt32(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m18_1013 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m18_337 [cluster="Unk.exerciseOptions", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.exerciseOptions", span=""];
m18_1192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2344-2344"];
m18_1193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Connect()", span="2347-2347"];
m18_1194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var exchangeSpecifier = securityType == SecurityType.Future ? securityExchange ?? '''' : securityExchange ?? ''Smart''", span="2350-2350"];
m18_1196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Func<string, int> exchangeFilter = exchange => securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2352-2352"];
m18_1197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var contract = new Contract\r\n            {\r\n                Symbol = _symbolMapper.GetBrokerageRootSymbol(lookupName),\r\n                Currency = securityCurrency ?? ''USD'',\r\n                Exchange = exchangeSpecifier,\r\n                SecType = ConvertSecurityType(securityType)\r\n            }", span="2355-2361"];
m18_1199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="securityType == SecurityType.Option", span="2365-2365"];
m18_1195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var futuresExchanges = _futuresExchanges.Values.Reverse().ToArray()", span="2351-2351"];
m18_1205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var filteredResults =\r\n                    results\r\n                    .Select(x => x.Summary)\r\n                    .GroupBy(x => x.Exchange)\r\n                    .OrderByDescending(g => exchangeFilter(g.Key))\r\n                    .FirstOrDefault()", span="2382-2387"];
m18_1198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Requesting symbol list for '' + contract.Symbol + '' ...'')", span="2363-2363"];
m18_1200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var underlyingSymbol = Symbol.Create(contract.Symbol, SecurityType.Equity, Market.USA)", span="2370-2370"];
m18_1202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} contracts for {1}'', symbols.Count, contract.Symbol)", span="2373-2373"];
m18_1204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var results = FindContracts(contract)", span="2379-2379"];
m18_1201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var symbols = _algorithm.OptionChainProvider.GetOptionContractList(underlyingSymbol, DateTime.Today).ToList()", span="2371-2371"];
m18_1203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="return symbols;", span="2375-2375"];
m18_1206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} symbol(s)'', filteredResults != null ? filteredResults.Count() : 0)", span="2389-2389"];
m18_1207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="return filteredResults != null ? filteredResults.Select(MapSymbol) : Enumerable.Empty<Symbol>();", span="2392-2392"];
m18_1208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2344-2344"];
m18_1061 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2103-2103"];
m18_1062 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=symbols, span="2107-2107"];
m18_1063 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="CanSubscribe(symbol)", span="2109-2109"];
m18_1081 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="2148-2148"];
m18_1065 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Unsubscribe(): Unsubscribe Request: '' + symbol.Value)", span="2113-2113"];
m18_1066 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Option && symbol.ID.StrikePrice == 0.0m", span="2115-2115"];
m18_1067 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_underlyings.Remove(symbol.Underlying)", span="2117-2117"];
m18_1069 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscribedSymbols.TryRemove(symbol, out id)", span="2121-2121"];
m18_1064 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=_sync, span="2111-2111"];
m18_1068 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="int id", span="2120-2120"];
m18_1070 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_messagingRateLimiter.WaitToProceed()", span="2123-2123"];
m18_1072 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscriptionTimes.TryGetValue(id, out subscriptionTime)", span="2127-2127"];
m18_1077 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscriptionTimes.Remove(id)", span="2136-2136"];
m18_1078 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Client.ClientSocket.cancelMktData(id)", span="2139-2139"];
m18_1080 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscribedTickets.TryRemove(id, out s)", span="2142-2142"];
m18_1071 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="DateTime subscriptionTime", span="2126-2126"];
m18_1073 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var timeSinceSubscription = DateTime.UtcNow - subscriptionTime", span="2129-2129"];
m18_1074 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="timeSinceSubscription < _minimumTimespanBeforeUnsubscribe", span="2130-2130"];
m18_1075 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var delay = Convert.ToInt32((_minimumTimespanBeforeUnsubscribe - timeSinceSubscription).TotalMilliseconds)", span="2132-2132"];
m18_1076 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(delay)", span="2133-2133"];
m18_1079 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Symbol s", span="2141-2141"];
m18_1082 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.Unsubscribe(): '' + err.Message)", span="2150-2150"];
m18_1083 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2103-2103"];
m18_670 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m18_826 [cluster="System.ArgumentException.ArgumentException(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m18_668 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1428-1428"];
m18_709 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="0: order.Status == OrderStatus.Filled", span="1431-1431"];
m18_712 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="3: _orderFills.TryGetValue(orderId, out previousRemainingQuantity)", span="1435-1435"];
m18_713 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="0: newRemainingQuantity >= previousRemainingQuantity", span="1437-1437"];
m18_715 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="1: newRemainingQuantity > 0", span="1444-1444"];
m18_716 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="0: _orderFills[orderId] = newRemainingQuantity", span="1447-1447"];
m18_717 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: _orderFills.Remove(orderId)", span="1452-1452"];
m18_710 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: return true;", span="1432-1432"];
m18_711 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: int previousRemainingQuantity", span="1434-1434"];
m18_714 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: return true;", span="1440-1440"];
m18_718 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=red, community=0, file="InteractiveBrokersBrokerage.cs", label="4: return false;", span="1455-1455"];
m18_719 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1428-1428"];
m18_1030 [cluster="System.Collections.Generic.List<T>.ToArray()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m18_406 [cluster="Unk.OrderByDescending", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.OrderByDescending", span=""];
m18_340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="756-756"];
m18_341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="InteractiveBrokersBrokerage.cs", label="return string.Format(''{0} {1} {2} {3}'', contract, contract.LastTradeDateOrContractMonth, contract.Strike, contract.Right);", span="758-758"];
m18_342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="756-756"];
m18_1217 [cluster="System.Array.IndexOf<T>(T[], T)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0"];
m18_1227 [cluster="Unk.exchangeFilter", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.exchangeFilter", span=""];
m18_293 [cluster="System.Threading.Thread.Join()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m18_240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2584-2584"];
m18_1329 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var ibControllerLogPath = Path.Combine(Config.Get(''ib-controller-dir''), ''Logs'')", span="2587-2587"];
m18_1330 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var files = Directory.GetFiles(ibControllerLogPath, ''ibc-*.txt'')", span="2588-2588"];
m18_1331 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var lastLogUpdateTime = DateTime.MinValue", span="2589-2589"];
m18_1333 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label=files, span="2591-2591"];
m18_1332 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var ibControllerLogFileName = string.Empty", span="2590-2590"];
m18_1335 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="time > lastLogUpdateTime", span="2594-2594"];
m18_1338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="ibControllerLogFileName.IsNullOrEmpty()", span="2601-2601"];
m18_1340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var lines = File.ReadAllLines(ibControllerLogFileName).ToList()", span="2607-2607"];
m18_1334 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var time = File.GetLastWriteTimeUtc(file)", span="2593-2593"];
m18_1337 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="ibControllerLogFileName = file", span="2597-2597"];
m18_1336 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="lastLogUpdateTime = time", span="2596-2596"];
m18_1339 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="return false;", span="2603-2603"];
m18_1341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var separatorLine = new string('-', 60)", span="2608-2608"];
m18_1342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var index = lines.FindLastIndex(x => x.Contains(separatorLine))", span="2609-2609"];
m18_1343 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="return index >= 0 && lines.Skip(index + 1).Any(line => line.Contains(''End this session and let the other session proceed''));", span="2611-2611"];
m18_1344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2584-2584"];
m18_1368 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", span=""];
m18_1369 [file="InteractiveBrokersBrokerage.cs", label=orders, span=""];
m18_1370 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m18_1371 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Symbol", span=""];
m18_1372 [file="InteractiveBrokersBrokerage.cs", label=currency, span=""];
m18_1373 [file="InteractiveBrokersBrokerage.cs", label=requestId, span=""];
m18_1374 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m18_1375 [file="InteractiveBrokersBrokerage.cs", label=details, span=""];
m18_1376 [file="InteractiveBrokersBrokerage.cs", label=reader, span=""];
m18_1377 [file="InteractiveBrokersBrokerage.cs", label=firstAccountUpdateReceived, span=""];
m18_1378 [file="InteractiveBrokersBrokerage.cs", label=requestId, span=""];
m18_1379 [file="InteractiveBrokersBrokerage.cs", label=Contract, span=""];
m18_1380 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m18_1381 [file="InteractiveBrokersBrokerage.cs", label=exchanges, span=""];
m18_1382 [file="InteractiveBrokersBrokerage.cs", label=contractDetails, span=""];
m18_1383 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m18_1384 [file="InteractiveBrokersBrokerage.cs", label=invertedSymbol, span=""];
m18_1385 [file="InteractiveBrokersBrokerage.cs", label=normalSymbol, span=""];
m18_1386 [file="InteractiveBrokersBrokerage.cs", label=marketDataTicker, span=""];
m18_1387 [file="InteractiveBrokersBrokerage.cs", label=string, span=""];
m18_1388 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m18_1389 [file="InteractiveBrokersBrokerage.cs", label=historicalTicker, span=""];
m18_1390 [file="InteractiveBrokersBrokerage.cs", label=data, span=""];
m18_1391 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.SecurityType", span=""];
m18_1392 [file="InteractiveBrokersBrokerage.cs", label=futuresExchanges, span=""];
m18_1393 [file="InteractiveBrokersBrokerage.cs", label=exchangeFilter, span=""];
m18_1394 [file="InteractiveBrokersBrokerage.cs", label=requestStartTime, span=""];
m18_1395 [file="InteractiveBrokersBrokerage.cs", label=requestEndTime, span=""];
m18_1396 [file="InteractiveBrokersBrokerage.cs", label=historicalTicker, span=""];
m18_1397 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Data.HistoryRequest", span=""];
m18_1398 [file="InteractiveBrokersBrokerage.cs", label=DateTimeZone, span=""];
m18_1399 [file="InteractiveBrokersBrokerage.cs", label=historyPiece, span=""];
m18_1400 [file="InteractiveBrokersBrokerage.cs", label=dataDownloading, span=""];
m18_1401 [file="InteractiveBrokersBrokerage.cs", label=dataDownloaded, span=""];
m18_1402 [file="InteractiveBrokersBrokerage.cs", label=separatorLine, span=""];
m22_166 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m22_167 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, date, resolution, tickType));", span="345-345"];
m22_168 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m22_148 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="748-748"];
m22_347 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="bar == null", span="750-750"];
m22_349 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(bar.Open, bar.High, bar.Low, bar.Close);", span="755-755"];
m22_348 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="752-752"];
m22_350 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="748-748"];
m22_144 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.Scale(decimal)", span="708-708"];
m22_331 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="return (long)(value*10000);", span="710-710"];
m22_332 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.Scale(decimal)", span="708-708"];
m22_7 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m22_8 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var milliseconds = data.Time.TimeOfDay.TotalMilliseconds.ToString(CultureInfo.InvariantCulture)", span="52-52"];
m22_9 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var longTime = data.Time.ToString(DateFormat.TwelveCharacter)", span="53-53"];
m22_10 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=securityType, span="55-55"];
m22_12 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="58-58"];
m22_14 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick) data", span="61-61"];
m22_18 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bar = (TradeBar) data", span="66-66"];
m22_22 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigBar = (TradeBar) data", span="71-71"];
m22_25 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="77-77"];
m22_27 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = data as Tick", span="80-80"];
m22_37 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="94-94"];
m22_40 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="101-101"];
m22_46 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="110-110"];
m22_49 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="117-117"];
m22_55 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="132-132"];
m22_57 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = data as Tick", span="135-135"];
m22_63 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bar = data as QuoteBar", span="141-141"];
m22_69 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigBar = data as QuoteBar", span="149-149"];
m22_74 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="158-158"];
m22_76 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick)data", span="161-161"];
m22_85 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="181-181"];
m22_88 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="188-188"];
m22_91 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var openInterest = data as OpenInterest", span="194-194"];
m22_96 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="204-204"];
m22_99 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="211-211"];
m22_102 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigOpenInterest = data as OpenInterest", span="216-216"];
m22_105 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="224-224"];
m22_107 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="228-228"];
m22_109 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick)data", span="231-231"];
m22_118 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="251-251"];
m22_121 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="258-258"];
m22_124 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var openInterest = data as OpenInterest", span="264-264"];
m22_129 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="274-274"];
m22_132 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="281-281"];
m22_135 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigOpenInterest = data as OpenInterest", span="286-286"];
m22_138 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="294-294"];
m22_139 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''securityType'', securityType, null);", span="299-299"];
m22_140 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NotImplementedException(''LeanData.GenerateLine has not yet been implemented for security type: '' + securityType + '' at resolution: '' + resolution);", span="302-302"];
m22_15 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="62-62"];
m22_19 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close), bar.Volume);", span="67-67"];
m22_31 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.LastPrice, tick.Quantity);", span="85-85"];
m22_33 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="LeanData.cs", label="4: return ToCsv(milliseconds, tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize, tick.Quantity);", span="89-89"];
m22_39 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="97-99"];
m22_42 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="104-104"];
m22_60 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.AskPrice);", span="137-137"];
m22_66 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                ToNonScaledCsv(bar.Bid), bar.LastBidSize,\r\n                                ToNonScaledCsv(bar.Ask), bar.LastAskSize);", span="143-145"];
m22_78 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="164-165"];
m22_80 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.BidPrice), tick.BidSize, Scale(tick.AskPrice), tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="169-170"];
m22_82 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.Value);", span="174-174"];
m22_87 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="184-186"];
m22_90 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tradeBar.Open), Scale(tradeBar.High), Scale(tradeBar.Low), Scale(tradeBar.Close), tradeBar.Volume);", span="191-192"];
m22_93 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="197-197"];
m22_104 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, bigOpenInterest.Value);", span="219-219"];
m22_111 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tick.LastPrice, tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'': ''0'');", span="234-235"];
m22_113 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="239-240"];
m22_115 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.Value);", span="244-244"];
m22_120 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="254-256"];
m22_123 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="261-262"];
m22_126 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="267-267"];
m22_23 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, Scale(bigBar.Open), Scale(bigBar.High), Scale(bigBar.Low), Scale(bigBar.Close), bigBar.Volume);", span="72-72"];
m22_48 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="113-115"];
m22_51 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                             bigTradeBar.Open,\r\n                                             bigTradeBar.High,\r\n                                             bigTradeBar.Low,\r\n                                             bigTradeBar.Close,\r\n                                             bigTradeBar.Volume);", span="120-125"];
m22_72 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                ToNonScaledCsv(bigBar.Bid), bigBar.LastBidSize,\r\n                                ToNonScaledCsv(bigBar.Ask), bigBar.LastAskSize);", span="151-153"];
m22_98 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="207-209"];
m22_101 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, ToScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="214-214"];
m22_131 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="277-279"];
m22_134 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, ToNonScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="284-284"];
m22_137 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, bigOpenInterest.Value);", span="289-289"];
m22_11 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Equity", span="57-57"];
m22_24 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Crypto", span="76-76"];
m22_53 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Forex", span="130-130"];
m22_73 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Option", span="157-157"];
m22_106 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Future", span="227-227"];
m22_13 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="60-60"];
m22_16 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="64-64"];
m22_20 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="69-69"];
m22_17 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="65-65"];
m22_21 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="70-70"];
m22_26 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="79-79"];
m22_35 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="92-92"];
m22_44 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="108-108"];
m22_28 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick == null", span="81-81"];
m22_30 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="83-83"];
m22_32 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="87-87"];
m22_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto tick could not be created'');", span="81-81"];
m22_34 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentException(''Cryto tick could not be created'');", span="91-91"];
m22_36 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="93-93"];
m22_38 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="95-95"];
m22_41 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="102-102"];
m22_43 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto minute/second bar could not be created'');", span="106-106"];
m22_45 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="109-109"];
m22_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="111-111"];
m22_50 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="118-118"];
m22_52 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto hour/daily bar could not be created'');", span="127-127"];
m22_54 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Cfd", span="131-131"];
m22_56 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="134-134"];
m22_61 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="139-139"];
m22_67 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="147-147"];
m22_58 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick == null", span="136-136"];
m22_59 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''tick'');", span="136-136"];
m22_62 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="140-140"];
m22_64 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bar == null", span="142-142"];
m22_65 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''bar'');", span="142-142"];
m22_68 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="148-148"];
m22_70 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigBar == null", span="150-150"];
m22_71 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''big bar'');", span="150-150"];
m22_75 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="160-160"];
m22_83 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="178-178"];
m22_94 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="201-201"];
m22_77 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="162-162"];
m22_79 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="167-167"];
m22_81 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.OpenInterest", span="172-172"];
m22_84 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="179-179"];
m22_86 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="182-182"];
m22_89 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="189-189"];
m22_92 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="openInterest != null", span="195-195"];
m22_95 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="202-202"];
m22_97 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="205-205"];
m22_100 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="212-212"];
m22_103 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigOpenInterest != null", span="217-217"];
m22_108 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="230-230"];
m22_116 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="248-248"];
m22_127 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="271-271"];
m22_110 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="232-232"];
m22_112 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="237-237"];
m22_114 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.OpenInterest", span="242-242"];
m22_117 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="249-249"];
m22_119 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="252-252"];
m22_122 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="259-259"];
m22_125 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="openInterest != null", span="265-265"];
m22_128 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="272-272"];
m22_130 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="275-275"];
m22_133 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="282-282"];
m22_136 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigOpenInterest != null", span="287-287"];
m22_141 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m22_149 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="734-734"];
m22_343 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="bar == null", span="736-736"];
m22_345 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close));", span="741-741"];
m22_344 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="738-738"];
m22_346 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="734-734"];
m22_393 [cluster="string.GetExtension()", file="LeanData.cs", label="Entry string.GetExtension()", span="410-410"];
m22_403 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="LeanData.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m22_390 [cluster="System.Enum.GetNames(System.Type)", file="LeanData.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m22_145 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToCsv(params object[])", span="716-716"];
m22_333 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="var i = 0", span="719-719"];
m22_334 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="i < args.Length", span="719-719"];
m22_335 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="var value = args[i]", span="721-721"];
m22_337 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="args[i] = ((decimal) value).Normalize().ToString(CultureInfo.InvariantCulture)", span="724-724"];
m22_339 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="return string.Join('','', args);", span="728-728"];
m22_338 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="i++", span="719-719"];
m22_336 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="value is decimal", span="722-722"];
m22_340 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToCsv(params object[])", span="716-716"];
m22_152 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m22_153 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Tick", span="313-313"];
m22_155 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="tickType == TickType.OpenInterest", span="314-314"];
m22_157 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="tickType == TickType.Quote", span="315-315"];
m22_154 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(Tick);", span="313-313"];
m22_156 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(OpenInterest);", span="314-314"];
m22_158 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(QuoteBar);", span="315-315"];
m22_159 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(TradeBar);", span="316-316"];
m22_160 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m22_323 [cluster="string.Split(params char[])", file="LeanData.cs", label="Entry string.Split(params char[])", span="0-0"];
m22_358 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(ZipEntryName)", span="779-779"];
m22_351 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765"];
m22_352 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(TradeBar)", span="767-767"];
m22_354 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(QuoteBar)", span="771-771"];
m22_356 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(OpenInterest)", span="775-775"];
m22_360 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(Tick)", span="783-783"];
m22_361 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="785-785"];
m22_353 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="769-769"];
m22_355 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="773-773"];
m22_357 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.OpenInterest;", span="777-777"];
m22_359 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="781-781"];
m22_363 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="791-791"];
m22_362 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="787-787"];
m22_364 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765"];
m22_151 [cluster="System.NotImplementedException.NotImplementedException(string)", file="LeanData.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m22_341 [cluster="decimal.Normalize()", file="LeanData.cs", label="Entry decimal.Normalize()", span="234-234"];
m22_205 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="552-552"];
m22_255 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var tickTypeString = tickType.ToLower()", span="554-554"];
m22_256 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="555-555"];
m22_257 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="556-556"];
m22_258 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol.ID.SecurityType", span="558-558"];
m22_264 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}.zip'',\r\n                            symbol.Value.ToLower()\r\n                            );", span="566-568"];
m22_268 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.Value.ToLower(),\r\n                            tickTypeString\r\n                        );", span="578-581"];
m22_272 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}.zip'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickTypeString,\r\n                            symbol.ID.OptionStyle.ToLower()\r\n                            );", span="591-595"];
m22_273 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString,\r\n                        symbol.ID.OptionStyle.ToLower()\r\n                        );", span="598-602"];
m22_276 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickTypeString);", span="607-609"];
m22_265 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString\r\n                        );", span="571-574"];
m22_269 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString\r\n                    );", span="584-587"];
m22_277 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString);", span="612-614"];
m22_263 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="564-564"];
m22_267 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="576-576"];
m22_271 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="589-589"];
m22_275 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="605-605"];
m22_259 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Base", span="560-560"];
m22_266 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Crypto", span="575-575"];
m22_270 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Option", span="588-588"];
m22_274 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Future", span="604-604"];
m22_278 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Commodity", span="616-616"];
m22_260 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Equity", span="561-561"];
m22_261 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Forex", span="562-562"];
m22_262 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Cfd", span="563-563"];
m22_279 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="618-618"];
m22_280 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="552-552"];
m22_410 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="825-825"];
m22_404 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="808-808"];
m22_411 [cluster="lambda expression", file="LeanData.cs", label="securityTypes.Contains(x.ToLower())", span="825-825"];
m22_408 [cluster="lambda expression", file="LeanData.cs", label="x == fileName.First()", span="816-816"];
m22_407 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="816-816"];
m22_405 [cluster="lambda expression", file="LeanData.cs", label="x.ToLower()", span="808-808"];
m22_406 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="808-808"];
m22_409 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="816-816"];
m22_412 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="825-825"];
m22_150 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="LeanData.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m22_400 [cluster="string.Substring(int, int)", file="LeanData.cs", label="Entry string.Substring(int, int)", span="0-0"];
m22_328 [cluster="QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", file="LeanData.cs", label="Entry QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", span="29-29"];
m22_146 [cluster="System.NullReferenceException.NullReferenceException(string)", file="LeanData.cs", label="Entry System.NullReferenceException.NullReferenceException(string)", span="0-0"];
m22_202 [cluster="System.IO.Path.Combine(params string[])", file="LeanData.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m22_365 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="801-801"];
m22_366 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="symbol = null", span="803-803"];
m22_371 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName = fileName.Replace(fileName.GetExtension(), '''')", span="813-813"];
m22_367 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution = Resolution.Daily", span="804-804"];
m22_368 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="date = default(DateTime)", span="805-805"];
m22_369 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var pathSeparators = new[] { '/', '\\'}", span="807-807"];
m22_370 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var securityTypes = Enum.GetNames(typeof(SecurityType)).Select(x => x.ToLower()).ToList()", span="808-808"];
m22_372 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName.First() == '.' || pathSeparators.Any(x => x == fileName.First())", span="816-816"];
m22_374 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var info = fileName.Split(pathSeparators, StringSplitOptions.RemoveEmptyEntries).ToList()", span="822-822"];
m22_375 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var startIndex = info.FindIndex(x => securityTypes.Contains(x.ToLower()))", span="825-825"];
m22_373 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName = fileName.Remove(0, 1)", span="818-818"];
m22_386 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Log.Error(''LeanData.TryParsePath(): Error encountered while parsing the path {0}. Error: {1}'', fileName, ex.GetBaseException())", span="848-848"];
m22_376 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var market = info[startIndex + 1]", span="828-828"];
m22_377 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var ticker = info[startIndex + 3]", span="829-829"];
m22_378 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution = (Resolution)Enum.Parse(typeof(Resolution), info[startIndex + 2], true)", span="830-830"];
m22_379 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var securityType = (SecurityType)Enum.Parse(typeof(SecurityType), info[startIndex], true)", span="831-831"];
m22_383 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="date = DateTime.ParseExact(info[startIndex + 4].Substring(0, 8), DateFormat.EightCharacter, null)", span="841-841"];
m22_384 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="symbol = Symbol.Create(ticker, securityType, market)", span="844-844"];
m22_382 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution < Resolution.Hour", span="839-839"];
m22_380 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="securityType == SecurityType.Option || securityType == SecurityType.Future", span="833-833"];
m22_381 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentException(''LeanData.TryParsePath(): Options and futures are not supported by this method.'');", span="835-835"];
m22_385 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label=Exception, span="846-846"];
m22_388 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="return true;", span="852-852"];
m22_387 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="return false;", span="849-849"];
m22_389 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="801-801"];
m22_143 [cluster="System.DateTime.ToString(string)", file="LeanData.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m22_254 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526"];
m22_245 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526"];
m22_246 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="securityType != SecurityType.Base && securityType != SecurityType.Equity && securityType != SecurityType.Forex && securityType != SecurityType.Cfd && securityType != SecurityType.Crypto", span="528-528"];
m22_248 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol = symbol.ToLower()", span="533-533"];
m22_249 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="535-535"];
m22_251 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", color=red, community=0, file="LeanData.cs", label="4: securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="541-541"];
m22_253 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'', date.ToString(DateFormat.EightCharacter), symbol, resolution.ToLower(), dataType.ToLower());", span="546-546"];
m22_247 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new NotImplementedException(''This method only implements base, equity, forex, crypto and cfd security type.'');", span="530-530"];
m22_250 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return symbol + ''.csv'';", span="537-537"];
m22_252 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="dataType = TickType.Quote", span="543-543"];
m22_392 [cluster="Unk.ToList", file="LeanData.cs", label="Entry Unk.ToList", span=""];
m22_195 [cluster="System.Enum.ToLower()", file="LeanData.cs", label="Entry System.Enum.ToLower()", span="879-879"];
m22_401 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m22_196 [cluster="string.ToLower()", file="LeanData.cs", label="Entry string.ToLower()", span="0-0"];
m22_147 [cluster="System.ArgumentException.ArgumentException(string)", file="LeanData.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m22_5 [cluster="QuantConnect.Data.IBaseData.Clone()", file="LeanData.cs", label="Entry QuantConnect.Data.IBaseData.Clone()", span="99-99"];
m22_171 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m22_172 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, securityType, market, date, resolution));", span="353-353"];
m22_173 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m22_326 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanData.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m22_342 [cluster="decimal.ToString(System.IFormatProvider)", file="LeanData.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m22_402 [cluster="System.Exception.GetBaseException()", file="LeanData.cs", label="Entry System.Exception.GetBaseException()", span="0-0"];
m22_211 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="625-625"];
m22_282 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="627-627"];
m22_283 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="return symbol.ToLower() + ''.zip'';", span="629-629"];
m22_284 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="var zipFileName = date.ToString(DateFormat.EightCharacter)", span="632-632"];
m22_285 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", color=red, community=0, file="LeanData.cs", label="4: tickType = tickType ?? (securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto ? TickType.Quote : TickType.Trade)", span="633-633"];
m22_287 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="return zipFileName + suffix;", span="635-635"];
m22_286 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="var suffix = string.Format(''_{0}.zip'', tickType.Value.ToLower())", span="634-634"];
m22_288 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="625-625"];
m22_241 [cluster="string.Format(string, object)", file="LeanData.cs", label="Entry string.Format(string, object)", span="0-0"];
m22_325 [cluster="decimal.Parse(string)", file="LeanData.cs", label="Entry decimal.Parse(string)", span="0-0"];
m22_322 [cluster="string.Replace(string, string)", file="LeanData.cs", label="Entry string.Replace(string, string)", span="0-0"];
m22_330 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="147-147"];
m22_398 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m22_321 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="659-659"];
m22_294 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="659-659"];
m22_295 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var isHourlyOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="661-661"];
m22_296 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var parts = zipEntryName.Replace(''.csv'', string.Empty).Split('_')", span="662-662"];
m22_297 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="symbol.ID.SecurityType", span="663-663"];
m22_304 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="return Symbol.CreateOption(symbol.Underlying, Market.USA, style, right, strike, expiry);", span="672-672"];
m22_309 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="return Symbol.CreateOption(symbol.Underlying, Market.USA, style, right, strike, expiry);", span="680-680"];
m22_320 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="throw new NotImplementedException(''ReadSymbolFromZipEntry is not implemented for '' + symbol.ID.SecurityType + '' '' + resolution);", span="701-701"];
m22_299 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label=isHourlyOrDaily, span="666-666"];
m22_311 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label=isHourlyOrDaily, span="685-685"];
m22_300 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[2], true)", span="668-668"];
m22_301 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[3], true)", span="669-669"];
m22_302 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var strike = decimal.Parse(parts[4]) / 10000m", span="670-670"];
m22_303 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiry = DateTime.ParseExact(parts[5], DateFormat.EightCharacter, null)", span="671-671"];
m22_305 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[4], true)", span="676-676"];
m22_306 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[5], true)", span="677-677"];
m22_307 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var strike = decimal.Parse(parts[6]) / 10000m", span="678-678"];
m22_308 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiry = DateTime.ParseExact(parts[7], DateFormat.EightCharacter, null)", span="679-679"];
m22_312 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[2], DateFormat.YearMonth, null)", span="687-687"];
m22_313 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="688-688"];
m22_315 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="return Symbol.CreateFuture(parts[0], Market.USA, futureExpiry);", span="690-690"];
m22_316 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[4], DateFormat.YearMonth, null)", span="694-694"];
m22_317 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="695-695"];
m22_319 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="return Symbol.CreateFuture(parts[1], Market.USA, futureExpiry);", span="697-697"];
m22_298 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="SecurityType.Option", span="665-665"];
m22_310 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="SecurityType.Future", span="684-684"];
m22_314 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="689-689"];
m22_318 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="696-696"];
m22_6 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="LeanData.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m22_244 [cluster="string.Join(string, params string[])", file="LeanData.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m22_395 [cluster="Unk.Any", file="LeanData.cs", label="Entry Unk.Any", span=""];
m22_170 [cluster="System.IO.Path.Combine(string, string)", file="LeanData.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m22_161 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="327-327"];
m22_162 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="baseDataType == typeof(TradeBar) ||\r\n                baseDataType == typeof(QuoteBar) ||\r\n                baseDataType == typeof(OpenInterest)", span="329-331"];
m22_163 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="return true;", span="333-333"];
m22_164 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="return false;", span="336-336"];
m22_165 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="327-327"];
m22_199 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m22_200 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="return Path.Combine(Globals.DataFolder,\r\n                                        ''equity'',\r\n                                        symbol.ID.Market,\r\n                                        ''factor_files'',\r\n                                        symbol.Value.ToLower() + ''.csv'');", span="393-397"];
m22_201 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m22_397 [cluster="string.Split(char[], System.StringSplitOptions)", file="LeanData.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m22_174 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="411-411"];
m22_206 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="var directory = Path.Combine(securityType.ToLower(), market.ToLower(), resolution.ToLower())", span="413-413"];
m22_207 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="resolution != Resolution.Daily && resolution != Resolution.Hour", span="414-414"];
m22_208 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="directory = Path.Combine(directory, symbol.ToLower())", span="416-416"];
m22_209 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="return Path.Combine(directory, GenerateZipFileName(symbol, securityType, date, resolution));", span="419-419"];
m22_210 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="411-411"];
m22_240 [cluster="string.Format(string, params object[])", file="LeanData.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m22_281 [cluster="string.Format(string, object, object, object)", file="LeanData.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m22_0 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40"];
m22_1 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="var clone = data.Clone()", span="42-42"];
m22_2 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="clone.Time = data.Time.ConvertTo(exchangeTimeZone, dataTimeZone)", span="43-43"];
m22_3 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="return GenerateLine(clone, clone.Symbol.ID.SecurityType, resolution);", span="44-44"];
m22_4 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40"];
m22_329 [cluster="System.Func<T, TResult>.Invoke(T)", file="LeanData.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m22_198 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="LeanData.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m22_396 [cluster="string.Remove(int, int)", file="LeanData.cs", label="Entry string.Remove(int, int)", span="0-0"];
m22_169 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m22_203 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return Path.Combine(GenerateRelativeZipFileDirectory(symbol, resolution), GenerateZipFileName(symbol, date, resolution, tickType));", span="405-405"];
m22_204 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m22_242 [cluster="string.Format(string, object, object)", file="LeanData.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m22_239 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m22_212 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m22_213 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="427-427"];
m22_214 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="428-428"];
m22_215 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol.ID.SecurityType", span="430-430"];
m22_220 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Tick && symbol.SecurityType == SecurityType.Equity", span="436-436"];
m22_221 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                            formattedDate,\r\n                            symbol.Value.ToLower(),\r\n                            tickType,\r\n                            resolution\r\n                        );", span="438-443"];
m22_223 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}.csv'',\r\n                            symbol.Value.ToLower()\r\n                            );", span="448-450"];
m22_224 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                        formattedDate,\r\n                        symbol.Value.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower()\r\n                        );", span="453-458"];
m22_227 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.csv'',\r\n                            symbol.Value.ToLower(),\r\n                            tickType.ToLower()\r\n                        );", span="463-466"];
m22_228 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                        formattedDate,\r\n                        symbol.Value.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower()\r\n                    );", span="469-474"];
m22_231 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickType.ToLower(),\r\n                            symbol.ID.OptionStyle.ToLower(),\r\n                            symbol.ID.OptionRight.ToLower(),\r\n                            Scale(symbol.ID.StrikePrice),\r\n                            symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                            ) + ''.csv'';", span="478-485"];
m22_232 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.Underlying.Value.ToLower(), // underlying\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.OptionStyle.ToLower(),\r\n                        symbol.ID.OptionRight.ToLower(),\r\n                        Scale(symbol.ID.StrikePrice),\r\n                        symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                        ) + ''.csv'';", span="488-497"];
m22_235 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickType.ToLower(),\r\n                            symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                            ) + ''.csv'';", span="502-506"];
m22_236 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.ID.Symbol.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                        ) + ''.csv'';", span="509-515"];
m22_222 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="446-446"];
m22_226 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="461-461"];
m22_230 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="476-476"];
m22_234 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="500-500"];
m22_216 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Base", span="432-432"];
m22_225 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Crypto", span="460-460"];
m22_229 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Option", span="475-475"];
m22_233 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Future", span="499-499"];
m22_237 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Commodity", span="517-517"];
m22_217 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Equity", span="433-433"];
m22_218 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Forex", span="434-434"];
m22_219 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Cfd", span="435-435"];
m22_238 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="519-519"];
m22_175 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="359-359"];
m22_176 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="361-361"];
m22_177 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var securityType = symbol.ID.SecurityType.ToLower()", span="362-362"];
m22_178 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var market = symbol.ID.Market.ToLower()", span="363-363"];
m22_179 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var res = resolution.ToLower()", span="364-364"];
m22_181 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="symbol.ID.SecurityType", span="366-366"];
m22_187 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Value.ToLower()) : directory;", span="373-373"];
m22_189 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Underlying.Value.ToLower()) : directory;", span="377-377"];
m22_191 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.ID.Symbol.ToLower()) : directory;", span="380-380"];
m22_180 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var directory = Path.Combine(securityType, market, res)", span="365-365"];
m22_182 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Base", span="368-368"];
m22_188 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Option", span="375-375"];
m22_190 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Future", span="379-379"];
m22_192 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Commodity", span="382-382"];
m22_183 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Equity", span="369-369"];
m22_184 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Forex", span="370-370"];
m22_185 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Cfd", span="371-371"];
m22_186 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Crypto", span="372-372"];
m22_193 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="384-384"];
m22_194 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="359-359"];
m22_399 [cluster="System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", span="0-0"];
m22_413 [cluster="Unk.Contains", file="LeanData.cs", label="Entry Unk.Contains", span=""];
m22_289 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="643-643"];
m22_290 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="645-645"];
m22_291 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="647-647"];
m22_292 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="649-649"];
m22_293 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="643-643"];
m22_324 [cluster="System.Enum.Parse(System.Type, string, bool)", file="LeanData.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m22_394 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m22_142 [cluster="double.ToString(System.IFormatProvider)", file="LeanData.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m22_327 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="119-119"];
m22_391 [cluster="Unk.Select", file="LeanData.cs", label="Entry Unk.Select", span=""];
m22_243 [cluster="string.Join(string, params object[])", file="LeanData.cs", label="Entry string.Join(string, params object[])", span="0-0"];
m22_197 [cluster="System.IO.Path.Combine(string, string, string)", file="LeanData.cs", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
m22_414 [file="LeanData.cs", label=string, span=""];
m22_415 [file="LeanData.cs", label=securityTypes, span=""];
m23_0 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m23_1 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="LeanDataTests.cs", label="_algorithmSettings = algorithmSettings", span="59-59"];
m23_2 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="LeanDataTests.cs", label="_timeKeeper = timeKeeper", span="60-60"];
m23_91 [file="LeanDataTests.cs", label="QuantConnect.Data.SubscriptionManager", span=""];
m23_92 [file="LeanDataTests.cs", label="QuantConnect.Symbol", span=""];
m23_93 [file="LeanDataTests.cs", label="QuantConnect.Resolution", span=""];
m24_67 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179"];
m24_74 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var rows = new SortedDictionary<DateTime, string>()", span="181-181"];
m24_75 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var zip = ZipFile.Read(fileName)", span="183-183"];
m24_83 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="rows[time] = line", span="196-196"];
m24_84 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="return rows;", span="202-202"];
m24_76 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var stream = new MemoryStream()", span="185-185"];
m24_77 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="zip[0].Extract(stream)", span="187-187"];
m24_78 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="stream.Seek(0, SeekOrigin.Begin)", span="188-188"];
m24_79 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var reader = new StreamReader(stream)", span="190-190"];
m24_80 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="string line", span="192-192"];
m24_81 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="(line = reader.ReadLine()) != null", span="193-193"];
m24_82 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var time = DateTime.ParseExact(line.Substring(0, DateFormat.TwelveCharacter.Length), DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="195-195"];
m24_85 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179"];
m24_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m24_14 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="73-73"];
m24_15 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=_resolution, span="75-75"];
m24_18 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteDailyOrHour(source)", span="79-79"];
m24_22 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteMinuteOrSecondOrTick(source)", span="85-85"];
m24_16 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Resolution.Daily", span="77-77"];
m24_19 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Resolution.Minute", span="82-82"];
m24_17 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Resolution.Hour", span="78-78"];
m24_20 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Resolution.Second", span="83-83"];
m24_21 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Resolution.Tick", span="84-84"];
m24_23 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="73-73"];
m24_44 [cluster="System.Text.StringBuilder.ToString()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m24_101 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Compression.Zip(data, tempFilePath, LeanData.GenerateZipEntryName(_symbol.Value, _securityType, date, _resolution, _dataType))", span="226-226"];
m24_45 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m24_95 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="var tempFilePath = filePath + ''.tmp''", span="213-213"];
m24_96 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="data = data.TrimEnd()", span="215-215"];
m24_97 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Exists(filePath)", span="216-216"];
m24_98 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Delete(filePath)", span="218-218"];
m24_99 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Log.Trace(''LeanDataWriter.Write(): Existing deleted: '' + filePath)", span="219-219"];
m24_100 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Directory.CreateDirectory(Path.GetDirectoryName(filePath))", span="223-223"];
m24_102 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Move(tempFilePath, filePath)", span="229-229"];
m24_103 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Log.Trace(''LeanDataWriter.Write(): Created: '' + filePath)", span="231-231"];
m24_104 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m24_71 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="144-144"];
m24_68 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="144-144"];
m24_69 [cluster="lambda expression", file="LeanDataWriter.cs", label="x.Time", span="144-144"];
m24_70 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="144-144"];
m24_72 [cluster="lambda expression", file="LeanDataWriter.cs", label="LeanData.GenerateLine(x, _securityType, _resolution)", span="144-144"];
m24_73 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="144-144"];
m24_93 [cluster="string.Substring(int, int)", file="LeanDataWriter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m24_111 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="LeanDataWriter.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="343-343"];
m24_92 [cluster="System.IO.StreamReader.ReadLine()", file="LeanDataWriter.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m24_64 [cluster="SortedDictionary<DateTime, string>.cstr", file="LeanDataWriter.cs", label="Entry SortedDictionary<DateTime, string>.cstr", span=""];
m24_13 [cluster="System.Exception.Exception(string)", file="LeanDataWriter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m24_25 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="95-95"];
m24_26 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var sb = new StringBuilder()", span="97-97"];
m24_28 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=source, span="102-102"];
m24_27 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var lastTime = new DateTime()", span="98-98"];
m24_33 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="112-112"];
m24_34 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Clear()", span="113-113"];
m24_36 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Append(LeanData.GenerateLine(data, _securityType, _resolution) + Environment.NewLine)", span="119-119"];
m24_37 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Length > 0", span="123-123"];
m24_39 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="126-126"];
m24_29 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="data.Time < lastTime", span="105-105"];
m24_31 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="lastTime != DateTime.MinValue && data.Time.Date > lastTime.Date", span="108-108"];
m24_32 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="111-111"];
m24_38 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="125-125"];
m24_35 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="lastTime = data.Time", span="116-116"];
m24_30 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="throw new Exception(''The data must be pre-sorted from oldest to newest'');", span="105-105"];
m24_40 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="95-95"];
m24_112 [cluster="System.IO.File.Move(string, string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Move(string, string)", span="0-0"];
m24_110 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526"];
m24_109 [cluster="System.IO.Directory.CreateDirectory(string)", file="LeanDataWriter.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m24_12 [cluster="string.ToLower()", file="LeanDataWriter.cs", label="Entry string.ToLower()", span="0-0"];
m24_105 [cluster="string.TrimEnd(params char[])", file="LeanDataWriter.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m24_115 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m24_0 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m24_1 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_securityType = symbol.ID.SecurityType", span="50-50"];
m24_2 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_dataDirectory = dataDirectory", span="51-51"];
m24_3 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_resolution = resolution", span="52-52"];
m24_4 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_symbol = symbol", span="53-53"];
m24_5 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_market = symbol.ID.Market.ToLower()", span="54-54"];
m24_6 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_dataType = dataType", span="55-55"];
m24_7 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_securityType == SecurityType.Forex || _securityType == SecurityType.Cfd", span="57-57"];
m24_8 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_dataType = TickType.Quote", span="59-59"];
m24_9 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_securityType != SecurityType.Equity && _securityType != SecurityType.Forex && _securityType != SecurityType.Cfd && _securityType != SecurityType.Crypto", span="63-63"];
m24_10 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="throw new Exception(''Sorry this security type is not yet supported by the LEAN data writer: '' + _securityType);", span="65-65"];
m24_11 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m24_94 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanDataWriter.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m24_106 [cluster="System.IO.File.Delete(string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m24_24 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="135-135"];
m24_49 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var sb = new StringBuilder()", span="137-137"];
m24_52 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var newRows = new SortedDictionary<DateTime, string>(source.ToDictionary(x => x.Time, x => LeanData.GenerateLine(x, _securityType, _resolution)))", span="144-144"];
m24_50 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var lastTime = new DateTime()", span="138-138"];
m24_60 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Append(kvp.Value + Environment.NewLine)", span="166-166"];
m24_61 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Length > 0", span="170-170"];
m24_62 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="172-172"];
m24_51 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="141-141"];
m24_54 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="File.Exists(outputFile)", span="147-147"];
m24_55 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows = LoadHourlyOrDailyFile(outputFile)", span="150-150"];
m24_53 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="SortedDictionary<DateTime, string> rows", span="145-145"];
m24_56 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=newRows, span="151-151"];
m24_58 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows = newRows", span="159-159"];
m24_57 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows[kvp.Key] = kvp.Value", span="153-153"];
m24_59 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=rows, span="163-163"];
m24_63 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="135-135"];
m24_46 [cluster="System.Text.StringBuilder.Clear()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.Clear()", span="0-0"];
m24_43 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m24_113 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", color=red, community=0, file="LeanDataWriter.cs", label="4: return LeanData.GenerateZipFilePath(baseDirectory, _symbol.Value, _securityType, _market, time, _resolution);", span="242-242"];
m24_114 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m24_66 [cluster="System.IO.File.Exists(string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m24_48 [cluster="System.Text.StringBuilder.Append(string)", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m24_87 [cluster="Unk.Read", file="LeanDataWriter.cs", label="Entry Unk.Read", span=""];
m24_90 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="LeanDataWriter.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m24_108 [cluster="System.IO.Path.GetDirectoryName(string)", file="LeanDataWriter.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m24_41 [cluster="System.Text.StringBuilder.StringBuilder()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m24_91 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="LeanDataWriter.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m24_86 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="LeanDataWriter.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0"];
m24_89 [cluster="Unk.Extract", file="LeanDataWriter.cs", label="Entry Unk.Extract", span=""];
m24_107 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LeanDataWriter.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m24_42 [cluster="System.DateTime.DateTime()", file="LeanDataWriter.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m24_65 [cluster="Unk.ToDictionary", file="LeanDataWriter.cs", label="Entry Unk.ToDictionary", span=""];
m24_88 [cluster="System.IO.MemoryStream.MemoryStream()", file="LeanDataWriter.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m24_116 [file="LeanDataWriter.cs", label="QuantConnect.ToolBox.LeanDataWriter", span=""];
m26_0 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", span="25-25"];
m26_1 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs", label="SetStartDate(2013, 10, 07)", span="27-27"];
m26_2 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs", label="SetEndDate(2013, 10, 11)", span="28-28"];
m26_3 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs", label="SetCash(10000000)", span="30-30"];
m26_4 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs", label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Tick)", span="33-33"];
m26_5 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="4: AddSecurity(SecurityType.Equity, ''BAC'', Resolution.Minute)", span="34-34"];
m26_6 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs", label="AddSecurity(SecurityType.Equity, ''AIG'', Resolution.Hour)", span="35-35"];
m26_7 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs", label="AddSecurity(SecurityType.Equity, ''IBM'', Resolution.Daily)", span="36-36"];
m26_8 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", span="25-25"];
m26_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m26_13 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42"];
m26_14 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="Time - lastTradeTradeBars < tradeEvery", span="44-44"];
m26_17 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label=data, span="47-47"];
m26_15 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="return;", span="44-44"];
m26_16 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="lastTradeTradeBars = Time", span="45-45"];
m26_18 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="3: var symbol = kvp.Key", span="49-49"];
m26_19 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="4: var bar = kvp.Value", span="50-50"];
m26_21 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="var holdings = Portfolio[symbol]", span="58-58"];
m26_23 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="MarketOrder(symbol, 10)", span="61-61"];
m26_24 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="MarketOrder(symbol, -holdings.Quantity)", span="65-65"];
m26_20 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="bar.Time.RoundDown(bar.Period) != bar.Time", span="52-52"];
m26_22 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="!holdings.Invested", span="59-59"];
m26_25 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42"];
m26_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m26_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m26_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1257-1257"];
m26_26 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m26_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m26_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m26_29 [file="LiveTradingRealTimeHandler.cs", label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", span=""];
m28_0 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m28_1 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m28_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m28_4 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m28_5 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="return Quantity*security.Price;", span="58-58"];
m28_6 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m28_7 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="65-65"];
m28_8 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="var order = new MarketOnOpenOrder()", span="67-67"];
m28_9 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="CopyTo(order)", span="68-68"];
m28_10 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="return order;", span="69-69"];
m28_11 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="65-65"];
m28_2 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m28_3 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m28_13 [file="MarketOnOpenOrder.cs", label="QuantConnect.Orders.MarketOnOpenOrder", span=""];
m29_7 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.Clone()", span="65-65"];
m29_8 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="var order = new MarketOrder()", span="67-67"];
m29_9 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="CopyTo(order)", span="68-68"];
m29_10 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="return order;", span="69-69"];
m29_11 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.Clone()", span="65-65"];
m29_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m29_2 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m29_3 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m29_0 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m29_1 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m29_4 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m29_5 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="return Quantity*security.Price;", span="58-58"];
m29_6 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m29_13 [file="MarketOrder.cs", label="QuantConnect.Orders.MarketOrder", span=""];
m30_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1353-1353"];
m30_16 [cluster="System.TimeSpan.FromDays(double)", file="OandaRestApiV20.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m30_19 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="57-57"];
m30_23 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="OandaRestApiV20.cs", label="0: contract.Symbol.ID.StrikePrice == 72.5m &&\r\n                            contract.Symbol.ID.OptionRight == OptionRight.Call &&\r\n                            contract.Symbol.ID.Date == new DateTime(2016, 01, 15)", span="65-67"];
m30_22 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="chain.Value", span="63-63"];
m30_24 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="slice.Time.Date == new DateTime(2014, 06, 05) && contract.OpenInterest != 50", span="69-69"];
m30_25 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="OandaRestApiV20.cs", label="1: throw new Exception(''Regression test failed: current open interest was not correctly loaded and is not equal to 50'');", span="71-71"];
m30_21 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="slice.OptionChains", span="61-61"];
m30_28 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="slice.Time.Date == new DateTime(2014, 06, 06)", span="77-77"];
m30_30 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="MarketOnCloseOrder(contract.Symbol, -1)", span="80-80"];
m30_26 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="slice.Time.Date == new DateTime(2014, 06, 06) && contract.OpenInterest != 70", span="73-73"];
m30_29 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="MarketOrder(contract.Symbol, 1)", span="79-79"];
m30_20 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="!Portfolio.Invested", span="59-59"];
m30_27 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="throw new Exception(''Regression test failed: current open interest was not correctly loaded and is not equal to 70'');", span="75-75"];
m30_31 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OandaRestApiV20.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="57-57"];
m30_33 [cluster="System.Exception.Exception(string)", file="OandaRestApiV20.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m30_32 [cluster="System.DateTime.DateTime(int, int, int)", file="OandaRestApiV20.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m30_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1339-1339"];
m30_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m30_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m30_0 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", span="35-35"];
m30_1 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="SetStartDate(2014, 06, 05)", span="38-38"];
m30_2 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="SetEndDate(2014, 06, 06)", span="39-39"];
m30_3 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="SetCash(1000000)", span="40-40"];
m30_4 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="var equity = AddEquity(UnderlyingTicker)", span="42-42"];
m30_5 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="var option = AddOption(UnderlyingTicker)", span="43-43"];
m30_8 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="SetBenchmark(equity.Symbol)", span="50-50"];
m30_6 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="45-45"];
m30_7 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="option.SetFilter(-10, +10, TimeSpan.Zero, TimeSpan.FromDays(365 * 2))", span="47-47"];
m30_9 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OandaRestApiV20.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", span="35-35"];
m30_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m30_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="971-971"];
m30_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m30_17 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m30_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m30_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="OandaRestApiV20.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m30_38 [file="OandaRestApiV20.cs", label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", span=""];
m31_2 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="41-41"];
m31_3 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", color=green, community=0, file="OptionExerciseOrder.cs", label="0: Price = Symbol.ID.StrikePrice", span="44-44"];
m31_4 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="41-41"];
m31_15 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m31_9 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="189-189"];
m31_5 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="59-59"];
m31_6 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="var option = (Option)security", span="61-61"];
m31_7 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="return option.GetExerciseQuantity(Quantity) * Price  / option.SymbolProperties.ContractMultiplier;", span="63-63"];
m31_8 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="59-59"];
m31_0 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m31_1 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m31_10 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.Clone()", span="70-70"];
m31_11 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="var order = new OptionExerciseOrder()", span="72-72"];
m31_12 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="CopyTo(order)", span="73-73"];
m31_13 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="return order;", span="74-74"];
m31_14 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.Clone()", span="70-70"];
m31_16 [file="OptionExerciseOrder.cs", label="QuantConnect.Orders.OptionExerciseOrder", span=""];
m32_49 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m32_50 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Id = Id", span="232-232"];
m32_51 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Time = Time", span="233-233"];
m32_52 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.BrokerId = BrokerId.ToList()", span="234-234"];
m32_53 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.ContingentId = ContingentId", span="235-235"];
m32_54 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Duration = Duration", span="236-236"];
m32_55 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Price = Price", span="237-237"];
m32_56 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.PriceCurrency = PriceCurrency", span="238-238"];
m32_57 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Quantity = Quantity", span="239-239"];
m32_58 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Status = Status", span="240-240"];
m32_59 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Symbol = Symbol", span="241-241"];
m32_60 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Tag = Tag", span="242-242"];
m32_61 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="Exit QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m32_88 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="Order.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m32_14 [cluster="System.Collections.Generic.List<T>.List()", file="Order.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m32_15 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Entry QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", span="153-153"];
m32_16 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Time = time", span="155-155"];
m32_19 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Quantity = quantity", span="158-158"];
m32_20 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Symbol = symbol", span="159-159"];
m32_22 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Tag = tag", span="161-161"];
m32_17 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Price = 0", span="156-156"];
m32_18 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="PriceCurrency = string.Empty", span="157-157"];
m32_21 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Status = OrderStatus.None", span="160-160"];
m32_23 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Duration = OrderDuration.GTC", span="162-162"];
m32_24 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="BrokerId = new List<string>()", span="163-163"];
m32_25 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="ContingentId = 0", span="164-164"];
m32_26 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="DurationValue = DateTime.MaxValue", span="165-165"];
m32_27 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Exit QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string)", span="153-153"];
m32_63 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="250-250"];
m32_64 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="Order order", span="252-252"];
m32_65 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="request.OrderType", span="253-253"];
m32_67 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="Order.cs", label="0: order = new MarketOrder(request.Symbol, request.Quantity, request.Time, request.Tag)", span="256-256"];
m32_69 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="Order.cs", label="0: order = new LimitOrder(request.Symbol, request.Quantity, request.LimitPrice, request.Time, request.Tag)", span="259-259"];
m32_71 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="Order.cs", label="0: order = new StopMarketOrder(request.Symbol, request.Quantity, request.StopPrice, request.Time, request.Tag)", span="262-262"];
m32_73 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="Order.cs", label="0: order = new StopLimitOrder(request.Symbol, request.Quantity, request.StopPrice, request.LimitPrice, request.Time, request.Tag)", span="265-265"];
m32_75 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="Order.cs", label="0: order = new MarketOnOpenOrder(request.Symbol, request.Quantity, request.Time, request.Tag)", span="268-268"];
m32_77 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="Order.cs", label="3: order = new MarketOnCloseOrder(request.Symbol, request.Quantity, request.Time, request.Tag)", span="271-271"];
m32_79 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="Order.cs", label="2: order = new OptionExerciseOrder(request.Symbol, request.Quantity, request.Time, request.Tag)", span="274-274"];
m32_82 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="order.Id = request.OrderId", span="280-280"];
m32_83 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="request.Tag != null", span="281-281"];
m32_84 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="order.Tag = request.Tag", span="283-283"];
m32_66 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.Market", span="255-255"];
m32_68 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.Limit", span="258-258"];
m32_70 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.StopMarket", span="261-261"];
m32_72 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.StopLimit", span="264-264"];
m32_74 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.MarketOnOpen", span="267-267"];
m32_76 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.MarketOnClose", span="270-270"];
m32_78 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.OptionExercise", span="273-273"];
m32_80 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="throw new ArgumentOutOfRangeException();", span="277-277"];
m32_81 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="order.Status = OrderStatus.New", span="279-279"];
m32_85 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="return order;", span="285-285"];
m32_86 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="Exit QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="250-250"];
m32_47 [cluster="QuantConnect.Orders.Order.Clone()", file="Order.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="224-224"];
m32_48 [cluster="QuantConnect.Orders.Order.Clone()", file="Order.cs", label="Exit QuantConnect.Orders.Order.Clone()", span="224-224"];
m32_34 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m32_35 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="request.OrderId != Id", span="194-194"];
m32_37 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="request.Quantity.HasValue", span="198-198"];
m32_38 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="Quantity = request.Quantity.Value", span="200-200"];
m32_39 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="request.Tag != null", span="202-202"];
m32_40 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="Tag = request.Tag", span="204-204"];
m32_36 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="throw new ArgumentException(''Attempted to apply updates to the incorrect order!'');", span="196-196"];
m32_41 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="Exit QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m32_89 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="Order.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m32_42 [cluster="System.ArgumentException.ArgumentException(string)", file="Order.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m32_28 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Order.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m32_29 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Order.cs", label="var value = GetValueImpl(security)", span="176-176"];
m32_30 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Order.cs", label="return value*security.QuoteCurrency.ConversionRate*security.SymbolProperties.ContractMultiplier;", span="177-177"];
m32_31 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Order.cs", label="Exit QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m32_93 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="41-41"];
m32_62 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Order.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m32_91 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m32_92 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m32_46 [cluster="string.Format(string, params object[])", file="Order.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m32_94 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="Order.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m32_43 [cluster="QuantConnect.Orders.Order.ToString()", file="Order.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="215-215"];
m32_44 [cluster="QuantConnect.Orders.Order.ToString()", file="Order.cs", label="return string.Format(''OrderId: {0} {1} {2} order for {3} unit{4} of {5}'', Id, Status, Type, Quantity, Quantity == 1 ? '''' : ''s'', Symbol);", span="217-217"];
m32_45 [cluster="QuantConnect.Orders.Order.ToString()", file="Order.cs", label="Exit QuantConnect.Orders.Order.ToString()", span="215-215"];
m32_90 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="Order.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64"];
m32_13 [cluster="System.DateTime.DateTime()", file="Order.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m32_32 [cluster="QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", file="Order.cs", label="Entry QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", span="186-186"];
m32_33 [cluster="QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", file="Order.cs", label="Exit QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", span="186-186"];
m32_0 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Entry QuantConnect.Orders.Order.Order()", span="131-131"];
m32_1 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Time = new DateTime()", span="133-133"];
m32_2 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Price = 0", span="134-134"];
m32_3 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="PriceCurrency = string.Empty", span="135-135"];
m32_4 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Quantity = 0", span="136-136"];
m32_5 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Symbol = Symbol.Empty", span="137-137"];
m32_6 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Status = OrderStatus.None", span="138-138"];
m32_7 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Tag = ''''", span="139-139"];
m32_8 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Duration = OrderDuration.GTC", span="140-140"];
m32_9 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="BrokerId = new List<string>()", span="141-141"];
m32_10 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="ContingentId = 0", span="142-142"];
m32_11 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="DurationValue = DateTime.MaxValue", span="143-143"];
m32_12 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Exit QuantConnect.Orders.Order.Order()", span="131-131"];
m32_87 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="Order.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m32_95 [file="Order.cs", label="QuantConnect.Orders.Order", span=""];
m33_0 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m33_1 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=red, community=0, file="OrderEvent.cs", label="2: order.Type == OrderType.Limit", span="38-38"];
m33_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="decimal fee = security.Price * (order.Quantity < 0 ? (order.Quantity * -1) : order.Quantity) * divisor", span="46-46"];
m33_2 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="return 0m;", span="40-40"];
m33_3 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="decimal divisor = 0.025m", span="44-44"];
m33_5 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="OrderEvent.cs", label="4: return fee;", span="47-47"];
m33_6 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OrderEvent.cs", label="Exit QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m34_4 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m34_55 [cluster="Unk.Single", file="OrderJsonConverter.cs", label="Entry Unk.Single", span=""];
m34_57 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="OrderJsonConverter.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m34_19 [cluster="Unk.CreateOrderFromJObject", file="OrderJsonConverter.cs", label="Entry Unk.CreateOrderFromJObject", span=""];
m34_84 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m34_13 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="74-74"];
m34_14 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="OrderJsonConverter.cs", label="var jObject = JObject.Load(reader)", span="76-76"];
m34_15 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="OrderJsonConverter.cs", label="var order = CreateOrderFromJObject(jObject)", span="78-78"];
m34_16 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="OrderJsonConverter.cs", label="return order;", span="80-80"];
m34_17 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="74-74"];
m34_12 [cluster="System.NotImplementedException.NotImplementedException(string)", file="OrderJsonConverter.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m34_61 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="105-105"];
m34_0 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="31-32"];
m34_1 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Composer.Instance.GetExportedValueByTypeName<IMapFileProvider>(Config.Get(''map-file-provider'', ''LocalDiskMapFileProvider''))", span="32-32"];
m34_2 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="31-32"];
m34_62 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.Value<string>()", span="105-105"];
m34_63 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="105-105"];
m34_59 [cluster="Symbol.cstr", file="OrderJsonConverter.cs", label="Entry Symbol.cstr", span=""];
m34_60 [cluster="Unk.Create", file="OrderJsonConverter.cs", label="Entry Unk.Create", span=""];
m34_52 [cluster="Unk.ToList", file="OrderJsonConverter.cs", label="Entry Unk.ToList", span=""];
m34_9 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="62-62"];
m34_10 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="OrderJsonConverter.cs", label="throw new NotImplementedException(''The OrderJsonConverter does not implement a WriteJson method;.'');", span="64-64"];
m34_11 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="62-62"];
m34_49 [cluster="Unk.>", file="OrderJsonConverter.cs", label="Entry Unk.>", span=""];
m34_83 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m34_8 [cluster="System.Type.IsAssignableFrom(System.Type)", file="OrderJsonConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m34_88 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m34_86 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m34_89 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m34_20 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="88-88"];
m34_21 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var orderType = (OrderType) jObject[''Type''].Value<int>()", span="91-91"];
m34_22 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var order = CreateOrder(orderType, jObject)", span="92-92"];
m34_23 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Id = jObject[''Id''].Value<int>()", span="95-95"];
m34_24 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Status = (OrderStatus) jObject[''Status''].Value<int>()", span="96-96"];
m34_25 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Time = jObject[''Time''].Value<DateTime>()", span="97-97"];
m34_26 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Tag = jObject[''Tag''].Value<string>()", span="98-98"];
m34_27 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="4: order.Quantity = jObject[''Quantity''].Value<int>()", span="100-100"];
m34_28 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=red, community=0, file="OrderJsonConverter.cs", label="1: order.Quantity = jObject[''Quantity''].Value<decimal>()", span="101-101"];
m34_29 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Price = jObject[''Price''].Value<decimal>()", span="103-103"];
m34_30 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var securityType = (SecurityType) jObject[''SecurityType''].Value<int>()", span="104-104"];
m34_31 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.BrokerId = jObject[''BrokerId''].Select(x => x.Value<string>()).ToList()", span="105-105"];
m34_32 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.ContingentId = jObject[''ContingentId''].Value<int>()", span="106-106"];
m34_34 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var suppliedMarket = jObject.SelectTokens(''Symbol.ID.Market'')", span="111-111"];
m34_38 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="jObject.SelectTokens(''Symbol.ID'').Any()", span="122-122"];
m34_39 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var sid = SecurityIdentifier.Parse(jObject.SelectTokens(''Symbol.ID'').Single().Value<string>())", span="124-124"];
m34_40 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="125-125"];
m34_42 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="jObject.SelectTokens(''Symbol.Value'').Any()", span="128-128"];
m34_43 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="131-131"];
m34_45 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var tickerstring = jObject[''Symbol''].Value<string>()", span="136-136"];
m34_41 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Symbol = new Symbol(sid, ticker)", span="126-126"];
m34_44 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Symbol = Symbol.Create(ticker, securityType, market)", span="132-132"];
m34_46 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Symbol = Symbol.Create(tickerstring, securityType, market)", span="137-137"];
m34_47 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="return order;", span="139-139"];
m34_37 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="new DefaultBrokerageModel().DefaultMarkets.TryGetValue(securityType, out market)", span="119-119"];
m34_33 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="string market = Market.USA", span="108-108"];
m34_35 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="suppliedMarket.Any()", span="112-112"];
m34_36 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="market = suppliedMarket.Single().Value<string>()", span="114-114"];
m34_48 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="88-88"];
m34_54 [cluster="Unk.Any", file="OrderJsonConverter.cs", label="Entry Unk.Any", span=""];
m34_85 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m34_53 [cluster="Unk.SelectTokens", file="OrderJsonConverter.cs", label="Entry Unk.SelectTokens", span=""];
m34_18 [cluster="Unk.Load", file="OrderJsonConverter.cs", label="Entry Unk.Load", span=""];
m34_87 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m34_90 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="OrderJsonConverter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m34_58 [cluster="Unk.Parse", file="OrderJsonConverter.cs", label="Entry Unk.Parse", span=""];
m34_50 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", span="145-145"];
m34_64 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="Order order", span="147-147"];
m34_65 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label=orderType, span="148-148"];
m34_69 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new LimitOrder {LimitPrice = jObject[''LimitPrice''].Value<decimal>()}", span="155-155"];
m34_71 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new StopMarketOrder\r\n                    {\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", span="159-162"];
m34_73 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new StopLimitOrder\r\n                    {\r\n                        LimitPrice = jObject[''LimitPrice''].Value<decimal>(),\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", span="166-170"];
m34_66 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.Market", span="150-150"];
m34_68 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.Limit", span="154-154"];
m34_70 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.StopMarket", span="158-158"];
m34_72 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.StopLimit", span="165-165"];
m34_74 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.MarketOnOpen", span="173-173"];
m34_76 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.MarketOnClose", span="177-177"];
m34_78 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.OptionExercise", span="181-181"];
m34_80 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="throw new ArgumentOutOfRangeException();", span="186-186"];
m34_67 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new MarketOrder()", span="151-151"];
m34_75 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new MarketOnOpenOrder()", span="174-174"];
m34_77 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new MarketOnCloseOrder()", span="178-178"];
m34_79 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new OptionExerciseOrder()", span="182-182"];
m34_81 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="return order;", span="188-188"];
m34_82 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", span="145-145"];
m34_51 [cluster="Unk.Select", file="OrderJsonConverter.cs", label="Entry Unk.Select", span=""];
m34_56 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m34_3 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m34_5 [cluster="QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", span="53-53"];
m34_6 [cluster="QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", file="OrderJsonConverter.cs", label="return typeof(Order).IsAssignableFrom(objectType);", span="55-55"];
m34_7 [cluster="QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", span="53-53"];
m34_91 [file="OrderJsonConverter.cs", label="QuantConnect.Orders.OrderJsonConverter", span=""];
m36_148 [cluster="Unk.ToPython", file="PandasConverter.cs", label="Entry Unk.ToPython", span=""];
m36_28 [cluster="Unk.Where", file="PandasConverter.cs", label="Entry Unk.Where", span=""];
m36_150 [cluster="string.Split(params char[])", file="PandasConverter.cs", label="Entry string.Split(params char[])", span="0-0"];
m36_149 [cluster="Unk.ToArray", file="PandasConverter.cs", label="Entry Unk.ToArray", span=""];
m36_102 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="131-131"];
m36_36 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="63-63"];
m36_39 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="63-63"];
m36_42 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="68-68"];
m36_37 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: x.Keys", span="63-63"];
m36_38 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="63-63"];
m36_40 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: x.Value", span="63-63"];
m36_41 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="63-63"];
m36_43 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: x.HasUnderlying", span="68-68"];
m36_44 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="68-68"];
m36_79 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="114-114"];
m36_82 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="118-118"];
m36_85 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="119-119"];
m36_91 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="121-121"];
m36_98 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="126-126"];
m36_105 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="132-132"];
m36_111 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="134-134"];
m36_114 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="135-135"];
m36_120 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="137-137"];
m36_123 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="138-138"];
m36_126 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="139-139"];
m36_129 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="140-140"];
m36_132 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="141-141"];
m36_95 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: var bar = x as TradeBar", span="125-125"];
m36_99 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: getVolume(x)", span="126-126"];
m36_94 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="125-125"];
m36_96 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: return (double)bar.Volume;", span="125-125"];
m36_100 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="126-126"];
m36_106 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Open;", span="132-132"];
m36_107 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="132-132"];
m36_112 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.High;", span="134-134"];
m36_113 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="134-134"];
m36_115 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.High;", span="135-135"];
m36_116 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="135-135"];
m36_121 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Low;", span="137-137"];
m36_122 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="137-137"];
m36_124 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Close;", span="138-138"];
m36_125 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="138-138"];
m36_127 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Close;", span="139-139"];
m36_128 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="139-139"];
m36_130 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: (double)toQuoteBar(x).LastAskSize", span="140-140"];
m36_131 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="140-140"];
m36_133 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: (double)toQuoteBar(x).LastBidSize", span="141-141"];
m36_134 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="141-141"];
m36_80 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: x.Time", span="114-114"];
m36_81 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="114-114"];
m36_83 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: (double)x.Low", span="118-118"];
m36_84 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="118-118"];
m36_86 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: (double)x.Open", span="119-119"];
m36_87 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="119-119"];
m36_92 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: (double)x.Close", span="121-121"];
m36_93 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="121-121"];
m36_97 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="125-125"];
m36_153 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: new PyTuple(new PyObject[] { value, x.ToPython() })", span="157-157"];
m36_157 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="4: new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), value, x.ToPython() })", span="162-162"];
m36_160 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), symbol.ID.StrikePrice.ToPython(), symbol.ID.OptionRight.ToString().ToPython(), value, x.ToPython() })", span="168-168"];
m36_152 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="157-157"];
m36_156 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="162-162"];
m36_158 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="162-162"];
m36_159 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="168-168"];
m36_161 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="168-168"];
m36_154 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="157-157"];
m36_180 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="193-193"];
m36_183 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="193-193"];
m36_177 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="189-189"];
m36_178 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: (double)x.Value", span="189-189"];
m36_179 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="189-189"];
m36_181 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="1: x.ToLower()", span="193-193"];
m36_182 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="193-193"];
m36_184 [cluster="lambda expression", color=green, community=0, file="PandasConverter.cs", label="0: x", span="193-193"];
m36_185 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="193-193"];
m36_88 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="120-120"];
m36_108 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="133-133"];
m36_117 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="136-136"];
m36_103 [cluster="lambda expression", file="PandasConverter.cs", label="x as QuoteBar", span="131-131"];
m36_109 [cluster="lambda expression", file="PandasConverter.cs", label="return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Open;", span="133-133"];
m36_118 [cluster="lambda expression", file="PandasConverter.cs", label="return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Low;", span="136-136"];
m36_174 [cluster="lambda expression", file="PandasConverter.cs", label="Entry lambda expression", span="188-188"];
m36_90 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="120-120"];
m36_89 [cluster="lambda expression", file="PandasConverter.cs", label="(double)x.High", span="120-120"];
m36_110 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="133-133"];
m36_119 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="136-136"];
m36_104 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="131-131"];
m36_175 [cluster="lambda expression", file="PandasConverter.cs", label="x.EndTime", span="188-188"];
m36_176 [cluster="lambda expression", file="PandasConverter.cs", label="Exit lambda expression", span="188-188"];
m36_31 [cluster="Unk.DataFrame", file="PandasConverter.cs", label="Entry Unk.DataFrame", span=""];
m36_147 [cluster="QuantConnect.Symbol.ToString()", file="PandasConverter.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m36_77 [cluster="Unk.Series", file="PandasConverter.cs", label="Entry Unk.Series", span=""];
m36_151 [cluster="Unk.from_tuples", file="PandasConverter.cs", label="Entry Unk.from_tuples", span=""];
m36_10 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="PandasConverter.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m36_189 [cluster="Unk.Repr", file="PandasConverter.cs", label="Entry Unk.Repr", span=""];
m36_186 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="PandasConverter.cs", label="Entry QuantConnect.Python.PandasConverter.ToString()", span="201-201"];
m36_187 [cluster="QuantConnect.Python.PandasConverter.ToString()", color=green, community=0, file="PandasConverter.cs", label="4: return _pandas == null\r\n                ? ''pandas module was not imported.''\r\n                : _pandas.Repr();", span="203-205"];
m36_188 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="PandasConverter.cs", label="Exit QuantConnect.Python.PandasConverter.ToString()", span="201-201"];
m36_0 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverter.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m36_4 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverter.cs", label="_pandas = pandas", span="48-48"];
m36_2 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverter.cs", label="Py.GIL()", span="42-42"];
m36_1 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverter.cs", label="pandas == null", span="40-40"];
m36_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverter.cs", label="pandas = Py.Import(''pandas'')", span="44-44"];
m36_5 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverter.cs", label=PythonException, span="50-50"];
m36_6 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverter.cs", label="Logging.Log.Error($''PandasConverter: Failed to import pandas module: {pythonException}'')", span="52-52"];
m36_7 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverter.cs", label="Exit QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m36_155 [cluster="PyTuple.cstr", file="PandasConverter.cs", label="Entry PyTuple.cstr", span=""];
m36_173 [cluster="Unk.OrderBy", file="PandasConverter.cs", label="Entry Unk.OrderBy", span=""];
m36_34 [cluster="PyList.cstr", file="PandasConverter.cs", label="Entry PyList.cstr", span=""];
m36_76 [cluster="Unk.ToList", file="PandasConverter.cs", label="Entry Unk.ToList", span=""];
m36_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="PandasConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m36_163 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PandasConverter.cs", label="Entry QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="180-180"];
m36_164 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=green, community=0, file="PandasConverter.cs", label="4: Py.GIL()", span="182-182"];
m36_165 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=green, community=0, file="PandasConverter.cs", label="4: var pyDict = new PyDict()", span="184-184"];
m36_166 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=green, community=0, file="PandasConverter.cs", label="4: data", span="186-186"];
m36_169 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PandasConverter.cs", label="pyDict.SetItem(kvp.Key.ToLower(), _pandas.Series(values, index))", span="190-190"];
m36_167 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PandasConverter.cs", label="var index = kvp.Value.Select(x => x.EndTime).ToList()", span="188-188"];
m36_170 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=green, community=0, file="PandasConverter.cs", label="4: return _pandas.DataFrame(pyDict, columns: data.Keys.Select(x => x.ToLower()).OrderBy(x => x));", span="193-193"];
m36_168 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=green, community=0, file="PandasConverter.cs", label="0: var values = kvp.Value.Select(x => (double)x.Value).ToList()", span="189-189"];
m36_171 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PandasConverter.cs", label="Exit QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="180-180"];
m36_172 [cluster="string.ToLower()", file="PandasConverter.cs", label="Entry string.ToLower()", span="0-0"];
m36_78 [cluster="Unk.SetItem", file="PandasConverter.cs", label="Entry Unk.SetItem", span=""];
m36_33 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104"];
m36_48 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="0: var index = CreateIndex(data.First().Symbol, data.Select(x => x.Time))", span="114-114"];
m36_47 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="Py.GIL()", span="112-112"];
m36_49 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: var pyDict = new PyDict()", span="116-116"];
m36_50 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''low'', _pandas.Series(data.Select(x => (double)x.Low).ToList(), index))", span="118-118"];
m36_51 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''open'', _pandas.Series(data.Select(x => (double)x.Open).ToList(), index))", span="119-119"];
m36_52 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="pyDict.SetItem(''high'', _pandas.Series(data.Select(x => (double)x.High).ToList(), index))", span="120-120"];
m36_53 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="0: pyDict.SetItem(''close'', _pandas.Series(data.Select(x => (double)x.Close).ToList(), index))", span="121-121"];
m36_56 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''volume'', _pandas.Series(data.Select(x => getVolume(x)).ToList(), index))", span="126-126"];
m36_59 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''askopen'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Open; }).ToList(), index))", span="132-132"];
m36_60 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="pyDict.SetItem(''bidopen'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Open; }).ToList(), index))", span="133-133"];
m36_61 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''askhigh'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.High; }).ToList(), index))", span="134-134"];
m36_62 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''bidhigh'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.High; }).ToList(), index))", span="135-135"];
m36_63 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="pyDict.SetItem(''asklow'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Low; }).ToList(), index))", span="136-136"];
m36_64 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''bidlow'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Low; }).ToList(), index))", span="137-137"];
m36_65 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''askclose'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Close; }).ToList(), index))", span="138-138"];
m36_66 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''bidclose'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Close; }).ToList(), index))", span="139-139"];
m36_67 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: pyDict.SetItem(''asksize'', _pandas.Series(data.Select(x => (double)toQuoteBar(x).LastAskSize).ToList(), index))", span="140-140"];
m36_68 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="0: pyDict.SetItem(''bidsize'', _pandas.Series(data.Select(x => (double)toQuoteBar(x).LastBidSize).ToList(), index))", span="141-141"];
m36_54 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="4: typeof(T) == typeof(TradeBar)", span="123-123"];
m36_55 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="0: Func<IBaseDataBar, double> getVolume = x => { var bar = x as TradeBar; return (double)bar.Volume; }", span="125-125"];
m36_57 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="0: typeof(T) == typeof(QuoteBar)", span="129-129"];
m36_58 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="Func<IBaseDataBar, QuoteBar> toQuoteBar = x => x as QuoteBar", span="131-131"];
m36_69 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="return _pandas.DataFrame(pyDict);", span="144-144"];
m36_46 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverter.cs", label="3: return _pandas.DataFrame();", span="109-109"];
m36_45 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="data.Count() == 0", span="107-107"];
m36_70 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverter.cs", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104"];
m36_29 [cluster="Unk.Count", file="PandasConverter.cs", label="Entry Unk.Count", span=""];
m36_32 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="PandasConverter.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m36_162 [cluster="System.Enum.ToString()", file="PandasConverter.cs", label="Entry System.Enum.ToString()", span="0-0"];
m36_9 [cluster="Unk.Import", file="PandasConverter.cs", label="Entry Unk.Import", span=""];
m36_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="PandasConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m36_8 [cluster="Unk.GIL", file="PandasConverter.cs", label="Entry Unk.GIL", span=""];
m36_135 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", file="PandasConverter.cs", label="Entry QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", span="154-154"];
m36_136 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="3: var value = (symbol.HasUnderlying ? symbol.Value : symbol.ToString()).ToPython()", span="156-156"];
m36_137 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="3: var tuples = time.Select(x => new PyTuple(new PyObject[] { value, x.ToPython() }))", span="157-157"];
m36_140 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="4: tuples = time.Select(x => new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), value, x.ToPython() }))", span="162-162"];
m36_143 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="4: tuples = time.Select(x => new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), symbol.ID.StrikePrice.ToPython(), symbol.ID.OptionRight.ToString().ToPython(), value, x.ToPython() }))", span="168-168"];
m36_138 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="4: var names = ''symbol,time''", span="158-158"];
m36_145 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="4: return _pandas.MultiIndex.from_tuples(tuples.ToArray(), names: names.Split(','));", span="172-172"];
m36_139 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="4: symbol.SecurityType == SecurityType.Future", span="160-160"];
m36_142 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="4: symbol.SecurityType == SecurityType.Option", span="166-166"];
m36_141 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="3: names = ''expiry,'' + names", span="163-163"];
m36_144 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=green, community=0, file="PandasConverter.cs", label="4: names = ''expiry,strike,type,'' + names", span="169-169"];
m36_146 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", file="PandasConverter.cs", label="Exit QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", span="154-154"];
m36_101 [cluster="System.Func<T, TResult>.Invoke(T)", file="PandasConverter.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m36_35 [cluster="Unk.concat", file="PandasConverter.cs", label="Entry Unk.concat", span=""];
m36_11 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverter.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m36_12 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="4: var symbols = data.SelectMany(x => x.Keys).Distinct().OrderBy(x => x.Value)", span="63-63"];
m36_13 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverter.cs", label="Symbol underlying = null", span="67-67"];
m36_14 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="0: var derivatives = symbols.Where(x => x.HasUnderlying)", span="68-68"];
m36_19 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="4: symbols", span="78-78"];
m36_21 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="0: var items = new PyObject[]\r\n                    {\r\n                        dataFrame,\r\n                        GetDataFrame(data.Get<QuoteBar>(symbol)),\r\n                        GetDataFrame(data.Get<TradeBar>(symbol))\r\n                    }", span="85-90"];
m36_20 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="0: symbol == underlying", span="80-80"];
m36_18 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="4: var dataFrame = _pandas.DataFrame()", span="76-76"];
m36_22 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="4: dataFrame = _pandas.concat(new PyList(items))", span="92-92"];
m36_15 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverter.cs", label="derivatives.Count() > 0", span="69-69"];
m36_16 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="4: underlying = derivatives.First().Underlying", span="71-71"];
m36_23 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverter.cs", label="return dataFrame;", span="95-95"];
m36_17 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=green, community=0, file="PandasConverter.cs", label="4: Py.GIL()", span="74-74"];
m36_24 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverter.cs", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m36_75 [cluster="PyDict.cstr", file="PandasConverter.cs", label="Entry PyDict.cstr", span=""];
m36_30 [cluster="Unk.First", file="PandasConverter.cs", label="Entry Unk.First", span=""];
m36_74 [cluster="Unk.CreateIndex", file="PandasConverter.cs", label="Entry Unk.CreateIndex", span=""];
m36_72 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="PandasConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m36_73 [cluster="Unk.Select", file="PandasConverter.cs", label="Entry Unk.Select", span=""];
m36_71 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="PandasConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m36_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", file="PandasConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", span="0-0"];
m36_190 [file="PandasConverter.cs", label="QuantConnect.Python.PandasConverter", span=""];
m36_191 [file="PandasConverter.cs", label=getVolume, span=""];
m36_192 [file="PandasConverter.cs", label=toQuoteBar, span=""];
m36_193 [file="PandasConverter.cs", label=value, span=""];
m36_194 [file="PandasConverter.cs", label="QuantConnect.Symbol", span=""];
m39_211 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m39_140 [cluster="System.Type.GetMethods()", file="QCAlgorithm.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m39_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m39_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label=_locked, span="853-853"];
m39_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="timeZone == null", span="858-858"];
m39_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="_timeKeeper.AddTimeZone(timeZone)", span="859-859"];
m39_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="860-860"];
m39_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="TimeRules.SetDefaultTimeZone(timeZone)", span="863-863"];
m39_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="855-855"];
m39_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''timeZone'');", span="858-858"];
m39_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m39_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m39_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Name = GetType().Name", span="92-92"];
m39_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Running", span="93-93"];
m39_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="IsWarmingUp = true", span="96-96"];
m39_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_startDate = new DateTime(1998, 01, 01)", span="103-103"];
m39_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_endDate = DateTime.Now.AddDays(-1)", span="104-104"];
m39_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="107-107"];
m39_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="109-109"];
m39_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Settings = new AlgorithmSettings()", span="111-111"];
m39_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="114-114"];
m39_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Securities = new SecurityManager(_timeKeeper)", span="116-116"];
m39_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Transactions = new SecurityTransactionManager(Securities)", span="117-117"];
m39_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", color=red, community=0, file="QCAlgorithm.cs", label="5: Portfolio = new SecurityPortfolioManager(Securities, Transactions)", span="118-118"];
m39_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="BrokerageModel = new DefaultBrokerageModel()", span="119-119"];
m39_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Notify = new NotificationManager(false)", span="120-120"];
m39_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_runMode = RunMode.Series", span="123-123"];
m39_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_locked = false", span="126-126"];
m39_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="129-129"];
m39_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="132-132"];
m39_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="UniverseManager = new UniverseManager()", span="135-135"];
m39_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Universe = new UniverseDefinitions(this)", span="136-136"];
m39_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="137-137"];
m39_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Schedule = new ScheduleManager(Securities, TimeZone)", span="140-140"];
m39_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="143-143"];
m39_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="145-146"];
m39_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="CandlestickPatterns = new CandlestickPatterns(this)", span="148-148"];
m39_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="151-151"];
m39_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="OptionChainProvider = new EmptyOptionChainProvider()", span="153-153"];
m39_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m39_427 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m39_29 [cluster="object.GetType()", file="QCAlgorithm.cs", label="Entry object.GetType()", span="0-0"];
m39_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m39_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="return _locked;", span="1224-1224"];
m39_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m39_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m39_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="DateTimeZone tz", span="834-834"];
m39_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="837-837"];
m39_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="841-841"];
m39_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label=DateTimeZoneNotFoundException, span="839-839"];
m39_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="SetTimeZone(tz)", span="844-844"];
m39_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m39_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m39_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m39_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Crypto>(SecurityType.Crypto, ticker, resolution, market, fillDataForward, leverage, false);", span="1526-1526"];
m39_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m39_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m39_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label=availableDataTypes, span="558-558"];
m39_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="560-560"];
m39_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m39_212 [cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48"];
m39_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(typeof(T), Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1621-1622"];
m39_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m39_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1614-1614"];
m39_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1617-1617"];
m39_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1618-1618"];
m39_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1624-1624"];
m39_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m39_533 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m39_534 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="return SymbolCache.GetSymbol(ticker);", span="1712-1712"];
m39_535 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m39_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m39_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="SetCash((decimal)startingCash)", span="1011-1011"];
m39_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m39_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m39_199 [cluster="string.Format(string, object)", file="QCAlgorithm.cs", label="Entry string.Format(string, object)", span="0-0"];
m39_536 [cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47"];
m39_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m39_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="var end = new DateTime(year, month, day)", span="1100-1100"];
m39_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1103-1103"];
m39_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="SetEndDate(end)", span="1105-1105"];
m39_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label=Exception, span="1107-1107"];
m39_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1109-1109"];
m39_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m39_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m39_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m39_476 [cluster="Unk.Any", file="QCAlgorithm.cs", label="Entry Unk.Any", span=""];
m39_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m39_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="BrokerageModel = model", span="897-897"];
m39_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="901-901"];
m39_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="!_userSetSecurityInitializer", span="898-898"];
m39_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Securities.Values", span="904-904"];
m39_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="var leverage = security.Leverage", span="909-909"];
m39_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="SecurityInitializer.Initialize(security, false)", span="912-912"];
m39_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="security.SetLeverage(leverage)", span="915-915"];
m39_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m39_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m39_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="SetCash((decimal)startingCash)", span="1022-1022"];
m39_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m39_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m39_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label=_liveMode, span="1178-1178"];
m39_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="1182-1182"];
m39_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end < _startDate", span="1190-1190"];
m39_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1197-1197"];
m39_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="return;", span="1178-1178"];
m39_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="1184-1184"];
m39_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="_startDate != new DateTime()", span="1188-1188"];
m39_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="1192-1192"];
m39_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="!_locked", span="1200-1200"];
m39_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="_endDate = end", span="1202-1202"];
m39_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1206-1206"];
m39_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m39_475 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m39_233 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m39_272 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m39_37 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m39_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m39_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="TradeBuilder = tradeBuilder", span="1251-1251"];
m39_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="TradeBuilder.SetLiveMode(LiveMode)", span="1252-1252"];
m39_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m39_554 [cluster="Unk.CreateSymbol", file="QCAlgorithm.cs", label="Entry Unk.CreateSymbol", span=""];
m39_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m39_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m39_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m39_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Debug(''Quit(): '' + message)", span="1685-1685"];
m39_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Stopped", span="1686-1686"];
m39_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m39_39 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m39_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m39_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Security security", span="1536-1536"];
m39_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Securities.TryGetValue(symbol, out security)", span="1537-1537"];
m39_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1548-1548"];
m39_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="var ret = universe.Remove(symbol)", span="1551-1551"];
m39_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="symbol == _benchmarkSymbol", span="1554-1554"];
m39_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Securities.Remove(symbol)", span="1556-1556"];
m39_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Transactions.CancelOpenOrders(security.Symbol)", span="1540-1540"];
m39_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="return false;", span="1567-1567"];
m39_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security.Cache.Reset()", span="1543-1543"];
m39_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security.Invested", span="1546-1546"];
m39_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Liquidate(security.Symbol)", span="1546-1546"];
m39_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="universe != null", span="1549-1549"];
m39_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1562-1562"];
m39_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="return ret;", span="1564-1564"];
m39_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security = CreateBenchmarkSecurity()", span="1558-1558"];
m39_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1559-1559"];
m39_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m39_404 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m39_85 [cluster="Unk.AddEquity", file="QCAlgorithm.cs", label="Entry Unk.AddEquity", span=""];
m39_141 [cluster="Unk.Where", file="QCAlgorithm.cs", label="Entry Unk.Where", span=""];
m39_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m39_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m39_295 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m39_42 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m39_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m39_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="string value", span="530-530"];
m39_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="return _parameters.TryGetValue(name, out value) ? value : null;", span="531-531"];
m39_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m39_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m39_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="!_locked", span="1050-1050"];
m39_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1052-1052"];
m39_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1056-1056"];
m39_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m39_47 [cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51"];
m39_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m39_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="mode != RunMode.Parallel", span="875-875"];
m39_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="return;", span="875-875"];
m39_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="876-876"];
m39_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m39_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m39_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="OptionChainProvider = optionChainProvider", span="599-599"];
m39_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m39_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m39_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1584-1584"];
m39_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m39_345 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30"];
m39_484 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1562-1562"];
m39_87 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="499-499"];
m39_88 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Value", span="499-499"];
m39_89 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="499-499"];
m39_120 [cluster="lambda expression", file="QCAlgorithm.cs", label="securityInitializer(security)", span="590-590"];
m39_119 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="590-590"];
m39_121 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="590-590"];
m39_148 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="624-624"];
m39_151 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="625-625"];
m39_154 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="626-626"];
m39_158 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="627-627"];
m39_149 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Name == ''OnData''", span="624-624"];
m39_150 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="624-624"];
m39_152 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.DeclaringType != typeof(QCAlgorithm)", span="625-625"];
m39_153 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="625-625"];
m39_155 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.GetParameters().Length == 1", span="626-626"];
m39_156 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="626-626"];
m39_159 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="627-627"];
m39_160 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="627-627"];
m39_252 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Key.Value == symbol", span="967-967"];
m39_251 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="967-967"];
m39_253 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="967-967"];
m39_478 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Members.ContainsKey(symbol)", span="1548-1548"];
m39_477 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1548-1548"];
m39_481 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1562-1562"];
m39_479 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1548-1548"];
m39_482 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1562-1562"];
m39_483 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1562-1562"];
m39_485 [cluster="lambda expression", file="QCAlgorithm.cs", label="y.IsCustomData", span="1562-1562"];
m39_486 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1562-1562"];
m39_145 [cluster="Unk.Call", file="QCAlgorithm.cs", label="Entry Unk.Call", span=""];
m39_190 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m39_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m39_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m39_30 [cluster="System.DateTime.DateTime(int, int, int)", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m39_115 [cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31"];
m39_403 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m39_473 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="QCAlgorithm.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m39_555 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m39_556 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="historyProvider == null", span="1773-1773"];
m39_558 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="HistoryProvider = historyProvider", span="1777-1777"];
m39_557 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1775-1775"];
m39_559 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m39_222 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m39_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m39_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="string market = Market.USA", span="948-948"];
m39_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="this.BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="950-950"];
m39_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="952-952"];
m39_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m39_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m39_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="symbol = symbol.ToUpper()", span="966-966"];
m39_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="967-967"];
m39_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="_benchmarkSymbol = security == null\r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="968-970"];
m39_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m39_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m39_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1635-1635"];
m39_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="_debugMessages.Enqueue(message)", span="1636-1636"];
m39_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="_previousDebugMessage = message", span="1637-1637"];
m39_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="return;", span="1635-1635"];
m39_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m39_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m39_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="_timeKeeper.SetUtcDateTime(frontier)", span="825-825"];
m39_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m39_377 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="488-488"];
m39_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m39_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="!_liveMode && message == ''''", span="1648-1648"];
m39_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="_logMessages.Enqueue(message)", span="1649-1649"];
m39_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="return;", span="1648-1648"];
m39_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m39_52 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.cs", label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m39_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m39_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m39_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m39_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Benchmark = new FuncBenchmark(benchmark)", span="989-989"];
m39_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m39_316 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m39_51 [cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34"];
m39_406 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49"];
m39_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m39_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="_benchmarkSymbol = symbol", span="979-979"];
m39_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m39_314 [cluster="System.DateTime.DateTime()", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m39_82 [cluster="Unk.Select", file="QCAlgorithm.cs", label="Entry Unk.Select", span=""];
m39_31 [cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m39_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m39_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="581-581"];
m39_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m39_471 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182"];
m39_102 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="QCAlgorithm.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59"];
m39_94 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m39_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m39_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m39_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m39_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m39_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m39_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m39_41 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m39_57 [cluster="System.NotImplementedException.NotImplementedException(string)", file="QCAlgorithm.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m39_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m39_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1660-1660"];
m39_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="_errorMessages.Enqueue(message)", span="1661-1661"];
m39_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="_previousErrorMessage = message", span="1662-1662"];
m39_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="return;", span="1660-1660"];
m39_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m39_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m39_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m39_84 [cluster="Unk.TryGetValue", file="QCAlgorithm.cs", label="Entry Unk.TryGetValue", span=""];
m39_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m39_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="_algorithmId = algorithmId", span="1120-1120"];
m39_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m39_174 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m39_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m39_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1280-1280"];
m39_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m39_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m39_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Status = status", span="1800-1800"];
m39_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m39_278 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m39_49 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47"];
m39_209 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m39_34 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="QCAlgorithm.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m39_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m39_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1347-1347"];
m39_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m39_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m39_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="var start = new DateTime(year, month, day)", span="1075-1075"];
m39_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="start = start.Date", span="1078-1078"];
m39_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="SetStartDate(start)", span="1080-1080"];
m39_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label=Exception, span="1082-1082"];
m39_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1084-1084"];
m39_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m39_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m39_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Benchmark == null", span="475-475"];
m39_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="478-478"];
m39_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Securities.Select(x => x.Value).OfType<Option>()", span="499-499"];
m39_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="480-480"];
m39_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Security security", span="486-486"];
m39_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="487-487"];
m39_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="security = CreateBenchmarkSecurity()", span="490-490"];
m39_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Benchmark = new SecurityBenchmark(security)", span="495-495"];
m39_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="491-491"];
m39_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="var underlying = option.Symbol.Underlying", span="501-501"];
m39_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="506-506"];
m39_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="option.Underlying = equity", span="510-510"];
m39_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Security equity", span="502-502"];
m39_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="!Securities.TryGetValue(underlying, out equity)", span="503-503"];
m39_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity.VolatilityModel == VolatilityModel.Null", span="513-513"];
m39_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="516-516"];
m39_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="int periods = 30", span="515-515"];
m39_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m39_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m39_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1470-1471"];
m39_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var underlying = option.Symbol.Underlying", span="1474-1474"];
m39_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="1478-1478"];
m39_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="option.Underlying = equity", span="1480-1480"];
m39_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(option)", span="1482-1482"];
m39_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="return option;", span="1484-1484"];
m39_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Security equity", span="1475-1475"];
m39_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="!Securities.TryGetValue(underlying, out equity)", span="1476-1476"];
m39_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m39_198 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m39_53 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", span="25-25"];
m39_147 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m39_157 [cluster="Unk.GetParameters", file="QCAlgorithm.cs", label="Entry Unk.GetParameters", span=""];
m39_86 [cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="68-68"];
m39_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m39_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="OnEndOfDay(symbol.ToString())", span="763-763"];
m39_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m39_46 [cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m39_142 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m39_407 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m39_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m39_547 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Resolution resolution", span="1747-1747"];
m39_548 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label=_liveMode, span="1748-1748"];
m39_549 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="resolution = Resolution.Second", span="1750-1750"];
m39_550 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1755-1760"];
m39_551 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1762-1762"];
m39_552 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1764-1764"];
m39_553 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m39_81 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m39_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m39_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="!_locked", span="1232-1232"];
m39_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_liveMode = live", span="1234-1234"];
m39_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Notify = new NotificationManager(live)", span="1235-1235"];
m39_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="TradeBuilder.SetLiveMode(live)", span="1236-1236"];
m39_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label=live, span="1238-1238"];
m39_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_startDate = DateTime.Today", span="1240-1240"];
m39_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_endDate = QuantConnect.Time.EndOfTime", span="1241-1241"];
m39_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m39_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m39_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="_parameters = parameters.ToDictionary()", span="541-541"];
m39_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="ParameterAttribute.ApplyAttributes(parameters, this)", span="544-544"];
m39_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label=Exception, span="546-546"];
m39_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Error(''Error applying parameter values: '' + err.Message)", span="548-548"];
m39_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m39_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m39_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="887-887"];
m39_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m39_294 [cluster="System.TimeSpan.FromTicks(long)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m39_144 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m39_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m39_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="throw new NotImplementedException(''Please override the Initialize() method'');", span="465-465"];
m39_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m39_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m39_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="market == null", span="1721-1721"];
m39_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1723-1723"];
m39_539 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1725-1725"];
m39_541 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1730-1730"];
m39_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1732-1732"];
m39_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1735-1736"];
m39_540 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Symbol symbol", span="1729-1729"];
m39_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1737-1737"];
m39_545 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return (T)security;", span="1738-1738"];
m39_546 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m39_146 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m39_500 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m39_402 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m39_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m39_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="_userSetSecurityInitializer = true", span="571-571"];
m39_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="SecurityInitializer = securityInitializer", span="572-572"];
m39_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m39_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m39_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="!_locked", span="1032-1032"];
m39_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Portfolio.SetCash(startingCash)", span="1034-1034"];
m39_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1038-1038"];
m39_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m39_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m39_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1265-1265"];
m39_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m39_501 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m39_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m39_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m39_43 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m39_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m39_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="!_checkedForOnDataSlice", span="619-619"];
m39_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice(slice)", span="643-643"];
m39_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_checkedForOnDataSlice = true", span="621-621"];
m39_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice != null", span="641-641"];
m39_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="623-627"];
m39_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="method == null", span="629-629"];
m39_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var call = Expression.Call(self, method, parameter)", span="636-636"];
m39_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="return;", span="631-631"];
m39_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var self = Expression.Constant(this)", span="634-634"];
m39_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="635-635"];
m39_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="637-637"];
m39_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice = lambda.Compile()", span="638-638"];
m39_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m39_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1378-1380"];
m39_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m39_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="market == null", span="1361-1361"];
m39_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var alias = ''?'' + underlying", span="1370-1370"];
m39_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1373-1373"];
m39_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1376-1376"];
m39_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1377-1377"];
m39_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1388-1388"];
m39_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1363-1363"];
m39_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Symbol canonicalSymbol", span="1369-1369"];
m39_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1365-1365"];
m39_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1371-1371"];
m39_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1386-1386"];
m39_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1390-1390"];
m39_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSecurity.IsTradable = false", span="1381-1381"];
m39_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Securities.Add(canonicalSecurity)", span="1382-1382"];
m39_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1389-1389"];
m39_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return canonicalSecurity;", span="1393-1393"];
m39_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Universe universe", span="1385-1385"];
m39_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m39_405 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m39_480 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m39_244 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m39_560 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m39_561 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="exception == null", span="1786-1786"];
m39_563 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="RunTimeError = exception", span="1791-1791"];
m39_562 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1788-1788"];
m39_564 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m39_101 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m39_376 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m39_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m39_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1452-1453"];
m39_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(future)", span="1455-1455"];
m39_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="return future;", span="1457-1457"];
m39_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m39_232 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m39_44 [cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45"];
m39_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1424-1426"];
m39_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m39_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="market == null", span="1407-1407"];
m39_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var alias = ''/'' + symbol", span="1416-1416"];
m39_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1419-1419"];
m39_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1422-1422"];
m39_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1423-1423"];
m39_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1434-1434"];
m39_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1409-1409"];
m39_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Symbol canonicalSymbol", span="1415-1415"];
m39_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1411-1411"];
m39_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1417-1417"];
m39_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1432-1432"];
m39_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1436-1436"];
m39_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSecurity.IsTradable = false", span="1427-1427"];
m39_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Securities.Add(canonicalSecurity)", span="1428-1428"];
m39_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1435-1435"];
m39_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return canonicalSecurity;", span="1439-1439"];
m39_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Universe universe", span="1431-1431"];
m39_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m39_48 [cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="QCAlgorithm.cs", label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61"];
m39_50 [cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33"];
m39_45 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m39_260 [cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30"];
m39_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m39_329 [cluster="System.DateTime.AddTicks(long)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m39_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m39_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="securityType == SecurityType.Option", span="1296-1296"];
m39_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1298-1298"];
m39_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="securityType == SecurityType.Future", span="1301-1301"];
m39_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1303-1303"];
m39_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="market == null", span="1308-1308"];
m39_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1310-1310"];
m39_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1312-1312"];
m39_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1317-1317"];
m39_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1319-1319"];
m39_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1322-1323"];
m39_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Symbol symbolObject", span="1316-1316"];
m39_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1325-1325"];
m39_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return security;", span="1326-1326"];
m39_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label=Exception, span="1328-1328"];
m39_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Error(''Algorithm.AddSecurity(): '' + err)", span="1330-1330"];
m39_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return null;", span="1331-1331"];
m39_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m39_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m39_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m39_36 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m39_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m39_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1599-1599"];
m39_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m39_210 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m39_315 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m39_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m39_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1498-1498"];
m39_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m39_77 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m39_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m39_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label=quit, span="1697-1697"];
m39_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Stopped", span="1699-1699"];
m39_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m39_83 [cluster="Unk.>", file="QCAlgorithm.cs", label="Entry Unk.>", span=""];
m39_33 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m39_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m39_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1512-1512"];
m39_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m39_250 [cluster="string.ToUpper()", file="QCAlgorithm.cs", label="Entry string.ToUpper()", span="0-0"];
m39_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m39_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="590-590"];
m39_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m39_35 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m39_32 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m39_78 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m39_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m39_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="handler == null", span="929-929"];
m39_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="BrokerageMessageHandler = handler", span="934-934"];
m39_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''handler'');", span="931-931"];
m39_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m39_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m39_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label=_liveMode, span="1132-1132"];
m39_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start < (new DateTime(1900, 01, 01))", span="1136-1136"];
m39_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start > _endDate", span="1144-1144"];
m39_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1151-1151"];
m39_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="return;", span="1132-1132"];
m39_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1138-1138"];
m39_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="_endDate != new DateTime()", span="1142-1142"];
m39_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select start date less than end date.'');", span="1146-1146"];
m39_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="!_locked", span="1154-1154"];
m39_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="_startDate = start", span="1159-1159"];
m39_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="!LiveMode", span="1157-1157"];
m39_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1165-1165"];
m39_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1160-1160"];
m39_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m39_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m39_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m39_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="var message = error.Message", span="1673-1673"];
m39_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1674-1674"];
m39_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="_errorMessages.Enqueue(message)", span="1675-1675"];
m39_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="_previousErrorMessage = message", span="1676-1676"];
m39_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="return;", span="1674-1674"];
m39_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m39_122 [cluster="System.Action<T>.Invoke(T)", file="QCAlgorithm.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m39_507 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="QCAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m39_143 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m39_40 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41"];
m39_470 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m39_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m39_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="_locked = true", span="1216-1216"];
m39_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m39_474 [cluster="Unk.Remove", file="QCAlgorithm.cs", label="Entry Unk.Remove", span=""];
m39_568 [file="QCAlgorithm.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m39_569 [file="QCAlgorithm.cs", label="System.Action<QuantConnect.Securities.Security>", span=""];
m39_570 [file="QCAlgorithm.cs", label=string, span=""];
m39_571 [file="QCAlgorithm.cs", label="QuantConnect.Symbol", span=""];
m40_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m40_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.History.cs", label="RequestId = requestId", span="45-45"];
m40_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.History.cs", label="Contract = contract", span="46-46"];
m40_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.History.cs", label="Execution = execution", span="47-47"];
m40_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m40_8 [cluster="Unk.Format", file="QCAlgorithm.History.cs", label="Entry Unk.Format", span=""];
m40_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m40_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="QCAlgorithm.History.cs", label="return string.Format(\r\n                ''RequestId: {0}, Symbol: {1}, OrderId: {2}, Time: {3}, Side: {4}, Shares: {5}, Price: {6}, CumQty: {7}, PermId: {8}'',\r\n                RequestId, Contract.Symbol, Execution.OrderId, Execution.Time, Execution.Side, Execution.Shares, Execution.Price, Execution.CumQty, Execution.PermId);", span="55-57"];
m40_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m40_9 [file="QCAlgorithm.History.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", span=""];
m41_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m41_21 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m41_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m41_61 [cluster="Unk.TryGetValue", file="QCAlgorithm.Plotting.cs", label="Entry Unk.TryGetValue", span=""];
m41_66 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Entry lambda expression", span="124-124"];
m41_63 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Entry lambda expression", span="97-97"];
m41_64 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="x.Symbol", span="97-97"];
m41_65 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Exit lambda expression", span="97-97"];
m41_67 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="x.Symbol", span="124-124"];
m41_68 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Exit lambda expression", span="124-124"];
m41_60 [cluster="Unk.History", file="QCAlgorithm.Plotting.cs", label="Entry Unk.History", span=""];
m41_58 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="187-187"];
m41_81 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="QCAlgorithm.Plotting.cs", label="Symbol = symbol", span="189-189"];
m41_82 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="QCAlgorithm.Plotting.cs", label="RSI = rsi", span="190-190"];
m41_83 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="QCAlgorithm.Plotting.cs", label="State = State.Middle", span="191-191"];
m41_84 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="187-187"];
m41_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="104-104"];
m41_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int)", span="39-39"];
m41_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int)", file="QCAlgorithm.Plotting.cs", label="_period = period", span="43-43"];
m41_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int)", span="39-39"];
m41_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="979-979"];
m41_53 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m41_52 [cluster="System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", span="82-82"];
m41_55 [cluster="System.Collections.Generic.HashSet<T>.Clear()", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0"];
m41_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="53-53"];
m41_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="var insights = new List<Insight>()", span="55-55"];
m41_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="var resolution = algorithm.Securities[symbol].Resolution", span="65-65"];
m41_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label=_symbolDataBySymbol, span="56-56"];
m41_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="insights.Add(new Insight(symbol, InsightType.Price, InsightDirection.Up, insightPeriod))", span="71-71"];
m41_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="insights.Add(new Insight(symbol, InsightType.Price, InsightDirection.Down, insightPeriod))", span="75-75"];
m41_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="return insights;", span="83-83"];
m41_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="var symbol = kvp.Key", span="58-58"];
m41_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="var rsi = kvp.Value.RSI", span="59-59"];
m41_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="var previousState = kvp.Value.State", span="60-60"];
m41_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="var state = GetState(rsi, previousState)", span="61-61"];
m41_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="state != previousState && rsi.IsReady", span="63-63"];
m41_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="kvp.Value.State = state", span="80-80"];
m41_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label=state, span="68-68"];
m41_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="var insightPeriod = resolution.ToTimeSpan().Multiply(_period)", span="66-66"];
m41_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="State.TrippedLow", span="70-70"];
m41_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="State.TrippedHigh", span="74-74"];
m41_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="53-53"];
m41_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m41_24 [cluster="System.TimeSpan.Multiply(double)", file="QCAlgorithm.Plotting.cs", label="Entry System.TimeSpan.Multiply(double)", span="230-230"];
m41_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="92-92"];
m41_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="changes.RemovedSecurities.Count > 0", span="95-95"];
m41_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="var removed = changes.RemovedSecurities.ToHashSet(x => x.Symbol)", span="97-97"];
m41_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="algorithm.SubscriptionManager.Subscriptions", span="98-98"];
m41_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="changes.AddedSecurities.Count > 0", span="109-109"];
m41_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="changes.AddedSecurities", span="112-112"];
m41_38 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="var rsi = algorithm.RSI(added.Symbol, _period, MovingAverageType.Wilders, added.Resolution)", span="116-116"];
m41_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="var history = algorithm.History(newSymbolData.Select(x => x.Symbol), _period)", span="124-124"];
m41_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="removed.Contains(subscription.Symbol)", span="100-100"];
m41_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="_symbolDataBySymbol.Remove(subscription.Symbol)", span="102-102"];
m41_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="subscription.Consolidators.Clear()", span="103-103"];
m41_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="var newSymbolData = new List<SymbolData>()", span="111-111"];
m41_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="newSymbolData.Add(symbolData)", span="119-119"];
m41_37 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="!_symbolDataBySymbol.ContainsKey(added.Symbol)", span="114-114"];
m41_39 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="var symbolData = new SymbolData(added.Symbol, rsi)", span="117-117"];
m41_40 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="_symbolDataBySymbol[added.Symbol] = symbolData", span="118-118"];
m41_43 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label=history, span="125-125"];
m41_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="slice.Keys", span="127-127"];
m41_45 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="var value = slice[symbol]", span="129-129"];
m41_49 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="_symbolDataBySymbol.TryGetValue(symbol, out symbolData)", span="134-134"];
m41_46 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="var list = value as IList", span="130-130"];
m41_47 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="var data = (BaseData) (list != null ? list[list.Count - 1] : value)", span="131-131"];
m41_48 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="SymbolData symbolData", span="133-133"];
m41_50 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="symbolData.RSI.Update(data.EndTime, data.Value)", span="136-136"];
m41_51 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="92-92"];
m41_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="147-147"];
m41_69 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="rsi > 70m", span="149-149"];
m41_71 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="rsi < 30m", span="154-154"];
m41_73 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="previous == State.TrippedLow", span="159-159"];
m41_74 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="rsi > 35m", span="161-161"];
m41_76 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="previous == State.TrippedHigh", span="167-167"];
m41_77 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="rsi < 65m", span="169-169"];
m41_79 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="return previous;", span="175-175"];
m41_70 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", color=red, community=0, file="QCAlgorithm.Plotting.cs", label="4: return State.TrippedHigh;", span="151-151"];
m41_72 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="return State.TrippedLow;", span="156-156"];
m41_75 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="return State.Middle;", span="163-163"];
m41_78 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="return State.Middle;", span="171-171"];
m41_80 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="147-147"];
m41_23 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m41_59 [cluster="Unk.Select", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Select", span=""];
m41_62 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m41_85 [file="QCAlgorithm.Plotting.cs", label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", span=""];
m41_86 [file="QCAlgorithm.Plotting.cs", label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", span=""];
m42_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="418-418"];
m42_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="420-420"];
m42_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="418-418"];
m42_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1366-1366"];
m42_323 [cluster="Unk.Split", file="QCAlgorithm.Python.cs", label="Entry Unk.Split", span=""];
m42_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="426-426"];
m42_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="428-428"];
m42_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, array[0], array[1], array[2], array[3])", span="429-429"];
m42_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="426-426"];
m42_183 [cluster="Unk.PlotIndicator", file="QCAlgorithm.Python.cs", label="Entry Unk.PlotIndicator", span=""];
m42_314 [cluster="object.GetType()", file="QCAlgorithm.Python.cs", label="Entry object.GetType()", span="0-0"];
m42_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m42_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="_converter = new PandasConverter()", span="43-43"];
m42_161 [cluster="Unk.ToArray", file="QCAlgorithm.Python.cs", label="Entry Unk.ToArray", span=""];
m42_120 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m42_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="486-486"];
m42_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="489-489"];
m42_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="490-490"];
m42_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="492-492"];
m42_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="488-488"];
m42_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="491-491"];
m42_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="493-493"];
m42_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="486-486"];
m42_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="286-286"];
m42_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution)", span="288-288"];
m42_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="286-286"];
m42_322 [cluster="Unk.Repr", file="QCAlgorithm.Python.cs", label="Entry Unk.Repr", span=""];
m42_33 [cluster="Unk.AddUniverse", file="QCAlgorithm.Python.cs", label="Entry Unk.AddUniverse", span=""];
m42_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m42_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m42_300 [cluster="Unk.Count", file="QCAlgorithm.Python.cs", label="Entry Unk.Count", span=""];
m42_325 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="QCAlgorithm.Python.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m42_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m42_39 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Python.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m42_286 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m42_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m42_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="536-536"];
m42_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="538-538"];
m42_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, start, end, resolution));", span="541-541"];
m42_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="539-539"];
m42_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="539-539"];
m42_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="536-536"];
m42_324 [cluster="Unk.Replace", file="QCAlgorithm.Python.cs", label="Entry Unk.Replace", span=""];
m42_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1444-1444"];
m42_160 [cluster="Unk.Where", file="QCAlgorithm.Python.cs", label="Entry Unk.Where", span=""];
m42_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="324-324"];
m42_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="326-326"];
m42_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="324-324"];
m42_284 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m42_78 [cluster="Unk.selector", file="QCAlgorithm.Python.cs", label="Entry Unk.selector", span=""];
m42_267 [cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31"];
m42_285 [cluster="string.IsNullOrWhiteSpace(string)", file="QCAlgorithm.Python.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m42_126 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="276-276"];
m42_302 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="652-658"];
m42_308 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="660-660"];
m42_311 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="660-660"];
m42_303 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="2: x == null", span="654-654"];
m42_304 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: return null;", span="654-654"];
m42_305 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="3: var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type))", span="655-655"];
m42_306 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: return (dynamic)x.AsManagedObject(type);", span="656-656"];
m42_307 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="652-658"];
m42_309 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="6: x != null", span="660-660"];
m42_310 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="660-660"];
m42_312 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: GetIndicatorBaseType(x.GetType())", span="660-660"];
m42_313 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="660-660"];
m42_37 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="coarse(c).Select(x => (Symbol)x)", span="108-108"];
m42_50 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="coarse(c).Select(x => (Symbol)x)", span="126-126"];
m42_56 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="fine(f).Select(x => (Symbol)x)", span="126-126"];
m42_66 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="139-139"];
m42_76 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="151-151"];
m42_87 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="166-166"];
m42_124 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))", span="275-276"];
m42_36 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="108-108"];
m42_49 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="126-126"];
m42_55 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="126-126"];
m42_65 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="139-139"];
m42_75 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="151-151"];
m42_86 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="166-166"];
m42_163 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="392-392"];
m42_169 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="406-406"];
m42_175 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="420-420"];
m42_38 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="108-108"];
m42_41 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="108-108"];
m42_51 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="126-126"];
m42_52 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="126-126"];
m42_57 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="126-126"];
m42_58 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="126-126"];
m42_67 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="139-139"];
m42_68 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="139-139"];
m42_77 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="151-151"];
m42_79 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="151-151"];
m42_88 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="166-166"];
m42_89 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="166-166"];
m42_123 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="275-276"];
m42_125 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="275-276"];
m42_127 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="276-276"];
m42_165 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="392-392"];
m42_164 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="392-392"];
m42_171 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="406-406"];
m42_170 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="406-406"];
m42_177 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="420-420"];
m42_176 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="420-420"];
m42_43 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="108-108"];
m42_42 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="108-108"];
m42_54 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="126-126"];
m42_53 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="126-126"];
m42_60 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="126-126"];
m42_59 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(Symbol)x", span="126-126"];
m42_70 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="139-139"];
m42_69 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="139-139"];
m42_81 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="151-151"];
m42_80 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="151-151"];
m42_91 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="166-166"];
m42_90 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="166-166"];
m42_128 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="276-276"];
m42_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="568-568"];
m42_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="570-570"];
m42_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="568-568"];
m42_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="148-148"];
m42_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="150-150"];
m42_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="151-151"];
m42_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="148-148"];
m42_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="206-206"];
m42_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="208-208"];
m42_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="206-206"];
m42_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="376-376"];
m42_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="378-378"];
m42_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="376-376"];
m42_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="350-350"];
m42_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="352-352"];
m42_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="350-350"];
m42_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m42_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m)", span="56-56"];
m42_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m42_22 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m42_32 [cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="74-74"];
m42_327 [cluster="Unk.HasAttr", file="QCAlgorithm.Python.cs", label="Entry Unk.HasAttr", span=""];
m42_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="311-311"];
m42_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="313-313"];
m42_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="311-311"];
m42_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="363-363"];
m42_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="365-365"];
m42_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="363-363"];
m42_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m42_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1265-1265"];
m42_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m42_211 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Python.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m42_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m42_35 [cluster="Unk.AsManagedObject", file="QCAlgorithm.Python.cs", label="Entry Unk.AsManagedObject", span=""];
m42_162 [cluster="Unk.Plot", file="QCAlgorithm.Python.cs", label="Entry Unk.Plot", span=""];
m42_40 [cluster="Unk.Select", file="QCAlgorithm.Python.cs", label="Entry Unk.Select", span=""];
m42_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m42_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="601-601"];
m42_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: Py.GIL()", span="603-603"];
m42_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: !PyList.IsListType(pyObject)", span="606-606"];
m42_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: var tmp = new PyList()", span="608-608"];
m42_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: var symbols = new List<Symbol>()", span="613-613"];
m42_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: tmp.Append(pyObject)", span="609-609"];
m42_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: pyObject = tmp", span="610-610"];
m42_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: pyObject", span="614-614"];
m42_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: symbols.Add(symbol)", span="623-623"];
m42_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: string.IsNullOrWhiteSpace(symbol.Value)", span="618-618"];
m42_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="616-616"];
m42_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="6: return symbols.Count == 0 ? null : symbols;", span="625-625"];
m42_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="601-601"];
m42_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m42_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="85-85"];
m42_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="89-89"];
m42_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="92-93"];
m42_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddToUserDefinedUniverse(security)", span="95-95"];
m42_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="88-88"];
m42_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m42_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="504-504"];
m42_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="507-507"];
m42_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="506-506"];
m42_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, periods, resolution));", span="509-509"];
m42_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="507-507"];
m42_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="504-504"];
m42_121 [cluster="FuncUniverse.cstr", file="QCAlgorithm.Python.cs", label="Entry FuncUniverse.cstr", span=""];
m42_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="103-103"];
m42_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="105-105"];
m42_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x))", span="108-108"];
m42_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse((dynamic)pycoarse.AsManagedObject(type))", span="113-113"];
m42_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var type = (Type)pycoarse.GetPythonType().AsManagedObject(typeof(Type))", span="112-112"];
m42_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="coarse != null", span="106-106"];
m42_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="109-109"];
m42_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="103-103"];
m42_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="634-634"];
m42_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", color=green, community=0, file="QCAlgorithm.Python.cs", label="6: type.BaseType == typeof(object)", span="636-636"];
m42_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", color=green, community=0, file="QCAlgorithm.Python.cs", label="6: return type;", span="638-638"];
m42_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: return GetIndicatorBaseType(type.BaseType);", span="640-640"];
m42_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="634-634"];
m42_301 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Python.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m42_263 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="32-32"];
m42_282 [cluster="PyList.cstr", file="QCAlgorithm.Python.cs", label="Entry PyList.cstr", span=""];
m42_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1338-1338"];
m42_329 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m42_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m42_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219"];
m42_202 [cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35"];
m42_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="136-136"];
m42_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="138-138"];
m42_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, resolution, d => selector(d).Select(x => (string)x))", span="139-139"];
m42_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="136-136"];
m42_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="269-269"];
m42_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<IEnumerable<IBaseData>, object[]>(pySelector)", span="273-273"];
m42_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(market, name, securityType)", span="267-267"];
m42_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="275-276"];
m42_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="265-265"];
m42_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="271-271"];
m42_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="268-268"];
m42_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="270-270"];
m42_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="265-265"];
m42_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="191-191"];
m42_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="193-193"];
m42_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="191-191"];
m42_283 [cluster="Unk.Append", file="QCAlgorithm.Python.cs", label="Entry Unk.Append", span=""];
m42_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="298-298"];
m42_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="300-300"];
m42_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="298-298"];
m42_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m42_281 [cluster="Unk.IsListType", file="QCAlgorithm.Python.cs", label="Entry Unk.IsListType", span=""];
m42_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1380-1380"];
m42_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="676-676"];
m42_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="678-678"];
m42_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="680-680"];
m42_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="683-692"];
m42_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="681-681"];
m42_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="682-682"];
m42_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="676-676"];
m42_221 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m42_19 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m42_21 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m42_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="549-549"];
m42_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: Py.GIL()", span="551-551"];
m42_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="553-553"];
m42_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: pyBenchmark != null", span="554-554"];
m42_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: SetBenchmark(pyBenchmark)", span="556-556"];
m42_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="559-559"];
m42_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: return;", span="557-557"];
m42_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="549-549"];
m42_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m42_250 [cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38"];
m42_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="520-520"];
m42_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="522-522"];
m42_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, span, resolution));", span="525-525"];
m42_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="523-523"];
m42_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="523-523"];
m42_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="520-520"];
m42_20 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m42_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="577-577"];
m42_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="579-579"];
m42_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: securityInitializer1 != null", span="580-580"];
m42_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: SetSecurityInitializer(securityInitializer1)", span="582-582"];
m42_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var securityInitializer2 = PythonUtil.ToAction<Security, bool>(securityInitializer)", span="586-586"];
m42_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: securityInitializer2 != null", span="587-587"];
m42_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: SetSecurityInitializer(securityInitializer2)", span="589-589"];
m42_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="593-593"];
m42_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: return;", span="583-583"];
m42_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: return;", span="590-590"];
m42_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="577-577"];
m42_326 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m42_265 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", span="53-53"];
m42_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="337-337"];
m42_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="339-339"];
m42_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="337-337"];
m42_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="647-647"];
m42_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: Py.GIL()", span="649-649"];
m42_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: var array = new[] { first, second, third, fourth }\r\n                    .Select(x =>\r\n                    {\r\n                        if (x == null) return null;\r\n                        var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type));\r\n                        return (dynamic)x.AsManagedObject(type);\r\n\r\n                    }).ToArray()", span="651-658"];
m42_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var types = array.Where(x => x != null).Select(x => GetIndicatorBaseType(x.GetType())).Distinct()", span="660-660"];
m42_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: return array;", span="667-667"];
m42_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: types.Count() > 1", span="662-662"];
m42_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: throw new Exception(''QCAlgorithm.GetIndicatorArray(). All indicators must be of the same type: data point, bar or tradebar.'');", span="664-664"];
m42_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="647-647"];
m42_18 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m42_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="220-220"];
m42_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="222-222"];
m42_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="220-220"];
m42_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="122-122"];
m42_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="124-124"];
m42_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var fine = PythonUtil.ToFunc<IEnumerable<FineFundamental>, object[]>(pyfine)", span="125-125"];
m42_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x), f => fine(f).Select(x => (Symbol)x))", span="126-126"];
m42_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="122-122"];
m42_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1352-1352"];
m42_321 [cluster="AssemblyName.cstr", file="QCAlgorithm.Python.cs", label="Entry AssemblyName.cstr", span=""];
m42_119 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m42_299 [cluster="Unk.Distinct", file="QCAlgorithm.Python.cs", label="Entry Unk.Distinct", span=""];
m42_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="466-466"];
m42_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="469-469"];
m42_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="470-470"];
m42_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="468-468"];
m42_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="472-472"];
m42_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="471-471"];
m42_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="473-473"];
m42_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="466-466"];
m42_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="404-404"];
m42_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="406-406"];
m42_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="404-404"];
m42_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m42_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="163-163"];
m42_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="165-165"];
m42_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="166-166"];
m42_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="163-163"];
m42_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m42_328 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m42_34 [cluster="Unk.GetPythonType", file="QCAlgorithm.Python.cs", label="Entry Unk.GetPythonType", span=""];
m42_244 [cluster="Unk.GIL", file="QCAlgorithm.Python.cs", label="Entry Unk.GIL", span=""];
m42_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="250-250"];
m42_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="252-252"];
m42_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="250-250"];
m42_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="435-435"];
m42_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="437-437"];
m42_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, array[0], array[1], array[2], array[3])", span="438-438"];
m42_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="435-435"];
m42_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="235-235"];
m42_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="237-237"];
m42_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="235-235"];
m42_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="177-177"];
m42_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="179-179"];
m42_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="177-177"];
m42_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m42_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage)", span="71-71"];
m42_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m42_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="450-450"];
m42_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var resolution = GetSubscription(symbol).Resolution", span="452-452"];
m42_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="453-453"];
m42_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="450-450"];
m42_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="390-390"];
m42_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="392-392"];
m42_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="390-390"];
m42_330 [file="QCAlgorithm.Python.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m42_331 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m42_332 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m42_333 [file="QCAlgorithm.Python.cs", label=fine, span=""];
m42_334 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m42_335 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m42_336 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m42_337 [file="QCAlgorithm.Python.cs", label="QuantConnect.SecurityType", span=""];
m42_338 [file="QCAlgorithm.Python.cs", label=string, span=""];
m42_339 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m43_34 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="84-84"];
m43_35 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Time", span="84-84"];
m43_36 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="84-84"];
m43_17 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", span="60-60"];
m43_18 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Trading.cs", label="!Portfolio.Invested", span="62-62"];
m43_19 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Trading.cs", label="slice.FutureChains", span="64-64"];
m43_20 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Trading.cs", label="chain.Value", span="66-66"];
m43_21 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Trading.cs", label="Log(String.Format(''{0},Bid={1} Ask={2} Last={3} OI={4}'',\r\n                             contract.Symbol.Value,\r\n                             contract.BidPrice,\r\n                             contract.AskPrice,\r\n                             contract.LastPrice,\r\n                             contract.OpenInterest))", span="68-73"];
m43_22 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", span="60-60"];
m43_23 [cluster="string.Format(string, params object[])", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m43_25 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="78-78"];
m43_26 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="changes.AddedSecurities", span="80-80"];
m43_27 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="var history = History(change.Symbol, 10, Resolution.Daily)", span="82-82"];
m43_28 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="history.OrderByDescending(x => x.Time).Take(3)", span="84-84"];
m43_29 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="Log(''History: '' + data.Symbol.Value + '': '' + data.Time + '' > '' + data.Close)", span="86-86"];
m43_30 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="78-78"];
m43_13 [cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.Trading.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m43_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1617-1617"];
m43_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m43_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m43_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="971-971"];
m43_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1339-1339"];
m43_37 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="96-96"];
m43_38 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Trading.cs", label="Log(orderEvent.ToString())", span="98-98"];
m43_39 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="96-96"];
m43_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m43_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m43_40 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153"];
m43_14 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="146-146"];
m43_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m43_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m43_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1399-1399"];
m43_0 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", span="40-40"];
m43_1 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="SetStartDate(2016, 08, 17)", span="42-42"];
m43_2 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="SetEndDate(2016, 08, 20)", span="43-43"];
m43_3 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="SetCash(1000000)", span="44-44"];
m43_4 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label=roots, span="46-46"];
m43_5 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="AddFuture(root, Resolution.Minute).SetFilter(TimeSpan.Zero, TimeSpan.FromDays(182))", span="49-49"];
m43_6 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="var benchmark = AddEquity(''SPY'')", span="52-52"];
m43_7 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="SetBenchmark(benchmark.Symbol)", span="53-53"];
m43_8 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm.Initialize()", span="40-40"];
m43_41 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", span=""];
m44_44 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="703-703"];
m44_45 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703"];
m44_46 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="703-703"];
m44_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m44_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m44_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27"];
m44_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="29-29"];
m44_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.Language)", span="37-37"];
m44_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="32-32"];
m44_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="33-33"];
m44_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="34-34"];
m44_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m44_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m44_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="714-714"];
m44_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="715-715"];
m44_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="716-716"];
m44_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m44_48 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m44_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m44_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m44_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m44_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="RegressionTests.cs", label="3: return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-703"];
m44_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m44_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m44_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m44_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m44_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m44_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m44_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m44_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m44_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m44_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m44_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m44_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m44_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385"];
m44_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m44_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m44_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m44_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m44_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m44_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m44_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546"];
m44_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569"];
m44_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592"];
m44_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.53%''},\r\n                {''Average Loss'', ''-2.00%''},\r\n                {''Compounding Annual Return'', ''65.652%''},\r\n                {''Drawdown'', ''5.000%''},\r\n                {''Expectancy'', ''-0.158''},\r\n                {''Net Profit'', ''0.555%''},\r\n                {''Sharpe Ratio'', ''0.731''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.26''},\r\n                {''Alpha'', ''-1.237''},\r\n                {''Beta'', ''1.189''},\r\n                {''Annual Standard Deviation'', ''0.544''},\r\n                {''Annual Variance'', ''0.296''},\r\n                {''Information Ratio'', ''-8.473''},\r\n                {''Tracking Error'', ''0.115''},\r\n                {''Treynor Ratio'', ''0.335''},\r\n                {''Total Fees'', ''$2023.72''}\r\n            }", span="594-615"];
m44_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m44_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m44_40 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m44_47 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m44_42 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m44_43 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m44_8 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m44_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m44_53 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m45_281 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m45_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="SecurityPortfolioManager.cs", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="559-562"];
m45_121 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = marginCallOrders.Count > 0", span="585-585"];
m45_125 [cluster="Unk.GetMaintenanceMarginRequirement", file="SecurityPortfolioManager.cs", label="Entry Unk.GetMaintenanceMarginRequirement", span=""];
m45_126 [cluster="Unk.GenerateMarginCallOrder", file="SecurityPortfolioManager.cs", label="Entry Unk.GenerateMarginCallOrder", span=""];
m45_127 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m45_129 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Holdings.Quantity != 0 && x.Price != 0", span="576-576"];
m45_130 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="576-576"];
m45_128 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="576-576"];
m45_131 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595"];
m45_73 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="372-372"];
m45_202 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="string newRootSymbol = null", span="730-730"];
m45_163 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Open *= split.SplitFactor", span="669-669"];
m45_164 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.High *= split.SplitFactor", span="670-670"];
m45_165 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Low *= split.SplitFactor", span="671-671"];
m45_17 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding)", span="91-91"];
m45_18 [cluster="System.NotImplementedException.NotImplementedException(string)", file="SecurityPortfolioManager.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m45_19 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="99-99"];
m45_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.ZeroQuantity(request);", span="653-653"];
m45_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m45_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="SecurityPortfolioManager.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="850-850"];
m45_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m45_12 [cluster="System.Math.Abs(decimal)", file="SecurityPortfolioManager.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m45_0 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m45_1 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="Securities = securityManager", span="67-67"];
m45_2 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="Transactions = transactions", span="68-68"];
m45_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="SecurityPortfolioManager.cs", label="underlyingLeg.OrderType", span="600-600"];
m45_168 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.AskPrice *= split.SplitFactor", span="678-678"];
m45_180 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="mode != DataNormalizationMode.Raw", span="702-702"];
m45_183 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="newSymbol != null", span="710-710"];
m45_188 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionHoldings = (Option.OptionHolding)security.Holdings", span="719-719"];
m45_193 [cluster="Unk.Remove", file="SecurityPortfolioManager.cs", label="Entry Unk.Remove", span=""];
m45_196 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="692-692"];
m45_172 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m45_174 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m45_177 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var symbol = securityKV.Key", span="697-697"];
m45_170 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.SetMarketPrice(next)", span="682-682"];
m45_179 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="701-701"];
m45_181 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var splitFactor = split.SplitFactor", span="707-707"];
m45_182 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var newSymbol = GetSplitAdjustedSymbol(symbol, splitFactor)", span="708-708"];
m45_184 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Securities.Remove(symbol)", span="712-712"];
m45_187 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Securities[newSymbol].Holdings = optionHoldings", span="715-715"];
m45_189 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="optionHoldings.SplitUnderlying(splitFactor)", span="720-720"];
m45_192 [cluster="Unk.GetSplitAdjustedSymbol", file="SecurityPortfolioManager.cs", label="Entry Unk.GetSplitAdjustedSymbol", span=""];
m45_194 [cluster="QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Option.OptionHolding)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Option.OptionHolding)", span="39-39"];
m45_195 [cluster="QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(decimal)", span="48-48"];
m45_197 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Value.Type == SecurityType.Option && split.Symbol == x.Key.Underlying && x.Value.Holdings.Invested", span="692-692"];
m45_199 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", span="725-725"];
m45_169 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.BidPrice *= split.SplitFactor", span="679-679"];
m45_171 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", span="625-625"];
m45_175 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionSecurities = Securities\r\n                                   .Where(x => x.Value.Type == SecurityType.Option && split.Symbol == x.Key.Underlying && x.Value.Holdings.Invested)\r\n                                   .ToList()", span="691-693"];
m45_186 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="optionHoldings.SplitUnderlying(splitFactor)", span="714-714"];
m45_178 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var security = securityKV.Value", span="698-698"];
m45_185 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionHoldings = new Option.OptionHolding(Securities[newSymbol], (Option.OptionHolding)security.Holdings)", span="713-713"];
m45_198 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="692-692"];
m45_190 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", span="688-688"];
m45_176 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label=optionSecurities, span="695-695"];
m45_200 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var inverseFactor = 1.0m / splitFactor", span="727-727"];
m45_122 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return marginCallOrders;", span="588-588"];
m45_123 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
m45_124 [cluster="Unk.Where", file="SecurityPortfolioManager.cs", label="Entry Unk.Where", span=""];
m45_204 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="splitFactor > 1.0m", span="747-747"];
m45_3 [cluster="System.Math.Abs(int)", color=red, community=0, file="SecurityPortfolioManager.cs", label="3: Entry System.Math.Abs(int)", span="0-0"];
m45_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m45_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m45_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="SecurityPortfolioManager.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="53-53"];
m45_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m45_8 [cluster="System.Math.Abs(double)", file="SecurityPortfolioManager.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m45_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m45_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
m45_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SecurityPortfolioManager.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="323-323"];
m45_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="697-697"];
m45_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m45_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var security = Securities[symbol]", span="930-930"];
m45_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var targetPortfolioValue = target * Portfolio.TotalPortfolioValue", span="940-940"];
m45_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="948-948"];
m45_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="952-952"];
m45_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="984-984"];
m45_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var price = security.Price", span="931-931"];
m45_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return -security.Holdings.Quantity;", span="937-937"];
m45_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="941-941"];
m45_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderQuantity % security.SymbolProperties.LotSize != 0", span="964-964"];
m45_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderQuantity = orderQuantity - (orderQuantity % security.SymbolProperties.LotSize)", span="966-966"];
m45_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderValue = order.GetValue(security)", span="985-985"];
m45_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="986-986"];
m45_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="990-990"];
m45_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderQuantity % security.SymbolProperties.LotSize != 0", span="997-997"];
m45_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderQuantity = orderQuantity - (orderQuantity % security.SymbolProperties.LotSize)", span="999-999"];
m45_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="target == 0", span="937-937"];
m45_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="944-944"];
m45_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="945-945"];
m45_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="unitPrice == 0", span="949-949"];
m45_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="decimal orderQuantity = targetOrderValue / unitPrice", span="962-962"];
m45_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="feeToPriceRatio = (int)(orderFees / unitPrice)", span="987-987"];
m45_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="marginRemaining <= 0", span="953-953"];
m45_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderQuantity > 0 && (marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue)", span="994-994"];
m45_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderQuantity -= feeToPriceRatio", span="978-978"];
m45_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="orderQuantity--", span="980-980"];
m45_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="iterations > 0", span="974-974"];
m45_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="price == 0", span="934-934"];
m45_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var iterations = 0", span="969-969"];
m45_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="1003-1003"];
m45_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="iterations++", span="992-992"];
m45_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return 0;", span="949-949"];
m45_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var feeToPriceRatio = 0", span="959-959"];
m45_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return 0;", span="953-953"];
m45_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="decimal marginRequired", span="956-956"];
m45_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="feeToPriceRatio > 0", span="977-977"];
m45_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return 0;", span="934-934"];
m45_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="decimal orderFees", span="958-958"];
m45_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="decimal orderValue", span="957-957"];
m45_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m45_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="!security.IsTradable", span="656-656"];
m45_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="658-658"];
m45_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="var price = security.Price", span="661-661"];
m45_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="664-664"];
m45_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="666-666"];
m45_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="670-670"];
m45_216 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="var rootSymbol = newRootSymbol ?? symbol.Underlying.Value", span="734-734"];
m45_66 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)", span="246-246"];
m45_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m45_209 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newRootSymbol = symbol.Underlying.Value + ''1''", span="763-763"];
m45_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m45_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="SecurityPortfolioManager.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="250-250"];
m45_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m45_213 [cluster="System.Math.Round(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m45_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m45_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="SecurityPortfolioManager.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="837-837"];
m45_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m45_277 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m45_90 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="var security = Securities[symbol]", span="505-505"];
m45_91 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="return security.MarginModel.GetMarginRemaining(this, security, direction);", span="506-506"];
m45_92 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m45_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m45_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="863-863"];
m45_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m45_94 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="516-516"];
m45_95 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="return GetMarginRemaining(symbol, direction);", span="518-518"];
m45_96 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="516-516"];
m45_203 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", color=red, community=0, file="SecurityPortfolioManager.cs", label="8: Func<Symbol, bool> symbolIsFound = x => \r\n            {\r\n                var rootSymbol = newRootSymbol ?? symbol.Underlying.Value;\r\n                var strike = newStrike != 0.0m ? newStrike : symbol.ID.StrikePrice;\r\n\r\n                return x.HasUnderlying == true &&\r\n                        x.Underlying.Value == rootSymbol &&\r\n                        x.ID.Date == symbol.ID.Date &&\r\n                        x.ID.OptionRight == symbol.ID.OptionRight &&\r\n                        x.ID.Market == symbol.ID.Market &&\r\n                        x.ID.OptionStyle == symbol.ID.OptionStyle &&\r\n                        x.ID.StrikePrice == strike;\r\n            }", span="732-744"];
m45_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m45_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m45_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="SecurityPortfolioManager.cs", label="return Order(symbol, (decimal)quantity);", span="129-129"];
m45_304 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m45_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="235-235"];
m45_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="return ticket;", span="238-238"];
m45_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m45_201 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="decimal newStrike = 0.0m", span="729-729"];
m45_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m45_205 [cluster="QuantConnect.Symbol.ToString()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m45_207 [cluster="decimal.ToString()", file="SecurityPortfolioManager.cs", label="Entry decimal.ToString()", span="0-0"];
m45_208 [cluster="System.DateTime.ToString()", file="SecurityPortfolioManager.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m45_206 [cluster="System.Enum.ToString()", file="SecurityPortfolioManager.cs", label="Entry System.Enum.ToString()", span="0-0"];
m45_210 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SecurityPortfolioManager.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m45_211 [cluster="Unk.First", file="SecurityPortfolioManager.cs", label="Entry Unk.First", span=""];
m45_162 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar != null", span="667-667"];
m45_166 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tick = next as Tick", span="675-675"];
m45_167 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick != null", span="676-676"];
m45_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m45_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m45_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="434-434"];
m45_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m45_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m45_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="448-448"];
m45_65 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="246-246"];
m45_83 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.SetAmount(cash)", span="488-488"];
m45_84 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.ConversionRate = conversionRate", span="489-489"];
m45_85 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.Add(symbol, cash, conversionRate)", span="493-493"];
m45_87 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m45_88 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m45_86 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m45_89 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m45_74 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="373-373"];
m45_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="226-226"];
m45_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var ticket = Transactions.AddOrder(request)", span="230-230"];
m45_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="!asynchronous", span="233-233"];
m45_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m45_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", span="1062-1062"];
m45_69 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="414-414"];
m45_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m45_71 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="405-405"];
m45_72 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m45_75 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Resolution != Resolution.Daily", span="206-206"];
m45_76 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="206-206"];
m45_217 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="559-562"];
m45_218 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="559-562"];
m45_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="var response = PreOrderChecksImpl(request)", span="627-627"];
m45_215 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m45_219 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="559-562"];
m45_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="response.IsError", span="628-628"];
m45_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="Error(response.ErrorMessage)", span="630-630"];
m45_307 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="765-765"];
m45_309 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="765-765"];
m45_308 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Value", span="765-765"];
m45_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m45_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="!Securities.TryGetValue(symbol, out security)", span="880-880"];
m45_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="882-882"];
m45_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label=Portfolio, span="889-889"];
m45_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="896-896"];
m45_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="902-902"];
m45_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="MarketOrder(symbol, quantity, false, tag)", span="905-905"];
m45_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Security security", span="879-879"];
m45_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label=liquidateExistingHoldings, span="887-887"];
m45_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="return;", span="883-883"];
m45_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="893-893"];
m45_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var holdingSymbol = kvp.Key", span="891-891"];
m45_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var holdings = kvp.Value", span="892-892"];
m45_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Math.Abs(quantity) > 0", span="903-903"];
m45_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m45_385 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m45_108 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="averageHoldingsLeverage <= 1.0m", span="555-555"];
m45_109 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return new List<SubmitOrderRequest>();", span="557-557"];
m45_110 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginRemaining = MarginRemaining", span="560-560"];
m45_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1041-1041"];
m45_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="SecurityPortfolioManager.cs", label="return Order(symbol, (decimal)quantity);", span="1043-1043"];
m45_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1041-1041"];
m45_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", span="175-175"];
m45_39 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="array = new KeyValuePair<Symbol, SecurityHolding>[Securities.Count]", span="177-177"];
m45_40 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="var i = 0", span="178-178"];
m45_107 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var averageHoldingsLeverage = TotalAbsoluteHoldingsCost/totalMarginUsed", span="554-554"];
m45_111 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var totalPortfolioValue = TotalPortfolioValue", span="563-563"];
m45_112 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginRemaining <= totalPortfolioValue*0.05m", span="564-564"];
m45_113 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = true", span="566-566"];
m45_115 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginRemaining <= 0", span="573-573"];
m45_116 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Securities.Values.Where(x => x.Holdings.Quantity != 0 && x.Price != 0)", span="576-576"];
m45_114 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginCallOrders = new List<SubmitOrderRequest>()", span="570-570"];
m45_117 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var maintenanceMarginRequirement = security.MarginModel.GetMaintenanceMarginRequirement(security)", span="578-578"];
m45_279 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m45_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="preOrderCheckResponse.IsError", span="224-224"];
m45_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="672-672"];
m45_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="price == 0", span="675-675"];
m45_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="677-677"];
m45_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="Cash quoteCash", span="681-681"];
m45_225 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.ContainsKey(clone)", span="784-784"];
m45_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", color=green, community=0, file="SecurityPortfolioManager.cs", label="4: QuantConnect.Securities.SecurityPortfolioManager", span=""];
m45_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="QuantConnect.Data.Market.Split", span=""];
m45_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="QuantConnect.Symbol", span=""];
m45_249 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m45_251 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m45_242 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m45_228 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="781-781"];
m45_247 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="UnsettledCashBook[item.Currency].AddAmount(-item.Amount)", span="836-836"];
m45_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label=newRootSymbol, span=""];
m45_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label=newStrike, span=""];
m45_243 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label=_unsettledCashAmountsLocker, span="825-825"];
m45_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="Status = AlgorithmStatus.Stopped", span="716-716"];
m45_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="717-717"];
m45_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="740-740"];
m45_248 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="CashBook[item.Currency].AddAmount(item.Amount)", span="839-839"];
m45_227 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.Add(clone, transactionProfitLoss)", span="788-788"];
m45_229 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m45_230 [cluster="System.DateTime.AddMilliseconds(double)", file="SecurityPortfolioManager.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m45_244 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.ToList()", span="827-827"];
m45_246 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.Remove(item)", span="833-833"];
m45_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="request.OrderType == OrderType.OptionExercise", span="720-720"];
m45_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="723-723"];
m45_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="726-726"];
m45_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="request.Quantity > security.Holdings.Quantity", span="728-728"];
m45_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="729-729"];
m45_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="request.Quantity <= 0.0m", span="731-731"];
m45_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="OrderResponse.ZeroQuantity(request)", span="732-732"];
m45_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="request.OrderType == OrderType.MarketOnClose", span="735-735"];
m45_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="745-745"];
m45_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="return OrderResponse.Success(request);", span="750-750"];
m45_245 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="timeUtc >= item.SettlementTimeUtc", span="830-830"];
m45_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="security.Type != SecurityType.Option", span="722-722"];
m45_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="security.Holdings.IsShort", span="725-725"];
m45_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="737-737"];
m45_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="739-739"];
m45_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m45_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1051-1051"];
m45_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="var time = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="1057-1057"];
m45_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="var exchangeHours = MarketHoursDatabase\r\n                .FromDataFolder()\r\n                .GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType)", span="1053-1055"];
m45_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return exchangeHours.IsOpen(time, false);", span="1059-1059"];
m45_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1051-1051"];
m45_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="467-467"];
m45_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m45_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="494-494"];
m45_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="preOrderCheckResponse.IsError", span="495-495"];
m45_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="var ticket = Transactions.AddOrder(request)", span="501-501"];
m45_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="SecurityPortfolioManager.cs", label="return Order(strategy, Math.Abs(quantity));", span="522-522"];
m45_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m45_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag)", span="485-485"];
m45_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="506-506"];
m45_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="return ticket;", span="509-509"];
m45_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="var option = (Option)Securities[optionSymbol]", span="483-483"];
m45_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label=IsWarmingUp, span="488-488"];
m45_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="490-490"];
m45_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="497-497"];
m45_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="!asynchronous", span="504-504"];
m45_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m45_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m45_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m45_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="var security = Securities[symbol]", span="462-462"];
m45_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice)", span="463-463"];
m45_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="var response = PreOrderChecks(request)", span="464-464"];
m45_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="response.IsError", span="465-465"];
m45_16 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager. To add a new asset add the required data during initialization.'');", span="91-91"];
m45_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m45_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return MarketOrder(symbol, quantity);", span="147-147"];
m45_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m45_31 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m45_32 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return Securities.ContainsKey(symbol);", span="131-131"];
m45_33 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m45_34 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m45_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SecurityPortfolioManager.cs", label="var security = Securities[symbol]", span="318-318"];
m45_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SecurityPortfolioManager.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag)", span="319-319"];
m45_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SecurityPortfolioManager.cs", label="var response = PreOrderChecks(request)", span="320-320"];
m45_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SecurityPortfolioManager.cs", label="response.IsError", span="321-321"];
m45_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1017-1017"];
m45_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="SecurityPortfolioManager.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="1019-1019"];
m45_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1017-1017"];
m45_303 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m45_223 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="781-781"];
m45_224 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="var clone = time", span="783-783"];
m45_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="223-223"];
m45_214 [cluster="Unk.FirstOrDefault", file="SecurityPortfolioManager.cs", label="Entry Unk.FirstOrDefault", span=""];
m45_402 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="SecurityPortfolioManager.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m45_403 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
m45_406 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m45_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var security = Securities[symbol]", span="199-199"];
m45_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="!security.Exchange.ExchangeOpen", span="203-203"];
m45_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="205-205"];
m45_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="206-206"];
m45_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="207-207"];
m45_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="209-209"];
m45_20 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager. To add a new asset add the required data during initialization.'');", span="99-99"];
m45_21 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="99-99"];
m45_22 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Clear()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Clear()", span="106-106"];
m45_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="return Transactions.AddOrder(request);", span="471-471"];
m45_212 [cluster="decimal.RoundToSignificantDigits(int)", file="SecurityPortfolioManager.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m45_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m45_278 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m45_226 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="clone = clone.AddMilliseconds(1)", span="786-786"];
m45_118 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginCallOrder = MarginCallModel.GenerateMarginCallOrder(security, totalPortfolioValue, totalMarginUsed, maintenanceMarginRequirement)", span="579-579"];
m45_119 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginCallOrder != null && marginCallOrder.Quantity != 0", span="580-580"];
m45_120 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginCallOrders.Add(marginCallOrder)", span="582-582"];
m45_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m45_400 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m45_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m45_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityPortfolioManager.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="262-262"];
m45_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m45_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SecurityPortfolioManager.cs", label="return Transactions.AddOrder(request);", span="326-326"];
m45_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m45_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m45_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityPortfolioManager.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="339-339"];
m45_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m45_44 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="i++", span="185-185"];
m45_45 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", span="175-175"];
m45_46 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m45_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1029-1029"];
m45_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="SecurityPortfolioManager.cs", label="return Order(symbol, quantity);", span="1031-1031"];
m45_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1029-1029"];
m45_276 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m45_382 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m45_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag)", span="214-214"];
m45_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label=IsWarmingUp, span="217-217"];
m45_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SecurityPortfolioManager.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="219-219"];
m45_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m45_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag);", span="1064-1064"];
m45_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", span="1062-1062"];
m45_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m45_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="SecurityPortfolioManager.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1m);", span="109-109"];
m45_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m45_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m45_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="SecurityPortfolioManager.cs", label="!_locked", span="822-822"];
m45_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="SecurityPortfolioManager.cs", label="_maxOrders = max", span="824-824"];
m45_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m45_280 [cluster="System.DateTime.AddMinutes(double)", file="SecurityPortfolioManager.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m45_305 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210"];
m45_381 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m45_41 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label=Securities, span="179-179"];
m45_42 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="i >= index", span="181-181"];
m45_43 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="array[i] = new KeyValuePair<Symbol, SecurityHolding>(asset.Key, asset.Value.Holdings)", span="183-183"];
m45_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m45_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="SecurityPortfolioManager.cs", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="917-917"];
m45_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m45_53 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m45_14 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m45_25 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="114-114"];
m45_383 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m45_275 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m45_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m45_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", color=green, community=0, file="SecurityPortfolioManager.cs", label="0: var orders = Transactions.GetOpenOrders(symbol)", span="772-772"];
m45_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="Securities.Keys.OrderBy(x => x.Value)", span="765-765"];
m45_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="symbol != symbolToLiquidate && symbolToLiquidate != QuantConnect.Symbol.Empty", span="768-768"];
m45_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="var quantity = Portfolio[symbol].Quantity", span="775-775"];
m45_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="778-778"];
m45_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label=orders, span="783-783"];
m45_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="788-788"];
m45_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="Transactions.CancelOrder(order.Id, tag)", span="797-797"];
m45_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity)", span="805-805"];
m45_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="symbolToLiquidate = symbolToLiquidate ?? QuantConnect.Symbol.Empty", span="763-763"];
m45_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="orderIdList.Add(ticket.OrderId)", span="808-808"];
m45_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="quantity != 0", span="802-802"];
m45_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="ticket.Status == OrderStatus.Filled", span="806-806"];
m45_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="return orderIdList;", span="813-813"];
m45_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="var marketOrdersQuantity = 0m", span="782-782"];
m45_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="792-792"];
m45_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="ticket != null", span="789-789"];
m45_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="order.Type == OrderType.Market", span="785-785"];
m45_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="var orderIdList = new List<int>()", span="762-762"];
m45_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m45_384 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m45_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m45_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
m45_306 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164"];
m45_407 [file="SecurityPortfolioManager.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m45_408 [file="SecurityPortfolioManager.cs", label="QuantConnect.Securities.Option.OptionStrategy", span=""];
m45_409 [file="SecurityPortfolioManager.cs", label=optionLeg, span=""];
m46_37 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m46_9 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="81-81"];
m46_10 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Quantity < 0", span="84-84"];
m46_11 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return Quantity*Math.Max(LimitPrice, security.Price);", span="86-86"];
m46_13 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return Quantity*Math.Min(LimitPrice, security.Price);", span="92-92"];
m46_12 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Quantity > 0", span="90-90"];
m46_14 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return 0m;", span="95-95"];
m46_15 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="81-81"];
m46_31 [cluster="string.Format(string, object, object, object)", file="StopLimitOrder.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m46_16 [cluster="System.Math.Max(decimal, decimal)", file="StopLimitOrder.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m46_32 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.Clone()", span="131-131"];
m46_33 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="var order = new StopLimitOrder {StopPrice = StopPrice, LimitPrice = LimitPrice}", span="133-133"];
m46_34 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="CopyTo(order)", span="134-134"];
m46_35 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="return order;", span="135-135"];
m46_36 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.Clone()", span="131-131"];
m46_29 [cluster="QuantConnect.Orders.Order.ToString()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="215-215"];
m46_17 [cluster="System.Math.Min(decimal, decimal)", file="StopLimitOrder.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m46_25 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m46_0 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m46_1 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m46_2 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64"];
m46_3 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", color=green, community=0, file="StopLimitOrder.cs", label="1: StopPrice = stopPrice", span="67-67"];
m46_4 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="LimitPrice = limitPrice", span="68-68"];
m46_5 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="tag == ''''", span="70-70"];
m46_6 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'') + '' Limit Price: '' + limitPrice.ToString(''C'')", span="73-73"];
m46_7 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64"];
m46_26 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ToString()", span="122-122"];
m46_27 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="return string.Format(''{0} at stop {1} limit {2}'', base.ToString(), StopPrice.SmartRounding(), LimitPrice.SmartRounding());", span="124-124"];
m46_28 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ToString()", span="122-122"];
m46_18 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="102-102"];
m46_19 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="base.ApplyUpdateOrderRequest(request)", span="104-104"];
m46_20 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="request.StopPrice.HasValue", span="105-105"];
m46_21 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="StopPrice = request.StopPrice.Value", span="107-107"];
m46_22 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="request.LimitPrice.HasValue", span="109-109"];
m46_23 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="LimitPrice = request.LimitPrice.Value", span="111-111"];
m46_24 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="102-102"];
m46_8 [cluster="decimal.ToString(string)", file="StopLimitOrder.cs", label="Entry decimal.ToString(string)", span="0-0"];
m46_30 [cluster="decimal.SmartRounding()", file="StopLimitOrder.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m46_38 [file="StopLimitOrder.cs", label="QuantConnect.Orders.StopLimitOrder", span=""];
m47_13 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="return 0m;", span="83-83"];
m47_14 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="69-69"];
m47_15 [cluster="System.Math.Max(decimal, decimal)", file="StopMarketOrder.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m47_23 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.ToString()", span="106-106"];
m47_24 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="return string.Format(''{0} at stop {1}'', base.ToString(), StopPrice.SmartRounding());", span="108-108"];
m47_25 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ToString()", span="106-106"];
m47_8 [cluster="QuantConnect.Tests.Brokerages.HoldingsProvider.GetHoldings(string)", file="StopMarketOrder.cs", label="Holding holding", span="30-30"];
m47_9 [cluster="QuantConnect.Tests.Brokerages.HoldingsProvider.GetHoldings(string)", file="StopMarketOrder.cs", label="_holdings.TryGetValue(symbol, out holding)", span="31-31"];
m47_10 [cluster="QuantConnect.Tests.Brokerages.HoldingsProvider.GetHoldings(string)", file="StopMarketOrder.cs", label="return holding;", span="32-32"];
m47_11 [cluster="QuantConnect.Tests.Brokerages.HoldingsProvider.GetHoldings(string)", file="StopMarketOrder.cs", label="Exit QuantConnect.Tests.Brokerages.HoldingsProvider.GetHoldings(string)", span="28-28"];
m47_12 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="StopMarketOrder.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m47_29 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.Clone()", span="115-115"];
m47_30 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="var order = new StopMarketOrder {StopPrice = StopPrice}", span="117-117"];
m47_31 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="CopyTo(order)", span="118-118"];
m47_32 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="return order;", span="119-119"];
m47_33 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.Clone()", span="115-115"];
m47_7 [cluster="decimal.ToString(string)", file="StopMarketOrder.cs", label="Entry decimal.ToString(string)", span="0-0"];
m47_3 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", color=green, community=0, file="StopMarketOrder.cs", label="1: StopPrice = stopPrice", span="56-56"];
m47_4 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="tag == ''''", span="58-58"];
m47_5 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'')", span="61-61"];
m47_27 [cluster="decimal.SmartRounding()", file="StopMarketOrder.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m47_26 [cluster="QuantConnect.Orders.Order.ToString()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="223-223"];
m47_16 [cluster="System.Math.Min(decimal, decimal)", file="StopMarketOrder.cs", label="QuantConnect.Tests.Brokerages.HoldingsProvider", span=""];
m47_34 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m47_28 [cluster="string.Format(string, object, object)", file="StopMarketOrder.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m47_22 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="200-200"];
m47_2 [cluster="QuantConnect.Tests.Brokerages.HoldingsProvider.HoldingsProvider(System.Collections.Generic.IDictionary<string, QuantConnect.Holding>)", file="StopMarketOrder.cs", label="Exit QuantConnect.Tests.Brokerages.HoldingsProvider.HoldingsProvider(System.Collections.Generic.IDictionary<string, QuantConnect.Holding>)", span="12-12"];
m47_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StopMarketOrder.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m47_17 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m47_18 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="base.ApplyUpdateOrderRequest(request)", span="92-92"];
m47_20 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="StopPrice = request.StopPrice.Value", span="95-95"];
m47_19 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="request.StopPrice.HasValue", span="93-93"];
m47_21 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m47_0 [cluster="QuantConnect.Tests.Brokerages.HoldingsProvider.HoldingsProvider(System.Collections.Generic.IDictionary<string, QuantConnect.Holding>)", file="StopMarketOrder.cs", label="Entry QuantConnect.Tests.Brokerages.HoldingsProvider.HoldingsProvider(System.Collections.Generic.IDictionary<string, QuantConnect.Holding>)", span="12-12"];
m47_1 [cluster="QuantConnect.Tests.Brokerages.HoldingsProvider.HoldingsProvider(System.Collections.Generic.IDictionary<string, QuantConnect.Holding>)", file="StopMarketOrder.cs", label="_holdings = holdings", span="14-14"];
m47_35 [file="StopMarketOrder.cs", label="QuantConnect.Orders.StopMarketOrder", span=""];
m49_67 [cluster="string.Format(string, object, object, object)", file="SubscriptionManager.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m49_68 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="172-172"];
m49_69 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Symbol == symbol", span="172-172"];
m49_43 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label="selector = data =>\r\n                {\r\n                    var dyn = (DynamicData) (object) data;\r\n                    return (decimal) dyn.GetProperty(field);\r\n                }", span="87-91"];
m49_38 [cluster="lambda expression", color=red, community=0, file="SubscriptionManager.cs", label="8: x[symbol]", span="71-71"];
m49_3 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Subscriptions = new HashSet<SubscriptionDataConfig>()", span="62-62"];
m49_11 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="dataType = typeof(Tick)", span="97-97"];
m49_12 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="var tickType = LeanData.GetCommonTickTypeForCommonDataTypes(dataType, symbol.SecurityType)", span="99-99"];
m49_13 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="return Add(dataType, tickType, symbol, resolution, timeZone, exchangeTimeZone, isCustomData, fillDataForward, extendedMarketHours);", span="100-100"];
m49_63 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="98-98"];
m49_100 [cluster="QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", span="166-166"];
m49_101 [cluster="QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", file="SubscriptionManager.cs", label="return decimals.Select(x => (double) x).ToArray();", span="168-168"];
m49_102 [cluster="QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", span="166-166"];
m49_8 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="35-35"];
m49_10 [cluster="lambda expression", color=green, community=0, file="SubscriptionManager.cs", label="0: Exit lambda expression", span="35-35"];
m49_9 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Bars", span="35-35"];
m49_14 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="45-45"];
m49_77 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", span="134-134"];
m49_90 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", span="148-148"];
m49_15 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Ticks.Count > 0", span="45-45"];
m49_103 [cluster="Unk.ToArray", file="SubscriptionManager.cs", label="Entry Unk.ToArray", span=""];
m49_66 [cluster="Unk.Join", file="SubscriptionManager.cs", label="Entry Unk.Join", span=""];
m49_37 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="71-71"];
m49_87 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="137-137"];
m49_5 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m49_6 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m49_7 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m49_17 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="dataTimeZone == null", span="121-121"];
m49_16 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m49_18 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new ArgumentNullException(''dataTimeZone'', ''DataTimeZone is a required parameter for new subscriptions.  Set to the time zone the raw data is time stamped in.'');", span="123-123"];
m49_19 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="exchangeTimeZone == null", span="125-125"];
m49_25 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Subscriptions.Add(newConfig)", span="140-140"];
m49_29 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="_timeKeeper.AddTimeZone(exchangeTimeZone)", span="156-156"];
m49_24 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="return newConfig;", span="137-137"];
m49_28 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new Exception(\r\n                    string.Format(\r\n                        ''The maximum number of concurrent market data subscriptions was exceeded ({0}). Please reduce the number of symbols requested or increase the limit using Settings.DataSubscriptionLimit.'',\r\n                        _algorithmSettings.DataSubscriptionLimit));", span="149-152"];
m49_26 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="var uniqueCount = Subscriptions\r\n                .Where(x => !x.Symbol.IsCanonical())\r\n                .DistinctBy(x => x.Symbol.Value)\r\n                .Count()", span="143-146"];
m49_30 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="HasCustomData = HasCustomData || isCustomData", span="159-159"];
m49_35 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", color=red, community=0, file="SubscriptionManager.cs", label="3: Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m49_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m49_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m49_39 [cluster="Unk.DistinctBy", file="SubscriptionManager.cs", label="Entry Unk.DistinctBy", span=""];
m49_60 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m49_64 [cluster="Unk.Add", file="SubscriptionManager.cs", label="Entry Unk.Add", span=""];
m49_59 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", color=green, community=0, file="SubscriptionManager.cs", label="3: throw new ArgumentException(string.Format(''Type mismatch found between consolidator and symbol. '' +\r\n                ''Symbol: {0} does not support input type: {1}. Supported types: {2}.'',\r\n                symbol.Value, \r\n                consolidator.InputType.Name,\r\n                string.Join('','', subscriptions.Select(x => x.Type.Name))));", span="190-194"];
m49_58 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="return;", span="186-186"];
m49_61 [cluster="Unk.ToList", file="SubscriptionManager.cs", label="Entry Unk.ToList", span=""];
m49_65 [cluster="Unk.Select", file="SubscriptionManager.cs", label="Entry Unk.Select", span=""];
m49_70 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="172-172"];
m49_74 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", color=green, community=0, file="SubscriptionManager.cs", label="8: return new Dictionary<SecurityType, List<TickType>>()\r\n            {\r\n                {SecurityType.Base, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Forex, new List<TickType>() { TickType.Quote } },\r\n                {SecurityType.Equity, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Option, new List<TickType>() { TickType.Quote, TickType.Trade, TickType.OpenInterest } },\r\n                {SecurityType.Cfd, new List<TickType>() { TickType.Quote } },\r\n                {SecurityType.Future, new List<TickType>() { TickType.Quote, TickType.Trade, TickType.OpenInterest } },\r\n                {SecurityType.Commodity, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Crypto, new List<TickType>() { TickType.Quote, TickType.Trade } },\r\n            };", span="202-212"];
m49_71 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="194-194"];
m49_72 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Type.Name", span="194-194"];
m49_75 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m49_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m49_84 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="return AvailableDataTypes[symbolSecurityType].Select(tickType => new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)).ToList();", span="237-237"];
m49_88 [cluster="lambda expression", file="SubscriptionManager.cs", label="new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)", span="237-237"];
m49_80 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="218-218"];
m49_83 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="return new List<Tuple<Type, TickType>> { new Tuple<Type, TickType>(typeof(ZipEntryName), TickType.Quote) };", span="234-234"];
m49_81 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m49_82 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label=isCanonical, span="232-232"];
m49_85 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m49_89 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="237-237"];
m49_104 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="168-168"];
m49_105 [cluster="lambda expression", file="SubscriptionManager.cs", label="(double) x", span="168-168"];
m49_106 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="168-168"];
m49_73 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.Slice.Get<T>()", span="244-244"];
m49_0 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m49_1 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="_algorithmSettings = algorithmSettings", span="59-59"];
m49_2 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="_timeKeeper = timeKeeper", span="60-60"];
m49_31 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="return newConfig;", span="161-161"];
m49_32 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", color=red, community=0, file="SubscriptionManager.cs", label="8: Exit QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m49_33 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SubscriptionManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m49_21 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SubscriptionManager.cs", label="return slices.TradeBars().Where(x => x.ContainsKey(symbol)).Select(x => x[symbol]);", span="57-57"];
m49_22 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", span="55-55"];
m49_27 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
m49_20 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", span="55-55"];
m49_23 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.TradeBars()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.TradeBars()", span="33-33"];
m49_86 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SubscriptionManager.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m49_98 [cluster="QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", span="292-292"];
m49_41 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label="Func<T, decimal> selector", span="84-84"];
m49_78 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SubscriptionManager.cs", label="return slices.Select(x => x.Get<T>()).Where(x => x.ContainsKey(symbol)).Select(x => x[symbol]);", span="137-137"];
m49_79 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", span="134-134"];
m49_62 [cluster="QuantConnect.Data.DynamicData.GetProperty(string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.DynamicData.GetProperty(string)", span="83-83"];
m49_53 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="subscriptions.Count == 0", span="174-174"];
m49_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m49_51 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m49_45 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label="var dataSelector = (Func<Tick, decimal>) ExpressionBuilder.MakePropertyOrFieldSelector(typeof (Tick), field).Compile()", span="97-97"];
m49_47 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label="selector = (Func<T, decimal>) ExpressionBuilder.MakePropertyOrFieldSelector(typeof (T), field).Compile()", span="102-102"];
m49_48 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label=dataDictionaries, span="105-105"];
m49_50 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label="dataDictionary.TryGetValue(symbol, out item)", span="108-108"];
m49_42 [cluster="string.Format(string, object)", file="SubscriptionManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m49_44 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label="typeof (T) == typeof (List<Tick>)", span="93-93"];
m49_46 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label="selector = ticks => dataSelector(((List<Tick>) (object) ticks).Last())", span="98-98"];
m49_49 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SubscriptionManager.cs", label="T item", span="107-107"];
m49_52 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="var subscriptions = Subscriptions.Where(x => x.Symbol == symbol).ToList()", span="172-172"];
m49_4 [cluster="Unk.Select", file="SubscriptionManager.cs", label="Entry Unk.Select", span=""];
m49_91 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SubscriptionManager.cs", label="QuantConnect.Data.SubscriptionManager", span=""];
m49_95 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SubscriptionManager.cs", label="yield return field(item.Last());", span="155-155"];
m49_96 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SubscriptionManager.cs", label="yield return field(item);", span="156-156"];
m49_93 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SubscriptionManager.cs", label="QuantConnect.Resolution", span=""];
m49_92 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SubscriptionManager.cs", label="dynamic item", span="152-152"];
m49_94 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SubscriptionManager.cs", label="item is List<Tick>", span="155-155"];
m49_97 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", span="148-148"];
m49_55 [cluster="System.Linq.Expressions.LambdaExpression.Compile()", file="SubscriptionManager.cs", label="Entry System.Linq.Expressions.LambdaExpression.Compile()", span="0-0"];
m49_54 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", span="33-33"];
m49_56 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m49_57 [cluster="System.Func<T, TResult>.Invoke(T)", file="SubscriptionManager.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m49_99 [cluster="Unk.Last", file="SubscriptionManager.cs", label="Entry Unk.Last", span=""];
m49_107 [file="SubscriptionManager.cs", label="QuantConnect.Symbol", span=""];
m49_108 [file="SubscriptionManager.cs", label="QuantConnect.Symbol", span=""];
m49_109 [file="SubscriptionManager.cs", label=string, span=""];
m49_110 [file="SubscriptionManager.cs", label=dataSelector, span=""];
m49_111 [file="SubscriptionManager.cs", label="QuantConnect.Symbol", span=""];
m50_66 [cluster="System.Math.Min(int, int)", file="SubscriptionManagerTests.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m50_25 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="80-80"];
m50_27 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="8: Assert.AreEqual(typeof(Tick), types[0].Item1)", span="83-83"];
m50_26 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(3, types.Count)", span="82-82"];
m50_28 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="84-84"];
m50_9 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution, true)", span="52-52"];
m50_12 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="56-56"];
m50_13 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m50_10 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(1, types.Count)", span="54-54"];
m50_11 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="55-55"];
m50_14 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m50_51 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m50_52 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m50_59 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="int quantity = (int) (Math.Round(delta/security.Price, MidpointRounding.AwayFromZero) / MaintenanceMarginRequirement)", span="191-191"];
m50_58 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="decimal delta = totalMargin - netLiquidationValue", span="188-188"];
m50_60 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="quantity = Math.Max(1, Math.Min((int)security.Holdings.AbsoluteQuantity, quantity))", span="194-194"];
m50_53 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="decimal marginBuffer = 0.10m", span="175-175"];
m50_54 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="totalMargin <= netLiquidationValue*(1 + marginBuffer)", span="177-177"];
m50_56 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="!security.Holdings.Invested", span="182-182"];
m50_61 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="security.Holdings.IsLong", span="195-195"];
m50_63 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="return new MarketOrder(security.Symbol, quantity, security.Time, ''Margin Call'', security.Type);", span="201-201"];
m50_55 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="return null;", span="179-179"];
m50_62 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="quantity *= -1", span="198-198"];
m50_57 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="return null;", span="184-184"];
m50_64 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="172-172"];
m50_29 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="85-85"];
m50_68 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="51-51"];
m50_15 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="64-64"];
m50_16 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(3, types.Count)", span="66-66"];
m50_17 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(QuoteBar), types[0].Item1)", span="67-67"];
m50_34 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", span="94-94"];
m50_35 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(SecurityType.Crypto, resolution)", span="96-96"];
m50_37 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="resolution == Resolution.Tick", span="100-100"];
m50_36 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(2, types.Count)", span="98-98"];
m50_38 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[0].Item1)", span="102-102"];
m50_39 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="103-103"];
m50_40 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=red, community=0, file="SubscriptionManagerTests.cs", label="8: Assert.AreEqual(typeof(QuoteBar), types[0].Item1)", span="107-107"];
m50_41 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=red, community=0, file="SubscriptionManagerTests.cs", label="8: Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="108-108"];
m50_42 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=red, community=0, file="SubscriptionManagerTests.cs", label="8: Assert.AreEqual(TickType.Quote, types[0].Item2)", span="111-111"];
m50_43 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=red, community=0, file="SubscriptionManagerTests.cs", label="4: Assert.AreEqual(TickType.Trade, types[1].Item2)", span="112-112"];
m50_44 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", span="94-94"];
m50_8 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m50_24 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84"];
m50_30 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="116-116"];
m50_31 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="SubscriptionManagerTests.cs", label="return security.Holdings.AbsoluteHoldingsCost*MaintenanceMarginRequirement;", span="118-118"];
m50_32 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="116-116"];
m50_33 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m50_7 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m50_50 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m50_0 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m50_5 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m50_6 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="115-115"];
m50_3 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="41-41"];
m50_1 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="38-38"];
m50_4 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="42-42"];
m50_2 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(1, types.Count)", span="40-40"];
m50_49 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m50_45 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="var timeKeeper = new TimeKeeper(DateTime.UtcNow)", span="117-117"];
m50_47 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="return subscriptionManager.LookupSubscriptionConfigDataTypes(securityType, resolution, isCanonical);", span="119-119"];
m50_46 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="var subscriptionManager = new SubscriptionManager(new AlgorithmSettings(), timeKeeper)", span="118-118"];
m50_48 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="115-115"];
m50_18 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="68-68"];
m50_22 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="72-72"];
m50_23 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m50_21 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(OpenInterest), types[2].Item1)", span="71-71"];
m50_19 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="69-69"];
m50_20 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="70-70"];
m50_65 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="SubscriptionManagerTests.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m50_67 [cluster="System.Math.Max(int, int)", file="SubscriptionManagerTests.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m50_69 [file="SubscriptionManagerTests.cs", label="QuantConnect.Securities.SecurityMarginModel", span=""];
m51_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="State.TrippedLow", span="73-73"];
m51_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="insights.Add(new Insight(symbol, InsightType.Price, InsightDirection.Up, insightPeriod))", span="74-74"];
m51_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Symbol.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m51_21 [cluster="System.Collections.Generic.List<T>.List()", file="Symbol.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m51_0 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="Symbol.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="31-31"];
m51_1 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="Symbol.cs", label="Exit QuantConnect.Interfaces.IApi.Initialize()", span="31-31"];
m51_2 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="Symbol.cs", label="Entry QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="36-36"];
m51_3 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="Symbol.cs", label="Exit QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="36-36"];
m51_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="Symbol.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m51_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57"];
m51_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="var insights = new List<Insight>()", span="59-59"];
m51_61 [cluster="Unk.TryGetValue", file="Symbol.cs", label="Entry Unk.TryGetValue", span=""];
m51_63 [cluster="lambda expression", file="Symbol.cs", label="Entry lambda expression", span="100-100"];
m51_66 [cluster="lambda expression", file="Symbol.cs", label="Entry lambda expression", span="127-127"];
m51_68 [cluster="lambda expression", file="Symbol.cs", label="Exit lambda expression", span="127-127"];
m51_67 [cluster="lambda expression", file="Symbol.cs", label="x.Symbol", span="127-127"];
m51_64 [cluster="lambda expression", file="Symbol.cs", label="x.Symbol", span="100-100"];
m51_65 [cluster="lambda expression", file="Symbol.cs", label="Exit lambda expression", span="100-100"];
m51_60 [cluster="Unk.History", file="Symbol.cs", label="Entry Unk.History", span=""];
m51_58 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="190-190"];
m51_81 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="Symbol.cs", label="Symbol = symbol", span="192-192"];
m51_82 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="Symbol.cs", label="RSI = rsi", span="193-193"];
m51_83 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="Symbol.cs", label="State = State.Middle", span="194-194"];
m51_84 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="Symbol.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="190-190"];
m51_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="var insightPeriod = _resolution.ToTimeSpan().Multiply(_period)", span="69-69"];
m51_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label=state, span="71-71"];
m51_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="var state = GetState(rsi, previousState)", span="65-65"];
m51_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="state != previousState && rsi.IsReady", span="67-67"];
m51_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="104-104"];
m51_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="979-979"];
m51_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="var rsi = kvp.Value.RSI", span="63-63"];
m51_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="var previousState = kvp.Value.State", span="64-64"];
m51_53 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="Symbol.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m51_52 [cluster="System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", file="Symbol.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", span="82-82"];
m51_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label=_symbolDataBySymbol, span="60-60"];
m51_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="var symbol = kvp.Key", span="62-62"];
m51_55 [cluster="System.Collections.Generic.HashSet<T>.Clear()", file="Symbol.cs", label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0"];
m51_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="insights.Add(new Insight(symbol, InsightType.Price, InsightDirection.Down, insightPeriod))", span="78-78"];
m51_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="kvp.Value.State = state", span="83-83"];
m51_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="State.TrippedHigh", span="77-77"];
m51_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="return insights;", span="86-86"];
m51_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Symbol.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57"];
m51_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Symbol.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m51_24 [cluster="System.TimeSpan.Multiply(double)", file="Symbol.cs", label="Entry System.TimeSpan.Multiply(double)", span="230-230"];
m51_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="95-95"];
m51_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="Symbol.cs", label="7: newSymbolData.Add(symbolData)", span="122-122"];
m51_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="var newSymbolData = new List<SymbolData>()", span="114-114"];
m51_39 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="var symbolData = new SymbolData(added.Symbol, rsi)", span="120-120"];
m51_40 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="_symbolDataBySymbol[added.Symbol] = symbolData", span="121-121"];
m51_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="changes.AddedSecurities", span="115-115"];
m51_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="changes.AddedSecurities.Count > 0", span="112-112"];
m51_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="var history = algorithm.History(newSymbolData.Select(x => x.Symbol), _period, _resolution)", span="127-127"];
m51_38 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="var rsi = algorithm.RSI(added.Symbol, _period, MovingAverageType.Wilders, _resolution)", span="119-119"];
m51_37 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="!_symbolDataBySymbol.ContainsKey(added.Symbol)", span="117-117"];
m51_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="changes.RemovedSecurities.Count > 0", span="98-98"];
m51_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="algorithm.SubscriptionManager.Subscriptions", span="101-101"];
m51_43 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label=history, span="128-128"];
m51_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="_symbolDataBySymbol.Remove(subscription.Symbol)", span="105-105"];
m51_49 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="_symbolDataBySymbol.TryGetValue(symbol, out symbolData)", span="137-137"];
m51_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="var removed = changes.RemovedSecurities.ToHashSet(x => x.Symbol)", span="100-100"];
m51_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="removed.Contains(subscription.Symbol)", span="103-103"];
m51_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="subscription.Consolidators.Clear()", span="106-106"];
m51_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="slice.Keys", span="130-130"];
m51_45 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="var value = slice[symbol]", span="132-132"];
m51_48 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="SymbolData symbolData", span="136-136"];
m51_50 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="symbolData.RSI.Update(data.EndTime, data.Value)", span="139-139"];
m51_46 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="var list = value as IList", span="133-133"];
m51_47 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="var data = (BaseData) (list != null ? list[list.Count - 1] : value)", span="134-134"];
m51_51 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="95-95"];
m51_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="150-150"];
m51_76 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", color=green, community=0, file="Symbol.cs", label="8: previous == State.TrippedHigh", span="170-170"];
m51_73 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="previous == State.TrippedLow", span="162-162"];
m51_74 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="rsi > 35m", span="164-164"];
m51_77 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="rsi < 65m", span="172-172"];
m51_79 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="return previous;", span="178-178"];
m51_69 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="rsi > 70m", span="152-152"];
m51_71 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="rsi < 30m", span="157-157"];
m51_75 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="return State.Middle;", span="166-166"];
m51_78 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="return State.Middle;", span="174-174"];
m51_70 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="return State.TrippedHigh;", span="154-154"];
m51_72 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="return State.TrippedLow;", span="159-159"];
m51_80 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="Symbol.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="150-150"];
m51_23 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="Symbol.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m51_59 [cluster="Unk.Select", file="Symbol.cs", label="Entry Unk.Select", span=""];
m51_62 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="Symbol.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m51_85 [file="Symbol.cs", label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", span=""];
m51_86 [file="Symbol.cs", label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", span=""];
m52_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44"];
m52_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="49-49"];
m52_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="FileFormat.ZipEntryName", span="46-46"];
m52_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="36-36"];
m52_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="source.Format", span="38-38"];
m52_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new TextSubscriptionDataSourceReader(dataCacheProvider, config, date, isLiveMode);", span="41-41"];
m52_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new CollectionSubscriptionDataSourceReader(dataCacheProvider, config, date, isLiveMode);", span="44-44"];
m52_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new ZipEntryNameSubscriptionDataSourceReader(dataCacheProvider, config, date, isLiveMode);", span="47-47"];
m52_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="throw new NotImplementedException(''SubscriptionFactory.ForSource('' + source + '') has not been implemented yet.'');", span="50-50"];
m52_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="FileFormat.Csv", span="40-40"];
m52_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="FileFormat.Collection", span="43-43"];
m52_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="36-36"];
m52_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="65-65"];
m52_13 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Tick.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m53_4 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(int)", file="Time.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(int)", span="19-19"];
m53_5 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(int)", file="Time.cs", label="return new MarketOrder(Symbol, Math.Abs(quantity), DateTime.Now, type: SecurityType);", span="21-21"];
m53_6 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(int)", file="Time.cs", label="Exit QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(int)", span="19-19"];
m53_9 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(int)", file="Time.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(int)", span="23-23"];
m53_10 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(int)", file="Time.cs", label="return new MarketOrder(Symbol, -Math.Abs(quantity), DateTime.Now, type: SecurityType);", span="25-25"];
m53_11 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(int)", file="Time.cs", label="Exit QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(int)", span="23-23"];
m53_14 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(int)", file="Time.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(int)", span="35-35"];
m53_15 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(int)", file="Time.cs", label="Exit QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(int)", span="35-35"];
m53_0 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.OrderTestParameters(string, QuantConnect.SecurityType)", file="Time.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.OrderTestParameters(string, QuantConnect.SecurityType)", span="13-13"];
m53_1 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.OrderTestParameters(string, QuantConnect.SecurityType)", file="Time.cs", label="Symbol = symbol", span="15-15"];
m53_2 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.OrderTestParameters(string, QuantConnect.SecurityType)", file="Time.cs", label="SecurityType = securityType", span="16-16"];
m53_3 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.OrderTestParameters(string, QuantConnect.SecurityType)", file="Time.cs", label="Exit QuantConnect.Tests.Brokerages.OrderTestParameters.OrderTestParameters(string, QuantConnect.SecurityType)", span="13-13"];
m53_16 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="Time.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", span="39-39"];
m53_17 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="Time.cs", label="Exit QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", span="39-39"];
m53_12 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(int)", file="Time.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(int)", span="31-31"];
m53_13 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(int)", file="Time.cs", label="Exit QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(int)", span="31-31"];
m53_7 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="Time.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="51-51"];
m53_8 [cluster="System.Math.Abs(int)", file="Time.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m53_18 [file="Time.cs", label="QuantConnect.Tests.Brokerages.OrderTestParameters", span=""];
m54_44 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", span="94-94"];
m54_19 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="69-69"];
m54_38 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(Tick), types[0].Item1)", span="102-102"];
m54_39 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="103-103"];
m54_29 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="85-85"];
m54_30 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="86-86"];
m54_31 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(Tick), types[2].Item1)", span="87-87"];
m54_32 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="88-88"];
m54_33 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m54_25 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="WebSocketWrapper.cs", label="8: var types = GetSubscriptionDataTypes(securityType, resolution)", span="80-80"];
m54_26 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="WebSocketWrapper.cs", label="8: Assert.AreEqual(3, types.Count)", span="82-82"];
m54_27 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(Tick), types[0].Item1)", span="83-83"];
m54_18 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="68-68"];
m54_20 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="70-70"];
m54_16 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=1, file="WebSocketWrapper.cs", label="8: Assert.AreEqual(3, types.Count)", span="66-66"];
m54_15 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="WebSocketWrapper.cs", label="8: var types = GetSubscriptionDataTypes(securityType, resolution)", span="64-64"];
m54_17 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(QuoteBar), types[0].Item1)", span="67-67"];
m54_12 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", color=green, community=1, file="WebSocketWrapper.cs", label="8: Assert.AreEqual(expectedTickType, types[0].Item2)", span="56-56"];
m54_11 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="WebSocketWrapper.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="55-55"];
m54_13 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="WebSocketWrapper.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m54_21 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(OpenInterest), types[2].Item1)", span="71-71"];
m54_22 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="72-72"];
m54_49 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="WebSocketWrapper.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m54_51 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="WebSocketWrapper.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m54_24 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m54_42 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="111-111"];
m54_41 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="108-108"];
m54_43 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="112-112"];
m54_34 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Close()", span="71-71"];
m54_35 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="WebSocketWrapper.cs", label="wrapped.Close()", span="73-73"];
m54_37 [cluster="Unk.Close", file="WebSocketWrapper.cs", label="Entry Unk.Close", span=""];
m54_36 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Close()", span="71-71"];
m54_40 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="WebSocketWrapper.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m54_28 [cluster="Unk.Send", file="WebSocketWrapper.cs", label="Entry Unk.Send", span=""];
m54_9 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="WebSocketWrapper.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution, true)", span="52-52"];
m54_52 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m54_7 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="wrapped.OnError += (sender, args) => OnError(new WebSocketError(args.Message, args.Exception))", span="45-45"];
m54_50 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="WebSocketWrapper.cs", label="QuantConnect.Brokerages.WebSocketWrapper", span=""];
m54_6 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", color=green, community=1, file="WebSocketWrapper.cs", label="3: wrapped.OnMessage += (sender, args) => OnMessage(new WebSocketMessage(args.Data))", span="44-44"];
m54_45 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", file="WebSocketWrapper.cs", label="Logging.Log.Trace($''WebSocketWrapper.OnOpen(): Connection opened({IsOpen}: {_url}'')", span="123-123"];
m54_47 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", span="121-121"];
m54_46 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", file="WebSocketWrapper.cs", label="Open?.Invoke(this, EventArgs.Empty)", span="124-124"];
m54_48 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m54_0 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", span="33-33"];
m54_1 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="wrapped != null", span="35-35"];
m54_3 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", color=green, community=0, file="WebSocketWrapper.cs", label="3: _url = url", span="40-40"];
m54_4 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="wrapped = new WebSocket(url)", span="41-41"];
m54_2 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="throw new InvalidOperationException(''WebSocketWrapper has already been initialized for: '' + _url);", span="37-37"];
m54_5 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", color=green, community=1, file="WebSocketWrapper.cs", label="3: wrapped.OnOpen += (sender, args) => OnOpen()", span="43-43"];
m54_8 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m54_10 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", color=red, community=0, file="WebSocketWrapper.cs", label="4: Assert.AreEqual(1, types.Count)", span="54-54"];
m54_14 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m54_23 [cluster="WebSocketError.cstr", file="WebSocketWrapper.cs", label="Entry WebSocketError.cstr", span=""];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=2, style=dotted];
m0_9 -> m0_6  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_3  [color=blue, key=0, style=bold];
m0_11 -> m0_1  [color=darkseagreen4, key=1, label="QuantConnect.Commands.AlgorithmStatusCommand", style=dashed];
m0_11 -> m0_4  [color=darkseagreen4, key=1, label="QuantConnect.Commands.AlgorithmStatusCommand", style=dashed];
m0_11 -> m0_7  [color=darkseagreen4, key=1, label="QuantConnect.Commands.AlgorithmStatusCommand", style=dashed];
m0_11 -> m0_8  [color=darkseagreen4, key=1, label="QuantConnect.Commands.AlgorithmStatusCommand", style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_14  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_18 -> m4_19  [color=red, key=0, style=solid];
m4_18 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m4_18 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m4_19 -> m4_20  [color=red, key=0, style=solid];
m4_19 -> m4_30  [color=red, key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_37  [key=0, style=solid];
m4_22 -> m4_38  [key=2, style=dotted];
m4_22 -> m4_24  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_37  [key=0, style=solid];
m4_33 -> m4_38  [key=2, style=dotted];
m4_33 -> m4_51  [color=darkseagreen4, key=1, label=invert, style=dashed];
m4_33 -> m4_52  [color=darkseagreen4, key=1, label=invert, style=dashed];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_37  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_37  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_17  [color=blue, key=0, style=bold];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_39  [key=2, style=dotted];
m4_23 -> m4_40  [key=2, style=dotted];
m4_23 -> m4_41  [key=2, style=dotted];
m4_23 -> m4_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_23 -> m4_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_23 -> m4_25  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_23 -> m4_26  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_23 -> m4_28  [color=darkseagreen4, key=1, label=contract, style=dashed];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_37  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_42  [key=2, style=dotted];
m4_25 -> m4_22  [color=blue, key=0, style=bold];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolPropertiesDatabase", style=dashed];
m4_26 -> m4_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m4_26 -> m4_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_26 -> m4_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_26 -> m4_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_26 -> m4_107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_26 -> m4_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_26 -> m4_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_26 -> m4_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_26 -> m4_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.MarketHoursDatabase", style=dashed];
m4_26 -> m4_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_26 -> m4_68  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_26 -> m4_31  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security EnsureCurrencyDataFeed", style=bold];
m4_26 -> m4_62  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security EnsureCurrencyDataFeed", style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_37  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_42  [key=2, style=dotted];
m4_27 -> m4_32  [key=0, style=solid];
m4_29 -> m4_37  [key=0, style=solid];
m4_29 -> m4_43  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_44  [key=2, style=dotted];
m4_31 -> m4_72  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_35  [color=darkseagreen4, key=1, label=normal, style=dashed];
m4_32 -> m4_51  [color=darkseagreen4, key=1, label=normal, style=dashed];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_39  [key=2, style=dotted];
m4_34 -> m4_40  [key=2, style=dotted];
m4_34 -> m4_41  [key=2, style=dotted];
m4_34 -> m4_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_36  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_34 -> m4_42  [key=0, style=solid];
m4_34 -> m4_73  [key=2, style=dotted];
m4_34 -> m4_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_38  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=0, style=solid];
m4_35 -> m4_38  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_43  [key=2, style=dotted];
m4_37 -> m4_18  [color=blue, key=0, style=bold];
m4_37 -> m4_72  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m4_9 -> m4_0  [color=blue, key=0, style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_11 -> m4_16  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_16 -> m4_9  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_119 -> m4_120  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_126  [key=2, style=dotted];
m4_122 -> m4_127  [key=2, style=dotted];
m4_122 -> m4_125  [key=2, style=dotted];
m4_122 -> m4_128  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_121  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_121 -> m4_124  [key=2, style=dotted];
m4_121 -> m4_125  [key=2, style=dotted];
m4_123 -> m4_119  [color=blue, key=0, style=bold];
m4_116 -> m4_117  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=0, style=solid];
m4_45 -> m4_76  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_78  [key=2, style=dotted];
m4_48 -> m4_80  [key=2, style=dotted];
m4_48 -> m4_81  [key=2, style=dotted];
m4_48 -> m4_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_48 -> m4_60  [color=darkseagreen4, key=1, label=minimumResolution, style=dashed];
m4_52 -> m4_53  [key=0, style=solid];
m4_55 -> m4_56  [color=green, key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_77  [key=2, style=dotted];
m4_47 -> m4_45  [color=blue, key=0, style=bold];
m4_47 -> m4_50  [color=darkseagreen4, key=1, label=potentials, style=dashed];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_78  [key=2, style=dotted];
m4_47 -> m4_79  [key=2, style=dotted];
m4_47 -> m4_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_51  [key=2, style=dotted];
m4_49 -> m4_60  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m4_50 -> m4_48  [color=blue, key=0, style=bold];
m4_50 -> m4_54  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_71  [key=0, style=solid];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_53  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_57  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_58  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_60  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_50 -> m4_69  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_63  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m4_53 -> m4_65  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m4_54 -> m4_52  [color=blue, key=0, style=bold];
m4_54 -> m4_55  [color=green, key=0, style=solid];
m4_54 -> m4_82  [key=2, style=dotted];
m4_54 -> m4_56  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_54 -> m4_57  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_54 -> m4_64  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_54 -> m4_66  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_54 -> m4_67  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_51  [key=2, style=dotted];
m4_56 -> m4_58  [key=0, style=solid];
m4_56 -> m4_83  [key=2, style=dotted];
m4_56 -> m4_64  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_56 -> m4_66  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_56 -> m4_67  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_57 -> m4_55  [color=blue, key=0, style=bold];
m4_57 -> m4_72  [key=0, style=solid];
m4_57 -> m4_84  [key=2, style=dotted];
m4_57 -> m4_85  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_109  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_109  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_109  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_108 -> m4_106  [color=blue, key=0, style=bold];
m4_112 -> m4_110  [color=blue, key=0, style=bold];
m4_115 -> m4_113  [color=blue, key=0, style=bold];
m4_93 -> m4_94  [key=0, style=solid];
m4_96 -> m4_97  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_102 -> m4_103  [key=0, style=solid];
m4_95 -> m4_93  [color=blue, key=0, style=bold];
m4_94 -> m4_95  [key=0, style=solid];
m4_98 -> m4_96  [color=blue, key=0, style=bold];
m4_97 -> m4_98  [key=0, style=solid];
m4_101 -> m4_99  [color=blue, key=0, style=bold];
m4_100 -> m4_101  [key=0, style=solid];
m4_104 -> m4_102  [color=blue, key=0, style=bold];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_105  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_118 -> m4_116  [color=blue, key=0, style=bold];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_86  [key=2, style=dotted];
m4_58 -> m4_60  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_61  [key=2, style=dotted];
m4_59 -> m4_62  [key=2, style=dotted];
m4_59 -> m4_64  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m4_59 -> m4_66  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m4_59 -> m4_67  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m4_60 -> m4_58  [color=blue, key=0, style=bold];
m4_60 -> m4_64  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_60 -> m4_66  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_60 -> m4_67  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_77  [key=2, style=dotted];
m4_60 -> m4_68  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_43 -> m4_45  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_76  [key=2, style=dotted];
m4_51 -> m4_50  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_16  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_17  [key=2, style=dotted];
m4_41 -> m4_72  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_34  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_77  [key=2, style=dotted];
m4_42 -> m4_47  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_107  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_114  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_74  [key=2, style=dotted];
m4_42 -> m4_75  [key=2, style=dotted];
m4_42 -> m4_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_45  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_42 -> m4_46  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_3 -> m4_4  [color=red, key=0, style=solid];
m4_3 -> m4_12  [key=2, style=dotted];
m4_4 -> m4_5  [color=red, key=0, style=solid];
m4_4 -> m4_13  [color=red, key=2, style=dotted];
m4_4 -> m4_6  [color=red, key=1, label=equity, style=dashed];
m4_4 -> m4_8  [color=red, key=1, label=equity, style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [key=2, style=dotted];
m4_5 -> m4_14  [key=2, style=dotted];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label=option, style=dashed];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_10  [key=2, style=dotted];
m4_2 -> m4_6  [key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_11  [key=2, style=dotted];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_15  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_64 -> m4_68  [key=0, style=solid];
m4_64 -> m4_87  [key=2, style=dotted];
m4_64 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_66 -> m4_68  [key=0, style=solid];
m4_66 -> m4_88  [key=2, style=dotted];
m4_66 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_89  [key=2, style=dotted];
m4_67 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_91  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_7  [key=2, style=dotted];
m4_71 -> m4_92  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_90  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_65  [key=0, style=solid];
m4_63 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_4  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_19  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_63 -> m4_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_67  [key=0, style=solid];
m4_70 -> m4_72  [key=0, style=solid];
m4_72 -> m4_26  [color=blue, key=0, style=bold];
m4_137 -> m4_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_24  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_107  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_114  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_69  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_120  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_137 -> m4_122  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_138 -> m4_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_138 -> m4_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_139 -> m4_107  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_139 -> m4_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_139 -> m4_114  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_3 -> m5_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_6 -> m6_2  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_12  [key=2, style=dotted];
m6_19 -> m6_13  [key=2, style=dotted];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_12  [key=2, style=dotted];
m6_9 -> m6_13  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_14  [key=2, style=dotted];
m6_11 -> m6_7  [color=blue, key=0, style=bold];
m6_21 -> m6_22  [key=0, style=solid];
m6_22 -> m6_21  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_12  [key=2, style=dotted];
m6_16 -> m6_13  [key=2, style=dotted];
m6_17 -> m6_15  [color=blue, key=0, style=bold];
m6_23 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m6_23 -> m6_4  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m6_23 -> m6_5  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m6_23 -> m6_9  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m6_23 -> m6_16  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m6_23 -> m6_19  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m7_22 -> m7_39  [key=2, style=dotted];
m7_22 -> m7_37  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m7_22 -> m7_23  [key=0, style=solid];
m7_41 -> m7_49  [key=0, style=solid];
m7_41 -> m7_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m7_41 -> m7_51  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m7_0 -> m7_6  [color=green, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_6 -> m7_9  [color=green, key=2, style=dotted];
m7_6 -> m7_18  [key=0, style=solid];
m7_2 -> m7_6  [color=green, key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_5 -> m7_8  [key=2, style=dotted];
m7_5 -> m7_7  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m7_3 -> m7_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m7_3 -> m7_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m7_3 -> m7_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m7_3 -> m7_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m7_3 -> m7_13  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m7_3 -> m7_14  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m7_3 -> m7_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m7_3 -> m7_17  [color=red, key=1, label="QuantConnect.Securities.Security", style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_8  [key=2, style=dotted];
m7_7 -> m7_0  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_40  [key=2, style=dotted];
m7_37 -> m7_41  [key=2, style=dotted];
m7_37 -> m7_42  [key=2, style=dotted];
m7_37 -> m7_43  [key=2, style=dotted];
m7_37 -> m7_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_8 -> m7_18  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m7_53 -> m7_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m7_53 -> m7_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_47  [key=2, style=dotted];
m7_45 -> m7_48  [key=2, style=dotted];
m7_46 -> m7_44  [color=blue, key=0, style=bold];
m7_48 -> m7_49  [key=0, style=solid];
m7_49 -> m7_47  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid];
m7_52 -> m7_50  [color=blue, key=0, style=bold];
m7_52 -> m7_41  [color=blue, key=0, style=bold];
m7_54 -> m7_55  [key=0, style=solid];
m7_55 -> m7_53  [color=blue, key=0, style=bold];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=0, style=solid];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_11 -> m7_13  [color=darkseagreen4, key=1, label=deltaInQuoteCurrency, style=dashed];
m7_11 -> m7_39  [color=green, key=2, style=dotted];
m7_11 -> m7_37  [color=green, key=1, label=basicTemplateStatistics, style=dashed];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_39  [key=2, style=dotted];
m7_12 -> m7_37  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m7_13 -> m7_14  [color=green, key=0, style=solid];
m7_13 -> m7_19  [key=2, style=dotted];
m7_13 -> m7_39  [color=green, key=2, style=dotted];
m7_13 -> m7_37  [color=green, key=1, label=limitFillRegressionStatistics, style=dashed];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_20  [key=2, style=dotted];
m7_14 -> m7_21  [key=2, style=dotted];
m7_14 -> m7_14  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m7_14 -> m7_16  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m7_14 -> m7_17  [color=red, key=1, label=quantity, style=dashed];
m7_14 -> m7_39  [key=2, style=dotted];
m7_14 -> m7_37  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [color=red, key=0, style=solid];
m7_15 -> m7_39  [key=2, style=dotted];
m7_15 -> m7_37  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m7_17 -> m7_18  [color=red, key=0, style=solid];
m7_17 -> m7_22  [color=red, key=2, style=dotted];
m7_17 -> m7_23  [color=red, key=2, style=dotted];
m7_17 -> m7_39  [key=2, style=dotted];
m7_17 -> m7_37  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m7_10 -> m7_18  [key=0, style=solid];
m7_10 -> m7_11  [color=green, key=0, style=solid];
m7_16 -> m7_17  [color=red, key=0, style=solid];
m7_16 -> m7_16  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m7_16 -> m7_39  [key=2, style=dotted];
m7_16 -> m7_37  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m7_18 -> m7_3  [color=blue, key=0, style=bold];
m7_18 -> m7_39  [key=2, style=dotted];
m7_18 -> m7_37  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m7_18 -> m7_19  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m7_24 -> m7_39  [key=2, style=dotted];
m7_24 -> m7_37  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_27  [key=0, style=solid];
m7_25 -> m7_39  [key=2, style=dotted];
m7_25 -> m7_37  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_38  [key=2, style=dotted];
m7_28 -> m7_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_28 -> m7_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_28 -> m7_39  [key=2, style=dotted];
m7_28 -> m7_37  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m7_26 -> m7_36  [key=0, style=solid];
m7_26 -> m7_37  [key=2, style=dotted];
m7_26 -> m7_39  [key=2, style=dotted];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_37  [key=2, style=dotted];
m7_27 -> m7_33  [color=darkseagreen4, key=1, label=executedOrders, style=dashed];
m7_27 -> m7_35  [color=darkseagreen4, key=1, label=executedOrders, style=dashed];
m7_27 -> m7_39  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_43  [key=2, style=dotted];
m7_33 -> m7_39  [key=2, style=dotted];
m7_33 -> m7_37  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_39  [key=2, style=dotted];
m7_35 -> m7_37  [color=darkseagreen4, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_39  [key=2, style=dotted];
m7_29 -> m7_40  [key=2, style=dotted];
m7_29 -> m7_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_29 -> m7_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_29 -> m7_37  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_35  [key=0, style=solid];
m7_30 -> m7_32  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_30 -> m7_39  [key=2, style=dotted];
m7_30 -> m7_37  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_41  [key=2, style=dotted];
m7_31 -> m7_33  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m7_31 -> m7_39  [key=2, style=dotted];
m7_31 -> m7_37  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_42  [key=2, style=dotted];
m7_32 -> m7_39  [key=2, style=dotted];
m7_32 -> m7_37  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m7_34 -> m7_30  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_39  [key=2, style=dotted];
m7_34 -> m7_37  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m7_36 -> m7_24  [color=blue, key=0, style=bold];
m7_36 -> m7_39  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_23 -> m7_39  [key=2, style=dotted];
m7_23 -> m7_37  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m7_23 -> m7_24  [key=0, style=solid];
m7_21 -> m7_39  [key=2, style=dotted];
m7_21 -> m7_37  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m7_21 -> m7_22  [key=0, style=solid];
m7_20 -> m7_39  [key=2, style=dotted];
m7_20 -> m7_37  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m7_20 -> m7_21  [key=0, style=solid];
m7_19 -> m7_39  [key=2, style=dotted];
m7_19 -> m7_37  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m7_19 -> m7_20  [key=0, style=solid];
m7_38 -> m7_10  [color=blue, key=0, style=bold];
m7_56 -> m7_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m7_56 -> m7_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m7_56 -> m7_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m7_56 -> m7_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m7_56 -> m7_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m7_56 -> m7_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m7_56 -> m7_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m8_7 -> m8_8  [color=green, key=0, style=solid];
m8_7 -> m8_10  [key=0, style=solid];
m8_18 -> m8_13  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_49  [color=darkseagreen4, key=1, label=emptyStatistics, style=dashed];
m8_13 -> m8_14  [key=0, style=solid];
m8_8 -> m8_9  [color=green, key=0, style=solid];
m8_8 -> m8_11  [color=darkseagreen4, key=1, label="System.IDisposable", style=dashed];
m8_8 -> m8_14  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m8_8 -> m8_13  [color=green, key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=0, style=solid];
m8_9 -> m8_14  [key=2, style=dotted];
m8_9 -> m8_15  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_17  [key=2, style=dotted];
m8_11 -> m8_0  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_18  [key=2, style=dotted];
m8_10 -> m8_16  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_12 -> m8_16  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_8  [color=blue, key=0, style=bold];
m8_17 -> m8_18  [key=0, style=solid];
m8_0 -> m8_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m8_0 -> m8_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m8_3 -> m8_7  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_1  [color=darkorchid, key=3, label="Parameter variable System.Action<System.Exception> errorHandler", style=bold];
m8_3 -> m8_10  [color=darkorchid, key=3, label="method methodReturn bool DisposeSafely", style=bold];
m8_3 -> m8_12  [color=darkorchid, key=3, label="method methodReturn bool DisposeSafely", style=bold];
m8_2 -> m8_7  [color=darkorchid, key=3, label="method methodReturn bool DisposeSafely", style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_12  [key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_12  [key=2, style=dotted];
m8_6 -> m8_4  [color=blue, key=0, style=bold];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_12  [key=2, style=dotted];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_12  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_12  [key=2, style=dotted];
m8_5 -> m8_7  [key=2, style=dotted];
m8_19 -> m8_13  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_49  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m8_20 -> m8_13  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_49  [color=darkseagreen4, key=1, label=basicTemplateFrameworkStatistics, style=dashed];
m8_21 -> m8_13  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_49  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m8_22 -> m8_13  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_49  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m8_23 -> m8_13  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_49  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m8_24 -> m8_13  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_49  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m8_25 -> m8_13  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_49  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m8_26 -> m8_13  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_49  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m8_27 -> m8_13  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_49  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m8_28 -> m8_13  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_49  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m8_29 -> m8_13  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_49  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m8_30 -> m8_13  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_49  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m8_31 -> m8_13  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_49  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m8_32 -> m8_13  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_49  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m8_33 -> m8_13  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_49  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m8_34 -> m8_13  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_49  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m8_35 -> m8_13  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_49  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m8_36 -> m8_13  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_49  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m8_37 -> m8_13  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_49  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m8_38 -> m8_13  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_49  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m8_39 -> m8_13  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_49  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m8_40 -> m8_13  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_49  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m8_41 -> m8_13  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_49  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m8_42 -> m8_13  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_49  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m8_43 -> m8_13  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_49  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m8_44 -> m8_13  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_49  [color=darkseagreen4, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m8_45 -> m8_13  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_49  [color=darkseagreen4, key=1, label=basicTemplateFuturesAlgorithmDailyStatistics, style=dashed];
m8_46 -> m8_13  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_49  [color=darkseagreen4, key=1, label=basicTemplateCryptoAlgorithmStatistics, style=dashed];
m8_47 -> m8_13  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_49  [color=darkseagreen4, key=1, label=indicatorSuiteAlgorithmStatistics, style=dashed];
m8_48 -> m8_13  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_51  [key=2, style=dotted];
m8_49 -> m8_52  [key=2, style=dotted];
m8_49 -> m8_53  [key=2, style=dotted];
m8_49 -> m8_54  [key=2, style=dotted];
m8_49 -> m8_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_50 -> m8_17  [color=blue, key=0, style=bold];
m8_52 -> m8_60  [key=0, style=solid];
m8_52 -> m8_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m8_52 -> m8_62  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_63 -> m8_52  [color=blue, key=0, style=bold];
m8_55 -> m8_56  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_58  [key=2, style=dotted];
m8_56 -> m8_59  [key=2, style=dotted];
m8_57 -> m8_55  [color=blue, key=0, style=bold];
m8_64 -> m8_60  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m8_64 -> m8_61  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m8_64 -> m8_62  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_12  [key=2, style=dotted];
m9_13 -> m9_40  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.MinimumAccountBalanceBrokerageModel", style=dashed];
m9_40 -> m9_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.MinimumAccountBalanceBrokerageModel", style=dashed];
m9_40 -> m9_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.MinimumAccountBalanceBrokerageModel", style=dashed];
m9_40 -> m9_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.MinimumAccountBalanceBrokerageModel", style=dashed];
m9_40 -> m9_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm.MinimumAccountBalanceBrokerageModel", style=dashed];
m9_41 -> m9_13  [color=blue, key=0, style=bold];
m9_36 -> m9_42  [color=green, key=0, style=solid];
m9_42 -> m9_43  [color=green, key=0, style=solid];
m9_42 -> m9_44  [color=green, key=0, style=solid];
m9_43 -> m9_47  [color=green, key=0, style=solid];
m9_43 -> m9_48  [color=green, key=2, style=dotted];
m9_43 -> m9_49  [color=green, key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_45 -> m9_47  [key=0, style=solid];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_50  [key=2, style=dotted];
m9_47 -> m9_36  [color=blue, key=0, style=bold];
m9_11 -> m9_23  [key=0, style=solid];
m9_11 -> m9_24  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_11 -> m9_14  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_11  [color=blue, key=0, style=bold];
m9_25 -> m9_26  [key=0, style=solid];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_20  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_21  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_19  [key=0, style=solid];
m9_16 -> m9_16  [color=darkorchid, key=3, label="Local variable bool errorHandlerWasInvoked", style=bold];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_22  [key=2, style=dotted];
m9_17 -> m9_13  [key=2, style=dotted];
m9_17 -> m9_21  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_22  [key=2, style=dotted];
m9_19 -> m9_6  [key=2, style=dotted];
m9_18 -> m9_20  [key=0, style=solid];
m9_18 -> m9_23  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_20 -> m9_13  [color=blue, key=0, style=bold];
m9_20 -> m9_14  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_37 -> m9_38  [color=green, key=0, style=solid];
m9_38 -> m9_39  [color=green, key=0, style=solid];
m9_39 -> m9_37  [color=blue, key=0, style=bold];
m9_39 -> m9_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_39 -> m9_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.BrokerageModelAlgorithm", style=dashed];
m9_26 -> m9_24  [color=blue, key=0, style=bold];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_26 -> m9_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_21 -> m9_14  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_6 -> m9_0  [color=blue, key=0, style=bold];
m9_27 -> m9_28  [color=green, key=0, style=solid];
m9_27 -> m9_35  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_28 -> m9_29  [color=green, key=0, style=solid];
m9_28 -> m9_36  [key=2, style=dotted];
m9_28 -> m9_30  [color=darkseagreen4, key=1, label=orderCost, style=dashed];
m9_28 -> m9_16  [color=green, key=3, label="Local variable bool errorHandlerWasInvoked", style=bold];
m9_32 -> m9_33  [color=green, key=0, style=solid];
m9_32 -> m9_37  [key=2, style=dotted];
m9_32 -> m9_38  [key=2, style=dotted];
m9_32 -> m9_35  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_32 -> m9_23  [color=green, key=2, style=dotted];
m9_32 -> m9_34  [color=green, key=1, label=errorHandlerWasInvoked, style=dashed];
m9_29 -> m9_30  [color=green, key=0, style=solid];
m9_29 -> m9_13  [color=green, key=2, style=dotted];
m9_29 -> m9_31  [color=green, key=1, label=disposable, style=dashed];
m9_29 -> m9_32  [color=green, key=1, label=disposable, style=dashed];
m9_30 -> m9_31  [color=green, key=0, style=solid];
m9_30 -> m9_36  [color=green, key=2, style=dotted];
m9_31 -> m9_32  [color=green, key=0, style=solid];
m9_31 -> m9_34  [key=0, style=solid];
m9_31 -> m9_14  [color=green, key=2, style=dotted];
m9_34 -> m9_35  [color=green, key=0, style=solid];
m9_34 -> m9_6  [color=green, key=2, style=dotted];
m9_33 -> m9_35  [key=0, style=solid];
m9_33 -> m9_34  [color=green, key=0, style=solid];
m9_33 -> m9_14  [color=green, key=2, style=dotted];
m9_35 -> m9_26  [color=blue, key=0, style=bold];
m9_35 -> m9_27  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_22 -> m9_15  [color=blue, key=0, style=bold];
m9_8 -> m9_13  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_11  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m9_10 -> m9_14  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_5  [key=2, style=dotted];
m9_12 -> m9_7  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_3 -> m9_6  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_9  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_8  [key=2, style=dotted];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_1  [color=darkorchid, key=3, label="Local variable System.IDisposable disposable", style=bold];
m9_1 -> m9_7  [key=2, style=dotted];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_10  [key=2, style=dotted];
m9_51 -> m9_42  [color=green, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m9_51 -> m9_43  [color=green, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m9_51 -> m9_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m9_51 -> m9_44  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m9_51 -> m9_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label=Execution, style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_5 -> m10_6  [color=green, key=0, style=solid];
m10_6 -> m10_7  [color=green, key=0, style=solid];
m10_6 -> m10_8  [color=green, key=2, style=dotted];
m10_7 -> m10_5  [color=blue, key=0, style=bold];
m10_9 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m10_9 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m10_9 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m10_9 -> m10_6  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [color=blue, key=0, style=bold];
m14_75 -> m14_76  [key=0, style=solid];
m14_125 -> m14_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m14_125 -> m14_126  [key=0, style=solid];
m14_125 -> m14_127  [key=2, style=dotted];
m14_125 -> m14_128  [key=2, style=dotted];
m14_124 -> m14_125  [key=0, style=solid];
m14_126 -> m14_124  [color=blue, key=0, style=bold];
m14_76 -> m14_77  [key=0, style=solid];
m14_77 -> m14_75  [color=blue, key=0, style=bold];
m14_82 -> m14_83  [key=0, style=solid];
m14_104 -> m14_89  [color=green, key=0, style=solid];
m14_104 -> m14_73  [color=green, key=2, style=dotted];
m14_83 -> m14_104  [color=green, key=1, label=list, style=dashed];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_72  [key=2, style=dotted];
m14_83 -> m14_107  [color=darkseagreen4, key=1, label=list, style=dashed];
m14_83 -> m14_112  [color=darkseagreen4, key=1, label=list, style=dashed];
m14_90 -> m14_104  [color=green, key=1, label=order, style=dashed];
m14_90 -> m14_91  [color=green, key=0, style=solid];
m14_90 -> m14_98  [color=green, key=1, label=order, style=dashed];
m14_90 -> m14_99  [color=green, key=1, label=order, style=dashed];
m14_90 -> m14_100  [color=green, key=1, label=order, style=dashed];
m14_90 -> m14_102  [color=green, key=1, label=order, style=dashed];
m14_90 -> m14_103  [color=green, key=1, label=order, style=dashed];
m14_90 -> m14_101  [color=green, key=1, label=order, style=dashed];
m14_92 -> m14_104  [color=green, key=1, label=order, style=dashed];
m14_92 -> m14_98  [color=green, key=0, style=solid];
m14_92 -> m14_114  [color=green, key=2, style=dotted];
m14_92 -> m14_99  [color=green, key=1, label=order, style=dashed];
m14_92 -> m14_100  [color=green, key=1, label=order, style=dashed];
m14_92 -> m14_101  [color=green, key=1, label=order, style=dashed];
m14_92 -> m14_102  [color=green, key=1, label=order, style=dashed];
m14_92 -> m14_103  [color=green, key=1, label=order, style=dashed];
m14_94 -> m14_104  [color=green, key=1, label=order, style=dashed];
m14_94 -> m14_98  [color=green, key=0, style=solid];
m14_94 -> m14_115  [color=green, key=2, style=dotted];
m14_94 -> m14_99  [color=green, key=1, label=order, style=dashed];
m14_94 -> m14_100  [color=green, key=1, label=order, style=dashed];
m14_94 -> m14_101  [color=green, key=1, label=order, style=dashed];
m14_94 -> m14_102  [color=green, key=1, label=order, style=dashed];
m14_94 -> m14_103  [color=green, key=1, label=order, style=dashed];
m14_96 -> m14_104  [color=green, key=1, label=order, style=dashed];
m14_96 -> m14_98  [color=green, key=0, style=solid];
m14_96 -> m14_116  [color=green, key=2, style=dotted];
m14_96 -> m14_99  [color=green, key=1, label=order, style=dashed];
m14_96 -> m14_100  [color=green, key=1, label=order, style=dashed];
m14_96 -> m14_101  [color=green, key=1, label=order, style=dashed];
m14_96 -> m14_102  [color=green, key=1, label=order, style=dashed];
m14_96 -> m14_103  [color=green, key=1, label=order, style=dashed];
m14_103 -> m14_104  [color=green, key=0, style=solid];
m14_89 -> m14_97  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_105  [color=green, key=0, style=solid];
m14_89 -> m14_90  [color=green, key=0, style=solid];
m14_89 -> m14_107  [color=green, key=0, style=solid];
m14_89 -> m14_91  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_92  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_93  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_94  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_95  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_96  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_98  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_99  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_100  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_102  [color=green, key=1, label=item, style=dashed];
m14_89 -> m14_103  [color=green, key=1, label=item, style=dashed];
m14_85 -> m14_86  [color=green, key=0, style=solid];
m14_85 -> m14_45  [color=green, key=2, style=dotted];
m14_84 -> m14_85  [color=green, key=0, style=solid];
m14_84 -> m14_86  [color=green, key=1, label=req, style=dashed];
m14_84 -> m14_37  [key=2, style=dotted];
m14_86 -> m14_87  [color=green, key=0, style=solid];
m14_86 -> m14_46  [color=green, key=2, style=dotted];
m14_86 -> m14_88  [color=green, key=1, label=response, style=dashed];
m14_86 -> m14_97  [color=green, key=1, label=response, style=dashed];
m14_87 -> m14_88  [color=green, key=0, style=solid];
m14_87 -> m14_105  [color=green, key=0, style=solid];
m14_87 -> m14_107  [color=green, key=0, style=solid];
m14_88 -> m14_89  [color=green, key=0, style=solid];
m14_88 -> m14_47  [key=2, style=dotted];
m14_97 -> m14_89  [color=green, key=0, style=solid];
m14_97 -> m14_48  [color=green, key=2, style=dotted];
m14_97 -> m14_49  [color=green, key=2, style=dotted];
m14_105 -> m14_106  [color=green, key=0, style=solid];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_112  [key=0, style=solid];
m14_107 -> m14_109  [color=darkseagreen4, key=1, label=item, style=dashed];
m14_107 -> m14_125  [color=darkseagreen4, key=1, label=item, style=dashed];
m14_107 -> m14_111  [color=darkseagreen4, key=1, label=item, style=dashed];
m14_95 -> m14_97  [color=green, key=0, style=solid];
m14_95 -> m14_96  [color=green, key=0, style=solid];
m14_106 -> m14_113  [key=0, style=solid];
m14_91 -> m14_92  [color=green, key=0, style=solid];
m14_91 -> m14_93  [color=green, key=0, style=solid];
m14_93 -> m14_94  [color=green, key=0, style=solid];
m14_93 -> m14_95  [color=green, key=0, style=solid];
m14_98 -> m14_99  [color=green, key=0, style=solid];
m14_98 -> m14_63  [color=green, key=3, label="Parameter variable QuantConnect.Algorithm.Framework.QCAlgorithmFramework algorithm", style=bold];
m14_99 -> m14_100  [color=green, key=0, style=solid];
m14_99 -> m14_72  [color=green, key=2, style=dotted];
m14_99 -> m14_117  [color=green, key=2, style=dotted];
m14_100 -> m14_101  [color=green, key=0, style=solid];
m14_100 -> m14_118  [color=green, key=2, style=dotted];
m14_102 -> m14_103  [color=green, key=0, style=solid];
m14_102 -> m14_119  [color=green, key=2, style=dotted];
m14_101 -> m14_102  [color=green, key=0, style=solid];
m14_112 -> m14_113  [key=0, style=solid];
m14_109 -> m14_110  [key=0, style=solid];
m14_109 -> m14_121  [key=2, style=dotted];
m14_109 -> m14_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_109 -> m14_111  [color=darkseagreen4, key=1, label=cached, style=dashed];
m14_111 -> m14_107  [key=0, style=solid];
m14_111 -> m14_123  [key=2, style=dotted];
m14_108 -> m14_107  [key=0, style=solid];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_120  [key=2, style=dotted];
m14_110 -> m14_107  [key=0, style=solid];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_122  [key=2, style=dotted];
m14_113 -> m14_82  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_26  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_7  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_8  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_0 -> m14_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_36  [key=2, style=dotted];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_11  [key=0, style=solid];
m14_12 -> m14_45  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_46  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_15  [color=darkseagreen4, key=1, label=response, style=dashed];
m14_13 -> m14_17  [color=darkseagreen4, key=1, label=response, style=dashed];
m14_13 -> m14_31  [color=darkseagreen4, key=1, label=response, style=dashed];
m14_17 -> m14_48  [key=2, style=dotted];
m14_17 -> m14_49  [key=2, style=dotted];
m14_17 -> m14_18  [key=0, style=solid];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_50  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_23  [key=0, style=solid];
m14_21 -> m14_51  [key=2, style=dotted];
m14_22 -> m14_25  [key=0, style=solid];
m14_22 -> m14_52  [key=2, style=dotted];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_53  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_54  [key=2, style=dotted];
m14_25 -> m14_53  [key=2, style=dotted];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_55  [key=2, style=dotted];
m14_26 -> m14_56  [key=2, style=dotted];
m14_27 -> m14_49  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_57  [key=2, style=dotted];
m14_27 -> m14_58  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_50  [key=2, style=dotted];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_55  [key=2, style=dotted];
m14_30 -> m14_56  [key=2, style=dotted];
m14_32 -> m14_49  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_57  [key=2, style=dotted];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_50  [key=2, style=dotted];
m14_2 -> m14_37  [key=2, style=dotted];
m14_2 -> m14_12  [color=darkseagreen4, key=1, label=req, style=dashed];
m14_2 -> m14_13  [color=darkseagreen4, key=1, label=req, style=dashed];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_11  [color=darkseagreen4, key=1, label=req, style=dashed];
m14_15 -> m14_47  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_20  [color=darkseagreen4, key=1, label=raw, style=dashed];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_43  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_44  [key=2, style=dotted];
m14_14 -> m14_30  [key=0, style=solid];
m14_14 -> m14_15  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_20  [key=0, style=solid];
m14_19 -> m14_35  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_22  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m14_20 -> m14_23  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_52  [key=2, style=dotted];
m14_29 -> m14_35  [key=0, style=solid];
m14_34 -> m14_35  [key=0, style=solid];
m14_3 -> m14_8  [color=darkseagreen4, key=1, label=payload, style=dashed];
m14_3 -> m14_10  [color=darkseagreen4, key=1, label=payload, style=dashed];
m14_3 -> m14_11  [color=darkseagreen4, key=1, label=payload, style=dashed];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_38  [key=2, style=dotted];
m14_3 -> m14_5  [color=darkseagreen4, key=1, label=payload, style=dashed];
m14_3 -> m14_6  [color=darkseagreen4, key=1, label=payload, style=dashed];
m14_3 -> m14_7  [color=darkseagreen4, key=1, label=payload, style=dashed];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_39  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_40  [key=2, style=dotted];
m14_5 -> m14_41  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_42  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid];
m14_35 -> m14_0  [color=blue, key=0, style=bold];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_69 -> m14_73  [key=2, style=dotted];
m14_69 -> m14_65  [key=0, style=solid];
m14_67 -> m14_45  [key=2, style=dotted];
m14_67 -> m14_68  [key=0, style=solid];
m14_68 -> m14_46  [key=2, style=dotted];
m14_68 -> m14_69  [key=0, style=solid];
m14_64 -> m14_72  [key=2, style=dotted];
m14_64 -> m14_69  [color=darkseagreen4, key=1, label=success, style=dashed];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_70  [color=darkseagreen4, key=1, label=success, style=dashed];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_70  [key=0, style=solid];
m14_66 -> m14_37  [key=2, style=dotted];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_68  [color=darkseagreen4, key=1, label=req, style=dashed];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_74  [key=2, style=dotted];
m14_70 -> m14_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_71 -> m14_63  [color=blue, key=0, style=bold];
m14_129 -> m14_130  [key=0, style=solid];
m14_130 -> m14_72  [key=2, style=dotted];
m14_130 -> m14_131  [key=0, style=solid];
m14_131 -> m14_129  [color=blue, key=0, style=bold];
m14_78 -> m14_79  [key=0, style=solid];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_81  [key=2, style=dotted];
m14_80 -> m14_78  [color=blue, key=0, style=bold];
m14_162 -> m14_164  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m14_162 -> m14_163  [key=0, style=solid];
m14_164 -> m14_165  [color=green, key=0, style=solid];
m14_164 -> m14_170  [color=green, key=0, style=solid];
m14_163 -> m14_164  [color=green, key=0, style=solid];
m14_163 -> m14_170  [color=green, key=1, label=totalFee, style=dashed];
m14_163 -> m14_169  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m14_169 -> m14_164  [color=green, key=0, style=solid];
m14_169 -> m14_170  [color=green, key=1, label=totalFee, style=dashed];
m14_169 -> m14_169  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m14_165 -> m14_37  [key=2, style=dotted];
m14_165 -> m14_166  [key=0, style=solid];
m14_165 -> m14_167  [color=darkseagreen4, key=1, label=req, style=dashed];
m14_170 -> m14_171  [color=green, key=0, style=solid];
m14_166 -> m14_45  [key=2, style=dotted];
m14_166 -> m14_167  [key=0, style=solid];
m14_167 -> m14_46  [key=2, style=dotted];
m14_167 -> m14_168  [key=0, style=solid];
m14_168 -> m14_47  [key=2, style=dotted];
m14_168 -> m14_169  [key=0, style=solid];
m14_171 -> m14_162  [color=blue, key=0, style=bold];
m14_132 -> m14_133  [color=green, key=0, style=solid];
m14_133 -> m14_134  [color=green, key=0, style=solid];
m14_133 -> m14_72  [color=green, key=2, style=dotted];
m14_133 -> m14_140  [color=green, key=1, label=list, style=dashed];
m14_133 -> m14_143  [color=green, key=1, label=list, style=dashed];
m14_133 -> m14_145  [color=green, key=1, label=list, style=dashed];
m14_133 -> m14_146  [color=green, key=1, label=list, style=dashed];
m14_134 -> m14_135  [color=green, key=0, style=solid];
m14_134 -> m14_37  [color=green, key=2, style=dotted];
m14_134 -> m14_136  [color=green, key=1, label=req, style=dashed];
m14_140 -> m14_137  [color=green, key=0, style=solid];
m14_140 -> m14_73  [key=2, style=dotted];
m14_140 -> m14_148  [key=2, style=dotted];
m14_143 -> m14_137  [color=green, key=0, style=solid];
m14_143 -> m14_148  [color=green, key=2, style=dotted];
m14_143 -> m14_151  [color=green, key=2, style=dotted];
m14_143 -> m14_73  [color=green, key=2, style=dotted];
m14_145 -> m14_137  [color=green, key=0, style=solid];
m14_145 -> m14_73  [key=2, style=dotted];
m14_145 -> m14_148  [key=2, style=dotted];
m14_145 -> m14_151  [key=2, style=dotted];
m14_146 -> m14_147  [key=0, style=solid];
m14_135 -> m14_136  [color=green, key=0, style=solid];
m14_135 -> m14_45  [color=green, key=2, style=dotted];
m14_136 -> m14_137  [color=green, key=0, style=solid];
m14_136 -> m14_46  [color=green, key=2, style=dotted];
m14_137 -> m14_143  [color=green, key=1, label=item, style=dashed];
m14_137 -> m14_138  [color=green, key=0, style=solid];
m14_137 -> m14_146  [color=green, key=0, style=solid];
m14_137 -> m14_47  [color=green, key=2, style=dotted];
m14_137 -> m14_139  [color=green, key=1, label=item, style=dashed];
m14_137 -> m14_140  [color=green, key=1, label=item, style=dashed];
m14_137 -> m14_141  [color=green, key=1, label=item, style=dashed];
m14_137 -> m14_142  [color=green, key=1, label=item, style=dashed];
m14_137 -> m14_144  [color=green, key=1, label=item, style=dashed];
m14_137 -> m14_145  [color=green, key=1, label=item, style=dashed];
m14_142 -> m14_143  [color=green, key=0, style=solid];
m14_142 -> m14_150  [key=2, style=dotted];
m14_138 -> m14_137  [color=green, key=0, style=solid];
m14_138 -> m14_139  [key=0, style=solid];
m14_139 -> m14_140  [key=0, style=solid];
m14_139 -> m14_141  [key=0, style=solid];
m14_141 -> m14_142  [key=0, style=solid];
m14_141 -> m14_144  [key=0, style=solid];
m14_141 -> m14_149  [key=2, style=dotted];
m14_144 -> m14_145  [key=0, style=solid];
m14_144 -> m14_152  [key=2, style=dotted];
m14_144 -> m14_153  [key=2, style=dotted];
m14_147 -> m14_132  [color=blue, key=0, style=bold];
m14_154 -> m14_155  [key=0, style=solid];
m14_155 -> m14_156  [key=0, style=solid];
m14_156 -> m14_157  [key=0, style=solid];
m14_156 -> m14_160  [key=2, style=dotted];
m14_156 -> m14_158  [color=darkseagreen4, key=1, label=copy, style=dashed];
m14_157 -> m14_158  [key=0, style=solid];
m14_157 -> m14_161  [key=2, style=dotted];
m14_158 -> m14_159  [key=0, style=solid];
m14_159 -> m14_154  [color=blue, key=0, style=bold];
m14_172 -> m14_85  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_86  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_97  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_100  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_102  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_135  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_136  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_13  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_18  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_25  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_67  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_68  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_79  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_109  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_111  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_155  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_156  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_166  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_172 -> m14_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m14_173 -> m14_125  [color=darkseagreen4, key=1, label=item, style=dashed];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=2, style=dotted];
m15_28 -> m15_26  [color=blue, key=0, style=bold];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_19  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.BarIndicator indicator", style=bold];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_25  [key=2, style=dotted];
m15_23 -> m15_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_24 -> m15_22  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_10  [key=2, style=dotted];
m15_1 -> m15_3  [color=darkseagreen4, key=1, label=frama, style=dashed];
m15_1 -> m15_4  [color=darkseagreen4, key=1, label=frama, style=dashed];
m15_1 -> m15_5  [color=darkseagreen4, key=1, label=frama, style=dashed];
m15_1 -> m15_6  [color=darkseagreen4, key=1, label=frama, style=dashed];
m15_1 -> m15_7  [color=darkseagreen4, key=1, label=frama, style=dashed];
m15_1 -> m15_8  [color=darkseagreen4, key=1, label=frama, style=dashed];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_4  [key=0, style=solid];
m15_2 -> m15_11  [key=2, style=dotted];
m15_3 -> m15_2  [key=0, style=solid];
m15_3 -> m15_12  [key=2, style=dotted];
m15_3 -> m15_13  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_14  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_15  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_15  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_16  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_17  [key=2, style=dotted];
m15_8 -> m15_8  [color=darkorchid, key=3, label="Field variable string _symbolMatching", style=bold];
m15_9 -> m15_0  [color=blue, key=0, style=bold];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_23  [color=darkorchid, key=3, label="Parameter variable double expected", style=bold];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_32  [key=2, style=dotted];
m15_30 -> m15_14  [key=2, style=dotted];
m15_31 -> m15_29  [color=blue, key=0, style=bold];
m15_18 -> m15_19  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_10  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_22  [key=2, style=dotted];
m15_21 -> m15_18  [color=blue, key=0, style=bold];
m18_294 -> m18_295  [key=0, style=solid];
m18_295 -> m18_296  [key=0, style=solid];
m18_295 -> m18_36  [key=2, style=dotted];
m18_296 -> m18_297  [key=0, style=solid];
m18_296 -> m18_299  [key=0, style=solid];
m18_297 -> m18_298  [key=0, style=solid];
m18_297 -> m18_236  [key=2, style=dotted];
m18_299 -> m18_300  [key=0, style=solid];
m18_299 -> m18_303  [key=2, style=dotted];
m18_298 -> m18_299  [key=0, style=solid];
m18_298 -> m18_302  [key=2, style=dotted];
m18_300 -> m18_301  [key=0, style=solid];
m18_300 -> m18_304  [key=2, style=dotted];
m18_301 -> m18_294  [color=blue, key=0, style=bold];
m18_1253 -> m18_1269  [key=0, style=solid];
m18_1253 -> m18_1273  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1253 -> m18_1274  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_1253 -> m18_1278  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_1253 -> m18_1279  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1253 -> m18_1310  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1253 -> m18_1311  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1253 -> m18_1312  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m18_1253 -> m18_1285  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_1253 -> m18_1270  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.TradeBar> GetHistory", style=bold];
m18_1269 -> m18_1270  [key=0, style=solid];
m18_1269 -> m18_1288  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m18_1269 -> m18_1294  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m18_1269 -> m18_1295  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m18_1269 -> m18_373  [color=darkorchid, key=3, label="Local variable int timeOut", style=bold];
m18_1273 -> m18_1274  [key=0, style=solid];
m18_1273 -> m18_1303  [key=2, style=dotted];
m18_1273 -> m18_1285  [color=darkseagreen4, key=1, label=useRegularTradingHours, style=dashed];
m18_1274 -> m18_1275  [key=0, style=solid];
m18_1274 -> m18_1300  [key=0, style=solid];
m18_1278 -> m18_1279  [key=0, style=solid];
m18_1279 -> m18_1280  [key=0, style=solid];
m18_1279 -> m18_1309  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m18_1279 -> m18_1310  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m18_1279 -> m18_1283  [color=darkseagreen4, key=1, label=clientOnHistoricalData, style=dashed];
m18_1279 -> m18_1290  [color=darkseagreen4, key=1, label=clientOnHistoricalData, style=dashed];
m18_1279 -> m18_953  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.Market.TradeBar bar", style=bold];
m18_1279 -> m18_1279  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs> clientOnHistoricalData", style=bold];
m18_1285 -> m18_1286  [key=0, style=solid];
m18_1285 -> m18_176  [key=2, style=dotted];
m18_1285 -> m18_97  [key=2, style=dotted];
m18_1285 -> m18_504  [key=2, style=dotted];
m18_1270 -> m18_1271  [key=0, style=solid];
m18_1270 -> m18_97  [key=2, style=dotted];
m18_1270 -> m18_1298  [color=darkseagreen4, key=1, label=history, style=dashed];
m18_1270 -> m18_1300  [color=darkseagreen4, key=1, label=history, style=dashed];
m18_1288 -> m18_1287  [key=0, style=solid];
m18_1288 -> m18_1304  [key=2, style=dotted];
m18_1288 -> m18_1292  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m18_1294 -> m18_1274  [key=0, style=solid];
m18_1294 -> m18_235  [key=2, style=dotted];
m18_1295 -> m18_1300  [key=0, style=solid];
m18_1295 -> m18_235  [key=2, style=dotted];
m18_1271 -> m18_1272  [key=0, style=solid];
m18_1271 -> m18_1302  [key=2, style=dotted];
m18_1271 -> m18_1279  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m18_1271 -> m18_1314  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m18_1271 -> m18_1288  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m18_1298 -> m18_1299  [key=0, style=solid];
m18_1298 -> m18_1306  [key=2, style=dotted];
m18_1300 -> m18_1301  [key=0, style=solid];
m18_1272 -> m18_1273  [key=0, style=solid];
m18_1272 -> m18_98  [key=2, style=dotted];
m18_1272 -> m18_1280  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m18_1272 -> m18_1318  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m18_1272 -> m18_1281  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m18_1272 -> m18_1324  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m18_1272 -> m18_1288  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m18_1280 -> m18_1281  [key=0, style=solid];
m18_1280 -> m18_1317  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs", style=dashed];
m18_1280 -> m18_1284  [color=darkseagreen4, key=1, label=clientOnHistoricalDataEnd, style=dashed];
m18_1280 -> m18_1291  [color=darkseagreen4, key=1, label=clientOnHistoricalDataEnd, style=dashed];
m18_1280 -> m18_1280  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd", style=bold];
m18_1281 -> m18_1282  [key=0, style=solid];
m18_1281 -> m18_1321  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m18_1281 -> m18_1323  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m18_1281 -> m18_1289  [color=darkseagreen4, key=1, label=clientOnError, style=dashed];
m18_1281 -> m18_1293  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m18_1281 -> m18_1281  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs> clientOnError", style=bold];
m18_1275 -> m18_1276  [key=0, style=solid];
m18_1275 -> m18_64  [color=darkorchid, key=3, label="Local variable bool pacing", style=bold];
m18_1276 -> m18_1277  [key=0, style=solid];
m18_1276 -> m18_97  [key=2, style=dotted];
m18_1276 -> m18_1279  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m18_1276 -> m18_1313  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m18_1276 -> m18_1296  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m18_1276 -> m18_1297  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m18_1277 -> m18_1278  [key=0, style=solid];
m18_1277 -> m18_500  [key=2, style=dotted];
m18_1277 -> m18_1279  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1277 -> m18_1309  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1277 -> m18_1280  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1277 -> m18_1317  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1277 -> m18_1285  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1296 -> m18_1297  [key=0, style=solid];
m18_1296 -> m18_1300  [key=0, style=solid];
m18_1296 -> m18_334  [key=2, style=dotted];
m18_1297 -> m18_1298  [key=0, style=solid];
m18_1297 -> m18_1305  [key=2, style=dotted];
m18_1297 -> m18_1326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1297 -> m18_1299  [color=darkseagreen4, key=1, label=filteredPiece, style=dashed];
m18_1283 -> m18_1284  [key=0, style=solid];
m18_1290 -> m18_1291  [key=0, style=solid];
m18_1284 -> m18_1285  [key=0, style=solid];
m18_1291 -> m18_1292  [key=0, style=solid];
m18_1282 -> m18_1283  [key=0, style=solid];
m18_1289 -> m18_1290  [key=0, style=solid];
m18_1293 -> m18_1294  [key=0, style=solid];
m18_1293 -> m18_1295  [key=0, style=solid];
m18_1286 -> m18_1287  [key=0, style=solid];
m18_1286 -> m18_1292  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m18_1286 -> m18_370  [color=darkorchid, key=3, label="Local variable int waitResult", style=bold];
m18_1287 -> m18_1288  [key=0, style=solid];
m18_1287 -> m18_1289  [key=0, style=solid];
m18_1292 -> m18_1293  [key=0, style=solid];
m18_1292 -> m18_1296  [key=0, style=solid];
m18_1299 -> m18_1274  [key=0, style=solid];
m18_1299 -> m18_1307  [key=2, style=dotted];
m18_1301 -> m18_1253  [color=blue, key=0, style=bold];
m18_569 -> m18_604  [key=0, style=solid];
m18_604 -> m18_605  [key=0, style=solid];
m18_604 -> m18_606  [key=0, style=solid];
m18_605 -> m18_615  [key=0, style=solid];
m18_606 -> m18_607  [key=0, style=solid];
m18_606 -> m18_616  [key=2, style=dotted];
m18_606 -> m18_614  [color=darkseagreen4, key=1, label=isResetTime, style=dashed];
m18_607 -> m18_608  [key=0, style=solid];
m18_607 -> m18_612  [key=0, style=solid];
m18_614 -> m18_615  [key=0, style=solid];
m18_608 -> m18_609  [key=0, style=solid];
m18_608 -> m18_611  [key=0, style=solid];
m18_612 -> m18_613  [key=0, style=solid];
m18_612 -> m18_36  [key=2, style=dotted];
m18_609 -> m18_610  [key=0, style=solid];
m18_609 -> m18_36  [key=2, style=dotted];
m18_611 -> m18_614  [key=0, style=solid];
m18_611 -> m18_617  [key=2, style=dotted];
m18_611 -> m18_571  [key=2, style=dotted];
m18_610 -> m18_614  [key=0, style=solid];
m18_610 -> m18_35  [key=2, style=dotted];
m18_613 -> m18_614  [key=0, style=solid];
m18_613 -> m18_618  [key=2, style=dotted];
m18_613 -> m18_619  [key=2, style=dotted];
m18_613 -> m18_620  [key=2, style=dotted];
m18_613 -> m18_621  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_615 -> m18_569  [color=blue, key=0, style=bold];
m18_775 -> m18_851  [key=0, style=solid];
m18_775 -> m18_861  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_775 -> m18_864  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_775 -> m18_750  [color=darkorchid, key=3, label="Parameter variable IBApi.Order order", style=bold];
m18_775 -> m18_193  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderType ConvertOrderType", style=bold];
m18_775 -> m18_822  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderType ConvertOrderType", style=bold];
m18_775 -> m18_856  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderType ConvertOrderType", style=bold];
m18_775 -> m18_194  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderType ConvertOrderType", style=bold];
m18_775 -> m18_862  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderType ConvertOrderType", style=bold];
m18_775 -> m18_370  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderType ConvertOrderType", style=bold];
m18_851 -> m18_852  [key=0, style=solid];
m18_851 -> m18_854  [key=0, style=solid];
m18_851 -> m18_856  [key=0, style=solid];
m18_851 -> m18_858  [key=0, style=solid];
m18_851 -> m18_860  [key=0, style=solid];
m18_851 -> m18_864  [key=0, style=solid];
m18_861 -> m18_862  [key=0, style=solid];
m18_861 -> m18_863  [key=0, style=solid];
m18_864 -> m18_865  [key=0, style=solid];
m18_864 -> m18_866  [key=2, style=dotted];
m18_852 -> m18_853  [key=0, style=solid];
m18_854 -> m18_855  [key=0, style=solid];
m18_856 -> m18_857  [key=0, style=solid];
m18_858 -> m18_859  [key=0, style=solid];
m18_860 -> m18_861  [key=0, style=solid];
m18_853 -> m18_865  [key=0, style=solid];
m18_855 -> m18_865  [key=0, style=solid];
m18_857 -> m18_865  [key=0, style=solid];
m18_859 -> m18_865  [key=0, style=solid];
m18_862 -> m18_865  [key=0, style=solid];
m18_863 -> m18_865  [key=0, style=solid];
m18_865 -> m18_775  [color=blue, key=0, style=bold];
m18_331 -> m18_785  [key=0, style=solid];
m18_331 -> m18_786  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_787  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_331 -> m18_788  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_792  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_794  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_795  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_796  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_797  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_801  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_803  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_804  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_807  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_331 -> m18_446  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_331 -> m18_1038  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_331 -> m18_61  [color=darkorchid, key=3, label="Parameter variable string exchange", style=bold];
m18_785 -> m18_786  [key=0, style=solid];
m18_785 -> m18_810  [key=2, style=dotted];
m18_785 -> m18_787  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_786 -> m18_787  [key=0, style=solid];
m18_786 -> m18_811  [key=2, style=dotted];
m18_786 -> m18_790  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m18_786 -> m18_791  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m18_786 -> m18_798  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m18_786 -> m18_802  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m18_787 -> m18_788  [key=0, style=solid];
m18_787 -> m18_812  [key=2, style=dotted];
m18_787 -> m18_789  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_787 -> m18_793  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_787 -> m18_795  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_787 -> m18_802  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_787 -> m18_808  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_788 -> m18_789  [key=0, style=solid];
m18_788 -> m18_792  [key=0, style=solid];
m18_792 -> m18_793  [key=0, style=solid];
m18_792 -> m18_794  [key=0, style=solid];
m18_794 -> m18_795  [key=0, style=solid];
m18_794 -> m18_801  [key=0, style=solid];
m18_795 -> m18_796  [key=0, style=solid];
m18_795 -> m18_176  [key=2, style=dotted];
m18_795 -> m18_795  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_796 -> m18_797  [key=0, style=solid];
m18_796 -> m18_796  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_797 -> m18_798  [key=0, style=solid];
m18_797 -> m18_749  [key=2, style=dotted];
m18_797 -> m18_797  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_801 -> m18_802  [key=0, style=solid];
m18_801 -> m18_808  [key=0, style=solid];
m18_803 -> m18_804  [key=0, style=solid];
m18_803 -> m18_176  [key=2, style=dotted];
m18_803 -> m18_803  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_803 -> m18_805  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_803 -> m18_807  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_804 -> m18_805  [key=0, style=solid];
m18_804 -> m18_807  [key=0, style=solid];
m18_807 -> m18_808  [key=0, style=solid];
m18_807 -> m18_815  [key=2, style=dotted];
m18_807 -> m18_807  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_790 -> m18_791  [key=0, style=solid];
m18_790 -> m18_813  [key=2, style=dotted];
m18_790 -> m18_790  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_791 -> m18_792  [key=0, style=solid];
m18_791 -> m18_814  [key=2, style=dotted];
m18_791 -> m18_791  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_791 -> m18_793  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_791 -> m18_795  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_791 -> m18_802  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_791 -> m18_808  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_798 -> m18_799  [key=0, style=solid];
m18_798 -> m18_798  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_802 -> m18_803  [key=0, style=solid];
m18_802 -> m18_802  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_789 -> m18_790  [key=0, style=solid];
m18_789 -> m18_789  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_793 -> m18_794  [key=0, style=solid];
m18_793 -> m18_344  [key=2, style=dotted];
m18_793 -> m18_793  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_793 -> m18_795  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_793 -> m18_802  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_793 -> m18_808  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_808 -> m18_809  [key=0, style=solid];
m18_799 -> m18_800  [key=0, style=solid];
m18_799 -> m18_799  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_800 -> m18_801  [key=0, style=solid];
m18_800 -> m18_355  [key=2, style=dotted];
m18_800 -> m18_800  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_800 -> m18_802  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_800 -> m18_808  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_805 -> m18_806  [key=0, style=solid];
m18_805 -> m18_805  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_806 -> m18_808  [key=0, style=solid];
m18_806 -> m18_398  [key=2, style=dotted];
m18_806 -> m18_806  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_809 -> m18_331  [color=blue, key=0, style=bold];
m18_355 -> m18_356  [key=0, style=solid];
m18_355 -> m18_357  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_355 -> m18_359  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_355 -> m18_113  [color=darkorchid, key=3, label="method methodReturn string GetTradingClass", style=bold];
m18_355 -> m18_787  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_356 -> m18_357  [key=0, style=solid];
m18_356 -> m18_354  [color=darkorchid, key=3, label="Local variable ContractDetails details", style=bold];
m18_357 -> m18_358  [key=0, style=solid];
m18_357 -> m18_359  [key=0, style=solid];
m18_357 -> m18_340  [key=2, style=dotted];
m18_357 -> m18_353  [key=2, style=dotted];
m18_359 -> m18_360  [key=0, style=solid];
m18_359 -> m18_354  [key=2, style=dotted];
m18_359 -> m18_362  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_358 -> m18_363  [key=0, style=solid];
m18_360 -> m18_361  [key=0, style=solid];
m18_360 -> m18_362  [key=0, style=solid];
m18_362 -> m18_363  [key=0, style=solid];
m18_361 -> m18_363  [key=0, style=solid];
m18_363 -> m18_355  [color=blue, key=0, style=bold];
m18_665 -> m18_867  [key=0, style=solid];
m18_665 -> m18_889  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_665 -> m18_370  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderStatus ConvertOrderStatus", style=bold];
m18_665 -> m18_194  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderStatus ConvertOrderStatus", style=bold];
m18_665 -> m18_193  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderStatus ConvertOrderStatus", style=bold];
m18_665 -> m18_856  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderStatus ConvertOrderStatus", style=bold];
m18_665 -> m18_822  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderStatus ConvertOrderStatus", style=bold];
m18_665 -> m18_883  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderStatus ConvertOrderStatus", style=bold];
m18_665 -> m18_886  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderStatus ConvertOrderStatus", style=bold];
m18_867 -> m18_868  [key=0, style=solid];
m18_867 -> m18_872  [key=0, style=solid];
m18_867 -> m18_876  [key=0, style=solid];
m18_867 -> m18_878  [key=0, style=solid];
m18_867 -> m18_880  [key=0, style=solid];
m18_867 -> m18_882  [key=0, style=solid];
m18_867 -> m18_884  [key=0, style=solid];
m18_867 -> m18_887  [key=0, style=solid];
m18_867 -> m18_889  [key=0, style=solid];
m18_889 -> m18_890  [key=0, style=solid];
m18_889 -> m18_826  [key=2, style=dotted];
m18_868 -> m18_869  [key=0, style=solid];
m18_872 -> m18_873  [key=0, style=solid];
m18_876 -> m18_877  [key=0, style=solid];
m18_878 -> m18_879  [key=0, style=solid];
m18_880 -> m18_881  [key=0, style=solid];
m18_882 -> m18_883  [key=0, style=solid];
m18_884 -> m18_885  [key=0, style=solid];
m18_887 -> m18_888  [key=0, style=solid];
m18_869 -> m18_870  [key=0, style=solid];
m18_870 -> m18_871  [key=0, style=solid];
m18_871 -> m18_890  [key=0, style=solid];
m18_873 -> m18_874  [key=0, style=solid];
m18_874 -> m18_875  [key=0, style=solid];
m18_875 -> m18_890  [key=0, style=solid];
m18_877 -> m18_890  [key=0, style=solid];
m18_879 -> m18_890  [key=0, style=solid];
m18_881 -> m18_890  [key=0, style=solid];
m18_883 -> m18_890  [key=0, style=solid];
m18_885 -> m18_886  [key=0, style=solid];
m18_885 -> m18_52  [key=2, style=dotted];
m18_886 -> m18_890  [key=0, style=solid];
m18_888 -> m18_890  [key=0, style=solid];
m18_890 -> m18_665  [color=blue, key=0, style=bold];
m18_747 -> m18_836  [key=0, style=solid];
m18_747 -> m18_849  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m18_747 -> m18_837  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderType", style=bold];
m18_747 -> m18_839  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderType", style=bold];
m18_747 -> m18_841  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderType", style=bold];
m18_747 -> m18_843  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderType", style=bold];
m18_747 -> m18_847  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderType", style=bold];
m18_836 -> m18_837  [key=0, style=solid];
m18_836 -> m18_839  [key=0, style=solid];
m18_836 -> m18_841  [key=0, style=solid];
m18_836 -> m18_843  [key=0, style=solid];
m18_836 -> m18_845  [key=0, style=solid];
m18_836 -> m18_847  [key=0, style=solid];
m18_836 -> m18_849  [key=0, style=solid];
m18_849 -> m18_850  [key=0, style=solid];
m18_849 -> m18_783  [key=2, style=dotted];
m18_837 -> m18_838  [key=0, style=solid];
m18_839 -> m18_840  [key=0, style=solid];
m18_841 -> m18_842  [key=0, style=solid];
m18_843 -> m18_844  [key=0, style=solid];
m18_845 -> m18_846  [key=0, style=solid];
m18_847 -> m18_848  [key=0, style=solid];
m18_838 -> m18_850  [key=0, style=solid];
m18_840 -> m18_850  [key=0, style=solid];
m18_842 -> m18_850  [key=0, style=solid];
m18_844 -> m18_850  [key=0, style=solid];
m18_846 -> m18_850  [key=0, style=solid];
m18_848 -> m18_850  [key=0, style=solid];
m18_850 -> m18_747  [color=blue, key=0, style=bold];
m18_149 -> m18_150  [key=0, style=solid];
m18_150 -> m18_151  [color=red, key=0, style=solid];
m18_150 -> m18_117  [key=2, style=dotted];
m18_151 -> m18_152  [color=red, key=0, style=solid];
m18_151 -> m18_118  [color=red, key=2, style=dotted];
m18_151 -> m18_120  [color=red, key=2, style=dotted];
m18_151 -> m18_153  [color=red, key=1, label="lambda expression", style=dashed];
m18_152 -> m18_149  [color=blue, key=0, style=bold];
m18_603 -> m18_1033  [key=0, style=solid];
m18_603 -> m18_113  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.LiveNodePacket job", style=bold];
m18_603 -> m18_593  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Symbol> symbols", style=bold];
m18_1033 -> m18_1034  [key=0, style=solid];
m18_1033 -> m18_1053  [key=0, style=solid];
m18_1033 -> m18_1055  [key=0, style=solid];
m18_1033 -> m18_1036  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1033 -> m18_1037  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1033 -> m18_1038  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1033 -> m18_1039  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1033 -> m18_1040  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1033 -> m18_1041  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1033 -> m18_1042  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1033 -> m18_1050  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1033 -> m18_1052  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1034 -> m18_1035  [key=0, style=solid];
m18_1034 -> m18_1033  [key=0, style=solid];
m18_1034 -> m18_1056  [key=2, style=dotted];
m18_1053 -> m18_1054  [key=0, style=solid];
m18_1036 -> m18_1037  [key=0, style=solid];
m18_1036 -> m18_36  [key=2, style=dotted];
m18_1037 -> m18_1038  [key=0, style=solid];
m18_1037 -> m18_1033  [key=0, style=solid];
m18_1037 -> m18_1057  [key=2, style=dotted];
m18_1038 -> m18_1039  [key=0, style=solid];
m18_1038 -> m18_1045  [color=darkseagreen4, key=1, label=subscribeSymbol, style=dashed];
m18_1038 -> m18_1051  [color=darkseagreen4, key=1, label=subscribeSymbol, style=dashed];
m18_1038 -> m18_1033  [color=darkorchid, key=3, label="Local variable QuantConnect.Symbol subscribeSymbol", style=bold];
m18_1039 -> m18_1040  [key=0, style=solid];
m18_1039 -> m18_1042  [key=0, style=solid];
m18_1039 -> m18_1058  [key=2, style=dotted];
m18_1040 -> m18_1041  [key=0, style=solid];
m18_1040 -> m18_1045  [color=darkseagreen4, key=1, label=subscribeSymbol, style=dashed];
m18_1040 -> m18_1051  [color=darkseagreen4, key=1, label=subscribeSymbol, style=dashed];
m18_1041 -> m18_1042  [key=0, style=solid];
m18_1041 -> m18_1059  [key=2, style=dotted];
m18_1042 -> m18_1043  [key=0, style=solid];
m18_1042 -> m18_1044  [key=0, style=solid];
m18_1042 -> m18_1058  [key=2, style=dotted];
m18_1050 -> m18_1051  [key=0, style=solid];
m18_1052 -> m18_1033  [key=0, style=solid];
m18_1052 -> m18_784  [key=2, style=dotted];
m18_1052 -> m18_501  [key=2, style=dotted];
m18_1035 -> m18_1036  [key=0, style=solid];
m18_1045 -> m18_1046  [key=0, style=solid];
m18_1045 -> m18_331  [key=2, style=dotted];
m18_1045 -> m18_1049  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1045 -> m18_1052  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1051 -> m18_1052  [key=0, style=solid];
m18_1043 -> m18_1055  [key=0, style=solid];
m18_1044 -> m18_1045  [key=0, style=solid];
m18_1044 -> m18_500  [key=2, style=dotted];
m18_1044 -> m18_1046  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1044 -> m18_1048  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1044 -> m18_1049  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1044 -> m18_1050  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1044 -> m18_1051  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1044 -> m18_1052  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1046 -> m18_1047  [key=0, style=solid];
m18_1048 -> m18_1049  [key=0, style=solid];
m18_1049 -> m18_1050  [key=0, style=solid];
m18_1049 -> m18_97  [key=2, style=dotted];
m18_1049 -> m18_502  [key=2, style=dotted];
m18_1047 -> m18_1048  [key=0, style=solid];
m18_1047 -> m18_1060  [key=2, style=dotted];
m18_1054 -> m18_1055  [key=0, style=solid];
m18_1054 -> m18_52  [key=2, style=dotted];
m18_1055 -> m18_603  [color=blue, key=0, style=bold];
m18_750 -> m18_751  [key=0, style=solid];
m18_750 -> m18_752  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_750 -> m18_753  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_750 -> m18_755  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_750 -> m18_758  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_750 -> m18_760  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_750 -> m18_762  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_750 -> m18_764  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_750 -> m18_766  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_750 -> m18_768  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_750 -> m18_770  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m18_751 -> m18_752  [key=0, style=solid];
m18_752 -> m18_753  [key=0, style=solid];
m18_752 -> m18_773  [key=2, style=dotted];
m18_752 -> m18_758  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m18_752 -> m18_760  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m18_752 -> m18_762  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m18_752 -> m18_764  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m18_752 -> m18_766  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m18_752 -> m18_768  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m18_753 -> m18_754  [key=0, style=solid];
m18_753 -> m18_774  [key=2, style=dotted];
m18_755 -> m18_756  [key=0, style=solid];
m18_755 -> m18_775  [key=2, style=dotted];
m18_755 -> m18_769  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m18_758 -> m18_770  [key=0, style=solid];
m18_758 -> m18_776  [key=2, style=dotted];
m18_758 -> m18_694  [key=2, style=dotted];
m18_758 -> m18_777  [key=2, style=dotted];
m18_760 -> m18_770  [key=0, style=solid];
m18_760 -> m18_778  [key=2, style=dotted];
m18_760 -> m18_694  [key=2, style=dotted];
m18_760 -> m18_777  [key=2, style=dotted];
m18_762 -> m18_770  [key=0, style=solid];
m18_762 -> m18_779  [key=2, style=dotted];
m18_762 -> m18_694  [key=2, style=dotted];
m18_762 -> m18_777  [key=2, style=dotted];
m18_764 -> m18_770  [key=0, style=solid];
m18_764 -> m18_780  [key=2, style=dotted];
m18_764 -> m18_694  [key=2, style=dotted];
m18_764 -> m18_508  [key=2, style=dotted];
m18_764 -> m18_777  [key=2, style=dotted];
m18_766 -> m18_770  [key=0, style=solid];
m18_766 -> m18_781  [key=2, style=dotted];
m18_766 -> m18_694  [key=2, style=dotted];
m18_766 -> m18_508  [key=2, style=dotted];
m18_766 -> m18_777  [key=2, style=dotted];
m18_768 -> m18_770  [key=0, style=solid];
m18_768 -> m18_782  [key=2, style=dotted];
m18_768 -> m18_694  [key=2, style=dotted];
m18_768 -> m18_508  [key=2, style=dotted];
m18_768 -> m18_777  [key=2, style=dotted];
m18_768 -> m18_771  [color=darkseagreen4, key=1, label=order, style=dashed];
m18_770 -> m18_771  [key=0, style=solid];
m18_770 -> m18_784  [key=2, style=dotted];
m18_770 -> m18_106  [key=2, style=dotted];
m18_754 -> m18_755  [key=0, style=solid];
m18_754 -> m18_758  [color=darkseagreen4, key=1, label=quantitySign, style=dashed];
m18_754 -> m18_760  [color=darkseagreen4, key=1, label=quantitySign, style=dashed];
m18_754 -> m18_762  [color=darkseagreen4, key=1, label=quantitySign, style=dashed];
m18_754 -> m18_764  [color=darkseagreen4, key=1, label=quantitySign, style=dashed];
m18_754 -> m18_766  [color=darkseagreen4, key=1, label=quantitySign, style=dashed];
m18_754 -> m18_768  [color=darkseagreen4, key=1, label=quantitySign, style=dashed];
m18_756 -> m18_757  [key=0, style=solid];
m18_756 -> m18_759  [key=0, style=solid];
m18_756 -> m18_761  [key=0, style=solid];
m18_756 -> m18_763  [key=0, style=solid];
m18_756 -> m18_765  [key=0, style=solid];
m18_756 -> m18_767  [key=0, style=solid];
m18_756 -> m18_769  [key=0, style=solid];
m18_769 -> m18_772  [key=0, style=solid];
m18_769 -> m18_783  [key=2, style=dotted];
m18_757 -> m18_758  [key=0, style=solid];
m18_759 -> m18_760  [key=0, style=solid];
m18_761 -> m18_762  [key=0, style=solid];
m18_763 -> m18_764  [key=0, style=solid];
m18_765 -> m18_766  [key=0, style=solid];
m18_767 -> m18_768  [key=0, style=solid];
m18_771 -> m18_772  [key=0, style=solid];
m18_772 -> m18_750  [color=blue, key=0, style=bold];
m18_354 -> m18_373  [key=0, style=solid];
m18_354 -> m18_376  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_354 -> m18_378  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_354 -> m18_392  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_354 -> m18_380  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_354 -> m18_344  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_354 -> m18_355  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_354 -> m18_364  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_354 -> m18_447  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_354 -> m18_374  [color=darkorchid, key=3, label="method methodReturn ContractDetails GetContractDetails", style=bold];
m18_373 -> m18_374  [key=0, style=solid];
m18_373 -> m18_381  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m18_373 -> m18_382  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m18_373 -> m18_373  [color=darkorchid, key=3, label="Local variable int timeout", style=bold];
m18_376 -> m18_377  [key=0, style=solid];
m18_378 -> m18_379  [key=0, style=solid];
m18_378 -> m18_389  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m18_378 -> m18_391  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m18_378 -> m18_383  [color=darkseagreen4, key=1, label=clientOnContractDetails, style=dashed];
m18_378 -> m18_340  [color=darkorchid, key=3, label="Local variable string uniqueKey", style=bold];
m18_380 -> m18_381  [key=0, style=solid];
m18_380 -> m18_386  [key=2, style=dotted];
m18_374 -> m18_375  [key=0, style=solid];
m18_374 -> m18_378  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_374 -> m18_113  [color=darkorchid, key=3, label="Local variable ContractDetails details", style=bold];
m18_381 -> m18_382  [key=0, style=solid];
m18_381 -> m18_383  [key=0, style=solid];
m18_381 -> m18_100  [key=2, style=dotted];
m18_382 -> m18_383  [key=0, style=solid];
m18_382 -> m18_387  [key=2, style=dotted];
m18_375 -> m18_376  [key=0, style=solid];
m18_375 -> m18_177  [key=2, style=dotted];
m18_375 -> m18_378  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_375 -> m18_389  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_375 -> m18_380  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_377 -> m18_378  [key=0, style=solid];
m18_377 -> m18_98  [key=2, style=dotted];
m18_377 -> m18_394  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_377 -> m18_381  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_379 -> m18_380  [key=0, style=solid];
m18_383 -> m18_384  [key=0, style=solid];
m18_384 -> m18_385  [key=0, style=solid];
m18_385 -> m18_354  [color=blue, key=0, style=bold];
m18_243 -> m18_260  [key=0, style=solid];
m18_243 -> m18_64  [color=darkorchid, key=3, label="method methodReturn bool DownloadAccount", style=bold];
m18_243 -> m18_55  [color=darkorchid, key=3, label="method methodReturn bool DownloadAccount", style=bold];
m18_260 -> m18_261  [key=0, style=solid];
m18_260 -> m18_279  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.AccountDownloadEndEventArgs", style=dashed];
m18_260 -> m18_269  [color=darkseagreen4, key=1, label=clientOnAccountDownloadEnd, style=dashed];
m18_260 -> m18_273  [color=darkseagreen4, key=1, label=clientOnAccountDownloadEnd, style=dashed];
m18_260 -> m18_260  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.AccountDownloadEndEventArgs> clientOnAccountDownloadEnd", style=bold];
m18_261 -> m18_262  [key=0, style=solid];
m18_269 -> m18_270  [key=0, style=solid];
m18_273 -> m18_274  [key=0, style=solid];
m18_262 -> m18_263  [key=0, style=solid];
m18_262 -> m18_98  [key=2, style=dotted];
m18_262 -> m18_283  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m18_262 -> m18_266  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m18_263 -> m18_264  [key=0, style=solid];
m18_263 -> m18_270  [color=darkseagreen4, key=1, label=clientOnUpdateAccountValue, style=dashed];
m18_263 -> m18_274  [color=darkseagreen4, key=1, label=clientOnUpdateAccountValue, style=dashed];
m18_263 -> m18_263  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs> clientOnUpdateAccountValue", style=bold];
m18_266 -> m18_267  [key=0, style=solid];
m18_266 -> m18_100  [key=2, style=dotted];
m18_264 -> m18_265  [color=red, key=0, style=solid];
m18_270 -> m18_271  [key=0, style=solid];
m18_274 -> m18_275  [key=0, style=solid];
m18_265 -> m18_266  [color=red, key=0, style=solid];
m18_265 -> m18_277  [color=red, key=2, style=dotted];
m18_267 -> m18_268  [key=0, style=solid];
m18_267 -> m18_242  [key=2, style=dotted];
m18_268 -> m18_269  [key=0, style=solid];
m18_268 -> m18_273  [key=0, style=solid];
m18_268 -> m18_100  [key=2, style=dotted];
m18_271 -> m18_272  [key=0, style=solid];
m18_271 -> m18_36  [key=2, style=dotted];
m18_272 -> m18_276  [key=0, style=solid];
m18_275 -> m18_276  [key=0, style=solid];
m18_276 -> m18_243  [color=blue, key=0, style=bold];
m18_1358 -> m18_1359  [key=0, style=solid];
m18_31 -> m18_32  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_36  [key=2, style=dotted];
m18_44 -> m18_45  [key=0, style=solid];
m18_44 -> m18_52  [key=2, style=dotted];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_52  [key=2, style=dotted];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_31  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs", style=dashed];
m18_29 -> m18_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs", style=dashed];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_33  [key=0, style=solid];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_35  [key=2, style=dotted];
m18_34 -> m18_29  [color=blue, key=0, style=bold];
m18_37 -> m18_38  [key=0, style=solid];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_36  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_46  [key=0, style=solid];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_39  [key=0, style=solid];
m18_40 -> m18_50  [key=2, style=dotted];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_49  [key=0, style=solid];
m18_46 -> m18_36  [key=2, style=dotted];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_36  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_45  [key=0, style=solid];
m18_42 -> m18_51  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_45 -> m18_39  [key=0, style=solid];
m18_45 -> m18_36  [key=2, style=dotted];
m18_47 -> m18_48  [key=0, style=solid];
m18_49 -> m18_37  [color=blue, key=0, style=bold];
m18_103 -> m18_104  [key=0, style=solid];
m18_103 -> m18_105  [key=2, style=dotted];
m18_103 -> m18_106  [key=2, style=dotted];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_35  [key=2, style=dotted];
m18_102 -> m18_103  [key=0, style=solid];
m18_104 -> m18_102  [color=blue, key=0, style=bold];
m18_107 -> m18_108  [key=0, style=solid];
m18_109 -> m18_107  [color=blue, key=0, style=bold];
m18_123 -> m18_124  [color=red, key=0, style=solid];
m18_127 -> m18_128  [color=red, key=0, style=solid];
m18_130 -> m18_131  [key=0, style=solid];
m18_130 -> m18_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_130 -> m18_134  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_130 -> m18_136  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_130 -> m18_138  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_146 -> m18_147  [key=0, style=solid];
m18_124 -> m18_125  [color=red, key=0, style=solid];
m18_124 -> m18_126  [color=red, key=2, style=dotted];
m18_124 -> m18_124  [color=red, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Holding>", style=dashed];
m18_125 -> m18_123  [color=blue, key=0, style=bold];
m18_128 -> m18_129  [color=red, key=0, style=solid];
m18_129 -> m18_127  [color=blue, key=0, style=bold];
m18_131 -> m18_132  [key=0, style=solid];
m18_131 -> m18_134  [key=0, style=solid];
m18_132 -> m18_133  [key=0, style=solid];
m18_132 -> m18_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_132 -> m18_134  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_132 -> m18_136  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_132 -> m18_138  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_134 -> m18_135  [key=0, style=solid];
m18_134 -> m18_140  [key=2, style=dotted];
m18_134 -> m18_138  [color=darkseagreen4, key=1, label=currency, style=dashed];
m18_134 -> m18_143  [color=darkseagreen4, key=1, label=currency, style=dashed];
m18_136 -> m18_137  [key=0, style=solid];
m18_136 -> m18_136  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_136 -> m18_138  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_138 -> m18_139  [key=0, style=solid];
m18_138 -> m18_141  [key=2, style=dotted];
m18_138 -> m18_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_138 -> m18_143  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_133 -> m18_139  [key=0, style=solid];
m18_135 -> m18_136  [key=0, style=solid];
m18_135 -> m18_138  [key=0, style=solid];
m18_143 -> m18_144  [key=0, style=solid];
m18_143 -> m18_145  [key=2, style=dotted];
m18_143 -> m18_143  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_137 -> m18_139  [key=0, style=solid];
m18_139 -> m18_130  [color=blue, key=0, style=bold];
m18_142 -> m18_143  [key=0, style=solid];
m18_144 -> m18_142  [color=blue, key=0, style=bold];
m18_147 -> m18_148  [key=0, style=solid];
m18_148 -> m18_146  [color=blue, key=0, style=bold];
m18_153 -> m18_154  [color=red, key=0, style=solid];
m18_154 -> m18_155  [color=red, key=0, style=solid];
m18_154 -> m18_156  [color=red, key=2, style=dotted];
m18_154 -> m18_157  [color=red, key=2, style=dotted];
m18_154 -> m18_154  [color=red, key=1, label="System.Collections.Generic.KeyValuePair<string, decimal>", style=dashed];
m18_155 -> m18_153  [color=blue, key=0, style=bold];
m18_185 -> m18_186  [key=0, style=solid];
m18_185 -> m18_187  [key=2, style=dotted];
m18_181 -> m18_182  [key=0, style=solid];
m18_181 -> m18_35  [key=2, style=dotted];
m18_180 -> m18_181  [key=0, style=solid];
m18_180 -> m18_182  [key=0, style=solid];
m18_184 -> m18_185  [key=0, style=solid];
m18_184 -> m18_186  [key=0, style=solid];
m18_179 -> m18_180  [key=0, style=solid];
m18_182 -> m18_179  [color=blue, key=0, style=bold];
m18_183 -> m18_184  [key=0, style=solid];
m18_183 -> m18_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_186 -> m18_183  [color=blue, key=0, style=bold];
m18_252 -> m18_253  [key=0, style=solid];
m18_252 -> m18_250  [key=0, style=solid];
m18_252 -> m18_259  [key=2, style=dotted];
m18_254 -> m18_250  [key=0, style=solid];
m18_254 -> m18_52  [key=2, style=dotted];
m18_248 -> m18_249  [key=0, style=solid];
m18_249 -> m18_250  [key=0, style=solid];
m18_249 -> m18_36  [key=2, style=dotted];
m18_250 -> m18_251  [key=0, style=solid];
m18_250 -> m18_255  [key=0, style=solid];
m18_250 -> m18_257  [key=2, style=dotted];
m18_251 -> m18_252  [key=0, style=solid];
m18_251 -> m18_258  [key=2, style=dotted];
m18_255 -> m18_256  [key=0, style=solid];
m18_255 -> m18_36  [key=2, style=dotted];
m18_253 -> m18_254  [key=0, style=solid];
m18_256 -> m18_248  [color=blue, key=0, style=bold];
m18_279 -> m18_280  [key=0, style=solid];
m18_279 -> m18_36  [key=2, style=dotted];
m18_283 -> m18_284  [key=0, style=solid];
m18_283 -> m18_35  [key=2, style=dotted];
m18_278 -> m18_279  [key=0, style=solid];
m18_280 -> m18_281  [key=0, style=solid];
m18_280 -> m18_35  [key=2, style=dotted];
m18_281 -> m18_278  [color=blue, key=0, style=bold];
m18_282 -> m18_283  [key=0, style=solid];
m18_284 -> m18_282  [color=blue, key=0, style=bold];
m18_392 -> m18_393  [key=0, style=solid];
m18_392 -> m18_340  [key=2, style=dotted];
m18_392 -> m18_395  [color=darkseagreen4, key=1, label=uniqueKey, style=dashed];
m18_389 -> m18_390  [key=0, style=solid];
m18_389 -> m18_391  [key=0, style=solid];
m18_394 -> m18_395  [key=0, style=solid];
m18_394 -> m18_35  [key=2, style=dotted];
m18_391 -> m18_392  [key=0, style=solid];
m18_391 -> m18_393  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_391 -> m18_378  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_391 -> m18_384  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_391 -> m18_396  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_388 -> m18_389  [key=0, style=solid];
m18_388 -> m18_391  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m18_390 -> m18_396  [key=0, style=solid];
m18_393 -> m18_394  [key=0, style=solid];
m18_393 -> m18_397  [key=2, style=dotted];
m18_396 -> m18_388  [color=blue, key=0, style=bold];
m18_395 -> m18_396  [key=0, style=solid];
m18_395 -> m18_36  [key=2, style=dotted];
m18_412 -> m18_413  [key=0, style=solid];
m18_412 -> m18_414  [key=2, style=dotted];
m18_408 -> m18_409  [key=0, style=solid];
m18_411 -> m18_412  [key=0, style=solid];
m18_409 -> m18_410  [key=0, style=solid];
m18_410 -> m18_408  [color=blue, key=0, style=bold];
m18_413 -> m18_411  [color=blue, key=0, style=bold];
m18_435 -> m18_436  [key=0, style=solid];
m18_435 -> m18_35  [key=2, style=dotted];
m18_432 -> m18_433  [key=0, style=solid];
m18_432 -> m18_187  [key=2, style=dotted];
m18_431 -> m18_432  [key=0, style=solid];
m18_433 -> m18_431  [color=blue, key=0, style=bold];
m18_434 -> m18_435  [key=0, style=solid];
m18_436 -> m18_434  [color=blue, key=0, style=bold];
m18_515 -> m18_516  [key=0, style=solid];
m18_515 -> m18_36  [key=2, style=dotted];
m18_510 -> m18_511  [key=0, style=solid];
m18_509 -> m18_510  [key=0, style=solid];
m18_516 -> m18_517  [key=0, style=solid];
m18_516 -> m18_35  [key=2, style=dotted];
m18_525 -> m18_526  [key=0, style=solid];
m18_525 -> m18_35  [key=2, style=dotted];
m18_513 -> m18_514  [key=0, style=solid];
m18_513 -> m18_517  [key=0, style=solid];
m18_514 -> m18_515  [key=0, style=solid];
m18_514 -> m18_518  [key=2, style=dotted];
m18_514 -> m18_465  [color=darkseagreen4, key=1, label=rate, style=dashed];
m18_514 -> m18_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m18_514 -> m18_517  [color=darkseagreen4, key=1, label=rate, style=dashed];
m18_521 -> m18_522  [key=0, style=solid];
m18_521 -> m18_187  [key=2, style=dotted];
m18_520 -> m18_521  [key=0, style=solid];
m18_520 -> m18_522  [key=0, style=solid];
m18_524 -> m18_525  [key=0, style=solid];
m18_524 -> m18_526  [key=0, style=solid];
m18_528 -> m18_529  [key=0, style=solid];
m18_528 -> m18_530  [key=0, style=solid];
m18_528 -> m18_246  [key=2, style=dotted];
m18_531 -> m18_532  [key=0, style=solid];
m18_511 -> m18_509  [color=blue, key=0, style=bold];
m18_512 -> m18_513  [key=0, style=solid];
m18_512 -> m18_514  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_512 -> m18_515  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_517 -> m18_512  [color=blue, key=0, style=bold];
m18_519 -> m18_520  [key=0, style=solid];
m18_519 -> m18_521  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m18_522 -> m18_519  [color=blue, key=0, style=bold];
m18_523 -> m18_524  [key=0, style=solid];
m18_526 -> m18_523  [color=blue, key=0, style=bold];
m18_527 -> m18_528  [key=0, style=solid];
m18_529 -> m18_530  [key=0, style=solid];
m18_529 -> m18_484  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m18_529 -> m18_496  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m18_530 -> m18_527  [color=blue, key=0, style=bold];
m18_532 -> m18_533  [key=0, style=solid];
m18_533 -> m18_531  [color=blue, key=0, style=bold];
m18_621 -> m18_622  [key=0, style=solid];
m18_622 -> m18_623  [key=0, style=solid];
m18_622 -> m18_569  [key=2, style=dotted];
m18_623 -> m18_621  [color=blue, key=0, style=bold];
m18_1215 -> m18_1216  [key=0, style=solid];
m18_1215 -> m18_1217  [key=2, style=dotted];
m18_1225 -> m18_1226  [key=0, style=solid];
m18_1225 -> m18_1227  [key=2, style=dotted];
m18_1218 -> m18_1219  [key=0, style=solid];
m18_1221 -> m18_1222  [key=0, style=solid];
m18_1224 -> m18_1225  [key=0, style=solid];
m18_1214 -> m18_1215  [key=0, style=solid];
m18_1216 -> m18_1214  [color=blue, key=0, style=bold];
m18_1219 -> m18_1220  [key=0, style=solid];
m18_1220 -> m18_1218  [color=blue, key=0, style=bold];
m18_1222 -> m18_1223  [key=0, style=solid];
m18_1223 -> m18_1221  [color=blue, key=0, style=bold];
m18_1226 -> m18_1224  [color=blue, key=0, style=bold];
m18_1255 -> m18_1256  [key=0, style=solid];
m18_1258 -> m18_1259  [key=0, style=solid];
m18_1261 -> m18_1262  [key=0, style=solid];
m18_1267 -> m18_1268  [key=0, style=solid];
m18_1266 -> m18_1267  [key=0, style=solid];
m18_1256 -> m18_1257  [key=0, style=solid];
m18_1257 -> m18_1255  [color=blue, key=0, style=bold];
m18_1259 -> m18_1260  [key=0, style=solid];
m18_1260 -> m18_1258  [color=blue, key=0, style=bold];
m18_1262 -> m18_1263  [key=0, style=solid];
m18_1262 -> m18_1264  [key=2, style=dotted];
m18_1262 -> m18_1265  [key=2, style=dotted];
m18_1263 -> m18_1261  [color=blue, key=0, style=bold];
m18_1268 -> m18_1266  [color=blue, key=0, style=bold];
m18_1310 -> m18_1311  [key=0, style=solid];
m18_1310 -> m18_953  [key=2, style=dotted];
m18_1310 -> m18_1312  [color=darkseagreen4, key=1, label=bar, style=dashed];
m18_1310 -> m18_1313  [color=darkseagreen4, key=1, label=bar, style=dashed];
m18_1311 -> m18_1312  [key=0, style=solid];
m18_1311 -> m18_1313  [key=0, style=solid];
m18_1312 -> m18_1313  [key=0, style=solid];
m18_1312 -> m18_1012  [key=2, style=dotted];
m18_1314 -> m18_1315  [key=0, style=solid];
m18_1314 -> m18_35  [key=2, style=dotted];
m18_1318 -> m18_1319  [key=0, style=solid];
m18_1318 -> m18_35  [key=2, style=dotted];
m18_1324 -> m18_1325  [key=0, style=solid];
m18_1324 -> m18_35  [key=2, style=dotted];
m18_1313 -> m18_1314  [key=0, style=solid];
m18_1313 -> m18_187  [key=2, style=dotted];
m18_1309 -> m18_1310  [key=0, style=solid];
m18_1309 -> m18_1315  [key=0, style=solid];
m18_1317 -> m18_1318  [key=0, style=solid];
m18_1317 -> m18_1319  [key=0, style=solid];
m18_1321 -> m18_1322  [key=0, style=solid];
m18_1321 -> m18_1323  [key=0, style=solid];
m18_1321 -> m18_246  [key=2, style=dotted];
m18_1323 -> m18_1324  [key=0, style=solid];
m18_1323 -> m18_1325  [key=0, style=solid];
m18_1323 -> m18_246  [key=2, style=dotted];
m18_1326 -> m18_1327  [key=0, style=solid];
m18_1308 -> m18_1309  [key=0, style=solid];
m18_1308 -> m18_1310  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m18_1315 -> m18_1308  [color=blue, key=0, style=bold];
m18_1316 -> m18_1317  [key=0, style=solid];
m18_1319 -> m18_1316  [color=blue, key=0, style=bold];
m18_1320 -> m18_1321  [key=0, style=solid];
m18_1320 -> m18_1323  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m18_1322 -> m18_1323  [key=0, style=solid];
m18_1322 -> m18_1293  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m18_1322 -> m18_1325  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m18_1325 -> m18_1320  [color=blue, key=0, style=bold];
m18_1327 -> m18_1328  [key=0, style=solid];
m18_1328 -> m18_1326  [color=blue, key=0, style=bold];
m18_1356 -> m18_1357  [key=0, style=solid];
m18_1356 -> m18_246  [key=2, style=dotted];
m18_1355 -> m18_1356  [key=0, style=solid];
m18_1357 -> m18_1355  [color=blue, key=0, style=bold];
m18_1359 -> m18_1360  [key=0, style=solid];
m18_1359 -> m18_246  [key=2, style=dotted];
m18_1360 -> m18_1358  [color=blue, key=0, style=bold];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_62 -> m18_55  [color=darkorchid, key=3, label="method methodReturn bool UpdateOrder", style=bold];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_36  [key=2, style=dotted];
m18_64 -> m18_65  [key=0, style=solid];
m18_64 -> m18_68  [key=0, style=solid];
m18_64 -> m18_61  [key=2, style=dotted];
m18_65 -> m18_66  [key=0, style=solid];
m18_68 -> m18_69  [key=0, style=solid];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_52  [key=2, style=dotted];
m18_67 -> m18_69  [key=0, style=solid];
m18_69 -> m18_62  [color=blue, key=0, style=bold];
m18_1265 -> m18_4  [color=darkorchid, key=3, label="Field variable string _host", style=bold];
m18_748 -> m18_986  [key=0, style=solid];
m18_748 -> m18_987  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m18_748 -> m18_988  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m18_748 -> m18_364  [color=darkorchid, key=3, label="Parameter variable decimal minTick", style=bold];
m18_748 -> m18_739  [color=darkorchid, key=3, label="Parameter variable decimal minTick", style=bold];
m18_748 -> m18_748  [color=darkorchid, key=3, label="method methodReturn decimal RoundPrice", style=bold];
m18_986 -> m18_987  [key=0, style=solid];
m18_986 -> m18_988  [key=0, style=solid];
m18_987 -> m18_989  [key=0, style=solid];
m18_988 -> m18_989  [key=0, style=solid];
m18_988 -> m18_990  [key=2, style=dotted];
m18_989 -> m18_748  [color=blue, key=0, style=bold];
m18_1014 -> m18_1015  [key=0, style=solid];
m18_1015 -> m18_1016  [key=0, style=solid];
m18_1015 -> m18_1017  [key=2, style=dotted];
m18_1016 -> m18_1014  [color=blue, key=0, style=bold];
m18_616 -> m18_1003  [key=0, style=solid];
m18_1003 -> m18_1004  [key=0, style=solid];
m18_1004 -> m18_1005  [key=0, style=solid];
m18_1004 -> m18_1012  [key=2, style=dotted];
m18_1004 -> m18_1007  [color=darkseagreen4, key=1, label=time, style=dashed];
m18_1005 -> m18_1006  [key=0, style=solid];
m18_1005 -> m18_1007  [key=0, style=solid];
m18_1007 -> m18_1008  [key=0, style=solid];
m18_1006 -> m18_1009  [key=0, style=solid];
m18_1006 -> m18_1010  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_1008 -> m18_1009  [key=0, style=solid];
m18_1008 -> m18_1013  [key=2, style=dotted];
m18_1008 -> m18_1010  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_1009 -> m18_1010  [key=0, style=solid];
m18_1009 -> m18_36  [key=2, style=dotted];
m18_1010 -> m18_1011  [key=0, style=solid];
m18_1011 -> m18_616  [color=blue, key=0, style=bold];
m18_500 -> m18_999  [key=0, style=solid];
m18_999 -> m18_1000  [key=0, style=solid];
m18_999 -> m18_996  [key=2, style=dotted];
m18_1000 -> m18_500  [color=blue, key=0, style=bold];
m18_1149 -> m18_1150  [key=0, style=solid];
m18_1149 -> m18_1151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m18_1149 -> m18_1156  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m18_1149 -> m18_1160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m18_1149 -> m18_1183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m18_1149 -> m18_1185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m18_1149 -> m18_1186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m18_1150 -> m18_1151  [key=0, style=solid];
m18_1151 -> m18_1152  [key=0, style=solid];
m18_1151 -> m18_1153  [key=0, style=solid];
m18_1151 -> m18_353  [key=2, style=dotted];
m18_1151 -> m18_1154  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1155  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1157  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1164  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1169  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1170  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1176  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1177  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1182  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1183  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1151 -> m18_1186  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1156 -> m18_1157  [key=0, style=solid];
m18_1156 -> m18_1143  [key=2, style=dotted];
m18_1160 -> m18_1161  [key=0, style=solid];
m18_1160 -> m18_1167  [key=0, style=solid];
m18_1160 -> m18_1173  [key=0, style=solid];
m18_1160 -> m18_1179  [key=0, style=solid];
m18_1160 -> m18_1187  [key=0, style=solid];
m18_1183 -> m18_1184  [key=0, style=solid];
m18_1183 -> m18_1188  [key=0, style=solid];
m18_1183 -> m18_1057  [key=2, style=dotted];
m18_1185 -> m18_1186  [key=0, style=solid];
m18_1186 -> m18_1188  [key=0, style=solid];
m18_1152 -> m18_1191  [key=0, style=solid];
m18_1153 -> m18_1154  [key=0, style=solid];
m18_1153 -> m18_1141  [key=2, style=dotted];
m18_1153 -> m18_1156  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1157  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1158  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1162  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1163  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1164  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1165  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1166  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1168  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1169  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1170  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1171  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1172  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1174  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1177  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1178  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1184  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1185  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1189  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1153 -> m18_1190  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1154 -> m18_1155  [key=0, style=solid];
m18_1155 -> m18_1156  [key=0, style=solid];
m18_1157 -> m18_1158  [key=0, style=solid];
m18_1157 -> m18_1095  [key=2, style=dotted];
m18_1163 -> m18_1164  [key=0, style=solid];
m18_1163 -> m18_353  [key=2, style=dotted];
m18_1164 -> m18_1165  [key=0, style=solid];
m18_1169 -> m18_1170  [key=0, style=solid];
m18_1169 -> m18_353  [key=2, style=dotted];
m18_1170 -> m18_1171  [key=0, style=solid];
m18_1176 -> m18_1177  [key=0, style=solid];
m18_1176 -> m18_353  [key=2, style=dotted];
m18_1176 -> m18_1178  [color=darkseagreen4, key=1, label=lastPrice, style=dashed];
m18_1177 -> m18_1178  [key=0, style=solid];
m18_1182 -> m18_1183  [key=0, style=solid];
m18_1182 -> m18_1188  [key=0, style=solid];
m18_1158 -> m18_1159  [key=0, style=solid];
m18_1158 -> m18_1160  [key=0, style=solid];
m18_1162 -> m18_1163  [key=0, style=solid];
m18_1165 -> m18_1166  [key=0, style=solid];
m18_1166 -> m18_1188  [key=0, style=solid];
m18_1168 -> m18_1169  [key=0, style=solid];
m18_1171 -> m18_1172  [key=0, style=solid];
m18_1172 -> m18_1188  [key=0, style=solid];
m18_1174 -> m18_1175  [key=0, style=solid];
m18_1178 -> m18_1188  [key=0, style=solid];
m18_1184 -> m18_1185  [key=0, style=solid];
m18_1189 -> m18_1190  [key=0, style=solid];
m18_1189 -> m18_1191  [key=0, style=solid];
m18_1189 -> m18_1142  [key=2, style=dotted];
m18_1190 -> m18_1191  [key=0, style=solid];
m18_1190 -> m18_187  [key=2, style=dotted];
m18_1159 -> m18_1191  [key=0, style=solid];
m18_1161 -> m18_1162  [key=0, style=solid];
m18_1167 -> m18_1168  [key=0, style=solid];
m18_1173 -> m18_1174  [key=0, style=solid];
m18_1179 -> m18_1180  [key=0, style=solid];
m18_1187 -> m18_1191  [key=0, style=solid];
m18_1175 -> m18_1176  [key=0, style=solid];
m18_1180 -> m18_1181  [key=0, style=solid];
m18_1181 -> m18_1182  [key=0, style=solid];
m18_1188 -> m18_1189  [key=0, style=solid];
m18_1191 -> m18_1149  [color=blue, key=0, style=bold];
m18_669 -> m18_696  [color=red, key=0, style=solid];
m18_669 -> m18_697  [color=red, key=1, label=int, style=dashed];
m18_669 -> m18_698  [color=red, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_669 -> m18_699  [color=red, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_669 -> m18_700  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_669 -> m18_701  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_669 -> m18_702  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_669 -> m18_703  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_669 -> m18_704  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_669 -> m18_644  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m18_669 -> m18_678  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m18_669 -> m18_650  [color=red, key=3, label="Parameter variable int currentQuantityFilled", style=bold];
m18_669 -> m18_682  [color=red, key=3, label="Parameter variable int currentQuantityFilled", style=bold];
m18_669 -> m18_651  [color=red, key=3, label="Parameter variable int totalQuantityFilled", style=bold];
m18_669 -> m18_683  [color=red, key=3, label="Parameter variable int totalQuantityFilled", style=bold];
m18_669 -> m18_652  [color=red, key=3, label="Parameter variable int remainingQuantity", style=bold];
m18_669 -> m18_684  [color=red, key=3, label="Parameter variable int remainingQuantity", style=bold];
m18_669 -> m18_653  [color=red, key=3, label="Parameter variable decimal price", style=bold];
m18_669 -> m18_685  [color=red, key=3, label="Parameter variable decimal price", style=bold];
m18_669 -> m18_648  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderStatus status", style=bold];
m18_669 -> m18_686  [color=red, key=3, label="Parameter variable QuantConnect.Orders.OrderStatus status", style=bold];
m18_696 -> m18_697  [color=red, key=0, style=solid];
m18_696 -> m18_702  [color=red, key=1, label=orderFee, style=dashed];
m18_696 -> m18_453  [color=red, key=3, label="Local variable decimal orderFee", style=bold];
m18_697 -> m18_698  [color=red, key=0, style=solid];
m18_697 -> m18_700  [color=red, key=0, style=solid];
m18_698 -> m18_699  [color=red, key=0, style=solid];
m18_698 -> m18_707  [color=red, key=2, style=dotted];
m18_699 -> m18_700  [color=red, key=0, style=solid];
m18_699 -> m18_708  [color=red, key=2, style=dotted];
m18_699 -> m18_702  [color=red, key=1, label=orderFee, style=dashed];
m18_700 -> m18_701  [key=0, style=solid];
m18_700 -> m18_702  [color=darkseagreen4, key=1, label=fillQuantity, style=dashed];
m18_701 -> m18_702  [key=0, style=solid];
m18_701 -> m18_707  [key=2, style=dotted];
m18_702 -> m18_703  [key=0, style=solid];
m18_702 -> m18_573  [key=2, style=dotted];
m18_702 -> m18_704  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m18_702 -> m18_705  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m18_703 -> m18_704  [key=0, style=solid];
m18_703 -> m18_705  [key=0, style=solid];
m18_704 -> m18_705  [key=0, style=solid];
m18_705 -> m18_706  [key=0, style=solid];
m18_705 -> m18_574  [key=2, style=dotted];
m18_706 -> m18_669  [color=blue, key=0, style=bold];
m18_236 -> m18_285  [key=0, style=solid];
m18_285 -> m18_286  [key=0, style=solid];
m18_285 -> m18_291  [key=2, style=dotted];
m18_286 -> m18_287  [key=0, style=solid];
m18_286 -> m18_290  [key=0, style=solid];
m18_287 -> m18_288  [key=0, style=solid];
m18_287 -> m18_292  [key=2, style=dotted];
m18_288 -> m18_289  [key=0, style=solid];
m18_288 -> m18_293  [key=2, style=dotted];
m18_289 -> m18_290  [key=0, style=solid];
m18_290 -> m18_236  [color=blue, key=0, style=bold];
m18_1106 -> m18_1107  [key=0, style=solid];
m18_1106 -> m18_1108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_1106 -> m18_1110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_1106 -> m18_1116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_1106 -> m18_1119  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_1107 -> m18_1108  [key=0, style=solid];
m18_1108 -> m18_1109  [key=0, style=solid];
m18_1108 -> m18_1110  [key=0, style=solid];
m18_1108 -> m18_353  [key=2, style=dotted];
m18_1108 -> m18_1112  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1108 -> m18_1113  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1108 -> m18_1114  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1108 -> m18_1123  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1108 -> m18_1125  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1108 -> m18_1129  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1108 -> m18_1131  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1108 -> m18_1135  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1110 -> m18_1111  [key=0, style=solid];
m18_1110 -> m18_518  [key=2, style=dotted];
m18_1110 -> m18_1115  [color=darkseagreen4, key=1, label=price, style=dashed];
m18_1110 -> m18_1122  [color=darkseagreen4, key=1, label=price, style=dashed];
m18_1110 -> m18_1125  [color=darkseagreen4, key=1, label=price, style=dashed];
m18_1110 -> m18_1128  [color=darkseagreen4, key=1, label=price, style=dashed];
m18_1110 -> m18_1131  [color=darkseagreen4, key=1, label=price, style=dashed];
m18_1110 -> m18_1134  [color=darkseagreen4, key=1, label=price, style=dashed];
m18_1110 -> m18_1135  [color=darkseagreen4, key=1, label=price, style=dashed];
m18_1116 -> m18_1117  [key=0, style=solid];
m18_1116 -> m18_1118  [key=0, style=solid];
m18_1119 -> m18_1120  [key=0, style=solid];
m18_1119 -> m18_1126  [key=0, style=solid];
m18_1119 -> m18_1132  [key=0, style=solid];
m18_1119 -> m18_1136  [key=0, style=solid];
m18_1109 -> m18_1140  [key=0, style=solid];
m18_1112 -> m18_1113  [key=0, style=solid];
m18_1113 -> m18_1114  [key=0, style=solid];
m18_1113 -> m18_1095  [key=2, style=dotted];
m18_1114 -> m18_1115  [key=0, style=solid];
m18_1114 -> m18_1116  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_1123 -> m18_1124  [key=0, style=solid];
m18_1123 -> m18_353  [key=2, style=dotted];
m18_1125 -> m18_1137  [key=0, style=solid];
m18_1129 -> m18_1130  [key=0, style=solid];
m18_1129 -> m18_353  [key=2, style=dotted];
m18_1131 -> m18_1137  [key=0, style=solid];
m18_1135 -> m18_1137  [key=0, style=solid];
m18_1111 -> m18_1112  [key=0, style=solid];
m18_1111 -> m18_1141  [key=2, style=dotted];
m18_1111 -> m18_1113  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1115  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1121  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1122  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1124  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1127  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1128  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1130  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1133  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1134  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1138  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1111 -> m18_1139  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1115 -> m18_1116  [key=0, style=solid];
m18_1122 -> m18_1123  [key=0, style=solid];
m18_1128 -> m18_1129  [key=0, style=solid];
m18_1134 -> m18_1135  [key=0, style=solid];
m18_1121 -> m18_1122  [key=0, style=solid];
m18_1124 -> m18_1125  [key=0, style=solid];
m18_1127 -> m18_1128  [key=0, style=solid];
m18_1130 -> m18_1131  [key=0, style=solid];
m18_1133 -> m18_1134  [key=0, style=solid];
m18_1138 -> m18_1139  [key=0, style=solid];
m18_1138 -> m18_1140  [key=0, style=solid];
m18_1138 -> m18_1142  [key=2, style=dotted];
m18_1139 -> m18_1140  [key=0, style=solid];
m18_1139 -> m18_187  [key=2, style=dotted];
m18_1117 -> m18_1140  [key=0, style=solid];
m18_1118 -> m18_1119  [key=0, style=solid];
m18_1120 -> m18_1121  [key=0, style=solid];
m18_1126 -> m18_1127  [key=0, style=solid];
m18_1132 -> m18_1133  [key=0, style=solid];
m18_1136 -> m18_1140  [key=0, style=solid];
m18_1137 -> m18_1138  [key=0, style=solid];
m18_1140 -> m18_1106  [color=blue, key=0, style=bold];
m18_1095 -> m18_1096  [key=0, style=solid];
m18_1095 -> m18_1098  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_1095 -> m18_1099  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_1095 -> m18_1100  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_1095 -> m18_1107  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_1095 -> m18_1150  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_1096 -> m18_1097  [key=0, style=solid];
m18_1096 -> m18_1103  [key=2, style=dotted];
m18_1096 -> m18_1101  [color=darkseagreen4, key=1, label=time, style=dashed];
m18_1098 -> m18_1099  [key=0, style=solid];
m18_1098 -> m18_1101  [key=0, style=solid];
m18_1098 -> m18_720  [key=2, style=dotted];
m18_1099 -> m18_1100  [key=0, style=solid];
m18_1099 -> m18_1104  [key=2, style=dotted];
m18_1099 -> m18_1105  [key=2, style=dotted];
m18_1099 -> m18_1101  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1100 -> m18_1101  [key=0, style=solid];
m18_1100 -> m18_1059  [key=2, style=dotted];
m18_1097 -> m18_1098  [key=0, style=solid];
m18_1101 -> m18_1102  [key=0, style=solid];
m18_1101 -> m18_1012  [key=2, style=dotted];
m18_1102 -> m18_1095  [color=blue, key=0, style=bold];
m18_50 -> m18_50  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs> clientOnContractDetails", style=bold];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_2  [color=blue, key=0, style=bold];
m18_1349 -> m18_606  [color=darkorchid, key=3, label="Field variable bool _previouslyInResetTime", style=bold];
m18_953 -> m18_954  [key=0, style=solid];
m18_953 -> m18_955  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_953 -> m18_1279  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs historyBar", style=bold];
m18_954 -> m18_955  [key=0, style=solid];
m18_954 -> m18_957  [key=2, style=dotted];
m18_954 -> m18_958  [key=2, style=dotted];
m18_954 -> m18_959  [key=2, style=dotted];
m18_955 -> m18_956  [key=0, style=solid];
m18_955 -> m18_960  [key=2, style=dotted];
m18_955 -> m18_961  [key=2, style=dotted];
m18_956 -> m18_953  [color=blue, key=0, style=bold];
m18_338 -> m18_728  [key=0, style=solid];
m18_338 -> m18_729  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_338 -> m18_731  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_338 -> m18_732  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_338 -> m18_733  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_338 -> m18_735  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_338 -> m18_737  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_338 -> m18_739  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_338 -> m18_61  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m18_338 -> m18_314  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_338 -> m18_315  [color=darkorchid, key=3, label="Parameter variable int ibOrderId", style=bold];
m18_728 -> m18_729  [key=0, style=solid];
m18_728 -> m18_744  [key=2, style=dotted];
m18_728 -> m18_745  [key=2, style=dotted];
m18_728 -> m18_746  [key=2, style=dotted];
m18_728 -> m18_747  [key=2, style=dotted];
m18_728 -> m18_730  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_728 -> m18_735  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_728 -> m18_737  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_728 -> m18_740  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_728 -> m18_742  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_729 -> m18_730  [key=0, style=solid];
m18_729 -> m18_731  [key=0, style=solid];
m18_731 -> m18_732  [key=0, style=solid];
m18_731 -> m18_734  [color=darkseagreen4, key=1, label=limitOrder, style=dashed];
m18_731 -> m18_735  [color=darkseagreen4, key=1, label=limitOrder, style=dashed];
m18_732 -> m18_733  [key=0, style=solid];
m18_732 -> m18_736  [color=darkseagreen4, key=1, label=stopMarketOrder, style=dashed];
m18_732 -> m18_737  [color=darkseagreen4, key=1, label=stopMarketOrder, style=dashed];
m18_733 -> m18_734  [key=0, style=solid];
m18_733 -> m18_738  [color=darkseagreen4, key=1, label=stopLimitOrder, style=dashed];
m18_733 -> m18_740  [color=darkseagreen4, key=1, label=stopLimitOrder, style=dashed];
m18_733 -> m18_741  [color=darkseagreen4, key=1, label=stopLimitOrder, style=dashed];
m18_735 -> m18_742  [key=0, style=solid];
m18_735 -> m18_364  [key=2, style=dotted];
m18_735 -> m18_748  [key=2, style=dotted];
m18_735 -> m18_749  [key=2, style=dotted];
m18_735 -> m18_735  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_737 -> m18_742  [key=0, style=solid];
m18_737 -> m18_364  [key=2, style=dotted];
m18_737 -> m18_748  [key=2, style=dotted];
m18_737 -> m18_749  [key=2, style=dotted];
m18_737 -> m18_737  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_739 -> m18_740  [key=0, style=solid];
m18_739 -> m18_364  [key=2, style=dotted];
m18_739 -> m18_741  [color=darkseagreen4, key=1, label=minTick, style=dashed];
m18_730 -> m18_731  [key=0, style=solid];
m18_730 -> m18_730  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_730 -> m18_735  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_730 -> m18_737  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_730 -> m18_740  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_730 -> m18_742  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_740 -> m18_741  [key=0, style=solid];
m18_740 -> m18_748  [key=2, style=dotted];
m18_740 -> m18_749  [key=2, style=dotted];
m18_740 -> m18_740  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_742 -> m18_743  [key=0, style=solid];
m18_734 -> m18_735  [key=0, style=solid];
m18_734 -> m18_736  [key=0, style=solid];
m18_736 -> m18_737  [key=0, style=solid];
m18_736 -> m18_738  [key=0, style=solid];
m18_738 -> m18_739  [key=0, style=solid];
m18_738 -> m18_742  [key=0, style=solid];
m18_741 -> m18_742  [key=0, style=solid];
m18_741 -> m18_748  [key=2, style=dotted];
m18_741 -> m18_749  [key=2, style=dotted];
m18_741 -> m18_741  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m18_743 -> m18_338  [color=blue, key=0, style=bold];
m18_1143 -> m18_1144  [key=0, style=solid];
m18_1143 -> m18_1146  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_1143 -> m18_1147  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_1143 -> m18_1143  [color=darkorchid, key=3, label="method methodReturn int AdjustQuantity", style=bold];
m18_1143 -> m18_1155  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType type", style=bold];
m18_1144 -> m18_1145  [key=0, style=solid];
m18_1144 -> m18_1147  [key=0, style=solid];
m18_1146 -> m18_1148  [key=0, style=solid];
m18_1147 -> m18_1148  [key=0, style=solid];
m18_1145 -> m18_1146  [key=0, style=solid];
m18_1148 -> m18_1143  [color=blue, key=0, style=bold];
m18_177 -> m18_997  [key=0, style=solid];
m18_997 -> m18_998  [key=0, style=solid];
m18_997 -> m18_996  [key=2, style=dotted];
m18_998 -> m18_177  [color=blue, key=0, style=bold];
m18_110 -> m18_111  [key=0, style=solid];
m18_110 -> m18_112  [color=red, key=3, label="method methodReturn System.Collections.Generic.List<QuantConnect.Holding> GetAccountHoldings", style=bold];
m18_111 -> m18_112  [color=red, key=0, style=solid];
m18_111 -> m18_117  [key=2, style=dotted];
m18_112 -> m18_113  [color=red, key=0, style=solid];
m18_112 -> m18_118  [color=red, key=2, style=dotted];
m18_112 -> m18_119  [color=red, key=2, style=dotted];
m18_112 -> m18_120  [color=red, key=2, style=dotted];
m18_112 -> m18_123  [color=red, key=1, label="lambda expression", style=dashed];
m18_112 -> m18_127  [color=red, key=1, label="lambda expression", style=dashed];
m18_112 -> m18_115  [color=red, key=1, label=holdings, style=dashed];
m18_113 -> m18_114  [key=0, style=solid];
m18_113 -> m18_118  [key=2, style=dotted];
m18_113 -> m18_119  [key=2, style=dotted];
m18_113 -> m18_121  [key=2, style=dotted];
m18_113 -> m18_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_113 -> m18_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_113 -> m18_113  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Symbol ", style=bold];
m18_115 -> m18_116  [key=0, style=solid];
m18_114 -> m18_115  [key=0, style=solid];
m18_114 -> m18_122  [key=2, style=dotted];
m18_116 -> m18_110  [color=blue, key=0, style=bold];
m18_157 -> m18_437  [key=0, style=solid];
m18_157 -> m18_439  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_157 -> m18_440  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_157 -> m18_441  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_157 -> m18_444  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_157 -> m18_452  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_157 -> m18_458  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_157 -> m18_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_157 -> m18_492  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_157 -> m18_438  [color=darkorchid, key=3, label="method methodReturn decimal GetUsdConversion", style=bold];
m18_437 -> m18_438  [key=0, style=solid];
m18_437 -> m18_439  [key=0, style=solid];
m18_439 -> m18_440  [key=0, style=solid];
m18_439 -> m18_36  [key=2, style=dotted];
m18_440 -> m18_441  [key=0, style=solid];
m18_440 -> m18_442  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m18_440 -> m18_510  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m18_440 -> m18_445  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m18_441 -> m18_442  [key=0, style=solid];
m18_441 -> m18_510  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m18_444 -> m18_498  [key=0, style=solid];
m18_444 -> m18_241  [key=2, style=dotted];
m18_452 -> m18_498  [key=0, style=solid];
m18_452 -> m18_241  [key=2, style=dotted];
m18_458 -> m18_459  [key=0, style=solid];
m18_458 -> m18_513  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_458 -> m18_514  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_458 -> m18_515  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m18_458 -> m18_460  [color=darkseagreen4, key=1, label=clientOnTickPrice, style=dashed];
m18_458 -> m18_464  [color=darkseagreen4, key=1, label=clientOnTickPrice, style=dashed];
m18_458 -> m18_465  [color=darkseagreen4, key=1, label=rate, style=dashed];
m18_458 -> m18_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m18_458 -> m18_458  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs> clientOnTickPrice", style=bold];
m18_492 -> m18_493  [key=0, style=solid];
m18_492 -> m18_36  [key=2, style=dotted];
m18_438 -> m18_498  [key=0, style=solid];
m18_442 -> m18_443  [key=0, style=solid];
m18_442 -> m18_407  [key=2, style=dotted];
m18_442 -> m18_509  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_442 -> m18_445  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m18_442 -> m18_446  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m18_442 -> m18_459  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m18_442 -> m18_476  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m18_442 -> m18_490  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m18_445 -> m18_446  [key=0, style=solid];
m18_445 -> m18_497  [color=darkseagreen4, key=1, label=inverted, style=dashed];
m18_443 -> m18_444  [key=0, style=solid];
m18_443 -> m18_445  [key=0, style=solid];
m18_446 -> m18_447  [key=0, style=solid];
m18_446 -> m18_499  [key=2, style=dotted];
m18_459 -> m18_460  [key=0, style=solid];
m18_459 -> m18_501  [key=2, style=dotted];
m18_476 -> m18_477  [key=0, style=solid];
m18_476 -> m18_501  [key=2, style=dotted];
m18_490 -> m18_498  [key=0, style=solid];
m18_490 -> m18_507  [key=2, style=dotted];
m18_497 -> m18_498  [key=0, style=solid];
m18_447 -> m18_448  [key=0, style=solid];
m18_447 -> m18_331  [key=2, style=dotted];
m18_447 -> m18_449  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_447 -> m18_450  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_447 -> m18_457  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_447 -> m18_461  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_447 -> m18_472  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_447 -> m18_481  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_448 -> m18_449  [key=0, style=solid];
m18_448 -> m18_354  [color=darkorchid, key=3, label="Local variable ContractDetails details", style=bold];
m18_449 -> m18_450  [key=0, style=solid];
m18_449 -> m18_451  [key=0, style=solid];
m18_449 -> m18_340  [key=2, style=dotted];
m18_449 -> m18_353  [key=2, style=dotted];
m18_450 -> m18_451  [key=0, style=solid];
m18_450 -> m18_354  [key=2, style=dotted];
m18_457 -> m18_458  [key=0, style=solid];
m18_461 -> m18_462  [key=0, style=solid];
m18_461 -> m18_97  [key=2, style=dotted];
m18_461 -> m18_502  [key=2, style=dotted];
m18_472 -> m18_473  [key=0, style=solid];
m18_481 -> m18_482  [key=0, style=solid];
m18_481 -> m18_176  [key=2, style=dotted];
m18_481 -> m18_97  [key=2, style=dotted];
m18_481 -> m18_504  [key=2, style=dotted];
m18_451 -> m18_452  [key=0, style=solid];
m18_451 -> m18_453  [key=0, style=solid];
m18_453 -> m18_454  [key=0, style=solid];
m18_453 -> m18_453  [color=darkorchid, key=3, label="Local variable decimal rate", style=bold];
m18_454 -> m18_455  [key=0, style=solid];
m18_454 -> m18_98  [key=2, style=dotted];
m18_454 -> m18_458  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_454 -> m18_516  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_454 -> m18_462  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_454 -> m18_469  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_454 -> m18_474  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_454 -> m18_525  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_454 -> m18_482  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_455 -> m18_456  [key=0, style=solid];
m18_455 -> m18_462  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m18_455 -> m18_463  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m18_455 -> m18_482  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m18_455 -> m18_483  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m18_455 -> m18_373  [color=darkorchid, key=3, label="Local variable int requestTimeout", style=bold];
m18_462 -> m18_463  [key=0, style=solid];
m18_462 -> m18_464  [key=0, style=solid];
m18_462 -> m18_100  [key=2, style=dotted];
m18_469 -> m18_470  [key=0, style=solid];
m18_469 -> m18_503  [key=2, style=dotted];
m18_474 -> m18_475  [key=0, style=solid];
m18_474 -> m18_524  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs", style=dashed];
m18_474 -> m18_478  [color=darkseagreen4, key=1, label=clientOnHistoricalDataEnd, style=dashed];
m18_474 -> m18_494  [color=darkseagreen4, key=1, label=clientOnHistoricalDataEnd, style=dashed];
m18_474 -> m18_474  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd", style=bold];
m18_482 -> m18_483  [key=0, style=solid];
m18_482 -> m18_484  [key=0, style=solid];
m18_482 -> m18_100  [key=2, style=dotted];
m18_456 -> m18_457  [key=0, style=solid];
m18_456 -> m18_500  [key=2, style=dotted];
m18_456 -> m18_458  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m18_456 -> m18_513  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m18_456 -> m18_461  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m18_463 -> m18_464  [key=0, style=solid];
m18_463 -> m18_387  [key=2, style=dotted];
m18_483 -> m18_484  [key=0, style=solid];
m18_483 -> m18_387  [key=2, style=dotted];
m18_460 -> m18_461  [key=0, style=solid];
m18_464 -> m18_465  [key=0, style=solid];
m18_465 -> m18_466  [key=0, style=solid];
m18_465 -> m18_497  [key=0, style=solid];
m18_466 -> m18_467  [key=0, style=solid];
m18_467 -> m18_468  [key=0, style=solid];
m18_467 -> m18_485  [color=darkseagreen4, key=1, label=pacingDelaySeconds, style=dashed];
m18_467 -> m18_486  [color=darkseagreen4, key=1, label=pacingDelaySeconds, style=dashed];
m18_467 -> m18_373  [color=darkorchid, key=3, label="Local variable int pacingDelaySeconds", style=bold];
m18_468 -> m18_469  [key=0, style=solid];
m18_485 -> m18_486  [key=0, style=solid];
m18_485 -> m18_235  [key=2, style=dotted];
m18_486 -> m18_493  [key=0, style=solid];
m18_486 -> m18_242  [key=2, style=dotted];
m18_470 -> m18_471  [key=0, style=solid];
m18_470 -> m18_97  [key=2, style=dotted];
m18_470 -> m18_473  [color=darkseagreen4, key=1, label=data, style=dashed];
m18_470 -> m18_521  [color=darkseagreen4, key=1, label=data, style=dashed];
m18_470 -> m18_487  [color=darkseagreen4, key=1, label=data, style=dashed];
m18_471 -> m18_472  [key=0, style=solid];
m18_471 -> m18_500  [key=2, style=dotted];
m18_471 -> m18_473  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_471 -> m18_520  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_471 -> m18_474  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_471 -> m18_524  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_471 -> m18_481  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_473 -> m18_474  [key=0, style=solid];
m18_473 -> m18_520  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m18_473 -> m18_521  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m18_473 -> m18_477  [color=darkseagreen4, key=1, label=clientOnHistoricalData, style=dashed];
m18_473 -> m18_493  [color=darkseagreen4, key=1, label=clientOnHistoricalData, style=dashed];
m18_473 -> m18_473  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs> clientOnHistoricalData", style=bold];
m18_487 -> m18_488  [key=0, style=solid];
m18_487 -> m18_505  [key=2, style=dotted];
m18_487 -> m18_531  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_477 -> m18_478  [key=0, style=solid];
m18_493 -> m18_494  [key=0, style=solid];
m18_475 -> m18_476  [key=0, style=solid];
m18_475 -> m18_528  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m18_475 -> m18_479  [color=darkseagreen4, key=1, label=clientOnError, style=dashed];
m18_475 -> m18_484  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m18_475 -> m18_495  [color=darkseagreen4, key=1, label=clientOnError, style=dashed];
m18_475 -> m18_496  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m18_475 -> m18_475  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs> clientOnError", style=bold];
m18_478 -> m18_479  [key=0, style=solid];
m18_494 -> m18_495  [key=0, style=solid];
m18_479 -> m18_480  [key=0, style=solid];
m18_484 -> m18_485  [key=0, style=solid];
m18_484 -> m18_487  [key=0, style=solid];
m18_495 -> m18_496  [key=0, style=solid];
m18_496 -> m18_467  [key=0, style=solid];
m18_496 -> m18_497  [key=0, style=solid];
m18_480 -> m18_481  [key=0, style=solid];
m18_480 -> m18_480  [color=darkorchid, key=3, label="Local variable string requestSpan", style=bold];
m18_488 -> m18_489  [key=0, style=solid];
m18_488 -> m18_506  [key=2, style=dotted];
m18_488 -> m18_491  [color=darkseagreen4, key=1, label=mostRecentQuote, style=dashed];
m18_489 -> m18_490  [key=0, style=solid];
m18_489 -> m18_491  [key=0, style=solid];
m18_491 -> m18_492  [key=0, style=solid];
m18_491 -> m18_508  [key=2, style=dotted];
m18_491 -> m18_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m18_498 -> m18_157  [color=blue, key=0, style=bold];
m18_929 -> m18_930  [key=0, style=solid];
m18_929 -> m18_933  [color=darkorchid, key=3, label="method methodReturn string ConvertResolution", style=bold];
m18_929 -> m18_935  [color=darkorchid, key=3, label="method methodReturn string ConvertResolution", style=bold];
m18_929 -> m18_937  [color=darkorchid, key=3, label="method methodReturn string ConvertResolution", style=bold];
m18_929 -> m18_939  [color=darkorchid, key=3, label="method methodReturn string ConvertResolution", style=bold];
m18_930 -> m18_931  [key=0, style=solid];
m18_930 -> m18_934  [key=0, style=solid];
m18_930 -> m18_936  [key=0, style=solid];
m18_930 -> m18_938  [key=0, style=solid];
m18_931 -> m18_932  [key=0, style=solid];
m18_934 -> m18_935  [key=0, style=solid];
m18_936 -> m18_937  [key=0, style=solid];
m18_938 -> m18_939  [key=0, style=solid];
m18_932 -> m18_933  [key=0, style=solid];
m18_933 -> m18_940  [key=0, style=solid];
m18_935 -> m18_940  [key=0, style=solid];
m18_937 -> m18_940  [key=0, style=solid];
m18_939 -> m18_940  [key=0, style=solid];
m18_940 -> m18_929  [color=blue, key=0, style=bold];
m18_810 -> m18_891  [key=0, style=solid];
m18_810 -> m18_904  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m18_810 -> m18_1192  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType type", style=bold];
m18_810 -> m18_893  [color=darkorchid, key=3, label="method methodReturn string ConvertSecurityType", style=bold];
m18_810 -> m18_895  [color=darkorchid, key=3, label="method methodReturn string ConvertSecurityType", style=bold];
m18_810 -> m18_897  [color=darkorchid, key=3, label="method methodReturn string ConvertSecurityType", style=bold];
m18_810 -> m18_899  [color=darkorchid, key=3, label="method methodReturn string ConvertSecurityType", style=bold];
m18_810 -> m18_901  [color=darkorchid, key=3, label="method methodReturn string ConvertSecurityType", style=bold];
m18_891 -> m18_892  [key=0, style=solid];
m18_891 -> m18_894  [key=0, style=solid];
m18_891 -> m18_896  [key=0, style=solid];
m18_891 -> m18_898  [key=0, style=solid];
m18_891 -> m18_900  [key=0, style=solid];
m18_891 -> m18_902  [key=0, style=solid];
m18_891 -> m18_904  [key=0, style=solid];
m18_904 -> m18_905  [key=0, style=solid];
m18_904 -> m18_783  [key=2, style=dotted];
m18_892 -> m18_893  [key=0, style=solid];
m18_894 -> m18_895  [key=0, style=solid];
m18_896 -> m18_897  [key=0, style=solid];
m18_898 -> m18_899  [key=0, style=solid];
m18_900 -> m18_901  [key=0, style=solid];
m18_902 -> m18_903  [key=0, style=solid];
m18_893 -> m18_905  [key=0, style=solid];
m18_895 -> m18_905  [key=0, style=solid];
m18_897 -> m18_905  [key=0, style=solid];
m18_899 -> m18_905  [key=0, style=solid];
m18_901 -> m18_905  [key=0, style=solid];
m18_903 -> m18_905  [key=0, style=solid];
m18_903 -> m18_335  [key=2, style=dotted];
m18_905 -> m18_810  [color=blue, key=0, style=bold];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_72  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_70 -> m18_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_70 -> m18_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_70 -> m18_64  [color=darkorchid, key=3, label="method methodReturn bool CancelOrder", style=bold];
m18_70 -> m18_55  [color=darkorchid, key=3, label="method methodReturn bool CancelOrder", style=bold];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_36  [key=2, style=dotted];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_76  [key=0, style=solid];
m18_72 -> m18_79  [key=0, style=solid];
m18_74 -> m18_75  [key=0, style=solid];
m18_77 -> m18_78  [key=0, style=solid];
m18_77 -> m18_52  [key=2, style=dotted];
m18_73 -> m18_74  [key=0, style=solid];
m18_73 -> m18_81  [key=2, style=dotted];
m18_73 -> m18_75  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_76 -> m18_77  [key=0, style=solid];
m18_79 -> m18_80  [key=0, style=solid];
m18_75 -> m18_72  [key=0, style=solid];
m18_75 -> m18_82  [key=2, style=dotted];
m18_78 -> m18_80  [key=0, style=solid];
m18_80 -> m18_70  [color=blue, key=0, style=bold];
m18_773 -> m18_972  [key=0, style=solid];
m18_773 -> m18_973  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_773 -> m18_976  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_773 -> m18_979  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_773 -> m18_980  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_773 -> m18_981  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_773 -> m18_750  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_972 -> m18_973  [key=0, style=solid];
m18_972 -> m18_971  [key=2, style=dotted];
m18_972 -> m18_974  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_972 -> m18_975  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_972 -> m18_977  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_972 -> m18_978  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_972 -> m18_982  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_972 -> m18_983  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_973 -> m18_974  [key=0, style=solid];
m18_973 -> m18_977  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m18_973 -> m18_982  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m18_973 -> m18_983  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m18_976 -> m18_977  [key=0, style=solid];
m18_976 -> m18_959  [key=2, style=dotted];
m18_979 -> m18_980  [key=0, style=solid];
m18_979 -> m18_959  [key=2, style=dotted];
m18_979 -> m18_982  [color=darkseagreen4, key=1, label=expiryDate, style=dashed];
m18_980 -> m18_981  [key=0, style=solid];
m18_980 -> m18_982  [color=darkseagreen4, key=1, label=right, style=dashed];
m18_981 -> m18_982  [key=0, style=solid];
m18_981 -> m18_508  [key=2, style=dotted];
m18_974 -> m18_975  [key=0, style=solid];
m18_974 -> m18_977  [color=darkseagreen4, key=1, label=market, style=dashed];
m18_974 -> m18_982  [color=darkseagreen4, key=1, label=market, style=dashed];
m18_974 -> m18_983  [color=darkseagreen4, key=1, label=market, style=dashed];
m18_975 -> m18_976  [key=0, style=solid];
m18_975 -> m18_978  [key=0, style=solid];
m18_977 -> m18_984  [key=0, style=solid];
m18_977 -> m18_985  [key=2, style=dotted];
m18_978 -> m18_979  [key=0, style=solid];
m18_978 -> m18_983  [key=0, style=solid];
m18_982 -> m18_984  [key=0, style=solid];
m18_982 -> m18_985  [key=2, style=dotted];
m18_983 -> m18_984  [key=0, style=solid];
m18_983 -> m18_985  [key=2, style=dotted];
m18_984 -> m18_773  [color=blue, key=0, style=bold];
m18_816 -> m18_817  [key=0, style=solid];
m18_816 -> m18_824  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_816 -> m18_370  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderDirection ConvertOrderDirection", style=bold];
m18_816 -> m18_193  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderDirection ConvertOrderDirection", style=bold];
m18_816 -> m18_822  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderDirection ConvertOrderDirection", style=bold];
m18_817 -> m18_818  [key=0, style=solid];
m18_817 -> m18_820  [key=0, style=solid];
m18_817 -> m18_822  [key=0, style=solid];
m18_817 -> m18_824  [key=0, style=solid];
m18_824 -> m18_825  [key=0, style=solid];
m18_824 -> m18_826  [key=2, style=dotted];
m18_818 -> m18_819  [key=0, style=solid];
m18_820 -> m18_821  [key=0, style=solid];
m18_822 -> m18_823  [key=0, style=solid];
m18_819 -> m18_825  [key=0, style=solid];
m18_821 -> m18_825  [key=0, style=solid];
m18_823 -> m18_825  [key=0, style=solid];
m18_825 -> m18_816  [color=blue, key=0, style=bold];
m18_25 -> m18_1001  [key=0, style=solid];
m18_1001 -> m18_1002  [key=0, style=solid];
m18_1001 -> m18_996  [key=2, style=dotted];
m18_1002 -> m18_25  [color=blue, key=0, style=bold];
m18_305 -> m18_306  [color=red, key=0, style=solid];
m18_306 -> m18_307  [color=red, key=0, style=solid];
m18_306 -> m18_308  [color=red, key=2, style=dotted];
m18_307 -> m18_305  [color=blue, key=0, style=bold];
m18_722 -> m18_723  [key=0, style=solid];
m18_722 -> m18_724  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs", style=dashed];
m18_723 -> m18_724  [key=0, style=solid];
m18_723 -> m18_503  [key=2, style=dotted];
m18_724 -> m18_725  [color=red, key=0, style=solid];
m18_724 -> m18_727  [key=2, style=dotted];
m18_725 -> m18_726  [color=red, key=0, style=solid];
m18_726 -> m18_722  [color=blue, key=0, style=bold];
m18_364 -> m18_365  [key=0, style=solid];
m18_364 -> m18_366  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_364 -> m18_368  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_364 -> m18_370  [color=darkorchid, key=3, label="method methodReturn decimal GetMinTick", style=bold];
m18_364 -> m18_338  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_365 -> m18_366  [key=0, style=solid];
m18_365 -> m18_354  [color=darkorchid, key=3, label="Local variable ContractDetails details", style=bold];
m18_366 -> m18_367  [key=0, style=solid];
m18_366 -> m18_368  [key=0, style=solid];
m18_366 -> m18_340  [key=2, style=dotted];
m18_366 -> m18_353  [key=2, style=dotted];
m18_368 -> m18_369  [key=0, style=solid];
m18_368 -> m18_354  [key=2, style=dotted];
m18_368 -> m18_371  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_367 -> m18_372  [key=0, style=solid];
m18_369 -> m18_370  [key=0, style=solid];
m18_369 -> m18_371  [key=0, style=solid];
m18_371 -> m18_372  [key=0, style=solid];
m18_370 -> m18_372  [key=0, style=solid];
m18_372 -> m18_364  [color=blue, key=0, style=bold];
m18_51 -> m18_575  [key=0, style=solid];
m18_575 -> m18_576  [key=0, style=solid];
m18_576 -> m18_577  [key=0, style=solid];
m18_576 -> m18_589  [key=2, style=dotted];
m18_576 -> m18_571  [key=2, style=dotted];
m18_577 -> m18_578  [key=0, style=solid];
m18_577 -> m18_36  [key=2, style=dotted];
m18_578 -> m18_579  [key=0, style=solid];
m18_578 -> m18_236  [key=2, style=dotted];
m18_579 -> m18_580  [key=0, style=solid];
m18_579 -> m18_36  [key=2, style=dotted];
m18_580 -> m18_581  [key=0, style=solid];
m18_580 -> m18_590  [key=2, style=dotted];
m18_581 -> m18_582  [key=0, style=solid];
m18_581 -> m18_36  [key=2, style=dotted];
m18_582 -> m18_583  [key=0, style=solid];
m18_582 -> m18_591  [key=2, style=dotted];
m18_583 -> m18_584  [key=0, style=solid];
m18_583 -> m18_36  [key=2, style=dotted];
m18_584 -> m18_585  [key=0, style=solid];
m18_584 -> m18_188  [key=2, style=dotted];
m18_585 -> m18_586  [key=0, style=solid];
m18_585 -> m18_36  [key=2, style=dotted];
m18_586 -> m18_587  [key=0, style=solid];
m18_586 -> m18_592  [key=2, style=dotted];
m18_587 -> m18_588  [key=0, style=solid];
m18_587 -> m18_589  [key=2, style=dotted];
m18_587 -> m18_571  [key=2, style=dotted];
m18_588 -> m18_51  [color=blue, key=0, style=bold];
m18_534 -> m18_535  [key=0, style=solid];
m18_534 -> m18_536  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m18_534 -> m18_537  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m18_535 -> m18_536  [key=0, style=solid];
m18_535 -> m18_540  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_535 -> m18_542  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_535 -> m18_560  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_535 -> m18_561  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_536 -> m18_537  [key=0, style=solid];
m18_536 -> m18_542  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_544  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_546  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_548  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_551  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_552  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_556  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_558  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_559  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_536 -> m18_565  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m18_537 -> m18_538  [key=0, style=solid];
m18_540 -> m18_541  [key=0, style=solid];
m18_540 -> m18_542  [key=0, style=solid];
m18_540 -> m18_353  [key=2, style=dotted];
m18_542 -> m18_543  [key=0, style=solid];
m18_542 -> m18_36  [key=2, style=dotted];
m18_560 -> m18_561  [key=0, style=solid];
m18_560 -> m18_36  [key=2, style=dotted];
m18_561 -> m18_562  [key=0, style=solid];
m18_561 -> m18_572  [key=2, style=dotted];
m18_561 -> m18_563  [color=darkseagreen4, key=1, label=order, style=dashed];
m18_544 -> m18_545  [key=0, style=solid];
m18_544 -> m18_546  [key=0, style=solid];
m18_544 -> m18_568  [key=2, style=dotted];
m18_546 -> m18_547  [key=0, style=solid];
m18_546 -> m18_548  [key=0, style=solid];
m18_546 -> m18_568  [key=2, style=dotted];
m18_548 -> m18_549  [key=0, style=solid];
m18_548 -> m18_551  [key=0, style=solid];
m18_551 -> m18_552  [key=0, style=solid];
m18_551 -> m18_556  [key=0, style=solid];
m18_552 -> m18_553  [key=0, style=solid];
m18_552 -> m18_570  [key=2, style=dotted];
m18_552 -> m18_571  [key=2, style=dotted];
m18_556 -> m18_557  [key=0, style=solid];
m18_556 -> m18_558  [key=0, style=solid];
m18_558 -> m18_559  [key=0, style=solid];
m18_558 -> m18_565  [key=0, style=solid];
m18_558 -> m18_568  [key=2, style=dotted];
m18_559 -> m18_560  [key=0, style=solid];
m18_559 -> m18_563  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_565 -> m18_566  [key=0, style=solid];
m18_565 -> m18_570  [key=2, style=dotted];
m18_565 -> m18_571  [key=2, style=dotted];
m18_538 -> m18_539  [key=0, style=solid];
m18_538 -> m18_567  [key=2, style=dotted];
m18_538 -> m18_538  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_538 -> m18_541  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_538 -> m18_542  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_538 -> m18_552  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_538 -> m18_559  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_538 -> m18_565  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_539 -> m18_540  [key=0, style=solid];
m18_541 -> m18_542  [key=0, style=solid];
m18_541 -> m18_541  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_541 -> m18_552  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_541 -> m18_559  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_541 -> m18_565  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m18_543 -> m18_544  [key=0, style=solid];
m18_543 -> m18_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m18_543 -> m18_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m18_545 -> m18_548  [key=0, style=solid];
m18_545 -> m18_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m18_545 -> m18_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m18_547 -> m18_548  [key=0, style=solid];
m18_547 -> m18_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m18_547 -> m18_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m18_549 -> m18_550  [key=0, style=solid];
m18_550 -> m18_558  [key=0, style=solid];
m18_550 -> m18_569  [key=2, style=dotted];
m18_553 -> m18_554  [key=0, style=solid];
m18_553 -> m18_36  [key=2, style=dotted];
m18_554 -> m18_555  [key=0, style=solid];
m18_554 -> m18_35  [key=2, style=dotted];
m18_555 -> m18_566  [key=0, style=solid];
m18_557 -> m18_558  [key=0, style=solid];
m18_557 -> m18_501  [key=2, style=dotted];
m18_563 -> m18_564  [key=0, style=solid];
m18_563 -> m18_573  [key=2, style=dotted];
m18_562 -> m18_563  [key=0, style=solid];
m18_562 -> m18_370  [color=darkorchid, key=3, label="Local variable int orderFee", style=bold];
m18_564 -> m18_565  [key=0, style=solid];
m18_564 -> m18_574  [key=2, style=dotted];
m18_566 -> m18_534  [color=blue, key=0, style=bold];
m18_727 -> m18_962  [key=0, style=solid];
m18_727 -> m18_963  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs", style=dashed];
m18_727 -> m18_964  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs", style=dashed];
m18_727 -> m18_967  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs", style=dashed];
m18_727 -> m18_722  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs e", style=bold];
m18_962 -> m18_963  [key=0, style=solid];
m18_962 -> m18_969  [key=2, style=dotted];
m18_962 -> m18_967  [color=darkseagreen4, key=1, label=currencySymbol, style=dashed];
m18_963 -> m18_964  [key=0, style=solid];
m18_963 -> m18_773  [key=2, style=dotted];
m18_963 -> m18_967  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_964 -> m18_965  [key=0, style=solid];
m18_964 -> m18_508  [key=2, style=dotted];
m18_964 -> m18_967  [color=darkseagreen4, key=1, label=multiplier, style=dashed];
m18_967 -> m18_968  [key=0, style=solid];
m18_967 -> m18_970  [key=2, style=dotted];
m18_967 -> m18_971  [key=2, style=dotted];
m18_967 -> m18_518  [key=2, style=dotted];
m18_965 -> m18_966  [key=0, style=solid];
m18_965 -> m18_967  [key=0, style=solid];
m18_966 -> m18_967  [key=0, style=solid];
m18_968 -> m18_727  [color=blue, key=0, style=bold];
m18_1018 -> m18_1019  [key=0, style=solid];
m18_1018 -> m18_1024  [color=crimson, key=0, style=bold];
m18_1018 -> m18_1028  [color=crimson, key=0, style=bold];
m18_1019 -> m18_1020  [key=0, style=solid];
m18_1024 -> m18_1025  [key=0, style=solid];
m18_1028 -> m18_1023  [key=0, style=solid];
m18_1020 -> m18_1021  [key=0, style=solid];
m18_1021 -> m18_1022  [key=0, style=solid];
m18_1021 -> m18_1030  [key=2, style=dotted];
m18_1021 -> m18_1023  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m18_1022 -> m18_1023  [key=0, style=solid];
m18_1022 -> m18_1031  [key=2, style=dotted];
m18_1023 -> m18_1024  [key=0, style=solid];
m18_1023 -> m18_1029  [key=0, style=solid];
m18_1023 -> m18_1025  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1023 -> m18_1026  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1023 -> m18_1027  [color=darkseagreen4, key=1, label=tick, style=dashed];
m18_1025 -> m18_1026  [key=0, style=solid];
m18_1025 -> m18_1023  [key=0, style=solid];
m18_1025 -> m18_815  [key=2, style=dotted];
m18_1026 -> m18_1027  [key=0, style=solid];
m18_1026 -> m18_1032  [key=2, style=dotted];
m18_1026 -> m18_1028  [color=darkseagreen4, key=1, label=underlyingTick, style=dashed];
m18_1027 -> m18_1028  [key=0, style=solid];
m18_1029 -> m18_1018  [color=blue, key=0, style=bold];
m18_1056 -> m18_1087  [key=0, style=solid];
m18_1056 -> m18_1088  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_1056 -> m18_1089  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_1056 -> m18_1033  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_1056 -> m18_1062  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_1056 -> m18_64  [color=darkorchid, key=3, label="method methodReturn bool CanSubscribe", style=bold];
m18_1087 -> m18_1088  [key=0, style=solid];
m18_1087 -> m18_1091  [color=darkseagreen4, key=1, label=market, style=dashed];
m18_1088 -> m18_1089  [key=0, style=solid];
m18_1088 -> m18_1091  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m18_1089 -> m18_1090  [key=0, style=solid];
m18_1089 -> m18_1091  [key=0, style=solid];
m18_1089 -> m18_1093  [key=2, style=dotted];
m18_1089 -> m18_1094  [key=2, style=dotted];
m18_1091 -> m18_1092  [key=0, style=solid];
m18_1090 -> m18_1092  [key=0, style=solid];
m18_1092 -> m18_1056  [color=blue, key=0, style=bold];
m18_941 -> m18_942  [key=0, style=solid];
m18_941 -> m18_945  [color=darkorchid, key=3, label="method methodReturn string ConvertResolutionToDuration", style=bold];
m18_941 -> m18_947  [color=darkorchid, key=3, label="method methodReturn string ConvertResolutionToDuration", style=bold];
m18_941 -> m18_949  [color=darkorchid, key=3, label="method methodReturn string ConvertResolutionToDuration", style=bold];
m18_941 -> m18_951  [color=darkorchid, key=3, label="method methodReturn string ConvertResolutionToDuration", style=bold];
m18_942 -> m18_943  [key=0, style=solid];
m18_942 -> m18_946  [key=0, style=solid];
m18_942 -> m18_948  [key=0, style=solid];
m18_942 -> m18_950  [key=0, style=solid];
m18_943 -> m18_944  [key=0, style=solid];
m18_946 -> m18_947  [key=0, style=solid];
m18_948 -> m18_949  [key=0, style=solid];
m18_950 -> m18_951  [key=0, style=solid];
m18_944 -> m18_945  [key=0, style=solid];
m18_945 -> m18_952  [key=0, style=solid];
m18_947 -> m18_952  [key=0, style=solid];
m18_949 -> m18_952  [key=0, style=solid];
m18_951 -> m18_952  [key=0, style=solid];
m18_952 -> m18_941  [color=blue, key=0, style=bold];
m18_61 -> m18_309  [key=0, style=solid];
m18_61 -> m18_312  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_61 -> m18_314  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_61 -> m18_316  [color=darkseagreen4, key=1, label=bool, style=dashed];
m18_61 -> m18_318  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_61 -> m18_320  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_61 -> m18_321  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_61 -> m18_324  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_61 -> m18_325  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_61 -> m18_326  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_61 -> m18_53  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m18_61 -> m18_62  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m18_61 -> m18_55  [color=darkorchid, key=3, label="Parameter variable bool needsNewId", style=bold];
m18_61 -> m18_64  [color=darkorchid, key=3, label="Parameter variable bool needsNewId", style=bold];
m18_309 -> m18_310  [key=0, style=solid];
m18_309 -> m18_188  [key=2, style=dotted];
m18_312 -> m18_313  [key=0, style=solid];
m18_312 -> m18_314  [key=0, style=solid];
m18_314 -> m18_315  [key=0, style=solid];
m18_314 -> m18_331  [key=2, style=dotted];
m18_314 -> m18_323  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_314 -> m18_325  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_314 -> m18_326  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_314 -> m18_327  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_316 -> m18_317  [key=0, style=solid];
m18_316 -> m18_320  [key=0, style=solid];
m18_318 -> m18_319  [key=0, style=solid];
m18_318 -> m18_333  [key=2, style=dotted];
m18_318 -> m18_187  [key=2, style=dotted];
m18_320 -> m18_321  [key=0, style=solid];
m18_320 -> m18_322  [key=0, style=solid];
m18_320 -> m18_334  [key=2, style=dotted];
m18_321 -> m18_323  [key=0, style=solid];
m18_321 -> m18_81  [key=2, style=dotted];
m18_321 -> m18_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m18_321 -> m18_326  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m18_324 -> m18_325  [key=0, style=solid];
m18_324 -> m18_326  [key=0, style=solid];
m18_325 -> m18_328  [key=0, style=solid];
m18_325 -> m18_336  [key=2, style=dotted];
m18_325 -> m18_337  [key=2, style=dotted];
m18_326 -> m18_327  [key=0, style=solid];
m18_326 -> m18_338  [key=2, style=dotted];
m18_310 -> m18_311  [key=0, style=solid];
m18_310 -> m18_312  [key=0, style=solid];
m18_311 -> m18_328  [key=0, style=solid];
m18_311 -> m18_329  [key=2, style=dotted];
m18_313 -> m18_314  [key=0, style=solid];
m18_313 -> m18_330  [key=2, style=dotted];
m18_315 -> m18_316  [key=0, style=solid];
m18_315 -> m18_323  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m18_315 -> m18_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m18_315 -> m18_326  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m18_315 -> m18_317  [color=darkorchid, key=3, label="Local variable int ibOrderId", style=bold];
m18_323 -> m18_324  [key=0, style=solid];
m18_327 -> m18_328  [key=0, style=solid];
m18_327 -> m18_339  [key=2, style=dotted];
m18_317 -> m18_318  [key=0, style=solid];
m18_317 -> m18_332  [key=2, style=dotted];
m18_317 -> m18_319  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_319 -> m18_323  [key=0, style=solid];
m18_319 -> m18_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m18_319 -> m18_326  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m18_322 -> m18_328  [key=0, style=solid];
m18_322 -> m18_335  [key=2, style=dotted];
m18_328 -> m18_61  [color=blue, key=0, style=bold];
m18_671 -> m18_672  [key=0, style=solid];
m18_671 -> m18_678  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_671 -> m18_680  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_671 -> m18_682  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_671 -> m18_683  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_671 -> m18_685  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_671 -> m18_687  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_672 -> m18_673  [key=0, style=solid];
m18_672 -> m18_36  [key=2, style=dotted];
m18_678 -> m18_679  [key=0, style=solid];
m18_678 -> m18_692  [key=2, style=dotted];
m18_678 -> m18_684  [color=red, key=1, label=order, style=dashed];
m18_678 -> m18_687  [color=red, key=1, label=order, style=dashed];
m18_678 -> m18_688  [color=red, key=1, label=order, style=dashed];
m18_680 -> m18_681  [key=0, style=solid];
m18_680 -> m18_693  [key=2, style=dotted];
m18_682 -> m18_683  [color=red, key=0, style=solid];
m18_682 -> m18_694  [color=red, key=2, style=dotted];
m18_682 -> m18_688  [color=red, key=1, label=currentQuantityFilled, style=dashed];
m18_683 -> m18_684  [color=red, key=0, style=solid];
m18_683 -> m18_694  [color=red, key=2, style=dotted];
m18_683 -> m18_688  [color=red, key=1, label=totalQuantityFilled, style=dashed];
m18_685 -> m18_686  [color=red, key=0, style=solid];
m18_685 -> m18_508  [color=red, key=2, style=dotted];
m18_685 -> m18_688  [color=red, key=1, label=price, style=dashed];
m18_687 -> m18_688  [color=red, key=0, style=solid];
m18_687 -> m18_689  [color=red, key=0, style=solid];
m18_687 -> m18_691  [color=red, key=0, style=solid];
m18_687 -> m18_695  [color=red, key=2, style=dotted];
m18_673 -> m18_674  [key=0, style=solid];
m18_673 -> m18_678  [key=0, style=solid];
m18_674 -> m18_675  [key=0, style=solid];
m18_674 -> m18_676  [key=0, style=solid];
m18_675 -> m18_677  [key=0, style=solid];
m18_675 -> m18_387  [key=2, style=dotted];
m18_676 -> m18_677  [key=0, style=solid];
m18_676 -> m18_52  [key=2, style=dotted];
m18_677 -> m18_691  [key=0, style=solid];
m18_679 -> m18_680  [key=0, style=solid];
m18_679 -> m18_682  [color=red, key=0, style=solid];
m18_684 -> m18_685  [color=red, key=0, style=solid];
m18_684 -> m18_667  [color=red, key=2, style=dotted];
m18_684 -> m18_686  [color=red, key=1, label=remainingQuantity, style=dashed];
m18_684 -> m18_687  [color=red, key=1, label=remainingQuantity, style=dashed];
m18_684 -> m18_688  [color=red, key=1, label=remainingQuantity, style=dashed];
m18_688 -> m18_689  [color=red, key=0, style=solid];
m18_688 -> m18_691  [color=red, key=0, style=solid];
m18_688 -> m18_669  [color=red, key=2, style=dotted];
m18_681 -> m18_691  [key=0, style=solid];
m18_686 -> m18_687  [color=red, key=0, style=solid];
m18_686 -> m18_688  [color=red, key=1, label=status, style=dashed];
m18_689 -> m18_690  [key=0, style=solid];
m18_690 -> m18_691  [key=0, style=solid];
m18_690 -> m18_52  [key=2, style=dotted];
m18_691 -> m18_671  [color=blue, key=0, style=bold];
m18_624 -> m18_625  [color=red, key=0, style=solid];
m18_624 -> m18_626  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m18_624 -> m18_627  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m18_624 -> m18_628  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m18_624 -> m18_629  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m18_625 -> m18_626  [color=red, key=0, style=solid];
m18_626 -> m18_627  [key=0, style=solid];
m18_626 -> m18_630  [key=0, style=solid];
m18_626 -> m18_632  [key=0, style=solid];
m18_627 -> m18_628  [color=red, key=0, style=solid];
m18_627 -> m18_633  [key=2, style=dotted];
m18_627 -> m18_629  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m18_628 -> m18_629  [color=red, key=0, style=solid];
m18_628 -> m18_634  [color=red, key=2, style=dotted];
m18_629 -> m18_630  [key=0, style=solid];
m18_629 -> m18_632  [key=0, style=solid];
m18_629 -> m18_635  [key=2, style=dotted];
m18_629 -> m18_636  [key=2, style=dotted];
m18_630 -> m18_631  [key=0, style=solid];
m18_631 -> m18_632  [key=0, style=solid];
m18_631 -> m18_52  [key=2, style=dotted];
m18_632 -> m18_624  [color=blue, key=0, style=bold];
m18_332 -> m18_991  [key=0, style=solid];
m18_991 -> m18_992  [key=0, style=solid];
m18_991 -> m18_993  [key=0, style=solid];
m18_992 -> m18_991  [key=0, style=solid];
m18_992 -> m18_995  [key=2, style=dotted];
m18_993 -> m18_994  [key=0, style=solid];
m18_993 -> m18_996  [key=2, style=dotted];
m18_994 -> m18_332  [color=blue, key=0, style=bold];
m18_83 -> m18_84  [key=0, style=solid];
m18_84 -> m18_85  [key=0, style=solid];
m18_84 -> m18_97  [key=2, style=dotted];
m18_84 -> m18_86  [color=darkseagreen4, key=1, label=orders, style=dashed];
m18_84 -> m18_103  [color=darkseagreen4, key=1, label=orders, style=dashed];
m18_84 -> m18_95  [color=darkseagreen4, key=1, label=orders, style=dashed];
m18_85 -> m18_86  [key=0, style=solid];
m18_85 -> m18_98  [key=2, style=dotted];
m18_85 -> m18_87  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_85 -> m18_108  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_85 -> m18_91  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_86 -> m18_87  [key=0, style=solid];
m18_86 -> m18_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OpenOrderEventArgs", style=dashed];
m18_86 -> m18_88  [color=darkseagreen4, key=1, label=clientOnOpenOrder, style=dashed];
m18_86 -> m18_93  [color=darkseagreen4, key=1, label=clientOnOpenOrder, style=dashed];
m18_86 -> m18_86  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.OpenOrderEventArgs> clientOnOpenOrder", style=bold];
m18_95 -> m18_96  [key=0, style=solid];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_89  [color=darkseagreen4, key=1, label=clientOnOpenOrderEnd, style=dashed];
m18_87 -> m18_94  [color=darkseagreen4, key=1, label=clientOnOpenOrderEnd, style=dashed];
m18_87 -> m18_87  [color=darkorchid, key=3, label="Local variable System.EventHandler clientOnOpenOrderEnd", style=bold];
m18_91 -> m18_92  [key=0, style=solid];
m18_91 -> m18_93  [key=0, style=solid];
m18_91 -> m18_100  [key=2, style=dotted];
m18_88 -> m18_89  [key=0, style=solid];
m18_93 -> m18_94  [key=0, style=solid];
m18_89 -> m18_90  [key=0, style=solid];
m18_94 -> m18_95  [key=0, style=solid];
m18_90 -> m18_91  [key=0, style=solid];
m18_90 -> m18_99  [key=2, style=dotted];
m18_92 -> m18_96  [key=0, style=solid];
m18_92 -> m18_101  [key=2, style=dotted];
m18_96 -> m18_83  [color=blue, key=0, style=bold];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_55  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_53 -> m18_64  [color=darkorchid, key=3, label="method methodReturn bool PlaceOrder", style=bold];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_36  [key=2, style=dotted];
m18_55 -> m18_56  [key=0, style=solid];
m18_55 -> m18_61  [key=2, style=dotted];
m18_56 -> m18_60  [key=0, style=solid];
m18_57 -> m18_58  [key=0, style=solid];
m18_58 -> m18_59  [key=0, style=solid];
m18_58 -> m18_52  [key=2, style=dotted];
m18_59 -> m18_60  [key=0, style=solid];
m18_60 -> m18_53  [color=blue, key=0, style=bold];
m18_906 -> m18_907  [key=0, style=solid];
m18_906 -> m18_193  [color=darkorchid, key=3, label="method methodReturn QuantConnect.SecurityType ConvertSecurityType", style=bold];
m18_906 -> m18_822  [color=darkorchid, key=3, label="method methodReturn QuantConnect.SecurityType ConvertSecurityType", style=bold];
m18_906 -> m18_856  [color=darkorchid, key=3, label="method methodReturn QuantConnect.SecurityType ConvertSecurityType", style=bold];
m18_906 -> m18_862  [color=darkorchid, key=3, label="method methodReturn QuantConnect.SecurityType ConvertSecurityType", style=bold];
m18_906 -> m18_194  [color=darkorchid, key=3, label="method methodReturn QuantConnect.SecurityType ConvertSecurityType", style=bold];
m18_906 -> m18_370  [color=darkorchid, key=3, label="method methodReturn QuantConnect.SecurityType ConvertSecurityType", style=bold];
m18_907 -> m18_908  [key=0, style=solid];
m18_907 -> m18_910  [key=0, style=solid];
m18_907 -> m18_912  [key=0, style=solid];
m18_907 -> m18_914  [key=0, style=solid];
m18_907 -> m18_916  [key=0, style=solid];
m18_907 -> m18_918  [key=0, style=solid];
m18_907 -> m18_926  [key=0, style=solid];
m18_908 -> m18_909  [key=0, style=solid];
m18_910 -> m18_911  [key=0, style=solid];
m18_912 -> m18_913  [key=0, style=solid];
m18_914 -> m18_915  [key=0, style=solid];
m18_916 -> m18_917  [key=0, style=solid];
m18_918 -> m18_919  [key=0, style=solid];
m18_926 -> m18_927  [key=0, style=solid];
m18_926 -> m18_928  [key=2, style=dotted];
m18_909 -> m18_927  [key=0, style=solid];
m18_911 -> m18_927  [key=0, style=solid];
m18_913 -> m18_927  [key=0, style=solid];
m18_915 -> m18_927  [key=0, style=solid];
m18_917 -> m18_927  [key=0, style=solid];
m18_919 -> m18_920  [key=0, style=solid];
m18_920 -> m18_921  [key=0, style=solid];
m18_921 -> m18_922  [key=0, style=solid];
m18_922 -> m18_923  [key=0, style=solid];
m18_923 -> m18_924  [key=0, style=solid];
m18_924 -> m18_925  [key=0, style=solid];
m18_925 -> m18_927  [key=0, style=solid];
m18_927 -> m18_906  [color=blue, key=0, style=bold];
m18_117 -> m18_1361  [key=0, style=solid];
m18_1361 -> m18_1362  [key=0, style=solid];
m18_1361 -> m18_36  [key=2, style=dotted];
m18_1362 -> m18_1363  [key=0, style=solid];
m18_1362 -> m18_1365  [key=0, style=solid];
m18_1362 -> m18_1367  [key=2, style=dotted];
m18_1363 -> m18_1364  [key=0, style=solid];
m18_1363 -> m18_36  [key=2, style=dotted];
m18_1365 -> m18_1366  [key=0, style=solid];
m18_1365 -> m18_36  [key=2, style=dotted];
m18_1364 -> m18_1365  [key=0, style=solid];
m18_1364 -> m18_35  [key=2, style=dotted];
m18_1366 -> m18_117  [color=blue, key=0, style=bold];
m18_158 -> m18_159  [key=0, style=solid];
m18_158 -> m18_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_158 -> m18_160  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs> GetExecutions", style=bold];
m18_159 -> m18_160  [key=0, style=solid];
m18_159 -> m18_175  [key=2, style=dotted];
m18_159 -> m18_176  [key=2, style=dotted];
m18_159 -> m18_168  [color=darkseagreen4, key=1, label=filter, style=dashed];
m18_163 -> m18_164  [key=0, style=solid];
m18_160 -> m18_161  [key=0, style=solid];
m18_160 -> m18_97  [key=2, style=dotted];
m18_160 -> m18_165  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_160 -> m18_185  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_160 -> m18_173  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_168 -> m18_169  [key=0, style=solid];
m18_168 -> m18_178  [key=2, style=dotted];
m18_161 -> m18_162  [key=0, style=solid];
m18_161 -> m18_98  [key=2, style=dotted];
m18_161 -> m18_164  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_161 -> m18_181  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_161 -> m18_169  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_165 -> m18_166  [key=0, style=solid];
m18_165 -> m18_184  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_165 -> m18_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_165 -> m18_171  [color=darkseagreen4, key=1, label=clientOnExecDetails, style=dashed];
m18_165 -> m18_165  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs> clientOnExecDetails", style=bold];
m18_173 -> m18_174  [key=0, style=solid];
m18_162 -> m18_163  [key=0, style=solid];
m18_162 -> m18_177  [key=2, style=dotted];
m18_162 -> m18_164  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_162 -> m18_180  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_162 -> m18_165  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_162 -> m18_184  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_162 -> m18_168  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_164 -> m18_165  [key=0, style=solid];
m18_164 -> m18_180  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs", style=dashed];
m18_164 -> m18_167  [color=darkseagreen4, key=1, label=clientOnExecutionDataEnd, style=dashed];
m18_164 -> m18_172  [color=darkseagreen4, key=1, label=clientOnExecutionDataEnd, style=dashed];
m18_164 -> m18_164  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs> clientOnExecutionDataEnd", style=bold];
m18_169 -> m18_170  [key=0, style=solid];
m18_169 -> m18_171  [key=0, style=solid];
m18_169 -> m18_100  [key=2, style=dotted];
m18_167 -> m18_168  [key=0, style=solid];
m18_172 -> m18_173  [key=0, style=solid];
m18_166 -> m18_167  [key=0, style=solid];
m18_171 -> m18_172  [key=0, style=solid];
m18_170 -> m18_174  [key=0, style=solid];
m18_170 -> m18_101  [key=2, style=dotted];
m18_174 -> m18_158  [color=blue, key=0, style=bold];
m18_637 -> m18_638  [key=0, style=solid];
m18_637 -> m18_644  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m18_637 -> m18_646  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m18_637 -> m18_648  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m18_637 -> m18_650  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m18_637 -> m18_651  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m18_637 -> m18_652  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m18_637 -> m18_653  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m18_637 -> m18_654  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m18_638 -> m18_639  [key=0, style=solid];
m18_638 -> m18_36  [key=2, style=dotted];
m18_644 -> m18_645  [key=0, style=solid];
m18_644 -> m18_572  [key=2, style=dotted];
m18_644 -> m18_651  [color=red, key=1, label=order, style=dashed];
m18_644 -> m18_654  [color=red, key=1, label=order, style=dashed];
m18_644 -> m18_655  [color=red, key=1, label=order, style=dashed];
m18_644 -> m18_656  [color=red, key=1, label=order, style=dashed];
m18_644 -> m18_657  [color=red, key=1, label=order, style=dashed];
m18_644 -> m18_658  [color=red, key=1, label=order, style=dashed];
m18_644 -> m18_659  [color=red, key=1, label=order, style=dashed];
m18_644 -> m18_661  [color=red, key=1, label=order, style=dashed];
m18_646 -> m18_647  [key=0, style=solid];
m18_646 -> m18_52  [key=2, style=dotted];
m18_648 -> m18_649  [key=0, style=solid];
m18_648 -> m18_665  [key=2, style=dotted];
m18_648 -> m18_655  [color=red, key=1, label=status, style=dashed];
m18_648 -> m18_656  [color=red, key=1, label=status, style=dashed];
m18_648 -> m18_658  [color=red, key=1, label=status, style=dashed];
m18_648 -> m18_659  [color=red, key=1, label=status, style=dashed];
m18_648 -> m18_660  [color=red, key=1, label=status, style=dashed];
m18_648 -> m18_661  [color=red, key=1, label=status, style=dashed];
m18_650 -> m18_651  [color=red, key=0, style=solid];
m18_650 -> m18_666  [color=red, key=2, style=dotted];
m18_650 -> m18_655  [color=red, key=1, label=currentQuantityFilled, style=dashed];
m18_651 -> m18_652  [color=red, key=0, style=solid];
m18_651 -> m18_667  [color=red, key=2, style=dotted];
m18_651 -> m18_655  [color=red, key=1, label=totalQuantityFilled, style=dashed];
m18_652 -> m18_653  [color=red, key=0, style=solid];
m18_652 -> m18_654  [color=red, key=1, label=remainingQuantity, style=dashed];
m18_652 -> m18_655  [color=red, key=1, label=remainingQuantity, style=dashed];
m18_653 -> m18_654  [color=red, key=0, style=solid];
m18_653 -> m18_518  [color=red, key=2, style=dotted];
m18_653 -> m18_655  [color=red, key=1, label=price, style=dashed];
m18_654 -> m18_655  [color=red, key=0, style=solid];
m18_654 -> m18_662  [color=red, key=0, style=solid];
m18_654 -> m18_664  [color=red, key=0, style=solid];
m18_654 -> m18_668  [color=red, key=2, style=dotted];
m18_639 -> m18_640  [key=0, style=solid];
m18_639 -> m18_644  [key=0, style=solid];
m18_640 -> m18_641  [key=0, style=solid];
m18_640 -> m18_642  [key=0, style=solid];
m18_641 -> m18_643  [key=0, style=solid];
m18_641 -> m18_387  [key=2, style=dotted];
m18_642 -> m18_643  [key=0, style=solid];
m18_642 -> m18_52  [key=2, style=dotted];
m18_643 -> m18_664  [key=0, style=solid];
m18_645 -> m18_646  [key=0, style=solid];
m18_645 -> m18_648  [key=0, style=solid];
m18_655 -> m18_662  [color=red, key=0, style=solid];
m18_655 -> m18_664  [color=red, key=0, style=solid];
m18_655 -> m18_669  [color=red, key=2, style=dotted];
m18_656 -> m18_657  [color=red, key=0, style=solid];
m18_656 -> m18_662  [color=red, key=0, style=solid];
m18_656 -> m18_664  [color=red, key=0, style=solid];
m18_657 -> m18_658  [color=red, key=0, style=solid];
m18_657 -> m18_659  [color=red, key=0, style=solid];
m18_657 -> m18_670  [color=red, key=2, style=dotted];
m18_658 -> m18_662  [color=red, key=0, style=solid];
m18_658 -> m18_664  [color=red, key=0, style=solid];
m18_658 -> m18_36  [color=red, key=2, style=dotted];
m18_659 -> m18_660  [color=red, key=0, style=solid];
m18_659 -> m18_661  [color=red, key=0, style=solid];
m18_661 -> m18_662  [color=red, key=0, style=solid];
m18_661 -> m18_664  [color=red, key=0, style=solid];
m18_661 -> m18_573  [color=red, key=2, style=dotted];
m18_661 -> m18_574  [color=red, key=2, style=dotted];
m18_647 -> m18_664  [key=0, style=solid];
m18_649 -> m18_650  [color=red, key=0, style=solid];
m18_649 -> m18_656  [color=red, key=0, style=solid];
m18_660 -> m18_662  [color=red, key=0, style=solid];
m18_660 -> m18_664  [color=red, key=0, style=solid];
m18_660 -> m18_36  [color=red, key=2, style=dotted];
m18_662 -> m18_663  [key=0, style=solid];
m18_663 -> m18_664  [key=0, style=solid];
m18_663 -> m18_52  [key=2, style=dotted];
m18_664 -> m18_637  [color=blue, key=0, style=bold];
m18_745 -> m18_827  [key=0, style=solid];
m18_745 -> m18_834  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m18_745 -> m18_828  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderDirection", style=bold];
m18_745 -> m18_830  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderDirection", style=bold];
m18_745 -> m18_832  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderDirection", style=bold];
m18_827 -> m18_828  [key=0, style=solid];
m18_827 -> m18_830  [key=0, style=solid];
m18_827 -> m18_832  [key=0, style=solid];
m18_827 -> m18_834  [key=0, style=solid];
m18_834 -> m18_835  [key=0, style=solid];
m18_834 -> m18_783  [key=2, style=dotted];
m18_828 -> m18_829  [key=0, style=solid];
m18_830 -> m18_831  [key=0, style=solid];
m18_832 -> m18_833  [key=0, style=solid];
m18_829 -> m18_835  [key=0, style=solid];
m18_831 -> m18_835  [key=0, style=solid];
m18_833 -> m18_835  [key=0, style=solid];
m18_835 -> m18_745  [color=blue, key=0, style=bold];
m18_188 -> m18_189  [key=0, style=solid];
m18_189 -> m18_190  [key=0, style=solid];
m18_189 -> m18_191  [color=red, key=0, style=solid];
m18_190 -> m18_233  [key=0, style=solid];
m18_191 -> m18_192  [color=red, key=0, style=solid];
m18_191 -> m18_234  [color=red, key=2, style=dotted];
m18_192 -> m18_193  [color=red, key=0, style=solid];
m18_192 -> m18_234  [color=red, key=2, style=dotted];
m18_193 -> m18_194  [key=0, style=solid];
m18_193 -> m18_197  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m18_193 -> m18_210  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m18_193 -> m18_219  [color=red, key=1, label=attempt, style=dashed];
m18_193 -> m18_227  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m18_193 -> m18_193  [color=darkorchid, key=3, label="Local variable int attempt", style=bold];
m18_194 -> m18_195  [key=0, style=solid];
m18_194 -> m18_197  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m18_194 -> m18_210  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m18_194 -> m18_219  [color=red, key=1, label=maxAttempts, style=dashed];
m18_194 -> m18_227  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m18_194 -> m18_194  [color=darkorchid, key=3, label="Local variable int maxAttempts", style=bold];
m18_197 -> m18_198  [key=0, style=solid];
m18_197 -> m18_235  [key=2, style=dotted];
m18_210 -> m18_211  [key=0, style=solid];
m18_210 -> m18_212  [key=0, style=solid];
m18_210 -> m18_210  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m18_210 -> m18_219  [color=red, key=1, label=attempt, style=dashed];
m18_210 -> m18_227  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m18_219 -> m18_220  [color=red, key=0, style=solid];
m18_219 -> m18_221  [color=red, key=0, style=solid];
m18_219 -> m18_219  [color=red, key=1, label=attempt, style=dashed];
m18_219 -> m18_227  [color=red, key=1, label=attempt, style=dashed];
m18_227 -> m18_228  [key=0, style=solid];
m18_227 -> m18_229  [key=0, style=solid];
m18_227 -> m18_227  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m18_195 -> m18_196  [key=0, style=solid];
m18_195 -> m18_224  [color=darkseagreen4, key=1, label=existingSessionDetected, style=dashed];
m18_195 -> m18_64  [color=darkorchid, key=3, label="Local variable bool existingSessionDetected", style=bold];
m18_196 -> m18_197  [key=0, style=solid];
m18_196 -> m18_233  [key=0, style=solid];
m18_224 -> m18_225  [key=0, style=solid];
m18_224 -> m18_227  [key=0, style=solid];
m18_198 -> m18_199  [key=0, style=solid];
m18_198 -> m18_236  [key=2, style=dotted];
m18_199 -> m18_200  [key=0, style=solid];
m18_199 -> m18_237  [key=2, style=dotted];
m18_200 -> m18_201  [key=0, style=solid];
m18_200 -> m18_238  [key=2, style=dotted];
m18_200 -> m18_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m18_200 -> m18_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m18_201 -> m18_202  [key=0, style=solid];
m18_201 -> m18_239  [key=2, style=dotted];
m18_202 -> m18_203  [key=0, style=solid];
m18_202 -> m18_27  [key=2, style=dotted];
m18_202 -> m18_254  [color=darkseagreen4, key=1, label=error, style=dashed];
m18_203 -> m18_204  [key=0, style=solid];
m18_203 -> m18_28  [key=2, style=dotted];
m18_204 -> m18_205  [key=0, style=solid];
m18_204 -> m18_213  [key=0, style=solid];
m18_204 -> m18_100  [key=2, style=dotted];
m18_205 -> m18_206  [key=0, style=solid];
m18_205 -> m18_36  [key=2, style=dotted];
m18_213 -> m18_214  [key=0, style=solid];
m18_213 -> m18_36  [key=2, style=dotted];
m18_206 -> m18_207  [key=0, style=solid];
m18_206 -> m18_236  [key=2, style=dotted];
m18_207 -> m18_208  [key=0, style=solid];
m18_207 -> m18_210  [key=0, style=solid];
m18_207 -> m18_240  [key=2, style=dotted];
m18_208 -> m18_209  [key=0, style=solid];
m18_208 -> m18_224  [color=darkseagreen4, key=1, label=existingSessionDetected, style=dashed];
m18_209 -> m18_196  [key=0, style=solid];
m18_209 -> m18_241  [key=2, style=dotted];
m18_211 -> m18_196  [key=0, style=solid];
m18_211 -> m18_242  [key=2, style=dotted];
m18_212 -> m18_196  [key=0, style=solid];
m18_212 -> m18_101  [key=2, style=dotted];
m18_214 -> m18_215  [key=0, style=solid];
m18_214 -> m18_216  [color=red, key=0, style=solid];
m18_215 -> m18_196  [key=0, style=solid];
m18_215 -> m18_241  [key=2, style=dotted];
m18_216 -> m18_217  [color=red, key=0, style=solid];
m18_216 -> m18_222  [color=red, key=0, style=solid];
m18_216 -> m18_243  [color=red, key=2, style=dotted];
m18_217 -> m18_218  [color=red, key=0, style=solid];
m18_217 -> m18_36  [color=red, key=2, style=dotted];
m18_222 -> m18_233  [key=0, style=solid];
m18_222 -> m18_244  [key=2, style=dotted];
m18_218 -> m18_219  [color=red, key=0, style=solid];
m18_218 -> m18_236  [color=red, key=2, style=dotted];
m18_220 -> m18_196  [color=red, key=0, style=solid];
m18_220 -> m18_242  [color=red, key=2, style=dotted];
m18_221 -> m18_196  [color=red, key=0, style=solid];
m18_221 -> m18_101  [color=red, key=2, style=dotted];
m18_223 -> m18_224  [key=0, style=solid];
m18_225 -> m18_226  [key=0, style=solid];
m18_225 -> m18_245  [key=2, style=dotted];
m18_226 -> m18_233  [key=0, style=solid];
m18_228 -> m18_196  [key=0, style=solid];
m18_228 -> m18_242  [key=2, style=dotted];
m18_229 -> m18_230  [key=0, style=solid];
m18_229 -> m18_245  [key=2, style=dotted];
m18_230 -> m18_231  [key=0, style=solid];
m18_230 -> m18_232  [key=0, style=solid];
m18_230 -> m18_246  [key=2, style=dotted];
m18_231 -> m18_233  [key=0, style=solid];
m18_231 -> m18_247  [key=2, style=dotted];
m18_232 -> m18_233  [key=0, style=solid];
m18_233 -> m18_188  [color=blue, key=0, style=bold];
m18_1228 -> m18_1229  [key=0, style=solid];
m18_1228 -> m18_1230  [color=crimson, key=0, style=bold];
m18_1228 -> m18_1250  [color=crimson, key=0, style=bold];
m18_1228 -> m18_1231  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1232  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1233  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1234  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1235  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1236  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1238  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1239  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1240  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1242  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1243  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1244  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1246  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1247  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1228 -> m18_1248  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1229 -> m18_1230  [key=0, style=solid];
m18_1229 -> m18_1231  [key=0, style=solid];
m18_1229 -> m18_1056  [key=2, style=dotted];
m18_1229 -> m18_1058  [key=2, style=dotted];
m18_1230 -> m18_1231  [key=0, style=solid];
m18_1250 -> m18_1249  [key=0, style=solid];
m18_1231 -> m18_1232  [key=0, style=solid];
m18_1231 -> m18_331  [key=2, style=dotted];
m18_1231 -> m18_1236  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1231 -> m18_1243  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1231 -> m18_1244  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1231 -> m18_1246  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1232 -> m18_1233  [key=0, style=solid];
m18_1232 -> m18_929  [key=2, style=dotted];
m18_1232 -> m18_1243  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_1232 -> m18_1244  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_1232 -> m18_1246  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_1233 -> m18_1234  [key=0, style=solid];
m18_1233 -> m18_941  [key=2, style=dotted];
m18_1233 -> m18_1243  [color=darkseagreen4, key=1, label=duration, style=dashed];
m18_1233 -> m18_1244  [color=darkseagreen4, key=1, label=duration, style=dashed];
m18_1233 -> m18_1246  [color=darkseagreen4, key=1, label=duration, style=dashed];
m18_1234 -> m18_1235  [key=0, style=solid];
m18_1234 -> m18_1236  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m18_1234 -> m18_1243  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m18_1234 -> m18_1244  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m18_1234 -> m18_1246  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m18_1235 -> m18_1236  [key=0, style=solid];
m18_1235 -> m18_1243  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m18_1235 -> m18_1244  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m18_1235 -> m18_1246  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m18_1236 -> m18_1237  [key=0, style=solid];
m18_1236 -> m18_501  [key=2, style=dotted];
m18_1238 -> m18_1239  [key=0, style=solid];
m18_1238 -> m18_1241  [key=0, style=solid];
m18_1238 -> m18_720  [key=2, style=dotted];
m18_1238 -> m18_1243  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1238 -> m18_1244  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1238 -> m18_1246  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1238 -> m18_1247  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1238 -> m18_1248  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1239 -> m18_1240  [key=0, style=solid];
m18_1239 -> m18_1104  [key=2, style=dotted];
m18_1239 -> m18_1105  [key=2, style=dotted];
m18_1239 -> m18_1243  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1239 -> m18_1244  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1239 -> m18_1246  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1239 -> m18_1247  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1239 -> m18_1248  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m18_1240 -> m18_1241  [key=0, style=solid];
m18_1240 -> m18_1059  [key=2, style=dotted];
m18_1242 -> m18_1243  [key=0, style=solid];
m18_1242 -> m18_1246  [key=0, style=solid];
m18_1243 -> m18_1244  [key=0, style=solid];
m18_1243 -> m18_1253  [key=2, style=dotted];
m18_1243 -> m18_1245  [color=darkseagreen4, key=1, label=historyBid, style=dashed];
m18_1244 -> m18_1245  [key=0, style=solid];
m18_1244 -> m18_1253  [key=2, style=dotted];
m18_1246 -> m18_1247  [key=0, style=solid];
m18_1246 -> m18_1253  [key=2, style=dotted];
m18_1246 -> m18_1249  [color=darkseagreen4, key=1, label=history, style=dashed];
m18_1247 -> m18_1248  [key=0, style=solid];
m18_1247 -> m18_1012  [key=2, style=dotted];
m18_1247 -> m18_1249  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m18_1247 -> m18_1267  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m18_1248 -> m18_1249  [key=0, style=solid];
m18_1248 -> m18_1012  [key=2, style=dotted];
m18_1248 -> m18_1267  [color=darkseagreen4, key=1, label=requestEndTime, style=dashed];
m18_1237 -> m18_1238  [key=0, style=solid];
m18_1241 -> m18_1242  [key=0, style=solid];
m18_1241 -> m18_1253  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> history", style=bold];
m18_1245 -> m18_1247  [key=0, style=solid];
m18_1245 -> m18_1254  [key=2, style=dotted];
m18_1245 -> m18_1255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1245 -> m18_1258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1245 -> m18_1261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1245 -> m18_1249  [color=darkseagreen4, key=1, label=history, style=dashed];
m18_1249 -> m18_1250  [key=0, style=solid];
m18_1249 -> m18_1251  [key=0, style=solid];
m18_1249 -> m18_119  [key=2, style=dotted];
m18_1249 -> m18_1266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1251 -> m18_1252  [key=0, style=solid];
m18_1251 -> m18_36  [key=2, style=dotted];
m18_1252 -> m18_1228  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m18_592 -> m18_593  [key=0, style=solid];
m18_593 -> m18_594  [key=0, style=solid];
m18_594 -> m18_595  [key=0, style=solid];
m18_595 -> m18_596  [key=0, style=solid];
m18_595 -> m18_601  [key=2, style=dotted];
m18_595 -> m18_599  [color=darkseagreen4, key=1, label=subscribedSymbols, style=dashed];
m18_596 -> m18_597  [key=0, style=solid];
m18_596 -> m18_234  [key=2, style=dotted];
m18_599 -> m18_600  [key=0, style=solid];
m18_599 -> m18_603  [key=2, style=dotted];
m18_597 -> m18_598  [key=0, style=solid];
m18_597 -> m18_234  [key=2, style=dotted];
m18_598 -> m18_599  [key=0, style=solid];
m18_598 -> m18_602  [key=2, style=dotted];
m18_600 -> m18_592  [color=blue, key=0, style=bold];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IOrderProvider", style=dashed];
m18_4 -> m18_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityProvider", style=dashed];
m18_4 -> m18_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_4 -> m18_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_4 -> m18_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_4 -> m18_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_7 -> m18_8  [key=0, style=solid];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_25  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_26  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid];
m18_16 -> m18_17  [key=0, style=solid];
m18_17 -> m18_18  [key=0, style=solid];
m18_18 -> m18_19  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_20 -> m18_21  [key=0, style=solid];
m18_21 -> m18_22  [key=0, style=solid];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_31  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs", style=dashed];
m18_22 -> m18_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs", style=dashed];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_27  [key=2, style=dotted];
m18_23 -> m18_28  [key=2, style=dotted];
m18_23 -> m18_44  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_23 -> m18_48  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_24 -> m18_4  [color=blue, key=0, style=bold];
m18_403 -> m18_415  [key=0, style=solid];
m18_403 -> m18_417  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_403 -> m18_424  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_403 -> m18_398  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_403 -> m18_1197  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_403 -> m18_419  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<ContractDetails> FindContracts", style=bold];
m18_415 -> m18_416  [key=0, style=solid];
m18_415 -> m18_425  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m18_415 -> m18_426  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m18_415 -> m18_373  [color=darkorchid, key=3, label="Local variable int timeout", style=bold];
m18_417 -> m18_418  [key=0, style=solid];
m18_424 -> m18_425  [key=0, style=solid];
m18_424 -> m18_386  [key=2, style=dotted];
m18_416 -> m18_417  [key=0, style=solid];
m18_416 -> m18_177  [key=2, style=dotted];
m18_416 -> m18_424  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_425 -> m18_426  [key=0, style=solid];
m18_425 -> m18_427  [key=0, style=solid];
m18_425 -> m18_100  [key=2, style=dotted];
m18_426 -> m18_427  [key=0, style=solid];
m18_426 -> m18_387  [key=2, style=dotted];
m18_418 -> m18_419  [key=0, style=solid];
m18_418 -> m18_98  [key=2, style=dotted];
m18_418 -> m18_421  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_418 -> m18_435  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_418 -> m18_425  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_419 -> m18_420  [key=0, style=solid];
m18_419 -> m18_97  [key=2, style=dotted];
m18_419 -> m18_432  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m18_419 -> m18_429  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m18_421 -> m18_422  [key=0, style=solid];
m18_421 -> m18_423  [color=darkseagreen4, key=1, label=clientOnContractDetailsEnd, style=dashed];
m18_421 -> m18_427  [color=darkseagreen4, key=1, label=clientOnContractDetailsEnd, style=dashed];
m18_421 -> m18_421  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs> clientOnContractDetailsEnd", style=bold];
m18_420 -> m18_421  [key=0, style=solid];
m18_420 -> m18_432  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m18_420 -> m18_422  [color=darkseagreen4, key=1, label=clientOnContractDetails, style=dashed];
m18_420 -> m18_428  [color=darkseagreen4, key=1, label=clientOnContractDetails, style=dashed];
m18_420 -> m18_420  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs> clientOnContractDetails", style=bold];
m18_429 -> m18_430  [key=0, style=solid];
m18_422 -> m18_423  [key=0, style=solid];
m18_428 -> m18_429  [key=0, style=solid];
m18_423 -> m18_424  [key=0, style=solid];
m18_427 -> m18_428  [key=0, style=solid];
m18_430 -> m18_403  [color=blue, key=0, style=bold];
m18_344 -> m18_345  [key=0, style=solid];
m18_344 -> m18_346  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_344 -> m18_348  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_344 -> m18_113  [color=darkorchid, key=3, label="method methodReturn string GetPrimaryExchange", style=bold];
m18_344 -> m18_787  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_345 -> m18_346  [key=0, style=solid];
m18_345 -> m18_354  [color=darkorchid, key=3, label="Local variable ContractDetails details", style=bold];
m18_346 -> m18_347  [key=0, style=solid];
m18_346 -> m18_348  [key=0, style=solid];
m18_346 -> m18_340  [key=2, style=dotted];
m18_346 -> m18_353  [key=2, style=dotted];
m18_348 -> m18_349  [key=0, style=solid];
m18_348 -> m18_354  [key=2, style=dotted];
m18_348 -> m18_351  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_347 -> m18_352  [key=0, style=solid];
m18_349 -> m18_350  [key=0, style=solid];
m18_349 -> m18_351  [key=0, style=solid];
m18_351 -> m18_352  [key=0, style=solid];
m18_350 -> m18_352  [key=0, style=solid];
m18_352 -> m18_344  [color=blue, key=0, style=bold];
m18_398 -> m18_399  [key=0, style=solid];
m18_398 -> m18_787  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_399 -> m18_400  [key=0, style=solid];
m18_399 -> m18_403  [key=2, style=dotted];
m18_399 -> m18_401  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m18_400 -> m18_401  [key=0, style=solid];
m18_400 -> m18_404  [key=2, style=dotted];
m18_400 -> m18_405  [key=2, style=dotted];
m18_400 -> m18_412  [color=darkseagreen4, key=1, label=exchanges, style=dashed];
m18_401 -> m18_402  [key=0, style=solid];
m18_401 -> m18_118  [key=2, style=dotted];
m18_401 -> m18_406  [key=2, style=dotted];
m18_401 -> m18_407  [key=2, style=dotted];
m18_401 -> m18_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_401 -> m18_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_402 -> m18_398  [color=blue, key=0, style=bold];
m18_1192 -> m18_1193  [key=0, style=solid];
m18_1192 -> m18_1194  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m18_1192 -> m18_1196  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m18_1192 -> m18_1215  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m18_1192 -> m18_1197  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_1192 -> m18_1199  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m18_1192 -> m18_1201  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Symbol> LookupSymbols", style=bold];
m18_1193 -> m18_1194  [key=0, style=solid];
m18_1193 -> m18_188  [key=2, style=dotted];
m18_1194 -> m18_1195  [key=0, style=solid];
m18_1194 -> m18_1197  [color=darkseagreen4, key=1, label=exchangeSpecifier, style=dashed];
m18_1196 -> m18_1197  [key=0, style=solid];
m18_1196 -> m18_1215  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_1196 -> m18_1205  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m18_1196 -> m18_1225  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m18_1196 -> m18_1196  [color=darkorchid, key=3, label="Local variable System.Func<string, int> exchangeFilter", style=bold];
m18_1197 -> m18_1198  [key=0, style=solid];
m18_1197 -> m18_812  [key=2, style=dotted];
m18_1197 -> m18_1209  [key=2, style=dotted];
m18_1197 -> m18_810  [key=2, style=dotted];
m18_1197 -> m18_1200  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1197 -> m18_1202  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1197 -> m18_1204  [color=darkseagreen4, key=1, label=contract, style=dashed];
m18_1199 -> m18_1200  [key=0, style=solid];
m18_1199 -> m18_1204  [key=0, style=solid];
m18_1195 -> m18_1196  [key=0, style=solid];
m18_1195 -> m18_404  [key=2, style=dotted];
m18_1195 -> m18_405  [key=2, style=dotted];
m18_1195 -> m18_1215  [color=darkseagreen4, key=1, label=futuresExchanges, style=dashed];
m18_1205 -> m18_1206  [key=0, style=solid];
m18_1205 -> m18_118  [key=2, style=dotted];
m18_1205 -> m18_1211  [key=2, style=dotted];
m18_1205 -> m18_406  [key=2, style=dotted];
m18_1205 -> m18_407  [key=2, style=dotted];
m18_1205 -> m18_1218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1205 -> m18_1221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1205 -> m18_1224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1205 -> m18_1207  [color=darkseagreen4, key=1, label=filteredResults, style=dashed];
m18_1198 -> m18_1199  [key=0, style=solid];
m18_1198 -> m18_501  [key=2, style=dotted];
m18_1200 -> m18_1201  [key=0, style=solid];
m18_1200 -> m18_499  [key=2, style=dotted];
m18_1202 -> m18_1203  [key=0, style=solid];
m18_1202 -> m18_501  [key=2, style=dotted];
m18_1204 -> m18_1205  [key=0, style=solid];
m18_1204 -> m18_403  [key=2, style=dotted];
m18_1201 -> m18_1202  [key=0, style=solid];
m18_1201 -> m18_1210  [key=2, style=dotted];
m18_1201 -> m18_601  [key=2, style=dotted];
m18_1201 -> m18_1203  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m18_1203 -> m18_1208  [key=0, style=solid];
m18_1206 -> m18_1207  [key=0, style=solid];
m18_1206 -> m18_1212  [key=2, style=dotted];
m18_1206 -> m18_235  [key=2, style=dotted];
m18_1207 -> m18_1208  [key=0, style=solid];
m18_1207 -> m18_118  [key=2, style=dotted];
m18_1207 -> m18_1213  [key=2, style=dotted];
m18_1208 -> m18_1192  [color=blue, key=0, style=bold];
m18_1061 -> m18_1062  [key=0, style=solid];
m18_1062 -> m18_1063  [key=0, style=solid];
m18_1062 -> m18_1081  [key=0, style=solid];
m18_1062 -> m18_1083  [key=0, style=solid];
m18_1062 -> m18_1065  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1062 -> m18_1066  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1062 -> m18_1067  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1062 -> m18_1069  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_1063 -> m18_1064  [key=0, style=solid];
m18_1063 -> m18_1062  [key=0, style=solid];
m18_1063 -> m18_1056  [key=2, style=dotted];
m18_1081 -> m18_1082  [key=0, style=solid];
m18_1065 -> m18_1066  [key=0, style=solid];
m18_1065 -> m18_36  [key=2, style=dotted];
m18_1066 -> m18_1067  [key=0, style=solid];
m18_1066 -> m18_1068  [key=0, style=solid];
m18_1067 -> m18_1068  [key=0, style=solid];
m18_1067 -> m18_721  [key=2, style=dotted];
m18_1069 -> m18_1070  [key=0, style=solid];
m18_1069 -> m18_1062  [key=0, style=solid];
m18_1069 -> m18_1084  [key=2, style=dotted];
m18_1069 -> m18_1072  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1069 -> m18_1077  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1069 -> m18_1078  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1069 -> m18_1080  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_1064 -> m18_1065  [key=0, style=solid];
m18_1068 -> m18_1069  [key=0, style=solid];
m18_1070 -> m18_1071  [key=0, style=solid];
m18_1070 -> m18_1060  [key=2, style=dotted];
m18_1072 -> m18_1073  [key=0, style=solid];
m18_1072 -> m18_1078  [key=0, style=solid];
m18_1072 -> m18_720  [key=2, style=dotted];
m18_1077 -> m18_1078  [key=0, style=solid];
m18_1077 -> m18_721  [key=2, style=dotted];
m18_1078 -> m18_1079  [key=0, style=solid];
m18_1078 -> m18_1086  [key=2, style=dotted];
m18_1080 -> m18_1062  [key=0, style=solid];
m18_1080 -> m18_1084  [key=2, style=dotted];
m18_1071 -> m18_1072  [key=0, style=solid];
m18_1073 -> m18_1074  [key=0, style=solid];
m18_1073 -> m18_1075  [color=darkseagreen4, key=1, label=timeSinceSubscription, style=dashed];
m18_1074 -> m18_1075  [key=0, style=solid];
m18_1074 -> m18_1077  [key=0, style=solid];
m18_1075 -> m18_1076  [key=0, style=solid];
m18_1075 -> m18_1085  [key=2, style=dotted];
m18_1076 -> m18_1077  [key=0, style=solid];
m18_1076 -> m18_242  [key=2, style=dotted];
m18_1079 -> m18_1080  [key=0, style=solid];
m18_1082 -> m18_1083  [key=0, style=solid];
m18_1082 -> m18_52  [key=2, style=dotted];
m18_1083 -> m18_1061  [color=blue, key=0, style=bold];
m18_668 -> m18_709  [color=red, key=0, style=solid];
m18_668 -> m18_712  [color=red, key=1, label=int, style=dashed];
m18_668 -> m18_713  [color=red, key=1, label=int, style=dashed];
m18_668 -> m18_715  [color=red, key=1, label=int, style=dashed];
m18_668 -> m18_716  [color=red, key=1, label=int, style=dashed];
m18_668 -> m18_717  [color=red, key=1, label=int, style=dashed];
m18_668 -> m18_644  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m18_668 -> m18_652  [color=red, key=3, label="Parameter variable int newRemainingQuantity", style=bold];
m18_668 -> m18_55  [color=darkorchid, key=3, label="method methodReturn bool IsFillAlreadyHandled", style=bold];
m18_668 -> m18_64  [color=darkorchid, key=3, label="method methodReturn bool IsFillAlreadyHandled", style=bold];
m18_709 -> m18_710  [color=red, key=0, style=solid];
m18_709 -> m18_711  [color=red, key=0, style=solid];
m18_712 -> m18_713  [color=red, key=0, style=solid];
m18_712 -> m18_715  [color=red, key=0, style=solid];
m18_712 -> m18_720  [color=red, key=2, style=dotted];
m18_713 -> m18_714  [color=red, key=0, style=solid];
m18_713 -> m18_715  [color=red, key=0, style=solid];
m18_715 -> m18_716  [color=red, key=0, style=solid];
m18_715 -> m18_717  [color=red, key=0, style=solid];
m18_716 -> m18_718  [color=red, key=0, style=solid];
m18_717 -> m18_718  [color=red, key=0, style=solid];
m18_717 -> m18_721  [color=red, key=2, style=dotted];
m18_710 -> m18_719  [color=red, key=0, style=solid];
m18_711 -> m18_712  [color=red, key=0, style=solid];
m18_714 -> m18_719  [color=red, key=0, style=solid];
m18_718 -> m18_719  [color=red, key=0, style=solid];
m18_719 -> m18_668  [color=blue, key=0, style=bold];
m18_340 -> m18_341  [key=0, style=solid];
m18_340 -> m18_344  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_340 -> m18_355  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_340 -> m18_364  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_340 -> m18_354  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_340 -> m18_447  [color=darkorchid, key=3, label="Parameter variable Contract contract", style=bold];
m18_341 -> m18_342  [key=0, style=solid];
m18_341 -> m18_343  [key=2, style=dotted];
m18_342 -> m18_340  [color=blue, key=0, style=bold];
m18_240 -> m18_1329  [key=0, style=solid];
m18_240 -> m18_64  [color=darkorchid, key=3, label="method methodReturn bool ExistingSessionDetected", style=bold];
m18_1329 -> m18_1330  [key=0, style=solid];
m18_1329 -> m18_1345  [key=2, style=dotted];
m18_1329 -> m18_1346  [key=2, style=dotted];
m18_1330 -> m18_1331  [key=0, style=solid];
m18_1330 -> m18_1347  [key=2, style=dotted];
m18_1330 -> m18_1333  [color=darkseagreen4, key=1, label=files, style=dashed];
m18_1331 -> m18_1332  [key=0, style=solid];
m18_1331 -> m18_1335  [color=darkseagreen4, key=1, label=lastLogUpdateTime, style=dashed];
m18_1331 -> m18_1334  [color=darkorchid, key=3, label="Local variable System.DateTime lastLogUpdateTime", style=bold];
m18_1333 -> m18_1334  [key=0, style=solid];
m18_1333 -> m18_1338  [key=0, style=solid];
m18_1333 -> m18_1337  [color=darkseagreen4, key=1, label=file, style=dashed];
m18_1332 -> m18_1333  [key=0, style=solid];
m18_1332 -> m18_1338  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m18_1332 -> m18_1340  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m18_1335 -> m18_1336  [key=0, style=solid];
m18_1335 -> m18_1333  [key=0, style=solid];
m18_1338 -> m18_1339  [key=0, style=solid];
m18_1338 -> m18_1340  [key=0, style=solid];
m18_1338 -> m18_1349  [key=2, style=dotted];
m18_1340 -> m18_1341  [key=0, style=solid];
m18_1340 -> m18_1350  [key=2, style=dotted];
m18_1340 -> m18_601  [key=2, style=dotted];
m18_1340 -> m18_1342  [color=darkseagreen4, key=1, label=lines, style=dashed];
m18_1340 -> m18_1343  [color=darkseagreen4, key=1, label=lines, style=dashed];
m18_1334 -> m18_1335  [key=0, style=solid];
m18_1334 -> m18_1348  [key=2, style=dotted];
m18_1334 -> m18_1336  [color=darkseagreen4, key=1, label=time, style=dashed];
m18_1337 -> m18_1333  [key=0, style=solid];
m18_1337 -> m18_1338  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m18_1337 -> m18_1340  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m18_1336 -> m18_1337  [key=0, style=solid];
m18_1339 -> m18_1344  [key=0, style=solid];
m18_1341 -> m18_1342  [key=0, style=solid];
m18_1341 -> m18_1351  [key=2, style=dotted];
m18_1341 -> m18_1356  [color=darkseagreen4, key=1, label=separatorLine, style=dashed];
m18_1342 -> m18_1343  [key=0, style=solid];
m18_1342 -> m18_1352  [key=2, style=dotted];
m18_1342 -> m18_1355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1343 -> m18_1344  [key=0, style=solid];
m18_1343 -> m18_1353  [key=2, style=dotted];
m18_1343 -> m18_1354  [key=2, style=dotted];
m18_1343 -> m18_1358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1344 -> m18_240  [color=blue, key=0, style=bold];
m18_1368 -> m18_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_7  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_8  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_13  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_16  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_18  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_20  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_31  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_23  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_40  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_64  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_74  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_75  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_88  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_89  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_90  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_93  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_94  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_111  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_112  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_113  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_138  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_151  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_154  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_162  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_166  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_168  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_171  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_172  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_191  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_192  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_200  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_202  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_250  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_251  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_203  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_214  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_216  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_218  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_222  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_260  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_280  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_261  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_264  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_265  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_268  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_269  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_270  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_273  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_274  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_286  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_287  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_288  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_289  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_296  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_297  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_299  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_300  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_306  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_309  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_310  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_314  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_317  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_323  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_325  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_326  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_327  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_346  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_348  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_357  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_359  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_366  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_368  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_375  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_376  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_378  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_393  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_379  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_380  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_383  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_399  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_400  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_416  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_417  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_422  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_423  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_424  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_427  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_428  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_447  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_449  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_450  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_456  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_457  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_460  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_461  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_464  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_471  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_472  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_477  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_478  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_479  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_481  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_493  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_494  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_495  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_540  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_548  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_549  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_550  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_552  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_554  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_557  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_561  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_564  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_565  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_575  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_576  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_578  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_584  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_586  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_587  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_594  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_595  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_596  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_597  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_598  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_599  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_604  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_608  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_610  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_611  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_613  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_622  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_614  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_625  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_628  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_629  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_639  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_640  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_641  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_644  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_654  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_655  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_661  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_673  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_674  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_675  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_678  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_687  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_688  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_698  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_701  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_705  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_712  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_716  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_717  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_723  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_724  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_725  [color=red, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_728  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_735  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_737  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_739  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_752  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_753  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_786  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_793  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_800  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_806  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_807  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_963  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_967  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_972  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_977  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_982  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_983  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_991  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_993  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_997  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_999  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1015  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1020  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1021  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1022  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1025  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1027  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1034  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1035  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1037  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1041  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1044  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1045  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1046  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1047  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1048  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1049  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1050  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1051  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1063  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1064  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1067  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1069  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1070  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1072  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1074  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1075  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1077  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1078  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1080  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1096  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1098  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1113  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1123  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1125  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1129  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1131  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1135  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1164  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1170  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1188  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1190  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1193  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1195  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1197  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1229  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1231  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1232  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1233  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1243  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1244  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1246  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1277  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1278  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1282  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1283  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1284  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1289  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1290  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1291  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1368 -> m18_1364  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m18_1369 -> m18_103  [color=darkseagreen4, key=1, label=orders, style=dashed];
m18_1370 -> m18_108  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_1371 -> m18_143  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_1372 -> m18_143  [color=darkseagreen4, key=1, label=currency, style=dashed];
m18_1373 -> m18_180  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_1373 -> m18_184  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_1374 -> m18_181  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_1375 -> m18_185  [color=darkseagreen4, key=1, label=details, style=dashed];
m18_1376 -> m18_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m18_1377 -> m18_283  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m18_1378 -> m18_389  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m18_1379 -> m18_392  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m18_1380 -> m18_394  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_1381 -> m18_412  [color=darkseagreen4, key=1, label=exchanges, style=dashed];
m18_1382 -> m18_432  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m18_1383 -> m18_435  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_1384 -> m18_510  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m18_1385 -> m18_510  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m18_1386 -> m18_513  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m18_1387 -> m18_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_1388 -> m18_516  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_1388 -> m18_525  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m18_1389 -> m18_520  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1389 -> m18_524  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1390 -> m18_521  [color=darkseagreen4, key=1, label=data, style=dashed];
m18_1391 -> m18_1215  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m18_1392 -> m18_1215  [color=darkseagreen4, key=1, label=futuresExchanges, style=dashed];
m18_1393 -> m18_1225  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m18_1394 -> m18_1267  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m18_1395 -> m18_1267  [color=darkseagreen4, key=1, label=requestEndTime, style=dashed];
m18_1396 -> m18_1309  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1396 -> m18_1317  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m18_1397 -> m18_1310  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1397 -> m18_1311  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m18_1398 -> m18_1312  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m18_1399 -> m18_1313  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m18_1400 -> m18_1314  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m18_1401 -> m18_1318  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m18_1401 -> m18_1324  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m18_1402 -> m18_1356  [color=darkseagreen4, key=1, label=separatorLine, style=dashed];
m22_166 -> m22_167  [key=0, style=solid];
m22_167 -> m22_168  [key=0, style=solid];
m22_167 -> m22_169  [key=2, style=dotted];
m22_167 -> m22_170  [key=2, style=dotted];
m22_168 -> m22_166  [color=blue, key=0, style=bold];
m22_148 -> m22_347  [key=0, style=solid];
m22_148 -> m22_349  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m22_148 -> m22_132  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.IBar bar", style=bold];
m22_148 -> m22_145  [color=darkorchid, key=3, label="method methodReturn string ToNonScaledCsv", style=bold];
m22_347 -> m22_348  [key=0, style=solid];
m22_347 -> m22_349  [key=0, style=solid];
m22_349 -> m22_350  [key=0, style=solid];
m22_349 -> m22_145  [key=2, style=dotted];
m22_348 -> m22_350  [key=0, style=solid];
m22_348 -> m22_145  [key=2, style=dotted];
m22_350 -> m22_148  [color=blue, key=0, style=bold];
m22_144 -> m22_331  [key=0, style=solid];
m22_331 -> m22_332  [key=0, style=solid];
m22_332 -> m22_144  [color=blue, key=0, style=bold];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_10  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m22_7 -> m22_12  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_7 -> m22_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_25  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_7 -> m22_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_55  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_7 -> m22_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_74  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_7 -> m22_76  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_91  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_96  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_105  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_7 -> m22_107  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_7 -> m22_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_121  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_132  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_7 -> m22_138  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_7 -> m22_139  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m22_7 -> m22_140  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m22_7 -> m22_1  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.IBaseData data", style=bold];
m22_7 -> m22_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m22_7 -> m22_145  [color=darkorchid, key=3, label="method methodReturn string GenerateLine", style=bold];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_142  [key=2, style=dotted];
m22_8 -> m22_15  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_19  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_31  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_33  [color=red, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_39  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_42  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_60  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_66  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_78  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_80  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_82  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_87  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_90  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_93  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_104  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_111  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_113  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_115  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_120  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_123  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_8 -> m22_126  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_143  [key=2, style=dotted];
m22_9 -> m22_23  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_9 -> m22_48  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_9 -> m22_51  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_9 -> m22_72  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_9 -> m22_98  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_9 -> m22_101  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_9 -> m22_131  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_9 -> m22_134  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_9 -> m22_137  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_24  [key=0, style=solid];
m22_10 -> m22_53  [key=0, style=solid];
m22_10 -> m22_73  [key=0, style=solid];
m22_10 -> m22_106  [key=0, style=solid];
m22_10 -> m22_139  [key=0, style=solid];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_16  [key=0, style=solid];
m22_12 -> m22_20  [key=0, style=solid];
m22_14 -> m22_15  [key=0, style=solid];
m22_18 -> m22_19  [key=0, style=solid];
m22_22 -> m22_23  [key=0, style=solid];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_35  [key=0, style=solid];
m22_25 -> m22_44  [key=0, style=solid];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_30  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_27 -> m22_31  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_27 -> m22_32  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_27 -> m22_33  [color=red, key=1, label=tick, style=dashed];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_39  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_42  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_48  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m22_49 -> m22_50  [key=0, style=solid];
m22_49 -> m22_51  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m22_55 -> m22_56  [key=0, style=solid];
m22_55 -> m22_61  [key=0, style=solid];
m22_55 -> m22_67  [key=0, style=solid];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_60  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_63 -> m22_64  [key=0, style=solid];
m22_63 -> m22_66  [color=darkseagreen4, key=1, label=bar, style=dashed];
m22_69 -> m22_70  [key=0, style=solid];
m22_69 -> m22_72  [color=darkseagreen4, key=1, label=bigBar, style=dashed];
m22_74 -> m22_75  [key=0, style=solid];
m22_74 -> m22_83  [key=0, style=solid];
m22_74 -> m22_94  [key=0, style=solid];
m22_74 -> m22_105  [key=0, style=solid];
m22_76 -> m22_77  [key=0, style=solid];
m22_76 -> m22_78  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_76 -> m22_79  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_76 -> m22_80  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_76 -> m22_81  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_76 -> m22_82  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_85 -> m22_86  [key=0, style=solid];
m22_85 -> m22_87  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m22_88 -> m22_89  [key=0, style=solid];
m22_88 -> m22_90  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m22_91 -> m22_92  [key=0, style=solid];
m22_91 -> m22_93  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m22_96 -> m22_97  [key=0, style=solid];
m22_96 -> m22_98  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m22_99 -> m22_100  [key=0, style=solid];
m22_99 -> m22_101  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m22_102 -> m22_103  [key=0, style=solid];
m22_102 -> m22_104  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m22_105 -> m22_141  [key=0, style=solid];
m22_105 -> m22_150  [key=2, style=dotted];
m22_107 -> m22_108  [key=0, style=solid];
m22_107 -> m22_116  [key=0, style=solid];
m22_107 -> m22_127  [key=0, style=solid];
m22_107 -> m22_138  [key=0, style=solid];
m22_109 -> m22_110  [key=0, style=solid];
m22_109 -> m22_111  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_109 -> m22_112  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_109 -> m22_113  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_109 -> m22_114  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_109 -> m22_115  [color=darkseagreen4, key=1, label=tick, style=dashed];
m22_118 -> m22_119  [key=0, style=solid];
m22_118 -> m22_120  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m22_121 -> m22_122  [key=0, style=solid];
m22_121 -> m22_123  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m22_124 -> m22_125  [key=0, style=solid];
m22_124 -> m22_126  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m22_129 -> m22_130  [key=0, style=solid];
m22_129 -> m22_131  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m22_132 -> m22_133  [key=0, style=solid];
m22_132 -> m22_134  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m22_135 -> m22_136  [key=0, style=solid];
m22_135 -> m22_137  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m22_138 -> m22_141  [key=0, style=solid];
m22_138 -> m22_150  [key=2, style=dotted];
m22_139 -> m22_141  [key=0, style=solid];
m22_139 -> m22_150  [key=2, style=dotted];
m22_140 -> m22_141  [key=0, style=solid];
m22_140 -> m22_151  [key=2, style=dotted];
m22_15 -> m22_141  [key=0, style=solid];
m22_15 -> m22_144  [key=2, style=dotted];
m22_15 -> m22_145  [key=2, style=dotted];
m22_19 -> m22_141  [key=0, style=solid];
m22_19 -> m22_144  [key=2, style=dotted];
m22_19 -> m22_145  [key=2, style=dotted];
m22_31 -> m22_141  [key=0, style=solid];
m22_31 -> m22_145  [key=2, style=dotted];
m22_33 -> m22_141  [color=red, key=0, style=solid];
m22_33 -> m22_145  [color=red, key=2, style=dotted];
m22_39 -> m22_141  [key=0, style=solid];
m22_39 -> m22_148  [key=2, style=dotted];
m22_39 -> m22_145  [key=2, style=dotted];
m22_42 -> m22_141  [key=0, style=solid];
m22_42 -> m22_145  [key=2, style=dotted];
m22_60 -> m22_141  [key=0, style=solid];
m22_60 -> m22_145  [key=2, style=dotted];
m22_66 -> m22_141  [key=0, style=solid];
m22_66 -> m22_148  [key=2, style=dotted];
m22_66 -> m22_145  [key=2, style=dotted];
m22_78 -> m22_141  [key=0, style=solid];
m22_78 -> m22_144  [key=2, style=dotted];
m22_78 -> m22_145  [key=2, style=dotted];
m22_80 -> m22_141  [key=0, style=solid];
m22_80 -> m22_144  [key=2, style=dotted];
m22_80 -> m22_145  [key=2, style=dotted];
m22_82 -> m22_141  [key=0, style=solid];
m22_82 -> m22_145  [key=2, style=dotted];
m22_87 -> m22_141  [key=0, style=solid];
m22_87 -> m22_149  [key=2, style=dotted];
m22_87 -> m22_145  [key=2, style=dotted];
m22_90 -> m22_141  [key=0, style=solid];
m22_90 -> m22_144  [key=2, style=dotted];
m22_90 -> m22_145  [key=2, style=dotted];
m22_93 -> m22_141  [key=0, style=solid];
m22_93 -> m22_145  [key=2, style=dotted];
m22_104 -> m22_141  [key=0, style=solid];
m22_104 -> m22_145  [key=2, style=dotted];
m22_111 -> m22_141  [key=0, style=solid];
m22_111 -> m22_145  [key=2, style=dotted];
m22_113 -> m22_141  [key=0, style=solid];
m22_113 -> m22_145  [key=2, style=dotted];
m22_115 -> m22_141  [key=0, style=solid];
m22_115 -> m22_145  [key=2, style=dotted];
m22_120 -> m22_141  [key=0, style=solid];
m22_120 -> m22_148  [key=2, style=dotted];
m22_120 -> m22_145  [key=2, style=dotted];
m22_123 -> m22_141  [key=0, style=solid];
m22_123 -> m22_145  [key=2, style=dotted];
m22_126 -> m22_141  [key=0, style=solid];
m22_126 -> m22_145  [key=2, style=dotted];
m22_23 -> m22_141  [key=0, style=solid];
m22_23 -> m22_144  [key=2, style=dotted];
m22_23 -> m22_145  [key=2, style=dotted];
m22_48 -> m22_141  [key=0, style=solid];
m22_48 -> m22_148  [key=2, style=dotted];
m22_48 -> m22_145  [key=2, style=dotted];
m22_51 -> m22_141  [key=0, style=solid];
m22_51 -> m22_145  [key=2, style=dotted];
m22_72 -> m22_141  [key=0, style=solid];
m22_72 -> m22_148  [key=2, style=dotted];
m22_72 -> m22_145  [key=2, style=dotted];
m22_98 -> m22_141  [key=0, style=solid];
m22_98 -> m22_149  [key=2, style=dotted];
m22_98 -> m22_145  [key=2, style=dotted];
m22_101 -> m22_141  [key=0, style=solid];
m22_101 -> m22_149  [key=2, style=dotted];
m22_101 -> m22_145  [key=2, style=dotted];
m22_131 -> m22_141  [key=0, style=solid];
m22_131 -> m22_148  [key=2, style=dotted];
m22_131 -> m22_145  [key=2, style=dotted];
m22_134 -> m22_141  [key=0, style=solid];
m22_134 -> m22_148  [key=2, style=dotted];
m22_134 -> m22_145  [key=2, style=dotted];
m22_137 -> m22_141  [key=0, style=solid];
m22_137 -> m22_145  [key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_24 -> m22_25  [key=0, style=solid];
m22_53 -> m22_54  [key=0, style=solid];
m22_73 -> m22_74  [key=0, style=solid];
m22_106 -> m22_107  [key=0, style=solid];
m22_13 -> m22_14  [key=0, style=solid];
m22_16 -> m22_17  [key=0, style=solid];
m22_20 -> m22_21  [key=0, style=solid];
m22_17 -> m22_18  [key=0, style=solid];
m22_21 -> m22_22  [key=0, style=solid];
m22_26 -> m22_27  [key=0, style=solid];
m22_35 -> m22_36  [key=0, style=solid];
m22_44 -> m22_45  [key=0, style=solid];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_30  [key=0, style=solid];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_32  [key=0, style=solid];
m22_32 -> m22_33  [color=red, key=0, style=solid];
m22_32 -> m22_34  [key=0, style=solid];
m22_29 -> m22_141  [key=0, style=solid];
m22_29 -> m22_146  [key=2, style=dotted];
m22_34 -> m22_141  [key=0, style=solid];
m22_34 -> m22_147  [key=2, style=dotted];
m22_36 -> m22_37  [key=0, style=solid];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_40  [key=0, style=solid];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_43  [key=0, style=solid];
m22_43 -> m22_141  [key=0, style=solid];
m22_43 -> m22_146  [key=2, style=dotted];
m22_45 -> m22_46  [key=0, style=solid];
m22_47 -> m22_48  [key=0, style=solid];
m22_47 -> m22_49  [key=0, style=solid];
m22_50 -> m22_51  [key=0, style=solid];
m22_50 -> m22_52  [key=0, style=solid];
m22_52 -> m22_141  [key=0, style=solid];
m22_52 -> m22_146  [key=2, style=dotted];
m22_54 -> m22_55  [key=0, style=solid];
m22_56 -> m22_57  [key=0, style=solid];
m22_61 -> m22_62  [key=0, style=solid];
m22_67 -> m22_68  [key=0, style=solid];
m22_58 -> m22_59  [key=0, style=solid];
m22_58 -> m22_60  [key=0, style=solid];
m22_59 -> m22_141  [key=0, style=solid];
m22_59 -> m22_146  [key=2, style=dotted];
m22_62 -> m22_63  [key=0, style=solid];
m22_64 -> m22_65  [key=0, style=solid];
m22_64 -> m22_66  [key=0, style=solid];
m22_65 -> m22_141  [key=0, style=solid];
m22_65 -> m22_146  [key=2, style=dotted];
m22_68 -> m22_69  [key=0, style=solid];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_72  [key=0, style=solid];
m22_71 -> m22_141  [key=0, style=solid];
m22_71 -> m22_146  [key=2, style=dotted];
m22_75 -> m22_76  [key=0, style=solid];
m22_83 -> m22_84  [key=0, style=solid];
m22_94 -> m22_95  [key=0, style=solid];
m22_77 -> m22_78  [key=0, style=solid];
m22_77 -> m22_79  [key=0, style=solid];
m22_79 -> m22_80  [key=0, style=solid];
m22_79 -> m22_81  [key=0, style=solid];
m22_81 -> m22_82  [key=0, style=solid];
m22_81 -> m22_140  [key=0, style=solid];
m22_84 -> m22_85  [key=0, style=solid];
m22_86 -> m22_87  [key=0, style=solid];
m22_86 -> m22_88  [key=0, style=solid];
m22_89 -> m22_90  [key=0, style=solid];
m22_89 -> m22_91  [key=0, style=solid];
m22_92 -> m22_93  [key=0, style=solid];
m22_92 -> m22_140  [key=0, style=solid];
m22_95 -> m22_96  [key=0, style=solid];
m22_97 -> m22_98  [key=0, style=solid];
m22_97 -> m22_99  [key=0, style=solid];
m22_100 -> m22_101  [key=0, style=solid];
m22_100 -> m22_102  [key=0, style=solid];
m22_103 -> m22_104  [key=0, style=solid];
m22_103 -> m22_140  [key=0, style=solid];
m22_108 -> m22_109  [key=0, style=solid];
m22_116 -> m22_117  [key=0, style=solid];
m22_127 -> m22_128  [key=0, style=solid];
m22_110 -> m22_111  [key=0, style=solid];
m22_110 -> m22_112  [key=0, style=solid];
m22_112 -> m22_113  [key=0, style=solid];
m22_112 -> m22_114  [key=0, style=solid];
m22_114 -> m22_115  [key=0, style=solid];
m22_114 -> m22_140  [key=0, style=solid];
m22_117 -> m22_118  [key=0, style=solid];
m22_119 -> m22_120  [key=0, style=solid];
m22_119 -> m22_121  [key=0, style=solid];
m22_122 -> m22_123  [key=0, style=solid];
m22_122 -> m22_124  [key=0, style=solid];
m22_125 -> m22_126  [key=0, style=solid];
m22_125 -> m22_140  [key=0, style=solid];
m22_128 -> m22_129  [key=0, style=solid];
m22_130 -> m22_131  [key=0, style=solid];
m22_130 -> m22_132  [key=0, style=solid];
m22_133 -> m22_134  [key=0, style=solid];
m22_133 -> m22_135  [key=0, style=solid];
m22_136 -> m22_137  [key=0, style=solid];
m22_136 -> m22_140  [key=0, style=solid];
m22_141 -> m22_7  [color=blue, key=0, style=bold];
m22_149 -> m22_343  [key=0, style=solid];
m22_149 -> m22_345  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m22_149 -> m22_99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.IBar bar", style=bold];
m22_149 -> m22_145  [color=darkorchid, key=3, label="method methodReturn string ToScaledCsv", style=bold];
m22_343 -> m22_344  [key=0, style=solid];
m22_343 -> m22_345  [key=0, style=solid];
m22_345 -> m22_346  [key=0, style=solid];
m22_345 -> m22_144  [key=2, style=dotted];
m22_345 -> m22_145  [key=2, style=dotted];
m22_344 -> m22_346  [key=0, style=solid];
m22_344 -> m22_145  [key=2, style=dotted];
m22_346 -> m22_149  [color=blue, key=0, style=bold];
m22_145 -> m22_333  [key=0, style=solid];
m22_145 -> m22_334  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m22_145 -> m22_335  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m22_145 -> m22_337  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m22_145 -> m22_339  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m22_145 -> m22_8  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m22_145 -> m22_144  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m22_145 -> m22_9  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m22_145 -> m22_148  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m22_145 -> m22_149  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m22_333 -> m22_334  [key=0, style=solid];
m22_333 -> m22_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_333 -> m22_337  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_333 -> m22_338  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_333 -> m22_292  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m22_334 -> m22_335  [key=0, style=solid];
m22_334 -> m22_339  [key=0, style=solid];
m22_335 -> m22_336  [key=0, style=solid];
m22_335 -> m22_337  [color=darkseagreen4, key=1, label=value, style=dashed];
m22_337 -> m22_338  [key=0, style=solid];
m22_337 -> m22_341  [key=2, style=dotted];
m22_337 -> m22_342  [key=2, style=dotted];
m22_339 -> m22_340  [key=0, style=solid];
m22_339 -> m22_243  [key=2, style=dotted];
m22_338 -> m22_334  [key=0, style=solid];
m22_338 -> m22_338  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_336 -> m22_337  [key=0, style=solid];
m22_336 -> m22_338  [key=0, style=solid];
m22_340 -> m22_145  [color=blue, key=0, style=bold];
m22_152 -> m22_153  [key=0, style=solid];
m22_152 -> m22_155  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m22_152 -> m22_157  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m22_153 -> m22_154  [key=0, style=solid];
m22_153 -> m22_155  [key=0, style=solid];
m22_155 -> m22_156  [key=0, style=solid];
m22_155 -> m22_157  [key=0, style=solid];
m22_157 -> m22_158  [key=0, style=solid];
m22_157 -> m22_159  [key=0, style=solid];
m22_154 -> m22_160  [key=0, style=solid];
m22_156 -> m22_160  [key=0, style=solid];
m22_158 -> m22_160  [key=0, style=solid];
m22_159 -> m22_160  [key=0, style=solid];
m22_160 -> m22_152  [color=blue, key=0, style=bold];
m22_358 -> m22_359  [key=0, style=solid];
m22_358 -> m22_360  [key=0, style=solid];
m22_351 -> m22_352  [key=0, style=solid];
m22_351 -> m22_354  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m22_351 -> m22_356  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m22_351 -> m22_358  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m22_351 -> m22_360  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m22_351 -> m22_361  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m22_351 -> m22_292  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes", style=bold];
m22_351 -> m22_291  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes", style=bold];
m22_351 -> m22_357  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes", style=bold];
m22_352 -> m22_353  [key=0, style=solid];
m22_352 -> m22_354  [key=0, style=solid];
m22_354 -> m22_355  [key=0, style=solid];
m22_354 -> m22_356  [key=0, style=solid];
m22_356 -> m22_357  [key=0, style=solid];
m22_356 -> m22_358  [key=0, style=solid];
m22_360 -> m22_361  [key=0, style=solid];
m22_360 -> m22_363  [key=0, style=solid];
m22_361 -> m22_362  [key=0, style=solid];
m22_361 -> m22_363  [key=0, style=solid];
m22_353 -> m22_364  [key=0, style=solid];
m22_355 -> m22_364  [key=0, style=solid];
m22_357 -> m22_364  [key=0, style=solid];
m22_359 -> m22_364  [key=0, style=solid];
m22_363 -> m22_364  [key=0, style=solid];
m22_362 -> m22_364  [key=0, style=solid];
m22_364 -> m22_351  [color=blue, key=0, style=bold];
m22_205 -> m22_255  [key=0, style=solid];
m22_205 -> m22_256  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m22_205 -> m22_257  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_205 -> m22_258  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_205 -> m22_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_205 -> m22_268  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_205 -> m22_272  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_205 -> m22_273  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_205 -> m22_276  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_205 -> m22_169  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m22_255 -> m22_256  [key=0, style=solid];
m22_255 -> m22_195  [key=2, style=dotted];
m22_255 -> m22_265  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m22_255 -> m22_268  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m22_255 -> m22_269  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m22_255 -> m22_272  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m22_255 -> m22_273  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m22_255 -> m22_276  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m22_255 -> m22_277  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m22_256 -> m22_257  [key=0, style=solid];
m22_256 -> m22_143  [key=2, style=dotted];
m22_256 -> m22_265  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_256 -> m22_269  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_256 -> m22_273  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_256 -> m22_277  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_257 -> m22_258  [key=0, style=solid];
m22_257 -> m22_263  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_257 -> m22_267  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_257 -> m22_271  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_257 -> m22_275  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_258 -> m22_259  [key=0, style=solid];
m22_258 -> m22_266  [key=0, style=solid];
m22_258 -> m22_270  [key=0, style=solid];
m22_258 -> m22_274  [key=0, style=solid];
m22_258 -> m22_278  [key=0, style=solid];
m22_264 -> m22_280  [key=0, style=solid];
m22_264 -> m22_196  [key=2, style=dotted];
m22_264 -> m22_241  [key=2, style=dotted];
m22_268 -> m22_280  [key=0, style=solid];
m22_268 -> m22_196  [key=2, style=dotted];
m22_268 -> m22_242  [key=2, style=dotted];
m22_272 -> m22_280  [key=0, style=solid];
m22_272 -> m22_196  [key=2, style=dotted];
m22_272 -> m22_195  [key=2, style=dotted];
m22_272 -> m22_281  [key=2, style=dotted];
m22_273 -> m22_280  [key=0, style=solid];
m22_273 -> m22_195  [key=2, style=dotted];
m22_273 -> m22_281  [key=2, style=dotted];
m22_276 -> m22_280  [key=0, style=solid];
m22_276 -> m22_196  [key=2, style=dotted];
m22_276 -> m22_242  [key=2, style=dotted];
m22_265 -> m22_280  [key=0, style=solid];
m22_265 -> m22_242  [key=2, style=dotted];
m22_269 -> m22_280  [key=0, style=solid];
m22_269 -> m22_242  [key=2, style=dotted];
m22_277 -> m22_280  [key=0, style=solid];
m22_277 -> m22_242  [key=2, style=dotted];
m22_263 -> m22_264  [key=0, style=solid];
m22_263 -> m22_265  [key=0, style=solid];
m22_267 -> m22_268  [key=0, style=solid];
m22_267 -> m22_269  [key=0, style=solid];
m22_271 -> m22_272  [key=0, style=solid];
m22_271 -> m22_273  [key=0, style=solid];
m22_275 -> m22_276  [key=0, style=solid];
m22_275 -> m22_277  [key=0, style=solid];
m22_259 -> m22_260  [key=0, style=solid];
m22_266 -> m22_267  [key=0, style=solid];
m22_270 -> m22_271  [key=0, style=solid];
m22_274 -> m22_275  [key=0, style=solid];
m22_278 -> m22_279  [key=0, style=solid];
m22_260 -> m22_261  [key=0, style=solid];
m22_261 -> m22_262  [key=0, style=solid];
m22_262 -> m22_263  [key=0, style=solid];
m22_279 -> m22_280  [key=0, style=solid];
m22_279 -> m22_198  [key=2, style=dotted];
m22_280 -> m22_205  [color=blue, key=0, style=bold];
m22_410 -> m22_411  [key=0, style=solid];
m22_404 -> m22_405  [key=0, style=solid];
m22_411 -> m22_412  [key=0, style=solid];
m22_411 -> m22_196  [key=2, style=dotted];
m22_411 -> m22_413  [key=2, style=dotted];
m22_408 -> m22_409  [key=0, style=solid];
m22_408 -> m22_394  [key=2, style=dotted];
m22_407 -> m22_408  [key=0, style=solid];
m22_405 -> m22_406  [key=0, style=solid];
m22_405 -> m22_196  [key=2, style=dotted];
m22_406 -> m22_404  [color=blue, key=0, style=bold];
m22_409 -> m22_407  [color=blue, key=0, style=bold];
m22_412 -> m22_410  [color=blue, key=0, style=bold];
m22_365 -> m22_366  [key=0, style=solid];
m22_365 -> m22_371  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_365 -> m22_164  [color=darkorchid, key=3, label="method methodReturn bool TryParsePath", style=bold];
m22_365 -> m22_163  [color=darkorchid, key=3, label="method methodReturn bool TryParsePath", style=bold];
m22_366 -> m22_367  [key=0, style=solid];
m22_371 -> m22_372  [key=0, style=solid];
m22_371 -> m22_393  [key=2, style=dotted];
m22_371 -> m22_322  [key=2, style=dotted];
m22_371 -> m22_371  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_371 -> m22_408  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_371 -> m22_373  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_371 -> m22_374  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_371 -> m22_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_367 -> m22_368  [key=0, style=solid];
m22_368 -> m22_369  [key=0, style=solid];
m22_368 -> m22_389  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m22_369 -> m22_370  [key=0, style=solid];
m22_369 -> m22_372  [color=darkseagreen4, key=1, label=pathSeparators, style=dashed];
m22_369 -> m22_374  [color=darkseagreen4, key=1, label=pathSeparators, style=dashed];
m22_370 -> m22_371  [key=0, style=solid];
m22_370 -> m22_390  [key=2, style=dotted];
m22_370 -> m22_391  [key=2, style=dotted];
m22_370 -> m22_392  [key=2, style=dotted];
m22_370 -> m22_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_370 -> m22_375  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m22_370 -> m22_411  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m22_372 -> m22_373  [key=0, style=solid];
m22_372 -> m22_374  [key=0, style=solid];
m22_372 -> m22_394  [key=2, style=dotted];
m22_372 -> m22_395  [key=2, style=dotted];
m22_372 -> m22_407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_374 -> m22_375  [key=0, style=solid];
m22_374 -> m22_397  [key=2, style=dotted];
m22_374 -> m22_398  [key=2, style=dotted];
m22_374 -> m22_376  [color=darkseagreen4, key=1, label=info, style=dashed];
m22_374 -> m22_377  [color=darkseagreen4, key=1, label=info, style=dashed];
m22_374 -> m22_378  [color=darkseagreen4, key=1, label=info, style=dashed];
m22_374 -> m22_379  [color=darkseagreen4, key=1, label=info, style=dashed];
m22_374 -> m22_383  [color=darkseagreen4, key=1, label=info, style=dashed];
m22_375 -> m22_376  [key=0, style=solid];
m22_375 -> m22_399  [key=2, style=dotted];
m22_375 -> m22_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_375 -> m22_377  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m22_375 -> m22_378  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m22_375 -> m22_379  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m22_375 -> m22_383  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m22_373 -> m22_372  [key=0, style=solid];
m22_373 -> m22_396  [key=2, style=dotted];
m22_373 -> m22_373  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_373 -> m22_374  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_373 -> m22_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_386 -> m22_387  [key=0, style=solid];
m22_386 -> m22_402  [key=2, style=dotted];
m22_386 -> m22_403  [key=2, style=dotted];
m22_376 -> m22_377  [key=0, style=solid];
m22_376 -> m22_384  [color=darkseagreen4, key=1, label=market, style=dashed];
m22_377 -> m22_378  [key=0, style=solid];
m22_377 -> m22_384  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m22_378 -> m22_379  [key=0, style=solid];
m22_378 -> m22_324  [key=2, style=dotted];
m22_378 -> m22_382  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m22_378 -> m22_389  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m22_379 -> m22_380  [key=0, style=solid];
m22_379 -> m22_324  [key=2, style=dotted];
m22_379 -> m22_384  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m22_383 -> m22_384  [key=0, style=solid];
m22_383 -> m22_400  [key=2, style=dotted];
m22_383 -> m22_326  [key=2, style=dotted];
m22_383 -> m22_389  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m22_384 -> m22_385  [key=0, style=solid];
m22_384 -> m22_388  [key=0, style=solid];
m22_384 -> m22_401  [key=2, style=dotted];
m22_384 -> m22_389  [color=darkseagreen4, key=1, label="out QuantConnect.Symbol", style=dashed];
m22_382 -> m22_383  [key=0, style=solid];
m22_382 -> m22_384  [key=0, style=solid];
m22_380 -> m22_381  [key=0, style=solid];
m22_380 -> m22_382  [key=0, style=solid];
m22_381 -> m22_388  [key=0, style=solid];
m22_381 -> m22_147  [key=2, style=dotted];
m22_385 -> m22_386  [key=0, style=solid];
m22_388 -> m22_389  [key=0, style=solid];
m22_387 -> m22_389  [key=0, style=solid];
m22_389 -> m22_365  [color=blue, key=0, style=bold];
m22_254 -> m22_245  [color=blue, key=0, style=bold];
m22_245 -> m22_246  [key=0, style=solid];
m22_245 -> m22_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_245 -> m22_249  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_245 -> m22_251  [color=red, key=1, label="QuantConnect.SecurityType", style=dashed];
m22_245 -> m22_253  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m22_246 -> m22_247  [key=0, style=solid];
m22_246 -> m22_248  [key=0, style=solid];
m22_248 -> m22_249  [key=0, style=solid];
m22_248 -> m22_196  [key=2, style=dotted];
m22_248 -> m22_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_248 -> m22_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_248 -> m22_253  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_249 -> m22_250  [key=0, style=solid];
m22_249 -> m22_251  [color=red, key=0, style=solid];
m22_251 -> m22_252  [color=red, key=0, style=solid];
m22_251 -> m22_253  [color=red, key=0, style=solid];
m22_253 -> m22_254  [key=0, style=solid];
m22_253 -> m22_143  [key=2, style=dotted];
m22_253 -> m22_195  [key=2, style=dotted];
m22_253 -> m22_240  [key=2, style=dotted];
m22_247 -> m22_254  [key=0, style=solid];
m22_247 -> m22_151  [key=2, style=dotted];
m22_250 -> m22_254  [key=0, style=solid];
m22_252 -> m22_253  [key=0, style=solid];
m22_171 -> m22_172  [key=0, style=solid];
m22_172 -> m22_173  [key=0, style=solid];
m22_172 -> m22_174  [key=2, style=dotted];
m22_172 -> m22_170  [key=2, style=dotted];
m22_173 -> m22_171  [color=blue, key=0, style=bold];
m22_211 -> m22_282  [key=0, style=solid];
m22_211 -> m22_283  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_211 -> m22_284  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m22_211 -> m22_285  [color=red, key=1, label="QuantConnect.SecurityType", style=dashed];
m22_211 -> m22_174  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m22_282 -> m22_283  [key=0, style=solid];
m22_282 -> m22_284  [key=0, style=solid];
m22_283 -> m22_288  [key=0, style=solid];
m22_283 -> m22_196  [key=2, style=dotted];
m22_284 -> m22_285  [color=red, key=0, style=solid];
m22_284 -> m22_143  [key=2, style=dotted];
m22_284 -> m22_287  [color=darkseagreen4, key=1, label=zipFileName, style=dashed];
m22_285 -> m22_286  [color=red, key=0, style=solid];
m22_285 -> m22_285  [color=red, key=1, label="QuantConnect.TickType?", style=dashed];
m22_287 -> m22_288  [key=0, style=solid];
m22_286 -> m22_287  [key=0, style=solid];
m22_286 -> m22_195  [key=2, style=dotted];
m22_286 -> m22_241  [key=2, style=dotted];
m22_288 -> m22_211  [color=blue, key=0, style=bold];
m22_321 -> m22_294  [color=blue, key=0, style=bold];
m22_294 -> m22_295  [key=0, style=solid];
m22_294 -> m22_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_294 -> m22_297  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_294 -> m22_304  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_294 -> m22_309  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_294 -> m22_320  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_295 -> m22_296  [key=0, style=solid];
m22_295 -> m22_299  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m22_295 -> m22_311  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m22_296 -> m22_297  [key=0, style=solid];
m22_296 -> m22_322  [key=2, style=dotted];
m22_296 -> m22_323  [key=2, style=dotted];
m22_296 -> m22_300  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_301  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_302  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_303  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_305  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_306  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_307  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_308  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_312  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_313  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_315  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_316  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_317  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_296 -> m22_319  [color=darkseagreen4, key=1, label=parts, style=dashed];
m22_297 -> m22_298  [key=0, style=solid];
m22_297 -> m22_310  [key=0, style=solid];
m22_297 -> m22_320  [key=0, style=solid];
m22_304 -> m22_321  [key=0, style=solid];
m22_304 -> m22_327  [key=2, style=dotted];
m22_309 -> m22_321  [key=0, style=solid];
m22_309 -> m22_327  [key=2, style=dotted];
m22_320 -> m22_321  [key=0, style=solid];
m22_320 -> m22_151  [key=2, style=dotted];
m22_299 -> m22_300  [key=0, style=solid];
m22_299 -> m22_305  [key=0, style=solid];
m22_311 -> m22_312  [key=0, style=solid];
m22_311 -> m22_316  [key=0, style=solid];
m22_300 -> m22_301  [key=0, style=solid];
m22_300 -> m22_324  [key=2, style=dotted];
m22_300 -> m22_304  [color=darkseagreen4, key=1, label=style, style=dashed];
m22_301 -> m22_302  [key=0, style=solid];
m22_301 -> m22_324  [key=2, style=dotted];
m22_301 -> m22_304  [color=darkseagreen4, key=1, label=right, style=dashed];
m22_302 -> m22_303  [key=0, style=solid];
m22_302 -> m22_325  [key=2, style=dotted];
m22_302 -> m22_304  [color=darkseagreen4, key=1, label=strike, style=dashed];
m22_303 -> m22_304  [key=0, style=solid];
m22_303 -> m22_326  [key=2, style=dotted];
m22_305 -> m22_306  [key=0, style=solid];
m22_305 -> m22_324  [key=2, style=dotted];
m22_305 -> m22_309  [color=darkseagreen4, key=1, label=style, style=dashed];
m22_306 -> m22_307  [key=0, style=solid];
m22_306 -> m22_324  [key=2, style=dotted];
m22_306 -> m22_309  [color=darkseagreen4, key=1, label=right, style=dashed];
m22_307 -> m22_308  [key=0, style=solid];
m22_307 -> m22_325  [key=2, style=dotted];
m22_307 -> m22_309  [color=darkseagreen4, key=1, label=strike, style=dashed];
m22_308 -> m22_309  [key=0, style=solid];
m22_308 -> m22_326  [key=2, style=dotted];
m22_312 -> m22_313  [key=0, style=solid];
m22_312 -> m22_326  [key=2, style=dotted];
m22_312 -> m22_314  [color=darkseagreen4, key=1, label=expiryYearMonth, style=dashed];
m22_313 -> m22_314  [key=0, style=solid];
m22_313 -> m22_328  [key=2, style=dotted];
m22_315 -> m22_321  [key=0, style=solid];
m22_315 -> m22_330  [key=2, style=dotted];
m22_316 -> m22_317  [key=0, style=solid];
m22_316 -> m22_326  [key=2, style=dotted];
m22_316 -> m22_318  [color=darkseagreen4, key=1, label=expiryYearMonth, style=dashed];
m22_317 -> m22_318  [key=0, style=solid];
m22_317 -> m22_328  [key=2, style=dotted];
m22_319 -> m22_321  [key=0, style=solid];
m22_319 -> m22_330  [key=2, style=dotted];
m22_298 -> m22_299  [key=0, style=solid];
m22_310 -> m22_311  [key=0, style=solid];
m22_314 -> m22_315  [key=0, style=solid];
m22_314 -> m22_329  [key=2, style=dotted];
m22_318 -> m22_319  [key=0, style=solid];
m22_318 -> m22_329  [key=2, style=dotted];
m22_161 -> m22_162  [key=0, style=solid];
m22_161 -> m22_163  [color=darkorchid, key=3, label="method methodReturn bool IsCommonLeanDataType", style=bold];
m22_161 -> m22_164  [color=darkorchid, key=3, label="method methodReturn bool IsCommonLeanDataType", style=bold];
m22_162 -> m22_163  [key=0, style=solid];
m22_162 -> m22_164  [key=0, style=solid];
m22_163 -> m22_165  [key=0, style=solid];
m22_164 -> m22_165  [key=0, style=solid];
m22_165 -> m22_161  [color=blue, key=0, style=bold];
m22_199 -> m22_200  [key=0, style=solid];
m22_200 -> m22_201  [key=0, style=solid];
m22_200 -> m22_196  [key=2, style=dotted];
m22_200 -> m22_202  [key=2, style=dotted];
m22_201 -> m22_199  [color=blue, key=0, style=bold];
m22_174 -> m22_206  [key=0, style=solid];
m22_174 -> m22_207  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_174 -> m22_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_174 -> m22_209  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_174 -> m22_171  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m22_206 -> m22_207  [key=0, style=solid];
m22_206 -> m22_195  [key=2, style=dotted];
m22_206 -> m22_196  [key=2, style=dotted];
m22_206 -> m22_197  [key=2, style=dotted];
m22_206 -> m22_208  [color=darkseagreen4, key=1, label=directory, style=dashed];
m22_206 -> m22_209  [color=darkseagreen4, key=1, label=directory, style=dashed];
m22_207 -> m22_208  [key=0, style=solid];
m22_207 -> m22_209  [key=0, style=solid];
m22_208 -> m22_209  [key=0, style=solid];
m22_208 -> m22_196  [key=2, style=dotted];
m22_208 -> m22_170  [key=2, style=dotted];
m22_208 -> m22_208  [color=darkseagreen4, key=1, label=directory, style=dashed];
m22_209 -> m22_210  [key=0, style=solid];
m22_209 -> m22_211  [key=2, style=dotted];
m22_209 -> m22_170  [key=2, style=dotted];
m22_210 -> m22_174  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m22_0 -> m22_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_0 -> m22_7  [color=darkorchid, key=3, label="method methodReturn string GenerateLine", style=bold];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_5  [key=2, style=dotted];
m22_1 -> m22_3  [color=darkseagreen4, key=1, label=clone, style=dashed];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_6  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_7  [key=2, style=dotted];
m22_4 -> m22_0  [color=blue, key=0, style=bold];
m22_169 -> m22_203  [key=0, style=solid];
m22_169 -> m22_166  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m22_203 -> m22_204  [key=0, style=solid];
m22_203 -> m22_175  [key=2, style=dotted];
m22_203 -> m22_205  [key=2, style=dotted];
m22_203 -> m22_170  [key=2, style=dotted];
m22_204 -> m22_169  [color=blue, key=0, style=bold];
m22_239 -> m22_212  [color=blue, key=0, style=bold];
m22_212 -> m22_213  [key=0, style=solid];
m22_212 -> m22_214  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_212 -> m22_215  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_220  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_221  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_223  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_224  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_227  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_228  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_231  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_232  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_235  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_212 -> m22_236  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_213 -> m22_214  [key=0, style=solid];
m22_213 -> m22_143  [key=2, style=dotted];
m22_213 -> m22_221  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_213 -> m22_224  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_213 -> m22_228  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_213 -> m22_232  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_213 -> m22_236  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m22_214 -> m22_215  [key=0, style=solid];
m22_214 -> m22_222  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_214 -> m22_226  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_214 -> m22_230  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_214 -> m22_234  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_215 -> m22_216  [key=0, style=solid];
m22_215 -> m22_225  [key=0, style=solid];
m22_215 -> m22_229  [key=0, style=solid];
m22_215 -> m22_233  [key=0, style=solid];
m22_215 -> m22_237  [key=0, style=solid];
m22_220 -> m22_221  [key=0, style=solid];
m22_220 -> m22_222  [key=0, style=solid];
m22_221 -> m22_239  [key=0, style=solid];
m22_221 -> m22_196  [key=2, style=dotted];
m22_221 -> m22_240  [key=2, style=dotted];
m22_223 -> m22_239  [key=0, style=solid];
m22_223 -> m22_196  [key=2, style=dotted];
m22_223 -> m22_241  [key=2, style=dotted];
m22_224 -> m22_239  [key=0, style=solid];
m22_224 -> m22_196  [key=2, style=dotted];
m22_224 -> m22_195  [key=2, style=dotted];
m22_224 -> m22_240  [key=2, style=dotted];
m22_227 -> m22_239  [key=0, style=solid];
m22_227 -> m22_196  [key=2, style=dotted];
m22_227 -> m22_195  [key=2, style=dotted];
m22_227 -> m22_242  [key=2, style=dotted];
m22_228 -> m22_239  [key=0, style=solid];
m22_228 -> m22_196  [key=2, style=dotted];
m22_228 -> m22_195  [key=2, style=dotted];
m22_228 -> m22_240  [key=2, style=dotted];
m22_231 -> m22_239  [key=0, style=solid];
m22_231 -> m22_196  [key=2, style=dotted];
m22_231 -> m22_195  [key=2, style=dotted];
m22_231 -> m22_144  [key=2, style=dotted];
m22_231 -> m22_143  [key=2, style=dotted];
m22_231 -> m22_243  [key=2, style=dotted];
m22_232 -> m22_239  [key=0, style=solid];
m22_232 -> m22_196  [key=2, style=dotted];
m22_232 -> m22_195  [key=2, style=dotted];
m22_232 -> m22_144  [key=2, style=dotted];
m22_232 -> m22_143  [key=2, style=dotted];
m22_232 -> m22_243  [key=2, style=dotted];
m22_235 -> m22_239  [key=0, style=solid];
m22_235 -> m22_196  [key=2, style=dotted];
m22_235 -> m22_195  [key=2, style=dotted];
m22_235 -> m22_143  [key=2, style=dotted];
m22_235 -> m22_244  [key=2, style=dotted];
m22_236 -> m22_239  [key=0, style=solid];
m22_236 -> m22_196  [key=2, style=dotted];
m22_236 -> m22_195  [key=2, style=dotted];
m22_236 -> m22_143  [key=2, style=dotted];
m22_236 -> m22_244  [key=2, style=dotted];
m22_222 -> m22_223  [key=0, style=solid];
m22_222 -> m22_224  [key=0, style=solid];
m22_226 -> m22_227  [key=0, style=solid];
m22_226 -> m22_228  [key=0, style=solid];
m22_230 -> m22_231  [key=0, style=solid];
m22_230 -> m22_232  [key=0, style=solid];
m22_234 -> m22_235  [key=0, style=solid];
m22_234 -> m22_236  [key=0, style=solid];
m22_216 -> m22_217  [key=0, style=solid];
m22_225 -> m22_226  [key=0, style=solid];
m22_229 -> m22_230  [key=0, style=solid];
m22_233 -> m22_234  [key=0, style=solid];
m22_237 -> m22_238  [key=0, style=solid];
m22_217 -> m22_218  [key=0, style=solid];
m22_218 -> m22_219  [key=0, style=solid];
m22_219 -> m22_220  [key=0, style=solid];
m22_238 -> m22_239  [key=0, style=solid];
m22_238 -> m22_198  [key=2, style=dotted];
m22_175 -> m22_176  [key=0, style=solid];
m22_175 -> m22_177  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_175 -> m22_178  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_175 -> m22_179  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_175 -> m22_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_175 -> m22_187  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_175 -> m22_189  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_175 -> m22_191  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_175 -> m22_169  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m22_176 -> m22_177  [key=0, style=solid];
m22_176 -> m22_187  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_176 -> m22_189  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_176 -> m22_191  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m22_177 -> m22_178  [key=0, style=solid];
m22_177 -> m22_195  [key=2, style=dotted];
m22_177 -> m22_180  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m22_178 -> m22_179  [key=0, style=solid];
m22_178 -> m22_196  [key=2, style=dotted];
m22_178 -> m22_180  [color=darkseagreen4, key=1, label=market, style=dashed];
m22_179 -> m22_180  [key=0, style=solid];
m22_179 -> m22_195  [key=2, style=dotted];
m22_181 -> m22_182  [key=0, style=solid];
m22_181 -> m22_188  [key=0, style=solid];
m22_181 -> m22_190  [key=0, style=solid];
m22_181 -> m22_192  [key=0, style=solid];
m22_187 -> m22_194  [key=0, style=solid];
m22_187 -> m22_196  [key=2, style=dotted];
m22_187 -> m22_170  [key=2, style=dotted];
m22_189 -> m22_194  [key=0, style=solid];
m22_189 -> m22_196  [key=2, style=dotted];
m22_189 -> m22_170  [key=2, style=dotted];
m22_191 -> m22_194  [key=0, style=solid];
m22_191 -> m22_196  [key=2, style=dotted];
m22_191 -> m22_170  [key=2, style=dotted];
m22_180 -> m22_181  [key=0, style=solid];
m22_180 -> m22_197  [key=2, style=dotted];
m22_180 -> m22_187  [color=darkseagreen4, key=1, label=directory, style=dashed];
m22_180 -> m22_189  [color=darkseagreen4, key=1, label=directory, style=dashed];
m22_180 -> m22_191  [color=darkseagreen4, key=1, label=directory, style=dashed];
m22_182 -> m22_183  [key=0, style=solid];
m22_188 -> m22_189  [key=0, style=solid];
m22_190 -> m22_191  [key=0, style=solid];
m22_192 -> m22_193  [key=0, style=solid];
m22_183 -> m22_184  [key=0, style=solid];
m22_184 -> m22_185  [key=0, style=solid];
m22_185 -> m22_186  [key=0, style=solid];
m22_186 -> m22_187  [key=0, style=solid];
m22_193 -> m22_194  [key=0, style=solid];
m22_193 -> m22_198  [key=2, style=dotted];
m22_194 -> m22_175  [color=blue, key=0, style=bold];
m22_289 -> m22_290  [key=0, style=solid];
m22_289 -> m22_291  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickType", style=bold];
m22_289 -> m22_292  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickType", style=bold];
m22_290 -> m22_291  [key=0, style=solid];
m22_290 -> m22_292  [key=0, style=solid];
m22_291 -> m22_293  [key=0, style=solid];
m22_292 -> m22_293  [key=0, style=solid];
m22_293 -> m22_289  [color=blue, key=0, style=bold];
m22_414 -> m22_408  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_415 -> m22_411  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m23_0 -> m23_1  [color=green, key=0, style=solid];
m23_0 -> m23_2  [color=green, key=1, label="QuantConnect.TimeKeeper", style=dashed];
m23_1 -> m23_2  [color=green, key=0, style=solid];
m23_91 -> m23_1  [color=green, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_91 -> m23_2  [color=green, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m24_67 -> m24_74  [key=0, style=solid];
m24_67 -> m24_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_67 -> m24_51  [color=darkorchid, key=3, label="Parameter variable string fileName", style=bold];
m24_74 -> m24_75  [key=0, style=solid];
m24_74 -> m24_86  [key=2, style=dotted];
m24_74 -> m24_83  [color=darkseagreen4, key=1, label=rows, style=dashed];
m24_74 -> m24_84  [color=darkseagreen4, key=1, label=rows, style=dashed];
m24_75 -> m24_76  [key=0, style=solid];
m24_75 -> m24_87  [key=2, style=dotted];
m24_75 -> m24_77  [color=darkseagreen4, key=1, label=zip, style=dashed];
m24_83 -> m24_81  [key=0, style=solid];
m24_84 -> m24_85  [key=0, style=solid];
m24_76 -> m24_77  [key=0, style=solid];
m24_76 -> m24_88  [key=2, style=dotted];
m24_76 -> m24_78  [color=darkseagreen4, key=1, label=stream, style=dashed];
m24_76 -> m24_79  [color=darkseagreen4, key=1, label=stream, style=dashed];
m24_77 -> m24_78  [key=0, style=solid];
m24_77 -> m24_89  [key=2, style=dotted];
m24_78 -> m24_79  [key=0, style=solid];
m24_78 -> m24_90  [key=2, style=dotted];
m24_79 -> m24_80  [key=0, style=solid];
m24_79 -> m24_91  [key=2, style=dotted];
m24_79 -> m24_81  [color=darkseagreen4, key=1, label=reader, style=dashed];
m24_80 -> m24_81  [key=0, style=solid];
m24_81 -> m24_82  [key=0, style=solid];
m24_81 -> m24_84  [key=0, style=solid];
m24_81 -> m24_92  [key=2, style=dotted];
m24_81 -> m24_83  [color=darkseagreen4, key=1, label=line, style=dashed];
m24_82 -> m24_83  [key=0, style=solid];
m24_82 -> m24_93  [key=2, style=dotted];
m24_82 -> m24_94  [key=2, style=dotted];
m24_85 -> m24_67  [color=blue, key=0, style=bold];
m24_14 -> m24_15  [key=0, style=solid];
m24_14 -> m24_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m24_14 -> m24_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_19  [key=0, style=solid];
m24_18 -> m24_23  [key=0, style=solid];
m24_18 -> m24_24  [key=2, style=dotted];
m24_22 -> m24_23  [key=0, style=solid];
m24_22 -> m24_25  [key=2, style=dotted];
m24_16 -> m24_17  [key=0, style=solid];
m24_19 -> m24_20  [key=0, style=solid];
m24_17 -> m24_18  [key=0, style=solid];
m24_20 -> m24_21  [key=0, style=solid];
m24_21 -> m24_22  [key=0, style=solid];
m24_23 -> m24_14  [color=blue, key=0, style=bold];
m24_101 -> m24_102  [key=0, style=solid];
m24_101 -> m24_110  [key=2, style=dotted];
m24_101 -> m24_111  [key=2, style=dotted];
m24_45 -> m24_95  [key=0, style=solid];
m24_45 -> m24_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_45 -> m24_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_45 -> m24_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_45 -> m24_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_45 -> m24_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_45 -> m24_101  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m24_45 -> m24_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_45 -> m24_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_45 -> m24_32  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m24_45 -> m24_38  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m24_45 -> m24_51  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m24_45 -> m24_27  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m24_45 -> m24_50  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m24_95 -> m24_96  [key=0, style=solid];
m24_95 -> m24_101  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m24_95 -> m24_102  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m24_96 -> m24_97  [key=0, style=solid];
m24_96 -> m24_105  [key=2, style=dotted];
m24_96 -> m24_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_96 -> m24_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_97 -> m24_98  [key=0, style=solid];
m24_97 -> m24_100  [key=0, style=solid];
m24_97 -> m24_66  [key=2, style=dotted];
m24_98 -> m24_99  [key=0, style=solid];
m24_98 -> m24_106  [key=2, style=dotted];
m24_99 -> m24_100  [key=0, style=solid];
m24_99 -> m24_107  [key=2, style=dotted];
m24_100 -> m24_101  [key=0, style=solid];
m24_100 -> m24_108  [key=2, style=dotted];
m24_100 -> m24_109  [key=2, style=dotted];
m24_102 -> m24_103  [key=0, style=solid];
m24_102 -> m24_112  [key=2, style=dotted];
m24_103 -> m24_104  [key=0, style=solid];
m24_103 -> m24_107  [key=2, style=dotted];
m24_104 -> m24_45  [color=blue, key=0, style=bold];
m24_71 -> m24_72  [key=0, style=solid];
m24_68 -> m24_69  [key=0, style=solid];
m24_69 -> m24_70  [key=0, style=solid];
m24_70 -> m24_68  [color=blue, key=0, style=bold];
m24_72 -> m24_73  [key=0, style=solid];
m24_72 -> m24_47  [key=2, style=dotted];
m24_73 -> m24_71  [color=blue, key=0, style=bold];
m24_25 -> m24_26  [key=0, style=solid];
m24_25 -> m24_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m24_25 -> m24_14  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> source", style=bold];
m24_26 -> m24_27  [key=0, style=solid];
m24_26 -> m24_41  [key=2, style=dotted];
m24_26 -> m24_33  [color=darkseagreen4, key=1, label=sb, style=dashed];
m24_26 -> m24_34  [color=darkseagreen4, key=1, label=sb, style=dashed];
m24_26 -> m24_36  [color=darkseagreen4, key=1, label=sb, style=dashed];
m24_26 -> m24_37  [color=darkseagreen4, key=1, label=sb, style=dashed];
m24_26 -> m24_39  [color=darkseagreen4, key=1, label=sb, style=dashed];
m24_28 -> m24_29  [key=0, style=solid];
m24_28 -> m24_37  [key=0, style=solid];
m24_28 -> m24_31  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_28 -> m24_35  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_28 -> m24_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_27 -> m24_28  [key=0, style=solid];
m24_27 -> m24_42  [key=2, style=dotted];
m24_27 -> m24_29  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_27 -> m24_31  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_27 -> m24_32  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_27 -> m24_33  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_27 -> m24_38  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_27 -> m24_39  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_33 -> m24_34  [key=0, style=solid];
m24_33 -> m24_44  [key=2, style=dotted];
m24_33 -> m24_45  [key=2, style=dotted];
m24_34 -> m24_35  [key=0, style=solid];
m24_34 -> m24_46  [key=2, style=dotted];
m24_36 -> m24_28  [key=0, style=solid];
m24_36 -> m24_47  [key=2, style=dotted];
m24_36 -> m24_48  [key=2, style=dotted];
m24_37 -> m24_38  [key=0, style=solid];
m24_37 -> m24_40  [key=0, style=solid];
m24_39 -> m24_40  [key=0, style=solid];
m24_39 -> m24_44  [key=2, style=dotted];
m24_39 -> m24_45  [key=2, style=dotted];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_31  [key=0, style=solid];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_35  [key=0, style=solid];
m24_32 -> m24_33  [key=0, style=solid];
m24_32 -> m24_43  [key=2, style=dotted];
m24_38 -> m24_39  [key=0, style=solid];
m24_38 -> m24_43  [key=2, style=dotted];
m24_35 -> m24_36  [key=0, style=solid];
m24_35 -> m24_38  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_35 -> m24_39  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_30 -> m24_40  [key=0, style=solid];
m24_30 -> m24_13  [key=2, style=dotted];
m24_40 -> m24_25  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_0 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m24_0 -> m24_4  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m24_0 -> m24_5  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m24_0 -> m24_6  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m24_1 -> m24_2  [key=0, style=solid];
m24_2 -> m24_3  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_12  [key=2, style=dotted];
m24_6 -> m24_7  [key=0, style=solid];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_9  [key=0, style=solid];
m24_8 -> m24_9  [key=0, style=solid];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_11  [key=0, style=solid];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_13  [key=2, style=dotted];
m24_11 -> m24_0  [color=blue, key=0, style=bold];
m24_24 -> m24_49  [key=0, style=solid];
m24_24 -> m24_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m24_24 -> m24_14  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> source", style=bold];
m24_49 -> m24_50  [key=0, style=solid];
m24_49 -> m24_41  [key=2, style=dotted];
m24_49 -> m24_60  [color=darkseagreen4, key=1, label=sb, style=dashed];
m24_49 -> m24_61  [color=darkseagreen4, key=1, label=sb, style=dashed];
m24_49 -> m24_62  [color=darkseagreen4, key=1, label=sb, style=dashed];
m24_52 -> m24_53  [key=0, style=solid];
m24_52 -> m24_64  [key=2, style=dotted];
m24_52 -> m24_65  [key=2, style=dotted];
m24_52 -> m24_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_52 -> m24_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_52 -> m24_56  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m24_52 -> m24_58  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m24_50 -> m24_51  [key=0, style=solid];
m24_50 -> m24_42  [key=2, style=dotted];
m24_50 -> m24_62  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m24_60 -> m24_59  [key=0, style=solid];
m24_60 -> m24_48  [key=2, style=dotted];
m24_60 -> m24_60  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m24_61 -> m24_62  [key=0, style=solid];
m24_61 -> m24_63  [key=0, style=solid];
m24_62 -> m24_63  [key=0, style=solid];
m24_62 -> m24_44  [key=2, style=dotted];
m24_62 -> m24_45  [key=2, style=dotted];
m24_51 -> m24_52  [key=0, style=solid];
m24_51 -> m24_43  [key=2, style=dotted];
m24_51 -> m24_54  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m24_51 -> m24_55  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m24_51 -> m24_62  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m24_54 -> m24_55  [key=0, style=solid];
m24_54 -> m24_58  [key=0, style=solid];
m24_54 -> m24_66  [key=2, style=dotted];
m24_55 -> m24_56  [key=0, style=solid];
m24_55 -> m24_67  [key=2, style=dotted];
m24_55 -> m24_57  [color=darkseagreen4, key=1, label=rows, style=dashed];
m24_55 -> m24_59  [color=darkseagreen4, key=1, label=rows, style=dashed];
m24_53 -> m24_54  [key=0, style=solid];
m24_53 -> m24_67  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.SortedDictionary<System.DateTime, string> rows", style=bold];
m24_53 -> m24_52  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.SortedDictionary<System.DateTime, string> rows", style=bold];
m24_56 -> m24_57  [key=0, style=solid];
m24_56 -> m24_59  [key=0, style=solid];
m24_58 -> m24_59  [key=0, style=solid];
m24_57 -> m24_56  [key=0, style=solid];
m24_57 -> m24_57  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m24_59 -> m24_60  [key=0, style=solid];
m24_59 -> m24_61  [key=0, style=solid];
m24_63 -> m24_24  [color=blue, key=0, style=bold];
m24_43 -> m24_113  [color=red, key=0, style=solid];
m24_43 -> m24_27  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m24_43 -> m24_50  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m24_113 -> m24_114  [color=red, key=0, style=solid];
m24_113 -> m24_115  [color=red, key=2, style=dotted];
m24_114 -> m24_43  [color=blue, key=0, style=bold];
m24_116 -> m24_1  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_2  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_4  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_5  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_6  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_7  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_8  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_9  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_10  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_15  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_18  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_22  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_32  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_33  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_36  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_38  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_39  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_51  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_52  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_72  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_62  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_101  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m24_116 -> m24_113  [color=red, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_9  [key=2, style=dotted];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_10  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_11  [key=2, style=dotted];
m26_4 -> m26_5  [color=red, key=0, style=solid];
m26_4 -> m26_12  [key=2, style=dotted];
m26_4 -> m26_24  [color=darkorchid, key=3, label="Field variable QuantConnect.Securities.SecurityManager Securities", style=bold];
m26_5 -> m26_6  [color=red, key=0, style=solid];
m26_5 -> m26_12  [color=red, key=2, style=dotted];
m26_5 -> m26_5  [color=red, key=3, label="Field variable bool _isActive", style=bold];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_12  [key=2, style=dotted];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_12  [key=2, style=dotted];
m26_8 -> m26_0  [color=blue, key=0, style=bold];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_16  [key=0, style=solid];
m26_17 -> m26_18  [color=red, key=0, style=solid];
m26_17 -> m26_25  [key=0, style=solid];
m26_15 -> m26_25  [key=0, style=solid];
m26_16 -> m26_17  [key=0, style=solid];
m26_18 -> m26_19  [color=red, key=0, style=solid];
m26_18 -> m26_18  [color=red, key=1, label=kvp, style=dashed];
m26_18 -> m26_21  [color=red, key=1, label=symbol, style=dashed];
m26_18 -> m26_23  [color=red, key=1, label=symbol, style=dashed];
m26_18 -> m26_24  [color=red, key=1, label=symbol, style=dashed];
m26_19 -> m26_20  [color=red, key=0, style=solid];
m26_19 -> m26_19  [color=red, key=1, label=kvp, style=dashed];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_24  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m26_23 -> m26_17  [key=0, style=solid];
m26_23 -> m26_27  [key=2, style=dotted];
m26_24 -> m26_17  [key=0, style=solid];
m26_24 -> m26_28  [key=2, style=dotted];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_17  [key=0, style=solid];
m26_20 -> m26_26  [key=2, style=dotted];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_24  [key=0, style=solid];
m26_25 -> m26_13  [color=blue, key=0, style=bold];
m26_29 -> m26_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_5  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m26_29 -> m26_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m28_4 -> m28_5  [key=0, style=solid];
m28_5 -> m28_6  [key=0, style=solid];
m28_6 -> m28_4  [color=blue, key=0, style=bold];
m28_7 -> m28_8  [key=0, style=solid];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_0  [key=2, style=dotted];
m28_8 -> m28_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_12  [key=2, style=dotted];
m28_10 -> m28_11  [key=0, style=solid];
m28_11 -> m28_7  [color=blue, key=0, style=bold];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_2  [color=blue, key=0, style=bold];
m28_13 -> m28_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m28_13 -> m28_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m29_7 -> m29_8  [key=0, style=solid];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_0  [key=2, style=dotted];
m29_8 -> m29_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_12  [key=2, style=dotted];
m29_10 -> m29_11  [key=0, style=solid];
m29_11 -> m29_7  [color=blue, key=0, style=bold];
m29_2 -> m29_3  [key=0, style=solid];
m29_3 -> m29_2  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_0  [color=blue, key=0, style=bold];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_6 -> m29_4  [color=blue, key=0, style=bold];
m29_13 -> m29_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m29_13 -> m29_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m30_19 -> m30_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m30_19 -> m30_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m30_19 -> m30_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m30_19 -> m30_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m30_19 -> m30_20  [key=0, style=solid];
m30_23 -> m30_24  [color=green, key=0, style=solid];
m30_23 -> m30_22  [color=green, key=0, style=solid];
m30_23 -> m30_32  [color=green, key=2, style=dotted];
m30_22 -> m30_23  [color=green, key=0, style=solid];
m30_22 -> m30_22  [color=darkseagreen4, key=1, label=chain, style=dashed];
m30_22 -> m30_21  [key=0, style=solid];
m30_22 -> m30_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m30_22 -> m30_26  [color=darkseagreen4, key=1, label=contract, style=dashed];
m30_22 -> m30_29  [color=darkseagreen4, key=1, label=contract, style=dashed];
m30_22 -> m30_30  [color=darkseagreen4, key=1, label=contract, style=dashed];
m30_24 -> m30_25  [color=green, key=0, style=solid];
m30_24 -> m30_26  [key=0, style=solid];
m30_24 -> m30_32  [key=2, style=dotted];
m30_25 -> m30_31  [color=green, key=0, style=solid];
m30_25 -> m30_33  [color=green, key=2, style=dotted];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_31  [key=0, style=solid];
m30_28 -> m30_22  [key=0, style=solid];
m30_28 -> m30_32  [key=2, style=dotted];
m30_28 -> m30_29  [key=0, style=solid];
m30_30 -> m30_22  [key=0, style=solid];
m30_30 -> m30_35  [key=2, style=dotted];
m30_26 -> m30_32  [key=2, style=dotted];
m30_26 -> m30_28  [key=0, style=solid];
m30_26 -> m30_27  [key=0, style=solid];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_34  [key=2, style=dotted];
m30_20 -> m30_31  [key=0, style=solid];
m30_20 -> m30_21  [key=0, style=solid];
m30_27 -> m30_31  [key=0, style=solid];
m30_27 -> m30_33  [key=2, style=dotted];
m30_31 -> m30_19  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_10  [key=2, style=dotted];
m30_2 -> m30_3  [key=0, style=solid];
m30_2 -> m30_11  [key=2, style=dotted];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_12  [key=2, style=dotted];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_13  [key=2, style=dotted];
m30_4 -> m30_6  [color=darkseagreen4, key=1, label=equity, style=dashed];
m30_4 -> m30_8  [color=darkseagreen4, key=1, label=equity, style=dashed];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_14  [key=2, style=dotted];
m30_5 -> m30_7  [color=darkseagreen4, key=1, label=option, style=dashed];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_18  [key=2, style=dotted];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_15  [key=2, style=dotted];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_16  [key=2, style=dotted];
m30_7 -> m30_17  [key=2, style=dotted];
m30_9 -> m30_0  [color=blue, key=0, style=bold];
m30_38 -> m30_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m30_38 -> m30_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m30_38 -> m30_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m30_38 -> m30_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m30_38 -> m30_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m30_38 -> m30_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m30_38 -> m30_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m30_38 -> m30_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m30_38 -> m30_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m31_2 -> m31_3  [color=green, key=0, style=solid];
m31_3 -> m31_4  [color=green, key=0, style=solid];
m31_4 -> m31_2  [color=blue, key=0, style=bold];
m31_5 -> m31_6  [key=0, style=solid];
m31_6 -> m31_7  [key=0, style=solid];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_9  [key=2, style=dotted];
m31_8 -> m31_5  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_0  [color=blue, key=0, style=bold];
m31_10 -> m31_11  [key=0, style=solid];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_0  [key=2, style=dotted];
m31_11 -> m31_13  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_15  [key=2, style=dotted];
m31_13 -> m31_14  [key=0, style=solid];
m31_14 -> m31_10  [color=blue, key=0, style=bold];
m31_16 -> m31_3  [color=green, key=1, label="QuantConnect.Orders.OptionExerciseOrder", style=dashed];
m31_16 -> m31_7  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OptionExerciseOrder", style=dashed];
m31_16 -> m31_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OptionExerciseOrder", style=dashed];
m32_49 -> m32_50  [key=0, style=solid];
m32_49 -> m32_51  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_53  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_54  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_55  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_56  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_58  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_49 -> m32_60  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_50 -> m32_51  [key=0, style=solid];
m32_51 -> m32_52  [key=0, style=solid];
m32_52 -> m32_53  [key=0, style=solid];
m32_52 -> m32_62  [key=2, style=dotted];
m32_53 -> m32_54  [key=0, style=solid];
m32_54 -> m32_55  [key=0, style=solid];
m32_55 -> m32_56  [key=0, style=solid];
m32_56 -> m32_57  [key=0, style=solid];
m32_57 -> m32_58  [key=0, style=solid];
m32_58 -> m32_59  [key=0, style=solid];
m32_59 -> m32_60  [key=0, style=solid];
m32_60 -> m32_61  [key=0, style=solid];
m32_61 -> m32_49  [color=blue, key=0, style=bold];
m32_15 -> m32_16  [key=0, style=solid];
m32_15 -> m32_19  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_15 -> m32_20  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m32_15 -> m32_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_16 -> m32_17  [key=0, style=solid];
m32_19 -> m32_20  [key=0, style=solid];
m32_20 -> m32_21  [key=0, style=solid];
m32_22 -> m32_23  [key=0, style=solid];
m32_17 -> m32_18  [key=0, style=solid];
m32_18 -> m32_19  [key=0, style=solid];
m32_21 -> m32_22  [key=0, style=solid];
m32_23 -> m32_24  [key=0, style=solid];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_14  [key=2, style=dotted];
m32_25 -> m32_26  [key=0, style=solid];
m32_26 -> m32_27  [key=0, style=solid];
m32_27 -> m32_15  [color=blue, key=0, style=bold];
m32_63 -> m32_64  [key=0, style=solid];
m32_63 -> m32_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_67  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_69  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_71  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_73  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_75  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_77  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_79  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_82  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_63 -> m32_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_64 -> m32_65  [key=0, style=solid];
m32_65 -> m32_66  [key=0, style=solid];
m32_65 -> m32_68  [key=0, style=solid];
m32_65 -> m32_70  [key=0, style=solid];
m32_65 -> m32_72  [key=0, style=solid];
m32_65 -> m32_74  [key=0, style=solid];
m32_65 -> m32_76  [key=0, style=solid];
m32_65 -> m32_78  [key=0, style=solid];
m32_65 -> m32_80  [key=0, style=solid];
m32_67 -> m32_81  [color=red, key=0, style=solid];
m32_67 -> m32_87  [color=red, key=2, style=dotted];
m32_69 -> m32_81  [color=red, key=0, style=solid];
m32_69 -> m32_88  [color=red, key=2, style=dotted];
m32_71 -> m32_81  [color=red, key=0, style=solid];
m32_71 -> m32_89  [color=red, key=2, style=dotted];
m32_73 -> m32_81  [color=red, key=0, style=solid];
m32_73 -> m32_90  [color=red, key=2, style=dotted];
m32_75 -> m32_81  [color=red, key=0, style=solid];
m32_75 -> m32_91  [color=red, key=2, style=dotted];
m32_77 -> m32_81  [color=red, key=0, style=solid];
m32_77 -> m32_92  [color=red, key=2, style=dotted];
m32_79 -> m32_81  [color=red, key=0, style=solid];
m32_79 -> m32_93  [color=red, key=2, style=dotted];
m32_79 -> m32_82  [color=red, key=1, label=order, style=dashed];
m32_79 -> m32_84  [color=red, key=1, label=order, style=dashed];
m32_79 -> m32_85  [color=red, key=1, label=order, style=dashed];
m32_82 -> m32_83  [key=0, style=solid];
m32_83 -> m32_84  [key=0, style=solid];
m32_83 -> m32_85  [key=0, style=solid];
m32_84 -> m32_85  [key=0, style=solid];
m32_66 -> m32_67  [color=red, key=0, style=solid];
m32_68 -> m32_69  [color=red, key=0, style=solid];
m32_70 -> m32_71  [color=red, key=0, style=solid];
m32_72 -> m32_73  [color=red, key=0, style=solid];
m32_74 -> m32_75  [color=red, key=0, style=solid];
m32_76 -> m32_77  [color=red, key=0, style=solid];
m32_78 -> m32_79  [color=red, key=0, style=solid];
m32_80 -> m32_86  [key=0, style=solid];
m32_80 -> m32_94  [key=2, style=dotted];
m32_81 -> m32_82  [key=0, style=solid];
m32_85 -> m32_86  [key=0, style=solid];
m32_86 -> m32_63  [color=blue, key=0, style=bold];
m32_47 -> m32_48  [key=0, style=solid];
m32_48 -> m32_47  [color=blue, key=0, style=bold];
m32_34 -> m32_35  [key=0, style=solid];
m32_34 -> m32_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m32_34 -> m32_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m32_34 -> m32_39  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m32_34 -> m32_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_37  [key=0, style=solid];
m32_37 -> m32_38  [key=0, style=solid];
m32_37 -> m32_39  [key=0, style=solid];
m32_38 -> m32_39  [key=0, style=solid];
m32_39 -> m32_40  [key=0, style=solid];
m32_39 -> m32_41  [key=0, style=solid];
m32_40 -> m32_41  [key=0, style=solid];
m32_36 -> m32_41  [key=0, style=solid];
m32_36 -> m32_42  [key=2, style=dotted];
m32_41 -> m32_34  [color=blue, key=0, style=bold];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_32  [key=2, style=dotted];
m32_30 -> m32_31  [key=0, style=solid];
m32_31 -> m32_28  [color=blue, key=0, style=bold];
m32_43 -> m32_44  [key=0, style=solid];
m32_44 -> m32_45  [key=0, style=solid];
m32_44 -> m32_46  [key=2, style=dotted];
m32_45 -> m32_43  [color=blue, key=0, style=bold];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_28  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m32_33 -> m32_32  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_13  [key=2, style=dotted];
m32_2 -> m32_3  [key=0, style=solid];
m32_3 -> m32_4  [key=0, style=solid];
m32_4 -> m32_5  [key=0, style=solid];
m32_5 -> m32_6  [key=0, style=solid];
m32_6 -> m32_7  [key=0, style=solid];
m32_7 -> m32_8  [key=0, style=solid];
m32_8 -> m32_9  [key=0, style=solid];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_14  [key=2, style=dotted];
m32_10 -> m32_11  [key=0, style=solid];
m32_11 -> m32_12  [key=0, style=solid];
m32_12 -> m32_0  [color=blue, key=0, style=bold];
m32_95 -> m32_1  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_2  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_7  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_8  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_16  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_26  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_29  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_35  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_44  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_50  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_51  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_53  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_54  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_55  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_56  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_58  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_95 -> m32_60  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m33_0 -> m33_1  [color=red, key=0, style=solid];
m33_0 -> m33_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m33_0 -> m33_2  [color=green, key=3, label="method methodReturn decimal GetOrderFee", style=bold];
m33_1 -> m33_2  [color=red, key=0, style=solid];
m33_1 -> m33_3  [color=red, key=0, style=solid];
m33_4 -> m33_5  [color=green, key=0, style=solid];
m33_2 -> m33_6  [key=0, style=solid];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_3  [color=green, key=3, label="Local variable decimal divisor", style=bold];
m33_5 -> m33_6  [color=green, key=0, style=solid];
m33_6 -> m33_0  [color=blue, key=0, style=bold];
m34_13 -> m34_14  [key=0, style=solid];
m34_13 -> m34_15  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m34_14 -> m34_15  [key=0, style=solid];
m34_14 -> m34_18  [key=2, style=dotted];
m34_15 -> m34_16  [key=0, style=solid];
m34_15 -> m34_19  [key=2, style=dotted];
m34_16 -> m34_17  [key=0, style=solid];
m34_17 -> m34_13  [color=blue, key=0, style=bold];
m34_61 -> m34_62  [key=0, style=solid];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_3  [key=2, style=dotted];
m34_1 -> m34_4  [key=2, style=dotted];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_62 -> m34_63  [key=0, style=solid];
m34_62 -> m34_49  [key=2, style=dotted];
m34_63 -> m34_61  [color=blue, key=0, style=bold];
m34_9 -> m34_10  [key=0, style=solid];
m34_10 -> m34_11  [key=0, style=solid];
m34_10 -> m34_12  [key=2, style=dotted];
m34_11 -> m34_9  [color=blue, key=0, style=bold];
m34_20 -> m34_21  [key=0, style=solid];
m34_20 -> m34_22  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_23  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_24  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_25  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_26  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_27  [color=green, key=1, label=JObject, style=dashed];
m34_20 -> m34_28  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_29  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_30  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_31  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_32  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_34  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_38  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_39  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_40  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_42  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_43  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_20 -> m34_45  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_49  [key=2, style=dotted];
m34_22 -> m34_23  [key=0, style=solid];
m34_22 -> m34_50  [key=2, style=dotted];
m34_22 -> m34_24  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_25  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_26  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_27  [color=green, key=1, label=order, style=dashed];
m34_22 -> m34_28  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_29  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_31  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_41  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_46  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_22 -> m34_47  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_23 -> m34_24  [key=0, style=solid];
m34_23 -> m34_49  [key=2, style=dotted];
m34_24 -> m34_25  [key=0, style=solid];
m34_24 -> m34_49  [key=2, style=dotted];
m34_25 -> m34_26  [key=0, style=solid];
m34_25 -> m34_49  [key=2, style=dotted];
m34_26 -> m34_27  [color=green, key=0, style=solid];
m34_26 -> m34_49  [key=2, style=dotted];
m34_27 -> m34_28  [color=green, key=0, style=solid];
m34_27 -> m34_29  [color=green, key=0, style=solid];
m34_27 -> m34_49  [color=green, key=2, style=dotted];
m34_28 -> m34_29  [color=red, key=0, style=solid];
m34_28 -> m34_49  [color=red, key=2, style=dotted];
m34_29 -> m34_30  [key=0, style=solid];
m34_29 -> m34_49  [key=2, style=dotted];
m34_30 -> m34_31  [key=0, style=solid];
m34_30 -> m34_49  [key=2, style=dotted];
m34_30 -> m34_37  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m34_30 -> m34_44  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m34_30 -> m34_46  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m34_31 -> m34_32  [key=0, style=solid];
m34_31 -> m34_51  [key=2, style=dotted];
m34_31 -> m34_52  [key=2, style=dotted];
m34_31 -> m34_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_32 -> m34_33  [key=0, style=solid];
m34_32 -> m34_49  [key=2, style=dotted];
m34_34 -> m34_35  [key=0, style=solid];
m34_34 -> m34_53  [key=2, style=dotted];
m34_34 -> m34_36  [color=darkseagreen4, key=1, label=suppliedMarket, style=dashed];
m34_38 -> m34_39  [key=0, style=solid];
m34_38 -> m34_42  [key=0, style=solid];
m34_38 -> m34_53  [key=2, style=dotted];
m34_38 -> m34_54  [key=2, style=dotted];
m34_39 -> m34_40  [key=0, style=solid];
m34_39 -> m34_53  [key=2, style=dotted];
m34_39 -> m34_55  [key=2, style=dotted];
m34_39 -> m34_49  [key=2, style=dotted];
m34_39 -> m34_58  [key=2, style=dotted];
m34_39 -> m34_41  [color=darkseagreen4, key=1, label=sid, style=dashed];
m34_40 -> m34_41  [key=0, style=solid];
m34_40 -> m34_53  [key=2, style=dotted];
m34_40 -> m34_55  [key=2, style=dotted];
m34_40 -> m34_49  [key=2, style=dotted];
m34_42 -> m34_43  [key=0, style=solid];
m34_42 -> m34_45  [key=0, style=solid];
m34_42 -> m34_53  [key=2, style=dotted];
m34_42 -> m34_54  [key=2, style=dotted];
m34_43 -> m34_44  [key=0, style=solid];
m34_43 -> m34_53  [key=2, style=dotted];
m34_43 -> m34_55  [key=2, style=dotted];
m34_43 -> m34_49  [key=2, style=dotted];
m34_45 -> m34_46  [key=0, style=solid];
m34_45 -> m34_49  [key=2, style=dotted];
m34_41 -> m34_47  [key=0, style=solid];
m34_41 -> m34_59  [key=2, style=dotted];
m34_44 -> m34_47  [key=0, style=solid];
m34_44 -> m34_60  [key=2, style=dotted];
m34_46 -> m34_47  [key=0, style=solid];
m34_46 -> m34_60  [key=2, style=dotted];
m34_47 -> m34_48  [key=0, style=solid];
m34_37 -> m34_38  [key=0, style=solid];
m34_37 -> m34_56  [key=2, style=dotted];
m34_37 -> m34_57  [key=2, style=dotted];
m34_37 -> m34_44  [color=darkseagreen4, key=1, label=market, style=dashed];
m34_37 -> m34_46  [color=darkseagreen4, key=1, label=market, style=dashed];
m34_33 -> m34_34  [key=0, style=solid];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> m34_37  [key=0, style=solid];
m34_35 -> m34_54  [key=2, style=dotted];
m34_36 -> m34_38  [key=0, style=solid];
m34_36 -> m34_55  [key=2, style=dotted];
m34_36 -> m34_49  [key=2, style=dotted];
m34_36 -> m34_44  [color=darkseagreen4, key=1, label=market, style=dashed];
m34_36 -> m34_46  [color=darkseagreen4, key=1, label=market, style=dashed];
m34_48 -> m34_20  [color=blue, key=0, style=bold];
m34_50 -> m34_64  [key=0, style=solid];
m34_50 -> m34_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m34_50 -> m34_69  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_50 -> m34_71  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_50 -> m34_73  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m34_50 -> m34_21  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m34_50 -> m34_20  [color=darkorchid, key=3, label="Parameter variable JObject jObject", style=bold];
m34_64 -> m34_65  [key=0, style=solid];
m34_65 -> m34_66  [key=0, style=solid];
m34_65 -> m34_68  [key=0, style=solid];
m34_65 -> m34_70  [key=0, style=solid];
m34_65 -> m34_72  [key=0, style=solid];
m34_65 -> m34_74  [key=0, style=solid];
m34_65 -> m34_76  [key=0, style=solid];
m34_65 -> m34_78  [key=0, style=solid];
m34_65 -> m34_80  [key=0, style=solid];
m34_69 -> m34_81  [key=0, style=solid];
m34_69 -> m34_84  [key=2, style=dotted];
m34_69 -> m34_49  [key=2, style=dotted];
m34_71 -> m34_81  [key=0, style=solid];
m34_71 -> m34_85  [key=2, style=dotted];
m34_71 -> m34_49  [key=2, style=dotted];
m34_73 -> m34_81  [key=0, style=solid];
m34_73 -> m34_86  [key=2, style=dotted];
m34_73 -> m34_49  [key=2, style=dotted];
m34_66 -> m34_67  [key=0, style=solid];
m34_68 -> m34_69  [key=0, style=solid];
m34_70 -> m34_71  [key=0, style=solid];
m34_72 -> m34_73  [key=0, style=solid];
m34_74 -> m34_75  [key=0, style=solid];
m34_76 -> m34_77  [key=0, style=solid];
m34_78 -> m34_79  [key=0, style=solid];
m34_80 -> m34_82  [key=0, style=solid];
m34_80 -> m34_90  [key=2, style=dotted];
m34_67 -> m34_81  [key=0, style=solid];
m34_67 -> m34_83  [key=2, style=dotted];
m34_75 -> m34_81  [key=0, style=solid];
m34_75 -> m34_87  [key=2, style=dotted];
m34_77 -> m34_81  [key=0, style=solid];
m34_77 -> m34_88  [key=2, style=dotted];
m34_79 -> m34_81  [key=0, style=solid];
m34_79 -> m34_89  [key=2, style=dotted];
m34_81 -> m34_82  [key=0, style=solid];
m34_82 -> m34_50  [color=blue, key=0, style=bold];
m34_5 -> m34_6  [key=0, style=solid];
m34_6 -> m34_7  [key=0, style=solid];
m34_6 -> m34_8  [key=2, style=dotted];
m34_7 -> m34_5  [color=blue, key=0, style=bold];
m34_91 -> m34_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderJsonConverter", style=dashed];
m36_102 -> m36_103  [key=0, style=solid];
m36_36 -> m36_37  [color=green, key=0, style=solid];
m36_39 -> m36_40  [color=green, key=0, style=solid];
m36_42 -> m36_43  [color=green, key=0, style=solid];
m36_37 -> m36_38  [color=green, key=0, style=solid];
m36_38 -> m36_36  [color=blue, key=0, style=bold];
m36_40 -> m36_41  [color=green, key=0, style=solid];
m36_41 -> m36_39  [color=blue, key=0, style=bold];
m36_43 -> m36_44  [color=green, key=0, style=solid];
m36_44 -> m36_42  [color=blue, key=0, style=bold];
m36_79 -> m36_80  [color=green, key=0, style=solid];
m36_82 -> m36_83  [color=green, key=0, style=solid];
m36_85 -> m36_86  [color=green, key=0, style=solid];
m36_91 -> m36_92  [color=green, key=0, style=solid];
m36_98 -> m36_99  [color=green, key=0, style=solid];
m36_105 -> m36_106  [color=green, key=0, style=solid];
m36_111 -> m36_112  [color=green, key=0, style=solid];
m36_114 -> m36_115  [color=green, key=0, style=solid];
m36_120 -> m36_121  [color=green, key=0, style=solid];
m36_123 -> m36_124  [color=green, key=0, style=solid];
m36_126 -> m36_127  [color=green, key=0, style=solid];
m36_129 -> m36_130  [color=green, key=0, style=solid];
m36_132 -> m36_133  [color=green, key=0, style=solid];
m36_95 -> m36_96  [color=green, key=0, style=solid];
m36_99 -> m36_100  [color=green, key=0, style=solid];
m36_99 -> m36_101  [color=green, key=2, style=dotted];
m36_94 -> m36_95  [color=green, key=0, style=solid];
m36_96 -> m36_97  [color=green, key=0, style=solid];
m36_100 -> m36_98  [color=blue, key=0, style=bold];
m36_106 -> m36_107  [color=green, key=0, style=solid];
m36_106 -> m36_101  [color=green, key=2, style=dotted];
m36_107 -> m36_105  [color=blue, key=0, style=bold];
m36_112 -> m36_113  [color=green, key=0, style=solid];
m36_112 -> m36_101  [color=green, key=2, style=dotted];
m36_113 -> m36_111  [color=blue, key=0, style=bold];
m36_115 -> m36_116  [color=green, key=0, style=solid];
m36_115 -> m36_101  [color=green, key=2, style=dotted];
m36_116 -> m36_114  [color=blue, key=0, style=bold];
m36_121 -> m36_122  [color=green, key=0, style=solid];
m36_121 -> m36_101  [color=green, key=2, style=dotted];
m36_122 -> m36_120  [color=blue, key=0, style=bold];
m36_124 -> m36_125  [color=green, key=0, style=solid];
m36_124 -> m36_101  [color=green, key=2, style=dotted];
m36_125 -> m36_123  [color=blue, key=0, style=bold];
m36_127 -> m36_128  [color=green, key=0, style=solid];
m36_127 -> m36_101  [color=green, key=2, style=dotted];
m36_128 -> m36_126  [color=blue, key=0, style=bold];
m36_130 -> m36_131  [color=green, key=0, style=solid];
m36_130 -> m36_101  [color=green, key=2, style=dotted];
m36_131 -> m36_129  [color=blue, key=0, style=bold];
m36_133 -> m36_134  [color=green, key=0, style=solid];
m36_133 -> m36_101  [color=green, key=2, style=dotted];
m36_134 -> m36_132  [color=blue, key=0, style=bold];
m36_80 -> m36_81  [color=green, key=0, style=solid];
m36_81 -> m36_79  [color=blue, key=0, style=bold];
m36_83 -> m36_84  [color=green, key=0, style=solid];
m36_84 -> m36_82  [color=blue, key=0, style=bold];
m36_86 -> m36_87  [color=green, key=0, style=solid];
m36_87 -> m36_85  [color=blue, key=0, style=bold];
m36_92 -> m36_93  [color=green, key=0, style=solid];
m36_93 -> m36_91  [color=blue, key=0, style=bold];
m36_97 -> m36_94  [color=blue, key=0, style=bold];
m36_153 -> m36_154  [color=green, key=0, style=solid];
m36_153 -> m36_155  [color=green, key=2, style=dotted];
m36_153 -> m36_148  [color=green, key=2, style=dotted];
m36_157 -> m36_158  [color=green, key=0, style=solid];
m36_157 -> m36_155  [color=green, key=2, style=dotted];
m36_157 -> m36_148  [color=green, key=2, style=dotted];
m36_160 -> m36_161  [color=green, key=0, style=solid];
m36_160 -> m36_155  [color=green, key=2, style=dotted];
m36_160 -> m36_148  [color=green, key=2, style=dotted];
m36_160 -> m36_162  [color=green, key=2, style=dotted];
m36_152 -> m36_153  [color=green, key=0, style=solid];
m36_156 -> m36_157  [color=green, key=0, style=solid];
m36_158 -> m36_156  [color=blue, key=0, style=bold];
m36_159 -> m36_160  [color=green, key=0, style=solid];
m36_161 -> m36_159  [color=blue, key=0, style=bold];
m36_154 -> m36_152  [color=blue, key=0, style=bold];
m36_180 -> m36_181  [color=green, key=0, style=solid];
m36_183 -> m36_184  [color=green, key=0, style=solid];
m36_177 -> m36_178  [color=green, key=0, style=solid];
m36_178 -> m36_179  [color=green, key=0, style=solid];
m36_179 -> m36_177  [color=blue, key=0, style=bold];
m36_181 -> m36_182  [color=green, key=0, style=solid];
m36_181 -> m36_172  [color=green, key=2, style=dotted];
m36_182 -> m36_180  [color=blue, key=0, style=bold];
m36_184 -> m36_185  [color=green, key=0, style=solid];
m36_185 -> m36_183  [color=blue, key=0, style=bold];
m36_88 -> m36_89  [key=0, style=solid];
m36_108 -> m36_109  [key=0, style=solid];
m36_117 -> m36_118  [key=0, style=solid];
m36_103 -> m36_104  [key=0, style=solid];
m36_109 -> m36_101  [key=2, style=dotted];
m36_109 -> m36_110  [key=0, style=solid];
m36_118 -> m36_101  [key=2, style=dotted];
m36_118 -> m36_119  [key=0, style=solid];
m36_174 -> m36_175  [key=0, style=solid];
m36_90 -> m36_88  [color=blue, key=0, style=bold];
m36_89 -> m36_90  [key=0, style=solid];
m36_110 -> m36_108  [color=blue, key=0, style=bold];
m36_119 -> m36_117  [color=blue, key=0, style=bold];
m36_104 -> m36_102  [color=blue, key=0, style=bold];
m36_175 -> m36_176  [key=0, style=solid];
m36_176 -> m36_174  [color=blue, key=0, style=bold];
m36_186 -> m36_187  [color=green, key=0, style=solid];
m36_187 -> m36_188  [color=green, key=0, style=solid];
m36_187 -> m36_189  [color=green, key=2, style=dotted];
m36_188 -> m36_186  [color=blue, key=0, style=bold];
m36_0 -> m36_4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m36_0 -> m36_1  [key=0, style=solid];
m36_4 -> m36_5  [key=0, style=solid];
m36_4 -> m36_7  [key=0, style=solid];
m36_2 -> m36_8  [key=2, style=dotted];
m36_2 -> m36_3  [key=0, style=solid];
m36_1 -> m36_4  [key=0, style=solid];
m36_1 -> m36_2  [key=0, style=solid];
m36_3 -> m36_4  [key=0, style=solid];
m36_3 -> m36_9  [key=2, style=dotted];
m36_5 -> m36_6  [key=0, style=solid];
m36_6 -> m36_7  [key=0, style=solid];
m36_6 -> m36_10  [key=2, style=dotted];
m36_7 -> m36_0  [color=blue, key=0, style=bold];
m36_163 -> m36_164  [color=green, key=0, style=solid];
m36_163 -> m36_166  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>", style=dashed];
m36_163 -> m36_170  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>", style=dashed];
m36_164 -> m36_165  [color=green, key=0, style=solid];
m36_164 -> m36_8  [color=green, key=2, style=dotted];
m36_165 -> m36_166  [color=green, key=0, style=solid];
m36_165 -> m36_170  [color=green, key=1, label=pyDict, style=dashed];
m36_165 -> m36_75  [color=green, key=2, style=dotted];
m36_165 -> m36_169  [color=green, key=1, label=pyDict, style=dashed];
m36_166 -> m36_167  [color=green, key=0, style=solid];
m36_166 -> m36_170  [color=green, key=0, style=solid];
m36_169 -> m36_166  [color=green, key=0, style=solid];
m36_169 -> m36_77  [key=2, style=dotted];
m36_169 -> m36_78  [key=2, style=dotted];
m36_169 -> m36_169  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m36_169 -> m36_172  [key=2, style=dotted];
m36_167 -> m36_168  [color=green, key=0, style=solid];
m36_167 -> m36_73  [key=2, style=dotted];
m36_167 -> m36_76  [key=2, style=dotted];
m36_167 -> m36_169  [color=darkseagreen4, key=1, label=index, style=dashed];
m36_167 -> m36_167  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m36_167 -> m36_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_170 -> m36_171  [color=green, key=0, style=solid];
m36_170 -> m36_73  [color=green, key=2, style=dotted];
m36_170 -> m36_173  [color=green, key=2, style=dotted];
m36_170 -> m36_31  [color=green, key=2, style=dotted];
m36_170 -> m36_180  [color=green, key=1, label="lambda expression", style=dashed];
m36_170 -> m36_183  [color=green, key=1, label="lambda expression", style=dashed];
m36_168 -> m36_168  [color=green, key=1, label=kvp, style=dashed];
m36_168 -> m36_169  [color=green, key=0, style=solid];
m36_168 -> m36_73  [color=green, key=2, style=dotted];
m36_168 -> m36_76  [color=green, key=2, style=dotted];
m36_168 -> m36_177  [color=green, key=1, label="lambda expression", style=dashed];
m36_171 -> m36_163  [color=blue, key=0, style=bold];
m36_33 -> m36_48  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_50  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_51  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_53  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_56  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_59  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_61  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_62  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_64  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_65  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_66  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_67  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_68  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_45  [key=0, style=solid];
m36_33 -> m36_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_33 -> m36_63  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m36_48 -> m36_49  [color=green, key=0, style=solid];
m36_48 -> m36_72  [color=green, key=2, style=dotted];
m36_48 -> m36_73  [color=green, key=2, style=dotted];
m36_48 -> m36_74  [color=green, key=2, style=dotted];
m36_48 -> m36_79  [color=green, key=1, label="lambda expression", style=dashed];
m36_48 -> m36_50  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_51  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_52  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_53  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_56  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_59  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_60  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_61  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_62  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_63  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_64  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_65  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_66  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_67  [color=green, key=1, label=index, style=dashed];
m36_48 -> m36_68  [color=green, key=1, label=index, style=dashed];
m36_47 -> m36_48  [color=green, key=0, style=solid];
m36_47 -> m36_8  [key=2, style=dotted];
m36_49 -> m36_50  [color=green, key=0, style=solid];
m36_49 -> m36_51  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_53  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_56  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_59  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_61  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_62  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_64  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_65  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_66  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_67  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_68  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_75  [color=green, key=2, style=dotted];
m36_49 -> m36_52  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_60  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_63  [color=green, key=1, label=pyDict, style=dashed];
m36_49 -> m36_69  [color=green, key=1, label=pyDict, style=dashed];
m36_50 -> m36_51  [color=green, key=0, style=solid];
m36_50 -> m36_73  [color=green, key=2, style=dotted];
m36_50 -> m36_76  [color=green, key=2, style=dotted];
m36_50 -> m36_77  [color=green, key=2, style=dotted];
m36_50 -> m36_78  [color=green, key=2, style=dotted];
m36_50 -> m36_82  [color=green, key=1, label="lambda expression", style=dashed];
m36_51 -> m36_52  [color=green, key=0, style=solid];
m36_51 -> m36_73  [color=green, key=2, style=dotted];
m36_51 -> m36_76  [color=green, key=2, style=dotted];
m36_51 -> m36_77  [color=green, key=2, style=dotted];
m36_51 -> m36_78  [color=green, key=2, style=dotted];
m36_51 -> m36_85  [color=green, key=1, label="lambda expression", style=dashed];
m36_52 -> m36_53  [color=green, key=0, style=solid];
m36_52 -> m36_73  [key=2, style=dotted];
m36_52 -> m36_76  [key=2, style=dotted];
m36_52 -> m36_77  [key=2, style=dotted];
m36_52 -> m36_78  [key=2, style=dotted];
m36_52 -> m36_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_53 -> m36_54  [color=green, key=0, style=solid];
m36_53 -> m36_73  [color=green, key=2, style=dotted];
m36_53 -> m36_76  [color=green, key=2, style=dotted];
m36_53 -> m36_77  [color=green, key=2, style=dotted];
m36_53 -> m36_78  [color=green, key=2, style=dotted];
m36_53 -> m36_91  [color=green, key=1, label="lambda expression", style=dashed];
m36_56 -> m36_57  [color=green, key=0, style=solid];
m36_56 -> m36_73  [color=green, key=2, style=dotted];
m36_56 -> m36_76  [color=green, key=2, style=dotted];
m36_56 -> m36_77  [color=green, key=2, style=dotted];
m36_56 -> m36_78  [color=green, key=2, style=dotted];
m36_56 -> m36_98  [color=green, key=1, label="lambda expression", style=dashed];
m36_59 -> m36_60  [color=green, key=0, style=solid];
m36_59 -> m36_73  [color=green, key=2, style=dotted];
m36_59 -> m36_76  [color=green, key=2, style=dotted];
m36_59 -> m36_77  [color=green, key=2, style=dotted];
m36_59 -> m36_78  [color=green, key=2, style=dotted];
m36_59 -> m36_105  [color=green, key=1, label="lambda expression", style=dashed];
m36_60 -> m36_61  [color=green, key=0, style=solid];
m36_60 -> m36_73  [key=2, style=dotted];
m36_60 -> m36_76  [key=2, style=dotted];
m36_60 -> m36_77  [key=2, style=dotted];
m36_60 -> m36_78  [key=2, style=dotted];
m36_60 -> m36_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_61 -> m36_62  [color=green, key=0, style=solid];
m36_61 -> m36_73  [color=green, key=2, style=dotted];
m36_61 -> m36_76  [color=green, key=2, style=dotted];
m36_61 -> m36_77  [color=green, key=2, style=dotted];
m36_61 -> m36_78  [color=green, key=2, style=dotted];
m36_61 -> m36_111  [color=green, key=1, label="lambda expression", style=dashed];
m36_62 -> m36_63  [color=green, key=0, style=solid];
m36_62 -> m36_73  [color=green, key=2, style=dotted];
m36_62 -> m36_76  [color=green, key=2, style=dotted];
m36_62 -> m36_77  [color=green, key=2, style=dotted];
m36_62 -> m36_78  [color=green, key=2, style=dotted];
m36_62 -> m36_114  [color=green, key=1, label="lambda expression", style=dashed];
m36_63 -> m36_64  [color=green, key=0, style=solid];
m36_63 -> m36_73  [key=2, style=dotted];
m36_63 -> m36_76  [key=2, style=dotted];
m36_63 -> m36_77  [key=2, style=dotted];
m36_63 -> m36_78  [key=2, style=dotted];
m36_63 -> m36_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_64 -> m36_65  [color=green, key=0, style=solid];
m36_64 -> m36_73  [color=green, key=2, style=dotted];
m36_64 -> m36_76  [color=green, key=2, style=dotted];
m36_64 -> m36_77  [color=green, key=2, style=dotted];
m36_64 -> m36_78  [color=green, key=2, style=dotted];
m36_64 -> m36_120  [color=green, key=1, label="lambda expression", style=dashed];
m36_65 -> m36_66  [color=green, key=0, style=solid];
m36_65 -> m36_73  [color=green, key=2, style=dotted];
m36_65 -> m36_76  [color=green, key=2, style=dotted];
m36_65 -> m36_77  [color=green, key=2, style=dotted];
m36_65 -> m36_78  [color=green, key=2, style=dotted];
m36_65 -> m36_123  [color=green, key=1, label="lambda expression", style=dashed];
m36_66 -> m36_67  [color=green, key=0, style=solid];
m36_66 -> m36_73  [color=green, key=2, style=dotted];
m36_66 -> m36_76  [color=green, key=2, style=dotted];
m36_66 -> m36_77  [color=green, key=2, style=dotted];
m36_66 -> m36_78  [color=green, key=2, style=dotted];
m36_66 -> m36_126  [color=green, key=1, label="lambda expression", style=dashed];
m36_67 -> m36_68  [color=green, key=0, style=solid];
m36_67 -> m36_73  [color=green, key=2, style=dotted];
m36_67 -> m36_76  [color=green, key=2, style=dotted];
m36_67 -> m36_77  [color=green, key=2, style=dotted];
m36_67 -> m36_78  [color=green, key=2, style=dotted];
m36_67 -> m36_129  [color=green, key=1, label="lambda expression", style=dashed];
m36_68 -> m36_69  [color=green, key=0, style=solid];
m36_68 -> m36_73  [color=green, key=2, style=dotted];
m36_68 -> m36_76  [color=green, key=2, style=dotted];
m36_68 -> m36_77  [color=green, key=2, style=dotted];
m36_68 -> m36_78  [color=green, key=2, style=dotted];
m36_68 -> m36_132  [color=green, key=1, label="lambda expression", style=dashed];
m36_54 -> m36_55  [color=green, key=0, style=solid];
m36_54 -> m36_57  [color=green, key=0, style=solid];
m36_55 -> m36_56  [color=green, key=0, style=solid];
m36_55 -> m36_55  [color=green, key=3, label="Local variable System.Func<QuantConnect.Data.Market.IBaseDataBar, double> getVolume", style=bold];
m36_55 -> m36_95  [color=green, key=1, label="QuantConnect.Data.Market.IBaseDataBar", style=dashed];
m36_55 -> m36_99  [color=green, key=1, label=getVolume, style=dashed];
m36_57 -> m36_58  [color=green, key=0, style=solid];
m36_57 -> m36_69  [color=green, key=0, style=solid];
m36_58 -> m36_59  [color=green, key=0, style=solid];
m36_58 -> m36_61  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_62  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_64  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_65  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_66  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_67  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_68  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_106  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_112  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_115  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_121  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_124  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_127  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_130  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_133  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_60  [color=darkseagreen4, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_63  [color=darkseagreen4, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_58  [color=darkorchid, key=3, label="Local variable System.Func<QuantConnect.Data.Market.IBaseDataBar, QuantConnect.Data.Market.QuoteBar> toQuoteBar", style=bold];
m36_58 -> m36_103  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBaseDataBar", style=dashed];
m36_58 -> m36_109  [color=darkseagreen4, key=1, label=toQuoteBar, style=dashed];
m36_58 -> m36_118  [color=darkseagreen4, key=1, label=toQuoteBar, style=dashed];
m36_69 -> m36_31  [key=2, style=dotted];
m36_69 -> m36_70  [key=0, style=solid];
m36_46 -> m36_70  [color=green, key=0, style=solid];
m36_46 -> m36_31  [color=green, key=2, style=dotted];
m36_45 -> m36_46  [color=green, key=0, style=solid];
m36_45 -> m36_47  [key=0, style=solid];
m36_45 -> m36_71  [key=2, style=dotted];
m36_70 -> m36_33  [color=blue, key=0, style=bold];
m36_135 -> m36_136  [color=green, key=0, style=solid];
m36_135 -> m36_137  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.DateTime>", style=dashed];
m36_135 -> m36_139  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m36_135 -> m36_140  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m36_135 -> m36_157  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m36_135 -> m36_142  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m36_135 -> m36_143  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m36_135 -> m36_160  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m36_136 -> m36_137  [color=green, key=0, style=solid];
m36_136 -> m36_147  [color=green, key=2, style=dotted];
m36_136 -> m36_148  [color=green, key=2, style=dotted];
m36_136 -> m36_153  [color=green, key=1, label=value, style=dashed];
m36_136 -> m36_140  [color=green, key=1, label=value, style=dashed];
m36_136 -> m36_157  [color=green, key=1, label=value, style=dashed];
m36_136 -> m36_143  [color=green, key=1, label=value, style=dashed];
m36_136 -> m36_160  [color=green, key=1, label=value, style=dashed];
m36_137 -> m36_138  [color=green, key=0, style=solid];
m36_137 -> m36_73  [color=green, key=2, style=dotted];
m36_137 -> m36_152  [color=green, key=1, label="lambda expression", style=dashed];
m36_137 -> m36_145  [color=green, key=1, label=tuples, style=dashed];
m36_140 -> m36_141  [color=green, key=0, style=solid];
m36_140 -> m36_73  [color=green, key=2, style=dotted];
m36_140 -> m36_156  [color=green, key=1, label="lambda expression", style=dashed];
m36_140 -> m36_145  [color=green, key=1, label=tuples, style=dashed];
m36_143 -> m36_144  [color=green, key=0, style=solid];
m36_143 -> m36_73  [color=green, key=2, style=dotted];
m36_143 -> m36_159  [color=green, key=1, label="lambda expression", style=dashed];
m36_143 -> m36_145  [color=green, key=1, label=tuples, style=dashed];
m36_138 -> m36_139  [color=green, key=0, style=solid];
m36_138 -> m36_138  [color=green, key=3, label="Local variable string names", style=bold];
m36_138 -> m36_141  [color=green, key=1, label=names, style=dashed];
m36_138 -> m36_144  [color=green, key=1, label=names, style=dashed];
m36_138 -> m36_145  [color=green, key=1, label=names, style=dashed];
m36_145 -> m36_146  [color=green, key=0, style=solid];
m36_145 -> m36_149  [color=green, key=2, style=dotted];
m36_145 -> m36_150  [color=green, key=2, style=dotted];
m36_145 -> m36_151  [color=green, key=2, style=dotted];
m36_139 -> m36_140  [color=green, key=0, style=solid];
m36_139 -> m36_142  [color=green, key=0, style=solid];
m36_142 -> m36_143  [color=green, key=0, style=solid];
m36_142 -> m36_145  [color=green, key=0, style=solid];
m36_141 -> m36_142  [color=green, key=0, style=solid];
m36_141 -> m36_145  [color=green, key=1, label=names, style=dashed];
m36_141 -> m36_141  [color=green, key=1, label=names, style=dashed];
m36_141 -> m36_144  [color=green, key=1, label=names, style=dashed];
m36_144 -> m36_145  [color=green, key=0, style=solid];
m36_144 -> m36_144  [color=green, key=1, label=names, style=dashed];
m36_146 -> m36_135  [color=blue, key=0, style=bold];
m36_11 -> m36_12  [color=green, key=0, style=solid];
m36_11 -> m36_21  [color=green, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>", style=dashed];
m36_11 -> m36_18  [color=green, key=3, label="method methodReturn PyObject GetDataFrame", style=bold];
m36_12 -> m36_13  [color=green, key=0, style=solid];
m36_12 -> m36_25  [color=green, key=2, style=dotted];
m36_12 -> m36_26  [color=green, key=2, style=dotted];
m36_12 -> m36_27  [color=green, key=2, style=dotted];
m36_12 -> m36_36  [color=green, key=1, label="lambda expression", style=dashed];
m36_12 -> m36_39  [color=green, key=1, label="lambda expression", style=dashed];
m36_12 -> m36_14  [color=green, key=1, label=symbols, style=dashed];
m36_12 -> m36_19  [color=green, key=1, label=symbols, style=dashed];
m36_13 -> m36_14  [color=green, key=0, style=solid];
m36_13 -> m36_20  [color=green, key=1, label=underlying, style=dashed];
m36_13 -> m36_13  [color=darkorchid, key=3, label="Local variable QuantConnect.Symbol underlying", style=bold];
m36_14 -> m36_15  [color=green, key=0, style=solid];
m36_14 -> m36_28  [color=green, key=2, style=dotted];
m36_14 -> m36_42  [color=green, key=1, label="lambda expression", style=dashed];
m36_14 -> m36_16  [color=green, key=1, label=derivatives, style=dashed];
m36_19 -> m36_21  [color=green, key=1, label=symbol, style=dashed];
m36_19 -> m36_20  [color=green, key=0, style=solid];
m36_19 -> m36_23  [color=green, key=0, style=solid];
m36_21 -> m36_22  [color=green, key=0, style=solid];
m36_21 -> m36_32  [color=green, key=2, style=dotted];
m36_21 -> m36_33  [color=green, key=2, style=dotted];
m36_20 -> m36_21  [color=green, key=0, style=solid];
m36_20 -> m36_19  [color=green, key=0, style=solid];
m36_18 -> m36_21  [color=green, key=1, label=dataFrame, style=dashed];
m36_18 -> m36_19  [color=green, key=0, style=solid];
m36_18 -> m36_31  [color=green, key=2, style=dotted];
m36_18 -> m36_23  [color=green, key=1, label=dataFrame, style=dashed];
m36_22 -> m36_19  [color=green, key=0, style=solid];
m36_22 -> m36_34  [color=green, key=2, style=dotted];
m36_22 -> m36_35  [color=green, key=2, style=dotted];
m36_22 -> m36_23  [color=green, key=1, label=dataFrame, style=dashed];
m36_15 -> m36_16  [color=green, key=0, style=solid];
m36_15 -> m36_17  [color=green, key=0, style=solid];
m36_15 -> m36_29  [key=2, style=dotted];
m36_16 -> m36_20  [color=green, key=1, label=underlying, style=dashed];
m36_16 -> m36_17  [color=green, key=0, style=solid];
m36_16 -> m36_30  [color=green, key=2, style=dotted];
m36_23 -> m36_24  [key=0, style=solid];
m36_17 -> m36_18  [color=green, key=0, style=solid];
m36_17 -> m36_8  [color=green, key=2, style=dotted];
m36_24 -> m36_11  [color=blue, key=0, style=bold];
m36_190 -> m36_21  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_18  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_22  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_48  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_50  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_51  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_53  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_56  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_59  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_61  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_62  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_64  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_65  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_66  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_67  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_68  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_46  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_145  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_170  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_187  [color=green, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_4  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_52  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_60  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_63  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_69  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_190 -> m36_169  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m36_191 -> m36_99  [color=green, key=1, label=getVolume, style=dashed];
m36_192 -> m36_106  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_112  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_115  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_121  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_124  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_127  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_130  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_133  [color=green, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_109  [color=darkseagreen4, key=1, label=toQuoteBar, style=dashed];
m36_192 -> m36_118  [color=darkseagreen4, key=1, label=toQuoteBar, style=dashed];
m36_193 -> m36_157  [color=green, key=1, label=value, style=dashed];
m36_193 -> m36_160  [color=green, key=1, label=value, style=dashed];
m36_193 -> m36_153  [color=green, key=1, label=value, style=dashed];
m36_194 -> m36_157  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m36_194 -> m36_160  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m39_200 -> m39_201  [key=0, style=solid];
m39_200 -> m39_203  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m39_200 -> m39_205  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m39_200 -> m39_206  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m39_200 -> m39_207  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m39_200 -> m39_192  [color=darkorchid, key=3, label="Parameter variable DateTimeZone timeZone", style=bold];
m39_201 -> m39_202  [key=0, style=solid];
m39_201 -> m39_203  [key=0, style=solid];
m39_203 -> m39_204  [key=0, style=solid];
m39_203 -> m39_205  [key=0, style=solid];
m39_205 -> m39_206  [key=0, style=solid];
m39_205 -> m39_211  [key=2, style=dotted];
m39_206 -> m39_207  [key=0, style=solid];
m39_206 -> m39_33  [key=2, style=dotted];
m39_207 -> m39_208  [key=0, style=solid];
m39_207 -> m39_212  [key=2, style=dotted];
m39_202 -> m39_208  [key=0, style=solid];
m39_202 -> m39_209  [key=2, style=dotted];
m39_204 -> m39_208  [key=0, style=solid];
m39_204 -> m39_210  [key=2, style=dotted];
m39_208 -> m39_200  [color=blue, key=0, style=bold];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_29  [key=2, style=dotted];
m39_2 -> m39_3  [key=0, style=solid];
m39_3 -> m39_4  [key=0, style=solid];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_30  [key=2, style=dotted];
m39_5 -> m39_6  [key=0, style=solid];
m39_5 -> m39_31  [key=2, style=dotted];
m39_6 -> m39_7  [key=0, style=solid];
m39_6 -> m39_32  [key=2, style=dotted];
m39_7 -> m39_8  [key=0, style=solid];
m39_7 -> m39_33  [key=2, style=dotted];
m39_8 -> m39_9  [key=0, style=solid];
m39_8 -> m39_34  [key=2, style=dotted];
m39_9 -> m39_10  [key=0, style=solid];
m39_9 -> m39_35  [key=2, style=dotted];
m39_10 -> m39_11  [key=0, style=solid];
m39_10 -> m39_36  [key=2, style=dotted];
m39_11 -> m39_12  [color=red, key=0, style=solid];
m39_11 -> m39_37  [key=2, style=dotted];
m39_12 -> m39_13  [color=red, key=0, style=solid];
m39_12 -> m39_38  [color=red, key=2, style=dotted];
m39_13 -> m39_14  [key=0, style=solid];
m39_13 -> m39_39  [key=2, style=dotted];
m39_14 -> m39_15  [key=0, style=solid];
m39_14 -> m39_40  [key=2, style=dotted];
m39_15 -> m39_16  [key=0, style=solid];
m39_16 -> m39_17  [key=0, style=solid];
m39_17 -> m39_18  [key=0, style=solid];
m39_17 -> m39_41  [key=2, style=dotted];
m39_18 -> m39_19  [key=0, style=solid];
m39_18 -> m39_42  [key=2, style=dotted];
m39_19 -> m39_20  [key=0, style=solid];
m39_19 -> m39_43  [key=2, style=dotted];
m39_20 -> m39_21  [key=0, style=solid];
m39_20 -> m39_44  [key=2, style=dotted];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_45  [key=2, style=dotted];
m39_21 -> m39_46  [key=2, style=dotted];
m39_22 -> m39_23  [key=0, style=solid];
m39_22 -> m39_47  [key=2, style=dotted];
m39_23 -> m39_24  [key=0, style=solid];
m39_23 -> m39_48  [key=2, style=dotted];
m39_24 -> m39_25  [key=0, style=solid];
m39_24 -> m39_49  [key=2, style=dotted];
m39_24 -> m39_39  [key=2, style=dotted];
m39_24 -> m39_50  [key=2, style=dotted];
m39_25 -> m39_26  [key=0, style=solid];
m39_25 -> m39_51  [key=2, style=dotted];
m39_26 -> m39_27  [key=0, style=solid];
m39_26 -> m39_52  [key=2, style=dotted];
m39_27 -> m39_28  [key=0, style=solid];
m39_27 -> m39_53  [key=2, style=dotted];
m39_28 -> m39_0  [color=blue, key=0, style=bold];
m39_333 -> m39_334  [key=0, style=solid];
m39_333 -> m39_35  [color=darkorchid, key=3, label="method methodReturn bool GetLocked", style=bold];
m39_334 -> m39_335  [key=0, style=solid];
m39_335 -> m39_333  [color=blue, key=0, style=bold];
m39_191 -> m39_192  [key=0, style=solid];
m39_191 -> m39_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_191 -> m39_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_192 -> m39_193  [key=0, style=solid];
m39_193 -> m39_194  [key=0, style=solid];
m39_193 -> m39_196  [key=0, style=solid];
m39_195 -> m39_197  [key=0, style=solid];
m39_195 -> m39_198  [key=2, style=dotted];
m39_195 -> m39_199  [key=2, style=dotted];
m39_194 -> m39_195  [key=0, style=solid];
m39_196 -> m39_197  [key=0, style=solid];
m39_196 -> m39_200  [key=2, style=dotted];
m39_197 -> m39_191  [color=blue, key=0, style=bold];
m39_449 -> m39_450  [key=0, style=solid];
m39_449 -> m39_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Crypto.Crypto AddCrypto", style=bold];
m39_450 -> m39_451  [key=0, style=solid];
m39_450 -> m39_381  [key=2, style=dotted];
m39_451 -> m39_449  [color=blue, key=0, style=bold];
m39_104 -> m39_105  [key=0, style=solid];
m39_105 -> m39_106  [key=0, style=solid];
m39_105 -> m39_107  [key=0, style=solid];
m39_106 -> m39_105  [key=0, style=solid];
m39_106 -> m39_106  [color=darkseagreen4, key=1, label=dataFeed, style=dashed];
m39_107 -> m39_104  [color=blue, key=0, style=bold];
m39_497 -> m39_498  [key=0, style=solid];
m39_497 -> m39_403  [key=2, style=dotted];
m39_493 -> m39_494  [key=0, style=solid];
m39_493 -> m39_495  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_493 -> m39_496  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_493 -> m39_497  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m39_493 -> m39_490  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m39_494 -> m39_495  [key=0, style=solid];
m39_494 -> m39_401  [key=2, style=dotted];
m39_494 -> m39_497  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m39_495 -> m39_496  [key=0, style=solid];
m39_495 -> m39_500  [key=2, style=dotted];
m39_495 -> m39_501  [key=2, style=dotted];
m39_495 -> m39_497  [color=darkseagreen4, key=1, label=symbolObject, style=dashed];
m39_496 -> m39_497  [key=0, style=solid];
m39_496 -> m39_402  [key=2, style=dotted];
m39_498 -> m39_499  [key=0, style=solid];
m39_498 -> m39_80  [key=2, style=dotted];
m39_499 -> m39_493  [color=blue, key=0, style=bold];
m39_533 -> m39_534  [key=0, style=solid];
m39_534 -> m39_535  [key=0, style=solid];
m39_534 -> m39_536  [key=2, style=dotted];
m39_535 -> m39_533  [color=blue, key=0, style=bold];
m39_261 -> m39_262  [key=0, style=solid];
m39_262 -> m39_263  [key=0, style=solid];
m39_262 -> m39_264  [key=2, style=dotted];
m39_263 -> m39_261  [color=blue, key=0, style=bold];
m39_38 -> m39_45  [color=darkorchid, key=3, label="Field variable string _previousDebugMessage", style=bold];
m39_38 -> m39_218  [color=darkorchid, key=3, label="Field variable string _previousDebugMessage", style=bold];
m39_287 -> m39_288  [key=0, style=solid];
m39_288 -> m39_289  [key=0, style=solid];
m39_288 -> m39_30  [key=2, style=dotted];
m39_289 -> m39_290  [key=0, style=solid];
m39_289 -> m39_31  [key=2, style=dotted];
m39_289 -> m39_294  [key=2, style=dotted];
m39_289 -> m39_295  [key=2, style=dotted];
m39_289 -> m39_289  [color=darkseagreen4, key=1, label=end, style=dashed];
m39_290 -> m39_291  [key=0, style=solid];
m39_290 -> m39_293  [key=0, style=solid];
m39_290 -> m39_296  [key=2, style=dotted];
m39_291 -> m39_292  [key=0, style=solid];
m39_292 -> m39_293  [key=0, style=solid];
m39_292 -> m39_209  [key=2, style=dotted];
m39_293 -> m39_287  [color=blue, key=0, style=bold];
m39_165 -> m39_166  [key=0, style=solid];
m39_166 -> m39_165  [color=blue, key=0, style=bold];
m39_223 -> m39_224  [key=0, style=solid];
m39_223 -> m39_226  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.IBrokerageModel", style=dashed];
m39_224 -> m39_225  [key=0, style=solid];
m39_226 -> m39_227  [key=0, style=solid];
m39_226 -> m39_49  [key=2, style=dotted];
m39_226 -> m39_50  [key=2, style=dotted];
m39_225 -> m39_226  [key=0, style=solid];
m39_225 -> m39_231  [key=0, style=solid];
m39_227 -> m39_228  [key=0, style=solid];
m39_227 -> m39_231  [key=0, style=solid];
m39_227 -> m39_229  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_227 -> m39_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_228 -> m39_229  [key=0, style=solid];
m39_228 -> m39_230  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m39_229 -> m39_230  [key=0, style=solid];
m39_229 -> m39_232  [key=2, style=dotted];
m39_230 -> m39_227  [key=0, style=solid];
m39_230 -> m39_233  [key=2, style=dotted];
m39_231 -> m39_223  [color=blue, key=0, style=bold];
m39_265 -> m39_266  [key=0, style=solid];
m39_266 -> m39_267  [key=0, style=solid];
m39_266 -> m39_264  [key=2, style=dotted];
m39_267 -> m39_265  [color=blue, key=0, style=bold];
m39_296 -> m39_317  [key=0, style=solid];
m39_296 -> m39_319  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_296 -> m39_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_296 -> m39_324  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_296 -> m39_288  [color=darkorchid, key=3, label="Parameter variable System.DateTime end", style=bold];
m39_317 -> m39_318  [key=0, style=solid];
m39_317 -> m39_319  [key=0, style=solid];
m39_319 -> m39_320  [key=0, style=solid];
m39_319 -> m39_321  [key=0, style=solid];
m39_319 -> m39_31  [key=2, style=dotted];
m39_322 -> m39_323  [key=0, style=solid];
m39_322 -> m39_324  [key=0, style=solid];
m39_324 -> m39_325  [key=0, style=solid];
m39_324 -> m39_46  [key=2, style=dotted];
m39_324 -> m39_315  [key=2, style=dotted];
m39_324 -> m39_31  [key=2, style=dotted];
m39_324 -> m39_329  [key=2, style=dotted];
m39_324 -> m39_324  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_324 -> m39_326  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_318 -> m39_328  [key=0, style=solid];
m39_320 -> m39_321  [key=0, style=solid];
m39_320 -> m39_31  [key=2, style=dotted];
m39_320 -> m39_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_320 -> m39_324  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_321 -> m39_322  [key=0, style=solid];
m39_321 -> m39_324  [key=0, style=solid];
m39_321 -> m39_314  [key=2, style=dotted];
m39_323 -> m39_328  [key=0, style=solid];
m39_323 -> m39_209  [key=2, style=dotted];
m39_325 -> m39_326  [key=0, style=solid];
m39_325 -> m39_327  [key=0, style=solid];
m39_326 -> m39_328  [key=0, style=solid];
m39_327 -> m39_328  [key=0, style=solid];
m39_327 -> m39_209  [key=2, style=dotted];
m39_328 -> m39_296  [color=blue, key=0, style=bold];
m39_346 -> m39_347  [key=0, style=solid];
m39_347 -> m39_348  [key=0, style=solid];
m39_348 -> m39_349  [key=0, style=solid];
m39_348 -> m39_345  [key=2, style=dotted];
m39_349 -> m39_346  [color=blue, key=0, style=bold];
m39_179 -> m39_180  [key=0, style=solid];
m39_180 -> m39_179  [color=blue, key=0, style=bold];
m39_525 -> m39_526  [key=0, style=solid];
m39_526 -> m39_527  [key=0, style=solid];
m39_526 -> m39_218  [key=2, style=dotted];
m39_527 -> m39_528  [key=0, style=solid];
m39_528 -> m39_525  [color=blue, key=0, style=bold];
m39_452 -> m39_453  [key=0, style=solid];
m39_452 -> m39_454  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_452 -> m39_459  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_452 -> m39_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_452 -> m39_461  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_452 -> m39_462  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_452 -> m39_463  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_453 -> m39_454  [key=0, style=solid];
m39_453 -> m39_79  [color=darkorchid, key=3, label="Local variable QuantConnect.Securities.Security security", style=bold];
m39_454 -> m39_455  [key=0, style=solid];
m39_454 -> m39_468  [key=0, style=solid];
m39_454 -> m39_78  [key=2, style=dotted];
m39_454 -> m39_456  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_454 -> m39_457  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_454 -> m39_458  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_459 -> m39_460  [key=0, style=solid];
m39_459 -> m39_473  [key=2, style=dotted];
m39_459 -> m39_142  [key=2, style=dotted];
m39_459 -> m39_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_459 -> m39_461  [color=darkseagreen4, key=1, label=universe, style=dashed];
m39_459 -> m39_466  [color=darkseagreen4, key=1, label=universe, style=dashed];
m39_461 -> m39_462  [key=0, style=solid];
m39_461 -> m39_474  [key=2, style=dotted];
m39_461 -> m39_467  [color=darkseagreen4, key=1, label=ret, style=dashed];
m39_462 -> m39_463  [key=0, style=solid];
m39_462 -> m39_466  [key=0, style=solid];
m39_463 -> m39_464  [key=0, style=solid];
m39_463 -> m39_475  [key=2, style=dotted];
m39_455 -> m39_456  [key=0, style=solid];
m39_455 -> m39_470  [key=2, style=dotted];
m39_468 -> m39_469  [key=0, style=solid];
m39_456 -> m39_457  [key=0, style=solid];
m39_456 -> m39_471  [key=2, style=dotted];
m39_457 -> m39_458  [key=0, style=solid];
m39_457 -> m39_459  [key=0, style=solid];
m39_458 -> m39_459  [key=0, style=solid];
m39_458 -> m39_472  [key=2, style=dotted];
m39_460 -> m39_461  [key=0, style=solid];
m39_460 -> m39_468  [key=0, style=solid];
m39_466 -> m39_467  [key=0, style=solid];
m39_466 -> m39_476  [key=2, style=dotted];
m39_466 -> m39_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_467 -> m39_469  [key=0, style=solid];
m39_464 -> m39_465  [key=0, style=solid];
m39_464 -> m39_79  [key=2, style=dotted];
m39_465 -> m39_466  [key=0, style=solid];
m39_465 -> m39_80  [key=2, style=dotted];
m39_469 -> m39_452  [color=blue, key=0, style=bold];
m39_167 -> m39_168  [key=0, style=solid];
m39_168 -> m39_167  [color=blue, key=0, style=bold];
m39_90 -> m39_91  [key=0, style=solid];
m39_90 -> m39_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_91 -> m39_92  [key=0, style=solid];
m39_92 -> m39_93  [key=0, style=solid];
m39_92 -> m39_94  [key=2, style=dotted];
m39_92 -> m39_92  [color=darkseagreen4, key=1, label=value, style=dashed];
m39_93 -> m39_90  [color=blue, key=0, style=bold];
m39_273 -> m39_274  [key=0, style=solid];
m39_273 -> m39_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_274 -> m39_275  [key=0, style=solid];
m39_274 -> m39_276  [key=0, style=solid];
m39_275 -> m39_277  [key=0, style=solid];
m39_275 -> m39_278  [key=2, style=dotted];
m39_276 -> m39_277  [key=0, style=solid];
m39_276 -> m39_209  [key=2, style=dotted];
m39_277 -> m39_273  [color=blue, key=0, style=bold];
m39_213 -> m39_214  [key=0, style=solid];
m39_214 -> m39_215  [key=0, style=solid];
m39_214 -> m39_216  [key=0, style=solid];
m39_215 -> m39_217  [key=0, style=solid];
m39_216 -> m39_217  [key=0, style=solid];
m39_216 -> m39_218  [key=2, style=dotted];
m39_217 -> m39_213  [color=blue, key=0, style=bold];
m39_123 -> m39_124  [key=0, style=solid];
m39_124 -> m39_125  [key=0, style=solid];
m39_125 -> m39_123  [color=blue, key=0, style=bold];
m39_487 -> m39_488  [key=0, style=solid];
m39_488 -> m39_489  [key=0, style=solid];
m39_488 -> m39_490  [key=2, style=dotted];
m39_489 -> m39_487  [color=blue, key=0, style=bold];
m39_484 -> m39_485  [key=0, style=solid];
m39_87 -> m39_88  [key=0, style=solid];
m39_88 -> m39_89  [key=0, style=solid];
m39_88 -> m39_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m39_89 -> m39_87  [color=blue, key=0, style=bold];
m39_120 -> m39_121  [key=0, style=solid];
m39_120 -> m39_122  [key=2, style=dotted];
m39_119 -> m39_120  [key=0, style=solid];
m39_121 -> m39_119  [color=blue, key=0, style=bold];
m39_148 -> m39_149  [key=0, style=solid];
m39_151 -> m39_152  [key=0, style=solid];
m39_154 -> m39_155  [key=0, style=solid];
m39_158 -> m39_159  [key=0, style=solid];
m39_149 -> m39_150  [key=0, style=solid];
m39_150 -> m39_148  [color=blue, key=0, style=bold];
m39_152 -> m39_153  [key=0, style=solid];
m39_153 -> m39_151  [color=blue, key=0, style=bold];
m39_155 -> m39_156  [key=0, style=solid];
m39_155 -> m39_157  [key=2, style=dotted];
m39_156 -> m39_154  [color=blue, key=0, style=bold];
m39_159 -> m39_160  [key=0, style=solid];
m39_159 -> m39_157  [key=2, style=dotted];
m39_160 -> m39_158  [color=blue, key=0, style=bold];
m39_252 -> m39_253  [key=0, style=solid];
m39_252 -> m39_252  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m39_251 -> m39_252  [key=0, style=solid];
m39_253 -> m39_251  [color=blue, key=0, style=bold];
m39_478 -> m39_479  [key=0, style=solid];
m39_478 -> m39_480  [key=2, style=dotted];
m39_477 -> m39_478  [key=0, style=solid];
m39_481 -> m39_482  [key=0, style=solid];
m39_479 -> m39_477  [color=blue, key=0, style=bold];
m39_482 -> m39_483  [key=0, style=solid];
m39_482 -> m39_476  [key=2, style=dotted];
m39_482 -> m39_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_483 -> m39_481  [color=blue, key=0, style=bold];
m39_485 -> m39_486  [key=0, style=solid];
m39_486 -> m39_484  [color=blue, key=0, style=bold];
m39_185 -> m39_186  [key=0, style=solid];
m39_186 -> m39_185  [color=blue, key=0, style=bold];
m39_555 -> m39_556  [key=0, style=solid];
m39_555 -> m39_558  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IHistoryProvider", style=dashed];
m39_556 -> m39_557  [key=0, style=solid];
m39_556 -> m39_558  [key=0, style=solid];
m39_558 -> m39_559  [key=0, style=solid];
m39_557 -> m39_559  [key=0, style=solid];
m39_557 -> m39_210  [key=2, style=dotted];
m39_559 -> m39_555  [color=blue, key=0, style=bold];
m39_239 -> m39_240  [key=0, style=solid];
m39_239 -> m39_241  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_239 -> m39_242  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_240 -> m39_241  [key=0, style=solid];
m39_241 -> m39_242  [key=0, style=solid];
m39_241 -> m39_244  [key=2, style=dotted];
m39_242 -> m39_243  [key=0, style=solid];
m39_242 -> m39_77  [key=2, style=dotted];
m39_243 -> m39_239  [color=blue, key=0, style=bold];
m39_245 -> m39_246  [key=0, style=solid];
m39_246 -> m39_247  [key=0, style=solid];
m39_246 -> m39_250  [key=2, style=dotted];
m39_246 -> m39_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_246 -> m39_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_246 -> m39_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_247 -> m39_248  [key=0, style=solid];
m39_247 -> m39_142  [key=2, style=dotted];
m39_247 -> m39_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_248 -> m39_249  [key=0, style=solid];
m39_248 -> m39_77  [key=2, style=dotted];
m39_249 -> m39_245  [color=blue, key=0, style=bold];
m39_218 -> m39_502  [key=0, style=solid];
m39_218 -> m39_504  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_218 -> m39_505  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_218 -> m39_216  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m39_502 -> m39_503  [key=0, style=solid];
m39_502 -> m39_504  [key=0, style=solid];
m39_504 -> m39_505  [key=0, style=solid];
m39_504 -> m39_507  [key=2, style=dotted];
m39_505 -> m39_506  [key=0, style=solid];
m39_503 -> m39_506  [key=0, style=solid];
m39_506 -> m39_218  [color=blue, key=0, style=bold];
m39_187 -> m39_188  [key=0, style=solid];
m39_188 -> m39_189  [key=0, style=solid];
m39_188 -> m39_190  [key=2, style=dotted];
m39_189 -> m39_187  [color=blue, key=0, style=bold];
m39_508 -> m39_509  [key=0, style=solid];
m39_508 -> m39_511  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_509 -> m39_510  [key=0, style=solid];
m39_509 -> m39_511  [key=0, style=solid];
m39_511 -> m39_512  [key=0, style=solid];
m39_511 -> m39_507  [key=2, style=dotted];
m39_510 -> m39_512  [key=0, style=solid];
m39_512 -> m39_508  [color=blue, key=0, style=bold];
m39_175 -> m39_176  [key=0, style=solid];
m39_176 -> m39_175  [color=blue, key=0, style=bold];
m39_257 -> m39_258  [key=0, style=solid];
m39_258 -> m39_259  [key=0, style=solid];
m39_258 -> m39_260  [key=2, style=dotted];
m39_259 -> m39_257  [color=blue, key=0, style=bold];
m39_254 -> m39_255  [key=0, style=solid];
m39_255 -> m39_256  [key=0, style=solid];
m39_256 -> m39_254  [color=blue, key=0, style=bold];
m39_112 -> m39_113  [key=0, style=solid];
m39_113 -> m39_114  [key=0, style=solid];
m39_113 -> m39_115  [key=2, style=dotted];
m39_113 -> m39_108  [key=2, style=dotted];
m39_114 -> m39_112  [color=blue, key=0, style=bold];
m39_177 -> m39_178  [key=0, style=solid];
m39_178 -> m39_177  [color=blue, key=0, style=bold];
m39_163 -> m39_164  [key=0, style=solid];
m39_164 -> m39_163  [color=blue, key=0, style=bold];
m39_161 -> m39_162  [key=0, style=solid];
m39_162 -> m39_161  [color=blue, key=0, style=bold];
m39_103 -> m39_513  [key=0, style=solid];
m39_103 -> m39_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_103 -> m39_516  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_513 -> m39_514  [key=0, style=solid];
m39_513 -> m39_515  [key=0, style=solid];
m39_515 -> m39_516  [key=0, style=solid];
m39_515 -> m39_507  [key=2, style=dotted];
m39_516 -> m39_517  [key=0, style=solid];
m39_514 -> m39_517  [key=0, style=solid];
m39_517 -> m39_103  [color=blue, key=0, style=bold];
m39_181 -> m39_182  [key=0, style=solid];
m39_182 -> m39_181  [color=blue, key=0, style=bold];
m39_297 -> m39_298  [key=0, style=solid];
m39_298 -> m39_299  [key=0, style=solid];
m39_299 -> m39_297  [color=blue, key=0, style=bold];
m39_353 -> m39_354  [key=0, style=solid];
m39_353 -> m39_350  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m39_353 -> m39_351  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m39_353 -> m39_356  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m39_354 -> m39_355  [key=0, style=solid];
m39_354 -> m39_356  [key=2, style=dotted];
m39_355 -> m39_353  [color=blue, key=0, style=bold];
m39_565 -> m39_566  [key=0, style=solid];
m39_566 -> m39_567  [key=0, style=solid];
m39_567 -> m39_565  [color=blue, key=0, style=bold];
m39_378 -> m39_379  [key=0, style=solid];
m39_378 -> m39_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Equity.Equity AddEquity", style=bold];
m39_379 -> m39_380  [key=0, style=solid];
m39_379 -> m39_381  [key=2, style=dotted];
m39_380 -> m39_378  [color=blue, key=0, style=bold];
m39_279 -> m39_280  [key=0, style=solid];
m39_280 -> m39_281  [key=0, style=solid];
m39_280 -> m39_30  [key=2, style=dotted];
m39_281 -> m39_282  [key=0, style=solid];
m39_281 -> m39_281  [color=darkseagreen4, key=1, label=start, style=dashed];
m39_282 -> m39_283  [key=0, style=solid];
m39_282 -> m39_285  [key=0, style=solid];
m39_282 -> m39_286  [key=2, style=dotted];
m39_283 -> m39_284  [key=0, style=solid];
m39_284 -> m39_285  [key=0, style=solid];
m39_284 -> m39_209  [key=2, style=dotted];
m39_285 -> m39_279  [color=blue, key=0, style=bold];
m39_58 -> m39_59  [key=0, style=solid];
m39_59 -> m39_60  [key=0, style=solid];
m39_59 -> m39_67  [key=0, style=solid];
m39_60 -> m39_61  [key=0, style=solid];
m39_60 -> m39_62  [key=0, style=solid];
m39_67 -> m39_68  [key=0, style=solid];
m39_67 -> m39_76  [key=0, style=solid];
m39_67 -> m39_82  [key=2, style=dotted];
m39_67 -> m39_83  [key=2, style=dotted];
m39_67 -> m39_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_67 -> m39_71  [color=darkseagreen4, key=1, label=option, style=dashed];
m39_67 -> m39_72  [color=darkseagreen4, key=1, label=option, style=dashed];
m39_61 -> m39_62  [key=0, style=solid];
m39_61 -> m39_77  [key=2, style=dotted];
m39_62 -> m39_63  [key=0, style=solid];
m39_62 -> m39_79  [color=darkorchid, key=3, label="Local variable QuantConnect.Securities.Security security", style=bold];
m39_63 -> m39_64  [key=0, style=solid];
m39_63 -> m39_66  [key=0, style=solid];
m39_63 -> m39_78  [key=2, style=dotted];
m39_64 -> m39_65  [key=0, style=solid];
m39_64 -> m39_79  [key=2, style=dotted];
m39_64 -> m39_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_66 -> m39_67  [key=0, style=solid];
m39_66 -> m39_81  [key=2, style=dotted];
m39_65 -> m39_66  [key=0, style=solid];
m39_65 -> m39_80  [key=2, style=dotted];
m39_68 -> m39_69  [key=0, style=solid];
m39_68 -> m39_70  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m39_68 -> m39_71  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m39_71 -> m39_72  [key=0, style=solid];
m39_71 -> m39_85  [key=2, style=dotted];
m39_71 -> m39_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m39_71 -> m39_75  [color=darkseagreen4, key=1, label=equity, style=dashed];
m39_72 -> m39_73  [key=0, style=solid];
m39_72 -> m39_72  [color=darkseagreen4, key=1, label=option, style=dashed];
m39_69 -> m39_70  [key=0, style=solid];
m39_70 -> m39_71  [key=0, style=solid];
m39_70 -> m39_72  [key=0, style=solid];
m39_70 -> m39_84  [key=2, style=dotted];
m39_70 -> m39_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m39_70 -> m39_75  [color=darkseagreen4, key=1, label=equity, style=dashed];
m39_73 -> m39_74  [key=0, style=solid];
m39_73 -> m39_67  [key=0, style=solid];
m39_75 -> m39_67  [key=0, style=solid];
m39_75 -> m39_86  [key=2, style=dotted];
m39_74 -> m39_75  [key=0, style=solid];
m39_74 -> m39_74  [color=darkorchid, key=3, label="Local variable int periods", style=bold];
m39_76 -> m39_58  [color=blue, key=0, style=bold];
m39_433 -> m39_434  [key=0, style=solid];
m39_434 -> m39_435  [key=0, style=solid];
m39_434 -> m39_377  [key=2, style=dotted];
m39_434 -> m39_438  [color=darkseagreen4, key=1, label=option, style=dashed];
m39_434 -> m39_439  [color=darkseagreen4, key=1, label=option, style=dashed];
m39_434 -> m39_440  [color=darkseagreen4, key=1, label=option, style=dashed];
m39_434 -> m39_441  [color=darkseagreen4, key=1, label=option, style=dashed];
m39_435 -> m39_436  [key=0, style=solid];
m39_435 -> m39_437  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m39_435 -> m39_438  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m39_438 -> m39_439  [key=0, style=solid];
m39_438 -> m39_378  [key=2, style=dotted];
m39_439 -> m39_440  [key=0, style=solid];
m39_440 -> m39_441  [key=0, style=solid];
m39_440 -> m39_80  [key=2, style=dotted];
m39_441 -> m39_442  [key=0, style=solid];
m39_436 -> m39_437  [key=0, style=solid];
m39_436 -> m39_378  [color=darkorchid, key=3, label="Local variable QuantConnect.Securities.Security equity", style=bold];
m39_437 -> m39_438  [key=0, style=solid];
m39_437 -> m39_439  [key=0, style=solid];
m39_437 -> m39_78  [key=2, style=dotted];
m39_442 -> m39_433  [color=blue, key=0, style=bold];
m39_171 -> m39_172  [key=0, style=solid];
m39_172 -> m39_173  [key=0, style=solid];
m39_172 -> m39_174  [key=2, style=dotted];
m39_172 -> m39_169  [key=2, style=dotted];
m39_173 -> m39_171  [color=blue, key=0, style=bold];
m39_79 -> m39_547  [key=0, style=solid];
m39_547 -> m39_548  [key=0, style=solid];
m39_548 -> m39_549  [key=0, style=solid];
m39_548 -> m39_550  [key=0, style=solid];
m39_549 -> m39_552  [key=0, style=solid];
m39_550 -> m39_551  [key=0, style=solid];
m39_550 -> m39_554  [key=2, style=dotted];
m39_550 -> m39_476  [key=2, style=dotted];
m39_550 -> m39_550  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m39_551 -> m39_552  [key=0, style=solid];
m39_552 -> m39_553  [key=0, style=solid];
m39_552 -> m39_377  [key=2, style=dotted];
m39_553 -> m39_79  [color=blue, key=0, style=bold];
m39_336 -> m39_337  [key=0, style=solid];
m39_336 -> m39_338  [color=darkseagreen4, key=1, label=bool, style=dashed];
m39_336 -> m39_339  [color=darkseagreen4, key=1, label=bool, style=dashed];
m39_336 -> m39_340  [color=darkseagreen4, key=1, label=bool, style=dashed];
m39_336 -> m39_341  [color=darkseagreen4, key=1, label=bool, style=dashed];
m39_337 -> m39_338  [key=0, style=solid];
m39_337 -> m39_344  [key=0, style=solid];
m39_338 -> m39_339  [key=0, style=solid];
m39_339 -> m39_340  [key=0, style=solid];
m39_339 -> m39_40  [key=2, style=dotted];
m39_340 -> m39_341  [key=0, style=solid];
m39_340 -> m39_345  [key=2, style=dotted];
m39_341 -> m39_342  [key=0, style=solid];
m39_341 -> m39_344  [key=0, style=solid];
m39_342 -> m39_343  [key=0, style=solid];
m39_343 -> m39_344  [key=0, style=solid];
m39_344 -> m39_336  [color=blue, key=0, style=bold];
m39_95 -> m39_96  [key=0, style=solid];
m39_95 -> m39_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m39_96 -> m39_97  [key=0, style=solid];
m39_96 -> m39_101  [key=2, style=dotted];
m39_97 -> m39_98  [key=0, style=solid];
m39_97 -> m39_100  [key=0, style=solid];
m39_97 -> m39_102  [key=2, style=dotted];
m39_98 -> m39_99  [key=0, style=solid];
m39_99 -> m39_100  [key=0, style=solid];
m39_99 -> m39_103  [key=2, style=dotted];
m39_100 -> m39_95  [color=blue, key=0, style=bold];
m39_219 -> m39_220  [key=0, style=solid];
m39_220 -> m39_221  [key=0, style=solid];
m39_220 -> m39_222  [key=2, style=dotted];
m39_220 -> m39_223  [key=2, style=dotted];
m39_221 -> m39_219  [color=blue, key=0, style=bold];
m39_54 -> m39_55  [key=0, style=solid];
m39_55 -> m39_56  [key=0, style=solid];
m39_55 -> m39_57  [key=2, style=dotted];
m39_56 -> m39_54  [color=blue, key=0, style=bold];
m39_381 -> m39_537  [key=0, style=solid];
m39_381 -> m39_538  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_381 -> m39_539  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_381 -> m39_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_381 -> m39_542  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_381 -> m39_543  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m39_381 -> m39_61  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m39_381 -> m39_444  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m39_381 -> m39_447  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m39_381 -> m39_450  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m39_381 -> m39_378  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m39_381 -> m39_443  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m39_381 -> m39_446  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m39_381 -> m39_449  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m39_537 -> m39_538  [key=0, style=solid];
m39_537 -> m39_540  [key=0, style=solid];
m39_538 -> m39_539  [key=0, style=solid];
m39_538 -> m39_540  [key=0, style=solid];
m39_538 -> m39_244  [key=2, style=dotted];
m39_538 -> m39_542  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_539 -> m39_546  [key=0, style=solid];
m39_539 -> m39_209  [key=2, style=dotted];
m39_541 -> m39_542  [key=0, style=solid];
m39_541 -> m39_543  [key=0, style=solid];
m39_541 -> m39_376  [key=2, style=dotted];
m39_542 -> m39_543  [key=0, style=solid];
m39_542 -> m39_77  [key=2, style=dotted];
m39_543 -> m39_544  [key=0, style=solid];
m39_543 -> m39_377  [key=2, style=dotted];
m39_543 -> m39_545  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_540 -> m39_541  [key=0, style=solid];
m39_544 -> m39_545  [key=0, style=solid];
m39_544 -> m39_80  [key=2, style=dotted];
m39_545 -> m39_546  [key=0, style=solid];
m39_546 -> m39_381  [color=blue, key=0, style=bold];
m39_108 -> m39_109  [key=0, style=solid];
m39_108 -> m39_110  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m39_109 -> m39_110  [key=0, style=solid];
m39_110 -> m39_111  [key=0, style=solid];
m39_111 -> m39_108  [color=blue, key=0, style=bold];
m39_264 -> m39_268  [key=0, style=solid];
m39_264 -> m39_269  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m39_264 -> m39_261  [color=darkorchid, key=3, label="Parameter variable decimal startingCash", style=bold];
m39_264 -> m39_265  [color=darkorchid, key=3, label="Parameter variable decimal startingCash", style=bold];
m39_268 -> m39_269  [key=0, style=solid];
m39_268 -> m39_270  [key=0, style=solid];
m39_269 -> m39_271  [key=0, style=solid];
m39_269 -> m39_272  [key=2, style=dotted];
m39_270 -> m39_271  [key=0, style=solid];
m39_270 -> m39_209  [key=2, style=dotted];
m39_271 -> m39_264  [color=blue, key=0, style=bold];
m39_350 -> m39_351  [key=0, style=solid];
m39_350 -> m39_353  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m39_351 -> m39_352  [key=0, style=solid];
m39_351 -> m39_353  [key=2, style=dotted];
m39_352 -> m39_350  [color=blue, key=0, style=bold];
m39_183 -> m39_184  [key=0, style=solid];
m39_184 -> m39_183  [color=blue, key=0, style=bold];
m39_126 -> m39_127  [key=0, style=solid];
m39_126 -> m39_138  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m39_127 -> m39_128  [key=0, style=solid];
m39_127 -> m39_137  [key=0, style=solid];
m39_138 -> m39_139  [key=0, style=solid];
m39_138 -> m39_122  [key=2, style=dotted];
m39_128 -> m39_129  [key=0, style=solid];
m39_137 -> m39_138  [key=0, style=solid];
m39_137 -> m39_139  [key=0, style=solid];
m39_129 -> m39_130  [key=0, style=solid];
m39_129 -> m39_29  [key=2, style=dotted];
m39_129 -> m39_140  [key=2, style=dotted];
m39_129 -> m39_141  [key=2, style=dotted];
m39_129 -> m39_142  [key=2, style=dotted];
m39_129 -> m39_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_129 -> m39_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_129 -> m39_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_129 -> m39_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_129 -> m39_134  [color=darkseagreen4, key=1, label=method, style=dashed];
m39_130 -> m39_131  [key=0, style=solid];
m39_130 -> m39_132  [key=0, style=solid];
m39_134 -> m39_135  [key=0, style=solid];
m39_134 -> m39_145  [key=2, style=dotted];
m39_131 -> m39_139  [key=0, style=solid];
m39_132 -> m39_133  [key=0, style=solid];
m39_132 -> m39_143  [key=2, style=dotted];
m39_132 -> m39_134  [color=darkseagreen4, key=1, label=self, style=dashed];
m39_133 -> m39_134  [key=0, style=solid];
m39_133 -> m39_144  [key=2, style=dotted];
m39_133 -> m39_135  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m39_135 -> m39_136  [key=0, style=solid];
m39_135 -> m39_146  [key=2, style=dotted];
m39_136 -> m39_137  [key=0, style=solid];
m39_136 -> m39_147  [key=2, style=dotted];
m39_139 -> m39_126  [color=blue, key=0, style=bold];
m39_391 -> m39_392  [key=0, style=solid];
m39_391 -> m39_403  [key=2, style=dotted];
m39_391 -> m39_393  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m39_391 -> m39_397  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m39_391 -> m39_399  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m39_374 -> m39_382  [key=0, style=solid];
m39_374 -> m39_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_374 -> m39_388  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_374 -> m39_389  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_374 -> m39_390  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_374 -> m39_391  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m39_374 -> m39_396  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m39_374 -> m39_356  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m39_382 -> m39_383  [key=0, style=solid];
m39_382 -> m39_385  [key=0, style=solid];
m39_386 -> m39_387  [key=0, style=solid];
m39_386 -> m39_388  [color=darkseagreen4, key=1, label=alias, style=dashed];
m39_388 -> m39_389  [key=0, style=solid];
m39_388 -> m39_77  [key=2, style=dotted];
m39_388 -> m39_391  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_388 -> m39_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_388 -> m39_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_389 -> m39_390  [key=0, style=solid];
m39_389 -> m39_401  [key=2, style=dotted];
m39_389 -> m39_391  [color=darkseagreen4, key=1, label=marketHoursEntry, style=dashed];
m39_390 -> m39_391  [key=0, style=solid];
m39_390 -> m39_402  [key=2, style=dotted];
m39_396 -> m39_397  [key=0, style=solid];
m39_396 -> m39_45  [key=2, style=dotted];
m39_383 -> m39_384  [key=0, style=solid];
m39_383 -> m39_385  [key=0, style=solid];
m39_383 -> m39_244  [key=2, style=dotted];
m39_383 -> m39_388  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_383 -> m39_389  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_383 -> m39_390  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_385 -> m39_386  [key=0, style=solid];
m39_384 -> m39_400  [key=0, style=solid];
m39_384 -> m39_209  [key=2, style=dotted];
m39_387 -> m39_388  [key=0, style=solid];
m39_387 -> m39_389  [key=0, style=solid];
m39_387 -> m39_376  [key=2, style=dotted];
m39_387 -> m39_391  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_387 -> m39_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_387 -> m39_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_395 -> m39_396  [key=0, style=solid];
m39_395 -> m39_399  [key=0, style=solid];
m39_395 -> m39_405  [key=2, style=dotted];
m39_398 -> m39_399  [key=0, style=solid];
m39_398 -> m39_407  [key=2, style=dotted];
m39_392 -> m39_393  [key=0, style=solid];
m39_393 -> m39_394  [key=0, style=solid];
m39_393 -> m39_404  [key=2, style=dotted];
m39_397 -> m39_398  [key=0, style=solid];
m39_397 -> m39_406  [key=2, style=dotted];
m39_399 -> m39_400  [key=0, style=solid];
m39_394 -> m39_395  [key=0, style=solid];
m39_400 -> m39_374  [color=blue, key=0, style=bold];
m39_560 -> m39_561  [key=0, style=solid];
m39_560 -> m39_563  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m39_561 -> m39_562  [key=0, style=solid];
m39_561 -> m39_563  [key=0, style=solid];
m39_563 -> m39_564  [key=0, style=solid];
m39_562 -> m39_564  [key=0, style=solid];
m39_562 -> m39_210  [key=2, style=dotted];
m39_564 -> m39_560  [color=blue, key=0, style=bold];
m39_428 -> m39_429  [key=0, style=solid];
m39_429 -> m39_430  [key=0, style=solid];
m39_429 -> m39_377  [key=2, style=dotted];
m39_429 -> m39_431  [color=darkseagreen4, key=1, label=future, style=dashed];
m39_430 -> m39_431  [key=0, style=solid];
m39_430 -> m39_80  [key=2, style=dotted];
m39_431 -> m39_432  [key=0, style=solid];
m39_432 -> m39_428  [color=blue, key=0, style=bold];
m39_417 -> m39_418  [key=0, style=solid];
m39_417 -> m39_403  [key=2, style=dotted];
m39_417 -> m39_419  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m39_417 -> m39_423  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m39_417 -> m39_425  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m39_375 -> m39_408  [key=0, style=solid];
m39_375 -> m39_412  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_375 -> m39_414  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_375 -> m39_415  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_375 -> m39_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_375 -> m39_417  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m39_375 -> m39_422  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m39_375 -> m39_356  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m39_408 -> m39_409  [key=0, style=solid];
m39_408 -> m39_411  [key=0, style=solid];
m39_412 -> m39_413  [key=0, style=solid];
m39_412 -> m39_414  [color=darkseagreen4, key=1, label=alias, style=dashed];
m39_414 -> m39_415  [key=0, style=solid];
m39_414 -> m39_77  [key=2, style=dotted];
m39_414 -> m39_417  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_414 -> m39_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_414 -> m39_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_415 -> m39_416  [key=0, style=solid];
m39_415 -> m39_401  [key=2, style=dotted];
m39_415 -> m39_417  [color=darkseagreen4, key=1, label=marketHoursEntry, style=dashed];
m39_416 -> m39_417  [key=0, style=solid];
m39_416 -> m39_402  [key=2, style=dotted];
m39_422 -> m39_423  [key=0, style=solid];
m39_422 -> m39_45  [key=2, style=dotted];
m39_409 -> m39_410  [key=0, style=solid];
m39_409 -> m39_411  [key=0, style=solid];
m39_409 -> m39_244  [key=2, style=dotted];
m39_409 -> m39_414  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_409 -> m39_415  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_409 -> m39_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_411 -> m39_412  [key=0, style=solid];
m39_410 -> m39_426  [key=0, style=solid];
m39_410 -> m39_209  [key=2, style=dotted];
m39_413 -> m39_414  [key=0, style=solid];
m39_413 -> m39_415  [key=0, style=solid];
m39_413 -> m39_376  [key=2, style=dotted];
m39_413 -> m39_417  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_413 -> m39_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_413 -> m39_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m39_421 -> m39_422  [key=0, style=solid];
m39_421 -> m39_425  [key=0, style=solid];
m39_421 -> m39_405  [key=2, style=dotted];
m39_424 -> m39_425  [key=0, style=solid];
m39_424 -> m39_407  [key=2, style=dotted];
m39_418 -> m39_419  [key=0, style=solid];
m39_419 -> m39_420  [key=0, style=solid];
m39_419 -> m39_404  [key=2, style=dotted];
m39_423 -> m39_424  [key=0, style=solid];
m39_423 -> m39_427  [key=2, style=dotted];
m39_425 -> m39_426  [key=0, style=solid];
m39_420 -> m39_421  [key=0, style=solid];
m39_426 -> m39_375  [color=blue, key=0, style=bold];
m39_45 -> m39_45  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m39_45 -> m39_297  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m39_356 -> m39_357  [key=0, style=solid];
m39_356 -> m39_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_356 -> m39_359  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_356 -> m39_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_356 -> m39_361  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_356 -> m39_362  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_356 -> m39_363  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_356 -> m39_365  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_356 -> m39_366  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m39_356 -> m39_367  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m39_356 -> m39_353  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m39_356 -> m39_60  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m39_356 -> m39_374  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m39_356 -> m39_375  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m39_357 -> m39_358  [key=0, style=solid];
m39_357 -> m39_359  [key=0, style=solid];
m39_358 -> m39_373  [key=0, style=solid];
m39_358 -> m39_374  [key=2, style=dotted];
m39_359 -> m39_360  [key=0, style=solid];
m39_359 -> m39_361  [key=0, style=solid];
m39_360 -> m39_373  [key=0, style=solid];
m39_360 -> m39_375  [key=2, style=dotted];
m39_361 -> m39_362  [key=0, style=solid];
m39_361 -> m39_364  [key=0, style=solid];
m39_362 -> m39_363  [key=0, style=solid];
m39_362 -> m39_364  [key=0, style=solid];
m39_362 -> m39_244  [key=2, style=dotted];
m39_362 -> m39_366  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_363 -> m39_373  [key=0, style=solid];
m39_363 -> m39_209  [key=2, style=dotted];
m39_365 -> m39_366  [key=0, style=solid];
m39_365 -> m39_367  [key=0, style=solid];
m39_365 -> m39_376  [key=2, style=dotted];
m39_366 -> m39_367  [key=0, style=solid];
m39_366 -> m39_77  [key=2, style=dotted];
m39_367 -> m39_368  [key=0, style=solid];
m39_367 -> m39_377  [key=2, style=dotted];
m39_367 -> m39_369  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_364 -> m39_365  [key=0, style=solid];
m39_368 -> m39_369  [key=0, style=solid];
m39_368 -> m39_80  [key=2, style=dotted];
m39_369 -> m39_373  [key=0, style=solid];
m39_370 -> m39_371  [key=0, style=solid];
m39_371 -> m39_372  [key=0, style=solid];
m39_371 -> m39_103  [key=2, style=dotted];
m39_372 -> m39_373  [key=0, style=solid];
m39_373 -> m39_356  [color=blue, key=0, style=bold];
m39_169 -> m39_170  [key=0, style=solid];
m39_170 -> m39_169  [color=blue, key=0, style=bold];
m39_36 -> m39_296  [color=darkorchid, key=3, label="Field variable System.DateTime _endDate", style=bold];
m39_490 -> m39_491  [key=0, style=solid];
m39_490 -> m39_487  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m39_490 -> m39_552  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m39_491 -> m39_492  [key=0, style=solid];
m39_491 -> m39_493  [key=2, style=dotted];
m39_492 -> m39_490  [color=blue, key=0, style=bold];
m39_443 -> m39_444  [key=0, style=solid];
m39_443 -> m39_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Forex.Forex AddForex", style=bold];
m39_444 -> m39_445  [key=0, style=solid];
m39_444 -> m39_381  [key=2, style=dotted];
m39_445 -> m39_443  [color=blue, key=0, style=bold];
m39_529 -> m39_530  [key=0, style=solid];
m39_530 -> m39_531  [key=0, style=solid];
m39_530 -> m39_532  [key=0, style=solid];
m39_531 -> m39_532  [key=0, style=solid];
m39_532 -> m39_529  [color=blue, key=0, style=bold];
m39_446 -> m39_447  [key=0, style=solid];
m39_446 -> m39_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Cfd.Cfd AddCfd", style=bold];
m39_447 -> m39_448  [key=0, style=solid];
m39_447 -> m39_381  [key=2, style=dotted];
m39_448 -> m39_446  [color=blue, key=0, style=bold];
m39_116 -> m39_117  [key=0, style=solid];
m39_116 -> m39_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m39_117 -> m39_118  [key=0, style=solid];
m39_117 -> m39_115  [key=2, style=dotted];
m39_117 -> m39_108  [key=2, style=dotted];
m39_117 -> m39_120  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m39_118 -> m39_116  [color=blue, key=0, style=bold];
m39_78 -> m39_234  [color=darkorchid, key=3, label="Property variable QuantConnect.Brokerages.IBrokerageMessageHandler BrokerageMessageHandler", style=bold];
m39_234 -> m39_235  [key=0, style=solid];
m39_234 -> m39_237  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.IBrokerageMessageHandler", style=dashed];
m39_235 -> m39_236  [key=0, style=solid];
m39_235 -> m39_237  [key=0, style=solid];
m39_237 -> m39_238  [key=0, style=solid];
m39_236 -> m39_238  [key=0, style=solid];
m39_236 -> m39_210  [key=2, style=dotted];
m39_238 -> m39_234  [color=blue, key=0, style=bold];
m39_286 -> m39_300  [key=0, style=solid];
m39_286 -> m39_302  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_286 -> m39_305  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_286 -> m39_307  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_286 -> m39_280  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m39_300 -> m39_301  [key=0, style=solid];
m39_300 -> m39_302  [key=0, style=solid];
m39_302 -> m39_303  [key=0, style=solid];
m39_302 -> m39_304  [key=0, style=solid];
m39_302 -> m39_30  [key=2, style=dotted];
m39_305 -> m39_306  [key=0, style=solid];
m39_305 -> m39_307  [key=0, style=solid];
m39_307 -> m39_308  [key=0, style=solid];
m39_307 -> m39_46  [key=2, style=dotted];
m39_307 -> m39_315  [key=2, style=dotted];
m39_307 -> m39_307  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_307 -> m39_310  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_301 -> m39_313  [key=0, style=solid];
m39_303 -> m39_313  [key=0, style=solid];
m39_303 -> m39_209  [key=2, style=dotted];
m39_304 -> m39_305  [key=0, style=solid];
m39_304 -> m39_307  [key=0, style=solid];
m39_304 -> m39_314  [key=2, style=dotted];
m39_306 -> m39_313  [key=0, style=solid];
m39_306 -> m39_209  [key=2, style=dotted];
m39_308 -> m39_309  [key=0, style=solid];
m39_308 -> m39_312  [key=0, style=solid];
m39_310 -> m39_311  [key=0, style=solid];
m39_309 -> m39_310  [key=0, style=solid];
m39_309 -> m39_313  [key=0, style=solid];
m39_312 -> m39_313  [key=0, style=solid];
m39_312 -> m39_209  [key=2, style=dotted];
m39_311 -> m39_313  [key=0, style=solid];
m39_311 -> m39_316  [key=2, style=dotted];
m39_311 -> m39_187  [key=2, style=dotted];
m39_313 -> m39_286  [color=blue, key=0, style=bold];
m39_518 -> m39_519  [key=0, style=solid];
m39_519 -> m39_520  [key=0, style=solid];
m39_519 -> m39_522  [color=darkseagreen4, key=1, label=message, style=dashed];
m39_519 -> m39_523  [color=darkseagreen4, key=1, label=message, style=dashed];
m39_520 -> m39_521  [key=0, style=solid];
m39_520 -> m39_522  [key=0, style=solid];
m39_522 -> m39_523  [key=0, style=solid];
m39_522 -> m39_507  [key=2, style=dotted];
m39_523 -> m39_524  [key=0, style=solid];
m39_521 -> m39_524  [key=0, style=solid];
m39_524 -> m39_518  [color=blue, key=0, style=bold];
m39_330 -> m39_331  [key=0, style=solid];
m39_331 -> m39_332  [key=0, style=solid];
m39_332 -> m39_330  [color=blue, key=0, style=bold];
m39_568 -> m39_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_12  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_66  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_136  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_206  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_224  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_226  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_237  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_242  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_255  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_266  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_268  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_298  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_305  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_308  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_310  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_326  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_331  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_338  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_339  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_342  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_343  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_347  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_351  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_354  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_367  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_368  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_379  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_389  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_391  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_395  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_398  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_415  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_416  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_417  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_419  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_421  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_423  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_424  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_429  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_430  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_434  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_437  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_438  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_440  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_444  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_447  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_455  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_458  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_459  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_462  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_463  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_464  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_465  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_466  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_488  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_491  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_494  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_496  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_497  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_498  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_502  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_504  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_505  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_509  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_511  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_513  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_515  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_516  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_520  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_522  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_523  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_526  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_527  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_531  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_538  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_543  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_544  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_548  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_550  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_551  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_552  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_558  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_563  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_568 -> m39_566  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m39_569 -> m39_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m39_570 -> m39_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_571 -> m39_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m40_0 -> m40_1  [key=0, style=solid];
m40_0 -> m40_2  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m40_0 -> m40_3  [color=darkseagreen4, key=1, label=Execution, style=dashed];
m40_1 -> m40_2  [key=0, style=solid];
m40_2 -> m40_3  [key=0, style=solid];
m40_3 -> m40_4  [key=0, style=solid];
m40_4 -> m40_0  [color=blue, key=0, style=bold];
m40_5 -> m40_6  [key=0, style=solid];
m40_6 -> m40_7  [key=0, style=solid];
m40_6 -> m40_8  [key=2, style=dotted];
m40_7 -> m40_5  [color=blue, key=0, style=bold];
m40_9 -> m40_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m40_9 -> m40_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m40_9 -> m40_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m40_9 -> m40_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m41_66 -> m41_67  [key=0, style=solid];
m41_63 -> m41_64  [key=0, style=solid];
m41_64 -> m41_65  [key=0, style=solid];
m41_65 -> m41_63  [color=blue, key=0, style=bold];
m41_67 -> m41_68  [key=0, style=solid];
m41_68 -> m41_66  [color=blue, key=0, style=bold];
m41_58 -> m41_81  [key=0, style=solid];
m41_58 -> m41_82  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m41_81 -> m41_82  [key=0, style=solid];
m41_82 -> m41_83  [key=0, style=solid];
m41_83 -> m41_84  [key=0, style=solid];
m41_84 -> m41_58  [color=blue, key=0, style=bold];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_2  [key=0, style=solid];
m41_2 -> m41_0  [color=blue, key=0, style=bold];
m41_3 -> m41_4  [key=0, style=solid];
m41_3 -> m41_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m41_4 -> m41_5  [key=0, style=solid];
m41_4 -> m41_21  [key=2, style=dotted];
m41_4 -> m41_15  [color=darkseagreen4, key=1, label=insights, style=dashed];
m41_4 -> m41_17  [color=darkseagreen4, key=1, label=insights, style=dashed];
m41_4 -> m41_19  [color=darkseagreen4, key=1, label=insights, style=dashed];
m41_11 -> m41_12  [key=0, style=solid];
m41_5 -> m41_6  [key=0, style=solid];
m41_5 -> m41_19  [key=0, style=solid];
m41_15 -> m41_18  [key=0, style=solid];
m41_15 -> m41_25  [key=2, style=dotted];
m41_15 -> m41_26  [key=2, style=dotted];
m41_17 -> m41_18  [key=0, style=solid];
m41_17 -> m41_25  [key=2, style=dotted];
m41_17 -> m41_26  [key=2, style=dotted];
m41_19 -> m41_20  [key=0, style=solid];
m41_6 -> m41_7  [key=0, style=solid];
m41_6 -> m41_6  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_6 -> m41_11  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m41_6 -> m41_15  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m41_6 -> m41_17  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m41_7 -> m41_8  [key=0, style=solid];
m41_7 -> m41_7  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_7 -> m41_9  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m41_7 -> m41_10  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m41_8 -> m41_9  [key=0, style=solid];
m41_8 -> m41_8  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_8 -> m41_10  [color=darkseagreen4, key=1, label=previousState, style=dashed];
m41_8 -> m41_18  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_22  [key=2, style=dotted];
m41_9 -> m41_13  [color=darkseagreen4, key=1, label=state, style=dashed];
m41_9 -> m41_18  [color=darkseagreen4, key=1, label=state, style=dashed];
m41_10 -> m41_11  [key=0, style=solid];
m41_10 -> m41_18  [key=0, style=solid];
m41_18 -> m41_5  [key=0, style=solid];
m41_18 -> m41_18  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_13 -> m41_14  [key=0, style=solid];
m41_13 -> m41_16  [key=0, style=solid];
m41_12 -> m41_13  [key=0, style=solid];
m41_12 -> m41_23  [key=2, style=dotted];
m41_12 -> m41_24  [key=2, style=dotted];
m41_12 -> m41_15  [color=darkseagreen4, key=1, label=insightPeriod, style=dashed];
m41_12 -> m41_17  [color=darkseagreen4, key=1, label=insightPeriod, style=dashed];
m41_14 -> m41_15  [key=0, style=solid];
m41_16 -> m41_17  [key=0, style=solid];
m41_20 -> m41_3  [color=blue, key=0, style=bold];
m41_27 -> m41_28  [key=0, style=solid];
m41_27 -> m41_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m41_27 -> m41_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m41_27 -> m41_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m41_27 -> m41_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m41_27 -> m41_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m41_27 -> m41_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m41_28 -> m41_29  [key=0, style=solid];
m41_28 -> m41_34  [key=0, style=solid];
m41_29 -> m41_30  [key=0, style=solid];
m41_29 -> m41_52  [key=2, style=dotted];
m41_29 -> m41_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_29 -> m41_31  [color=darkseagreen4, key=1, label=removed, style=dashed];
m41_30 -> m41_31  [key=0, style=solid];
m41_30 -> m41_34  [key=0, style=solid];
m41_30 -> m41_32  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m41_30 -> m41_33  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m41_34 -> m41_35  [key=0, style=solid];
m41_34 -> m41_51  [key=0, style=solid];
m41_36 -> m41_37  [key=0, style=solid];
m41_36 -> m41_42  [key=0, style=solid];
m41_36 -> m41_38  [color=darkseagreen4, key=1, label=added, style=dashed];
m41_36 -> m41_39  [color=darkseagreen4, key=1, label=added, style=dashed];
m41_36 -> m41_40  [color=darkseagreen4, key=1, label=added, style=dashed];
m41_38 -> m41_39  [key=0, style=solid];
m41_38 -> m41_57  [key=2, style=dotted];
m41_42 -> m41_43  [key=0, style=solid];
m41_42 -> m41_59  [key=2, style=dotted];
m41_42 -> m41_60  [key=2, style=dotted];
m41_42 -> m41_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_31 -> m41_32  [key=0, style=solid];
m41_31 -> m41_30  [key=0, style=solid];
m41_31 -> m41_53  [key=2, style=dotted];
m41_32 -> m41_33  [key=0, style=solid];
m41_32 -> m41_54  [key=2, style=dotted];
m41_33 -> m41_30  [key=0, style=solid];
m41_33 -> m41_55  [key=2, style=dotted];
m41_35 -> m41_36  [key=0, style=solid];
m41_35 -> m41_21  [key=2, style=dotted];
m41_35 -> m41_41  [color=darkseagreen4, key=1, label=newSymbolData, style=dashed];
m41_35 -> m41_42  [color=darkseagreen4, key=1, label=newSymbolData, style=dashed];
m41_41 -> m41_36  [key=0, style=solid];
m41_41 -> m41_26  [key=2, style=dotted];
m41_37 -> m41_38  [key=0, style=solid];
m41_37 -> m41_36  [key=0, style=solid];
m41_37 -> m41_56  [key=2, style=dotted];
m41_39 -> m41_40  [key=0, style=solid];
m41_39 -> m41_58  [key=2, style=dotted];
m41_39 -> m41_41  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m41_40 -> m41_41  [key=0, style=solid];
m41_43 -> m41_44  [key=0, style=solid];
m41_43 -> m41_51  [key=0, style=solid];
m41_43 -> m41_45  [color=darkseagreen4, key=1, label=slice, style=dashed];
m41_44 -> m41_45  [key=0, style=solid];
m41_44 -> m41_43  [key=0, style=solid];
m41_44 -> m41_49  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m41_45 -> m41_46  [key=0, style=solid];
m41_45 -> m41_47  [color=darkseagreen4, key=1, label=value, style=dashed];
m41_49 -> m41_50  [key=0, style=solid];
m41_49 -> m41_44  [key=0, style=solid];
m41_49 -> m41_61  [key=2, style=dotted];
m41_46 -> m41_47  [key=0, style=solid];
m41_47 -> m41_48  [key=0, style=solid];
m41_47 -> m41_50  [color=darkseagreen4, key=1, label=data, style=dashed];
m41_48 -> m41_49  [key=0, style=solid];
m41_50 -> m41_44  [key=0, style=solid];
m41_50 -> m41_62  [key=2, style=dotted];
m41_51 -> m41_27  [color=blue, key=0, style=bold];
m41_22 -> m41_69  [key=0, style=solid];
m41_22 -> m41_71  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m41_22 -> m41_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m41_22 -> m41_74  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m41_22 -> m41_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m41_22 -> m41_77  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m41_22 -> m41_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m41_69 -> m41_70  [color=red, key=0, style=solid];
m41_69 -> m41_71  [key=0, style=solid];
m41_71 -> m41_72  [key=0, style=solid];
m41_71 -> m41_73  [key=0, style=solid];
m41_73 -> m41_74  [key=0, style=solid];
m41_73 -> m41_76  [key=0, style=solid];
m41_74 -> m41_75  [key=0, style=solid];
m41_74 -> m41_76  [key=0, style=solid];
m41_76 -> m41_77  [key=0, style=solid];
m41_76 -> m41_79  [key=0, style=solid];
m41_77 -> m41_78  [key=0, style=solid];
m41_77 -> m41_79  [key=0, style=solid];
m41_79 -> m41_80  [key=0, style=solid];
m41_70 -> m41_80  [color=red, key=0, style=solid];
m41_72 -> m41_80  [key=0, style=solid];
m41_75 -> m41_80  [key=0, style=solid];
m41_78 -> m41_80  [key=0, style=solid];
m41_80 -> m41_22  [color=blue, key=0, style=bold];
m41_85 -> m41_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_85 -> m41_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m41_86 -> m41_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m41_86 -> m41_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m41_86 -> m41_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m42_172 -> m42_173  [key=0, style=solid];
m42_173 -> m42_161  [key=2, style=dotted];
m42_173 -> m42_160  [key=2, style=dotted];
m42_173 -> m42_174  [key=0, style=solid];
m42_173 -> m42_162  [key=2, style=dotted];
m42_173 -> m42_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_174 -> m42_172  [color=blue, key=0, style=bold];
m42_178 -> m42_179  [key=0, style=solid];
m42_178 -> m42_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_179 -> m42_182  [key=2, style=dotted];
m42_179 -> m42_180  [key=0, style=solid];
m42_180 -> m42_181  [key=0, style=solid];
m42_180 -> m42_183  [key=2, style=dotted];
m42_181 -> m42_178  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_0  [color=blue, key=0, style=bold];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_3  [key=2, style=dotted];
m42_203 -> m42_205  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_203 -> m42_206  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_203 -> m42_208  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m42_203 -> m42_204  [key=0, style=solid];
m42_203 -> m42_207  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m42_205 -> m42_32  [key=2, style=dotted];
m42_205 -> m42_206  [key=0, style=solid];
m42_205 -> m42_208  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m42_206 -> m42_32  [key=2, style=dotted];
m42_206 -> m42_207  [key=0, style=solid];
m42_208 -> m42_209  [key=0, style=solid];
m42_208 -> m42_212  [key=2, style=dotted];
m42_208 -> m42_153  [key=2, style=dotted];
m42_204 -> m42_205  [key=0, style=solid];
m42_204 -> m42_211  [key=2, style=dotted];
m42_204 -> m42_207  [color=darkseagreen4, key=1, label=name, style=dashed];
m42_207 -> m42_208  [key=0, style=solid];
m42_207 -> m42_202  [key=2, style=dotted];
m42_207 -> m42_209  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m42_209 -> m42_210  [key=0, style=solid];
m42_210 -> m42_203  [color=blue, key=0, style=bold];
m42_129 -> m42_130  [key=0, style=solid];
m42_130 -> m42_131  [key=0, style=solid];
m42_130 -> m42_132  [key=2, style=dotted];
m42_131 -> m42_129  [color=blue, key=0, style=bold];
m42_229 -> m42_215  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m42_229 -> m42_230  [key=0, style=solid];
m42_229 -> m42_233  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m42_230 -> m42_219  [key=2, style=dotted];
m42_230 -> m42_231  [key=0, style=solid];
m42_230 -> m42_233  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m42_233 -> m42_234  [key=0, style=solid];
m42_233 -> m42_235  [key=2, style=dotted];
m42_233 -> m42_221  [key=2, style=dotted];
m42_231 -> m42_233  [key=0, style=solid];
m42_231 -> m42_232  [key=0, style=solid];
m42_232 -> m42_234  [key=0, style=solid];
m42_234 -> m42_229  [color=blue, key=0, style=bold];
m42_140 -> m42_141  [key=0, style=solid];
m42_141 -> m42_142  [key=0, style=solid];
m42_141 -> m42_139  [key=2, style=dotted];
m42_142 -> m42_140  [color=blue, key=0, style=bold];
m42_126 -> m42_127  [key=0, style=solid];
m42_302 -> m42_303  [color=green, key=0, style=solid];
m42_302 -> m42_305  [color=green, key=1, label=PyObject, style=dashed];
m42_302 -> m42_306  [color=green, key=1, label=PyObject, style=dashed];
m42_308 -> m42_309  [color=green, key=0, style=solid];
m42_311 -> m42_312  [color=green, key=0, style=solid];
m42_303 -> m42_304  [color=green, key=0, style=solid];
m42_303 -> m42_305  [color=green, key=0, style=solid];
m42_304 -> m42_307  [color=green, key=0, style=solid];
m42_305 -> m42_306  [color=green, key=0, style=solid];
m42_305 -> m42_34  [color=green, key=2, style=dotted];
m42_305 -> m42_35  [color=green, key=2, style=dotted];
m42_306 -> m42_307  [color=green, key=0, style=solid];
m42_306 -> m42_35  [color=green, key=2, style=dotted];
m42_307 -> m42_302  [color=blue, key=0, style=bold];
m42_309 -> m42_310  [color=green, key=0, style=solid];
m42_310 -> m42_308  [color=blue, key=0, style=bold];
m42_312 -> m42_313  [color=green, key=0, style=solid];
m42_312 -> m42_314  [color=green, key=2, style=dotted];
m42_312 -> m42_287  [color=green, key=2, style=dotted];
m42_313 -> m42_311  [color=blue, key=0, style=bold];
m42_37 -> m42_40  [key=2, style=dotted];
m42_37 -> m42_38  [key=0, style=solid];
m42_37 -> m42_39  [key=2, style=dotted];
m42_37 -> m42_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_50 -> m42_40  [key=2, style=dotted];
m42_50 -> m42_51  [key=0, style=solid];
m42_50 -> m42_39  [key=2, style=dotted];
m42_50 -> m42_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_56 -> m42_40  [key=2, style=dotted];
m42_56 -> m42_57  [key=0, style=solid];
m42_56 -> m42_39  [key=2, style=dotted];
m42_56 -> m42_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_66 -> m42_40  [key=2, style=dotted];
m42_66 -> m42_67  [key=0, style=solid];
m42_66 -> m42_39  [key=2, style=dotted];
m42_66 -> m42_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_76 -> m42_40  [key=2, style=dotted];
m42_76 -> m42_77  [key=0, style=solid];
m42_76 -> m42_78  [key=2, style=dotted];
m42_76 -> m42_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_87 -> m42_40  [key=2, style=dotted];
m42_87 -> m42_88  [key=0, style=solid];
m42_87 -> m42_39  [key=2, style=dotted];
m42_87 -> m42_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_124 -> m42_40  [key=2, style=dotted];
m42_124 -> m42_125  [key=0, style=solid];
m42_124 -> m42_39  [key=2, style=dotted];
m42_124 -> m42_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_36 -> m42_37  [key=0, style=solid];
m42_49 -> m42_50  [key=0, style=solid];
m42_55 -> m42_56  [key=0, style=solid];
m42_65 -> m42_66  [key=0, style=solid];
m42_75 -> m42_76  [key=0, style=solid];
m42_86 -> m42_87  [key=0, style=solid];
m42_163 -> m42_164  [key=0, style=solid];
m42_169 -> m42_170  [key=0, style=solid];
m42_175 -> m42_176  [key=0, style=solid];
m42_38 -> m42_36  [color=blue, key=0, style=bold];
m42_41 -> m42_42  [key=0, style=solid];
m42_51 -> m42_49  [color=blue, key=0, style=bold];
m42_52 -> m42_53  [key=0, style=solid];
m42_57 -> m42_55  [color=blue, key=0, style=bold];
m42_58 -> m42_59  [key=0, style=solid];
m42_67 -> m42_65  [color=blue, key=0, style=bold];
m42_68 -> m42_69  [key=0, style=solid];
m42_77 -> m42_75  [color=blue, key=0, style=bold];
m42_79 -> m42_80  [key=0, style=solid];
m42_88 -> m42_86  [color=blue, key=0, style=bold];
m42_89 -> m42_90  [key=0, style=solid];
m42_123 -> m42_124  [key=0, style=solid];
m42_125 -> m42_123  [color=blue, key=0, style=bold];
m42_127 -> m42_128  [key=0, style=solid];
m42_127 -> m42_119  [key=2, style=dotted];
m42_165 -> m42_163  [color=blue, key=0, style=bold];
m42_164 -> m42_165  [key=0, style=solid];
m42_171 -> m42_169  [color=blue, key=0, style=bold];
m42_170 -> m42_171  [key=0, style=solid];
m42_177 -> m42_175  [color=blue, key=0, style=bold];
m42_176 -> m42_177  [key=0, style=solid];
m42_43 -> m42_41  [color=blue, key=0, style=bold];
m42_42 -> m42_43  [key=0, style=solid];
m42_54 -> m42_52  [color=blue, key=0, style=bold];
m42_53 -> m42_54  [key=0, style=solid];
m42_60 -> m42_58  [color=blue, key=0, style=bold];
m42_59 -> m42_60  [key=0, style=solid];
m42_70 -> m42_68  [color=blue, key=0, style=bold];
m42_69 -> m42_70  [key=0, style=solid];
m42_81 -> m42_79  [color=blue, key=0, style=bold];
m42_80 -> m42_81  [key=0, style=solid];
m42_91 -> m42_89  [color=blue, key=0, style=bold];
m42_90 -> m42_91  [key=0, style=solid];
m42_128 -> m42_126  [color=blue, key=0, style=bold];
m42_247 -> m42_248  [color=green, key=0, style=solid];
m42_248 -> m42_249  [color=green, key=0, style=solid];
m42_248 -> m42_250  [color=green, key=2, style=dotted];
m42_248 -> m42_251  [color=green, key=2, style=dotted];
m42_249 -> m42_247  [color=blue, key=0, style=bold];
m42_71 -> m42_72  [key=0, style=solid];
m42_71 -> m42_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_72 -> m42_32  [key=2, style=dotted];
m42_72 -> m42_73  [key=0, style=solid];
m42_72 -> m42_76  [color=darkseagreen4, key=1, label=selector, style=dashed];
m42_73 -> m42_74  [key=0, style=solid];
m42_73 -> m42_33  [key=2, style=dotted];
m42_73 -> m42_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_74 -> m42_71  [color=blue, key=0, style=bold];
m42_99 -> m42_100  [key=0, style=solid];
m42_100 -> m42_101  [key=0, style=solid];
m42_100 -> m42_10  [key=2, style=dotted];
m42_100 -> m42_95  [key=2, style=dotted];
m42_101 -> m42_99  [color=blue, key=0, style=bold];
m42_154 -> m42_155  [key=0, style=solid];
m42_155 -> m42_156  [key=0, style=solid];
m42_155 -> m42_153  [key=2, style=dotted];
m42_156 -> m42_154  [color=blue, key=0, style=bold];
m42_147 -> m42_148  [key=0, style=solid];
m42_148 -> m42_149  [key=0, style=solid];
m42_148 -> m42_146  [key=2, style=dotted];
m42_149 -> m42_147  [color=blue, key=0, style=bold];
m42_4 -> m42_5  [key=0, style=solid];
m42_5 -> m42_6  [key=0, style=solid];
m42_5 -> m42_7  [key=2, style=dotted];
m42_6 -> m42_4  [color=blue, key=0, style=bold];
m42_136 -> m42_137  [key=0, style=solid];
m42_137 -> m42_138  [key=0, style=solid];
m42_137 -> m42_139  [key=2, style=dotted];
m42_138 -> m42_136  [color=blue, key=0, style=bold];
m42_150 -> m42_151  [key=0, style=solid];
m42_151 -> m42_152  [key=0, style=solid];
m42_151 -> m42_153  [key=2, style=dotted];
m42_152 -> m42_150  [color=blue, key=0, style=bold];
m42_219 -> m42_269  [color=green, key=0, style=solid];
m42_219 -> m42_270  [color=green, key=1, label=PyObject, style=dashed];
m42_219 -> m42_272  [color=green, key=1, label=PyObject, style=dashed];
m42_219 -> m42_275  [color=green, key=1, label=PyObject, style=dashed];
m42_219 -> m42_271  [color=green, key=3, label="Parameter variable PyObject pyObject", style=bold];
m42_219 -> m42_213  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m42_219 -> m42_222  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m42_219 -> m42_229  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m42_269 -> m42_270  [color=green, key=0, style=solid];
m42_269 -> m42_244  [color=green, key=2, style=dotted];
m42_270 -> m42_271  [color=green, key=0, style=solid];
m42_270 -> m42_274  [color=green, key=0, style=solid];
m42_270 -> m42_281  [color=green, key=2, style=dotted];
m42_271 -> m42_272  [color=green, key=0, style=solid];
m42_271 -> m42_282  [color=green, key=2, style=dotted];
m42_271 -> m42_273  [color=green, key=1, label=tmp, style=dashed];
m42_274 -> m42_275  [color=green, key=0, style=solid];
m42_274 -> m42_284  [color=green, key=2, style=dotted];
m42_274 -> m42_278  [color=green, key=1, label=symbols, style=dashed];
m42_274 -> m42_279  [color=green, key=1, label=symbols, style=dashed];
m42_272 -> m42_273  [color=green, key=0, style=solid];
m42_272 -> m42_283  [color=green, key=2, style=dotted];
m42_273 -> m42_275  [color=green, key=1, label=PyObject, style=dashed];
m42_273 -> m42_274  [color=green, key=0, style=solid];
m42_275 -> m42_276  [color=green, key=0, style=solid];
m42_275 -> m42_279  [color=green, key=0, style=solid];
m42_278 -> m42_275  [color=green, key=0, style=solid];
m42_278 -> m42_286  [color=green, key=2, style=dotted];
m42_277 -> m42_275  [color=green, key=0, style=solid];
m42_277 -> m42_278  [color=green, key=0, style=solid];
m42_277 -> m42_285  [color=green, key=2, style=dotted];
m42_276 -> m42_278  [color=green, key=1, label=symbol, style=dashed];
m42_276 -> m42_277  [color=green, key=0, style=solid];
m42_276 -> m42_35  [color=green, key=2, style=dotted];
m42_279 -> m42_280  [color=green, key=0, style=solid];
m42_280 -> m42_219  [color=blue, key=0, style=bold];
m42_11 -> m42_12  [key=0, style=solid];
m42_11 -> m42_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_11 -> m42_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_11 -> m42_10  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m42_11 -> m42_7  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m42_11 -> m42_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_12 -> m42_13  [key=0, style=solid];
m42_12 -> m42_18  [key=2, style=dotted];
m42_12 -> m42_15  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m42_14 -> m42_15  [key=0, style=solid];
m42_14 -> m42_21  [key=2, style=dotted];
m42_15 -> m42_16  [key=0, style=solid];
m42_15 -> m42_22  [key=2, style=dotted];
m42_16 -> m42_17  [key=0, style=solid];
m42_16 -> m42_23  [key=2, style=dotted];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_15  [color=darkseagreen4, key=1, label=symbolObject, style=dashed];
m42_13 -> m42_19  [key=2, style=dotted];
m42_13 -> m42_20  [key=2, style=dotted];
m42_17 -> m42_11  [color=blue, key=0, style=bold];
m42_213 -> m42_215  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m42_213 -> m42_214  [key=0, style=solid];
m42_213 -> m42_217  [color=darkseagreen4, key=1, label=int, style=dashed];
m42_215 -> m42_216  [key=0, style=solid];
m42_215 -> m42_217  [key=0, style=solid];
m42_214 -> m42_219  [key=2, style=dotted];
m42_214 -> m42_215  [key=0, style=solid];
m42_214 -> m42_217  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m42_217 -> m42_218  [key=0, style=solid];
m42_217 -> m42_220  [key=2, style=dotted];
m42_217 -> m42_221  [key=2, style=dotted];
m42_216 -> m42_218  [key=0, style=solid];
m42_218 -> m42_213  [color=blue, key=0, style=bold];
m42_24 -> m42_25  [key=0, style=solid];
m42_24 -> m42_30  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_24 -> m42_29  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_25 -> m42_32  [key=2, style=dotted];
m42_25 -> m42_26  [key=0, style=solid];
m42_25 -> m42_27  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m42_25 -> m42_37  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_33  [key=2, style=dotted];
m42_27 -> m42_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_30 -> m42_35  [key=2, style=dotted];
m42_30 -> m42_31  [key=0, style=solid];
m42_30 -> m42_33  [key=2, style=dotted];
m42_29 -> m42_35  [key=2, style=dotted];
m42_29 -> m42_34  [key=2, style=dotted];
m42_29 -> m42_30  [key=0, style=solid];
m42_26 -> m42_27  [key=0, style=solid];
m42_26 -> m42_29  [key=0, style=solid];
m42_28 -> m42_31  [key=0, style=solid];
m42_31 -> m42_24  [color=blue, key=0, style=bold];
m42_287 -> m42_288  [color=green, key=0, style=solid];
m42_287 -> m42_289  [color=green, key=1, label="System.Type", style=dashed];
m42_287 -> m42_290  [color=green, key=1, label="System.Type", style=dashed];
m42_287 -> m42_287  [color=darkorchid, key=3, label="method methodReturn System.Type GetIndicatorBaseType", style=bold];
m42_288 -> m42_289  [color=green, key=0, style=solid];
m42_288 -> m42_290  [color=green, key=0, style=solid];
m42_289 -> m42_291  [color=green, key=0, style=solid];
m42_290 -> m42_291  [color=green, key=0, style=solid];
m42_290 -> m42_287  [color=green, key=2, style=dotted];
m42_291 -> m42_287  [color=blue, key=0, style=bold];
m42_61 -> m42_62  [key=0, style=solid];
m42_61 -> m42_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_62 -> m42_32  [key=2, style=dotted];
m42_62 -> m42_63  [key=0, style=solid];
m42_62 -> m42_66  [color=darkseagreen4, key=1, label=selector, style=dashed];
m42_63 -> m42_64  [key=0, style=solid];
m42_63 -> m42_33  [key=2, style=dotted];
m42_63 -> m42_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_64 -> m42_61  [color=blue, key=0, style=bold];
m42_113 -> m42_115  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m42_113 -> m42_114  [key=0, style=solid];
m42_116 -> m42_32  [key=2, style=dotted];
m42_116 -> m42_117  [key=0, style=solid];
m42_116 -> m42_124  [color=darkseagreen4, key=1, label=selector, style=dashed];
m42_111 -> m42_112  [key=0, style=solid];
m42_111 -> m42_18  [key=2, style=dotted];
m42_111 -> m42_113  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m42_117 -> m42_118  [key=0, style=solid];
m42_117 -> m42_121  [key=2, style=dotted];
m42_117 -> m42_122  [key=2, style=dotted];
m42_117 -> m42_124  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m42_95 -> m42_116  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_95 -> m42_12  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m42_95 -> m42_93  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m42_95 -> m42_111  [key=0, style=solid];
m42_95 -> m42_117  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_95 -> m42_124  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_95 -> m42_10  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m42_95 -> m42_114  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_95 -> m42_115  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_95 -> m42_127  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_95 -> m42_105  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m42_95 -> m42_108  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m42_95 -> m42_92  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m42_95 -> m42_96  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m42_95 -> m42_99  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m42_95 -> m42_102  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m42_115 -> m42_116  [key=0, style=solid];
m42_115 -> m42_117  [color=darkseagreen4, key=1, label=config, style=dashed];
m42_115 -> m42_120  [key=2, style=dotted];
m42_112 -> m42_115  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m42_112 -> m42_113  [key=0, style=solid];
m42_114 -> m42_115  [key=0, style=solid];
m42_114 -> m42_119  [key=2, style=dotted];
m42_118 -> m42_95  [color=blue, key=0, style=bold];
m42_96 -> m42_97  [key=0, style=solid];
m42_97 -> m42_98  [key=0, style=solid];
m42_97 -> m42_10  [key=2, style=dotted];
m42_97 -> m42_95  [key=2, style=dotted];
m42_98 -> m42_96  [color=blue, key=0, style=bold];
m42_133 -> m42_134  [key=0, style=solid];
m42_134 -> m42_135  [key=0, style=solid];
m42_134 -> m42_132  [key=2, style=dotted];
m42_135 -> m42_133  [color=blue, key=0, style=bold];
m42_10 -> m42_315  [key=0, style=solid];
m42_10 -> m42_316  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_10 -> m42_319  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_10 -> m42_7  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m42_10 -> m42_92  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m42_10 -> m42_96  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m42_10 -> m42_99  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m42_10 -> m42_102  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m42_10 -> m42_105  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m42_10 -> m42_108  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m42_315 -> m42_244  [key=2, style=dotted];
m42_315 -> m42_316  [key=0, style=solid];
m42_316 -> m42_317  [key=0, style=solid];
m42_316 -> m42_321  [key=2, style=dotted];
m42_316 -> m42_322  [key=2, style=dotted];
m42_316 -> m42_323  [key=2, style=dotted];
m42_316 -> m42_324  [key=2, style=dotted];
m42_316 -> m42_319  [color=darkseagreen4, key=1, label=an, style=dashed];
m42_319 -> m42_320  [key=0, style=solid];
m42_319 -> m42_327  [key=2, style=dotted];
m42_319 -> m42_328  [key=2, style=dotted];
m42_319 -> m42_329  [key=2, style=dotted];
m42_317 -> m42_318  [key=0, style=solid];
m42_317 -> m42_325  [key=2, style=dotted];
m42_318 -> m42_319  [key=0, style=solid];
m42_318 -> m42_326  [key=2, style=dotted];
m42_320 -> m42_10  [color=blue, key=0, style=bold];
m42_236 -> m42_237  [color=green, key=0, style=solid];
m42_236 -> m42_238  [color=green, key=1, label=PyObject, style=dashed];
m42_236 -> m42_242  [color=green, key=1, label=PyObject, style=dashed];
m42_237 -> m42_238  [color=green, key=0, style=solid];
m42_237 -> m42_244  [color=green, key=2, style=dotted];
m42_238 -> m42_239  [color=green, key=0, style=solid];
m42_238 -> m42_32  [color=green, key=2, style=dotted];
m42_238 -> m42_240  [color=green, key=1, label=pyBenchmark, style=dashed];
m42_239 -> m42_242  [color=green, key=0, style=solid];
m42_239 -> m42_240  [color=green, key=0, style=solid];
m42_240 -> m42_241  [color=green, key=0, style=solid];
m42_240 -> m42_245  [color=green, key=2, style=dotted];
m42_242 -> m42_243  [color=green, key=0, style=solid];
m42_242 -> m42_35  [color=green, key=2, style=dotted];
m42_242 -> m42_246  [color=green, key=2, style=dotted];
m42_241 -> m42_243  [color=green, key=0, style=solid];
m42_243 -> m42_236  [color=blue, key=0, style=bold];
m42_222 -> m42_215  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m42_222 -> m42_223  [key=0, style=solid];
m42_222 -> m42_226  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m42_223 -> m42_219  [key=2, style=dotted];
m42_223 -> m42_224  [key=0, style=solid];
m42_223 -> m42_226  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m42_226 -> m42_227  [key=0, style=solid];
m42_226 -> m42_228  [key=2, style=dotted];
m42_226 -> m42_221  [key=2, style=dotted];
m42_224 -> m42_226  [key=0, style=solid];
m42_224 -> m42_225  [key=0, style=solid];
m42_225 -> m42_227  [key=0, style=solid];
m42_227 -> m42_222  [color=blue, key=0, style=bold];
m42_252 -> m42_253  [color=green, key=0, style=solid];
m42_252 -> m42_257  [color=green, key=1, label=PyObject, style=dashed];
m42_252 -> m42_261  [color=green, key=1, label=PyObject, style=dashed];
m42_253 -> m42_254  [color=green, key=0, style=solid];
m42_253 -> m42_263  [color=green, key=2, style=dotted];
m42_253 -> m42_255  [color=green, key=1, label=securityInitializer1, style=dashed];
m42_254 -> m42_257  [color=green, key=0, style=solid];
m42_254 -> m42_255  [color=green, key=0, style=solid];
m42_255 -> m42_256  [color=green, key=0, style=solid];
m42_255 -> m42_264  [color=green, key=2, style=dotted];
m42_257 -> m42_258  [color=green, key=0, style=solid];
m42_257 -> m42_265  [color=green, key=2, style=dotted];
m42_257 -> m42_259  [color=green, key=1, label=securityInitializer2, style=dashed];
m42_258 -> m42_261  [color=green, key=0, style=solid];
m42_258 -> m42_259  [color=green, key=0, style=solid];
m42_259 -> m42_260  [color=green, key=0, style=solid];
m42_259 -> m42_266  [color=green, key=2, style=dotted];
m42_261 -> m42_262  [color=green, key=0, style=solid];
m42_261 -> m42_267  [color=green, key=2, style=dotted];
m42_261 -> m42_268  [color=green, key=2, style=dotted];
m42_256 -> m42_262  [color=green, key=0, style=solid];
m42_260 -> m42_262  [color=green, key=0, style=solid];
m42_262 -> m42_252  [color=blue, key=0, style=bold];
m42_143 -> m42_144  [key=0, style=solid];
m42_144 -> m42_145  [key=0, style=solid];
m42_144 -> m42_146  [key=2, style=dotted];
m42_145 -> m42_143  [color=blue, key=0, style=bold];
m42_182 -> m42_292  [color=green, key=0, style=solid];
m42_182 -> m42_293  [color=green, key=1, label=PyObject, style=dashed];
m42_182 -> m42_178  [color=darkorchid, key=3, label="Parameter variable PyObject fourth", style=bold];
m42_182 -> m42_184  [color=darkorchid, key=3, label="Parameter variable PyObject fourth", style=bold];
m42_292 -> m42_293  [color=green, key=0, style=solid];
m42_292 -> m42_244  [color=green, key=2, style=dotted];
m42_293 -> m42_294  [color=green, key=0, style=solid];
m42_293 -> m42_40  [color=green, key=2, style=dotted];
m42_293 -> m42_161  [color=green, key=2, style=dotted];
m42_293 -> m42_302  [color=green, key=1, label="lambda expression", style=dashed];
m42_293 -> m42_297  [color=green, key=1, label=array, style=dashed];
m42_293 -> m42_215  [color=green, key=3, label="method methodReturn dynamic ", style=bold];
m42_294 -> m42_295  [color=green, key=0, style=solid];
m42_294 -> m42_160  [color=green, key=2, style=dotted];
m42_294 -> m42_40  [color=green, key=2, style=dotted];
m42_294 -> m42_299  [color=green, key=2, style=dotted];
m42_294 -> m42_308  [color=green, key=1, label="lambda expression", style=dashed];
m42_294 -> m42_311  [color=green, key=1, label="lambda expression", style=dashed];
m42_297 -> m42_298  [color=green, key=0, style=solid];
m42_295 -> m42_297  [color=green, key=0, style=solid];
m42_295 -> m42_296  [color=green, key=0, style=solid];
m42_295 -> m42_300  [color=green, key=2, style=dotted];
m42_296 -> m42_298  [color=green, key=0, style=solid];
m42_296 -> m42_301  [color=green, key=2, style=dotted];
m42_298 -> m42_182  [color=blue, key=0, style=bold];
m42_102 -> m42_103  [key=0, style=solid];
m42_103 -> m42_104  [key=0, style=solid];
m42_103 -> m42_10  [key=2, style=dotted];
m42_103 -> m42_95  [key=2, style=dotted];
m42_104 -> m42_102  [color=blue, key=0, style=bold];
m42_44 -> m42_45  [key=0, style=solid];
m42_44 -> m42_46  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_45 -> m42_32  [key=2, style=dotted];
m42_45 -> m42_46  [key=0, style=solid];
m42_45 -> m42_47  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m42_45 -> m42_50  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m42_46 -> m42_32  [key=2, style=dotted];
m42_46 -> m42_47  [key=0, style=solid];
m42_46 -> m42_56  [color=darkseagreen4, key=1, label=fine, style=dashed];
m42_47 -> m42_48  [key=0, style=solid];
m42_47 -> m42_33  [key=2, style=dotted];
m42_47 -> m42_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_47 -> m42_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_48 -> m42_44  [color=blue, key=0, style=bold];
m42_193 -> m42_195  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_193 -> m42_196  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m42_193 -> m42_189  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m42_193 -> m42_194  [key=0, style=solid];
m42_193 -> m42_198  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m42_193 -> m42_188  [color=darkorchid, key=3, label="Parameter variable string fieldName", style=bold];
m42_193 -> m42_197  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m42_195 -> m42_32  [key=2, style=dotted];
m42_195 -> m42_196  [key=0, style=solid];
m42_195 -> m42_198  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m42_196 -> m42_32  [key=2, style=dotted];
m42_196 -> m42_197  [key=0, style=solid];
m42_194 -> m42_195  [key=0, style=solid];
m42_194 -> m42_201  [key=2, style=dotted];
m42_194 -> m42_197  [color=darkseagreen4, key=1, label=name, style=dashed];
m42_198 -> m42_199  [key=0, style=solid];
m42_198 -> m42_139  [key=2, style=dotted];
m42_197 -> m42_198  [key=0, style=solid];
m42_197 -> m42_202  [key=2, style=dotted];
m42_197 -> m42_199  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m42_199 -> m42_200  [key=0, style=solid];
m42_200 -> m42_193  [color=blue, key=0, style=bold];
m42_166 -> m42_167  [key=0, style=solid];
m42_167 -> m42_161  [key=2, style=dotted];
m42_167 -> m42_160  [key=2, style=dotted];
m42_167 -> m42_168  [key=0, style=solid];
m42_167 -> m42_162  [key=2, style=dotted];
m42_167 -> m42_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_168 -> m42_166  [color=blue, key=0, style=bold];
m42_82 -> m42_83  [key=0, style=solid];
m42_82 -> m42_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_83 -> m42_32  [key=2, style=dotted];
m42_83 -> m42_84  [key=0, style=solid];
m42_83 -> m42_87  [color=darkseagreen4, key=1, label=selector, style=dashed];
m42_84 -> m42_85  [key=0, style=solid];
m42_84 -> m42_33  [key=2, style=dotted];
m42_84 -> m42_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_85 -> m42_82  [color=blue, key=0, style=bold];
m42_2 -> m42_0  [color=blue, key=0, style=bold];
m42_108 -> m42_109  [key=0, style=solid];
m42_109 -> m42_110  [key=0, style=solid];
m42_109 -> m42_10  [key=2, style=dotted];
m42_109 -> m42_95  [key=2, style=dotted];
m42_110 -> m42_108  [color=blue, key=0, style=bold];
m42_184 -> m42_185  [key=0, style=solid];
m42_184 -> m42_186  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_185 -> m42_182  [key=2, style=dotted];
m42_185 -> m42_186  [key=0, style=solid];
m42_186 -> m42_187  [key=0, style=solid];
m42_186 -> m42_183  [key=2, style=dotted];
m42_187 -> m42_184  [color=blue, key=0, style=bold];
m42_105 -> m42_106  [key=0, style=solid];
m42_106 -> m42_107  [key=0, style=solid];
m42_106 -> m42_10  [key=2, style=dotted];
m42_106 -> m42_95  [key=2, style=dotted];
m42_107 -> m42_105  [color=blue, key=0, style=bold];
m42_92 -> m42_93  [key=0, style=solid];
m42_93 -> m42_94  [key=0, style=solid];
m42_93 -> m42_10  [key=2, style=dotted];
m42_93 -> m42_95  [key=2, style=dotted];
m42_94 -> m42_92  [color=blue, key=0, style=bold];
m42_7 -> m42_5  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m42_7 -> m42_8  [key=0, style=solid];
m42_7 -> m42_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m42_8 -> m42_9  [key=0, style=solid];
m42_8 -> m42_10  [key=2, style=dotted];
m42_8 -> m42_11  [key=2, style=dotted];
m42_9 -> m42_7  [color=blue, key=0, style=bold];
m42_188 -> m42_189  [key=0, style=solid];
m42_188 -> m42_190  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m42_188 -> m42_193  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m42_189 -> m42_190  [key=0, style=solid];
m42_189 -> m42_192  [key=2, style=dotted];
m42_190 -> m42_191  [key=0, style=solid];
m42_190 -> m42_193  [key=2, style=dotted];
m42_191 -> m42_188  [color=blue, key=0, style=bold];
m42_157 -> m42_158  [key=0, style=solid];
m42_158 -> m42_161  [key=2, style=dotted];
m42_158 -> m42_160  [key=2, style=dotted];
m42_158 -> m42_159  [key=0, style=solid];
m42_158 -> m42_162  [key=2, style=dotted];
m42_158 -> m42_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_159 -> m42_157  [color=blue, key=0, style=bold];
m42_330 -> m42_242  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_240  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_248  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_261  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_255  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_259  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_290  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_294  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_312  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_134  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_158  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_179  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_185  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_190  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_194  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_208  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_214  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_223  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_226  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_230  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_330 -> m42_233  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_331 -> m42_37  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m42_332 -> m42_50  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m42_333 -> m42_56  [color=darkseagreen4, key=1, label=fine, style=dashed];
m42_334 -> m42_66  [color=darkseagreen4, key=1, label=selector, style=dashed];
m42_335 -> m42_76  [color=darkseagreen4, key=1, label=selector, style=dashed];
m42_336 -> m42_87  [color=darkseagreen4, key=1, label=selector, style=dashed];
m42_337 -> m42_124  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_337 -> m42_127  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_338 -> m42_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_338 -> m42_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_339 -> m42_124  [color=darkseagreen4, key=1, label=selector, style=dashed];
m43_34 -> m43_35  [key=0, style=solid];
m43_35 -> m43_36  [key=0, style=solid];
m43_36 -> m43_34  [color=blue, key=0, style=bold];
m43_17 -> m43_18  [key=0, style=solid];
m43_17 -> m43_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m43_18 -> m43_19  [key=0, style=solid];
m43_18 -> m43_22  [key=0, style=solid];
m43_19 -> m43_20  [key=0, style=solid];
m43_19 -> m43_22  [key=0, style=solid];
m43_20 -> m43_21  [key=0, style=solid];
m43_20 -> m43_19  [key=0, style=solid];
m43_20 -> m43_20  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_21 -> m43_20  [key=0, style=solid];
m43_21 -> m43_23  [key=2, style=dotted];
m43_21 -> m43_24  [key=2, style=dotted];
m43_22 -> m43_17  [color=blue, key=0, style=bold];
m43_25 -> m43_26  [key=0, style=solid];
m43_26 -> m43_27  [key=0, style=solid];
m43_26 -> m43_30  [key=0, style=solid];
m43_27 -> m43_28  [key=0, style=solid];
m43_27 -> m43_31  [key=2, style=dotted];
m43_28 -> m43_29  [key=0, style=solid];
m43_28 -> m43_26  [key=0, style=solid];
m43_28 -> m43_32  [key=2, style=dotted];
m43_28 -> m43_33  [key=2, style=dotted];
m43_28 -> m43_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_29 -> m43_28  [key=0, style=solid];
m43_29 -> m43_24  [key=2, style=dotted];
m43_30 -> m43_25  [color=blue, key=0, style=bold];
m43_37 -> m43_38  [key=0, style=solid];
m43_38 -> m43_39  [key=0, style=solid];
m43_38 -> m43_40  [key=2, style=dotted];
m43_38 -> m43_24  [key=2, style=dotted];
m43_39 -> m43_37  [color=blue, key=0, style=bold];
m43_0 -> m43_1  [key=0, style=solid];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_9  [key=2, style=dotted];
m43_2 -> m43_3  [key=0, style=solid];
m43_2 -> m43_10  [key=2, style=dotted];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_11  [key=2, style=dotted];
m43_4 -> m43_5  [key=0, style=solid];
m43_4 -> m43_6  [key=0, style=solid];
m43_5 -> m43_4  [key=0, style=solid];
m43_5 -> m43_12  [key=2, style=dotted];
m43_5 -> m43_13  [key=2, style=dotted];
m43_5 -> m43_14  [key=2, style=dotted];
m43_6 -> m43_7  [key=0, style=solid];
m43_6 -> m43_15  [key=2, style=dotted];
m43_7 -> m43_8  [key=0, style=solid];
m43_7 -> m43_16  [key=2, style=dotted];
m43_8 -> m43_0  [color=blue, key=0, style=bold];
m43_41 -> m43_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m43_41 -> m43_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesHistoryAlgorithm", style=dashed];
m44_44 -> m44_45  [key=0, style=solid];
m44_45 -> m44_46  [key=0, style=solid];
m44_45 -> m44_47  [key=2, style=dotted];
m44_45 -> m44_48  [key=2, style=dotted];
m44_46 -> m44_44  [color=blue, key=0, style=bold];
m44_0 -> m44_1  [key=0, style=solid];
m44_0 -> m44_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m44_0 -> m44_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m44_1 -> m44_2  [key=0, style=solid];
m44_1 -> m44_8  [key=2, style=dotted];
m44_2 -> m44_3  [key=0, style=solid];
m44_2 -> m44_6  [key=0, style=solid];
m44_6 -> m44_7  [key=0, style=solid];
m44_6 -> m44_9  [key=2, style=dotted];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_8  [key=2, style=dotted];
m44_4 -> m44_5  [key=0, style=solid];
m44_4 -> m44_8  [key=2, style=dotted];
m44_5 -> m44_6  [key=0, style=solid];
m44_5 -> m44_8  [key=2, style=dotted];
m44_7 -> m44_0  [color=blue, key=0, style=bold];
m44_41 -> m44_49  [key=0, style=solid];
m44_41 -> m44_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m44_41 -> m44_51  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m44_49 -> m44_50  [key=0, style=solid];
m44_50 -> m44_51  [key=0, style=solid];
m44_51 -> m44_52  [key=0, style=solid];
m44_52 -> m44_41  [color=blue, key=0, style=bold];
m44_10 -> m44_11  [key=0, style=solid];
m44_11 -> m44_12  [key=0, style=solid];
m44_11 -> m44_39  [key=2, style=dotted];
m44_11 -> m44_37  [color=red, key=1, label=basicTemplateStatistics, style=dashed];
m44_12 -> m44_13  [key=0, style=solid];
m44_12 -> m44_39  [key=2, style=dotted];
m44_12 -> m44_37  [color=red, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m44_37 -> m44_38  [color=red, key=0, style=solid];
m44_37 -> m44_40  [color=red, key=2, style=dotted];
m44_37 -> m44_41  [color=red, key=2, style=dotted];
m44_37 -> m44_42  [color=red, key=2, style=dotted];
m44_37 -> m44_43  [color=red, key=2, style=dotted];
m44_37 -> m44_44  [color=red, key=1, label="lambda expression", style=dashed];
m44_13 -> m44_14  [key=0, style=solid];
m44_13 -> m44_39  [key=2, style=dotted];
m44_13 -> m44_37  [color=red, key=1, label=limitFillRegressionStatistics, style=dashed];
m44_14 -> m44_15  [key=0, style=solid];
m44_14 -> m44_39  [key=2, style=dotted];
m44_14 -> m44_37  [color=red, key=1, label=updateOrderRegressionStatistics, style=dashed];
m44_15 -> m44_16  [key=0, style=solid];
m44_15 -> m44_39  [key=2, style=dotted];
m44_15 -> m44_37  [color=red, key=1, label=regressionStatistics, style=dashed];
m44_16 -> m44_17  [key=0, style=solid];
m44_16 -> m44_39  [key=2, style=dotted];
m44_16 -> m44_37  [color=red, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m44_17 -> m44_18  [key=0, style=solid];
m44_17 -> m44_39  [key=2, style=dotted];
m44_17 -> m44_37  [color=red, key=1, label=customDataRegressionStatistics, style=dashed];
m44_18 -> m44_19  [key=0, style=solid];
m44_18 -> m44_39  [key=2, style=dotted];
m44_18 -> m44_37  [color=red, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m44_19 -> m44_20  [key=0, style=solid];
m44_19 -> m44_39  [key=2, style=dotted];
m44_19 -> m44_37  [color=red, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m44_20 -> m44_21  [key=0, style=solid];
m44_20 -> m44_39  [key=2, style=dotted];
m44_20 -> m44_37  [color=red, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m44_21 -> m44_22  [key=0, style=solid];
m44_21 -> m44_39  [key=2, style=dotted];
m44_21 -> m44_37  [color=red, key=1, label=parameterizedStatistics, style=dashed];
m44_22 -> m44_23  [key=0, style=solid];
m44_22 -> m44_39  [key=2, style=dotted];
m44_22 -> m44_37  [color=red, key=1, label=historyAlgorithmStatistics, style=dashed];
m44_23 -> m44_24  [key=0, style=solid];
m44_23 -> m44_39  [key=2, style=dotted];
m44_23 -> m44_37  [color=red, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m44_24 -> m44_25  [key=0, style=solid];
m44_24 -> m44_39  [key=2, style=dotted];
m44_24 -> m44_37  [color=red, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m44_25 -> m44_26  [key=0, style=solid];
m44_25 -> m44_39  [key=2, style=dotted];
m44_25 -> m44_37  [color=red, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m44_26 -> m44_27  [key=0, style=solid];
m44_26 -> m44_39  [key=2, style=dotted];
m44_26 -> m44_37  [color=red, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m44_27 -> m44_28  [key=0, style=solid];
m44_27 -> m44_39  [key=2, style=dotted];
m44_27 -> m44_37  [color=red, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m44_28 -> m44_29  [key=0, style=solid];
m44_28 -> m44_39  [key=2, style=dotted];
m44_28 -> m44_37  [color=red, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m44_29 -> m44_30  [key=0, style=solid];
m44_29 -> m44_39  [key=2, style=dotted];
m44_29 -> m44_37  [color=red, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m44_30 -> m44_31  [key=0, style=solid];
m44_30 -> m44_39  [key=2, style=dotted];
m44_30 -> m44_37  [color=red, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m44_31 -> m44_32  [key=0, style=solid];
m44_31 -> m44_39  [key=2, style=dotted];
m44_31 -> m44_37  [color=red, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m44_32 -> m44_33  [key=0, style=solid];
m44_32 -> m44_39  [key=2, style=dotted];
m44_32 -> m44_37  [color=red, key=1, label=basicTemplateDailyStatistics, style=dashed];
m44_33 -> m44_34  [key=0, style=solid];
m44_33 -> m44_39  [key=2, style=dotted];
m44_33 -> m44_37  [color=red, key=1, label=hourSplitStatistics, style=dashed];
m44_34 -> m44_35  [key=0, style=solid];
m44_34 -> m44_39  [key=2, style=dotted];
m44_34 -> m44_37  [color=red, key=1, label=hourReverseSplitStatistics, style=dashed];
m44_35 -> m44_36  [key=0, style=solid];
m44_35 -> m44_39  [key=2, style=dotted];
m44_35 -> m44_37  [color=red, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m44_36 -> m44_37  [color=red, key=0, style=solid];
m44_36 -> m44_39  [key=2, style=dotted];
m44_38 -> m44_10  [color=blue, key=0, style=bold];
m44_53 -> m44_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m44_53 -> m44_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m44_53 -> m44_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m45_173 -> m45_174  [key=0, style=solid];
m45_173 -> m45_203  [key=2, style=dotted];
m45_173 -> m45_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_173 -> m45_177  [color=darkseagreen4, key=1, label=optionSeq, style=dashed];
m45_121 -> m45_125  [key=0, style=solid];
m45_121 -> m45_126  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_121 -> m45_122  [key=0, style=solid];
m45_121 -> m45_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m45_125 -> m45_126  [key=0, style=solid];
m45_126 -> m45_127  [key=0, style=solid];
m45_126 -> m45_68  [key=2, style=dotted];
m45_126 -> m45_129  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_126 -> m45_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_127 -> m45_128  [key=0, style=solid];
m45_127 -> m45_70  [key=2, style=dotted];
m45_127 -> m45_129  [color=darkseagreen4, key=1, label=response, style=dashed];
m45_129 -> m45_131  [key=0, style=solid];
m45_129 -> m45_71  [key=2, style=dotted];
m45_129 -> m45_130  [key=0, style=solid];
m45_130 -> m45_131  [key=0, style=solid];
m45_130 -> m45_72  [key=2, style=dotted];
m45_130 -> m45_128  [color=blue, key=0, style=bold];
m45_128 -> m45_129  [key=0, style=solid];
m45_128 -> m45_130  [key=0, style=solid];
m45_131 -> m45_121  [color=blue, key=0, style=bold];
m45_131 -> m45_132  [key=0, style=solid];
m45_131 -> m45_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Dividend", style=dashed];
m45_73 -> m45_71  [color=blue, key=0, style=bold];
m45_202 -> m45_203  [color=red, key=0, style=solid];
m45_202 -> m45_216  [color=darkseagreen4, key=1, label=newRootSymbol, style=dashed];
m45_202 -> m45_183  [color=darkorchid, key=3, label="Local variable string newRootSymbol", style=bold];
m45_163 -> m45_164  [key=0, style=solid];
m45_164 -> m45_165  [key=0, style=solid];
m45_164 -> m45_3  [key=2, style=dotted];
m45_164 -> m45_162  [key=2, style=dotted];
m45_165 -> m45_163  [color=blue, key=0, style=bold];
m45_165 -> m45_166  [key=0, style=solid];
m45_17 -> m45_18  [key=0, style=solid];
m45_17 -> m45_15  [color=blue, key=0, style=bold];
m45_18 -> m45_19  [key=0, style=solid];
m45_18 -> m45_3  [key=2, style=dotted];
m45_18 -> m45_4  [key=2, style=dotted];
m45_19 -> m45_17  [color=blue, key=0, style=bold];
m45_19 -> m45_20  [key=0, style=solid];
m45_231 -> m45_274  [key=0, style=solid];
m45_231 -> m45_277  [key=2, style=dotted];
m45_318 -> m45_319  [key=0, style=solid];
m45_319 -> m45_320  [key=0, style=solid];
m45_319 -> m45_317  [key=2, style=dotted];
m45_320 -> m45_318  [color=blue, key=0, style=bold];
m45_0 -> m45_1  [key=0, style=solid];
m45_0 -> m45_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_3  [key=2, style=dotted];
m45_1 -> m45_4  [key=2, style=dotted];
m45_2 -> m45_0  [color=blue, key=0, style=bold];
m45_2 -> m45_3  [color=red, key=0, style=solid];
m45_191 -> m45_192  [key=0, style=solid];
m45_191 -> m45_195  [key=0, style=solid];
m45_191 -> m45_198  [key=0, style=solid];
m45_168 -> m45_173  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_180  [color=darkseagreen4, key=1, label=int, style=dashed];
m45_168 -> m45_183  [color=darkseagreen4, key=1, label=int, style=dashed];
m45_168 -> m45_188  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_193  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_196  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_169  [key=0, style=solid];
m45_168 -> m45_170  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_218  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_175  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_186  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_168 -> m45_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_180 -> m45_181  [key=0, style=solid];
m45_180 -> m45_212  [key=2, style=dotted];
m45_180 -> m45_176  [key=0, style=solid];
m45_183 -> m45_184  [key=0, style=solid];
m45_183 -> m45_214  [key=2, style=dotted];
m45_183 -> m45_188  [key=0, style=solid];
m45_188 -> m45_189  [key=0, style=solid];
m45_188 -> m45_191  [key=0, style=solid];
m45_188 -> m45_215  [key=2, style=dotted];
m45_193 -> m45_194  [key=0, style=solid];
m45_193 -> m45_41  [key=2, style=dotted];
m45_196 -> m45_197  [key=0, style=solid];
m45_196 -> m45_104  [key=2, style=dotted];
m45_172 -> m45_173  [key=0, style=solid];
m45_172 -> m45_180  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m45_172 -> m45_183  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m45_172 -> m45_186  [key=0, style=solid];
m45_172 -> m45_218  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m45_172 -> m45_175  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m45_172 -> m45_178  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m45_172 -> m45_185  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m45_174 -> m45_175  [key=0, style=solid];
m45_174 -> m45_177  [key=0, style=solid];
m45_174 -> m45_204  [key=2, style=dotted];
m45_177 -> m45_180  [color=darkseagreen4, key=1, label=option, style=dashed];
m45_177 -> m45_183  [color=darkseagreen4, key=1, label=option, style=dashed];
m45_177 -> m45_178  [key=0, style=solid];
m45_177 -> m45_211  [key=2, style=dotted];
m45_177 -> m45_182  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m45_177 -> m45_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m45_170 -> m45_180  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m45_170 -> m45_183  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m45_170 -> m45_193  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m45_170 -> m45_196  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m45_170 -> m45_171  [key=0, style=solid];
m45_170 -> m45_202  [key=2, style=dotted];
m45_170 -> m45_174  [key=2, style=dotted];
m45_179 -> m45_180  [key=0, style=solid];
m45_181 -> m45_172  [key=0, style=solid];
m45_181 -> m45_213  [key=2, style=dotted];
m45_181 -> m45_182  [key=0, style=solid];
m45_181 -> m45_186  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m45_181 -> m45_189  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m45_182 -> m45_183  [key=0, style=solid];
m45_182 -> m45_192  [key=2, style=dotted];
m45_182 -> m45_185  [color=darkseagreen4, key=1, label=newSymbol, style=dashed];
m45_182 -> m45_187  [color=darkseagreen4, key=1, label=newSymbol, style=dashed];
m45_184 -> m45_172  [key=0, style=solid];
m45_184 -> m45_213  [key=2, style=dotted];
m45_184 -> m45_185  [key=0, style=solid];
m45_184 -> m45_193  [key=2, style=dotted];
m45_187 -> m45_188  [key=0, style=solid];
m45_187 -> m45_193  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m45_187 -> m45_196  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m45_187 -> m45_199  [key=0, style=solid];
m45_187 -> m45_191  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m45_187 -> m45_198  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m45_187 -> m45_176  [key=0, style=solid];
m45_189 -> m45_190  [key=0, style=solid];
m45_189 -> m45_205  [key=2, style=dotted];
m45_189 -> m45_216  [key=2, style=dotted];
m45_189 -> m45_176  [key=0, style=solid];
m45_189 -> m45_195  [key=2, style=dotted];
m45_192 -> m45_193  [key=0, style=solid];
m45_194 -> m45_187  [key=0, style=solid];
m45_194 -> m45_213  [key=2, style=dotted];
m45_195 -> m45_196  [key=0, style=solid];
m45_197 -> m45_187  [key=0, style=solid];
m45_197 -> m45_213  [key=2, style=dotted];
m45_197 -> m45_198  [key=0, style=solid];
m45_197 -> m45_197  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m45_199 -> m45_200  [key=0, style=solid];
m45_199 -> m45_203  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m45_199 -> m45_216  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_199 -> m45_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_199 -> m45_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_199 -> m45_204  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_199 -> m45_205  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_199 -> m45_207  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_199 -> m45_208  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_199 -> m45_209  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_169 -> m45_170  [key=0, style=solid];
m45_169 -> m45_181  [color=darkseagreen4, key=1, label=orders, style=dashed];
m45_169 -> m45_184  [color=darkseagreen4, key=1, label=orders, style=dashed];
m45_169 -> m45_194  [color=darkseagreen4, key=1, label=orders, style=dashed];
m45_169 -> m45_197  [color=darkseagreen4, key=1, label=orders, style=dashed];
m45_169 -> m45_199  [color=darkseagreen4, key=1, label=orders, style=dashed];
m45_169 -> m45_201  [key=2, style=dotted];
m45_171 -> m45_172  [key=0, style=solid];
m45_171 -> m45_186  [key=0, style=solid];
m45_171 -> m45_143  [color=blue, key=0, style=bold];
m45_175 -> m45_205  [key=2, style=dotted];
m45_175 -> m45_176  [key=0, style=solid];
m45_175 -> m45_206  [key=2, style=dotted];
m45_175 -> m45_207  [key=2, style=dotted];
m45_175 -> m45_208  [key=2, style=dotted];
m45_175 -> m45_209  [key=2, style=dotted];
m45_175 -> m45_124  [key=2, style=dotted];
m45_175 -> m45_191  [key=2, style=dotted];
m45_175 -> m45_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_186 -> m45_187  [key=0, style=solid];
m45_186 -> m45_199  [key=0, style=solid];
m45_186 -> m45_195  [key=2, style=dotted];
m45_178 -> m45_179  [key=0, style=solid];
m45_178 -> m45_182  [key=0, style=solid];
m45_178 -> m45_185  [key=0, style=solid];
m45_178 -> m45_188  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_185 -> m45_200  [key=0, style=solid];
m45_185 -> m45_210  [key=2, style=dotted];
m45_185 -> m45_206  [key=2, style=dotted];
m45_185 -> m45_186  [key=0, style=solid];
m45_185 -> m45_194  [key=2, style=dotted];
m45_185 -> m45_187  [color=darkseagreen4, key=1, label=optionHoldings, style=dashed];
m45_198 -> m45_200  [key=0, style=solid];
m45_198 -> m45_210  [key=2, style=dotted];
m45_198 -> m45_206  [key=2, style=dotted];
m45_198 -> m45_196  [color=blue, key=0, style=bold];
m45_190 -> m45_200  [key=0, style=solid];
m45_190 -> m45_210  [key=2, style=dotted];
m45_190 -> m45_144  [color=blue, key=0, style=bold];
m45_176 -> m45_200  [key=0, style=solid];
m45_176 -> m45_210  [key=2, style=dotted];
m45_176 -> m45_177  [key=0, style=solid];
m45_176 -> m45_190  [key=0, style=solid];
m45_176 -> m45_178  [color=darkseagreen4, key=1, label=securityKV, style=dashed];
m45_200 -> m45_168  [color=blue, key=0, style=bold];
m45_200 -> m45_201  [key=0, style=solid];
m45_200 -> m45_206  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m45_200 -> m45_207  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m45_200 -> m45_208  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m45_122 -> m45_123  [key=0, style=solid];
m45_123 -> m45_124  [key=0, style=solid];
m45_123 -> m45_121  [key=2, style=dotted];
m45_123 -> m45_102  [color=blue, key=0, style=bold];
m45_124 -> m45_122  [color=blue, key=0, style=bold];
m45_204 -> m45_205  [key=0, style=solid];
m45_204 -> m45_206  [key=0, style=solid];
m45_3 -> m45_4  [color=red, key=0, style=solid];
m45_3 -> m45_11  [color=red, key=2, style=dotted];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_12  [key=2, style=dotted];
m45_4 -> m45_36  [key=0, style=solid];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_12  [key=2, style=dotted];
m45_6 -> m45_7  [key=0, style=solid];
m45_6 -> m45_13  [key=2, style=dotted];
m45_6 -> m45_8  [key=2, style=dotted];
m45_6 -> m45_4  [key=2, style=dotted];
m45_7 -> m45_8  [key=0, style=solid];
m45_7 -> m45_5  [color=blue, key=0, style=bold];
m45_8 -> m45_9  [key=0, style=solid];
m45_9 -> m45_10  [key=0, style=solid];
m45_9 -> m45_14  [key=2, style=dotted];
m45_10 -> m45_0  [color=blue, key=0, style=bold];
m45_10 -> m45_11  [key=0, style=solid];
m45_10 -> m45_12  [key=2, style=dotted];
m45_10 -> m45_4  [key=2, style=dotted];
m45_101 -> m45_103  [key=0, style=solid];
m45_101 -> m45_71  [key=2, style=dotted];
m45_250 -> m45_252  [color=green, key=0, style=solid];
m45_250 -> m45_251  [key=0, style=solid];
m45_250 -> m45_278  [key=2, style=dotted];
m45_338 -> m45_342  [key=0, style=solid];
m45_338 -> m45_348  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_338 -> m45_352  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_338 -> m45_355  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_338 -> m45_346  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_342 -> m45_343  [key=0, style=solid];
m45_342 -> m45_347  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_349  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_352  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_363  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_364  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_370  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_371  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_372  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_374  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_377  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_342 -> m45_378  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_348 -> m45_349  [key=0, style=solid];
m45_348 -> m45_350  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m45_348 -> m45_351  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m45_352 -> m45_353  [key=0, style=solid];
m45_352 -> m45_381  [key=2, style=dotted];
m45_352 -> m45_382  [key=2, style=dotted];
m45_352 -> m45_362  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m45_352 -> m45_373  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m45_355 -> m45_356  [key=0, style=solid];
m45_355 -> m45_383  [key=2, style=dotted];
m45_355 -> m45_376  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m45_370 -> m45_371  [key=0, style=solid];
m45_370 -> m45_381  [key=2, style=dotted];
m45_370 -> m45_372  [color=darkseagreen4, key=1, label=order, style=dashed];
m45_370 -> m45_374  [color=darkseagreen4, key=1, label=order, style=dashed];
m45_343 -> m45_344  [key=0, style=solid];
m45_347 -> m45_380  [key=0, style=solid];
m45_349 -> m45_350  [key=0, style=solid];
m45_349 -> m45_351  [color=darkseagreen4, key=1, label=currentHoldingsValue, style=dashed];
m45_363 -> m45_364  [key=0, style=solid];
m45_363 -> m45_365  [key=0, style=solid];
m45_364 -> m45_370  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_364 -> m45_364  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_364 -> m45_365  [key=0, style=solid];
m45_364 -> m45_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_364 -> m45_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_364 -> m45_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_364 -> m45_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_364 -> m45_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_364 -> m45_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_371 -> m45_372  [key=0, style=solid];
m45_371 -> m45_382  [key=2, style=dotted];
m45_371 -> m45_376  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m45_372 -> m45_373  [key=0, style=solid];
m45_372 -> m45_384  [key=2, style=dotted];
m45_372 -> m45_376  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m45_374 -> m45_375  [key=0, style=solid];
m45_374 -> m45_385  [key=2, style=dotted];
m45_374 -> m45_376  [color=darkseagreen4, key=1, label=marginRequired, style=dashed];
m45_377 -> m45_378  [key=0, style=solid];
m45_377 -> m45_379  [key=0, style=solid];
m45_378 -> m45_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_378 -> m45_379  [key=0, style=solid];
m45_346 -> m45_348  [key=0, style=solid];
m45_346 -> m45_347  [key=0, style=solid];
m45_350 -> m45_12  [key=2, style=dotted];
m45_350 -> m45_351  [key=0, style=solid];
m45_350 -> m45_362  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m45_350 -> m45_376  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m45_351 -> m45_352  [key=0, style=solid];
m45_351 -> m45_355  [color=darkseagreen4, key=1, label=direction, style=dashed];
m45_351 -> m45_379  [color=darkseagreen4, key=1, label=direction, style=dashed];
m45_353 -> m45_355  [key=0, style=solid];
m45_353 -> m45_354  [key=0, style=solid];
m45_362 -> m45_370  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_362 -> m45_363  [key=0, style=solid];
m45_362 -> m45_364  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_362 -> m45_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_362 -> m45_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_362 -> m45_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_362 -> m45_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_362 -> m45_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_362 -> m45_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_373 -> m45_374  [key=0, style=solid];
m45_356 -> m45_357  [key=0, style=solid];
m45_356 -> m45_358  [key=0, style=solid];
m45_376 -> m45_377  [key=0, style=solid];
m45_376 -> m45_365  [key=0, style=solid];
m45_368 -> m45_370  [key=0, style=solid];
m45_368 -> m45_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_368 -> m45_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_368 -> m45_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_368 -> m45_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_368 -> m45_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_369 -> m45_370  [key=0, style=solid];
m45_369 -> m45_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_369 -> m45_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_369 -> m45_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_369 -> m45_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_369 -> m45_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m45_366 -> m45_370  [key=0, style=solid];
m45_366 -> m45_367  [key=0, style=solid];
m45_344 -> m45_346  [key=0, style=solid];
m45_344 -> m45_345  [key=0, style=solid];
m45_365 -> m45_366  [key=0, style=solid];
m45_365 -> m45_375  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m45_379 -> m45_380  [key=0, style=solid];
m45_375 -> m45_376  [key=0, style=solid];
m45_375 -> m45_375  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m45_354 -> m45_380  [key=0, style=solid];
m45_361 -> m45_362  [key=0, style=solid];
m45_361 -> m45_368  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m45_361 -> m45_367  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m45_357 -> m45_380  [key=0, style=solid];
m45_358 -> m45_359  [key=0, style=solid];
m45_367 -> m45_368  [key=0, style=solid];
m45_367 -> m45_369  [key=0, style=solid];
m45_345 -> m45_380  [key=0, style=solid];
m45_360 -> m45_361  [key=0, style=solid];
m45_359 -> m45_360  [key=0, style=solid];
m45_380 -> m45_338  [color=blue, key=0, style=bold];
m45_232 -> m45_233  [key=0, style=solid];
m45_232 -> m45_234  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_232 -> m45_183  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security QuantConnect.Securities.ISecurityProvider.GetSecurity", style=bold];
m45_233 -> m45_234  [key=0, style=solid];
m45_233 -> m45_274  [key=0, style=solid];
m45_233 -> m45_276  [key=2, style=dotted];
m45_233 -> m45_205  [key=2, style=dotted];
m45_234 -> m45_235  [key=0, style=solid];
m45_234 -> m45_236  [key=0, style=solid];
m45_234 -> m45_53  [key=2, style=dotted];
m45_234 -> m45_239  [color=darkseagreen4, key=1, label=price, style=dashed];
m45_235 -> m45_237  [key=0, style=solid];
m45_235 -> m45_236  [key=0, style=solid];
m45_236 -> m45_237  [key=0, style=solid];
m45_236 -> m45_274  [key=0, style=solid];
m45_236 -> m45_276  [key=2, style=dotted];
m45_237 -> m45_232  [color=blue, key=0, style=bold];
m45_237 -> m45_238  [key=0, style=solid];
m45_237 -> m45_239  [key=0, style=solid];
m45_216 -> m45_217  [key=0, style=solid];
m45_216 -> m45_218  [color=darkseagreen4, key=1, label=rootSymbol, style=dashed];
m45_66 -> m45_67  [key=0, style=solid];
m45_66 -> m45_46  [key=2, style=dotted];
m45_66 -> m45_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m45_11 -> m45_9  [color=blue, key=0, style=bold];
m45_209 -> m45_210  [key=0, style=solid];
m45_77 -> m45_78  [key=0, style=solid];
m45_78 -> m45_79  [key=0, style=solid];
m45_78 -> m45_14  [key=2, style=dotted];
m45_78 -> m45_65  [key=2, style=dotted];
m45_79 -> m45_77  [color=blue, key=0, style=bold];
m45_314 -> m45_315  [key=0, style=solid];
m45_315 -> m45_316  [key=0, style=solid];
m45_315 -> m45_317  [key=2, style=dotted];
m45_316 -> m45_314  [color=blue, key=0, style=bold];
m45_90 -> m45_91  [key=0, style=solid];
m45_91 -> m45_92  [key=0, style=solid];
m45_91 -> m45_93  [key=2, style=dotted];
m45_92 -> m45_90  [color=blue, key=0, style=bold];
m45_92 -> m45_89  [color=blue, key=0, style=bold];
m45_321 -> m45_322  [key=0, style=solid];
m45_322 -> m45_323  [key=0, style=solid];
m45_322 -> m45_317  [key=2, style=dotted];
m45_323 -> m45_321  [color=blue, key=0, style=bold];
m45_94 -> m45_95  [key=0, style=solid];
m45_94 -> m45_89  [color=darkorchid, key=3, label="method methodReturn decimal GetBuyingPower", style=bold];
m45_95 -> m45_96  [key=0, style=solid];
m45_95 -> m45_93  [key=2, style=dotted];
m45_95 -> m45_89  [key=2, style=dotted];
m45_96 -> m45_94  [color=blue, key=0, style=bold];
m45_203 -> m45_204  [color=red, key=0, style=solid];
m45_203 -> m45_218  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m45_203 -> m45_210  [color=red, key=1, label=symbolIsFound, style=dashed];
m45_203 -> m45_203  [color=red, key=3, label="Local variable System.Func<QuantConnect.Symbol, bool> symbolIsFound", style=bold];
m45_28 -> m45_29  [key=0, style=solid];
m45_28 -> m45_26  [color=blue, key=0, style=bold];
m45_29 -> m45_30  [key=0, style=solid];
m45_29 -> m45_18  [key=2, style=dotted];
m45_30 -> m45_28  [color=blue, key=0, style=bold];
m45_30 -> m45_31  [key=0, style=solid];
m45_30 -> m45_4  [key=2, style=dotted];
m45_62 -> m45_63  [key=0, style=solid];
m45_62 -> m45_73  [key=2, style=dotted];
m45_63 -> m45_64  [key=0, style=solid];
m45_63 -> m45_57  [key=2, style=dotted];
m45_63 -> m45_58  [key=2, style=dotted];
m45_63 -> m45_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_64 -> m45_62  [color=blue, key=0, style=bold];
m45_64 -> m45_35  [color=blue, key=0, style=bold];
m45_201 -> m45_202  [key=0, style=solid];
m45_201 -> m45_203  [color=red, key=1, label=newStrike, style=dashed];
m45_201 -> m45_217  [color=darkseagreen4, key=1, label=newStrike, style=dashed];
m45_201 -> m45_201  [color=darkorchid, key=3, label="Local variable decimal newStrike", style=bold];
m45_13 -> m45_14  [key=0, style=solid];
m45_205 -> m45_206  [key=0, style=solid];
m45_207 -> m45_210  [key=0, style=solid];
m45_207 -> m45_213  [key=2, style=dotted];
m45_208 -> m45_209  [key=0, style=solid];
m45_208 -> m45_213  [key=2, style=dotted];
m45_206 -> m45_207  [key=0, style=solid];
m45_206 -> m45_208  [key=0, style=solid];
m45_206 -> m45_212  [key=2, style=dotted];
m45_210 -> m45_211  [key=0, style=solid];
m45_210 -> m45_57  [key=2, style=dotted];
m45_210 -> m45_124  [key=2, style=dotted];
m45_210 -> m45_214  [key=2, style=dotted];
m45_210 -> m45_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_211 -> m45_199  [color=blue, key=0, style=bold];
m45_162 -> m45_166  [key=0, style=solid];
m45_162 -> m45_163  [key=0, style=solid];
m45_166 -> m45_167  [key=0, style=solid];
m45_166 -> m45_168  [key=2, style=dotted];
m45_166 -> m45_169  [color=darkseagreen4, key=1, label=tick, style=dashed];
m45_167 -> m45_162  [color=blue, key=0, style=bold];
m45_167 -> m45_168  [key=0, style=solid];
m45_167 -> m45_170  [key=0, style=solid];
m45_132 -> m45_133  [key=0, style=solid];
m45_132 -> m45_135  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_135 -> m45_136  [key=0, style=solid];
m45_135 -> m45_139  [key=0, style=solid];
m45_135 -> m45_140  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_133 -> m45_134  [key=0, style=solid];
m45_133 -> m45_135  [key=2, style=dotted];
m45_134 -> m45_135  [key=0, style=solid];
m45_134 -> m45_137  [key=0, style=solid];
m45_134 -> m45_132  [color=blue, key=0, style=bold];
m45_136 -> m45_137  [key=0, style=solid];
m45_136 -> m45_138  [key=2, style=dotted];
m45_137 -> m45_131  [color=blue, key=0, style=bold];
m45_137 -> m45_138  [key=0, style=solid];
m45_137 -> m45_135  [key=2, style=dotted];
m45_65 -> m45_83  [key=0, style=solid];
m45_65 -> m45_84  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_65 -> m45_66  [key=0, style=solid];
m45_83 -> m45_84  [key=0, style=solid];
m45_83 -> m45_14  [key=2, style=dotted];
m45_84 -> m45_85  [key=0, style=solid];
m45_84 -> m45_68  [key=2, style=dotted];
m45_84 -> m45_87  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_84 -> m45_88  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_84 -> m45_86  [key=0, style=solid];
m45_85 -> m45_86  [key=0, style=solid];
m45_85 -> m45_70  [key=2, style=dotted];
m45_85 -> m45_87  [color=darkseagreen4, key=1, label=response, style=dashed];
m45_85 -> m45_88  [key=2, style=dotted];
m45_87 -> m45_89  [key=0, style=solid];
m45_87 -> m45_71  [key=2, style=dotted];
m45_88 -> m45_89  [key=0, style=solid];
m45_88 -> m45_72  [key=2, style=dotted];
m45_86 -> m45_87  [key=0, style=solid];
m45_86 -> m45_88  [key=0, style=solid];
m45_86 -> m45_80  [color=blue, key=0, style=bold];
m45_89 -> m45_65  [color=blue, key=0, style=bold];
m45_89 -> m45_90  [key=0, style=solid];
m45_89 -> m45_91  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m45_89 -> m45_94  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderDirection direction", style=bold];
m45_74 -> m45_75  [key=0, style=solid];
m45_59 -> m45_60  [key=0, style=solid];
m45_59 -> m45_64  [key=0, style=solid];
m45_59 -> m45_71  [key=2, style=dotted];
m45_60 -> m45_61  [key=0, style=solid];
m45_60 -> m45_46  [key=2, style=dotted];
m45_60 -> m45_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m45_60 -> m45_72  [key=2, style=dotted];
m45_60 -> m45_62  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m45_60 -> m45_63  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m45_61 -> m45_59  [color=blue, key=0, style=bold];
m45_61 -> m45_62  [key=0, style=solid];
m45_61 -> m45_63  [key=0, style=solid];
m45_67 -> m45_65  [color=blue, key=0, style=bold];
m45_68 -> m45_69  [key=0, style=solid];
m45_68 -> m45_404  [key=0, style=solid];
m45_69 -> m45_70  [key=0, style=solid];
m45_69 -> m45_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m45_70 -> m45_68  [color=blue, key=0, style=bold];
m45_70 -> m45_220  [key=0, style=solid];
m45_70 -> m45_199  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Split split", style=bold];
m45_71 -> m45_72  [key=0, style=solid];
m45_72 -> m45_73  [key=0, style=solid];
m45_72 -> m45_72  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m45_75 -> m45_76  [key=0, style=solid];
m45_76 -> m45_74  [color=blue, key=0, style=bold];
m45_217 -> m45_218  [key=0, style=solid];
m45_218 -> m45_219  [key=0, style=solid];
m45_218 -> m45_218  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m45_220 -> m45_221  [key=0, style=solid];
m45_220 -> m45_225  [key=2, style=dotted];
m45_220 -> m45_222  [color=darkseagreen4, key=1, label=response, style=dashed];
m45_220 -> m45_223  [color=darkseagreen4, key=1, label=response, style=dashed];
m45_215 -> m45_216  [key=0, style=solid];
m45_215 -> m45_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_219 -> m45_215  [color=blue, key=0, style=bold];
m45_219 -> m45_217  [color=blue, key=0, style=bold];
m45_221 -> m45_222  [key=0, style=solid];
m45_221 -> m45_221  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m45_221 -> m45_223  [key=0, style=solid];
m45_222 -> m45_220  [color=blue, key=0, style=bold];
m45_222 -> m45_223  [key=0, style=solid];
m45_222 -> m45_226  [key=2, style=dotted];
m45_307 -> m45_308  [key=0, style=solid];
m45_309 -> m45_307  [color=blue, key=0, style=bold];
m45_308 -> m45_309  [key=0, style=solid];
m45_317 -> m45_325  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_317 -> m45_326  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_317 -> m45_333  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_317 -> m45_334  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_317 -> m45_336  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_317 -> m45_324  [key=0, style=solid];
m45_317 -> m45_328  [color=darkseagreen4, key=1, label=bool, style=dashed];
m45_317 -> m45_332  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_325 -> m45_326  [key=0, style=solid];
m45_325 -> m45_328  [key=0, style=solid];
m45_325 -> m45_275  [key=2, style=dotted];
m45_326 -> m45_327  [key=0, style=solid];
m45_326 -> m45_205  [key=2, style=dotted];
m45_326 -> m45_226  [key=2, style=dotted];
m45_329 -> m45_330  [key=0, style=solid];
m45_329 -> m45_334  [key=0, style=solid];
m45_333 -> m45_329  [key=0, style=solid];
m45_333 -> m45_38  [key=2, style=dotted];
m45_334 -> m45_335  [key=0, style=solid];
m45_334 -> m45_338  [key=2, style=dotted];
m45_334 -> m45_336  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m45_336 -> m45_337  [key=0, style=solid];
m45_336 -> m45_35  [key=2, style=dotted];
m45_324 -> m45_325  [key=0, style=solid];
m45_328 -> m45_329  [key=0, style=solid];
m45_328 -> m45_334  [key=0, style=solid];
m45_327 -> m45_337  [key=0, style=solid];
m45_332 -> m45_329  [key=0, style=solid];
m45_332 -> m45_333  [key=0, style=solid];
m45_330 -> m45_333  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m45_330 -> m45_332  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m45_330 -> m45_330  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m45_330 -> m45_331  [key=0, style=solid];
m45_331 -> m45_333  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m45_331 -> m45_332  [key=0, style=solid];
m45_331 -> m45_331  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m45_335 -> m45_336  [key=0, style=solid];
m45_335 -> m45_12  [key=2, style=dotted];
m45_335 -> m45_337  [key=0, style=solid];
m45_337 -> m45_317  [color=blue, key=0, style=bold];
m45_108 -> m45_109  [key=0, style=solid];
m45_108 -> m45_110  [key=0, style=solid];
m45_109 -> m45_110  [key=0, style=solid];
m45_109 -> m45_107  [key=2, style=dotted];
m45_109 -> m45_123  [key=0, style=solid];
m45_109 -> m45_13  [key=2, style=dotted];
m45_110 -> m45_108  [color=blue, key=0, style=bold];
m45_110 -> m45_111  [key=0, style=solid];
m45_110 -> m45_112  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m45_110 -> m45_115  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m45_392 -> m45_393  [key=0, style=solid];
m45_393 -> m45_394  [key=0, style=solid];
m45_393 -> m45_4  [key=2, style=dotted];
m45_394 -> m45_392  [color=blue, key=0, style=bold];
m45_38 -> m45_39  [key=0, style=solid];
m45_38 -> m45_42  [color=darkseagreen4, key=1, label=int, style=dashed];
m45_39 -> m45_40  [key=0, style=solid];
m45_39 -> m45_35  [key=2, style=dotted];
m45_39 -> m45_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[]", style=dashed];
m45_40 -> m45_38  [color=blue, key=0, style=bold];
m45_40 -> m45_41  [key=0, style=solid];
m45_40 -> m45_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_40 -> m45_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_40 -> m45_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_40 -> m45_40  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m45_107 -> m45_111  [key=0, style=solid];
m45_107 -> m45_112  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_107 -> m45_108  [key=0, style=solid];
m45_111 -> m45_112  [key=0, style=solid];
m45_111 -> m45_118  [color=darkseagreen4, key=1, label=totalPortfolioValue, style=dashed];
m45_112 -> m45_113  [key=0, style=solid];
m45_112 -> m45_68  [key=2, style=dotted];
m45_112 -> m45_115  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_112 -> m45_116  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_112 -> m45_114  [key=0, style=solid];
m45_113 -> m45_114  [key=0, style=solid];
m45_113 -> m45_70  [key=2, style=dotted];
m45_113 -> m45_115  [color=darkseagreen4, key=1, label=response, style=dashed];
m45_113 -> m45_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m45_115 -> m45_117  [key=0, style=solid];
m45_115 -> m45_71  [key=2, style=dotted];
m45_115 -> m45_116  [key=0, style=solid];
m45_115 -> m45_122  [key=0, style=solid];
m45_116 -> m45_117  [key=0, style=solid];
m45_116 -> m45_72  [key=2, style=dotted];
m45_116 -> m45_121  [key=0, style=solid];
m45_116 -> m45_124  [key=2, style=dotted];
m45_116 -> m45_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_116 -> m45_118  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_114 -> m45_115  [key=0, style=solid];
m45_114 -> m45_116  [key=0, style=solid];
m45_114 -> m45_13  [key=2, style=dotted];
m45_114 -> m45_120  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m45_114 -> m45_121  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m45_114 -> m45_122  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m45_117 -> m45_107  [color=blue, key=0, style=bold];
m45_117 -> m45_118  [key=0, style=solid];
m45_117 -> m45_125  [key=2, style=dotted];
m45_58 -> m45_59  [key=0, style=solid];
m45_58 -> m45_60  [key=0, style=solid];
m45_238 -> m45_239  [key=0, style=solid];
m45_238 -> m45_240  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UnsettledCashAmount", style=dashed];
m45_238 -> m45_274  [key=0, style=solid];
m45_238 -> m45_276  [key=2, style=dotted];
m45_239 -> m45_240  [key=0, style=solid];
m45_239 -> m45_241  [key=0, style=solid];
m45_240 -> m45_241  [key=0, style=solid];
m45_240 -> m45_127  [key=2, style=dotted];
m45_240 -> m45_274  [key=0, style=solid];
m45_240 -> m45_276  [key=2, style=dotted];
m45_240 -> m45_205  [key=2, style=dotted];
m45_241 -> m45_238  [color=blue, key=0, style=bold];
m45_241 -> m45_242  [key=0, style=solid];
m45_225 -> m45_253  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_251  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_227  [key=0, style=solid];
m45_225 -> m45_228  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_230  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_233  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_235  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_236  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_237  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_238  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_240  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_244  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_246  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_255  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_261  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_263  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_264  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_267  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_268  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_272  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_273  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m45_225 -> m45_226  [key=0, style=solid];
m45_252 -> m45_253  [color=green, key=0, style=solid];
m45_252 -> m45_254  [color=green, key=0, style=solid];
m45_252 -> m45_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_3  [color=red, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_85  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_90  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_91  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_98  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_99  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_104  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_107  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_110  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_116  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_118  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_132  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_136  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_140  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_141  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_145  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_155  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_175  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_182  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_184  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_185  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_210  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_225  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_227  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_234  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_239  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_240  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_243  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_244  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_246  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_247  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_252 -> m45_248  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m45_253 -> m45_274  [key=0, style=solid];
m45_253 -> m45_276  [key=2, style=dotted];
m45_253 -> m45_197  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_254 -> m45_255  [key=0, style=solid];
m45_254 -> m45_256  [key=0, style=solid];
m45_254 -> m45_216  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_254 -> m45_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_254 -> m45_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_249 -> m45_250  [key=0, style=solid];
m45_249 -> m45_253  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m45_249 -> m45_251  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m45_249 -> m45_242  [color=blue, key=0, style=bold];
m45_251 -> m45_274  [key=0, style=solid];
m45_251 -> m45_276  [key=2, style=dotted];
m45_242 -> m45_253  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m45_242 -> m45_251  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m45_242 -> m45_243  [key=0, style=solid];
m45_242 -> m45_244  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m45_242 -> m45_246  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m45_242 -> m45_245  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m45_228 -> m45_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_249  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_242  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_229  [key=0, style=solid];
m45_228 -> m45_230  [key=0, style=solid];
m45_228 -> m45_275  [key=2, style=dotted];
m45_228 -> m45_232  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_234  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_235  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_237  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_245  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_247  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_260  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_262  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_264  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_269  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_271  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_228 -> m45_223  [color=blue, key=0, style=bold];
m45_247 -> m45_254  [key=0, style=solid];
m45_247 -> m45_248  [key=0, style=solid];
m45_247 -> m45_138  [key=2, style=dotted];
m45_255 -> m45_274  [key=0, style=solid];
m45_255 -> m45_276  [key=2, style=dotted];
m45_255 -> m45_216  [color=darkseagreen4, key=1, label=newRootSymbol, style=dashed];
m45_256 -> m45_257  [key=0, style=solid];
m45_256 -> m45_259  [key=0, style=solid];
m45_256 -> m45_217  [color=darkseagreen4, key=1, label=newStrike, style=dashed];
m45_243 -> m45_278  [key=2, style=dotted];
m45_243 -> m45_244  [key=0, style=solid];
m45_243 -> m45_245  [key=0, style=solid];
m45_257 -> m45_258  [key=0, style=solid];
m45_258 -> m45_274  [key=0, style=solid];
m45_258 -> m45_276  [key=2, style=dotted];
m45_258 -> m45_216  [key=2, style=dotted];
m45_271 -> m45_272  [key=0, style=solid];
m45_271 -> m45_273  [key=0, style=solid];
m45_248 -> m45_249  [key=0, style=solid];
m45_248 -> m45_244  [key=0, style=solid];
m45_248 -> m45_138  [key=2, style=dotted];
m45_227 -> m45_228  [key=0, style=solid];
m45_227 -> m45_231  [key=2, style=dotted];
m45_229 -> m45_274  [key=0, style=solid];
m45_229 -> m45_276  [key=2, style=dotted];
m45_229 -> m45_205  [key=2, style=dotted];
m45_230 -> m45_231  [key=0, style=solid];
m45_230 -> m45_232  [key=0, style=solid];
m45_230 -> m45_12  [key=2, style=dotted];
m45_244 -> m45_274  [key=0, style=solid];
m45_244 -> m45_276  [key=2, style=dotted];
m45_244 -> m45_245  [key=0, style=solid];
m45_244 -> m45_249  [key=0, style=solid];
m45_244 -> m45_250  [key=2, style=dotted];
m45_244 -> m45_246  [color=darkseagreen4, key=1, label=item, style=dashed];
m45_244 -> m45_247  [color=darkseagreen4, key=1, label=item, style=dashed];
m45_244 -> m45_248  [color=darkseagreen4, key=1, label=item, style=dashed];
m45_246 -> m45_274  [key=0, style=solid];
m45_246 -> m45_276  [key=2, style=dotted];
m45_246 -> m45_247  [key=0, style=solid];
m45_246 -> m45_251  [key=2, style=dotted];
m45_259 -> m45_260  [key=0, style=solid];
m45_259 -> m45_268  [key=0, style=solid];
m45_261 -> m45_274  [key=0, style=solid];
m45_261 -> m45_276  [key=2, style=dotted];
m45_261 -> m45_205  [key=2, style=dotted];
m45_263 -> m45_274  [key=0, style=solid];
m45_263 -> m45_276  [key=2, style=dotted];
m45_263 -> m45_205  [key=2, style=dotted];
m45_264 -> m45_265  [key=0, style=solid];
m45_264 -> m45_266  [key=0, style=solid];
m45_265 -> m45_274  [key=0, style=solid];
m45_265 -> m45_276  [key=2, style=dotted];
m45_265 -> m45_265  [color=darkorchid, key=3, label="Local variable decimal newStrike", style=bold];
m45_265 -> m45_205  [key=2, style=dotted];
m45_266 -> m45_267  [key=0, style=solid];
m45_266 -> m45_268  [key=0, style=solid];
m45_267 -> m45_267  [color=darkorchid, key=3, label="Local variable System.Func<QuantConnect.Symbol, bool> symbolIsFound", style=bold];
m45_267 -> m45_268  [key=0, style=solid];
m45_267 -> m45_277  [key=2, style=dotted];
m45_268 -> m45_269  [key=0, style=solid];
m45_268 -> m45_273  [key=0, style=solid];
m45_272 -> m45_274  [key=0, style=solid];
m45_272 -> m45_276  [key=2, style=dotted];
m45_273 -> m45_274  [key=0, style=solid];
m45_273 -> m45_281  [key=2, style=dotted];
m45_245 -> m45_247  [key=0, style=solid];
m45_245 -> m45_246  [key=0, style=solid];
m45_245 -> m45_244  [key=0, style=solid];
m45_260 -> m45_261  [key=0, style=solid];
m45_260 -> m45_262  [key=0, style=solid];
m45_262 -> m45_263  [key=0, style=solid];
m45_262 -> m45_264  [key=0, style=solid];
m45_269 -> m45_270  [key=0, style=solid];
m45_269 -> m45_279  [key=2, style=dotted];
m45_270 -> m45_271  [key=0, style=solid];
m45_270 -> m45_280  [key=2, style=dotted];
m45_274 -> m45_225  [color=blue, key=0, style=bold];
m45_395 -> m45_396  [key=0, style=solid];
m45_397 -> m45_398  [key=0, style=solid];
m45_397 -> m45_402  [key=2, style=dotted];
m45_396 -> m45_397  [key=0, style=solid];
m45_396 -> m45_400  [key=2, style=dotted];
m45_396 -> m45_401  [key=2, style=dotted];
m45_396 -> m45_398  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m45_398 -> m45_399  [key=0, style=solid];
m45_398 -> m45_403  [key=2, style=dotted];
m45_399 -> m45_395  [color=blue, key=0, style=bold];
m45_143 -> m45_145  [key=0, style=solid];
m45_143 -> m45_151  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_152  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_154  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_160  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_163  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_164  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_165  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_168  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_169  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_143 -> m45_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Split split", style=bold];
m45_143 -> m45_71  [key=2, style=dotted];
m45_145 -> m45_146  [key=0, style=solid];
m45_145 -> m45_148  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_145 -> m45_151  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_145 -> m45_152  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_145 -> m45_156  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_145 -> m45_157  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_145 -> m45_170  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_145 -> m45_135  [color=blue, key=0, style=bold];
m45_151 -> m45_152  [key=0, style=solid];
m45_151 -> m45_153  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m45_151 -> m45_156  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m45_151 -> m45_70  [key=2, style=dotted];
m45_152 -> m45_153  [key=0, style=solid];
m45_152 -> m45_156  [color=darkseagreen4, key=1, label=avgPrice, style=dashed];
m45_152 -> m45_154  [key=0, style=solid];
m45_154 -> m45_155  [key=0, style=solid];
m45_154 -> m45_72  [key=2, style=dotted];
m45_154 -> m45_156  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m45_154 -> m45_157  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m45_160 -> m45_161  [key=0, style=solid];
m45_160 -> m45_3  [key=2, style=dotted];
m45_160 -> m45_162  [key=2, style=dotted];
m45_146 -> m45_147  [key=0, style=solid];
m45_146 -> m45_148  [key=0, style=solid];
m45_146 -> m45_155  [color=darkseagreen4, key=1, label=bool, style=dashed];
m45_148 -> m45_149  [key=0, style=solid];
m45_148 -> m45_68  [key=2, style=dotted];
m45_148 -> m45_150  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_148 -> m45_151  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_148 -> m45_153  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_148 -> m45_154  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_156 -> m45_157  [key=0, style=solid];
m45_156 -> m45_172  [key=2, style=dotted];
m45_156 -> m45_73  [key=2, style=dotted];
m45_157 -> m45_158  [key=0, style=solid];
m45_157 -> m45_173  [key=2, style=dotted];
m45_157 -> m45_160  [color=darkseagreen4, key=1, label=next, style=dashed];
m45_157 -> m45_161  [color=darkseagreen4, key=1, label=next, style=dashed];
m45_157 -> m45_166  [color=darkseagreen4, key=1, label=next, style=dashed];
m45_157 -> m45_170  [color=darkseagreen4, key=1, label=next, style=dashed];
m45_147 -> m45_171  [key=0, style=solid];
m45_147 -> m45_148  [key=0, style=solid];
m45_149 -> m45_150  [key=0, style=solid];
m45_149 -> m45_151  [key=0, style=solid];
m45_150 -> m45_171  [key=0, style=solid];
m45_150 -> m45_158  [key=0, style=solid];
m45_150 -> m45_69  [key=2, style=dotted];
m45_153 -> m45_154  [key=0, style=solid];
m45_153 -> m45_158  [key=0, style=solid];
m45_153 -> m45_71  [key=2, style=dotted];
m45_155 -> m45_156  [key=0, style=solid];
m45_155 -> m45_138  [key=2, style=dotted];
m45_155 -> m45_157  [key=0, style=solid];
m45_158 -> m45_159  [key=0, style=solid];
m45_158 -> m45_160  [key=0, style=solid];
m45_158 -> m45_146  [color=blue, key=0, style=bold];
m45_161 -> m45_162  [key=0, style=solid];
m45_161 -> m45_163  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m45_161 -> m45_164  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m45_161 -> m45_165  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m45_161 -> m45_159  [color=blue, key=0, style=bold];
m45_159 -> m45_171  [key=0, style=solid];
m45_159 -> m45_160  [key=0, style=solid];
m45_139 -> m45_140  [key=0, style=solid];
m45_139 -> m45_141  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_140 -> m45_141  [key=0, style=solid];
m45_140 -> m45_143  [key=2, style=dotted];
m45_140 -> m45_68  [key=2, style=dotted];
m45_140 -> m45_144  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_141 -> m45_142  [key=0, style=solid];
m45_141 -> m45_144  [key=2, style=dotted];
m45_141 -> m45_70  [key=2, style=dotted];
m45_141 -> m45_143  [color=darkseagreen4, key=1, label=response, style=dashed];
m45_142 -> m45_139  [color=blue, key=0, style=bold];
m45_142 -> m45_143  [key=0, style=solid];
m45_142 -> m45_144  [key=0, style=solid];
m45_16 -> m45_17  [key=0, style=solid];
m45_16 -> m45_18  [key=2, style=dotted];
m45_35 -> m45_36  [key=0, style=solid];
m45_35 -> m45_47  [key=0, style=solid];
m45_35 -> m45_49  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_35 -> m45_54  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_35 -> m45_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m45_36 -> m45_37  [key=0, style=solid];
m45_36 -> m45_34  [key=2, style=dotted];
m45_36 -> m45_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>", style=dashed];
m45_36 -> m45_35  [key=2, style=dotted];
m45_37 -> m45_35  [color=blue, key=0, style=bold];
m45_37 -> m45_4  [color=blue, key=0, style=bold];
m45_31 -> m45_29  [color=blue, key=0, style=bold];
m45_31 -> m45_32  [key=0, style=solid];
m45_32 -> m45_33  [key=0, style=solid];
m45_32 -> m45_34  [key=2, style=dotted];
m45_33 -> m45_34  [key=0, style=solid];
m45_33 -> m45_35  [key=2, style=dotted];
m45_33 -> m45_31  [color=blue, key=0, style=bold];
m45_34 -> m45_32  [color=blue, key=0, style=bold];
m45_97 -> m45_98  [key=0, style=solid];
m45_97 -> m45_99  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m45_98 -> m45_99  [key=0, style=solid];
m45_98 -> m45_68  [key=2, style=dotted];
m45_98 -> m45_101  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_98 -> m45_102  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_99 -> m45_100  [key=0, style=solid];
m45_99 -> m45_101  [key=2, style=dotted];
m45_99 -> m45_70  [key=2, style=dotted];
m45_100 -> m45_97  [color=blue, key=0, style=bold];
m45_100 -> m45_101  [key=0, style=solid];
m45_100 -> m45_102  [key=0, style=solid];
m45_386 -> m45_387  [key=0, style=solid];
m45_387 -> m45_388  [key=0, style=solid];
m45_387 -> m45_38  [key=2, style=dotted];
m45_388 -> m45_386  [color=blue, key=0, style=bold];
m45_223 -> m45_224  [key=0, style=solid];
m45_223 -> m45_227  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_224 -> m45_70  [color=blue, key=0, style=bold];
m45_224 -> m45_225  [key=0, style=solid];
m45_224 -> m45_226  [color=darkseagreen4, key=1, label=clone, style=dashed];
m45_224 -> m45_227  [color=darkseagreen4, key=1, label=clone, style=dashed];
m45_224 -> m45_223  [color=darkorchid, key=3, label="Local variable System.DateTime clone", style=bold];
m45_57 -> m45_58  [key=0, style=solid];
m45_57 -> m45_70  [key=2, style=dotted];
m45_57 -> m45_59  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m45_47 -> m45_48  [key=0, style=solid];
m45_47 -> m45_49  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_47 -> m45_50  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_47 -> m45_54  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_48 -> m45_49  [key=0, style=solid];
m45_48 -> m45_54  [key=0, style=solid];
m45_49 -> m45_50  [key=0, style=solid];
m45_49 -> m45_53  [key=2, style=dotted];
m45_49 -> m45_51  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m45_49 -> m45_65  [key=2, style=dotted];
m45_49 -> m45_52  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m45_50 -> m45_51  [key=0, style=solid];
m45_50 -> m45_52  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.SecurityHolding", style=dashed];
m45_50 -> m45_66  [key=2, style=dotted];
m45_50 -> m45_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_51 -> m45_52  [key=0, style=solid];
m45_51 -> m45_53  [key=0, style=solid];
m45_52 -> m45_47  [color=blue, key=0, style=bold];
m45_52 -> m45_53  [key=0, style=solid];
m45_52 -> m45_67  [key=2, style=dotted];
m45_20 -> m45_21  [key=0, style=solid];
m45_20 -> m45_18  [key=2, style=dotted];
m45_21 -> m45_22  [key=0, style=solid];
m45_21 -> m45_8  [key=2, style=dotted];
m45_21 -> m45_4  [key=2, style=dotted];
m45_21 -> m45_19  [color=blue, key=0, style=bold];
m45_22 -> m45_20  [color=blue, key=0, style=bold];
m45_22 -> m45_23  [key=0, style=solid];
m45_144 -> m45_175  [key=0, style=solid];
m45_144 -> m45_197  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_144 -> m45_181  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m45_144 -> m45_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Split split", style=bold];
m45_144 -> m45_145  [key=0, style=solid];
m45_144 -> m45_72  [key=2, style=dotted];
m45_138 -> m45_136  [color=blue, key=0, style=bold];
m45_226 -> m45_225  [key=0, style=solid];
m45_226 -> m45_230  [key=2, style=dotted];
m45_226 -> m45_226  [color=darkseagreen4, key=1, label=clone, style=dashed];
m45_226 -> m45_227  [color=darkseagreen4, key=1, label=clone, style=dashed];
m45_118 -> m45_119  [key=0, style=solid];
m45_118 -> m45_126  [key=2, style=dotted];
m45_118 -> m45_120  [color=darkseagreen4, key=1, label=marginCallOrder, style=dashed];
m45_119 -> m45_120  [key=0, style=solid];
m45_119 -> m45_121  [key=2, style=dotted];
m45_119 -> m45_116  [key=0, style=solid];
m45_120 -> m45_118  [color=blue, key=0, style=bold];
m45_120 -> m45_116  [key=0, style=solid];
m45_120 -> m45_127  [key=2, style=dotted];
m45_15 -> m45_16  [key=0, style=solid];
m45_15 -> m45_13  [color=blue, key=0, style=bold];
m45_80 -> m45_81  [key=0, style=solid];
m45_80 -> m45_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_80 -> m45_83  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_80 -> m45_84  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_80 -> m45_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_81 -> m45_82  [key=0, style=solid];
m45_81 -> m45_65  [key=2, style=dotted];
m45_82 -> m45_83  [key=0, style=solid];
m45_82 -> m45_85  [key=0, style=solid];
m45_82 -> m45_87  [key=2, style=dotted];
m45_82 -> m45_84  [color=darkseagreen4, key=1, label=item, style=dashed];
m45_82 -> m45_80  [color=blue, key=0, style=bold];
m45_102 -> m45_103  [key=0, style=solid];
m45_102 -> m45_114  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest> ScanForMarginCall", style=bold];
m45_102 -> m45_72  [key=2, style=dotted];
m45_103 -> m45_104  [key=0, style=solid];
m45_103 -> m45_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m45_103 -> m45_93  [color=blue, key=0, style=bold];
m45_104 -> m45_105  [key=0, style=solid];
m45_104 -> m45_107  [color=darkseagreen4, key=1, label=totalMarginUsed, style=dashed];
m45_104 -> m45_118  [color=darkseagreen4, key=1, label=totalMarginUsed, style=dashed];
m45_105 -> m45_106  [key=0, style=solid];
m45_105 -> m45_107  [key=0, style=solid];
m45_106 -> m45_123  [key=0, style=solid];
m45_106 -> m45_13  [key=2, style=dotted];
m45_106 -> m45_104  [color=blue, key=0, style=bold];
m45_44 -> m45_45  [key=0, style=solid];
m45_44 -> m45_41  [key=0, style=solid];
m45_44 -> m45_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_45 -> m45_46  [key=0, style=solid];
m45_45 -> m45_35  [key=2, style=dotted];
m45_45 -> m45_38  [color=blue, key=0, style=bold];
m45_46 -> m45_44  [color=blue, key=0, style=bold];
m45_389 -> m45_390  [key=0, style=solid];
m45_390 -> m45_391  [key=0, style=solid];
m45_390 -> m45_4  [key=2, style=dotted];
m45_391 -> m45_389  [color=blue, key=0, style=bold];
m45_54 -> m45_55  [key=0, style=solid];
m45_54 -> m45_68  [key=2, style=dotted];
m45_54 -> m45_56  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_54 -> m45_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_54 -> m45_59  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_54 -> m45_60  [color=darkseagreen4, key=1, label=request, style=dashed];
m45_55 -> m45_56  [key=0, style=solid];
m45_55 -> m45_57  [key=2, style=dotted];
m45_55 -> m45_58  [key=2, style=dotted];
m45_55 -> m45_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_56 -> m45_54  [color=blue, key=0, style=bold];
m45_56 -> m45_64  [key=0, style=solid];
m45_56 -> m45_69  [key=2, style=dotted];
m45_404 -> m45_405  [key=0, style=solid];
m45_404 -> m45_406  [key=2, style=dotted];
m45_405 -> m45_68  [color=blue, key=0, style=bold];
m45_23 -> m45_24  [key=0, style=solid];
m45_23 -> m45_18  [key=2, style=dotted];
m45_24 -> m45_22  [color=blue, key=0, style=bold];
m45_24 -> m45_25  [key=0, style=solid];
m45_24 -> m45_16  [key=2, style=dotted];
m45_24 -> m45_4  [key=2, style=dotted];
m45_93 -> m45_97  [key=0, style=solid];
m45_93 -> m45_98  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_310 -> m45_311  [key=0, style=solid];
m45_310 -> m45_312  [color=darkseagreen4, key=1, label=int, style=dashed];
m45_311 -> m45_312  [key=0, style=solid];
m45_311 -> m45_313  [key=0, style=solid];
m45_312 -> m45_313  [key=0, style=solid];
m45_313 -> m45_310  [color=blue, key=0, style=bold];
m45_41 -> m45_42  [key=0, style=solid];
m45_41 -> m45_45  [key=0, style=solid];
m45_41 -> m45_43  [color=darkseagreen4, key=1, label=asset, style=dashed];
m45_42 -> m45_43  [key=0, style=solid];
m45_42 -> m45_35  [key=2, style=dotted];
m45_42 -> m45_44  [key=0, style=solid];
m45_43 -> m45_41  [color=blue, key=0, style=bold];
m45_43 -> m45_44  [key=0, style=solid];
m45_43 -> m45_46  [key=2, style=dotted];
m45_43 -> m45_43  [color=darkseagreen4, key=1, label=asset, style=dashed];
m45_339 -> m45_340  [key=0, style=solid];
m45_340 -> m45_341  [key=0, style=solid];
m45_340 -> m45_338  [key=2, style=dotted];
m45_341 -> m45_339  [color=blue, key=0, style=bold];
m45_53 -> m45_64  [key=0, style=solid];
m45_14 -> m45_15  [key=0, style=solid];
m45_14 -> m45_16  [key=2, style=dotted];
m45_14 -> m45_4  [key=2, style=dotted];
m45_25 -> m45_23  [color=blue, key=0, style=bold];
m45_25 -> m45_26  [key=0, style=solid];
m45_282 -> m45_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_282 -> m45_284  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_282 -> m45_283  [key=0, style=solid];
m45_287 -> m45_288  [color=green, key=0, style=solid];
m45_287 -> m45_304  [color=green, key=2, style=dotted];
m45_287 -> m45_289  [color=green, key=1, label=orders, style=dashed];
m45_287 -> m45_291  [color=green, key=1, label=orders, style=dashed];
m45_285 -> m45_287  [color=green, key=1, label=symbol, style=dashed];
m45_285 -> m45_286  [key=0, style=solid];
m45_285 -> m45_301  [key=0, style=solid];
m45_285 -> m45_303  [key=2, style=dotted];
m45_285 -> m45_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_285 -> m45_288  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m45_285 -> m45_298  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m45_286 -> m45_287  [color=green, key=0, style=solid];
m45_286 -> m45_285  [key=0, style=solid];
m45_288 -> m45_289  [key=0, style=solid];
m45_288 -> m45_297  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m45_288 -> m45_298  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m45_289 -> m45_285  [key=0, style=solid];
m45_289 -> m45_290  [key=0, style=solid];
m45_291 -> m45_292  [key=0, style=solid];
m45_291 -> m45_297  [key=0, style=solid];
m45_291 -> m45_293  [color=darkseagreen4, key=1, label=order, style=dashed];
m45_291 -> m45_296  [color=darkseagreen4, key=1, label=order, style=dashed];
m45_293 -> m45_294  [key=0, style=solid];
m45_293 -> m45_305  [key=2, style=dotted];
m45_293 -> m45_295  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m45_296 -> m45_291  [key=0, style=solid];
m45_296 -> m45_306  [key=2, style=dotted];
m45_298 -> m45_299  [key=0, style=solid];
m45_298 -> m45_4  [key=2, style=dotted];
m45_298 -> m45_300  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m45_284 -> m45_285  [key=0, style=solid];
m45_284 -> m45_286  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_284 -> m45_284  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_300 -> m45_285  [key=0, style=solid];
m45_300 -> m45_213  [key=2, style=dotted];
m45_297 -> m45_285  [key=0, style=solid];
m45_297 -> m45_298  [key=0, style=solid];
m45_299 -> m45_285  [key=0, style=solid];
m45_299 -> m45_300  [key=0, style=solid];
m45_301 -> m45_302  [key=0, style=solid];
m45_290 -> m45_291  [key=0, style=solid];
m45_290 -> m45_298  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m45_290 -> m45_295  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m45_295 -> m45_291  [key=0, style=solid];
m45_295 -> m45_298  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m45_295 -> m45_295  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m45_294 -> m45_291  [key=0, style=solid];
m45_294 -> m45_295  [key=0, style=solid];
m45_292 -> m45_293  [key=0, style=solid];
m45_292 -> m45_296  [key=0, style=solid];
m45_283 -> m45_284  [key=0, style=solid];
m45_283 -> m45_300  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m45_283 -> m45_301  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m45_283 -> m45_201  [key=2, style=dotted];
m45_302 -> m45_282  [color=blue, key=0, style=bold];
m45_26 -> m45_27  [key=0, style=solid];
m45_26 -> m45_18  [key=2, style=dotted];
m45_27 -> m45_25  [color=blue, key=0, style=bold];
m45_27 -> m45_28  [key=0, style=solid];
m45_27 -> m45_12  [key=2, style=dotted];
m45_27 -> m45_4  [key=2, style=dotted];
m45_407 -> m45_287  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_115  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_119  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_123  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_133  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_140  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_147  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_156  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_164  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_166  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_193  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_222  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_243  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_256  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_271  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_285  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_288  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_293  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_296  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_298  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_312  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_315  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_319  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_326  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_329  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_333  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_336  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_342  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_352  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_370  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_387  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_407 -> m45_404  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_408 -> m45_218  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m45_409 -> m45_218  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m46_9 -> m46_10  [key=0, style=solid];
m46_9 -> m46_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m46_9 -> m46_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m46_9 -> m46_14  [color=darkorchid, key=3, label="method methodReturn decimal GetValueImpl", style=bold];
m46_10 -> m46_11  [key=0, style=solid];
m46_10 -> m46_12  [key=0, style=solid];
m46_11 -> m46_15  [key=0, style=solid];
m46_11 -> m46_16  [key=2, style=dotted];
m46_13 -> m46_15  [key=0, style=solid];
m46_13 -> m46_17  [key=2, style=dotted];
m46_12 -> m46_13  [key=0, style=solid];
m46_12 -> m46_14  [key=0, style=solid];
m46_14 -> m46_15  [key=0, style=solid];
m46_15 -> m46_9  [color=blue, key=0, style=bold];
m46_32 -> m46_33  [key=0, style=solid];
m46_33 -> m46_34  [key=0, style=solid];
m46_33 -> m46_0  [key=2, style=dotted];
m46_33 -> m46_35  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_34 -> m46_35  [key=0, style=solid];
m46_34 -> m46_37  [key=2, style=dotted];
m46_35 -> m46_36  [key=0, style=solid];
m46_36 -> m46_32  [color=blue, key=0, style=bold];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_0  [color=blue, key=0, style=bold];
m46_2 -> m46_3  [color=green, key=0, style=solid];
m46_2 -> m46_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_2 -> m46_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_2 -> m46_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_3 -> m46_4  [color=green, key=0, style=solid];
m46_4 -> m46_5  [key=0, style=solid];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_7  [key=0, style=solid];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_8  [key=2, style=dotted];
m46_7 -> m46_2  [color=blue, key=0, style=bold];
m46_26 -> m46_27  [key=0, style=solid];
m46_27 -> m46_28  [key=0, style=solid];
m46_27 -> m46_29  [key=2, style=dotted];
m46_27 -> m46_30  [key=2, style=dotted];
m46_27 -> m46_31  [key=2, style=dotted];
m46_28 -> m46_26  [color=blue, key=0, style=bold];
m46_18 -> m46_19  [key=0, style=solid];
m46_18 -> m46_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m46_18 -> m46_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m46_18 -> m46_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m46_18 -> m46_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m46_19 -> m46_20  [key=0, style=solid];
m46_19 -> m46_25  [key=2, style=dotted];
m46_20 -> m46_21  [key=0, style=solid];
m46_20 -> m46_22  [key=0, style=solid];
m46_21 -> m46_22  [key=0, style=solid];
m46_22 -> m46_23  [key=0, style=solid];
m46_22 -> m46_24  [key=0, style=solid];
m46_23 -> m46_24  [key=0, style=solid];
m46_24 -> m46_18  [color=blue, key=0, style=bold];
m46_38 -> m46_3  [color=green, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m46_38 -> m46_34  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m47_13 -> m47_14  [key=0, style=solid];
m47_14 -> m47_15  [key=0, style=solid];
m47_14 -> m47_12  [key=2, style=dotted];
m47_14 -> m47_8  [color=blue, key=0, style=bold];
m47_15 -> m47_13  [color=blue, key=0, style=bold];
m47_23 -> m47_24  [key=0, style=solid];
m47_24 -> m47_25  [key=0, style=solid];
m47_24 -> m47_26  [key=2, style=dotted];
m47_24 -> m47_27  [key=2, style=dotted];
m47_24 -> m47_28  [key=2, style=dotted];
m47_25 -> m47_23  [color=blue, key=0, style=bold];
m47_8 -> m47_9  [key=0, style=solid];
m47_8 -> m47_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m47_8 -> m47_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m47_8 -> m47_13  [color=darkorchid, key=3, label="method methodReturn decimal GetValueImpl", style=bold];
m47_9 -> m47_10  [key=0, style=solid];
m47_9 -> m47_11  [key=0, style=solid];
m47_9 -> m47_12  [key=2, style=dotted];
m47_10 -> m47_14  [key=0, style=solid];
m47_10 -> m47_15  [key=2, style=dotted];
m47_10 -> m47_11  [key=0, style=solid];
m47_11 -> m47_12  [key=0, style=solid];
m47_11 -> m47_13  [key=0, style=solid];
m47_11 -> m47_7  [color=blue, key=0, style=bold];
m47_12 -> m47_14  [key=0, style=solid];
m47_12 -> m47_16  [key=2, style=dotted];
m47_29 -> m47_30  [key=0, style=solid];
m47_30 -> m47_31  [key=0, style=solid];
m47_30 -> m47_0  [key=2, style=dotted];
m47_30 -> m47_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m47_31 -> m47_32  [key=0, style=solid];
m47_31 -> m47_34  [key=2, style=dotted];
m47_32 -> m47_33  [key=0, style=solid];
m47_33 -> m47_29  [color=blue, key=0, style=bold];
m47_7 -> m47_8  [key=0, style=solid];
m47_7 -> m47_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_7 -> m47_7  [color=darkorchid, key=3, label="Field variable decimal StopPrice", style=bold];
m47_3 -> m47_4  [color=green, key=0, style=solid];
m47_4 -> m47_5  [key=0, style=solid];
m47_4 -> m47_6  [key=2, style=dotted];
m47_5 -> m47_3  [color=blue, key=0, style=bold];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_7  [key=2, style=dotted];
m47_16 -> m47_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.HoldingsProvider", style=dashed];
m47_16 -> m47_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.HoldingsProvider", style=dashed];
m47_16 -> m47_9  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.HoldingsProvider", style=dashed];
m47_16 -> m47_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.HoldingsProvider", style=dashed];
m47_2 -> m47_3  [color=green, key=0, style=solid];
m47_2 -> m47_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_2 -> m47_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_2 -> m47_0  [color=blue, key=0, style=bold];
m47_6 -> m47_2  [color=blue, key=0, style=bold];
m47_17 -> m47_18  [key=0, style=solid];
m47_17 -> m47_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m47_17 -> m47_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m47_18 -> m47_19  [key=0, style=solid];
m47_18 -> m47_22  [key=2, style=dotted];
m47_20 -> m47_21  [key=0, style=solid];
m47_19 -> m47_20  [key=0, style=solid];
m47_19 -> m47_21  [key=0, style=solid];
m47_21 -> m47_17  [color=blue, key=0, style=bold];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_0  [color=blue, key=0, style=bold];
m47_1 -> m47_2  [key=0, style=solid];
m47_35 -> m47_3  [color=green, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m47_35 -> m47_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m49_67 -> m49_68  [key=0, style=solid];
m49_68 -> m49_69  [key=0, style=solid];
m49_68 -> m49_4  [key=2, style=dotted];
m49_68 -> m49_3  [key=2, style=dotted];
m49_68 -> m49_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_68 -> m49_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_69 -> m49_67  [color=blue, key=0, style=bold];
m49_69 -> m49_70  [key=0, style=solid];
m49_43 -> m49_48  [key=0, style=solid];
m49_43 -> m49_59  [color=darkseagreen4, key=1, label=T, style=dashed];
m49_43 -> m49_51  [color=darkseagreen4, key=1, label=selector, style=dashed];
m49_38 -> m49_39  [color=red, key=0, style=solid];
m49_3 -> m49_4  [key=0, style=solid];
m49_3 -> m49_6  [key=2, style=dotted];
m49_11 -> m49_12  [key=0, style=solid];
m49_11 -> m49_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m49_12 -> m49_13  [key=0, style=solid];
m49_12 -> m49_3  [key=2, style=dotted];
m49_12 -> m49_4  [key=2, style=dotted];
m49_12 -> m49_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_12 -> m49_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_12 -> m49_15  [key=2, style=dotted];
m49_13 -> m49_11  [color=blue, key=0, style=bold];
m49_13 -> m49_14  [key=0, style=solid];
m49_13 -> m49_16  [key=2, style=dotted];
m49_63 -> m49_64  [key=0, style=solid];
m49_100 -> m49_101  [key=0, style=solid];
m49_101 -> m49_102  [key=0, style=solid];
m49_101 -> m49_4  [key=2, style=dotted];
m49_101 -> m49_103  [key=2, style=dotted];
m49_101 -> m49_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_102 -> m49_100  [color=blue, key=0, style=bold];
m49_8 -> m49_10  [color=green, key=1, label="QuantConnect.Resolution", style=dashed];
m49_8 -> m49_9  [key=0, style=solid];
m49_8 -> m49_12  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_8 -> m49_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_8 -> m49_16  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.SubscriptionDataConfig Add", style=bold];
m49_10 -> m49_11  [color=green, key=0, style=solid];
m49_10 -> m49_12  [color=green, key=0, style=solid];
m49_10 -> m49_8  [color=blue, key=0, style=bold];
m49_9 -> m49_10  [color=green, key=0, style=solid];
m49_9 -> m49_12  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m49_9 -> m49_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m49_14 -> m49_8  [color=blue, key=0, style=bold];
m49_14 -> m49_15  [key=0, style=solid];
m49_77 -> m49_78  [key=0, style=solid];
m49_77 -> m49_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_77 -> m49_88  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_90 -> m49_91  [key=0, style=solid];
m49_90 -> m49_95  [color=crimson, key=0, style=bold];
m49_90 -> m49_96  [color=crimson, key=0, style=bold];
m49_90 -> m49_93  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_15 -> m49_16  [key=0, style=solid];
m49_37 -> m49_38  [color=red, key=0, style=solid];
m49_87 -> m49_88  [key=0, style=solid];
m49_5 -> m49_6  [key=0, style=solid];
m49_5 -> m49_0  [color=blue, key=0, style=bold];
m49_6 -> m49_7  [key=0, style=solid];
m49_7 -> m49_5  [color=blue, key=0, style=bold];
m49_7 -> m49_74  [color=green, key=0, style=solid];
m49_17 -> m49_18  [key=0, style=solid];
m49_17 -> m49_19  [key=0, style=solid];
m49_16 -> m49_14  [color=blue, key=0, style=bold];
m49_16 -> m49_8  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m49_16 -> m49_9  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m49_16 -> m49_12  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m49_16 -> m49_17  [key=0, style=solid];
m49_16 -> m49_19  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m49_16 -> m49_21  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m49_16 -> m49_29  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m49_16 -> m49_30  [color=darkseagreen4, key=1, label=bool, style=dashed];
m49_18 -> m49_19  [key=0, style=solid];
m49_18 -> m49_32  [key=0, style=solid];
m49_18 -> m49_33  [key=2, style=dotted];
m49_19 -> m49_17  [color=blue, key=0, style=bold];
m49_19 -> m49_20  [key=0, style=solid];
m49_19 -> m49_21  [key=0, style=solid];
m49_25 -> m49_26  [key=0, style=solid];
m49_25 -> m49_27  [key=2, style=dotted];
m49_25 -> m49_37  [key=2, style=dotted];
m49_29 -> m49_30  [key=0, style=solid];
m49_29 -> m49_43  [key=2, style=dotted];
m49_24 -> m49_25  [key=0, style=solid];
m49_24 -> m49_32  [key=0, style=solid];
m49_28 -> m49_29  [key=0, style=solid];
m49_28 -> m49_32  [key=0, style=solid];
m49_28 -> m49_41  [key=2, style=dotted];
m49_28 -> m49_42  [key=2, style=dotted];
m49_26 -> m49_24  [color=blue, key=0, style=bold];
m49_26 -> m49_38  [key=2, style=dotted];
m49_26 -> m49_27  [key=0, style=solid];
m49_26 -> m49_39  [key=2, style=dotted];
m49_26 -> m49_40  [key=2, style=dotted];
m49_26 -> m49_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_26 -> m49_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_30 -> m49_28  [color=blue, key=0, style=bold];
m49_30 -> m49_31  [key=0, style=solid];
m49_35 -> m49_36  [color=red, key=0, style=solid];
m49_35 -> m49_27  [color=red, key=2, style=dotted];
m49_34 -> m49_35  [color=red, key=0, style=solid];
m49_36 -> m49_34  [color=blue, key=0, style=bold];
m49_39 -> m49_37  [color=blue, key=0, style=bold];
m49_60 -> m49_61  [key=0, style=solid];
m49_60 -> m49_62  [key=2, style=dotted];
m49_60 -> m49_51  [color=blue, key=0, style=bold];
m49_64 -> m49_65  [key=0, style=solid];
m49_64 -> m49_66  [key=2, style=dotted];
m49_64 -> m49_57  [key=2, style=dotted];
m49_59 -> m49_60  [color=green, key=0, style=solid];
m49_59 -> m49_62  [color=green, key=2, style=dotted];
m49_59 -> m49_65  [color=green, key=2, style=dotted];
m49_59 -> m49_66  [color=green, key=2, style=dotted];
m49_59 -> m49_67  [color=green, key=2, style=dotted];
m49_59 -> m49_71  [color=green, key=1, label="lambda expression", style=dashed];
m49_58 -> m49_59  [key=0, style=solid];
m49_58 -> m49_60  [key=0, style=solid];
m49_61 -> m49_58  [color=blue, key=0, style=bold];
m49_65 -> m49_63  [color=blue, key=0, style=bold];
m49_70 -> m49_71  [key=0, style=solid];
m49_70 -> m49_68  [color=blue, key=0, style=bold];
m49_74 -> m49_75  [color=green, key=0, style=solid];
m49_74 -> m49_76  [color=green, key=2, style=dotted];
m49_74 -> m49_77  [color=green, key=2, style=dotted];
m49_71 -> m49_72  [key=0, style=solid];
m49_71 -> m49_73  [key=2, style=dotted];
m49_72 -> m49_70  [color=blue, key=0, style=bold];
m49_72 -> m49_73  [key=0, style=solid];
m49_75 -> m49_76  [key=0, style=solid];
m49_75 -> m49_7  [color=blue, key=0, style=bold];
m49_76 -> m49_74  [color=blue, key=0, style=bold];
m49_84 -> m49_85  [key=0, style=solid];
m49_84 -> m49_86  [key=2, style=dotted];
m49_84 -> m49_65  [key=2, style=dotted];
m49_84 -> m49_61  [key=2, style=dotted];
m49_84 -> m49_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_88 -> m49_89  [key=0, style=solid];
m49_88 -> m49_86  [key=2, style=dotted];
m49_88 -> m49_90  [key=2, style=dotted];
m49_80 -> m49_81  [key=0, style=solid];
m49_80 -> m49_78  [color=blue, key=0, style=bold];
m49_83 -> m49_84  [key=0, style=solid];
m49_83 -> m49_77  [key=2, style=dotted];
m49_83 -> m49_85  [key=0, style=solid];
m49_83 -> m49_86  [key=2, style=dotted];
m49_81 -> m49_82  [key=0, style=solid];
m49_81 -> m49_73  [key=2, style=dotted];
m49_81 -> m49_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m49_81 -> m49_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m49_82 -> m49_80  [color=blue, key=0, style=bold];
m49_82 -> m49_84  [key=0, style=solid];
m49_82 -> m49_83  [key=0, style=solid];
m49_85 -> m49_83  [color=blue, key=0, style=bold];
m49_85 -> m49_81  [color=blue, key=0, style=bold];
m49_89 -> m49_87  [color=blue, key=0, style=bold];
m49_104 -> m49_105  [key=0, style=solid];
m49_105 -> m49_106  [key=0, style=solid];
m49_106 -> m49_104  [color=blue, key=0, style=bold];
m49_73 -> m49_71  [color=blue, key=0, style=bold];
m49_0 -> m49_1  [key=0, style=solid];
m49_0 -> m49_2  [color=darkseagreen4, key=1, label="QuantConnect.TimeKeeper", style=dashed];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> m49_3  [key=2, style=dotted];
m49_1 -> m49_4  [key=2, style=dotted];
m49_1 -> m49_5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_1 -> m49_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_2 -> m49_0  [color=blue, key=0, style=bold];
m49_2 -> m49_3  [key=0, style=solid];
m49_31 -> m49_32  [color=red, key=0, style=solid];
m49_31 -> m49_35  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m49_31 -> m49_38  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m49_32 -> m49_33  [color=red, key=0, style=solid];
m49_32 -> m49_3  [color=red, key=2, style=dotted];
m49_32 -> m49_4  [color=red, key=2, style=dotted];
m49_32 -> m49_34  [color=red, key=1, label="lambda expression", style=dashed];
m49_32 -> m49_37  [color=red, key=1, label="lambda expression", style=dashed];
m49_32 -> m49_16  [color=blue, key=0, style=bold];
m49_33 -> m49_31  [color=blue, key=0, style=bold];
m49_21 -> m49_22  [key=0, style=solid];
m49_21 -> m49_34  [key=2, style=dotted];
m49_21 -> m49_23  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m49_21 -> m49_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_21 -> m49_25  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m49_21 -> m49_31  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m49_21 -> m49_3  [key=2, style=dotted];
m49_21 -> m49_4  [key=2, style=dotted];
m49_21 -> m49_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_22 -> m49_23  [key=0, style=solid];
m49_22 -> m49_25  [key=0, style=solid];
m49_22 -> m49_35  [key=2, style=dotted];
m49_22 -> m49_20  [color=blue, key=0, style=bold];
m49_27 -> m49_29  [key=0, style=solid];
m49_27 -> m49_28  [key=0, style=solid];
m49_20 -> m49_32  [key=0, style=solid];
m49_20 -> m49_33  [key=2, style=dotted];
m49_20 -> m49_21  [key=0, style=solid];
m49_20 -> m49_25  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_20 -> m49_29  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_23 -> m49_24  [key=0, style=solid];
m49_23 -> m49_36  [key=2, style=dotted];
m49_41 -> m49_42  [key=0, style=solid];
m49_41 -> m49_43  [color=darkorchid, key=3, label="Local variable System.Func<T, decimal> selector", style=bold];
m49_41 -> m49_46  [color=darkorchid, key=3, label="Local variable System.Func<T, decimal> selector", style=bold];
m49_78 -> m49_79  [key=0, style=solid];
m49_78 -> m49_4  [key=2, style=dotted];
m49_78 -> m49_3  [key=2, style=dotted];
m49_78 -> m49_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_78 -> m49_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_78 -> m49_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_79 -> m49_80  [key=0, style=solid];
m49_79 -> m49_77  [color=blue, key=0, style=bold];
m49_53 -> m49_55  [key=0, style=solid];
m49_53 -> m49_54  [key=0, style=solid];
m49_40 -> m49_41  [key=0, style=solid];
m49_40 -> m49_51  [color=crimson, key=0, style=bold];
m49_40 -> m49_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_40 -> m49_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_40 -> m49_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_40 -> m49_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_40 -> m49_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>", style=dashed];
m49_40 -> m49_50  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_51 -> m49_48  [key=0, style=solid];
m49_51 -> m49_57  [key=2, style=dotted];
m49_51 -> m49_59  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m49_51 -> m49_52  [key=0, style=solid];
m49_51 -> m49_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_51 -> m49_54  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_51 -> m49_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m49_45 -> m49_46  [key=0, style=solid];
m49_45 -> m49_54  [key=2, style=dotted];
m49_45 -> m49_55  [key=2, style=dotted];
m49_45 -> m49_64  [color=darkseagreen4, key=1, label=dataSelector, style=dashed];
m49_47 -> m49_48  [key=0, style=solid];
m49_47 -> m49_54  [key=2, style=dotted];
m49_47 -> m49_55  [key=2, style=dotted];
m49_47 -> m49_51  [color=darkseagreen4, key=1, label=selector, style=dashed];
m49_48 -> m49_49  [key=0, style=solid];
m49_48 -> m49_52  [key=0, style=solid];
m49_48 -> m49_50  [color=darkseagreen4, key=1, label=dataDictionary, style=dashed];
m49_50 -> m49_51  [key=0, style=solid];
m49_50 -> m49_48  [key=0, style=solid];
m49_50 -> m49_56  [key=2, style=dotted];
m49_42 -> m49_43  [key=0, style=solid];
m49_42 -> m49_44  [key=0, style=solid];
m49_42 -> m49_53  [key=2, style=dotted];
m49_44 -> m49_45  [key=0, style=solid];
m49_44 -> m49_47  [key=0, style=solid];
m49_46 -> m49_48  [key=0, style=solid];
m49_46 -> m49_64  [color=darkseagreen4, key=1, label=T, style=dashed];
m49_46 -> m49_51  [color=darkseagreen4, key=1, label=selector, style=dashed];
m49_49 -> m49_50  [key=0, style=solid];
m49_52 -> m49_40  [color=blue, key=0, style=bold];
m49_52 -> m49_59  [color=green, key=1, label=subscriptions, style=dashed];
m49_52 -> m49_53  [key=0, style=solid];
m49_52 -> m49_38  [key=2, style=dotted];
m49_52 -> m49_61  [key=2, style=dotted];
m49_52 -> m49_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_52 -> m49_55  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m49_4 -> m49_7  [key=2, style=dotted];
m49_4 -> m49_5  [key=0, style=solid];
m49_91 -> m49_92  [key=0, style=solid];
m49_91 -> m49_97  [key=0, style=solid];
m49_91 -> m49_93  [color=darkseagreen4, key=1, label=slice, style=dashed];
m49_91 -> m49_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_91 -> m49_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m49_95 -> m49_91  [key=0, style=solid];
m49_95 -> m49_99  [key=2, style=dotted];
m49_95 -> m49_57  [key=2, style=dotted];
m49_96 -> m49_91  [key=0, style=solid];
m49_96 -> m49_57  [key=2, style=dotted];
m49_93 -> m49_94  [key=0, style=solid];
m49_93 -> m49_91  [key=0, style=solid];
m49_93 -> m49_98  [key=2, style=dotted];
m49_93 -> m49_95  [color=darkseagreen4, key=1, label=item, style=dashed];
m49_93 -> m49_96  [color=darkseagreen4, key=1, label=item, style=dashed];
m49_93 -> m49_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m49_92 -> m49_93  [key=0, style=solid];
m49_94 -> m49_95  [key=0, style=solid];
m49_94 -> m49_96  [key=0, style=solid];
m49_97 -> m49_90  [color=blue, key=0, style=bold];
m49_55 -> m49_59  [color=green, key=0, style=solid];
m49_55 -> m49_56  [key=0, style=solid];
m49_55 -> m49_57  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m49_54 -> m49_60  [key=0, style=solid];
m49_54 -> m49_62  [key=2, style=dotted];
m49_56 -> m49_55  [key=0, style=solid];
m49_56 -> m49_57  [key=0, style=solid];
m49_56 -> m49_63  [key=2, style=dotted];
m49_57 -> m49_58  [key=0, style=solid];
m49_57 -> m49_64  [key=2, style=dotted];
m49_107 -> m49_25  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_107 -> m49_29  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_108 -> m49_35  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m49_108 -> m49_38  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m49_108 -> m49_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_109 -> m49_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_110 -> m49_64  [color=darkseagreen4, key=1, label=dataSelector, style=dashed];
m49_111 -> m49_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m49_111 -> m49_88  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_25 -> m50_27  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_25 -> m50_26  [key=0, style=solid];
m50_25 -> m50_6  [key=2, style=dotted];
m50_25 -> m50_28  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_25 -> m50_29  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_25 -> m50_30  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_25 -> m50_31  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_25 -> m50_32  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_27 -> m50_28  [color=green, key=0, style=solid];
m50_27 -> m50_7  [key=2, style=dotted];
m50_26 -> m50_27  [color=green, key=0, style=solid];
m50_26 -> m50_29  [key=2, style=dotted];
m50_26 -> m50_7  [key=2, style=dotted];
m50_28 -> m50_25  [color=blue, key=0, style=bold];
m50_28 -> m50_29  [key=0, style=solid];
m50_28 -> m50_7  [key=2, style=dotted];
m50_9 -> m50_12  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_9 -> m50_13  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m50_9 -> m50_10  [key=0, style=solid];
m50_9 -> m50_6  [key=2, style=dotted];
m50_9 -> m50_11  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_12 -> m50_13  [key=0, style=solid];
m50_12 -> m50_7  [key=2, style=dotted];
m50_13 -> m50_14  [key=0, style=solid];
m50_13 -> m50_8  [color=blue, key=0, style=bold];
m50_10 -> m50_12  [key=0, style=solid];
m50_10 -> m50_11  [key=0, style=solid];
m50_10 -> m50_7  [key=2, style=dotted];
m50_11 -> m50_14  [key=0, style=solid];
m50_11 -> m50_8  [key=2, style=dotted];
m50_11 -> m50_12  [key=0, style=solid];
m50_11 -> m50_7  [key=2, style=dotted];
m50_14 -> m50_9  [color=blue, key=0, style=bold];
m50_14 -> m50_15  [key=0, style=solid];
m50_52 -> m50_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m50_52 -> m50_53  [key=0, style=solid];
m50_52 -> m50_54  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m50_52 -> m50_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m50_52 -> m50_58  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m50_52 -> m50_60  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m50_52 -> m50_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m50_52 -> m50_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m50_52 -> m50_55  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order GenerateMarginCallOrder", style=bold];
m50_59 -> m50_60  [key=0, style=solid];
m50_59 -> m50_65  [key=2, style=dotted];
m50_58 -> m50_59  [key=0, style=solid];
m50_60 -> m50_60  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m50_60 -> m50_61  [key=0, style=solid];
m50_60 -> m50_66  [key=2, style=dotted];
m50_60 -> m50_67  [key=2, style=dotted];
m50_60 -> m50_62  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m50_60 -> m50_63  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m50_53 -> m50_53  [color=darkorchid, key=3, label="Local variable decimal marginBuffer", style=bold];
m50_53 -> m50_54  [key=0, style=solid];
m50_54 -> m50_55  [key=0, style=solid];
m50_54 -> m50_56  [key=0, style=solid];
m50_56 -> m50_58  [key=0, style=solid];
m50_56 -> m50_57  [key=0, style=solid];
m50_61 -> m50_62  [key=0, style=solid];
m50_61 -> m50_63  [key=0, style=solid];
m50_63 -> m50_64  [key=0, style=solid];
m50_63 -> m50_68  [key=2, style=dotted];
m50_55 -> m50_64  [key=0, style=solid];
m50_62 -> m50_63  [key=0, style=solid];
m50_62 -> m50_62  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m50_57 -> m50_64  [key=0, style=solid];
m50_64 -> m50_52  [color=blue, key=0, style=bold];
m50_29 -> m50_30  [key=0, style=solid];
m50_29 -> m50_7  [key=2, style=dotted];
m50_15 -> m50_16  [key=0, style=solid];
m50_15 -> m50_6  [key=2, style=dotted];
m50_15 -> m50_17  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_15 -> m50_18  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_15 -> m50_19  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_15 -> m50_20  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_15 -> m50_21  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_15 -> m50_22  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_16 -> m50_17  [key=0, style=solid];
m50_16 -> m50_7  [key=2, style=dotted];
m50_17 -> m50_15  [color=blue, key=0, style=bold];
m50_17 -> m50_18  [key=0, style=solid];
m50_17 -> m50_7  [key=2, style=dotted];
m50_34 -> m50_35  [key=0, style=solid];
m50_34 -> m50_37  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m50_35 -> m50_36  [key=0, style=solid];
m50_35 -> m50_6  [key=2, style=dotted];
m50_35 -> m50_38  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_35 -> m50_39  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_35 -> m50_40  [color=red, key=1, label=types, style=dashed];
m50_35 -> m50_41  [color=red, key=1, label=types, style=dashed];
m50_35 -> m50_42  [color=red, key=1, label=types, style=dashed];
m50_35 -> m50_43  [color=red, key=1, label=types, style=dashed];
m50_37 -> m50_38  [key=0, style=solid];
m50_37 -> m50_40  [color=red, key=0, style=solid];
m50_36 -> m50_37  [key=0, style=solid];
m50_36 -> m50_7  [key=2, style=dotted];
m50_38 -> m50_39  [key=0, style=solid];
m50_38 -> m50_7  [key=2, style=dotted];
m50_39 -> m50_42  [color=red, key=0, style=solid];
m50_39 -> m50_7  [key=2, style=dotted];
m50_40 -> m50_41  [color=red, key=0, style=solid];
m50_40 -> m50_7  [color=red, key=2, style=dotted];
m50_41 -> m50_42  [color=red, key=0, style=solid];
m50_41 -> m50_7  [color=red, key=2, style=dotted];
m50_42 -> m50_43  [color=red, key=0, style=solid];
m50_42 -> m50_7  [color=red, key=2, style=dotted];
m50_43 -> m50_44  [color=red, key=0, style=solid];
m50_43 -> m50_7  [color=red, key=2, style=dotted];
m50_44 -> m50_34  [color=blue, key=0, style=bold];
m50_8 -> m50_9  [key=0, style=solid];
m50_8 -> m50_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m50_8 -> m50_12  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m50_24 -> m50_25  [key=0, style=solid];
m50_24 -> m50_18  [color=blue, key=0, style=bold];
m50_30 -> m50_31  [key=0, style=solid];
m50_30 -> m50_7  [key=2, style=dotted];
m50_31 -> m50_32  [key=0, style=solid];
m50_31 -> m50_7  [key=2, style=dotted];
m50_32 -> m50_33  [key=0, style=solid];
m50_32 -> m50_7  [key=2, style=dotted];
m50_32 -> m50_30  [color=blue, key=0, style=bold];
m50_33 -> m50_24  [color=blue, key=0, style=bold];
m50_7 -> m50_0  [color=blue, key=0, style=bold];
m50_0 -> m50_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m50_0 -> m50_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m50_0 -> m50_1  [key=0, style=solid];
m50_0 -> m50_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m50_0 -> m50_4  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m50_5 -> m50_6  [key=0, style=solid];
m50_5 -> m50_0  [color=blue, key=0, style=bold];
m50_6 -> m50_7  [key=0, style=solid];
m50_6 -> m50_45  [key=0, style=solid];
m50_6 -> m50_47  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m50_6 -> m50_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m50_6 -> m50_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m50_6 -> m50_14  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m50_6 -> m50_24  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m50_6 -> m50_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m50_6 -> m50_34  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m50_6 -> m50_9  [color=darkorchid, key=3, label="Parameter variable bool isCanonical", style=bold];
m50_3 -> m50_5  [key=0, style=solid];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_7  [key=2, style=dotted];
m50_1 -> m50_3  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_6  [key=2, style=dotted];
m50_1 -> m50_4  [color=darkseagreen4, key=1, label=types, style=dashed];
m50_4 -> m50_7  [key=0, style=solid];
m50_4 -> m50_8  [key=2, style=dotted];
m50_4 -> m50_5  [key=0, style=solid];
m50_2 -> m50_7  [key=0, style=solid];
m50_2 -> m50_8  [key=2, style=dotted];
m50_2 -> m50_3  [key=0, style=solid];
m50_45 -> m50_46  [key=0, style=solid];
m50_45 -> m50_49  [key=2, style=dotted];
m50_47 -> m50_48  [key=0, style=solid];
m50_47 -> m50_52  [key=2, style=dotted];
m50_46 -> m50_47  [key=0, style=solid];
m50_46 -> m50_50  [key=2, style=dotted];
m50_46 -> m50_51  [key=2, style=dotted];
m50_48 -> m50_6  [color=blue, key=0, style=bold];
m50_18 -> m50_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m50_18 -> m50_19  [key=0, style=solid];
m50_18 -> m50_7  [key=2, style=dotted];
m50_22 -> m50_23  [key=0, style=solid];
m50_22 -> m50_7  [key=2, style=dotted];
m50_23 -> m50_24  [key=0, style=solid];
m50_23 -> m50_14  [color=blue, key=0, style=bold];
m50_21 -> m50_22  [key=0, style=solid];
m50_21 -> m50_23  [color=darkseagreen4, key=1, label=margin, style=dashed];
m50_21 -> m50_7  [key=2, style=dotted];
m50_19 -> m50_21  [key=0, style=solid];
m50_19 -> m50_20  [key=0, style=solid];
m50_19 -> m50_7  [key=2, style=dotted];
m50_20 -> m50_24  [key=0, style=solid];
m50_20 -> m50_8  [key=2, style=dotted];
m50_20 -> m50_21  [key=0, style=solid];
m50_20 -> m50_7  [key=2, style=dotted];
m50_69 -> m50_27  [color=green, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m50_69 -> m50_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m51_14 -> m51_15  [key=0, style=solid];
m51_15 -> m51_14  [color=blue, key=0, style=bold];
m51_15 -> m51_26  [key=2, style=dotted];
m51_15 -> m51_18  [key=0, style=solid];
m51_15 -> m51_25  [key=2, style=dotted];
m51_0 -> m51_1  [key=0, style=solid];
m51_0 -> m51_2  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_0  [color=blue, key=0, style=bold];
m51_2 -> m51_3  [key=0, style=solid];
m51_3 -> m51_0  [color=blue, key=0, style=bold];
m51_3 -> m51_2  [color=blue, key=0, style=bold];
m51_4 -> m51_5  [key=0, style=solid];
m51_5 -> m51_4  [color=blue, key=0, style=bold];
m51_5 -> m51_21  [key=2, style=dotted];
m51_5 -> m51_15  [color=darkseagreen4, key=1, label=insights, style=dashed];
m51_5 -> m51_17  [color=darkseagreen4, key=1, label=insights, style=dashed];
m51_5 -> m51_6  [key=0, style=solid];
m51_5 -> m51_19  [color=darkseagreen4, key=1, label=insights, style=dashed];
m51_63 -> m51_64  [key=0, style=solid];
m51_66 -> m51_67  [key=0, style=solid];
m51_68 -> m51_66  [color=blue, key=0, style=bold];
m51_67 -> m51_68  [key=0, style=solid];
m51_64 -> m51_65  [key=0, style=solid];
m51_65 -> m51_63  [color=blue, key=0, style=bold];
m51_58 -> m51_81  [key=0, style=solid];
m51_58 -> m51_82  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m51_81 -> m51_82  [key=0, style=solid];
m51_82 -> m51_83  [key=0, style=solid];
m51_83 -> m51_84  [key=0, style=solid];
m51_84 -> m51_58  [color=blue, key=0, style=bold];
m51_12 -> m51_13  [key=0, style=solid];
m51_12 -> m51_15  [color=darkseagreen4, key=1, label=insightPeriod, style=dashed];
m51_12 -> m51_17  [color=darkseagreen4, key=1, label=insightPeriod, style=dashed];
m51_12 -> m51_23  [key=2, style=dotted];
m51_12 -> m51_24  [key=2, style=dotted];
m51_13 -> m51_12  [color=blue, key=0, style=bold];
m51_13 -> m51_14  [key=0, style=solid];
m51_13 -> m51_16  [key=0, style=solid];
m51_10 -> m51_11  [key=0, style=solid];
m51_10 -> m51_22  [key=2, style=dotted];
m51_10 -> m51_13  [color=darkseagreen4, key=1, label=state, style=dashed];
m51_10 -> m51_18  [color=darkseagreen4, key=1, label=state, style=dashed];
m51_11 -> m51_10  [color=blue, key=0, style=bold];
m51_11 -> m51_12  [key=0, style=solid];
m51_11 -> m51_18  [key=0, style=solid];
m51_8 -> m51_9  [key=0, style=solid];
m51_8 -> m51_10  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m51_8 -> m51_8  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m51_8 -> m51_11  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m51_9 -> m51_8  [color=blue, key=0, style=bold];
m51_9 -> m51_10  [key=0, style=solid];
m51_9 -> m51_18  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m51_9 -> m51_9  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m51_9 -> m51_11  [color=darkseagreen4, key=1, label=previousState, style=dashed];
m51_6 -> m51_7  [key=0, style=solid];
m51_6 -> m51_19  [key=0, style=solid];
m51_7 -> m51_6  [color=blue, key=0, style=bold];
m51_7 -> m51_15  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m51_7 -> m51_17  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m51_7 -> m51_7  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m51_7 -> m51_8  [key=0, style=solid];
m51_17 -> m51_26  [key=2, style=dotted];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_25  [key=2, style=dotted];
m51_18 -> m51_6  [key=0, style=solid];
m51_18 -> m51_18  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m51_16 -> m51_17  [key=0, style=solid];
m51_19 -> m51_20  [key=0, style=solid];
m51_20 -> m51_4  [color=blue, key=0, style=bold];
m51_27 -> m51_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m51_27 -> m51_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m51_27 -> m51_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m51_27 -> m51_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m51_27 -> m51_28  [key=0, style=solid];
m51_27 -> m51_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m51_27 -> m51_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m51_41 -> m51_36  [color=green, key=0, style=solid];
m51_41 -> m51_26  [color=green, key=2, style=dotted];
m51_35 -> m51_41  [color=green, key=1, label=newSymbolData, style=dashed];
m51_35 -> m51_36  [key=0, style=solid];
m51_35 -> m51_21  [key=2, style=dotted];
m51_35 -> m51_42  [color=darkseagreen4, key=1, label=newSymbolData, style=dashed];
m51_39 -> m51_41  [color=green, key=1, label=symbolData, style=dashed];
m51_39 -> m51_40  [key=0, style=solid];
m51_39 -> m51_58  [key=2, style=dotted];
m51_40 -> m51_41  [color=green, key=0, style=solid];
m51_36 -> m51_39  [color=darkseagreen4, key=1, label=added, style=dashed];
m51_36 -> m51_40  [color=darkseagreen4, key=1, label=added, style=dashed];
m51_36 -> m51_37  [key=0, style=solid];
m51_36 -> m51_42  [key=0, style=solid];
m51_36 -> m51_38  [color=darkseagreen4, key=1, label=added, style=dashed];
m51_34 -> m51_35  [key=0, style=solid];
m51_34 -> m51_51  [key=0, style=solid];
m51_42 -> m51_43  [key=0, style=solid];
m51_42 -> m51_59  [key=2, style=dotted];
m51_42 -> m51_60  [key=2, style=dotted];
m51_42 -> m51_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_38 -> m51_39  [key=0, style=solid];
m51_38 -> m51_57  [key=2, style=dotted];
m51_37 -> m51_36  [key=0, style=solid];
m51_37 -> m51_38  [key=0, style=solid];
m51_37 -> m51_56  [key=2, style=dotted];
m51_28 -> m51_34  [key=0, style=solid];
m51_28 -> m51_29  [key=0, style=solid];
m51_30 -> m51_34  [key=0, style=solid];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_32  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m51_30 -> m51_33  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m51_43 -> m51_51  [key=0, style=solid];
m51_43 -> m51_44  [key=0, style=solid];
m51_43 -> m51_45  [color=darkseagreen4, key=1, label=slice, style=dashed];
m51_32 -> m51_33  [key=0, style=solid];
m51_32 -> m51_54  [key=2, style=dotted];
m51_49 -> m51_50  [key=0, style=solid];
m51_49 -> m51_44  [key=0, style=solid];
m51_49 -> m51_61  [key=2, style=dotted];
m51_29 -> m51_30  [key=0, style=solid];
m51_29 -> m51_52  [key=2, style=dotted];
m51_29 -> m51_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_29 -> m51_31  [color=darkseagreen4, key=1, label=removed, style=dashed];
m51_31 -> m51_30  [key=0, style=solid];
m51_31 -> m51_32  [key=0, style=solid];
m51_31 -> m51_53  [key=2, style=dotted];
m51_33 -> m51_30  [key=0, style=solid];
m51_33 -> m51_55  [key=2, style=dotted];
m51_44 -> m51_43  [key=0, style=solid];
m51_44 -> m51_49  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m51_44 -> m51_45  [key=0, style=solid];
m51_45 -> m51_46  [key=0, style=solid];
m51_45 -> m51_47  [color=darkseagreen4, key=1, label=value, style=dashed];
m51_48 -> m51_49  [key=0, style=solid];
m51_50 -> m51_44  [key=0, style=solid];
m51_50 -> m51_62  [key=2, style=dotted];
m51_46 -> m51_47  [key=0, style=solid];
m51_47 -> m51_48  [key=0, style=solid];
m51_47 -> m51_50  [color=darkseagreen4, key=1, label=data, style=dashed];
m51_51 -> m51_27  [color=blue, key=0, style=bold];
m51_22 -> m51_76  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m51_22 -> m51_69  [key=0, style=solid];
m51_22 -> m51_71  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m51_22 -> m51_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m51_22 -> m51_74  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m51_22 -> m51_77  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m51_22 -> m51_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m51_76 -> m51_77  [color=green, key=0, style=solid];
m51_76 -> m51_79  [color=green, key=0, style=solid];
m51_73 -> m51_76  [color=green, key=0, style=solid];
m51_73 -> m51_74  [key=0, style=solid];
m51_74 -> m51_76  [color=green, key=0, style=solid];
m51_74 -> m51_75  [key=0, style=solid];
m51_77 -> m51_78  [key=0, style=solid];
m51_77 -> m51_79  [key=0, style=solid];
m51_79 -> m51_80  [key=0, style=solid];
m51_69 -> m51_70  [key=0, style=solid];
m51_69 -> m51_71  [key=0, style=solid];
m51_71 -> m51_73  [key=0, style=solid];
m51_71 -> m51_72  [key=0, style=solid];
m51_75 -> m51_80  [key=0, style=solid];
m51_78 -> m51_80  [key=0, style=solid];
m51_70 -> m51_80  [key=0, style=solid];
m51_72 -> m51_80  [key=0, style=solid];
m51_80 -> m51_22  [color=blue, key=0, style=bold];
m51_85 -> m51_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_85 -> m51_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m51_86 -> m51_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m51_86 -> m51_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m51_86 -> m51_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m52_6 -> m52_7  [key=0, style=solid];
m52_6 -> m52_3  [color=darkorchid, key=3, label="Field variable string SaleCondition", style=bold];
m52_6 -> m52_6  [color=darkorchid, key=3, label="Field variable string SaleCondition", style=bold];
m52_0 -> m52_1  [key=0, style=solid];
m52_0 -> m52_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataCacheProvider", style=dashed];
m52_0 -> m52_5  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataCacheProvider", style=dashed];
m52_0 -> m52_7  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataCacheProvider", style=dashed];
m52_0 -> m52_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m52_0 -> m52_0  [color=darkorchid, key=3, label="Field variable decimal Quantity", style=bold];
m52_1 -> m52_2  [key=0, style=solid];
m52_1 -> m52_4  [key=0, style=solid];
m52_1 -> m52_6  [key=0, style=solid];
m52_1 -> m52_8  [key=0, style=solid];
m52_3 -> m52_9  [key=0, style=solid];
m52_3 -> m52_10  [key=2, style=dotted];
m52_3 -> m52_3  [color=darkorchid, key=3, label="Field variable string Exchange", style=bold];
m52_5 -> m52_9  [key=0, style=solid];
m52_5 -> m52_11  [key=2, style=dotted];
m52_7 -> m52_9  [key=0, style=solid];
m52_7 -> m52_12  [key=2, style=dotted];
m52_8 -> m52_9  [key=0, style=solid];
m52_8 -> m52_13  [key=2, style=dotted];
m52_2 -> m52_3  [key=0, style=solid];
m52_4 -> m52_5  [key=0, style=solid];
m52_9 -> m52_0  [color=blue, key=0, style=bold];
m53_4 -> m53_5  [key=0, style=solid];
m53_5 -> m53_6  [key=0, style=solid];
m53_5 -> m53_7  [key=2, style=dotted];
m53_5 -> m53_8  [key=2, style=dotted];
m53_6 -> m53_4  [color=blue, key=0, style=bold];
m53_9 -> m53_10  [key=0, style=solid];
m53_10 -> m53_11  [key=0, style=solid];
m53_10 -> m53_7  [key=2, style=dotted];
m53_10 -> m53_8  [key=2, style=dotted];
m53_11 -> m53_9  [color=blue, key=0, style=bold];
m53_14 -> m53_15  [key=0, style=solid];
m53_15 -> m53_14  [color=blue, key=0, style=bold];
m53_0 -> m53_1  [key=0, style=solid];
m53_0 -> m53_2  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m53_1 -> m53_2  [key=0, style=solid];
m53_2 -> m53_3  [key=0, style=solid];
m53_3 -> m53_0  [color=blue, key=0, style=bold];
m53_16 -> m53_17  [key=0, style=solid];
m53_17 -> m53_16  [color=blue, key=0, style=bold];
m53_12 -> m53_13  [key=0, style=solid];
m53_13 -> m53_12  [color=blue, key=0, style=bold];
m53_18 -> m53_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m53_18 -> m53_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m53_18 -> m53_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m53_18 -> m53_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m54_44 -> m54_34  [color=blue, key=0, style=bold];
m54_19 -> m54_38  [key=0, style=solid];
m54_19 -> m54_20  [key=0, style=solid];
m54_19 -> m54_7  [key=2, style=dotted];
m54_38 -> m54_39  [key=0, style=solid];
m54_38 -> m54_40  [key=2, style=dotted];
m54_38 -> m54_7  [key=2, style=dotted];
m54_39 -> m54_19  [color=blue, key=0, style=bold];
m54_39 -> m54_42  [key=0, style=solid];
m54_39 -> m54_7  [key=2, style=dotted];
m54_29 -> m54_30  [key=0, style=solid];
m54_29 -> m54_7  [key=2, style=dotted];
m54_30 -> m54_31  [key=0, style=solid];
m54_30 -> m54_32  [key=0, style=solid];
m54_30 -> m54_7  [key=2, style=dotted];
m54_31 -> m54_32  [key=0, style=solid];
m54_31 -> m54_33  [key=2, style=dotted];
m54_31 -> m54_7  [key=2, style=dotted];
m54_32 -> m54_29  [color=blue, key=0, style=bold];
m54_32 -> m54_33  [key=0, style=solid];
m54_32 -> m54_7  [key=2, style=dotted];
m54_33 -> m54_24  [color=blue, key=0, style=bold];
m54_25 -> m54_26  [color=red, key=0, style=solid];
m54_25 -> m54_6  [color=red, key=2, style=dotted];
m54_25 -> m54_27  [color=red, key=1, label=types, style=dashed];
m54_25 -> m54_28  [color=red, key=1, label=types, style=dashed];
m54_25 -> m54_29  [color=red, key=1, label=types, style=dashed];
m54_25 -> m54_30  [color=red, key=1, label=types, style=dashed];
m54_25 -> m54_31  [color=red, key=1, label=types, style=dashed];
m54_25 -> m54_32  [color=red, key=1, label=types, style=dashed];
m54_26 -> m54_27  [color=red, key=0, style=solid];
m54_26 -> m54_28  [key=2, style=dotted];
m54_26 -> m54_7  [color=red, key=2, style=dotted];
m54_27 -> m54_25  [color=blue, key=0, style=bold];
m54_27 -> m54_28  [key=0, style=solid];
m54_27 -> m54_7  [key=2, style=dotted];
m54_18 -> m54_19  [key=0, style=solid];
m54_18 -> m54_7  [key=2, style=dotted];
m54_20 -> m54_21  [key=0, style=solid];
m54_20 -> m54_7  [key=2, style=dotted];
m54_16 -> m54_17  [color=green, key=0, style=solid];
m54_16 -> m54_18  [color=green, key=2, style=dotted];
m54_16 -> m54_19  [color=green, key=2, style=dotted];
m54_16 -> m54_7  [key=2, style=dotted];
m54_15 -> m54_16  [color=red, key=0, style=solid];
m54_15 -> m54_6  [color=red, key=2, style=dotted];
m54_15 -> m54_17  [color=red, key=1, label=types, style=dashed];
m54_15 -> m54_18  [color=red, key=1, label=types, style=dashed];
m54_15 -> m54_19  [color=red, key=1, label=types, style=dashed];
m54_15 -> m54_20  [color=red, key=1, label=types, style=dashed];
m54_15 -> m54_21  [color=red, key=1, label=types, style=dashed];
m54_15 -> m54_22  [color=red, key=1, label=types, style=dashed];
m54_17 -> m54_15  [color=blue, key=0, style=bold];
m54_17 -> m54_18  [key=0, style=solid];
m54_17 -> m54_7  [key=2, style=dotted];
m54_12 -> m54_13  [color=green, key=0, style=solid];
m54_12 -> m54_14  [color=green, key=2, style=dotted];
m54_12 -> m54_7  [key=2, style=dotted];
m54_11 -> m54_12  [color=green, key=0, style=solid];
m54_11 -> m54_7  [key=2, style=dotted];
m54_13 -> m54_11  [color=blue, key=0, style=bold];
m54_13 -> m54_8  [color=blue, key=0, style=bold];
m54_21 -> m54_22  [key=0, style=solid];
m54_21 -> m54_23  [key=2, style=dotted];
m54_21 -> m54_24  [key=2, style=dotted];
m54_21 -> m54_7  [key=2, style=dotted];
m54_22 -> m54_20  [color=blue, key=0, style=bold];
m54_22 -> m54_23  [key=0, style=solid];
m54_22 -> m54_7  [key=2, style=dotted];
m54_24 -> m54_42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketError", style=dashed];
m54_24 -> m54_41  [key=0, style=solid];
m54_24 -> m54_25  [color=red, key=0, style=solid];
m54_42 -> m54_43  [key=0, style=solid];
m54_42 -> m54_40  [key=2, style=dotted];
m54_42 -> m54_7  [key=2, style=dotted];
m54_41 -> m54_42  [key=0, style=solid];
m54_41 -> m54_44  [key=2, style=dotted];
m54_41 -> m54_7  [key=2, style=dotted];
m54_43 -> m54_24  [color=blue, key=0, style=bold];
m54_43 -> m54_44  [key=0, style=solid];
m54_43 -> m54_7  [key=2, style=dotted];
m54_34 -> m54_35  [key=0, style=solid];
m54_34 -> m54_37  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m54_35 -> m54_36  [key=0, style=solid];
m54_35 -> m54_6  [key=2, style=dotted];
m54_35 -> m54_38  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_35 -> m54_39  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_35 -> m54_40  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_35 -> m54_41  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_35 -> m54_42  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_35 -> m54_43  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_35 -> m54_37  [key=2, style=dotted];
m54_37 -> m54_38  [key=0, style=solid];
m54_37 -> m54_40  [key=0, style=solid];
m54_36 -> m54_37  [key=0, style=solid];
m54_36 -> m54_7  [key=2, style=dotted];
m54_36 -> m54_34  [color=blue, key=0, style=bold];
m54_40 -> m54_41  [key=0, style=solid];
m54_40 -> m54_7  [key=2, style=dotted];
m54_28 -> m54_29  [key=0, style=solid];
m54_28 -> m54_7  [key=2, style=dotted];
m54_9 -> m54_10  [color=red, key=0, style=solid];
m54_9 -> m54_6  [key=2, style=dotted];
m54_9 -> m54_11  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_9 -> m54_12  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_7 -> m54_8  [key=0, style=solid];
m54_7 -> m54_21  [color=darkseagreen4, key=1, label="?", style=dashed];
m54_50 -> m54_3  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_5  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_6  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_16  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_12  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_7  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_31  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_45  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_50 -> m54_46  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m54_6 -> m54_45  [key=0, style=solid];
m54_6 -> m54_47  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m54_6 -> m54_7  [color=green, key=0, style=solid];
m54_6 -> m54_16  [color=green, key=1, label="?", style=dashed];
m54_45 -> m54_46  [key=0, style=solid];
m54_45 -> m54_49  [key=2, style=dotted];
m54_45 -> m54_48  [key=2, style=dotted];
m54_47 -> m54_48  [key=0, style=solid];
m54_47 -> m54_52  [key=2, style=dotted];
m54_47 -> m54_14  [color=blue, key=0, style=bold];
m54_46 -> m54_47  [key=0, style=solid];
m54_46 -> m54_50  [key=2, style=dotted];
m54_46 -> m54_51  [key=2, style=dotted];
m54_46 -> m54_49  [key=2, style=dotted];
m54_48 -> m54_6  [color=blue, key=0, style=bold];
m54_0 -> m54_1  [key=0, style=solid];
m54_0 -> m54_3  [color=green, key=1, label=string, style=dashed];
m54_0 -> m54_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m54_1 -> m54_2  [key=0, style=solid];
m54_1 -> m54_6  [key=2, style=dotted];
m54_1 -> m54_3  [color=red, key=1, label=types, style=dashed];
m54_1 -> m54_4  [color=darkseagreen4, key=1, label=types, style=dashed];
m54_3 -> m54_4  [color=green, key=0, style=solid];
m54_3 -> m54_7  [color=red, key=2, style=dotted];
m54_4 -> m54_5  [color=green, key=0, style=solid];
m54_4 -> m54_7  [key=2, style=dotted];
m54_4 -> m54_10  [key=2, style=dotted];
m54_2 -> m54_3  [color=red, key=0, style=solid];
m54_2 -> m54_7  [key=2, style=dotted];
m54_2 -> m54_8  [key=0, style=solid];
m54_2 -> m54_9  [key=2, style=dotted];
m54_5 -> m54_0  [color=blue, key=0, style=bold];
m54_5 -> m54_6  [color=green, key=0, style=solid];
m54_8 -> m54_0  [color=blue, key=0, style=bold];
m54_8 -> m54_9  [key=0, style=solid];
m54_8 -> m54_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m54_8 -> m54_12  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m54_10 -> m54_11  [color=red, key=0, style=solid];
m54_10 -> m54_7  [color=red, key=2, style=dotted];
m54_14 -> m54_45  [key=0, style=solid];
m54_14 -> m54_15  [color=red, key=0, style=solid];
m54_23 -> m54_14  [color=blue, key=0, style=bold];
}
