digraph  {
m3_34 [label="Order(''CASH'', +100)", span="89-89", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_18 [label="Order(''CASH'', -50)", span="57-57", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_28 [label="Order(''CASH'', -100)", span="77-77", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_29 [label="Time == new DateTime(2013, 10, 1)", span="79-79", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_31 [label="Time == new DateTime(2013, 11, 1)", span="83-83", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_27 [label="Time == new DateTime(2013, 9, 1)", span="75-75", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_30 [label="Order(''CASH'', -50)", span="81-81", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_32 [label="Order(''CASH'', +50)", span="85-85", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_33 [label="Time == new DateTime(2013, 12, 1)", span="87-87", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_66 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="ConstantAlphaModel.cs"];
m3_26 [label="Order(''CASH'', -50)", span="73-73", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_9 [label="_insightsTimeBySymbol = new Dictionary<Symbol, DateTime>()", span="66-66", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m3_25 [label="Time == new DateTime(2013, 8, 1)", span="71-71", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_11 [label="Time == new DateTime(2013, 1, 1)", span="43-43", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_53 [label="Entry QuantConnect.CashType.CashType()", span="122-122", cluster="QuantConnect.CashType.CashType()", file="ConstantAlphaModel.cs"];
m3_54 [label="this.Symbol = ''CASH''", span="124-124", cluster="QuantConnect.CashType.CashType()", file="ConstantAlphaModel.cs"];
m3_55 [label="Exit QuantConnect.CashType.CashType()", span="122-122", cluster="QuantConnect.CashType.CashType()", file="ConstantAlphaModel.cs"];
m3_40 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="ConstantAlphaModel.cs"];
m3_56 [label="Entry QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="127-127", cluster="QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_57 [label="return ''https://www.dropbox.com/s/oiliumoyqqj1ovl/2013-cash.csv?dl=1'';", span="129-129", cluster="QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_58 [label="Exit QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="127-127", cluster="QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_6 [label="_magnitude = magnitude", span="62-62", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m3_10 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m3_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConstantAlphaModel.cs"];
m3_13 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs"];
m3_14 [label=_securities, span="77-77", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", color=green, community=0];
m3_15 [label="ShouldEmitInsight(algorithm.UtcTime, security.Symbol)", span="79-79", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", color=green, community=0];
m3_16 [label="yield return new Insight(security.Symbol, _period, _type, _direction, _magnitude, _confidence);", span="81-81", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", color=green, community=0];
m3_17 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs"];
m3_19 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="ConstantAlphaModel.cs"];
m3_20 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m3_21 [label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="93-93", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m3_22 [label="changes.RemovedSecurities", span="96-96", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m3_23 [label="_insightsTimeBySymbol.Remove(removed.Symbol)", span="98-98", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m3_24 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs"];
m3_35 [label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", span="", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_36 [label="Order(''CASH'', -50)", span="93-93", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_37 [label=Exception, span="96-96", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_38 [label="Debug(''Err: '' + err.Message)", span="98-98", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_39 [label="Exit QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", span="38-38", cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="ConstantAlphaModel.cs"];
m3_42 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="710-710", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ConstantAlphaModel.cs"];
m3_59 [label="Entry QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="132-132", cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_60 [label="CashType cash = new CashType()", span="135-135", cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_61 [label="string[] data = line.Split(',')", span="139-139", cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_62 [label="cash.Time = DateTime.ParseExact(data[0], ''yyyy-MM-dd'', CultureInfo.InvariantCulture)", span="140-140", cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_63 [label="cash.Value = Convert.ToDecimal(data[1])", span="141-141", cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_64 [label="return cash;", span="145-145", cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_65 [label="Exit QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="132-132", cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="ConstantAlphaModel.cs"];
m3_67 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="ConstantAlphaModel.cs"];
m3_7 [label="_confidence = confidence", span="63-63", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m3_41 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="194-194", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="ConstantAlphaModel.cs"];
m3_8 [label="_securities = new HashSet<Security>()", span="65-65", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs"];
m3_52 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="123-123", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="ConstantAlphaModel.cs"];
m3_51 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="ConstantAlphaModel.cs"];
m3_68 [label="Entry System.Convert.ToDecimal(string)", span="0-0", cluster="System.Convert.ToDecimal(string)", file="ConstantAlphaModel.cs"];
m3_2 [label="SetEndDate(2013, 12, 31)", span="33-33", cluster="QuantConnect.TestCashStrategy.Initialize()", file="ConstantAlphaModel.cs"];
m3_3 [label="SetCash(100000)", span="34-34", cluster="QuantConnect.TestCashStrategy.Initialize()", file="ConstantAlphaModel.cs"];
m3_4 [label="AddData<CashType>(''CASH'')", span="35-35", cluster="QuantConnect.TestCashStrategy.Initialize()", file="ConstantAlphaModel.cs"];
m3_5 [label="Exit QuantConnect.TestCashStrategy.Initialize()", span="30-30", cluster="QuantConnect.TestCashStrategy.Initialize()", file="ConstantAlphaModel.cs"];
m3_0 [label="Entry QuantConnect.TestCashStrategy.Initialize()", span="30-30", cluster="QuantConnect.TestCashStrategy.Initialize()", file="ConstantAlphaModel.cs"];
m3_1 [label="SetStartDate(2013, 1, 1)", span="32-32", cluster="QuantConnect.TestCashStrategy.Initialize()", file="ConstantAlphaModel.cs"];
m3_43 [label="Entry QuantConnect.TestCashStrategy.OnEndOfDay()", span="103-103", cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="ConstantAlphaModel.cs"];
m3_44 [label="Plot(''Cash'', Portfolio.Cash)", span="107-107", cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="ConstantAlphaModel.cs"];
m3_45 [label="Plot(''PortfolioValue'', Portfolio.TotalPortfolioValue)", span="108-108", cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="ConstantAlphaModel.cs"];
m3_46 [label="Plot(''HoldingValue'', Portfolio[''CASH''].HoldingsValue)", span="109-109", cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="ConstantAlphaModel.cs"];
m3_47 [label="Plot(''HoldingQuantity'', Portfolio[''CASH''].Quantity)", span="110-110", cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="ConstantAlphaModel.cs"];
m3_48 [label=Exception, span="112-112", cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="ConstantAlphaModel.cs"];
m3_49 [label="Debug(''Err: '' + err.Message)", span="114-114", cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="ConstantAlphaModel.cs"];
m3_50 [label="Exit QuantConnect.TestCashStrategy.OnEndOfDay()", span="103-103", cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="ConstantAlphaModel.cs"];
m3_69 [label="QuantConnect.TestCashStrategy", span="", file="ConstantAlphaModel.cs"];
m3_70 [label="QuantConnect.CashType", span="", file="ConstantAlphaModel.cs"];
m4_0 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreateCSharpAlphaModel()", span="33-33", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreateCSharpAlphaModel()", file="ConstantAlphaModelTests.cs"];
m4_1 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreateCSharpAlphaModel()", span="33-33", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreateCSharpAlphaModel()", file="ConstantAlphaModelTests.cs"];
m4_13 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", span="45-45", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", file="ConstantAlphaModelTests.cs"];
m4_14 [label="return Enumerable.Range(0, 360).Select(x => new Insight(Symbols.SPY, _period, _type, _direction, _magnitude, _confidence));", span="47-47", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", file="ConstantAlphaModelTests.cs"];
m4_15 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", span="45-45", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", file="ConstantAlphaModelTests.cs"];
m4_21 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="ConstantAlphaModelTests.cs"];
m4_2 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", span="35-35", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs"];
m4_3 [label="Py.GIL()", span="37-37", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs"];
m4_4 [label="dynamic model = Py.Import(''ConstantAlphaModel'').GetAttr(''ConstantAlphaModel'')", span="39-39", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs"];
m4_5 [label="var instance = model(_type, _direction, _period, _magnitude, _confidence)", span="40-40", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs"];
m4_6 [label="return new AlphaModelPythonWrapper(instance);", span="41-41", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs"];
m4_7 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", span="35-35", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs"];
m4_12 [label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="34-34", cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", file="ConstantAlphaModelTests.cs"];
m4_9 [label="Entry Unk.Import", span="", cluster="Unk.Import", file="ConstantAlphaModelTests.cs"];
m4_16 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="ConstantAlphaModelTests.cs"];
m4_11 [label="Entry Unk.model", span="", cluster="Unk.model", file="ConstantAlphaModelTests.cs"];
m4_17 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ConstantAlphaModelTests.cs"];
m4_8 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="ConstantAlphaModelTests.cs"];
m4_10 [label="Entry Unk.GetAttr", span="", cluster="Unk.GetAttr", file="ConstantAlphaModelTests.cs"];
m4_18 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="ConstantAlphaModelTests.cs"];
m4_19 [label="new Insight(Symbols.SPY, _period, _type, _direction, _magnitude, _confidence)", span="47-47", cluster="lambda expression", file="ConstantAlphaModelTests.cs"];
m4_20 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="ConstantAlphaModelTests.cs"];
m4_22 [label="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests", span="", file="ConstantAlphaModelTests.cs"];
m6_8 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="EmaCrossAlphaModel.cs"];
m6_9 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(decimal)", span="38-38", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(decimal)", file="EmaCrossAlphaModel.cs"];
m6_10 [label="return new StopLimitOrder(Symbol, Math.Abs(quantity), _highLimit, _lowLimit, DateTime.Now);", span="40-40", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(decimal)", file="EmaCrossAlphaModel.cs"];
m6_11 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(decimal)", span="38-38", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(decimal)", file="EmaCrossAlphaModel.cs"];
m6_7 [label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="66-66", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="EmaCrossAlphaModel.cs"];
m6_26 [label="Entry System.Math.Max(decimal, decimal)", span="0-0", cluster="System.Math.Max(decimal, decimal)", file="EmaCrossAlphaModel.cs"];
m6_27 [label="Entry System.Math.Min(decimal, decimal)", span="0-0", cluster="System.Math.Min(decimal, decimal)", file="EmaCrossAlphaModel.cs"];
m6_4 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(decimal)", span="33-33", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(decimal)", file="EmaCrossAlphaModel.cs"];
m6_5 [label="return new StopLimitOrder(Symbol, -Math.Abs(quantity), _lowLimit, _highLimit, DateTime.Now);", span="35-35", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(decimal)", file="EmaCrossAlphaModel.cs"];
m6_6 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(decimal)", span="33-33", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(decimal)", file="EmaCrossAlphaModel.cs"];
m6_12 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_13 [label="var stop = (StopLimitOrder) order", span="45-45", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_15 [label="order.Quantity > 0", span="47-47", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_16 [label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice/2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="50-50", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_17 [label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="53-53", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_18 [label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice / 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="55-55", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_19 [label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="61-61", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_20 [label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="65-65", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_21 [label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="67-67", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_14 [label="var previousStop = stop.StopPrice", span="46-46", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_22 [label="stop.LimitPrice = stop.StopPrice", span="70-70", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_23 [label="return stop.StopPrice != previousStop;", span="71-71", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_24 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="EmaCrossAlphaModel.cs"];
m6_25 [label="Entry System.Math.Round(decimal, int, System.MidpointRounding)", span="0-0", cluster="System.Math.Round(decimal, int, System.MidpointRounding)", file="EmaCrossAlphaModel.cs"];
m6_0 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="EmaCrossAlphaModel.cs"];
m6_1 [label="_highLimit = highLimit", span="29-29", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="EmaCrossAlphaModel.cs"];
m6_2 [label="_lowLimit = lowLimit", span="30-30", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="EmaCrossAlphaModel.cs"];
m6_3 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="EmaCrossAlphaModel.cs"];
m6_28 [label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", span="", file="EmaCrossAlphaModel.cs"];
m7_17 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="EmaCrossAlphaModelTests.cs"];
m7_13 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.ExpectedInsights()", span="38-38", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.ExpectedInsights()", file="EmaCrossAlphaModelTests.cs"];
m7_14 [label="var period = TimeSpan.FromDays(12)", span="40-40", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.ExpectedInsights()", file="EmaCrossAlphaModelTests.cs"];
m7_15 [label="return new[]\r\n            {\r\n                Insight.Price(Symbols.SPY, period, InsightDirection.Down),\r\n                Insight.Price(Symbols.SPY, period, InsightDirection.Up)\r\n            };", span="42-46", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.ExpectedInsights()", file="EmaCrossAlphaModelTests.cs"];
m7_16 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.ExpectedInsights()", span="38-38", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.ExpectedInsights()", file="EmaCrossAlphaModelTests.cs"];
m7_12 [label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="34-34", cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", file="EmaCrossAlphaModelTests.cs"];
m7_2 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreatePythonAlphaModel()", span="28-28", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreatePythonAlphaModel()", file="EmaCrossAlphaModelTests.cs"];
m7_3 [label="Py.GIL()", span="30-30", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreatePythonAlphaModel()", file="EmaCrossAlphaModelTests.cs"];
m7_4 [label="dynamic model = Py.Import(''EmaCrossAlphaModel'').GetAttr(''EmaCrossAlphaModel'')", span="32-32", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreatePythonAlphaModel()", file="EmaCrossAlphaModelTests.cs"];
m7_5 [label="var instance = model()", span="33-33", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreatePythonAlphaModel()", file="EmaCrossAlphaModelTests.cs"];
m7_6 [label="return new AlphaModelPythonWrapper(instance);", span="34-34", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreatePythonAlphaModel()", file="EmaCrossAlphaModelTests.cs"];
m7_7 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreatePythonAlphaModel()", span="28-28", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreatePythonAlphaModel()", file="EmaCrossAlphaModelTests.cs"];
m7_9 [label="Entry Unk.Import", span="", cluster="Unk.Import", file="EmaCrossAlphaModelTests.cs"];
m7_18 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="178-178", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="EmaCrossAlphaModelTests.cs"];
m7_0 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreateCSharpAlphaModel()", span="26-26", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreateCSharpAlphaModel()", file="EmaCrossAlphaModelTests.cs"];
m7_1 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreateCSharpAlphaModel()", span="26-26", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.EmaCrossAlphaModelTests.CreateCSharpAlphaModel()", file="EmaCrossAlphaModelTests.cs"];
m7_11 [label="Entry Unk.model", span="", cluster="Unk.model", file="EmaCrossAlphaModelTests.cs"];
m7_8 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="EmaCrossAlphaModelTests.cs"];
m7_10 [label="Entry Unk.GetAttr", span="", cluster="Unk.GetAttr", file="EmaCrossAlphaModelTests.cs"];
m8_0 [label="Entry QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32", cluster="QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="IAlphaModel.cs"];
m8_1 [label="Exit QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32", cluster="QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="IAlphaModel.cs"];
m11_75 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Insight.cs"];
m11_40 [label="fill.Direction", span="131-131", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_14 [label="var saleValue = saleValueInQuoteCurrency*quoteCash.ConversionRate", span="63-63", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_15 [label="security.Holdings.AddNewSale(saleValue)", span="64-64", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_16 [label="var feeThisOrder = fill.OrderFee", span="67-67", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_17 [label="security.Holdings.AddNewFee(feeThisOrder)", span="68-68", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_41 [label="OrderDirection.Buy", span="133-133", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_72 [label="Entry QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="335-335", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="Insight.cs"];
m11_21 [label="isLong && fill.Direction == OrderDirection.Sell", span="76-76", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_22 [label="quantityHoldings >= fill.AbsoluteFillQuantity", span="79-79", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_23 [label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * fill.AbsoluteFillQuantity", span="82-82", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_69 [label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="100-100", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Insight.cs"];
m11_13 [label="var saleValueInQuoteCurrency = fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity)", span="62-62", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_74 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="665-665", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="Insight.cs"];
m11_36 [label="quantityHoldings == 0", span="122-122", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_71 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="317-317", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="Insight.cs"];
m11_65 [label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="98-98", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Insight.cs"];
m11_42 [label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + fill.FillQuantity)", span="135-135", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_68 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="308-308", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="Insight.cs"];
m11_43 [label="quantityHoldings += fill.FillQuantity", span="137-137", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_44 [label="OrderDirection.Sell", span="140-140", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_45 [label="quantityHoldings += fill.FillQuantity", span="141-141", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_46 [label="quantityHoldings < 0", span="142-142", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_47 [label="averageHoldingsPrice = fill.FillPrice", span="145-145", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs", color=red, community=0];
m11_48 [label="quantityHoldings == 0", span="147-147", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_49 [label="averageHoldingsPrice = 0", span="149-149", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_50 [label=isShort, span="154-154", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_24 [label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * quantityHoldings", span="87-87", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_25 [label="closedPosition = true", span="89-89", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="Insight.cs"];
m11_26 [label="isShort && fill.Direction == OrderDirection.Buy", span="91-91", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="Insight.cs"];
m11_27 [label="absoluteHoldingsQuantity >= fill.FillQuantity", span="94-94", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_28 [label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * fill.AbsoluteFillQuantity", span="97-97", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_29 [label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * absoluteHoldingsQuantity", span="102-102", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_31 [label=closedPosition, span="108-108", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_33 [label="security.Holdings.AddNewProfit(lastTradeProfit)", span="114-114", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_34 [label="security.Holdings.SetLastTradeProfit(lastTradeProfit)", span="115-115", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_30 [label="closedPosition = true", span="104-104", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_32 [label="lastTradeProfit *= quoteCash.ConversionRate", span="111-111", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_35 [label="portfolio.AddTransactionRecord(security.LocalTime.ConvertToUtc(security.Exchange.TimeZone), lastTradeProfit - 2 * feeThisOrder)", span="116-116", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_18 [label="portfolio.CashBook[CashBook.AccountCurrency].AddAmount(-feeThisOrder)", span="69-69", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_19 [label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, baseCurrency, fill.FillQuantity)", span="72-72", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_20 [label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, quoteCurrency, -fill.FillQuantity * fill.FillPrice)", span="73-73", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_67 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="326-326", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="Insight.cs"];
m11_38 [label="quantityHoldings = fill.FillQuantity", span="126-126", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_51 [label="fill.Direction", span="157-157", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_12 [label="var lastTradeProfit = 0m", span="57-57", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_73 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="449-449", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="Insight.cs"];
m11_66 [label="Entry System.Convert.ToDecimal(int)", span="0-0", cluster="System.Convert.ToDecimal(int)", file="Insight.cs"];
m11_76 [label="Entry System.Convert.ToInt32(decimal)", span="0-0", cluster="System.Convert.ToInt32(decimal)", file="Insight.cs"];
m11_0 [label="Entry QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="32-32", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_1 [label="string baseCurrency", span="36-36", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_3 [label="Id = Guid.NewGuid()", span="120-120", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs"];
m11_4 [label="Score = new InsightScore()", span="121-121", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs"];
m11_5 [label="Symbol = symbol", span="123-123", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", color=green, community=0];
m11_7 [label="Direction = direction", span="125-125", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs"];
m11_8 [label="Period = period", span="126-126", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs"];
m11_9 [label="Magnitude = magnitude", span="129-129", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs"];
m11_10 [label="Confidence = confidence", span="130-130", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs"];
m11_11 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs"];
m11_37 [label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="242-242", cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="Insight.cs"];
m11_53 [label="quantityHoldings += fill.FillQuantity", span="161-161", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_55 [label="averageHoldingsPrice = fill.FillPrice", span="165-165", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="Insight.cs"];
m11_59 [label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + fill.FillQuantity)", span="177-177", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_60 [label="quantityHoldings += fill.FillQuantity", span="178-178", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="Insight.cs"];
m11_63 [label="security.Holdings.SetHoldings(averageHoldingsPrice, Convert.ToInt32(quantityHoldings))", span="189-189", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_2 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs"];
m11_6 [label="Type = type", span="124-124", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", color=green, community=0];
m11_39 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Insight.cs"];
m11_61 [label=Exception, span="183-183", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_52 [label="QuantConnect.Algorithm.Framework.Alphas.Insight", span="", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_58 [label="OrderDirection.Sell", span="173-173", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_54 [label="quantityHoldings > 0", span="162-162", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_56 [label="quantityHoldings == 0", span="167-167", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_57 [label="averageHoldingsPrice = 0", span="169-169", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_62 [label="Log.Error(err)", span="185-185", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_64 [label="Exit QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="32-32", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Insight.cs"];
m11_70 [label="Entry QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", span="32-32", cluster="QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", file="Insight.cs"];
m11_77 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="Insight.cs"];
m12_23 [label="Entry Unk.ToLower", span="", cluster="Unk.ToLower", file="InsightJsonConverterTests.cs"];
m12_21 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="InsightJsonConverterTests.cs"];
m12_42 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", span="72-72", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_43 [label="var jObject = JObject.Parse(jsonNoScore)", span="74-74", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_44 [label="var insight = Insight.FromSerializedInsight(new SerializedInsight\r\n            {\r\n                Id = jObject[''id''].Value<string>(),\r\n                GeneratedTime = jObject[''generated-time''].Value<double>(),\r\n                CloseTime = jObject[''close-time''].Value<double>(),\r\n                Symbol = jObject[''symbol''].Value<string>(),\r\n                Ticker = jObject[''ticker''].Value<string>(),\r\n                Type = (InsightType)Enum.Parse(typeof(InsightType), jObject[''type''].Value<string>(), true),\r\n                ReferenceValue = jObject[''reference''].Value<decimal>(),\r\n                Direction = (InsightDirection)Enum.Parse(typeof(InsightDirection), jObject[''direction''].Value<string>(), true),\r\n                Period = jObject[''period''].Value<double>(),\r\n                Magnitude = jObject[''magnitude''].Value<double>()\r\n            })", span="75-87", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_45 [label="var result = JsonConvert.SerializeObject(insight, Formatting.Indented)", span="88-88", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_46 [label="Assert.AreEqual(jsonNoScore, result)", span="89-89", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_47 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", span="72-72", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_20 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="InsightJsonConverterTests.cs"];
m12_18 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="InsightJsonConverterTests.cs"];
m12_49 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", span="188-188", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="InsightJsonConverterTests.cs"];
m12_24 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", span="51-51", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_25 [label="var jObject = JObject.Parse(jsonWithScore)", span="53-53", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_26 [label="var result = JsonConvert.DeserializeObject<Insight>(jsonWithScore)", span="54-54", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_27 [label="Assert.AreEqual(jObject[''id''].Value<string>(), result.Id.ToString(''N''))", span="55-55", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_28 [label="Assert.AreEqual(jObject[''generated-time''].Value<double>(), Time.DateTimeToUnixTimeStamp(result.GeneratedTimeUtc), 5e-4)", span="56-56", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_29 [label="Assert.AreEqual(jObject[''close-time''].Value<double>(), Time.DateTimeToUnixTimeStamp(result.CloseTimeUtc), 5e-4)", span="57-57", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_30 [label="Assert.AreEqual(jObject[''symbol''].Value<string>(), result.Symbol.ID.ToString())", span="58-58", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_31 [label="Assert.AreEqual(jObject[''ticker''].Value<string>(), result.Symbol.Value)", span="59-59", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_32 [label="Assert.AreEqual(jObject[''type''].Value<string>(), result.Type.ToLower())", span="60-60", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_33 [label="Assert.AreEqual(jObject[''reference''].Value<decimal>(), result.ReferenceValue)", span="61-61", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_34 [label="Assert.AreEqual(jObject[''direction''].Value<string>(), result.Direction.ToLower())", span="62-62", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_35 [label="Assert.AreEqual(jObject[''period''].Value<double>(), result.Period.TotalSeconds)", span="63-63", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_36 [label="Assert.AreEqual(jObject[''magnitude''].Value<double>(), result.Magnitude)", span="64-64", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_39 [label="Assert.AreEqual(jObject[''score-magnitude''].Value<double>(), result.Score.Magnitude)", span="67-67", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_40 [label="Assert.AreEqual(jObject[''score-direction''].Value<double>(), result.Score.Direction)", span="68-68", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_37 [label="Assert.AreEqual(null, result.Confidence)", span="65-65", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_38 [label="Assert.AreEqual(true, result.Score.IsFinalScore)", span="66-66", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_41 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", span="51-51", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_51 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", span="93-93", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_52 [label="var jObject = JObject.Parse(jsonWithScore)", span="95-95", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_53 [label="var insight = Insight.FromSerializedInsight(new SerializedInsight\r\n            {\r\n                Id = jObject[''id''].Value<string>(),\r\n                GeneratedTime = jObject[''generated-time''].Value<double>(),\r\n                CloseTime = jObject[''close-time''].Value<double>(),\r\n                Symbol = jObject[''symbol''].Value<string>(),\r\n                Ticker = jObject[''ticker''].Value<string>(),\r\n                Type = (InsightType)Enum.Parse(typeof(InsightType), jObject[''type''].Value<string>(), true),\r\n                ReferenceValue = jObject[''reference''].Value<decimal>(),\r\n                Direction = (InsightDirection)Enum.Parse(typeof(InsightDirection), jObject[''direction''].Value<string>(), true),\r\n                Period = jObject[''period''].Value<double>(),\r\n                Magnitude = jObject[''magnitude''].Value<double>(),\r\n                ScoreIsFinal = jObject[''score-final''].Value<bool>(),\r\n                ScoreMagnitude = jObject[''score-magnitude''].Value<double>(),\r\n                ScoreDirection = jObject[''score-direction''].Value<double>(),\r\n                EstimatedValue = jObject[''estimated-value''].Value<decimal>()\r\n            })", span="96-112", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_54 [label="var result = JsonConvert.SerializeObject(insight, Formatting.Indented)", span="113-113", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_55 [label="Assert.AreEqual(jsonWithScore, result)", span="114-114", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_56 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", span="93-93", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs"];
m12_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="InsightJsonConverterTests.cs"];
m12_22 [label="Entry Unk.DateTimeToUnixTimeStamp", span="", cluster="Unk.DateTimeToUnixTimeStamp", file="InsightJsonConverterTests.cs"];
m12_48 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", span="106-106", cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", file="InsightJsonConverterTests.cs"];
m12_0 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", span="28-28", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_1 [label="var jObject = JObject.Parse(jsonNoScore)", span="30-30", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_2 [label="var result = JsonConvert.DeserializeObject<Insight>(jsonNoScore)", span="31-31", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_3 [label="Assert.AreEqual(jObject[''id''].Value<string>(), result.Id.ToString(''N''))", span="32-32", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_4 [label="Assert.AreEqual(jObject[''generated-time''].Value<double>(), Time.DateTimeToUnixTimeStamp(result.GeneratedTimeUtc), 5e-4)", span="33-33", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_5 [label="Assert.AreEqual(jObject[''close-time''].Value<double>(), Time.DateTimeToUnixTimeStamp(result.CloseTimeUtc), 5e-4)", span="34-34", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_6 [label="Assert.AreEqual(jObject[''symbol''].Value<string>(), result.Symbol.ID.ToString())", span="35-35", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_7 [label="Assert.AreEqual(jObject[''ticker''].Value<string>(), result.Symbol.Value)", span="36-36", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_8 [label="Assert.AreEqual(jObject[''type''].Value<string>(), result.Type.ToLower())", span="37-37", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_9 [label="Assert.AreEqual(jObject[''reference''].Value<decimal>(), result.ReferenceValue)", span="38-38", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_10 [label="Assert.AreEqual(jObject[''direction''].Value<string>(), result.Direction.ToLower())", span="39-39", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_11 [label="Assert.AreEqual(jObject[''period''].Value<double>(), result.Period.TotalSeconds)", span="40-40", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_12 [label="Assert.AreEqual(jObject[''magnitude''].Value<double>(), result.Magnitude)", span="41-41", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_13 [label="Assert.AreEqual(null, result.Confidence)", span="42-42", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_14 [label="Assert.AreEqual(false, result.Score.IsFinalScore)", span="45-45", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_15 [label="Assert.AreEqual(0, result.Score.Magnitude)", span="46-46", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_16 [label="Assert.AreEqual(0, result.Score.Direction)", span="47-47", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_17 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", span="28-28", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs"];
m12_50 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="InsightJsonConverterTests.cs"];
m15_80 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="Loader.cs"];
m15_114 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="Loader.cs"];
m15_117 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="Loader.cs"];
m15_112 [label="Entry System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", file="Loader.cs"];
m15_118 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="Loader.cs"];
m15_88 [label="transactionHandler.Run()", span="96-96", cluster="lambda expression", file="Loader.cs"];
m15_87 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="Loader.cs"];
m15_89 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="Loader.cs"];
m15_119 [label="x.OrderId == order.Id", span="159-159", cluster="lambda expression", file="Loader.cs"];
m15_120 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="Loader.cs"];
m15_18 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", span="87-87", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_45 [label="var referenceTimeNY = new DateTime(2015, 12, 21, 13, 0, 0)", span="89-89", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_46 [label="var referenceTimeUtc = referenceTimeNY.ConvertToUtc(TimeZones.NewYork)", span="90-90", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_47 [label="algorithm = new BasicTemplateAlgorithm()", span="91-91", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_48 [label="algorithm.SetDateTime(referenceTimeUtc)", span="92-92", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_60 [label="order = new MarketOrder(Symbols.SPY, 100, referenceTimeUtc) { Id = 1 }", span="110-110", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_63 [label="return referenceTimeUtc;", span="114-114", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_50 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="95-95", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_52 [label="algorithm.Transactions.SetOrderProcessor(transactionHandler)", span="98-98", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", color=red, community=0, file="Loader.cs"];
m15_55 [label="model = new PartialMarketFillModel(algorithm.Transactions, 2)", span="103-103", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_56 [label="algorithm.Securities.Add(security)", span="105-105", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_57 [label="algorithm.Securities[Symbols.SPY].FillModel = model", span="106-106", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_59 [label="algorithm.SetFinishedWarmingUp()", span="108-108", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_61 [label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, algorithm.UtcTime, null)", span="112-112", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_62 [label="ticket = algorithm.Transactions.ProcessRequest(request)", span="113-113", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_49 [label="var transactionHandler = new BacktestingTransactionHandler()", span="94-94", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_51 [label="Task.Run(() => transactionHandler.Run())", span="96-96", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_53 [label="var config = new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Second, TimeZones.NewYork, TimeZones.NewYork, false, false, false)", span="100-100", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", color=red, community=0, file="Loader.cs"];
m15_54 [label="security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="101-101", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_58 [label="security.SetMarketPrice(new Tick { Symbol = Symbols.SPY, Value = 100 })", span="107-107", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_64 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", span="87-87", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.InitializeTest(out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm, out QuantConnect.Securities.Security, out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel, out QuantConnect.Orders.MarketOrder, out QuantConnect.Orders.OrderTicket)", file="Loader.cs"];
m15_74 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="Loader.cs"];
m15_90 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="473-473", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Loader.cs"];
m15_82 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="578-578", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="Loader.cs"];
m15_83 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142", cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="Loader.cs"];
m15_24 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", span="60-60", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_25 [label="Security security", span="62-62", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_26 [label="MarketOrder order", span="63-63", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_27 [label="OrderTicket ticket", span="64-64", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_28 [label="PartialMarketFillModel model", span="65-65", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_29 [label="BasicTemplateAlgorithm algorithm", span="66-66", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_30 [label="var referenceTimeUtc = InitializeTest(out algorithm, out security, out model, out order, out ticket)", span="67-67", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_31 [label="var fill1 = model.MarketFill(security, order)", span="69-69", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_32 [label="ticket.AddOrderEvent(fill1)", span="70-70", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_33 [label="Assert.AreEqual(order.Quantity / 2, fill1.FillQuantity)", span="71-71", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_35 [label="var fill2 = model.MarketFill(security, order)", span="74-74", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_36 [label="ticket.AddOrderEvent(fill2)", span="75-75", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_39 [label="algorithm.SetDateTime(referenceTimeUtc.AddSeconds(1))", span="79-79", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_40 [label="var fill3 = model.MarketFill(security, order)", span="81-81", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_41 [label="ticket.AddOrderEvent(fill3)", span="82-82", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_42 [label="Assert.AreEqual(order.Quantity / 2, fill3.FillQuantity)", span="83-83", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_34 [label="Assert.AreEqual(OrderStatus.PartiallyFilled, fill1.Status)", span="72-72", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_37 [label="Assert.AreEqual(0, fill2.FillQuantity)", span="76-76", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_38 [label="Assert.AreEqual(OrderStatus.None, fill2.Status)", span="77-77", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_43 [label="Assert.AreEqual(OrderStatus.Filled, fill3.Status)", span="84-84", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_44 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", span="60-60", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.RequiresAdvancingTime()", file="Loader.cs"];
m15_71 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Loader.cs"];
m15_70 [label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="51-51", cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="Loader.cs"];
m15_22 [label="Entry QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", span="324-324", cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="Loader.cs"];
m15_110 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="Loader.cs"];
m15_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="913-913", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="Loader.cs"];
m15_69 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Loader.cs"];
m15_76 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="Loader.cs"];
m15_23 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="Loader.cs"];
m15_73 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="339-339", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="Loader.cs"];
m15_84 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="Loader.cs"];
m15_79 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)", span="143-143", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)", file="Loader.cs"];
m15_91 [label="_orderProvider = orderProvider", span="145-145", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)", file="Loader.cs"];
m15_92 [label="_percent = 1m / numberOfFills", span="146-146", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)", file="Loader.cs"];
m15_93 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)", span="143-143", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.PartialMarketFillModel(QuantConnect.Securities.IOrderProvider, int)", file="Loader.cs"];
m15_72 [label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0", cluster="System.Threading.Tasks.Task.Run(System.Action)", file="Loader.cs"];
m15_68 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", span="25-25", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", file="Loader.cs"];
m15_75 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="302-302", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Loader.cs"];
m15_67 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.BasicTemplateAlgorithm()", span="28-28", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.BasicTemplateAlgorithm()", file="Loader.cs"];
m15_115 [label="Entry System.TimeSpan.FromTicks(long)", span="0-0", cluster="System.TimeSpan.FromTicks(long)", file="Loader.cs"];
m15_19 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="Loader.cs"];
m15_66 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="619-619", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="Loader.cs"];
m15_65 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="Loader.cs"];
m15_85 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="Loader.cs"];
m15_78 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="Loader.cs"];
m15_86 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="Loader.cs"];
m15_116 [label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="36-36", cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_77 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="80-80", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Loader.cs"];
m15_21 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="155-155", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_94 [label="var currentUtcTime = asset.LocalTime.ConvertToUtc(asset.Exchange.TimeZone)", span="157-157", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_95 [label="var ticket = _orderProvider.GetOrderTickets(x => x.OrderId == order.Id).FirstOrDefault()", span="159-159", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_97 [label="return new OrderEvent(order, currentUtcTime, 0);", span="163-163", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_99 [label="var increment = TimeSpan.FromTicks(Math.Max(asset.Resolution.ToTimeSpan().Ticks, 1))", span="168-168", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_101 [label="return new OrderEvent(order, currentUtcTime, 0);", span="172-172", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_103 [label="var fill = base.MarketFill(asset, order)", span="176-176", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_104 [label="var filledThisTime = Math.Min(remaining, (int)(_percent * order.Quantity))", span="177-177", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_100 [label="lastOrderEvent != null && currentUtcTime - lastOrderEvent.UtcTime < increment", span="169-169", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_96 [label="ticket == null", span="160-160", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", color=red, community=0, file="Loader.cs"];
m15_98 [label="var lastOrderEvent = ticket.OrderEvents.LastOrDefault()", span="167-167", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_102 [label="var remaining = (int)(ticket.Quantity - ticket.QuantityFilled)", span="175-175", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_106 [label="fill.Status = remaining == filledThisTime\r\n                    ? OrderStatus.Filled\r\n                    : OrderStatus.PartiallyFilled", span="181-183", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_105 [label="fill.FillQuantity = filledThisTime", span="178-178", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_107 [label="return fill;", span="185-185", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_108 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="155-155", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Loader.cs"];
m15_81 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="Loader.cs"];
m15_113 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="725-725", cluster="QuantConnect.Resolution.ToTimeSpan()", file="Loader.cs"];
m15_0 [label="Entry QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", span="35-35", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_1 [label="Security security", span="37-37", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_2 [label="MarketOrder order", span="38-38", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_3 [label="OrderTicket ticket", span="39-39", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_4 [label="PartialMarketFillModel model", span="40-40", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_5 [label="BasicTemplateAlgorithm algorithm", span="41-41", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_6 [label="var referenceTimeUtc = InitializeTest(out algorithm, out security, out model, out order, out ticket)", span="42-42", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_7 [label="algorithm.SetDateTime(referenceTimeUtc.AddSeconds(1))", span="44-44", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_8 [label="var fill1 = model.MarketFill(security, order)", span="46-46", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_9 [label="ticket.AddOrderEvent(fill1)", span="47-47", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_10 [label="Assert.AreEqual(order.Quantity / 2, fill1.FillQuantity)", span="48-48", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_12 [label="algorithm.SetDateTime(referenceTimeUtc.AddSeconds(2))", span="51-51", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_13 [label="var fill2 = model.MarketFill(security, order)", span="53-53", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_14 [label="ticket.AddOrderEvent(fill2)", span="54-54", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_15 [label="Assert.AreEqual(order.Quantity / 2, fill2.FillQuantity)", span="55-55", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_11 [label="Assert.AreEqual(OrderStatus.PartiallyFilled, fill1.Status)", span="49-49", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_16 [label="Assert.AreEqual(OrderStatus.Filled, fill2.Status)", span="56-56", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_17 [label="Exit QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", span="35-35", cluster="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.CreatesSpecificNumberOfFills()", file="Loader.cs"];
m15_109 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50", cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="Loader.cs"];
m15_111 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="Loader.cs"];
m15_121 [label=transactionHandler, span="", file="Loader.cs"];
m15_122 [label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel", span="", file="Loader.cs"];
m15_123 [label="QuantConnect.Orders.MarketOrder", span="", file="Loader.cs"];
m16_0 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="42-42", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="MacdAlphaModel.cs"];
m16_1 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="42-42", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="MacdAlphaModel.cs"];
m16_11 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="MacdAlphaModel.cs"];
m16_19 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="MacdAlphaModel.cs"];
m16_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs"];
m16_18 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="102-102", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="MacdAlphaModel.cs"];
m16_27 [label="DateTime generatedTimeUtc", span="104-104", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="MacdAlphaModel.cs"];
m16_28 [label="_insightsTimeBySymbol.TryGetValue(symbol, out generatedTimeUtc)", span="105-105", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="MacdAlphaModel.cs"];
m16_29 [label="utcTime - generatedTimeUtc < _period", span="109-109", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="MacdAlphaModel.cs"];
m16_31 [label="_insightsTimeBySymbol[symbol] = utcTime", span="117-117", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="MacdAlphaModel.cs"];
m16_30 [label="return false;", span="111-111", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="MacdAlphaModel.cs"];
m16_32 [label="return true;", span="118-118", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="MacdAlphaModel.cs"];
m16_33 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="102-102", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="MacdAlphaModel.cs"];
m16_25 [label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="32-32", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs"];
m16_26 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="MacdAlphaModel.cs"];
m16_13 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_14 [label=_securities, span="77-77", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_16 [label="yield return new Insight(security.Symbol, _period, _type, _direction, _magnitude, _confidence);", span="81-81", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_15 [label="ShouldEmitInsight(algorithm.UtcTime, security.Symbol)", span="79-79", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_17 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs"];
m16_2 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_3 [label="_type = type", span="57-57", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_4 [label="_direction = direction", span="58-58", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_5 [label="_period = period", span="59-59", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_6 [label="_magnitude = magnitude", span="62-62", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_7 [label="_confidence = confidence", span="63-63", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_8 [label="_securities = new HashSet<Security>()", span="65-65", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_9 [label="_insightsTimeBySymbol = new Dictionary<Symbol, DateTime>()", span="66-66", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_10 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="MacdAlphaModel.cs"];
m16_20 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs"];
m16_21 [label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="93-93", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs"];
m16_22 [label="changes.RemovedSecurities", span="96-96", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs"];
m16_23 [label="_insightsTimeBySymbol.Remove(removed.Symbol)", span="98-98", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs"];
m16_24 [label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs"];
m16_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MacdAlphaModel.cs"];
m16_35 [label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", span="", file="MacdAlphaModel.cs"];
m17_15 [label="return new[]\r\n            {\r\n                Insight.Price(Symbols.SPY, period, InsightDirection.Flat),\r\n                Insight.Price(Symbols.SPY, period, InsightDirection.Down),\r\n                Insight.Price(Symbols.SPY, period, InsightDirection.Flat),\r\n                Insight.Price(Symbols.SPY, period, InsightDirection.Up)\r\n            };", span="41-47", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.ExpectedInsights()", file="MacdAlphaModelTests.cs"];
m17_85 [label="Date = date.Date", span="219-219", cluster="QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair(System.DateTime)", file="MacdAlphaModelTests.cs"];
m17_86 [label="Exit QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair(System.DateTime)", span="217-217", cluster="QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair(System.DateTime)", file="MacdAlphaModelTests.cs"];
m17_17 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="MacdAlphaModelTests.cs"];
m17_18 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="178-178", cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="MacdAlphaModelTests.cs"];
m17_19 [label="today.NiftyPrice = Convert.ToDouble(data.Close)", span="71-71", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_20 [label="today.Date == data.Time", span="72-72", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_21 [label="prices.Add(today)", span="74-74", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_22 [label="prices.Count > minimumCorrelationHistory", span="76-76", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_23 [label="prices.RemoveAt(0)", span="78-78", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_24 [label="double highestNifty = (from pair in prices select pair.NiftyPrice).Max()", span="83-83", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_25 [label="double lowestNifty = (from pair in prices select pair.NiftyPrice).Min()", span="84-84", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_26 [label="Time.DayOfWeek == DayOfWeek.Wednesday", span="85-85", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_28 [label="int code = Order(''NIFTY'', quantity - Portfolio[''NIFTY''].Quantity)", span="94-94", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_29 [label="Debug(''LONG '' + code + '' Time: '' + Time.ToShortDateString() + '' Quantity: '' + quantity + '' Portfolio:'' + Portfolio[''NIFTY''].Quantity + '' Nifty: '' + data.Close + '' Buying Power: '' + Portfolio.TotalPortfolioValue)", span="95-95", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_31 [label="int code = Order(''NIFTY'', -quantity - Portfolio[''NIFTY''].Quantity)", span="99-99", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_32 [label="Debug(''SHORT '' + code + '' Time: '' + Time.ToShortDateString() + '' Quantity: '' + quantity + '' Portfolio:'' + Portfolio[''NIFTY''].Quantity + '' Nifty: '' + data.Close + '' Buying Power: '' + Portfolio.TotalPortfolioValue)", span="100-100", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_34 [label="Debug(''Error: '' + err.Message)", span="106-106", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_27 [label="Convert.ToDouble(data.Open) >= highestNifty", span="92-92", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_30 [label="Convert.ToDouble(data.Open) <= lowestNifty", span="97-97", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_33 [label=Exception, span="104-104", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_35 [label="Exit QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", span="65-65", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="MacdAlphaModelTests.cs"];
m17_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="673-673", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="MacdAlphaModelTests.cs"];
m17_39 [label="Entry Unk.Min", span="", cluster="Unk.Min", file="MacdAlphaModelTests.cs"];
m17_43 [label="Entry QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", span="112-112", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", file="MacdAlphaModelTests.cs"];
m17_44 [label="Plot(''Nifty Closing Price'', today.NiftyPrice)", span="116-116", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", file="MacdAlphaModelTests.cs"];
m17_45 [label="Exit QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", span="112-112", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", file="MacdAlphaModelTests.cs"];
m17_46 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", span="115-115", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", file="MacdAlphaModelTests.cs"];
m17_38 [label="Entry Unk.Max", span="", cluster="Unk.Max", file="MacdAlphaModelTests.cs"];
m17_16 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.ExpectedInsights()", span="38-38", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.ExpectedInsights()", file="MacdAlphaModelTests.cs"];
m17_7 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.CreatePythonAlphaModel()", span="28-28", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.CreatePythonAlphaModel()", file="MacdAlphaModelTests.cs"];
m17_42 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="710-710", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="MacdAlphaModelTests.cs"];
m17_2 [label="SetEndDate(2014, 7, 25)", span="44-44", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="MacdAlphaModelTests.cs"];
m17_3 [label="SetCash(100000)", span="47-47", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="MacdAlphaModelTests.cs"];
m17_4 [label="AddData<DollarRupee>(''USDINR'')", span="50-50", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="MacdAlphaModelTests.cs", color=green, community=0];
m17_5 [label="AddData<Nifty>(''NIFTY'')", span="51-51", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="MacdAlphaModelTests.cs", color=green, community=0];
m17_6 [label="Exit QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", span="41-41", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="MacdAlphaModelTests.cs"];
m17_12 [label="today = new CorrelationPair(data.Time)", span="61-61", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", file="MacdAlphaModelTests.cs"];
m17_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="412-412", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="MacdAlphaModelTests.cs"];
m17_8 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="MacdAlphaModelTests.cs"];
m17_11 [label="Entry QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", span="59-59", cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", file="MacdAlphaModelTests.cs"];
m17_40 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="194-194", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="MacdAlphaModelTests.cs"];
m17_37 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="MacdAlphaModelTests.cs"];
m17_36 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="MacdAlphaModelTests.cs"];
m17_13 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.ExpectedInsights()", span="38-38", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.ExpectedInsights()", file="MacdAlphaModelTests.cs"];
m17_14 [label="var period = TimeSpan.FromDays(12)", span="40-40", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.ExpectedInsights()", file="MacdAlphaModelTests.cs"];
m17_41 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()", file="MacdAlphaModelTests.cs"];
m17_0 [label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.CreateCSharpAlphaModel()", span="26-26", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.CreateCSharpAlphaModel()", file="MacdAlphaModelTests.cs"];
m17_1 [label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.CreateCSharpAlphaModel()", span="26-26", cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.MacdAlphaModelTests.CreateCSharpAlphaModel()", file="MacdAlphaModelTests.cs"];
m17_87 [label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", span="", file="MacdAlphaModelTests.cs"];
m17_90 [label="QuantConnect.Algorithm.Examples.CorrelationPair", span="", file="MacdAlphaModelTests.cs"];
m19_147 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithmFramework.cs"];
m19_288 [label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120", cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="QCAlgorithmFramework.cs"];
m19_122 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="248-248", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m19_126 [label="Security security", span="254-254", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m19_127 [label="SecurityExchangeHours exchangeHours", span="255-255", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m19_128 [label="Securities.TryGetValue(insight.Symbol, out security)", span="256-256", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", color=green, community=0];
m19_130 [label="barSize = security.Resolution.ToTimeSpan()", span="259-259", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", color=green, community=0];
m19_131 [label="barSize = insight.Period.ToHigherResolutionEquivalent(false).ToTimeSpan()", span="263-263", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m19_129 [label="exchangeHours = security.Exchange.Hours", span="258-258", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", color=green, community=0];
m19_132 [label="exchangeHours = MarketHoursDatabase.GetExchangeHours(insight.Symbol.ID.Market, insight.Symbol, insight.Symbol.SecurityType)", span="264-264", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs"];
m19_74 [label=i, span="132-132", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_203 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="QCAlgorithmFramework.cs"];
m19_110 [label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="352-352", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_111 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_112 [label="var security = Securities[symbol]", span="365-365", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_60 [label="var ticket = Transactions.AddOrder(request)", span="230-230", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_58 [label="preOrderCheckResponse.IsError", span="224-224", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_164 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_165 [label="return Order(strategy, Math.Abs(quantity) * -1);", span="533-533", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_166 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_17 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="90-90", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m19_18 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="276-276", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_19 [label="Entry QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="QCAlgorithmFramework.cs"];
m19_67 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1727-1727", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithmFramework.cs"];
m19_324 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="857-857", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithmFramework.cs"];
m19_325 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="859-859", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithmFramework.cs"];
m19_326 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="857-857", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithmFramework.cs"];
m19_0 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="77-77", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m19_1 [label="_securityValuesProvider = new AlgorithmSecurityValuesProvider(this)", span="79-79", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m19_2 [label="Execution = new ImmediateExecutionModel()", span="82-82", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m19_69 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1007-1007", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m19_133 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_136 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_134 [label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="434-434", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_123 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_124 [label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="399-399", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_135 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_137 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_125 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_138 [label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="448-448", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_169 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_170 [label="var orders = new List<OrderTicket>()", span="549-549", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_171 [label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="552-552", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_172 [label="strategy.OptionLegs != null", span="555-555", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_173 [label="strategy.OptionLegs", span="557-557", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_174 [label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="559-562", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_176 [label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="566-567", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_181 [label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="576-576", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_184 [label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="580-580", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_187 [label="strategy.UnderlyingLegs != null", span="590-590", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_188 [label="strategy.UnderlyingLegs", span="592-592", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_189 [label="!Securities.ContainsKey(strategy.Underlying)", span="594-594", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_190 [label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="596-596", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_194 [label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="603-603", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_197 [label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="607-607", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_182 [label="orders.Add(marketOrder)", span="577-577", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_185 [label="orders.Add(limitOrder)", span="581-581", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_195 [label="orders.Add(marketOrder)", span="604-604", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_198 [label="orders.Add(limitOrder)", span="608-608", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_200 [label="return orders;", span="615-615", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_179 [label="optionLeg.OrderType", span="573-573", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_186 [label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="584-584", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_175 [label="optionSeq.Count() != 1", span="564-564", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_178 [label="var option = optionSeq.First().Key", span="571-571", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_177 [label="throw new InvalidOperationException(error);", span="568-568", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_180 [label="OrderType.Market", span="575-575", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_183 [label="OrderType.Limit", span="579-579", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_192 [label="underlyingLeg.OrderType", span="600-600", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_199 [label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="611-611", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_191 [label="throw new InvalidOperationException(error);", span="597-597", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_193 [label="OrderType.Market", span="602-602", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_196 [label="OrderType.Limit", span="606-606", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_201 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_284 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="QCAlgorithmFramework.cs"];
m19_205 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="QCAlgorithmFramework.cs"];
m19_217 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="QCAlgorithmFramework.cs"];
m19_107 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_108 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_109 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_345 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="938-938", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_349 [label="var security = Securities[symbol]", span="940-940", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_352 [label="var targetPortfolioValue = target * Portfolio.TotalPortfolioValue", span="946-946", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_350 [label="security.Price == 0", span="943-943", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_353 [label="return security.BuyingPowerModel.GetMaximumOrderQuantityForTargetValue(Portfolio, security, targetPortfolioValue);", span="948-948", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_351 [label="return 0;", span="943-943", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_354 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="938-938", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_66 [label="Entry QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", span="30-30", cluster="QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="QCAlgorithmFramework.cs"];
m19_62 [label="Transactions.WaitForOrder(ticket.OrderId)", span="235-235", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_376 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="QCAlgorithmFramework.cs"];
m19_33 [label="return MarketOrder(symbol, (decimal)quantity);", span="138-138", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithmFramework.cs"];
m19_55 [label=IsWarmingUp, span="217-217", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m19_46 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithmFramework.cs"];
m19_54 [label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag, DefaultOrderProperties?.Clone())", span="214-214", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m19_56 [label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="219-219", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m19_53 [label="return mooTicket;", span="211-211", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_34 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithmFramework.cs"];
m19_36 [label="return MarketOrder(symbol, quantity);", span="147-147", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_37 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_38 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_39 [label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="160-160", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_41 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithmFramework.cs"];
m19_43 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithmFramework.cs"];
m19_45 [label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="186-186", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithmFramework.cs"];
m19_48 [label="!security.Exchange.ExchangeOpen", span="203-203", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_50 [label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="206-206", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_52 [label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="209-209", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_44 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithmFramework.cs"];
m19_47 [label="var security = Securities[symbol]", span="199-199", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_51 [label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="207-207", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_35 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_40 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_42 [label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="173-173", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithmFramework.cs"];
m19_49 [label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="205-205", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_57 [label="var preOrderCheckResponse = PreOrderChecks(request)", span="223-223", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_210 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="QCAlgorithmFramework.cs"];
m19_119 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_120 [label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="386-386", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_121 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_214 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithmFramework.cs"];
m19_320 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithmFramework.cs"];
m19_321 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="846-846", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithmFramework.cs"];
m19_322 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithmFramework.cs"];
m19_283 [label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154", cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="QCAlgorithmFramework.cs"];
m19_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_91 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_92 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_93 [label="t.ToString()", span="180-180", cluster="lambda expression", file="QCAlgorithmFramework.cs", color=green, community=0];
m19_3 [label="RiskManagement = new NullRiskManagementModel()", span="83-83", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m19_327 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithmFramework.cs"];
m19_328 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="872-872", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithmFramework.cs"];
m19_329 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithmFramework.cs"];
m19_95 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_96 [label=t, span="180-180", cluster="lambda expression", file="QCAlgorithmFramework.cs", color=green, community=0];
m19_97 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_12 [label=DebugMode, span="99-99", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m19_8 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="90-90", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m19_204 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="QCAlgorithmFramework.cs"];
m19_287 [label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0", cluster="System.DateTime.Subtract(System.TimeSpan)", file="QCAlgorithmFramework.cs"];
m19_310 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="269-269", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m19_64 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_202 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithmFramework.cs"];
m19_163 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_167 [label="return GenerateOrders(strategy, quantity);", span="544-544", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_168 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_65 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="QCAlgorithmFramework.cs"];
m19_84 [label="t.ToString()", span="171-171", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_85 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_86 [label="Entry lambda expression", span="171-171", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_88 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_89 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_87 [label=t, span="171-171", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_90 [label="pt.Symbol", span="176-176", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_75 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_76 [label="Entry lambda expression", span="153-153", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_77 [label="t.ToString()", span="153-153", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_219 [label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="559-562", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_218 [label="Entry lambda expression", span="559-562", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_220 [label="Exit lambda expression", span="559-562", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_313 [label="Entry lambda expression", span="774-774", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_314 [label="x.Value", span="774-774", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_315 [label="Exit lambda expression", span="774-774", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m19_94 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_24 [label="return Order(symbol, (decimal)Math.Abs(quantity) * -1m);", span="109-109", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithmFramework.cs"];
m19_23 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithmFramework.cs"];
m19_25 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithmFramework.cs"];
m19_29 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_70 [label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="444-444", cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_73 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_80 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithmFramework.cs"];
m19_83 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithmFramework.cs"];
m19_78 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithmFramework.cs"];
m19_31 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_30 [label="return Order(symbol, (decimal)quantity);", span="129-129", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_72 [label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="435-435", cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="QCAlgorithmFramework.cs"];
m19_71 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_82 [label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="262-262", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithmFramework.cs"];
m19_81 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithmFramework.cs"];
m19_323 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_330 [label="Security security", span="888-888", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_331 [label="!Securities.TryGetValue(symbol, out security)", span="889-889", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_332 [label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="891-891", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_334 [label=liquidateExistingHoldings, span="896-896", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_338 [label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="902-902", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_340 [label="Order(holdingSymbol, liquidationQuantity, false, tag)", span="906-906", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_341 [label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="912-912", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_343 [label="MarketOrder(symbol, quantity, false, tag)", span="915-915", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_333 [label="return;", span="892-892", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_335 [label=Portfolio, span="898-898", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_336 [label="var holdingSymbol = kvp.Key", span="900-900", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_337 [label="var holdings = kvp.Value", span="901-901", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_339 [label="var liquidationQuantity = CalculateOrderQuantity(holdingSymbol, 0m)", span="905-905", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_342 [label="Math.Abs(quantity) > 0", span="913-913", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_344 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_362 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="986-986", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithmFramework.cs"];
m19_363 [label="return Order(symbol, (decimal)quantity);", span="988-988", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithmFramework.cs"];
m19_364 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="986-986", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithmFramework.cs"];
m19_113 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="225-225", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="QCAlgorithmFramework.cs"];
m19_114 [label="PortfolioConstruction = portfolioConstruction", span="227-227", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="QCAlgorithmFramework.cs"];
m19_116 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="234-234", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs"];
m19_117 [label="Execution = execution", span="236-236", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs"];
m19_115 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="225-225", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="QCAlgorithmFramework.cs"];
m19_118 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="234-234", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs"];
m19_286 [label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238", cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m19_79 [label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="250-250", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithmFramework.cs"];
m19_106 [label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="339-339", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_226 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_228 [label=IsWarmingUp, span="642-642", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_229 [label="return OrderResponse.WarmingUp(request);", span="644-644", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_231 [label="!Securities.TryGetValue(request.Symbol, out security)", span="650-650", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_232 [label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="652-652", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_233 [label="request.Quantity == 0", span="656-656", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_234 [label="return OrderResponse.ZeroQuantity(request);", span="658-658", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_235 [label="Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="661-661", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_236 [label="return OrderResponse.Error(request, OrderResponseErrorCode.OrderQuantityLessThanLoteSize, $''Unable to {request.OrderRequestType.ToString().ToLower()} order with id {request.OrderId} which quantity ({Math.Abs(request.Quantity)}) is less than lot size ({security.SymbolProperties.LotSize}).'');", span="663-663", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_238 [label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="668-668", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_240 [label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="674-674", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_241 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="676-676", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_242 [label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="680-680", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_243 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="682-682", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_245 [label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="687-687", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_249 [label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="695-695", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_251 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="699-699", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_256 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="709-709", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_258 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="713-713", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_260 [label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="720-720", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_263 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="727-727", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_264 [label="request.OrderType == OrderType.OptionExercise", span="730-730", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_266 [label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="733-733", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_268 [label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="736-736", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_269 [label="request.Quantity > security.Holdings.Quantity", span="738-738", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_270 [label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="739-739", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_271 [label="request.Quantity <= 0.0m", span="741-741", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_272 [label="OrderResponse.ZeroQuantity(request)", span="742-742", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_273 [label="request.OrderType == OrderType.MarketOnClose", span="745-745", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_277 [label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="755-755", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_278 [label="return OrderResponse.Success(request);", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_230 [label="Security security", span="649-649", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_237 [label="!security.IsTradable", span="666-666", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_239 [label="var price = security.Price", span="671-671", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_247 [label="var quoteCurrency = security.QuoteCurrency.Symbol", span="692-692", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_250 [label="security.QuoteCurrency.ConversionRate == 0m", span="697-697", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_252 [label="security.Type == SecurityType.Forex || security.Type == SecurityType.Crypto", span="703-703", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_254 [label="var baseCurrency = ((IBaseCurrencySymbol)security).BaseCurrencySymbol", span="706-706", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_259 [label="!security.HasData", span="718-718", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_265 [label="security.Type != SecurityType.Option", span="732-732", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_267 [label="security.Holdings.IsShort", span="735-735", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_274 [label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="747-747", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_276 [label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="750-750", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_244 [label="price == 0", span="685-685", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_246 [label="Cash quoteCash", span="691-691", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_248 [label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="693-693", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_253 [label="Cash baseCash", span="705-705", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_255 [label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="707-707", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_257 [label="baseCash.ConversionRate == 0m", span="711-711", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_261 [label="Transactions.OrdersCount > _maxOrders", span="724-724", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_262 [label="Status = AlgorithmStatus.Stopped", span="726-726", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_275 [label="var latestSubmissionTime = nextMarketClose.Subtract(Orders.MarketOnCloseOrder.DefaultSubmissionTimeBuffer)", span="749-749", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_279 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_365 [label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="996-996", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m19_366 [label="var exchangeHours = MarketHoursDatabase\r\n                .FromDataFolder()\r\n                .GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType)", span="998-1000", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m19_367 [label="var time = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="1002-1002", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m19_368 [label="return exchangeHours.IsOpen(time, false);", span="1004-1004", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m19_369 [label="Exit QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="996-996", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m19_98 [label="var security = Securities[symbol]", span="318-318", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_99 [label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag, DefaultOrderProperties?.Clone())", span="319-319", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_100 [label="var response = PreOrderChecks(request)", span="320-320", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_101 [label="response.IsError", span="321-321", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_102 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="323-323", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_103 [label="return Transactions.AddOrder(request);", span="326-326", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_104 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_105 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_16 [label="base.PostInitialize()", span="112-112", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m19_32 [label="Entry QuantConnect.Symbol.ToString()", span="375-375", cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithmFramework.cs"];
m19_28 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_207 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="QCAlgorithmFramework.cs"];
m19_216 [label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122", cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m19_356 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="962-962", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithmFramework.cs"];
m19_357 [label="return Order(symbol, quantity, asynchronous, tag);", span="964-964", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithmFramework.cs"];
m19_358 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="962-962", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithmFramework.cs"];
m19_26 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_309 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithmFramework.cs"];
m19_148 [label="var option = (Option)Securities[optionSymbol]", span="483-483", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithmFramework.cs"];
m19_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_10 [label="return Order(symbol, Math.Abs(quantity));", span="64-64", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_11 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithmFramework.cs"];
m19_14 [label="return Order(symbol, (decimal)Math.Abs(quantity));", span="75-75", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithmFramework.cs"];
m19_15 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithmFramework.cs"];
m19_355 [label="Entry QuantConnect.Securities.IBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="57-57", cluster="QuantConnect.Securities.IBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="QCAlgorithmFramework.cs"];
m19_221 [label="var response = PreOrderChecksImpl(request)", span="627-627", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_222 [label="response.IsError", span="628-628", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_223 [label="Error(response.ErrorMessage)", span="630-630", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_224 [label="return response;", span="632-632", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_225 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithmFramework.cs"];
m19_59 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="226-226", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_215 [label="Entry Unk.LimitOrder", span="", cluster="Unk.LimitOrder", file="QCAlgorithmFramework.cs"];
m19_145 [label="return Transactions.AddOrder(request);", span="471-471", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_372 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="605-605", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithmFramework.cs"];
m19_373 [label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124", cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="QCAlgorithmFramework.cs"];
m19_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1724-1724", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithmFramework.cs"];
m19_22 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="501-501", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithmFramework.cs"];
m19_27 [label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithmFramework.cs"];
m19_213 [label="Entry Unk.MarketOrder", span="", cluster="Unk.MarketOrder", file="QCAlgorithmFramework.cs"];
m19_370 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithmFramework.cs"];
m19_143 [label="response.IsError", span="465-465", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_227 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1752-1752", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithmFramework.cs"];
m19_285 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="235-235", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithmFramework.cs"];
m19_161 [label="return Order(strategy, Math.Abs(quantity));", span="522-522", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_206 [label="Entry QuantConnect.Symbol.ToString()", span="354-354", cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithmFramework.cs"];
m19_68 [label="Entry System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", span="264-264", cluster="System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", file="QCAlgorithmFramework.cs"];
m19_160 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_162 [label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span="", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithmFramework.cs"];
m19_61 [label="!asynchronous", span="233-233", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m19_139 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_359 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="974-974", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithmFramework.cs"];
m19_360 [label="return Order(symbol, quantity);", span="976-976", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithmFramework.cs"];
m19_361 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="974-974", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithmFramework.cs"];
m19_282 [label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128", cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="QCAlgorithmFramework.cs"];
m19_140 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues.Get(QuantConnect.Algorithm.Framework.Alphas.InsightType)", span="89-89", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues.Get(QuantConnect.Algorithm.Framework.Alphas.InsightType)", file="QCAlgorithmFramework.cs"];
m19_141 [label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="463-463", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithmFramework.cs"];
m19_142 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724", cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithmFramework.cs"];
m19_144 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs"];
m19_146 [label="Entry QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="195-195", cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="QCAlgorithmFramework.cs"];
m19_280 [label="Entry QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", span="164-164", cluster="QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", file="QCAlgorithmFramework.cs"];
m19_5 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_149 [label="UniverseSelection == null", span="278-278", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_156 [label="throw new Exception($''Framework algorithms must specify an execution model using the '{nameof(Execution)}' property.'');", span="292-292", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_150 [label="throw new Exception($''Framework algorithms must specify a portfolio selection model using the '{nameof(UniverseSelection)}' property.'');", span="280-280", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_151 [label="Alpha == null", span="282-282", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_152 [label="throw new Exception($''Framework algorithms must specify a alpha model using the '{nameof(Alpha)}' property.'');", span="284-284", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_154 [label="throw new Exception($''Framework algorithms must specify a portfolio construction model using the '{nameof(PortfolioConstruction)}' property'');", span="288-288", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_155 [label="Execution == null", span="290-290", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_153 [label="PortfolioConstruction == null", span="286-286", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_157 [label="RiskManagement == null", span="294-294", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_158 [label="throw new Exception($''Framework algorithms must specify an risk management model using the '{nameof(RiskManagement)}' property.'');", span="296-296", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_159 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="276-276", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m19_316 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="829-829", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithmFramework.cs"];
m19_317 [label="!_locked", span="831-831", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithmFramework.cs"];
m19_318 [label="_maxOrders = max", span="833-833", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithmFramework.cs"];
m19_319 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="829-829", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithmFramework.cs"];
m19_212 [label="Entry Unk.First", span="", cluster="Unk.First", file="QCAlgorithmFramework.cs"];
m19_311 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="225-225", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithmFramework.cs"];
m19_209 [label="Entry System.DateTime.ToString()", span="0-0", cluster="System.DateTime.ToString()", file="QCAlgorithmFramework.cs"];
m19_4 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="77-77", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m19_7 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_346 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="925-925", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_347 [label="return CalculateOrderQuantity(symbol, (decimal)target);", span="927-927", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_348 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="925-925", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithmFramework.cs"];
m19_63 [label="Entry Unk.OnInsightsGenerated", span="", cluster="Unk.OnInsightsGenerated", file="QCAlgorithmFramework.cs"];
m19_6 [label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", span="26-26", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", file="QCAlgorithmFramework.cs"];
m19_211 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="QCAlgorithmFramework.cs"];
m19_281 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithmFramework.cs"];
m19_289 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_290 [label="var orderIdList = new List<int>()", span="772-772", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_292 [label="symbol != symbolToLiquidate && symbolToLiquidate != null", span="777-777", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_302 [label="Transactions.CancelOrder(order.Id, tag)", span="806-806", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_304 [label="var ticket = Order(symbol, -quantity - marketOrdersQuantity, tag: tag)", span="814-814", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_291 [label="Securities.Keys.OrderBy(x => x.Value)", span="774-774", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_306 [label="orderIdList.Add(ticket.OrderId)", span="817-817", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_307 [label="return orderIdList;", span="822-822", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_293 [label="var orders = Transactions.GetOpenOrders(symbol)", span="781-781", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_294 [label="var quantity = Portfolio[symbol].Quantity", span="784-784", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_295 [label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="787-787", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_297 [label=orders, span="792-792", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_303 [label="quantity != 0", span="811-811", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_296 [label="var marketOrdersQuantity = 0m", span="791-791", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_301 [label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="801-801", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_298 [label="order.Type == OrderType.Market", span="794-794", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_299 [label="var ticket = Transactions.GetOrderTicket(order.Id)", span="797-797", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_300 [label="ticket != null", span="798-798", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_305 [label="ticket.Status == OrderStatus.Filled", span="815-815", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_308 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs"];
m19_374 [label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag, properties);", span="1009-1009", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m19_375 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1007-1007", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithmFramework.cs"];
m19_371 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs"];
m19_312 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="173-173", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithmFramework.cs"];
m19_208 [label="Entry decimal.ToString()", span="0-0", cluster="decimal.ToString()", file="QCAlgorithmFramework.cs"];
m19_377 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="QCAlgorithmFramework.cs"];
m19_378 [label="QuantConnect.Securities.Option.OptionStrategy", span="", file="QCAlgorithmFramework.cs"];
m19_379 [label=optionLeg, span="", file="QCAlgorithmFramework.cs"];
m20_17 [label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_0 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="91-91", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RegressionTests.cs"];
m20_8 [label="_algorithm.Securities.Values", span="113-113", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", file="RegressionTests.cs"];
m20_7 [label="ClearEvents()", span="109-109", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", file="RegressionTests.cs"];
m20_9 [label="Log.Debug(''BacktestingRealTimeHandler.SetupEvents(): Adding End of Day: '' + security.Exchange.MarketClose.Add(TimeSpan.FromMinutes(-10)))", span="116-116", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", file="RegressionTests.cs"];
m20_3 [label="_job = job", span="96-96", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RegressionTests.cs"];
m20_6 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", span="106-106", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", file="RegressionTests.cs"];
m20_10 [label="var closingToday = date.Date + security.Exchange.MarketClose.Add(TimeSpan.FromMinutes(-10))", span="119-119", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", file="RegressionTests.cs"];
m20_1 [label="_algorithm = algorithm", span="94-94", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RegressionTests.cs"];
m20_2 [label="_events = new List<RealTimeEvent>()", span="95-95", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RegressionTests.cs"];
m20_4 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="91-91", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RegressionTests.cs"];
m20_5 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs"];
m20_11 [label="AddEvent(new RealTimeEvent( closingToday, () =>\r\n                {\r\n                    try\r\n                    {\r\n                        _algorithm.OnEndOfDay();\r\n                        _algorithm.OnEndOfDay(security.Symbol);\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                        Log.Error(''BacktestingRealTimeHandler.SetupEvents(): EOD: '' + err.Message);\r\n                    }\r\n                }))", span="121-133", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", file="RegressionTests.cs"];
m20_45 [label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.17%''},\r\n                {''Compounding Annual Return'', ''-99.993%''},\r\n                {''Drawdown'', ''3.800%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-2.577%''},\r\n                {''Sharpe Ratio'', ''-15.89''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-5.559''},\r\n                {''Beta'', ''333.506''},\r\n                {''Annual Standard Deviation'', ''0.205''},\r\n                {''Annual Variance'', ''0.042''},\r\n                {''Information Ratio'', ''-15.972''},\r\n                {''Tracking Error'', ''0.204''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$96.51''}\r\n            }", span="688-709", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_15 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="RegressionTests.cs"];
m20_57 [label="_time = time", span="205-205", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="RegressionTests.cs"];
m20_14 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="RegressionTests.cs"];
m20_12 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", span="106-106", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", file="RegressionTests.cs"];
m20_58 [label="ScanEvents()", span="209-209", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="RegressionTests.cs"];
m20_21 [label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="136-157", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_23 [label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="182-203", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_24 [label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="205-226", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_19 [label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="77-98", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_20 [label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$151474.9016''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$24404.2897''},\r\n                {''Mean Population Estimated Insight Value'', ''$246.508''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''}\r\n            }", span="100-134", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_22 [label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="159-180", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_25 [label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="228-249", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_59 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", span="191-191", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="RegressionTests.cs"];
m20_60 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", span="215-215", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", file="RegressionTests.cs"];
m20_29 [label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="320-341", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_55 [label="ScanEvents()", span="198-198", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="RegressionTests.cs"];
m20_63 [label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", span="", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m20_64 [label=security, span="", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m20_65 [label="Language = language", span="980-980", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m20_66 [label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="976-976", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m20_27 [label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="274-295", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_61 [label="_exitTriggered = true", span="217-217", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", file="RegressionTests.cs"];
m20_53 [label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_54 [label="_time.Date != time.Date", span="194-194", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="RegressionTests.cs"];
m20_56 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RegressionTests.cs"];
m20_16 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="148-148", cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="RegressionTests.cs"];
m20_42 [label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="619-640", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_30 [label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="343-364", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_31 [label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="366-387", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_32 [label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="389-410", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_52 [label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateIntrinioEconomicData'', basicTemplateIntrinioEconomicData, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DuplicateSecurityWithBenchmarkRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CancelOpenOrdersRegressionAlgorithm'', cancelOpenOrdersRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ScheduledUniverseSelectionModelRegressionAlgorithm'', scheduledUniverseSelectionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ScheduledUniverseSelectionModelRegressionAlgorithm'', scheduledUniverseSelectionModelRegressionAlgorithmStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="888-966", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", color=green, community=0];
m20_46 [label="var indicatorSuiteAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''19.097%''},\r\n                {''Drawdown'', ''7.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''41.840%''},\r\n                {''Sharpe Ratio'', ''1.639''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.29''},\r\n                {''Beta'', ''-5.494''},\r\n                {''Annual Standard Deviation'', ''0.11''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''1.457''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''-0.033''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="711-732", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_47 [label="var basicTemplateIntrinioEconomicData = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''89''},\r\n                {''Average Win'', ''0.09%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''5.704%''},\r\n                {''Drawdown'', ''4.800%''},\r\n                {''Expectancy'', ''1.469''},\r\n                {''Net Profit'', ''24.865%''},\r\n                {''Sharpe Ratio'', ''1.143''},\r\n                {''Loss Rate'', ''70%''},\r\n                {''Win Rate'', ''30%''},\r\n                {''Profit-Loss Ratio'', ''7.23''},\r\n                {''Alpha'', ''0.065''},\r\n                {''Beta'', ''-0.522''},\r\n                {''Annual Standard Deviation'', ''0.048''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''0.74''},\r\n                {''Tracking Error'', ''0.048''},\r\n                {''Treynor Ratio'', ''-0.105''},\r\n                {''Total Fees'', ''$100.58''}\r\n            }", span="734-755", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_48 [label="var volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''61''},\r\n                {''Average Win'', ''0.10%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''585.503%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.492%''},\r\n                {''Sharpe Ratio'', ''9.136''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''113.313''},\r\n                {''Annual Standard Deviation'', ''0.137''},\r\n                {''Annual Variance'', ''0.019''},\r\n                {''Information Ratio'', ''9.063''},\r\n                {''Tracking Error'', ''0.137''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$96.79''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$54250.3481''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$8740.3339''},\r\n                {''Mean Population Estimated Insight Value'', ''$2913.4446''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="757-791", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_49 [label="var standardDeviationExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''63''},\r\n                {''Average Win'', ''0.06%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''793.499%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.840%''},\r\n                {''Sharpe Ratio'', ''10.781''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''128.815''},\r\n                {''Annual Standard Deviation'', ''0.132''},\r\n                {''Annual Variance'', ''0.017''},\r\n                {''Information Ratio'', ''10.71''},\r\n                {''Tracking Error'', ''0.132''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$76.61''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$54250.3481''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$8740.3339''},\r\n                {''Mean Population Estimated Insight Value'', ''$2913.4446''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="793-827", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_50 [label="var cancelOpenOrdersRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-3.339%''},\r\n                {''Sharpe Ratio'', ''-11.206''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-8.422''},\r\n                {''Beta'', ''610.348''},\r\n                {''Annual Standard Deviation'', ''0.375''},\r\n                {''Annual Variance'', ''0.141''},\r\n                {''Information Ratio'', ''-11.243''},\r\n                {''Tracking Error'', ''0.375''},\r\n                {''Treynor Ratio'', ''-0.007''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="829-850", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_51 [label="var scheduledUniverseSelectionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''17''},\r\n                {''Average Win'', ''0.26%''},\r\n                {''Average Loss'', ''-0.11%''},\r\n                {''Compounding Annual Return'', ''26.961%''},\r\n                {''Drawdown'', ''0.700%''},\r\n                {''Expectancy'', ''1.895''},\r\n                {''Net Profit'', ''2.115%''},\r\n                {''Sharpe Ratio'', ''4.218''},\r\n                {''Loss Rate'', ''12%''},\r\n                {''Win Rate'', ''88%''},\r\n                {''Profit-Loss Ratio'', ''2.31''},\r\n                {''Alpha'', ''0.327''},\r\n                {''Beta'', ''-9.439''},\r\n                {''Annual Standard Deviation'', ''0.043''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''3.864''},\r\n                {''Tracking Error'', ''0.043''},\r\n                {''Treynor Ratio'', ''-0.019''},\r\n                {''Total Fees'', ''$0.00''},\r\n                {''Total Insights Generated'', ''54''},\r\n                {''Total Insights Closed'', ''52''},\r\n                {''Total Insights Analysis Completed'', ''46''},\r\n                {''Long Insight Count'', ''54''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$0''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$0''},\r\n                {''Mean Population Estimated Insight Value'', ''$0''},\r\n                {''Mean Population Direction'', ''43.4783%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''65.5952%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="852-886", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_13 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ClearEvents()", span="170-170", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ClearEvents()", file="RegressionTests.cs"];
m20_62 [label="Entry Unk.SetName", span="", cluster="Unk.SetName", file="RegressionTests.cs"];
m20_35 [label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="458-479", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_18 [label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="54-75", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_33 [label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.288''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.105''},\r\n                {''Beta'', ''-46.73''},\r\n                {''Annual Standard Deviation'', ''0.235''},\r\n                {''Annual Variance'', ''0.055''},\r\n                {''Information Ratio'', ''-3.366''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''0.017''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="412-433", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_34 [label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="435-456", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_26 [label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="251-272", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_36 [label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="481-502", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_37 [label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="504-525", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_38 [label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="527-548", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_39 [label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="550-571", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_40 [label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="573-594", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_41 [label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="596-617", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_43 [label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="642-663", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_44 [label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="665-686", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m20_28 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="RegressionTests.cs"];
m20_67 [label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span="", file="RegressionTests.cs"];
m21_56 [label="Entry decimal.Decimal(double)", span="0-0", cluster="decimal.Decimal(double)", file="RenkoConsolidator.cs"];
m21_9 [label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56", cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="RenkoConsolidator.cs"];
m21_10 [label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="75-75", cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", file="RenkoConsolidator.cs"];
m21_53 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="RenkoConsolidator.cs"];
m21_11 [label="Entry QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>, System.Action)", span="55-55", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>, System.Action)", file="RenkoConsolidator.cs"];
m21_2 [label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="RenkoConsolidator.cs"];
m21_3 [label="_k = k", span="83-83", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="RenkoConsolidator.cs"];
m21_4 [label="AverageTrueRange = new AverageTrueRange(name + ''_AverageTrueRange'', period, MovingAverageType.Simple)", span="86-86", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="RenkoConsolidator.cs"];
m21_5 [label="MiddleBand = movingAverageType.AsIndicator(name + ''_MiddleBand'', period)", span="87-87", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="RenkoConsolidator.cs"];
m21_6 [label="LowerBand = new FunctionalIndicator<TradeBar>(name + ''_LowerBand'',\r\n                input => ComputeLowerBand(),\r\n                lowerBand => MiddleBand.IsReady,\r\n                () => MiddleBand.Reset()\r\n                )", span="90-94", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="RenkoConsolidator.cs"];
m21_7 [label="UpperBand = new FunctionalIndicator<TradeBar>(name + ''_UpperBand'',\r\n                input => ComputeUpperBand(),\r\n                upperBand => MiddleBand.IsReady,\r\n                () => MiddleBand.Reset()\r\n                )", span="97-101", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="RenkoConsolidator.cs"];
m21_8 [label="Exit QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="RenkoConsolidator.cs"];
m21_50 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="RenkoConsolidator.cs"];
m21_33 [label="Entry QuantConnect.Indicators.KeltnerChannels.Reset()", span="115-115", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", file="RenkoConsolidator.cs"];
m21_34 [label="AverageTrueRange.Reset()", span="117-117", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", color=green, community=0, file="RenkoConsolidator.cs"];
m21_35 [label="MiddleBand.Reset()", span="118-118", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", color=green, community=0, file="RenkoConsolidator.cs"];
m21_36 [label="UpperBand.Reset()", span="119-119", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", color=green, community=0, file="RenkoConsolidator.cs"];
m21_37 [label="LowerBand.Reset()", span="120-120", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", color=green, community=0, file="RenkoConsolidator.cs"];
m21_38 [label="base.Reset()", span="121-121", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", color=green, community=0, file="RenkoConsolidator.cs"];
m21_39 [label="Exit QuantConnect.Indicators.KeltnerChannels.Reset()", span="115-115", cluster="QuantConnect.Indicators.KeltnerChannels.Reset()", file="RenkoConsolidator.cs"];
m21_49 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="RenkoConsolidator.cs"];
m21_51 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="RenkoConsolidator.cs"];
m21_26 [label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", span="154-154", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", file="RenkoConsolidator.cs"];
m21_57 [label="return MiddleBand.IsReady ? MiddleBand + AverageTrueRange*_k : new decimal(0.0);", span="156-156", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", color=green, community=0, file="RenkoConsolidator.cs"];
m21_58 [label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", span="154-154", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeUpperBand()", file="RenkoConsolidator.cs"];
m21_22 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="102-102", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="RenkoConsolidator.cs"];
m21_15 [label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", span="146-146", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", file="RenkoConsolidator.cs"];
m21_54 [label="return MiddleBand.IsReady ? MiddleBand - AverageTrueRange*_k : new decimal(0.0);", span="148-148", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", color=green, community=0, file="RenkoConsolidator.cs"];
m21_55 [label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", span="146-146", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeLowerBand()", file="RenkoConsolidator.cs"];
m21_40 [label="Entry QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="129-129", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="RenkoConsolidator.cs"];
m21_41 [label="AverageTrueRange.Update(input)", span="131-131", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="RenkoConsolidator.cs"];
m21_42 [label="var typicalPrice = (input.High + input.Low + input.Close)/3m", span="133-133", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="RenkoConsolidator.cs"];
m21_43 [label="MiddleBand.Update(input.Time, typicalPrice)", span="134-134", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="RenkoConsolidator.cs"];
m21_44 [label="Console.WriteLine(input.Time.ToString(''yyyymmdd'') + ''\t'' + typicalPrice.SmartRounding() + ''\t'' + MiddleBand.Current.Value.SmartRounding())", span="135-135", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="RenkoConsolidator.cs"];
m21_45 [label="LowerBand.Update(input)", span="138-138", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="RenkoConsolidator.cs"];
m21_46 [label="UpperBand.Update(input)", span="139-139", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="RenkoConsolidator.cs"];
m21_47 [label="return MiddleBand;", span="140-140", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="RenkoConsolidator.cs"];
m21_48 [label="Exit QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="129-129", cluster="QuantConnect.Indicators.KeltnerChannels.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="RenkoConsolidator.cs"];
m21_52 [label="Entry decimal.SmartRounding()", span="173-173", cluster="decimal.SmartRounding()", file="RenkoConsolidator.cs"];
m21_30 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_13 [label="ComputeLowerBand()", span="91-91", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_17 [label="MiddleBand.IsReady", span="92-92", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_20 [label="MiddleBand.Reset()", span="93-93", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_24 [label="ComputeUpperBand()", span="98-98", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_28 [label="MiddleBand.IsReady", span="99-99", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_31 [label="MiddleBand.Reset()", span="100-100", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_12 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_14 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_16 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_18 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_19 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_21 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_23 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_25 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_27 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_29 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_32 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="RenkoConsolidator.cs"];
m21_59 [label="QuantConnect.Indicators.KeltnerChannels", span="", file="RenkoConsolidator.cs"];
m23_26 [label="Entry QuantConnect.Securities.SecurityHolding.SetLeverage(decimal)", span="396-396", cluster="QuantConnect.Securities.SecurityHolding.SetLeverage(decimal)", file="RsiAlphaModelTests.cs"];
m23_27 [label="_leverage = leverage", span="398-398", cluster="QuantConnect.Securities.SecurityHolding.SetLeverage(decimal)", file="RsiAlphaModelTests.cs"];
m23_28 [label="Exit QuantConnect.Securities.SecurityHolding.SetLeverage(decimal)", span="396-396", cluster="QuantConnect.Securities.SecurityHolding.SetLeverage(decimal)", file="RsiAlphaModelTests.cs"];
m23_13 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="360-360", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="RsiAlphaModelTests.cs"];
m23_14 [label="_profit += profitLoss", span="362-362", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="RsiAlphaModelTests.cs"];
m23_15 [label="Exit QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="360-360", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="RsiAlphaModelTests.cs"];
m23_45 [label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="84-84", cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="RsiAlphaModelTests.cs"];
m23_29 [label="Entry QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", span="405-405", cluster="QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", file="RsiAlphaModelTests.cs"];
m23_30 [label="_price = closingPrice", span="407-407", cluster="QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", file="RsiAlphaModelTests.cs"];
m23_31 [label="Exit QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", span="405-405", cluster="QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", file="RsiAlphaModelTests.cs"];
m23_32 [label="Entry QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", span="414-414", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_33 [label="decimal gross = 0, net = 0", span="416-416", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_34 [label="decimal orderFee = 0", span="417-417", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_42 [label="net = gross - orderFee", span="440-440", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_35 [label="AbsoluteQuantity > 0", span="419-419", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_36 [label="orderFee = _model.GetOrderFee(AbsoluteQuantity, _price)", span="421-421", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_37 [label=IsLong, span="424-424", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_38 [label="gross = (_price - AveragePrice) * AbsoluteQuantity", span="427-427", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_39 [label=IsShort, span="429-429", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_40 [label="gross = (AveragePrice - _price) * AbsoluteQuantity", span="432-432", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_41 [label="return 0;", span="437-437", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_43 [label="return net;", span="442-442", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_44 [label="Exit QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", span="414-414", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="RsiAlphaModelTests.cs"];
m23_2 [label="Entry QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", span="62-62", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_3 [label="_model = transactionModel", span="64-64", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_4 [label="_symbol = symbol", span="65-65", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_5 [label="_leverage = leverage", span="66-66", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_6 [label="_securityType = type", span="67-67", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_7 [label="_totalSaleVolume = 0", span="69-69", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_8 [label="_lastTradeProfit = 0", span="70-70", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_9 [label="Exit QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", span="62-62", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, QuantConnect.SecurityType, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_0 [label="Entry QuantConnect.Securities.SecurityHolding.SecurityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", span="54-54", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_1 [label="Exit QuantConnect.Securities.SecurityHolding.SecurityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", span="54-54", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="RsiAlphaModelTests.cs"];
m23_22 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="386-386", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="RsiAlphaModelTests.cs"];
m23_23 [label="_averagePrice = averagePrice", span="388-388", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="RsiAlphaModelTests.cs"];
m23_24 [label="_quantity = quantity", span="389-389", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="RsiAlphaModelTests.cs"];
m23_25 [label="Exit QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="386-386", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="RsiAlphaModelTests.cs"];
m23_19 [label="Entry QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="378-378", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="RsiAlphaModelTests.cs"];
m23_20 [label="_lastTradeProfit = lastTradeProfit", span="380-380", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="RsiAlphaModelTests.cs"];
m23_21 [label="Exit QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="378-378", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="RsiAlphaModelTests.cs"];
m23_10 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="351-351", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="RsiAlphaModelTests.cs"];
m23_11 [label="_totalFees += newFee", span="353-353", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="RsiAlphaModelTests.cs"];
m23_12 [label="Exit QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="351-351", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="RsiAlphaModelTests.cs"];
m23_16 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="369-369", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="RsiAlphaModelTests.cs"];
m23_17 [label="_totalSaleVolume += saleValue", span="371-371", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="RsiAlphaModelTests.cs"];
m23_18 [label="Exit QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="369-369", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="RsiAlphaModelTests.cs"];
m23_46 [label="QuantConnect.Securities.SecurityHolding", span="", file="RsiAlphaModelTests.cs"];
m24_10 [label="Entry QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", span="124-124", cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="SerializedInsight.cs"];
m24_11 [label="Message = message", span="126-126", cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="SerializedInsight.cs"];
m24_12 [label="Data = data", span="127-127", cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="SerializedInsight.cs"];
m24_13 [label="Subject = subject", span="128-128", cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="SerializedInsight.cs"];
m24_14 [label="Address = address", span="129-129", cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="SerializedInsight.cs"];
m24_15 [label="Exit QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", span="124-124", cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="SerializedInsight.cs"];
m24_6 [label="Entry QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", span="84-84", cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="SerializedInsight.cs"];
m24_7 [label="PhoneNumber = number", span="86-86", cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="SerializedInsight.cs"];
m24_8 [label="Message = message", span="87-87", cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="SerializedInsight.cs"];
m24_9 [label="Exit QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", span="84-84", cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="SerializedInsight.cs"];
m24_0 [label="Entry QuantConnect.Notifications.Notification.Send()", span="31-31", cluster="QuantConnect.Notifications.Notification.Send()", file="SerializedInsight.cs"];
m24_1 [label="Exit QuantConnect.Notifications.Notification.Send()", span="31-31", cluster="QuantConnect.Notifications.Notification.Send()", file="SerializedInsight.cs"];
m24_2 [label="Entry QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", span="57-57", cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="SerializedInsight.cs"];
m24_3 [label="Address = address", span="59-59", cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="SerializedInsight.cs"];
m24_4 [label="Data = data", span="60-60", cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="SerializedInsight.cs"];
m24_5 [label="Exit QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", span="57-57", cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="SerializedInsight.cs"];
m24_16 [label="QuantConnect.Notifications.NotificationWeb", span="", file="SerializedInsight.cs"];
m24_17 [label="QuantConnect.Notifications.NotificationSms", span="", file="SerializedInsight.cs"];
m24_18 [label="QuantConnect.Notifications.NotificationEmail", span="", file="SerializedInsight.cs"];
m3_34 -> m3_37  [key=0, style=solid];
m3_34 -> m3_39  [key=0, style=solid];
m3_34 -> m3_41  [key=2, style=dotted];
m3_18 -> m3_19  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldEmitInsight"];
m3_18 -> m3_27  [key=0, style=solid];
m3_18 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_18 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m3_18 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m3_18 -> m3_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldEmitInsight"];
m3_18 -> m3_37  [key=0, style=solid];
m3_18 -> m3_39  [key=0, style=solid];
m3_18 -> m3_41  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_31  [key=0, style=solid];
m3_28 -> m3_34  [key=2, style=dotted];
m3_28 -> m3_37  [key=0, style=solid];
m3_28 -> m3_39  [key=0, style=solid];
m3_28 -> m3_41  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_29 -> m3_40  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_33  [key=0, style=solid];
m3_31 -> m3_40  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_29  [key=0, style=solid];
m3_27 -> m3_40  [key=2, style=dotted];
m3_30 -> m3_33  [key=0, style=solid];
m3_30 -> m3_37  [key=0, style=solid];
m3_30 -> m3_39  [key=0, style=solid];
m3_30 -> m3_41  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_37  [key=0, style=solid];
m3_32 -> m3_39  [key=0, style=solid];
m3_32 -> m3_41  [key=2, style=dotted];
m3_33 -> m3_18  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_35  [key=0, style=solid];
m3_33 -> m3_40  [key=2, style=dotted];
m3_26 -> m3_37  [key=0, style=solid];
m3_26 -> m3_39  [key=0, style=solid];
m3_26 -> m3_41  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_12  [key=2, style=dotted];
m3_25 -> m3_2  [key=3, color=darkorchid, style=bold, label="Field variable double? _confidence"];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=0, style=solid];
m3_25 -> m3_40  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=0, style=solid];
m3_11 -> m3_40  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_55 -> m3_53  [key=0, style=bold, color=blue];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_56  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_2  [key=0, style=bold, color=blue];
m3_12 -> m3_37  [key=0, style=solid];
m3_12 -> m3_39  [key=0, style=solid];
m3_12 -> m3_41  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid, color=green];
m3_13 -> m3_15  [key=0, style=solid];
m3_13 -> m3_40  [key=2, style=dotted];
m3_13 -> m3_16  [key=0, style=bold, color=green];
m3_14 -> m3_37  [key=0, style=solid];
m3_14 -> m3_39  [key=0, style=solid];
m3_14 -> m3_41  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid, color=green];
m3_14 -> m3_17  [key=0, style=solid, color=green];
m3_14 -> m3_16  [key=1, style=dashed, color=green, label=security];
m3_15 -> m3_16  [key=0, style=solid, color=green];
m3_15 -> m3_17  [key=0, style=solid];
m3_15 -> m3_40  [key=2, style=dotted];
m3_15 -> m3_14  [key=0, style=solid, color=green];
m3_15 -> m3_18  [key=2, style=dotted, color=green];
m3_16 -> m3_37  [key=0, style=solid];
m3_16 -> m3_39  [key=0, style=solid];
m3_16 -> m3_41  [key=2, style=dotted];
m3_16 -> m3_14  [key=0, style=solid, color=green];
m3_16 -> m3_19  [key=2, style=dotted, color=green];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=0, style=solid];
m3_17 -> m3_40  [key=2, style=dotted];
m3_17 -> m3_13  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=0, style=solid];
m3_19 -> m3_40  [key=2, style=dotted];
m3_20 -> m3_37  [key=0, style=solid];
m3_20 -> m3_39  [key=0, style=solid];
m3_20 -> m3_41  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=0, style=solid];
m3_21 -> m3_40  [key=2, style=dotted];
m3_21 -> m3_25  [key=2, style=dotted];
m3_22 -> m3_37  [key=0, style=solid];
m3_22 -> m3_39  [key=0, style=solid];
m3_22 -> m3_41  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_24  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_25  [key=0, style=solid];
m3_23 -> m3_40  [key=2, style=dotted];
m3_23 -> m3_22  [key=0, style=solid];
m3_23 -> m3_26  [key=2, style=dotted];
m3_24 -> m3_37  [key=0, style=solid];
m3_24 -> m3_39  [key=0, style=solid];
m3_24 -> m3_41  [key=2, style=dotted];
m3_24 -> m3_20  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [key=0, style=solid];
m3_35 -> m3_39  [key=0, style=solid];
m3_35 -> m3_40  [key=2, style=dotted];
m3_35 -> m3_14  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_16  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_15  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_35 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_39  [key=0, style=solid];
m3_36 -> m3_41  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_42  [key=2, style=dotted];
m3_39 -> m3_10  [key=0, style=bold, color=blue];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_53  [key=2, style=dotted];
m3_60 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label=cash];
m3_60 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=cash];
m3_60 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=cash];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_66  [key=2, style=dotted];
m3_61 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_67  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_68  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_65 -> m3_59  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_11  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.InsightDirection"];
m3_2 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_2 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m3_2 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_17  [key=3, color=darkorchid, style=bold, label="Field variable System.TimeSpan _period"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_17  [key=3, color=darkorchid, style=bold, label="Field variable double? _confidence"];
m3_43 -> m3_44  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_51  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_51  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_51  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_50  [key=0, style=solid];
m3_47 -> m3_52  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_42  [key=2, style=dotted];
m3_50 -> m3_43  [key=0, style=bold, color=blue];
m3_69 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_69 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestCashStrategy"];
m3_70 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.CashType"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_13 -> m4_14  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=2, style=dotted];
m4_14 -> m4_17  [key=2, style=dotted];
m4_14 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_15 -> m4_13  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_9  [key=2, style=dotted];
m4_4 -> m4_10  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_11  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_12  [key=2, style=dotted];
m4_7 -> m4_2  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=2, style=dotted];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_22 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests"];
m4_22 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests"];
m4_22 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests"];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_7  [key=2, style=dotted];
m6_10 -> m6_8  [key=2, style=dotted];
m6_11 -> m6_9  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_5 -> m6_8  [key=2, style=dotted];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_12 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m6_12 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_12 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m6_12 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m6_12 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m6_12 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=stop];
m6_13 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=stop];
m6_13 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=stop];
m6_13 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=stop];
m6_13 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=stop];
m6_13 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=stop];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_19  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_25  [key=2, style=dotted];
m6_16 -> m6_26  [key=2, style=dotted];
m6_16 -> m6_27  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_22  [key=0, style=solid];
m6_18 -> m6_22  [key=0, style=solid];
m6_18 -> m6_25  [key=2, style=dotted];
m6_18 -> m6_26  [key=2, style=dotted];
m6_18 -> m6_27  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_25  [key=2, style=dotted];
m6_19 -> m6_27  [key=2, style=dotted];
m6_19 -> m6_26  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_25  [key=2, style=dotted];
m6_21 -> m6_27  [key=2, style=dotted];
m6_21 -> m6_26  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=previousStop];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_12  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_28 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters"];
m6_28 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters"];
m6_28 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters"];
m6_28 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters"];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_17  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_18  [key=2, style=dotted];
m7_16 -> m7_13  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_8  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_9  [key=2, style=dotted];
m7_4 -> m7_10  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_11  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_12  [key=2, style=dotted];
m7_7 -> m7_2  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_44  [key=0, style=solid];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_67  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label=feeThisOrder];
m11_16 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label=feeThisOrder];
m11_17 -> m11_14  [key=0, style=bold, color=blue];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_68  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_26  [key=0, style=solid];
m11_22 -> m11_2  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_24  [key=0, style=solid];
m11_23 -> m11_21  [key=0, style=bold, color=blue];
m11_23 -> m11_25  [key=0, style=solid];
m11_23 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_66  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_39  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_42 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_61  [key=0, style=solid];
m11_43 -> m11_63  [key=0, style=solid];
m11_43 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_43 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_44 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_44 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_47  [key=0, style=solid];
m11_45 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_45 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_45 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_46 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_46 -> m11_47  [key=0, style=solid, color=red];
m11_46 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_46 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_49  [key=0, style=solid];
m11_47 -> m11_61  [key=0, style=solid, color=red];
m11_47 -> m11_63  [key=0, style=solid, color=red];
m11_48 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=str];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_51  [key=2, style=dotted];
m11_48 -> m11_61  [key=0, style=solid];
m11_48 -> m11_63  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_61  [key=0, style=solid];
m11_49 -> m11_63  [key=0, style=solid];
m11_50 -> m11_43  [key=0, style=bold, color=blue];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_61  [key=0, style=solid];
m11_50 -> m11_63  [key=0, style=solid];
m11_24 -> m11_25  [key=0, style=solid, color=green];
m11_24 -> m11_26  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_24 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_24 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_24 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_24 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_24 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m11_24 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight"];
m11_25 -> m11_26  [key=0, style=solid, color=green];
m11_25 -> m11_14  [key=2, style=dotted, color=green];
m11_25 -> m11_36  [key=2, style=dotted, color=green];
m11_25 -> m11_37  [key=2, style=dotted, color=green];
m11_25 -> m11_38  [key=2, style=dotted, color=green];
m11_25 -> m11_39  [key=2, style=dotted, color=green];
m11_25 -> m11_40  [key=2, style=dotted, color=green];
m11_25 -> m11_27  [key=1, style=dashed, color=green, label=insight];
m11_25 -> m11_28  [key=1, style=dashed, color=green, label=insight];
m11_25 -> m11_29  [key=1, style=dashed, color=green, label=insight];
m11_25 -> m11_31  [key=1, style=dashed, color=green, label=insight];
m11_25 -> m11_33  [key=1, style=dashed, color=green, label=insight];
m11_25 -> m11_34  [key=1, style=dashed, color=green, label=insight];
m11_26 -> m11_27  [key=0, style=solid, color=green];
m11_26 -> m11_30  [key=0, style=solid, color=green];
m11_26 -> m11_31  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_41  [key=2, style=dotted];
m11_27 -> m11_29  [key=0, style=solid];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_41  [key=2, style=dotted];
m11_28 -> m11_30  [key=0, style=solid];
m11_28 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m11_29 -> m11_34  [key=0, style=solid];
m11_29 -> m11_42  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_41  [key=2, style=dotted];
m11_31 -> m11_36  [key=0, style=solid];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_41  [key=2, style=dotted];
m11_33 -> m11_71  [key=2, style=dotted];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_72  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=0, style=solid];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_34  [key=0, style=solid];
m11_32 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m11_32 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m11_35 -> m11_24  [key=0, style=bold, color=blue];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_73  [key=2, style=dotted];
m11_35 -> m11_74  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_69  [key=2, style=dotted];
m11_19 -> m11_2  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_70  [key=2, style=dotted];
m11_20 -> m11_18  [key=0, style=bold, color=blue];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_70  [key=2, style=dotted];
m11_38 -> m11_61  [key=0, style=solid];
m11_38 -> m11_63  [key=0, style=solid];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_58  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m11_0 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m11_0 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m11_0 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m11_0 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m11_0 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_0 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m11_0 -> m11_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_47  [key=1, style=dashed, color=red, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_55  [key=1, style=dashed, color=red, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_60  [key=1, style=dashed, color=red, label="QuantConnect.Orders.OrderEvent"];
m11_0 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m11_1 -> m11_2  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_65  [key=2, style=dotted];
m11_3 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m11_3 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m11_3 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m11_3 -> m11_12  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid, color=green];
m11_4 -> m11_13  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid, color=green];
m11_5 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label=quoteCash];
m11_5 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=quoteCash];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label=isLong];
m11_7 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label=isLong];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=isShort];
m11_8 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label=isShort];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_9 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_9 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_9 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_9 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_9 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_9 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_10 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_10 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_10 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_10 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_10 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_10 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=absoluteHoldingsQuantity];
m11_11 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=absoluteHoldingsQuantity];
m11_11 -> m11_2  [key=0, style=bold, color=blue];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_53 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_53 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m11_53 -> m11_60  [key=1, style=dashed, color=red, label=quantityHoldings];
m11_55 -> m11_61  [key=0, style=solid, color=red];
m11_55 -> m11_63  [key=0, style=solid, color=red];
m11_55 -> m11_59  [key=1, style=dashed, color=red, label=averageHoldingsPrice];
m11_59 -> m11_60  [key=0, style=solid, color=red];
m11_59 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_59 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_60 -> m11_61  [key=0, style=solid, color=red];
m11_60 -> m11_63  [key=0, style=solid, color=red];
m11_60 -> m11_60  [key=1, style=dashed, color=red, label=quantityHoldings];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_76  [key=2, style=dotted];
m11_63 -> m11_77  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_5  [key=1, style=dashed, color=green, label="QuantConnect.Symbol"];
m11_2 -> m11_6  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.InsightType"];
m11_2 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.InsightDirection"];
m11_2 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_2 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m11_2 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m11_6 -> m11_7  [key=0, style=solid, color=green];
m11_6 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label=closedPosition];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_50  [key=0, style=solid];
m11_61 -> m11_62  [key=0, style=solid];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_5  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_6  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_52 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m11_58 -> m11_59  [key=0, style=solid];
m11_54 -> m11_55  [key=0, style=solid, color=red];
m11_54 -> m11_56  [key=0, style=solid];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_61  [key=0, style=solid];
m11_56 -> m11_63  [key=0, style=solid];
m11_57 -> m11_61  [key=0, style=solid];
m11_57 -> m11_63  [key=0, style=solid];
m11_57 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_75  [key=2, style=dotted];
m11_64 -> m11_0  [key=0, style=bold, color=blue];
m12_42 -> m12_43  [key=0, style=solid];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_18  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_48  [key=2, style=dotted];
m12_44 -> m12_19  [key=2, style=dotted];
m12_44 -> m12_18  [key=2, style=dotted];
m12_44 -> m12_49  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_50  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_21  [key=2, style=dotted];
m12_47 -> m12_42  [key=0, style=bold, color=blue];
m12_24 -> m12_25  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_18  [key=2, style=dotted];
m12_25 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_25 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_19  [key=2, style=dotted];
m12_26 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_26 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_19  [key=2, style=dotted];
m12_27 -> m12_20  [key=2, style=dotted];
m12_27 -> m12_21  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_19  [key=2, style=dotted];
m12_28 -> m12_22  [key=2, style=dotted];
m12_28 -> m12_21  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_19  [key=2, style=dotted];
m12_29 -> m12_22  [key=2, style=dotted];
m12_29 -> m12_21  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_19  [key=2, style=dotted];
m12_30 -> m12_20  [key=2, style=dotted];
m12_30 -> m12_21  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_19  [key=2, style=dotted];
m12_31 -> m12_21  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_19  [key=2, style=dotted];
m12_32 -> m12_23  [key=2, style=dotted];
m12_32 -> m12_21  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_19  [key=2, style=dotted];
m12_33 -> m12_21  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_19  [key=2, style=dotted];
m12_34 -> m12_23  [key=2, style=dotted];
m12_34 -> m12_21  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_19  [key=2, style=dotted];
m12_35 -> m12_21  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_19  [key=2, style=dotted];
m12_36 -> m12_21  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_19  [key=2, style=dotted];
m12_39 -> m12_21  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_19  [key=2, style=dotted];
m12_40 -> m12_21  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_21  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_21  [key=2, style=dotted];
m12_41 -> m12_24  [key=0, style=bold, color=blue];
m12_51 -> m12_52  [key=0, style=solid];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_18  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_48  [key=2, style=dotted];
m12_53 -> m12_19  [key=2, style=dotted];
m12_53 -> m12_18  [key=2, style=dotted];
m12_53 -> m12_49  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_50  [key=2, style=dotted];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_21  [key=2, style=dotted];
m12_56 -> m12_51  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_18  [key=2, style=dotted];
m12_1 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_1 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=jObject];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_19  [key=2, style=dotted];
m12_2 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_2 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_19  [key=2, style=dotted];
m12_3 -> m12_20  [key=2, style=dotted];
m12_3 -> m12_21  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_19  [key=2, style=dotted];
m12_4 -> m12_22  [key=2, style=dotted];
m12_4 -> m12_21  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_19  [key=2, style=dotted];
m12_5 -> m12_22  [key=2, style=dotted];
m12_5 -> m12_21  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_19  [key=2, style=dotted];
m12_6 -> m12_20  [key=2, style=dotted];
m12_6 -> m12_21  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_19  [key=2, style=dotted];
m12_7 -> m12_21  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_19  [key=2, style=dotted];
m12_8 -> m12_23  [key=2, style=dotted];
m12_8 -> m12_21  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_19  [key=2, style=dotted];
m12_9 -> m12_21  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_19  [key=2, style=dotted];
m12_10 -> m12_23  [key=2, style=dotted];
m12_10 -> m12_21  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_19  [key=2, style=dotted];
m12_11 -> m12_21  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_19  [key=2, style=dotted];
m12_12 -> m12_21  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_21  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_21  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_21  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_21  [key=2, style=dotted];
m12_17 -> m12_0  [key=0, style=bold, color=blue];
m15_118 -> m15_119  [key=0, style=solid];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_90  [key=2, style=dotted];
m15_87 -> m15_88  [key=0, style=solid];
m15_89 -> m15_87  [key=0, style=bold, color=blue];
m15_119 -> m15_120  [key=0, style=solid];
m15_120 -> m15_118  [key=0, style=bold, color=blue];
m15_18 -> m15_45  [key=0, style=solid];
m15_18 -> m15_5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm algorithm"];
m15_18 -> m15_29  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm algorithm"];
m15_18 -> m15_1  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
m15_18 -> m15_25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
m15_18 -> m15_4  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel model"];
m15_18 -> m15_28  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel model"];
m15_18 -> m15_2  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.MarketOrder order"];
m15_18 -> m15_26  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.MarketOrder order"];
m15_18 -> m15_3  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket ticket"];
m15_18 -> m15_27  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket ticket"];
m15_18 -> m15_46  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime InitializeTest"];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_65  [key=2, style=dotted];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_66  [key=2, style=dotted];
m15_46 -> m15_48  [key=1, style=dashed, color=darkseagreen4, label=referenceTimeUtc];
m15_46 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label=referenceTimeUtc];
m15_46 -> m15_63  [key=1, style=dashed, color=darkseagreen4, label=referenceTimeUtc];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_67  [key=2, style=dotted];
m15_47 -> m15_50  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_47 -> m15_52  [key=1, style=dashed, color=red, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_47 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_47 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_47 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_47 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_47 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_47 -> m15_62  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_47 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_20  [key=2, style=dotted];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_84  [key=2, style=dotted];
m15_60 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Orders.MarketOrder"];
m15_63 -> m15_64  [key=0, style=solid];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_69  [key=2, style=dotted];
m15_50 -> m15_70  [key=2, style=dotted];
m15_50 -> m15_71  [key=2, style=dotted];
m15_52 -> m15_53  [key=0, style=solid, color=red];
m15_52 -> m15_73  [key=2, style=dotted, color=red];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_79  [key=2, style=dotted];
m15_55 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
m15_55 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_80  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_83  [key=2, style=dotted];
m15_61 -> m15_62  [key=0, style=solid];
m15_61 -> m15_85  [key=2, style=dotted];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_86  [key=2, style=dotted];
m15_62 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Orders.OrderTicket"];
m15_49 -> m15_50  [key=0, style=solid];
m15_49 -> m15_68  [key=2, style=dotted];
m15_49 -> m15_51  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m15_49 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m15_49 -> m15_52  [key=1, style=dashed, color=red, label=transactionHandler];
m15_51 -> m15_52  [key=0, style=solid, color=red];
m15_51 -> m15_72  [key=2, style=dotted];
m15_51 -> m15_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_53 -> m15_54  [key=0, style=solid, color=red];
m15_53 -> m15_74  [key=2, style=dotted, color=red];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_75  [key=2, style=dotted];
m15_54 -> m15_76  [key=2, style=dotted];
m15_54 -> m15_77  [key=2, style=dotted];
m15_54 -> m15_78  [key=2, style=dotted];
m15_54 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
m15_54 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
m15_54 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
m15_54 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_81  [key=2, style=dotted];
m15_58 -> m15_82  [key=2, style=dotted];
m15_64 -> m15_18  [key=0, style=bold, color=blue];
m15_24 -> m15_25  [key=0, style=solid];
m15_25 -> m15_26  [key=0, style=solid];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_26  [key=3, color=darkorchid, style=bold, label="Field variable string FrameworkBaseTypeFullName"];
m15_27 -> m15_28  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid];
m15_29 -> m15_30  [key=0, style=solid];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_18  [key=2, style=dotted];
m15_30 -> m15_32  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m15_30 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=order];
m15_30 -> m15_35  [key=1, style=dashed, color=darkseagreen4, label=security];
m15_30 -> m15_36  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m15_30 -> m15_39  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m15_30 -> m15_40  [key=1, style=dashed, color=darkseagreen4, label=security];
m15_30 -> m15_41  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m15_30 -> m15_42  [key=1, style=dashed, color=darkseagreen4, label=order];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_21  [key=2, style=dotted];
m15_31 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=fill1];
m15_31 -> m15_34  [key=1, style=dashed, color=darkseagreen4, label=fill1];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> m15_22  [key=2, style=dotted];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_23  [key=2, style=dotted];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_21  [key=2, style=dotted];
m15_35 -> m15_37  [key=1, style=dashed, color=darkseagreen4, label=fill2];
m15_35 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label=fill2];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_22  [key=2, style=dotted];
m15_39 -> m15_40  [key=0, style=solid];
m15_39 -> m15_19  [key=2, style=dotted];
m15_39 -> m15_20  [key=2, style=dotted];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_21  [key=2, style=dotted];
m15_40 -> m15_42  [key=1, style=dashed, color=darkseagreen4, label=fill3];
m15_40 -> m15_43  [key=1, style=dashed, color=darkseagreen4, label=fill3];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_22  [key=2, style=dotted];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_23  [key=2, style=dotted];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_23  [key=2, style=dotted];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_23  [key=2, style=dotted];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_23  [key=2, style=dotted];
m15_43 -> m15_44  [key=0, style=solid];
m15_43 -> m15_23  [key=2, style=dotted];
m15_44 -> m15_24  [key=0, style=bold, color=blue];
m15_79 -> m15_91  [key=0, style=solid];
m15_79 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_104  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryCreatePythonAlgorithm"];
m15_92 -> m15_93  [key=0, style=solid];
m15_93 -> m15_79  [key=0, style=bold, color=blue];
m15_21 -> m15_94  [key=0, style=solid];
m15_21 -> m15_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m15_21 -> m15_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m15_21 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m15_21 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m15_21 -> m15_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m15_21 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m15_21 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m15_21 -> m15_1  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security asset"];
m15_21 -> m15_25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security asset"];
m15_21 -> m15_2  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.MarketOrder order"];
m15_21 -> m15_26  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.MarketOrder order"];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_66  [key=2, style=dotted];
m15_94 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label=currentUtcTime];
m15_94 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label=currentUtcTime];
m15_94 -> m15_101  [key=1, style=dashed, color=darkseagreen4, label=currentUtcTime];
m15_95 -> m15_96  [key=0, style=solid, color=red];
m15_95 -> m15_109  [key=2, style=dotted];
m15_95 -> m15_110  [key=2, style=dotted];
m15_95 -> m15_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_95 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m15_95 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m15_97 -> m15_108  [key=0, style=solid];
m15_97 -> m15_111  [key=2, style=dotted];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> m15_113  [key=2, style=dotted];
m15_99 -> m15_114  [key=2, style=dotted];
m15_99 -> m15_115  [key=2, style=dotted];
m15_101 -> m15_108  [key=0, style=solid];
m15_101 -> m15_111  [key=2, style=dotted];
m15_103 -> m15_104  [key=0, style=solid];
m15_103 -> m15_116  [key=2, style=dotted];
m15_103 -> m15_105  [key=1, style=dashed, color=darkseagreen4, label=fill];
m15_103 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label=fill];
m15_103 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label=fill];
m15_104 -> m15_105  [key=0, style=solid];
m15_104 -> m15_117  [key=2, style=dotted];
m15_104 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label=filledThisTime];
m15_100 -> m15_101  [key=0, style=solid];
m15_100 -> m15_102  [key=0, style=solid];
m15_96 -> m15_97  [key=0, style=solid, color=red];
m15_96 -> m15_98  [key=0, style=solid, color=red];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_112  [key=2, style=dotted];
m15_98 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label=lastOrderEvent];
m15_102 -> m15_103  [key=0, style=solid];
m15_102 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label=remaining];
m15_102 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label=remaining];
m15_106 -> m15_107  [key=0, style=solid];
m15_105 -> m15_106  [key=0, style=solid];
m15_107 -> m15_108  [key=0, style=solid];
m15_108 -> m15_21  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_18  [key=3, color=darkorchid, style=bold, label="Field variable System.TimeSpan _loaderTimeLimit"];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_18  [key=3, color=darkorchid, style=bold, label="Field variable QuantConnect.Language _language"];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_18  [key=2, style=dotted];
m15_6 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label=security];
m15_6 -> m15_9  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m15_6 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label=order];
m15_6 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m15_6 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label=security];
m15_6 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m15_6 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label=order];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_19  [key=2, style=dotted];
m15_7 -> m15_20  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_21  [key=2, style=dotted];
m15_8 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label=fill1];
m15_8 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label=fill1];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_22  [key=2, style=dotted];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_23  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_19  [key=2, style=dotted];
m15_12 -> m15_20  [key=2, style=dotted];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_21  [key=2, style=dotted];
m15_13 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label=fill2];
m15_13 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label=fill2];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_22  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_23  [key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_23  [key=2, style=dotted];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_23  [key=2, style=dotted];
m15_17 -> m15_0  [key=0, style=bold, color=blue];
m15_121 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m15_122 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
m15_122 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
m15_122 -> m15_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
m15_122 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
m15_122 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Orders.Fills.PartialMarketFillModelTests.PartialMarketFillModel"];
m15_123 -> m15_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_18 -> m16_27  [key=0, style=solid];
m16_18 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m16_18 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m16_18 -> m16_31  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m16_27 -> m16_28  [key=0, style=solid];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_31  [key=0, style=solid];
m16_28 -> m16_34  [key=2, style=dotted];
m16_28 -> m16_25  [key=3, color=darkorchid, style=bold, label="Field variable string Name"];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_31  [key=0, style=solid];
m16_31 -> m16_32  [key=0, style=solid];
m16_30 -> m16_33  [key=0, style=solid];
m16_32 -> m16_33  [key=0, style=solid];
m16_33 -> m16_18  [key=0, style=bold, color=blue];
m16_25 -> m16_25  [key=3, color=darkorchid, style=bold, label="Field variable string Name"];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_16  [key=0, style=bold, color=crimson];
m16_13 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_17  [key=0, style=solid];
m16_14 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=security];
m16_16 -> m16_14  [key=0, style=solid];
m16_16 -> m16_19  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_14  [key=0, style=solid];
m16_15 -> m16_18  [key=2, style=dotted];
m16_17 -> m16_13  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.InsightDirection"];
m16_2 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m16_2 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m16_2 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_11  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_12  [key=2, style=dotted];
m16_10 -> m16_2  [key=0, style=bold, color=blue];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_25  [key=2, style=dotted];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_24  [key=0, style=solid];
m16_23 -> m16_22  [key=0, style=solid];
m16_23 -> m16_26  [key=2, style=dotted];
m16_24 -> m16_20  [key=0, style=bold, color=blue];
m16_35 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m16_35 -> m16_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel"];
m17_15 -> m17_85  [key=0, style=solid];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_18  [key=2, style=dotted];
m17_85 -> m17_86  [key=0, style=solid];
m17_86 -> m17_15  [key=0, style=bold, color=blue];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.Nifty"];
m17_17 -> m17_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.Nifty"];
m17_17 -> m17_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.Nifty"];
m17_17 -> m17_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.Nifty"];
m17_17 -> m17_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.Nifty"];
m17_17 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.Nifty"];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_28  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m17_18 -> m17_29  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m17_18 -> m17_31  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m17_18 -> m17_32  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_16  [key=2, style=dotted];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_24  [key=0, style=solid];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_36  [key=2, style=dotted];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_24  [key=0, style=solid];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_37  [key=2, style=dotted];
m17_24 -> m17_24  [key=1, style=dashed, color=darkseagreen4, label=pair];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_38  [key=2, style=dotted];
m17_24 -> m17_27  [key=1, style=dashed, color=darkseagreen4, label=highestNifty];
m17_25 -> m17_25  [key=1, style=dashed, color=darkseagreen4, label=pair];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_39  [key=2, style=dotted];
m17_25 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label=lowestNifty];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_33  [key=0, style=solid];
m17_26 -> m17_35  [key=0, style=solid];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_40  [key=2, style=dotted];
m17_29 -> m17_33  [key=0, style=solid];
m17_29 -> m17_35  [key=0, style=solid];
m17_29 -> m17_41  [key=2, style=dotted];
m17_29 -> m17_42  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_40  [key=2, style=dotted];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_35  [key=0, style=solid];
m17_32 -> m17_41  [key=2, style=dotted];
m17_32 -> m17_42  [key=2, style=dotted];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_42  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_16  [key=2, style=dotted];
m17_27 -> m17_30  [key=0, style=solid];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_16  [key=2, style=dotted];
m17_30 -> m17_33  [key=0, style=solid];
m17_30 -> m17_35  [key=0, style=solid];
m17_33 -> m17_34  [key=0, style=solid];
m17_35 -> m17_17  [key=0, style=bold, color=blue];
m17_43 -> m17_44  [key=0, style=solid];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_46  [key=2, style=dotted];
m17_45 -> m17_43  [key=0, style=bold, color=blue];
m17_16 -> m17_13  [key=0, style=bold, color=blue];
m17_7 -> m17_2  [key=0, style=bold, color=blue];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_8  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid, color=green];
m17_3 -> m17_8  [key=2, style=dotted];
m17_3 -> m17_9  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid, color=green];
m17_4 -> m17_9  [key=2, style=dotted];
m17_4 -> m17_10  [key=2, style=dotted, color=green];
m17_5 -> m17_6  [key=0, style=solid, color=green];
m17_5 -> m17_11  [key=2, style=dotted];
m17_5 -> m17_10  [key=2, style=dotted, color=green];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_12  [key=2, style=dotted];
m17_6 -> m17_0  [key=0, style=bold, color=blue];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_15  [key=2, style=dotted];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DollarRupee"];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_16  [key=2, style=dotted];
m17_14 -> m17_11  [key=0, style=bold, color=blue];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_17  [key=2, style=dotted];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_7  [key=2, style=dotted];
m17_1 -> m17_0  [key=0, style=bold, color=blue];
m17_87 -> m17_4  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_5  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_87 -> m17_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm"];
m17_90 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.CorrelationPair"];
m19_147 -> m19_148  [key=0, style=solid];
m19_147 -> m19_149  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_147 -> m19_156  [key=1, style=dashed, color=darkseagreen4, label=bool];
m19_122 -> m19_126  [key=0, style=solid];
m19_122 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m19_122 -> m19_128  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m19_122 -> m19_122  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.Insight SetGeneratedAndClosedTimes"];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m19_122 -> m19_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m19_122 -> m19_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m19_122 -> m19_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m19_122 -> m19_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m19_122 -> m19_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
m19_126 -> m19_127  [key=0, style=solid];
m19_127 -> m19_128  [key=0, style=solid, color=green];
m19_127 -> m19_68  [key=2, style=dotted];
m19_127 -> m19_69  [key=2, style=dotted];
m19_127 -> m19_130  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_127 -> m19_131  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_128 -> m19_129  [key=0, style=solid, color=green];
m19_128 -> m19_71  [key=2, style=dotted];
m19_128 -> m19_130  [key=1, style=dashed, color=green, label=security];
m19_128 -> m19_131  [key=0, style=solid, color=green];
m19_128 -> m19_281  [key=2, style=dotted, color=green];
m19_130 -> m19_132  [key=0, style=solid];
m19_130 -> m19_72  [key=2, style=dotted];
m19_130 -> m19_133  [key=0, style=solid, color=green];
m19_130 -> m19_142  [key=2, style=dotted, color=green];
m19_130 -> m19_134  [key=1, style=dashed, color=green, label=barSize];
m19_131 -> m19_132  [key=0, style=solid];
m19_131 -> m19_73  [key=2, style=dotted];
m19_131 -> m19_143  [key=2, style=dotted];
m19_131 -> m19_142  [key=2, style=dotted];
m19_131 -> m19_134  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m19_129 -> m19_130  [key=0, style=solid, color=green];
m19_129 -> m19_131  [key=0, style=solid];
m19_129 -> m19_133  [key=1, style=dashed, color=green, label=exchangeHours];
m19_129 -> m19_136  [key=1, style=dashed, color=green, label=exchangeHours];
m19_132 -> m19_122  [key=0, style=bold, color=blue];
m19_132 -> m19_133  [key=0, style=solid];
m19_132 -> m19_136  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m19_132 -> m19_144  [key=2, style=dotted];
m19_74 -> m19_75  [key=0, style=solid];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_108  [key=2, style=dotted];
m19_111 -> m19_112  [key=0, style=solid];
m19_111 -> m19_109  [key=0, style=bold, color=blue];
m19_112 -> m19_110  [key=0, style=bold, color=blue];
m19_112 -> m19_113  [key=0, style=solid];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_73  [key=2, style=dotted];
m19_60 -> m19_62  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m19_60 -> m19_63  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_60  [key=0, style=solid];
m19_164 -> m19_165  [key=0, style=solid];
m19_165 -> m19_166  [key=0, style=solid];
m19_165 -> m19_3  [key=2, style=dotted];
m19_165 -> m19_163  [key=2, style=dotted];
m19_166 -> m19_164  [key=0, style=bold, color=blue];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_8  [key=0, style=bold, color=blue];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_3  [key=2, style=dotted];
m19_18 -> m19_4  [key=2, style=dotted];
m19_18 -> m19_149  [key=0, style=solid];
m19_19 -> m19_17  [key=0, style=bold, color=blue];
m19_324 -> m19_325  [key=0, style=solid];
m19_325 -> m19_326  [key=0, style=solid];
m19_325 -> m19_323  [key=2, style=dotted];
m19_326 -> m19_324  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=2, style=dotted];
m19_1 -> m19_4  [key=2, style=dotted];
m19_1 -> m19_5  [key=2, style=dotted];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_6  [key=2, style=dotted];
m19_69 -> m19_374  [key=0, style=solid];
m19_133 -> m19_134  [key=0, style=solid];
m19_133 -> m19_145  [key=2, style=dotted];
m19_133 -> m19_136  [key=1, style=dashed, color=darkseagreen4, label=localStart];
m19_136 -> m19_137  [key=0, style=solid];
m19_136 -> m19_147  [key=2, style=dotted];
m19_136 -> m19_148  [key=2, style=dotted];
m19_136 -> m19_140  [key=0, style=solid];
m19_136 -> m19_141  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m19_134 -> m19_134  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m19_134 -> m19_135  [key=0, style=solid];
m19_134 -> m19_146  [key=2, style=dotted];
m19_134 -> m19_136  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_124 -> m19_125  [key=0, style=solid];
m19_124 -> m19_139  [key=2, style=dotted];
m19_124 -> m19_140  [key=2, style=dotted];
m19_124 -> m19_122  [key=2, style=dotted];
m19_135 -> m19_136  [key=0, style=solid];
m19_135 -> m19_135  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m19_135 -> m19_133  [key=0, style=bold, color=blue];
m19_137 -> m19_138  [key=0, style=solid];
m19_125 -> m19_126  [key=0, style=solid];
m19_125 -> m19_123  [key=0, style=bold, color=blue];
m19_138 -> m19_122  [key=0, style=bold, color=blue];
m19_138 -> m19_139  [key=0, style=solid];
m19_138 -> m19_136  [key=2, style=dotted];
m19_169 -> m19_170  [key=0, style=solid];
m19_169 -> m19_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_181  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_169 -> m19_184  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_169 -> m19_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_169 -> m19_197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_170 -> m19_171  [key=0, style=solid];
m19_170 -> m19_202  [key=2, style=dotted];
m19_170 -> m19_182  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_170 -> m19_185  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_170 -> m19_195  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_170 -> m19_198  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_170 -> m19_200  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_171 -> m19_172  [key=0, style=solid];
m19_171 -> m19_203  [key=2, style=dotted];
m19_171 -> m19_181  [key=1, style=dashed, color=darkseagreen4, label=strategyTag];
m19_171 -> m19_184  [key=1, style=dashed, color=darkseagreen4, label=strategyTag];
m19_171 -> m19_194  [key=1, style=dashed, color=darkseagreen4, label=strategyTag];
m19_171 -> m19_197  [key=1, style=dashed, color=darkseagreen4, label=strategyTag];
m19_172 -> m19_173  [key=0, style=solid];
m19_172 -> m19_187  [key=0, style=solid];
m19_173 -> m19_174  [key=0, style=solid];
m19_173 -> m19_187  [key=0, style=solid];
m19_173 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m19_173 -> m19_176  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m19_173 -> m19_179  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m19_173 -> m19_181  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m19_173 -> m19_184  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m19_173 -> m19_186  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m19_174 -> m19_175  [key=0, style=solid];
m19_174 -> m19_204  [key=2, style=dotted];
m19_174 -> m19_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_174 -> m19_178  [key=1, style=dashed, color=darkseagreen4, label=optionSeq];
m19_176 -> m19_177  [key=0, style=solid];
m19_176 -> m19_206  [key=2, style=dotted];
m19_176 -> m19_207  [key=2, style=dotted];
m19_176 -> m19_208  [key=2, style=dotted];
m19_176 -> m19_209  [key=2, style=dotted];
m19_176 -> m19_210  [key=2, style=dotted];
m19_181 -> m19_182  [key=0, style=solid];
m19_181 -> m19_213  [key=2, style=dotted];
m19_184 -> m19_185  [key=0, style=solid];
m19_184 -> m19_215  [key=2, style=dotted];
m19_187 -> m19_188  [key=0, style=solid];
m19_187 -> m19_200  [key=0, style=solid];
m19_188 -> m19_189  [key=0, style=solid];
m19_188 -> m19_200  [key=0, style=solid];
m19_188 -> m19_192  [key=1, style=dashed, color=darkseagreen4, label=underlyingLeg];
m19_188 -> m19_194  [key=1, style=dashed, color=darkseagreen4, label=underlyingLeg];
m19_188 -> m19_197  [key=1, style=dashed, color=darkseagreen4, label=underlyingLeg];
m19_188 -> m19_199  [key=1, style=dashed, color=darkseagreen4, label=underlyingLeg];
m19_189 -> m19_190  [key=0, style=solid];
m19_189 -> m19_192  [key=0, style=solid];
m19_189 -> m19_216  [key=2, style=dotted];
m19_190 -> m19_191  [key=0, style=solid];
m19_190 -> m19_206  [key=2, style=dotted];
m19_190 -> m19_217  [key=2, style=dotted];
m19_194 -> m19_195  [key=0, style=solid];
m19_194 -> m19_41  [key=2, style=dotted];
m19_197 -> m19_198  [key=0, style=solid];
m19_197 -> m19_105  [key=2, style=dotted];
m19_182 -> m19_173  [key=0, style=solid];
m19_182 -> m19_214  [key=2, style=dotted];
m19_185 -> m19_173  [key=0, style=solid];
m19_185 -> m19_214  [key=2, style=dotted];
m19_195 -> m19_188  [key=0, style=solid];
m19_195 -> m19_214  [key=2, style=dotted];
m19_198 -> m19_188  [key=0, style=solid];
m19_198 -> m19_214  [key=2, style=dotted];
m19_200 -> m19_201  [key=0, style=solid];
m19_179 -> m19_180  [key=0, style=solid];
m19_179 -> m19_183  [key=0, style=solid];
m19_179 -> m19_186  [key=0, style=solid];
m19_186 -> m19_201  [key=0, style=solid];
m19_186 -> m19_211  [key=2, style=dotted];
m19_186 -> m19_207  [key=2, style=dotted];
m19_175 -> m19_176  [key=0, style=solid];
m19_175 -> m19_178  [key=0, style=solid];
m19_175 -> m19_205  [key=2, style=dotted];
m19_178 -> m19_179  [key=0, style=solid];
m19_178 -> m19_212  [key=2, style=dotted];
m19_178 -> m19_181  [key=1, style=dashed, color=darkseagreen4, label=option];
m19_178 -> m19_184  [key=1, style=dashed, color=darkseagreen4, label=option];
m19_177 -> m19_201  [key=0, style=solid];
m19_177 -> m19_211  [key=2, style=dotted];
m19_180 -> m19_181  [key=0, style=solid];
m19_183 -> m19_184  [key=0, style=solid];
m19_192 -> m19_193  [key=0, style=solid];
m19_192 -> m19_196  [key=0, style=solid];
m19_192 -> m19_199  [key=0, style=solid];
m19_199 -> m19_201  [key=0, style=solid];
m19_199 -> m19_211  [key=2, style=dotted];
m19_199 -> m19_207  [key=2, style=dotted];
m19_191 -> m19_201  [key=0, style=solid];
m19_191 -> m19_211  [key=2, style=dotted];
m19_193 -> m19_194  [key=0, style=solid];
m19_196 -> m19_197  [key=0, style=solid];
m19_201 -> m19_169  [key=0, style=bold, color=blue];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_105  [key=0, style=bold, color=blue];
m19_108 -> m19_109  [key=0, style=solid];
m19_108 -> m19_112  [key=0, style=solid];
m19_108 -> m19_113  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m19_109 -> m19_107  [key=0, style=bold, color=blue];
m19_109 -> m19_110  [key=0, style=solid];
m19_345 -> m19_349  [key=0, style=solid];
m19_345 -> m19_352  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m19_349 -> m19_350  [key=0, style=solid];
m19_349 -> m19_353  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_352 -> m19_353  [key=0, style=solid];
m19_350 -> m19_351  [key=0, style=solid];
m19_350 -> m19_352  [key=0, style=solid];
m19_353 -> m19_354  [key=0, style=solid];
m19_353 -> m19_355  [key=2, style=dotted];
m19_351 -> m19_354  [key=0, style=solid];
m19_354 -> m19_345  [key=0, style=bold, color=blue];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_74  [key=2, style=dotted];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_35  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid, color=green];
m19_55 -> m19_59  [key=2, style=dotted, color=green];
m19_55 -> m19_61  [key=2, style=dotted, color=green];
m19_55 -> m19_62  [key=2, style=dotted, color=green];
m19_55 -> m19_28  [key=2, style=dotted, color=green];
m19_55 -> m19_92  [key=1, style=dashed, color=green, label="lambda expression"];
m19_55 -> m19_95  [key=1, style=dashed, color=green, label="lambda expression"];
m19_55 -> m19_57  [key=0, style=solid];
m19_46 -> m19_55  [key=1, style=dashed, color=green, label=riskTargetOverrides];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_66  [key=2, style=dotted];
m19_46 -> m19_65  [key=2, style=dotted];
m19_46 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label=riskTargetOverrides];
m19_46 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label=riskTargetOverrides];
m19_46 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=riskTargetOverrides];
m19_46 -> m19_44  [key=0, style=bold, color=blue];
m19_54 -> m19_55  [key=0, style=solid, color=green];
m19_54 -> m19_56  [key=0, style=solid, color=green];
m19_54 -> m19_68  [key=2, style=dotted];
m19_54 -> m19_69  [key=2, style=dotted];
m19_54 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_54 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_54 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_56 -> m19_57  [key=0, style=solid, color=green];
m19_56 -> m19_69  [key=2, style=dotted, color=green];
m19_56 -> m19_64  [key=0, style=solid];
m19_56 -> m19_70  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid, color=green];
m19_53 -> m19_56  [key=1, style=dashed, color=green, label=riskAdjustedTargets];
m19_53 -> m19_67  [key=2, style=dotted];
m19_53 -> m19_68  [key=2, style=dotted];
m19_53 -> m19_65  [key=2, style=dotted];
m19_53 -> m19_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_53 -> m19_64  [key=0, style=solid];
m19_34 -> m19_59  [key=2, style=dotted];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_58  [key=2, style=dotted];
m19_34 -> m19_60  [key=2, style=dotted];
m19_34 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label=insights];
m19_34 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=insights];
m19_34 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label=insights];
m19_34 -> m19_32  [key=0, style=bold, color=blue];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_38  [key=0, style=solid];
m19_36 -> m19_35  [key=2, style=dotted];
m19_37 -> m19_59  [key=2, style=dotted];
m19_37 -> m19_61  [key=2, style=dotted];
m19_37 -> m19_62  [key=2, style=dotted];
m19_37 -> m19_28  [key=2, style=dotted];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_37 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_37 -> m19_4  [key=0, style=bold, color=blue];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_63  [key=2, style=dotted];
m19_39 -> m19_46  [key=1, style=dashed, color=darkseagreen4, label=targets];
m19_39 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=targets];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_64  [key=2, style=dotted];
m19_39 -> m19_65  [key=2, style=dotted];
m19_39 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label=targets];
m19_39 -> m19_45  [key=1, style=dashed, color=darkseagreen4, label=targets];
m19_39 -> m19_35  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_43 -> m19_46  [key=0, style=solid];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_41  [key=0, style=bold, color=blue];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_59  [key=2, style=dotted];
m19_45 -> m19_61  [key=2, style=dotted];
m19_45 -> m19_62  [key=2, style=dotted];
m19_45 -> m19_28  [key=2, style=dotted];
m19_45 -> m19_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_45 -> m19_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_45 -> m19_35  [key=2, style=dotted];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_54  [key=0, style=solid];
m19_50 -> m19_53  [key=0, style=solid];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_66  [key=2, style=dotted];
m19_50 -> m19_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_52 -> m19_59  [key=2, style=dotted];
m19_52 -> m19_61  [key=2, style=dotted];
m19_52 -> m19_62  [key=2, style=dotted];
m19_52 -> m19_28  [key=2, style=dotted];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_52 -> m19_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_52 -> m19_67  [key=2, style=dotted];
m19_44 -> m19_46  [key=0, style=solid];
m19_44 -> m19_45  [key=0, style=solid];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_50  [key=0, style=solid];
m19_47 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_47 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_51 -> m19_53  [key=0, style=solid];
m19_51 -> m19_52  [key=0, style=solid];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_39  [key=0, style=solid];
m19_35 -> m19_47  [key=0, style=solid];
m19_35 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m19_35 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m19_35 -> m19_61  [key=1, style=dashed, color=darkseagreen4, label=bool];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_43  [key=0, style=solid];
m19_40 -> m19_42  [key=1, style=dashed, color=darkseagreen4, label=target];
m19_40 -> m19_38  [key=0, style=bold, color=blue];
m19_42 -> m19_40  [key=0, style=solid];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_35  [key=2, style=dotted];
m19_49 -> m19_47  [key=0, style=solid];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_65  [key=2, style=dotted];
m19_49 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label=mooTicket];
m19_49 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label=mooTicket];
m19_49 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=mooTicket];
m19_57 -> m19_33  [key=0, style=bold, color=blue];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_71  [key=2, style=dotted];
m19_57 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=preOrderCheckResponse];
m19_119 -> m19_120  [key=0, style=solid];
m19_120 -> m19_121  [key=0, style=solid];
m19_120 -> m19_122  [key=2, style=dotted];
m19_121 -> m19_119  [key=0, style=bold, color=blue];
m19_320 -> m19_321  [key=0, style=solid];
m19_321 -> m19_322  [key=0, style=solid];
m19_321 -> m19_323  [key=2, style=dotted];
m19_322 -> m19_320  [key=0, style=bold, color=blue];
m19_20 -> m19_21  [key=0, style=solid];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_89  [key=0, style=bold, color=blue];
m19_92 -> m19_93  [key=0, style=solid, color=green];
m19_92 -> m19_94  [key=2, style=dotted];
m19_93 -> m19_91  [key=0, style=bold, color=blue];
m19_93 -> m19_94  [key=0, style=solid, color=green];
m19_93 -> m19_79  [key=2, style=dotted, color=green];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_7  [key=2, style=dotted];
m19_327 -> m19_328  [key=0, style=solid];
m19_328 -> m19_329  [key=0, style=solid];
m19_328 -> m19_323  [key=2, style=dotted];
m19_329 -> m19_327  [key=0, style=bold, color=blue];
m19_95 -> m19_96  [key=0, style=solid, color=green];
m19_96 -> m19_97  [key=0, style=solid, color=green];
m19_96 -> m19_94  [key=2, style=dotted];
m19_97 -> m19_95  [key=0, style=bold, color=blue];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_14  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_64 -> m19_35  [key=0, style=bold, color=blue];
m19_163 -> m19_167  [key=0, style=solid];
m19_167 -> m19_168  [key=0, style=solid];
m19_167 -> m19_169  [key=2, style=dotted];
m19_168 -> m19_163  [key=0, style=bold, color=blue];
m19_65 -> m19_84  [key=0, style=solid];
m19_65 -> m19_85  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m19_84 -> m19_85  [key=0, style=solid];
m19_84 -> m19_79  [key=2, style=dotted];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_68  [key=2, style=dotted];
m19_85 -> m19_69  [key=2, style=dotted];
m19_85 -> m19_88  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_85 -> m19_89  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_85 -> m19_83  [key=0, style=bold, color=blue];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_71  [key=2, style=dotted];
m19_86 -> m19_88  [key=1, style=dashed, color=darkseagreen4, label=response];
m19_88 -> m19_90  [key=0, style=solid];
m19_88 -> m19_72  [key=2, style=dotted];
m19_88 -> m19_86  [key=0, style=bold, color=blue];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_73  [key=2, style=dotted];
m19_87 -> m19_88  [key=0, style=solid];
m19_87 -> m19_89  [key=0, style=solid];
m19_90 -> m19_65  [key=0, style=bold, color=blue];
m19_90 -> m19_91  [key=0, style=solid];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_73  [key=0, style=bold, color=blue];
m19_76 -> m19_77  [key=0, style=solid];
m19_77 -> m19_75  [key=0, style=bold, color=blue];
m19_77 -> m19_79  [key=2, style=dotted];
m19_77 -> m19_78  [key=0, style=solid];
m19_219 -> m19_220  [key=0, style=solid];
m19_219 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m19_218 -> m19_219  [key=0, style=solid];
m19_220 -> m19_218  [key=0, style=bold, color=blue];
m19_313 -> m19_314  [key=0, style=solid];
m19_314 -> m19_315  [key=0, style=solid];
m19_315 -> m19_313  [key=0, style=bold, color=blue];
m19_94 -> m19_92  [key=0, style=bold, color=blue];
m19_94 -> m19_98  [key=0, style=solid];
m19_94 -> m19_99  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m19_24 -> m19_28  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_26  [key=2, style=dotted];
m19_24 -> m19_27  [key=2, style=dotted];
m19_24 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_24 -> m19_16  [key=2, style=dotted];
m19_24 -> m19_4  [key=2, style=dotted];
m19_23 -> m19_24  [key=0, style=solid];
m19_25 -> m19_23  [key=0, style=bold, color=blue];
m19_29 -> m19_30  [key=0, style=solid];
m19_70 -> m19_71  [key=0, style=solid];
m19_73 -> m19_74  [key=0, style=solid];
m19_80 -> m19_81  [key=0, style=solid];
m19_80 -> m19_78  [key=0, style=bold, color=blue];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_81  [key=0, style=bold, color=blue];
m19_78 -> m19_76  [key=0, style=bold, color=blue];
m19_78 -> m19_79  [key=0, style=solid];
m19_31 -> m19_29  [key=0, style=bold, color=blue];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_32  [key=2, style=dotted];
m19_30 -> m19_4  [key=2, style=dotted];
m19_72 -> m19_70  [key=0, style=bold, color=blue];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_32  [key=2, style=dotted];
m19_71 -> m19_221  [key=0, style=solid];
m19_82 -> m19_80  [key=0, style=bold, color=blue];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_65  [key=2, style=dotted];
m19_81 -> m19_82  [key=0, style=solid];
m19_323 -> m19_330  [key=0, style=solid];
m19_323 -> m19_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m19_323 -> m19_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m19_323 -> m19_334  [key=1, style=dashed, color=darkseagreen4, label=bool];
m19_323 -> m19_338  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m19_323 -> m19_340  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_323 -> m19_341  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m19_323 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m19_330 -> m19_331  [key=0, style=solid];
m19_331 -> m19_332  [key=0, style=solid];
m19_331 -> m19_334  [key=0, style=solid];
m19_331 -> m19_281  [key=2, style=dotted];
m19_332 -> m19_333  [key=0, style=solid];
m19_332 -> m19_206  [key=2, style=dotted];
m19_332 -> m19_227  [key=2, style=dotted];
m19_334 -> m19_335  [key=0, style=solid];
m19_334 -> m19_341  [key=0, style=solid];
m19_338 -> m19_339  [key=0, style=solid];
m19_338 -> m19_335  [key=0, style=solid];
m19_340 -> m19_335  [key=0, style=solid];
m19_340 -> m19_38  [key=2, style=dotted];
m19_341 -> m19_342  [key=0, style=solid];
m19_341 -> m19_345  [key=2, style=dotted];
m19_341 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m19_343 -> m19_344  [key=0, style=solid];
m19_343 -> m19_35  [key=2, style=dotted];
m19_333 -> m19_344  [key=0, style=solid];
m19_335 -> m19_336  [key=0, style=solid];
m19_335 -> m19_341  [key=0, style=solid];
m19_336 -> m19_337  [key=0, style=solid];
m19_336 -> m19_336  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m19_336 -> m19_338  [key=1, style=dashed, color=darkseagreen4, label=holdingSymbol];
m19_336 -> m19_339  [key=1, style=dashed, color=darkseagreen4, label=holdingSymbol];
m19_336 -> m19_340  [key=1, style=dashed, color=darkseagreen4, label=holdingSymbol];
m19_337 -> m19_338  [key=0, style=solid];
m19_337 -> m19_337  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m19_339 -> m19_340  [key=0, style=solid];
m19_339 -> m19_345  [key=2, style=dotted];
m19_342 -> m19_343  [key=0, style=solid];
m19_342 -> m19_344  [key=0, style=solid];
m19_342 -> m19_12  [key=2, style=dotted];
m19_344 -> m19_323  [key=0, style=bold, color=blue];
m19_362 -> m19_363  [key=0, style=solid];
m19_363 -> m19_364  [key=0, style=solid];
m19_363 -> m19_4  [key=2, style=dotted];
m19_364 -> m19_362  [key=0, style=bold, color=blue];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_68  [key=2, style=dotted];
m19_113 -> m19_69  [key=2, style=dotted];
m19_113 -> m19_116  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_113 -> m19_117  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_114 -> m19_115  [key=0, style=solid];
m19_114 -> m19_71  [key=2, style=dotted];
m19_114 -> m19_116  [key=1, style=dashed, color=darkseagreen4, label=response];
m19_116 -> m19_118  [key=0, style=solid];
m19_116 -> m19_72  [key=2, style=dotted];
m19_116 -> m19_117  [key=0, style=solid];
m19_117 -> m19_118  [key=0, style=solid];
m19_117 -> m19_73  [key=2, style=dotted];
m19_115 -> m19_116  [key=0, style=solid];
m19_115 -> m19_117  [key=0, style=solid];
m19_115 -> m19_113  [key=0, style=bold, color=blue];
m19_118 -> m19_108  [key=0, style=bold, color=blue];
m19_118 -> m19_116  [key=0, style=bold, color=blue];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_65  [key=2, style=dotted];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_108  [key=2, style=dotted];
m19_226 -> m19_228  [key=0, style=solid];
m19_226 -> m19_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_251  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_270  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_277  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_226 -> m19_278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m19_228 -> m19_229  [key=0, style=solid];
m19_228 -> m19_230  [key=0, style=solid];
m19_229 -> m19_279  [key=0, style=solid];
m19_229 -> m19_280  [key=2, style=dotted];
m19_231 -> m19_232  [key=0, style=solid];
m19_231 -> m19_233  [key=0, style=solid];
m19_231 -> m19_281  [key=2, style=dotted];
m19_231 -> m19_235  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_236  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_237  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_239  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_240  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_242  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_247  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_250  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_252  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_254  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_259  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_265  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_267  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_269  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_274  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_231 -> m19_276  [key=1, style=dashed, color=darkseagreen4, label=security];
m19_232 -> m19_279  [key=0, style=solid];
m19_232 -> m19_206  [key=2, style=dotted];
m19_232 -> m19_282  [key=2, style=dotted];
m19_233 -> m19_234  [key=0, style=solid];
m19_233 -> m19_235  [key=0, style=solid];
m19_234 -> m19_279  [key=0, style=solid];
m19_234 -> m19_283  [key=2, style=dotted];
m19_235 -> m19_236  [key=0, style=solid];
m19_235 -> m19_237  [key=0, style=solid];
m19_235 -> m19_12  [key=2, style=dotted];
m19_236 -> m19_279  [key=0, style=solid];
m19_236 -> m19_207  [key=2, style=dotted];
m19_236 -> m19_284  [key=2, style=dotted];
m19_236 -> m19_12  [key=2, style=dotted];
m19_236 -> m19_282  [key=2, style=dotted];
m19_238 -> m19_279  [key=0, style=solid];
m19_238 -> m19_206  [key=2, style=dotted];
m19_238 -> m19_282  [key=2, style=dotted];
m19_240 -> m19_241  [key=0, style=solid];
m19_240 -> m19_242  [key=0, style=solid];
m19_241 -> m19_279  [key=0, style=solid];
m19_241 -> m19_282  [key=2, style=dotted];
m19_242 -> m19_243  [key=0, style=solid];
m19_242 -> m19_244  [key=0, style=solid];
m19_243 -> m19_279  [key=0, style=solid];
m19_243 -> m19_282  [key=2, style=dotted];
m19_245 -> m19_279  [key=0, style=solid];
m19_245 -> m19_206  [key=2, style=dotted];
m19_245 -> m19_282  [key=2, style=dotted];
m19_249 -> m19_279  [key=0, style=solid];
m19_249 -> m19_282  [key=2, style=dotted];
m19_251 -> m19_279  [key=0, style=solid];
m19_251 -> m19_282  [key=2, style=dotted];
m19_256 -> m19_279  [key=0, style=solid];
m19_256 -> m19_282  [key=2, style=dotted];
m19_258 -> m19_279  [key=0, style=solid];
m19_258 -> m19_282  [key=2, style=dotted];
m19_260 -> m19_279  [key=0, style=solid];
m19_260 -> m19_282  [key=2, style=dotted];
m19_263 -> m19_279  [key=0, style=solid];
m19_263 -> m19_217  [key=2, style=dotted];
m19_263 -> m19_282  [key=2, style=dotted];
m19_264 -> m19_265  [key=0, style=solid];
m19_264 -> m19_273  [key=0, style=solid];
m19_266 -> m19_279  [key=0, style=solid];
m19_266 -> m19_206  [key=2, style=dotted];
m19_266 -> m19_282  [key=2, style=dotted];
m19_268 -> m19_279  [key=0, style=solid];
m19_268 -> m19_206  [key=2, style=dotted];
m19_268 -> m19_282  [key=2, style=dotted];
m19_269 -> m19_270  [key=0, style=solid];
m19_269 -> m19_271  [key=0, style=solid];
m19_270 -> m19_279  [key=0, style=solid];
m19_270 -> m19_206  [key=2, style=dotted];
m19_270 -> m19_282  [key=2, style=dotted];
m19_271 -> m19_272  [key=0, style=solid];
m19_271 -> m19_273  [key=0, style=solid];
m19_272 -> m19_273  [key=0, style=solid];
m19_272 -> m19_283  [key=2, style=dotted];
m19_273 -> m19_274  [key=0, style=solid];
m19_273 -> m19_278  [key=0, style=solid];
m19_277 -> m19_279  [key=0, style=solid];
m19_277 -> m19_282  [key=2, style=dotted];
m19_278 -> m19_279  [key=0, style=solid];
m19_278 -> m19_288  [key=2, style=dotted];
m19_230 -> m19_231  [key=0, style=solid];
m19_237 -> m19_238  [key=0, style=solid];
m19_237 -> m19_239  [key=0, style=solid];
m19_239 -> m19_240  [key=0, style=solid];
m19_239 -> m19_244  [key=1, style=dashed, color=darkseagreen4, label=price];
m19_247 -> m19_248  [key=0, style=solid];
m19_247 -> m19_249  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m19_247 -> m19_251  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m19_247 -> m19_256  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m19_247 -> m19_258  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m19_250 -> m19_251  [key=0, style=solid];
m19_250 -> m19_252  [key=0, style=solid];
m19_252 -> m19_253  [key=0, style=solid];
m19_252 -> m19_259  [key=0, style=solid];
m19_254 -> m19_255  [key=0, style=solid];
m19_254 -> m19_256  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m19_254 -> m19_258  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m19_259 -> m19_260  [key=0, style=solid];
m19_259 -> m19_261  [key=0, style=solid];
m19_265 -> m19_266  [key=0, style=solid];
m19_265 -> m19_267  [key=0, style=solid];
m19_267 -> m19_268  [key=0, style=solid];
m19_267 -> m19_269  [key=0, style=solid];
m19_274 -> m19_275  [key=0, style=solid];
m19_274 -> m19_286  [key=2, style=dotted];
m19_276 -> m19_277  [key=0, style=solid];
m19_276 -> m19_278  [key=0, style=solid];
m19_244 -> m19_245  [key=0, style=solid];
m19_244 -> m19_246  [key=0, style=solid];
m19_246 -> m19_247  [key=0, style=solid];
m19_248 -> m19_249  [key=0, style=solid];
m19_248 -> m19_250  [key=0, style=solid];
m19_248 -> m19_285  [key=2, style=dotted];
m19_253 -> m19_254  [key=0, style=solid];
m19_255 -> m19_256  [key=0, style=solid];
m19_255 -> m19_257  [key=0, style=solid];
m19_255 -> m19_285  [key=2, style=dotted];
m19_257 -> m19_258  [key=0, style=solid];
m19_257 -> m19_259  [key=0, style=solid];
m19_261 -> m19_262  [key=0, style=solid];
m19_261 -> m19_264  [key=0, style=solid];
m19_262 -> m19_263  [key=0, style=solid];
m19_275 -> m19_276  [key=0, style=solid];
m19_275 -> m19_287  [key=2, style=dotted];
m19_279 -> m19_226  [key=0, style=bold, color=blue];
m19_365 -> m19_366  [key=0, style=solid];
m19_366 -> m19_367  [key=0, style=solid];
m19_366 -> m19_370  [key=2, style=dotted];
m19_366 -> m19_371  [key=2, style=dotted];
m19_366 -> m19_368  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m19_367 -> m19_368  [key=0, style=solid];
m19_367 -> m19_372  [key=2, style=dotted];
m19_368 -> m19_369  [key=0, style=solid];
m19_368 -> m19_373  [key=2, style=dotted];
m19_369 -> m19_365  [key=0, style=bold, color=blue];
m19_98 -> m19_99  [key=0, style=solid];
m19_98 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m19_98 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m19_98 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m19_98 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m19_98 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_101  [key=0, style=solid];
m19_99 -> m19_68  [key=2, style=dotted];
m19_99 -> m19_69  [key=2, style=dotted];
m19_99 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_99 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_100 -> m19_28  [key=2, style=dotted];
m19_100 -> m19_101  [key=0, style=solid];
m19_100 -> m19_71  [key=2, style=dotted];
m19_100 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=response];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_106  [key=2, style=dotted];
m19_101 -> m19_103  [key=0, style=solid];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_106  [key=2, style=dotted];
m19_102 -> m19_104  [key=0, style=solid];
m19_102 -> m19_72  [key=2, style=dotted];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_106  [key=2, style=dotted];
m19_103 -> m19_73  [key=2, style=dotted];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_106  [key=2, style=dotted];
m19_104 -> m19_94  [key=0, style=bold, color=blue];
m19_105 -> m19_98  [key=0, style=bold, color=blue];
m19_105 -> m19_106  [key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_22  [key=2, style=dotted];
m19_32 -> m19_33  [key=0, style=solid];
m19_28 -> m19_26  [key=0, style=bold, color=blue];
m19_356 -> m19_357  [key=0, style=solid];
m19_357 -> m19_358  [key=0, style=solid];
m19_357 -> m19_38  [key=2, style=dotted];
m19_358 -> m19_356  [key=0, style=bold, color=blue];
m19_26 -> m19_27  [key=0, style=solid];
m19_148 -> m19_149  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_18  [key=2, style=dotted];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_12  [key=0, style=solid];
m19_10 -> m19_19  [key=2, style=dotted];
m19_10 -> m19_4  [key=2, style=dotted];
m19_11 -> m19_10  [key=0, style=solid];
m19_11 -> m19_20  [key=2, style=dotted];
m19_11 -> m19_9  [key=0, style=bold, color=blue];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.GeneratedInsightsCollection"];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_16  [key=0, style=solid];
m19_14 -> m19_4  [key=2, style=dotted];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_21  [key=2, style=dotted];
m19_15 -> m19_13  [key=0, style=bold, color=blue];
m19_221 -> m19_222  [key=0, style=solid];
m19_221 -> m19_226  [key=2, style=dotted];
m19_221 -> m19_223  [key=1, style=dashed, color=darkseagreen4, label=response];
m19_221 -> m19_224  [key=1, style=dashed, color=darkseagreen4, label=response];
m19_222 -> m19_223  [key=0, style=solid];
m19_222 -> m19_224  [key=0, style=solid];
m19_223 -> m19_224  [key=0, style=solid];
m19_223 -> m19_227  [key=2, style=dotted];
m19_224 -> m19_225  [key=0, style=solid];
m19_225 -> m19_71  [key=0, style=bold, color=blue];
m19_59 -> m19_64  [key=0, style=solid];
m19_59 -> m19_72  [key=2, style=dotted];
m19_145 -> m19_146  [key=0, style=solid];
m19_145 -> m19_73  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_8  [key=2, style=dotted];
m19_21 -> m19_4  [key=2, style=dotted];
m19_22 -> m19_20  [key=0, style=bold, color=blue];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_12  [key=2, style=dotted];
m19_27 -> m19_4  [key=2, style=dotted];
m19_143 -> m19_144  [key=0, style=solid];
m19_143 -> m19_145  [key=0, style=solid];
m19_161 -> m19_162  [key=0, style=solid];
m19_161 -> m19_3  [key=2, style=dotted];
m19_161 -> m19_163  [key=2, style=dotted];
m19_160 -> m19_161  [key=0, style=solid];
m19_162 -> m19_160  [key=0, style=bold, color=blue];
m19_162 -> m19_55  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_54  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_56  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_128  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_162 -> m19_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_63  [key=0, style=solid];
m19_139 -> m19_137  [key=0, style=bold, color=blue];
m19_359 -> m19_360  [key=0, style=solid];
m19_360 -> m19_361  [key=0, style=solid];
m19_360 -> m19_4  [key=2, style=dotted];
m19_361 -> m19_359  [key=0, style=bold, color=blue];
m19_140 -> m19_141  [key=0, style=solid];
m19_141 -> m19_142  [key=0, style=solid];
m19_141 -> m19_68  [key=2, style=dotted];
m19_141 -> m19_69  [key=2, style=dotted];
m19_141 -> m19_144  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_141 -> m19_145  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_142 -> m19_143  [key=0, style=solid];
m19_142 -> m19_71  [key=2, style=dotted];
m19_142 -> m19_144  [key=1, style=dashed, color=darkseagreen4, label=response];
m19_144 -> m19_146  [key=0, style=solid];
m19_144 -> m19_72  [key=2, style=dotted];
m19_146 -> m19_136  [key=0, style=bold, color=blue];
m19_5 -> m19_6  [key=0, style=solid];
m19_149 -> m19_150  [key=0, style=solid];
m19_149 -> m19_68  [key=2, style=dotted];
m19_149 -> m19_69  [key=2, style=dotted];
m19_149 -> m19_151  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_149 -> m19_152  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_149 -> m19_154  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_149 -> m19_155  [key=1, style=dashed, color=darkseagreen4, label=request];
m19_156 -> m19_157  [key=0, style=solid];
m19_156 -> m19_158  [key=0, style=solid];
m19_156 -> m19_159  [key=0, style=solid];
m19_156 -> m19_160  [key=2, style=dotted];
m19_156 -> m19_161  [key=2, style=dotted];
m19_150 -> m19_151  [key=0, style=solid];
m19_150 -> m19_152  [key=0, style=solid];
m19_150 -> m19_159  [key=0, style=solid];
m19_150 -> m19_160  [key=2, style=dotted];
m19_150 -> m19_161  [key=2, style=dotted];
m19_151 -> m19_159  [key=0, style=solid];
m19_151 -> m19_70  [key=2, style=dotted];
m19_151 -> m19_152  [key=0, style=solid];
m19_151 -> m19_153  [key=0, style=solid];
m19_152 -> m19_153  [key=0, style=solid];
m19_152 -> m19_71  [key=2, style=dotted];
m19_152 -> m19_154  [key=1, style=dashed, color=darkseagreen4, label=preOrderCheckResponse];
m19_152 -> m19_159  [key=0, style=solid];
m19_152 -> m19_160  [key=2, style=dotted];
m19_152 -> m19_161  [key=2, style=dotted];
m19_154 -> m19_159  [key=0, style=solid];
m19_154 -> m19_72  [key=2, style=dotted];
m19_154 -> m19_160  [key=2, style=dotted];
m19_154 -> m19_161  [key=2, style=dotted];
m19_155 -> m19_156  [key=0, style=solid];
m19_155 -> m19_73  [key=2, style=dotted];
m19_155 -> m19_157  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m19_155 -> m19_158  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m19_153 -> m19_154  [key=0, style=solid];
m19_153 -> m19_155  [key=0, style=solid];
m19_157 -> m19_158  [key=0, style=solid];
m19_157 -> m19_74  [key=2, style=dotted];
m19_157 -> m19_159  [key=0, style=solid];
m19_158 -> m19_159  [key=0, style=solid];
m19_158 -> m19_160  [key=2, style=dotted];
m19_158 -> m19_161  [key=2, style=dotted];
m19_159 -> m19_147  [key=0, style=bold, color=blue];
m19_159 -> m19_18  [key=0, style=bold, color=blue];
m19_316 -> m19_317  [key=0, style=solid];
m19_316 -> m19_318  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_317 -> m19_318  [key=0, style=solid];
m19_317 -> m19_319  [key=0, style=solid];
m19_318 -> m19_319  [key=0, style=solid];
m19_319 -> m19_316  [key=0, style=bold, color=blue];
m19_4 -> m19_36  [key=0, style=solid];
m19_4 -> m19_0  [key=0, style=bold, color=blue];
m19_7 -> m19_5  [key=0, style=bold, color=blue];
m19_346 -> m19_347  [key=0, style=solid];
m19_347 -> m19_348  [key=0, style=solid];
m19_347 -> m19_345  [key=2, style=dotted];
m19_348 -> m19_346  [key=0, style=bold, color=blue];
m19_63 -> m19_64  [key=0, style=solid];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_8  [key=2, style=dotted];
m19_6 -> m19_4  [key=2, style=dotted];
m19_289 -> m19_290  [key=0, style=solid];
m19_289 -> m19_292  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m19_289 -> m19_302  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_289 -> m19_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_290 -> m19_291  [key=0, style=solid];
m19_290 -> m19_202  [key=2, style=dotted];
m19_290 -> m19_306  [key=1, style=dashed, color=darkseagreen4, label=orderIdList];
m19_290 -> m19_307  [key=1, style=dashed, color=darkseagreen4, label=orderIdList];
m19_292 -> m19_293  [key=0, style=solid];
m19_292 -> m19_291  [key=0, style=solid];
m19_302 -> m19_297  [key=0, style=solid];
m19_302 -> m19_312  [key=2, style=dotted];
m19_304 -> m19_305  [key=0, style=solid];
m19_304 -> m19_38  [key=2, style=dotted];
m19_304 -> m19_306  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m19_291 -> m19_292  [key=0, style=solid];
m19_291 -> m19_307  [key=0, style=solid];
m19_291 -> m19_309  [key=2, style=dotted];
m19_291 -> m19_313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_291 -> m19_293  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m19_291 -> m19_294  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m19_291 -> m19_304  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m19_306 -> m19_291  [key=0, style=solid];
m19_306 -> m19_214  [key=2, style=dotted];
m19_307 -> m19_308  [key=0, style=solid];
m19_293 -> m19_294  [key=0, style=solid];
m19_293 -> m19_310  [key=2, style=dotted];
m19_293 -> m19_295  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_293 -> m19_297  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_294 -> m19_295  [key=0, style=solid];
m19_294 -> m19_303  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m19_294 -> m19_304  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m19_295 -> m19_296  [key=0, style=solid];
m19_295 -> m19_291  [key=0, style=solid];
m19_297 -> m19_298  [key=0, style=solid];
m19_297 -> m19_303  [key=0, style=solid];
m19_297 -> m19_299  [key=1, style=dashed, color=darkseagreen4, label=order];
m19_297 -> m19_302  [key=1, style=dashed, color=darkseagreen4, label=order];
m19_303 -> m19_304  [key=0, style=solid];
m19_303 -> m19_291  [key=0, style=solid];
m19_296 -> m19_297  [key=0, style=solid];
m19_296 -> m19_301  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m19_296 -> m19_304  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m19_301 -> m19_297  [key=0, style=solid];
m19_301 -> m19_301  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m19_301 -> m19_304  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m19_298 -> m19_299  [key=0, style=solid];
m19_298 -> m19_302  [key=0, style=solid];
m19_299 -> m19_300  [key=0, style=solid];
m19_299 -> m19_311  [key=2, style=dotted];
m19_299 -> m19_301  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m19_300 -> m19_301  [key=0, style=solid];
m19_300 -> m19_297  [key=0, style=solid];
m19_305 -> m19_306  [key=0, style=solid];
m19_305 -> m19_291  [key=0, style=solid];
m19_308 -> m19_289  [key=0, style=bold, color=blue];
m19_374 -> m19_375  [key=0, style=solid];
m19_374 -> m19_376  [key=2, style=dotted];
m19_375 -> m19_69  [key=0, style=bold, color=blue];
m19_377 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_255  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_276  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_291  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_293  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_294  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_302  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_318  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_325  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_328  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_335  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_339  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_341  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_347  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_349  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_352  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_353  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_357  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_360  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_363  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_367  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_377 -> m19_374  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m19_378 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m19_379 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m20_17 -> m20_18  [key=0, style=solid];
m20_0 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m20_0 -> m20_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m20_8 -> m20_13  [key=2, style=dotted];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_12  [key=0, style=solid];
m20_8 -> m20_10  [key=1, style=dashed, color=darkseagreen4, label=security];
m20_8 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label=security];
m20_8 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label=security];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_10  [key=0, style=solid];
m20_7 -> m20_13  [key=2, style=dotted];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_14  [key=2, style=dotted];
m20_9 -> m20_15  [key=2, style=dotted];
m20_9 -> m20_16  [key=2, style=dotted];
m20_3 -> m20_7  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_12  [key=2, style=dotted];
m20_6 -> m20_10  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m20_10 -> m20_11  [key=0, style=solid];
m20_10 -> m20_16  [key=2, style=dotted];
m20_10 -> m20_14  [key=2, style=dotted];
m20_10 -> m20_15  [key=2, style=dotted];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_12  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_12  [key=2, style=dotted];
m20_2 -> m20_5  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_12  [key=2, style=dotted];
m20_4 -> m20_0  [key=0, style=bold, color=blue];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_12  [key=2, style=dotted];
m20_11 -> m20_0  [key=0, style=bold, color=blue];
m20_11 -> m20_8  [key=0, style=solid];
m20_11 -> m20_17  [key=2, style=dotted];
m20_11 -> m20_18  [key=2, style=dotted];
m20_11 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label=err];
m20_11 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label=err];
m20_45 -> m20_52  [key=1, style=dashed, color=green, label=basicTemplateCryptoAlgorithmStatistics];
m20_45 -> m20_46  [key=0, style=solid];
m20_45 -> m20_13  [key=2, style=dotted];
m20_57 -> m20_58  [key=0, style=solid];
m20_12 -> m20_6  [key=0, style=bold, color=blue];
m20_58 -> m20_59  [key=0, style=solid];
m20_58 -> m20_36  [key=2, style=dotted];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_25  [key=0, style=solid];
m20_21 -> m20_27  [key=2, style=dotted];
m20_21 -> m20_52  [key=1, style=dashed, color=green, label=basicTemplateOptionsStatistics];
m20_21 -> m20_13  [key=2, style=dotted];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_28  [key=2, style=dotted];
m20_23 -> m20_52  [key=1, style=dashed, color=green, label=updateOrderRegressionStatistics];
m20_23 -> m20_13  [key=2, style=dotted];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_29  [key=2, style=dotted];
m20_24 -> m20_52  [key=1, style=dashed, color=green, label=regressionStatistics];
m20_24 -> m20_13  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_52  [key=1, style=dashed, color=green, label=basicTemplateStatistics];
m20_19 -> m20_13  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_26  [key=2, style=dotted];
m20_20 -> m20_52  [key=1, style=dashed, color=green, label=basicTemplateFrameworkStatistics];
m20_20 -> m20_13  [key=2, style=dotted];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_52  [key=1, style=dashed, color=green, label=limitFillRegressionStatistics];
m20_22 -> m20_13  [key=2, style=dotted];
m20_25 -> m20_19  [key=0, style=bold, color=blue];
m20_25 -> m20_52  [key=1, style=dashed, color=green, label=universeSelectionRegressionStatistics];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_13  [key=2, style=dotted];
m20_59 -> m20_60  [key=0, style=solid];
m20_59 -> m20_61  [key=2, style=dotted];
m20_59 -> m20_62  [key=2, style=dotted];
m20_59 -> m20_53  [key=0, style=bold, color=blue];
m20_60 -> m20_58  [key=0, style=bold, color=blue];
m20_60 -> m20_61  [key=0, style=solid];
m20_29 -> m20_52  [key=1, style=dashed, color=green, label=dropboxUniverseSelectionStatistics];
m20_29 -> m20_30  [key=0, style=solid];
m20_29 -> m20_13  [key=2, style=dotted];
m20_55 -> m20_63  [key=0, style=solid];
m20_55 -> m20_64  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m20_55 -> m20_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m20_55 -> m20_56  [key=0, style=solid];
m20_55 -> m20_36  [key=2, style=dotted];
m20_63 -> m20_64  [key=0, style=solid];
m20_63 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_63 -> m20_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m20_64 -> m20_65  [key=0, style=solid];
m20_64 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label=security];
m20_65 -> m20_66  [key=0, style=solid];
m20_66 -> m20_55  [key=0, style=bold, color=blue];
m20_27 -> m20_52  [key=1, style=dashed, color=green, label=addRemoveSecurityRegressionStatistics];
m20_27 -> m20_28  [key=0, style=solid];
m20_27 -> m20_13  [key=2, style=dotted];
m20_61 -> m20_62  [key=0, style=solid];
m20_53 -> m20_54  [key=0, style=solid];
m20_53 -> m20_56  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m20_53 -> m20_57  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m20_53 -> m20_17  [key=0, style=bold, color=blue];
m20_54 -> m20_55  [key=0, style=solid];
m20_54 -> m20_57  [key=0, style=solid];
m20_56 -> m20_57  [key=0, style=solid];
m20_56 -> m20_6  [key=2, style=dotted];
m20_42 -> m20_52  [key=1, style=dashed, color=green, label=hourSplitStatistics];
m20_42 -> m20_43  [key=0, style=solid];
m20_42 -> m20_13  [key=2, style=dotted];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_52  [key=1, style=dashed, color=green, label=parameterizedStatistics];
m20_30 -> m20_13  [key=2, style=dotted];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_52  [key=1, style=dashed, color=green, label=historyAlgorithmStatistics];
m20_31 -> m20_13  [key=2, style=dotted];
m20_32 -> m20_30  [key=0, style=bold, color=blue];
m20_32 -> m20_52  [key=1, style=dashed, color=green, label=coarseFundamentalTop5AlgorithmStatistics];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_13  [key=2, style=dotted];
m20_52 -> m20_53  [key=0, style=solid, color=green];
m20_52 -> m20_5  [key=2, style=dotted, color=green];
m20_52 -> m20_55  [key=2, style=dotted, color=green];
m20_52 -> m20_56  [key=2, style=dotted, color=green];
m20_52 -> m20_57  [key=2, style=dotted, color=green];
m20_52 -> m20_58  [key=1, style=dashed, color=green, label="lambda expression"];
m20_46 -> m20_47  [key=0, style=solid];
m20_46 -> m20_52  [key=1, style=dashed, color=green, label=indicatorSuiteAlgorithmStatistics];
m20_46 -> m20_13  [key=2, style=dotted];
m20_47 -> m20_48  [key=0, style=solid];
m20_47 -> m20_49  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_47 -> m20_50  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_47 -> m20_52  [key=1, style=dashed, color=green, label=basicTemplateIntrinioEconomicData];
m20_47 -> m20_13  [key=2, style=dotted];
m20_48 -> m20_49  [key=0, style=solid];
m20_48 -> m20_51  [key=0, style=solid];
m20_48 -> m20_52  [key=1, style=dashed, color=green, label=volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics];
m20_48 -> m20_13  [key=2, style=dotted];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_52  [key=2, style=dotted];
m20_49 -> m20_13  [key=2, style=dotted];
m20_50 -> m20_48  [key=0, style=solid];
m20_50 -> m20_50  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_50 -> m20_52  [key=1, style=dashed, color=green, label=cancelOpenOrdersRegressionAlgorithmStatistics];
m20_50 -> m20_51  [key=0, style=solid];
m20_50 -> m20_13  [key=2, style=dotted];
m20_51 -> m20_46  [key=0, style=bold, color=blue];
m20_51 -> m20_52  [key=0, style=solid, color=green];
m20_51 -> m20_13  [key=2, style=dotted];
m20_13 -> m20_43  [key=0, style=solid];
m20_62 -> m20_60  [key=0, style=bold, color=blue];
m20_35 -> m20_52  [key=1, style=dashed, color=green, label=optionSplitRegressionAlgorithmStatistics];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_13  [key=2, style=dotted];
m20_18 -> m20_33  [key=0, style=solid];
m20_18 -> m20_52  [key=1, style=dashed, color=green, label=emptyStatistics];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_13  [key=2, style=dotted];
m20_33 -> m20_34  [key=0, style=solid];
m20_33 -> m20_35  [key=2, style=dotted];
m20_33 -> m20_52  [key=1, style=dashed, color=green, label=coarseFineFundamentalRegressionAlgorithmStatistics];
m20_33 -> m20_13  [key=2, style=dotted];
m20_34 -> m20_18  [key=0, style=bold, color=blue];
m20_34 -> m20_52  [key=1, style=dashed, color=green, label=macdTrendAlgorithmStatistics];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_13  [key=2, style=dotted];
m20_26 -> m20_52  [key=1, style=dashed, color=green, label=customDataRegressionStatistics];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_13  [key=2, style=dotted];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_52  [key=1, style=dashed, color=green, label=optionRenameRegressionAlgorithmStatistics];
m20_36 -> m20_13  [key=2, style=dotted];
m20_37 -> m20_38  [key=0, style=solid];
m20_37 -> m20_39  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_37 -> m20_40  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_37 -> m20_52  [key=1, style=dashed, color=green, label=optionOpenInterestRegressionAlgorithmStatistics];
m20_37 -> m20_13  [key=2, style=dotted];
m20_38 -> m20_39  [key=0, style=solid];
m20_38 -> m20_41  [key=0, style=solid];
m20_38 -> m20_52  [key=1, style=dashed, color=green, label=optionChainConsistencyRegressionAlgorithmStatistics];
m20_38 -> m20_13  [key=2, style=dotted];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_42  [key=2, style=dotted];
m20_39 -> m20_52  [key=1, style=dashed, color=green, label=weeklyUniverseSelectionRegressionAlgorithmStatistics];
m20_39 -> m20_13  [key=2, style=dotted];
m20_40 -> m20_38  [key=0, style=solid];
m20_40 -> m20_40  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_40 -> m20_52  [key=1, style=dashed, color=green, label=optionExerciseAssignRegressionAlgorithmStatistics];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_13  [key=2, style=dotted];
m20_41 -> m20_36  [key=0, style=bold, color=blue];
m20_41 -> m20_52  [key=1, style=dashed, color=green, label=basicTemplateDailyStatistics];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_13  [key=2, style=dotted];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_45  [key=2, style=dotted];
m20_43 -> m20_52  [key=1, style=dashed, color=green, label=hourReverseSplitStatistics];
m20_43 -> m20_13  [key=2, style=dotted];
m20_44 -> m20_13  [key=0, style=bold, color=blue];
m20_44 -> m20_52  [key=1, style=dashed, color=green, label=fractionalQuantityRegressionStatistics];
m20_44 -> m20_45  [key=0, style=solid];
m20_28 -> m20_52  [key=1, style=dashed, color=green, label=dropboxBaseDataUniverseSelectionStatistics];
m20_28 -> m20_29  [key=0, style=solid];
m20_28 -> m20_13  [key=2, style=dotted];
m20_67 -> m20_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m20_67 -> m20_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m20_67 -> m20_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_2 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_2 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_2 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_3 -> m21_4  [key=0, style=solid];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_9  [key=2, style=dotted];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_10  [key=2, style=dotted];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_11  [key=2, style=dotted];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_11  [key=2, style=dotted];
m21_8 -> m21_2  [key=0, style=bold, color=blue];
m21_33 -> m21_34  [key=0, style=solid, color=green];
m21_34 -> m21_35  [key=0, style=solid, color=green];
m21_34 -> m21_22  [key=2, style=dotted, color=green];
m21_35 -> m21_36  [key=0, style=solid, color=green];
m21_35 -> m21_22  [key=2, style=dotted, color=green];
m21_36 -> m21_37  [key=0, style=solid, color=green];
m21_36 -> m21_22  [key=2, style=dotted, color=green];
m21_37 -> m21_38  [key=0, style=solid, color=green];
m21_37 -> m21_22  [key=2, style=dotted, color=green];
m21_38 -> m21_39  [key=0, style=solid, color=green];
m21_38 -> m21_22  [key=2, style=dotted, color=green];
m21_39 -> m21_33  [key=0, style=bold, color=blue];
m21_26 -> m21_57  [key=0, style=solid, color=green];
m21_57 -> m21_58  [key=0, style=solid, color=green];
m21_57 -> m21_56  [key=2, style=dotted, color=green];
m21_58 -> m21_26  [key=0, style=bold, color=blue];
m21_15 -> m21_54  [key=0, style=solid, color=green];
m21_54 -> m21_55  [key=0, style=solid, color=green];
m21_54 -> m21_56  [key=2, style=dotted, color=green];
m21_55 -> m21_15  [key=0, style=bold, color=blue];
m21_40 -> m21_41  [key=0, style=solid, color=green];
m21_40 -> m21_42  [key=1, style=dashed, color=green, label="QuantConnect.Data.Market.TradeBar"];
m21_40 -> m21_43  [key=1, style=dashed, color=green, label="QuantConnect.Data.Market.TradeBar"];
m21_40 -> m21_44  [key=1, style=dashed, color=green, label="QuantConnect.Data.Market.TradeBar"];
m21_40 -> m21_45  [key=1, style=dashed, color=green, label="QuantConnect.Data.Market.TradeBar"];
m21_40 -> m21_46  [key=1, style=dashed, color=green, label="QuantConnect.Data.Market.TradeBar"];
m21_41 -> m21_42  [key=0, style=solid, color=green];
m21_41 -> m21_49  [key=2, style=dotted, color=green];
m21_42 -> m21_43  [key=0, style=solid, color=green];
m21_42 -> m21_44  [key=1, style=dashed, color=green, label=typicalPrice];
m21_43 -> m21_44  [key=0, style=solid, color=green];
m21_43 -> m21_50  [key=2, style=dotted, color=green];
m21_44 -> m21_45  [key=0, style=solid, color=green];
m21_44 -> m21_51  [key=2, style=dotted, color=green];
m21_44 -> m21_52  [key=2, style=dotted, color=green];
m21_44 -> m21_53  [key=2, style=dotted, color=green];
m21_45 -> m21_46  [key=0, style=solid, color=green];
m21_45 -> m21_49  [key=2, style=dotted, color=green];
m21_46 -> m21_47  [key=0, style=solid, color=green];
m21_46 -> m21_49  [key=2, style=dotted, color=green];
m21_47 -> m21_48  [key=0, style=solid, color=green];
m21_48 -> m21_40  [key=0, style=bold, color=blue];
m21_30 -> m21_31  [key=0, style=solid];
m21_13 -> m21_15  [key=2, style=dotted];
m21_13 -> m21_14  [key=0, style=solid];
m21_17 -> m21_18  [key=0, style=solid];
m21_20 -> m21_22  [key=2, style=dotted];
m21_20 -> m21_21  [key=0, style=solid];
m21_24 -> m21_26  [key=2, style=dotted];
m21_24 -> m21_25  [key=0, style=solid];
m21_28 -> m21_29  [key=0, style=solid];
m21_31 -> m21_22  [key=2, style=dotted];
m21_31 -> m21_32  [key=0, style=solid];
m21_12 -> m21_13  [key=0, style=solid];
m21_14 -> m21_12  [key=0, style=bold, color=blue];
m21_16 -> m21_17  [key=0, style=solid];
m21_18 -> m21_16  [key=0, style=bold, color=blue];
m21_19 -> m21_20  [key=0, style=solid];
m21_21 -> m21_19  [key=0, style=bold, color=blue];
m21_23 -> m21_24  [key=0, style=solid];
m21_25 -> m21_23  [key=0, style=bold, color=blue];
m21_27 -> m21_28  [key=0, style=solid];
m21_29 -> m21_27  [key=0, style=bold, color=blue];
m21_32 -> m21_30  [key=0, style=bold, color=blue];
m21_59 -> m21_34  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_35  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_36  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_37  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_38  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_41  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_43  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_44  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_45  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_46  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_47  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_54  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_57  [key=1, style=dashed, color=green, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m21_59 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.KeltnerChannels"];
m23_26 -> m23_27  [key=0, style=solid];
m23_27 -> m23_28  [key=0, style=solid];
m23_28 -> m23_26  [key=0, style=bold, color=blue];
m23_13 -> m23_14  [key=0, style=solid];
m23_14 -> m23_15  [key=0, style=solid];
m23_15 -> m23_13  [key=0, style=bold, color=blue];
m23_29 -> m23_30  [key=0, style=solid];
m23_30 -> m23_31  [key=0, style=solid];
m23_31 -> m23_29  [key=0, style=bold, color=blue];
m23_32 -> m23_33  [key=0, style=solid];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_42  [key=1, style=dashed, color=darkseagreen4, label=gross];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_42  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m23_42 -> m23_43  [key=0, style=solid];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_37  [key=0, style=solid];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_45  [key=2, style=dotted];
m23_36 -> m23_42  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_39  [key=0, style=solid];
m23_38 -> m23_42  [key=0, style=solid];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_41  [key=0, style=solid];
m23_40 -> m23_42  [key=0, style=solid];
m23_41 -> m23_44  [key=0, style=solid];
m23_43 -> m23_44  [key=0, style=solid];
m23_44 -> m23_32  [key=0, style=bold, color=blue];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_2 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m23_2 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m23_3 -> m23_4  [key=0, style=solid];
m23_4 -> m23_5  [key=0, style=solid];
m23_5 -> m23_6  [key=0, style=solid];
m23_6 -> m23_7  [key=0, style=solid];
m23_7 -> m23_8  [key=0, style=solid];
m23_8 -> m23_9  [key=0, style=solid];
m23_9 -> m23_2  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [key=0, style=bold, color=blue];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m23_23 -> m23_24  [key=0, style=solid];
m23_24 -> m23_25  [key=0, style=solid];
m23_25 -> m23_22  [key=0, style=bold, color=blue];
m23_19 -> m23_20  [key=0, style=solid];
m23_20 -> m23_21  [key=0, style=solid];
m23_21 -> m23_19  [key=0, style=bold, color=blue];
m23_10 -> m23_11  [key=0, style=solid];
m23_11 -> m23_12  [key=0, style=solid];
m23_12 -> m23_10  [key=0, style=bold, color=blue];
m23_16 -> m23_17  [key=0, style=solid];
m23_17 -> m23_18  [key=0, style=solid];
m23_18 -> m23_16  [key=0, style=bold, color=blue];
m23_46 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m23_46 -> m23_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_10 -> m24_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_10 -> m24_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_11 -> m24_12  [key=0, style=solid];
m24_12 -> m24_13  [key=0, style=solid];
m24_13 -> m24_14  [key=0, style=solid];
m24_14 -> m24_15  [key=0, style=solid];
m24_15 -> m24_10  [key=0, style=bold, color=blue];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_7 -> m24_8  [key=0, style=solid];
m24_8 -> m24_9  [key=0, style=solid];
m24_9 -> m24_6  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_0  [key=0, style=bold, color=blue];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label=object];
m24_3 -> m24_4  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_5 -> m24_2  [key=0, style=bold, color=blue];
m24_16 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationWeb"];
m24_16 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationWeb"];
m24_17 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationSms"];
m24_17 -> m24_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationSms"];
m24_18 -> m24_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationEmail"];
m24_18 -> m24_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationEmail"];
m24_18 -> m24_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationEmail"];
m24_18 -> m24_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Notifications.NotificationEmail"];
}
