digraph  {
n7 [label="QuantConnect.Data.Market.FuturesContract", span=""];
n0 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", label="Entry QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="115-115"];
n1 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", color=red, community=0, label="1: Symbol = symbol", span="117-117"];
n2 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", label="UnderlyingSymbol = underlyingSymbol", span="118-118"];
n3 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", label="Exit QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="115-115"];
n4 [cluster="QuantConnect.Data.Market.FuturesContract.ToString()", label="Entry QuantConnect.Data.Market.FuturesContract.ToString()", span="127-127"];
n5 [cluster="QuantConnect.Data.Market.FuturesContract.ToString()", label="return Symbol.Value;", span="129-129"];
n6 [cluster="QuantConnect.Data.Market.FuturesContract.ToString()", label="Exit QuantConnect.Data.Market.FuturesContract.ToString()", span="127-127"];
m0_21 [cluster="QuantConnect.Indicators.RegressionChannel.Reset()", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.RegressionChannel.Reset()", span="108-108"];
m0_22 [cluster="QuantConnect.Indicators.RegressionChannel.Reset()", file="AccelerationBandsTests.cs", label="_standardDeviation.Reset()", span="110-110"];
m0_23 [cluster="QuantConnect.Indicators.RegressionChannel.Reset()", file="AccelerationBandsTests.cs", label="LinearRegression.Reset()", span="111-111"];
m0_24 [cluster="QuantConnect.Indicators.RegressionChannel.Reset()", file="AccelerationBandsTests.cs", label="LowerChannel.Reset()", span="112-112"];
m0_25 [cluster="QuantConnect.Indicators.RegressionChannel.Reset()", file="AccelerationBandsTests.cs", label="UpperChannel.Reset()", span="113-113"];
m0_26 [cluster="QuantConnect.Indicators.RegressionChannel.Reset()", file="AccelerationBandsTests.cs", label="base.Reset()", span="114-114"];
m0_27 [cluster="QuantConnect.Indicators.RegressionChannel.Reset()", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Indicators.RegressionChannel.Reset()", span="108-108"];
m0_11 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(int, decimal)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.RegressionChannel.RegressionChannel(int, decimal)", span="83-83"];
m0_12 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(int, decimal)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Indicators.RegressionChannel.RegressionChannel(int, decimal)", span="83-83"];
m0_29 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", span="97-97"];
m0_13 [cluster="QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="95-95"];
m0_14 [cluster="QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="AccelerationBandsTests.cs", label="_standardDeviation.Update(input)", span="97-97"];
m0_15 [cluster="QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="AccelerationBandsTests.cs", label="LinearRegression.Update(input)", span="98-98"];
m0_16 [cluster="QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="AccelerationBandsTests.cs", label="LowerChannel.Update(input)", span="99-99"];
m0_17 [cluster="QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="AccelerationBandsTests.cs", label="UpperChannel.Update(input)", span="100-100"];
m0_18 [cluster="QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="AccelerationBandsTests.cs", label="return LinearRegression.Current;", span="102-102"];
m0_19 [cluster="QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Indicators.RegressionChannel.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="95-95"];
m0_20 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m0_7 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="50-50"];
m0_9 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="186-186"];
m0_10 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="142-142"];
m0_0 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", span="69-69"];
m0_1 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", file="AccelerationBandsTests.cs", label="_standardDeviation = new StandardDeviation(period)", span="72-72"];
m0_2 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", file="AccelerationBandsTests.cs", label="LinearRegression = new LeastSquaresMovingAverage(name + ''_LinearRegression'', period)", span="73-73"];
m0_3 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", file="AccelerationBandsTests.cs", label="LowerChannel = LinearRegression.Minus(_standardDeviation.Times(k), name + ''_LowerChannel'')", span="74-74"];
m0_4 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", file="AccelerationBandsTests.cs", label="UpperChannel = LinearRegression.Plus(_standardDeviation.Times(k), name + ''_UpperChannel'')", span="75-75"];
m0_5 [cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", file="AccelerationBandsTests.cs", label="Exit QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", span="69-69"];
m0_6 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(int)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(int)", span="31-31"];
m0_28 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="102-102"];
m0_8 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(decimal)", file="AccelerationBandsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(decimal)", span="244-244"];
m0_30 [file="AccelerationBandsTests.cs", label="QuantConnect.Indicators.RegressionChannel", span=""];
m1_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="AlgorithmAddDataTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m1_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="AlgorithmAddDataTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1151-1151"];
m1_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="AlgorithmAddDataTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1318-1318"];
m1_10 [cluster="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.OnData(QuantConnect.Data.Slice)", file="AlgorithmAddDataTests.cs", label="Entry QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.OnData(QuantConnect.Data.Slice)", span="40-40"];
m1_11 [cluster="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.OnData(QuantConnect.Data.Slice)", file="AlgorithmAddDataTests.cs", label="Exit QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.OnData(QuantConnect.Data.Slice)", span="40-40"];
m1_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="AlgorithmAddDataTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1126-1126"];
m1_0 [cluster="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.Initialize()", file="AlgorithmAddDataTests.cs", label="Entry QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.Initialize()", span="30-30"];
m1_1 [cluster="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.Initialize()", file="AlgorithmAddDataTests.cs", label="SetStartDate(2015, 10, 1)", span="32-32"];
m1_2 [cluster="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.Initialize()", file="AlgorithmAddDataTests.cs", label="SetEndDate(2015, 11, 15)", span="33-33"];
m1_3 [cluster="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.Initialize()", file="AlgorithmAddDataTests.cs", label="Symbols.Equity.All.Take(400)", span="34-34"];
m1_4 [cluster="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.Initialize()", file="AlgorithmAddDataTests.cs", label="AddSecurity(SecurityType.Equity, symbol)", span="36-36"];
m1_5 [cluster="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.Initialize()", file="AlgorithmAddDataTests.cs", label="Exit QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark.Initialize()", span="30-30"];
m1_12 [file="AlgorithmAddDataTests.cs", label="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark", span=""];
m3_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1174-1174"];
m3_30 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnEndOfDay()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnEndOfDay()", span="82-82"];
m3_31 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnEndOfDay()", file="BrokerageSetupHandler.cs", label="Plot(''Trade Plot'', ''Price'', _lastPrice)", span="85-85"];
m3_32 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnEndOfDay()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnEndOfDay()", span="82-82"];
m3_25 [cluster="QuantConnect.Chart.Chart(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m3_26 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", span="195-195"];
m3_29 [cluster="System.TimeSpan.FromMinutes(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m3_27 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
m3_53 [cluster="System.DateTime.Add(System.TimeSpan)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m3_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m3_34 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="94-94"];
m3_35 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="_lastPrice = data[''SPY''].Close", span="96-96"];
m3_47 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Order(''SPY'', (int)(Portfolio.MarginRemaining / data[''SPY''].Close))", span="115-115"];
m3_36 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="_fastMa == 0", span="98-98"];
m3_37 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="_fastMa = _lastPrice", span="98-98"];
m3_38 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="_slowMa == 0", span="99-99"];
m3_39 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="_slowMa = _lastPrice", span="99-99"];
m3_40 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="_fastMa = (0.01m * _lastPrice) + (0.99m * _fastMa)", span="101-101"];
m3_41 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="_slowMa = (0.001m * _lastPrice) + (0.999m * _slowMa)", span="102-102"];
m3_42 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Time > _resample", span="104-104"];
m3_43 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="_resample = Time.Add(_resamplePeriod)", span="106-106"];
m3_46 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="!Portfolio.Invested && Time.Day % 13 == 0", span="113-113"];
m3_44 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Plot(''Strategy Equity'', ''FastMA'', _fastMa)", span="107-107"];
m3_45 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Plot(''Strategy Equity'', ''SlowMA'', _slowMa)", span="108-108"];
m3_49 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Time.Day % 21 == 0 && Portfolio.Invested", span="118-118"];
m3_48 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Plot(''Trade Plot'', ''Buy'', _lastPrice)", span="116-116"];
m3_50 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Plot(''Trade Plot'', ''Sell'', _lastPrice)", span="120-120"];
m3_51 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Liquidate()", span="121-121"];
m3_52 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="94-94"];
m3_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262"];
m3_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1128-1128"];
m3_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m3_0 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", span="43-43"];
m3_1 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="SetStartDate(_startDate)", span="46-46"];
m3_2 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="SetEndDate(_endDate)", span="47-47"];
m3_3 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="SetCash(100000)", span="50-50"];
m3_4 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="AddSecurity(SecurityType.Equity, ''SPY'')", span="54-54"];
m3_5 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="var stockPlot = new Chart(''Trade Plot'')", span="57-57"];
m3_6 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="var buyOrders = new Series(''Buy'', SeriesType.Scatter, 0)", span="59-59"];
m3_9 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="stockPlot.AddSeries(buyOrders)", span="62-62"];
m3_10 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="stockPlot.AddSeries(sellOrders)", span="63-63"];
m3_11 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="stockPlot.AddSeries(assetPrice)", span="64-64"];
m3_12 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="AddChart(stockPlot)", span="65-65"];
m3_7 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="var sellOrders = new Series(''Sell'', SeriesType.Scatter, 0)", span="60-60"];
m3_8 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="var assetPrice = new Series(''Price'', SeriesType.Line, 0)", span="61-61"];
m3_13 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="var avgCross = new Chart(''Strategy Equity'')", span="67-67"];
m3_14 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="var fastMa = new Series(''FastMA'', SeriesType.Line, 1)", span="68-68"];
m3_16 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="avgCross.AddSeries(fastMa)", span="70-70"];
m3_17 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="avgCross.AddSeries(slowMa)", span="71-71"];
m3_18 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="AddChart(avgCross)", span="72-72"];
m3_15 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="var slowMa = new Series(''SlowMA'', SeriesType.Line, 1)", span="69-69"];
m3_19 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="_resamplePeriod = TimeSpan.FromMinutes((_endDate - _startDate).TotalMinutes / 2000)", span="74-74"];
m3_20 [cluster="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Algorithm.Examples.CustomChartingAlgorithm.Initialize()", span="43-43"];
m3_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40"];
m3_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019"];
m3_56 [file="BrokerageSetupHandler.cs", label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", span=""];
m5_66 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m5_301 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m5_72 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="250-250"];
m5_100 [cluster="QuantConnect.Orders.OrderResponse.InvalidStatus(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.InvalidStatus(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.Order)", span="136-136"];
m5_30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="965-965"];
m5_478 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="var delta = _algorithm.Portfolio.CashBook[account.CurrencySymbol].Amount - account.CashBalance", span="968-968"];
m5_480 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleAccountChanged(): {0} Cash Delta: {1}'', account.CurrencySymbol, delta))", span="971-971"];
m5_482 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.CashBook[account.CurrencySymbol].SetAmount(account.CashBalance)", span="978-978"];
m5_479 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="delta != 0", span="969-969"];
m5_481 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="_brokerage.AccountInstantlyUpdated", span="975-975"];
m5_483 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="965-965"];
m5_73 [cluster="QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", span="322-322"];
m5_279 [cluster="Unk.ToString", file="BrokerageTransactionHandler.cs", label="Entry Unk.ToString", span=""];
m5_417 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m5_70 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m5_380 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m5_378 [cluster="decimal.SmartRounding()", file="BrokerageTransactionHandler.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m5_34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", span="985-985"];
m5_485 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.IsAssignment", span="988-988"];
m5_486 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Message = string.Format(''Option Assignment: {0}'', fill.Symbol.Value)", span="990-990"];
m5_487 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.OnAssignmentOrderEvent(fill)", span="991-991"];
m5_488 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", span="985-985"];
m5_489 [cluster="string.Format(string, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_23 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="364-364"];
m5_151 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="Order order = GetOrderByIdInternal(orderId)", span="366-366"];
m5_152 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="return order != null ? order.Clone() : null;", span="367-367"];
m5_153 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="364-364"];
m5_179 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="BrokerageTransactionHandler.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_202 [cluster="QuantConnect.Util.BusyBlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Util.BusyBlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", span="139-139"];
m5_68 [cluster="QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse, QuantConnect.Orders.OrderRequestStatus)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse, QuantConnect.Orders.OrderRequestStatus)", span="93-93"];
m5_313 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", span="646-646"];
m5_316 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="648-648"];
m5_317 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var order = Order.CreateOrder(request)", span="649-649"];
m5_323 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.OrderAlreadyExists, ''Cannot process submit request because order with id {0} already exists'');", span="661-661"];
m5_326 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.UnableToFindOrder(request);", span="666-666"];
m5_331 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.ZeroQuantity(request)", span="678-678"];
m5_341 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, ''Error in GetSufficientCapitalForOrder'');", span="695-695"];
m5_344 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.InsufficientBuyingPower, string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.GetValue(security).SmartRounding()))", span="701-701"];
m5_353 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageModelRefusedToSubmitOrder, ''OrderID: '' + order.Id + '' '' + message)", span="714-714"];
m5_365 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToSubmitOrder, errorMessage)", span="737-737"];
m5_370 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Success(request);", span="744-744"];
m5_318 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[order.Symbol]", span="652-652"];
m5_319 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.PriceCurrency = security.SymbolProperties.QuoteCurrency", span="653-653"];
m5_320 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Quantity = RoundOffOrder(order, security)", span="656-656"];
m5_321 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orders.TryAdd(order.Id, order)", span="658-658"];
m5_324 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orderTickets.TryGetValue(order.Id, out ticket)", span="663-663"];
m5_327 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="RoundOrderPrices(order, security)", span="670-670"];
m5_328 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.SetOrder(order)", span="673-673"];
m5_329 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Quantity == 0", span="675-675"];
m5_330 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="677-677"];
m5_333 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Unable to add order for zero quantity''))", span="680-680"];
m5_336 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="sufficientCapitalForOrder = _algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="688-688"];
m5_339 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="693-693"];
m5_340 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Error executing margin models''))", span="694-694"];
m5_343 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="700-700"];
m5_346 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Insufficient buying power to complete order''))", span="703-703"];
m5_349 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_algorithm.BrokerageModel.CanSubmitOrder(security, order, out message)", span="709-709"];
m5_350 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="712-712"];
m5_352 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to submit order: '' + order.Id)", span="713-713"];
m5_355 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''BrokerageModel declared unable to submit order''))", span="716-716"];
m5_358 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderPlaced = _brokerage.PlaceOrder(order)", span="724-724"];
m5_363 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="735-735"];
m5_364 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var errorMessage = ''Brokerage failed to place order: '' + order.Id", span="736-736"];
m5_367 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to place order''))", span="739-739"];
m5_369 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Submitted", span="743-743"];
m5_322 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleSubmitOrderRequest(): Unable to add new order, order not processed.'')", span="660-660"];
m5_325 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleSubmitOrderRequest(): Unable to retrieve order ticket, order not processed.'')", span="665-665"];
m5_335 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="bool sufficientCapitalForOrder", span="685-685"];
m5_332 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="679-679"];
m5_334 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="681-681"];
m5_337 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="690-690"];
m5_342 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!sufficientCapitalForOrder", span="698-698"];
m5_338 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="692-692"];
m5_348 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="BrokerageMessageEvent message", span="708-708"];
m5_345 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="702-702"];
m5_347 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="704-704"];
m5_357 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="bool orderPlaced", span="721-721"];
m5_351 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="message == null", span="713-713"];
m5_354 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="715-715"];
m5_356 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="717-717"];
m5_359 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="726-726"];
m5_362 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!orderPlaced", span="732-732"];
m5_360 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="728-728"];
m5_361 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderPlaced = false", span="729-729"];
m5_366 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="738-738"];
m5_368 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="740-740"];
m5_371 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", span="646-646"];
m5_233 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Threading.CancellationToken)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Threading.CancellationToken)", span="769-769"];
m5_532 [cluster="System.Math.Round(decimal)", file="BrokerageTransactionHandler.cs", label="Entry System.Math.Round(decimal)", span="0-0"];
m5_135 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="340-340"];
m5_136 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BrokerageTransactionHandler.cs", label="return _orderTickets.Select(x => x.Value).Where(filter ?? (x => true));", span="342-342"];
m5_137 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="340-340"];
m5_101 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m5_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="103-103"];
m5_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="brokerage == null", span="105-105"];
m5_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_resultHandler = resultHandler", span="111-111"];
m5_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_brokerage = brokerage", span="115-115"];
m5_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                // log every fill in live mode\r\n                if (algorithm.LiveMode)\r\n                {\r\n                    var brokerIds = string.Empty;\r\n                    var order = GetOrderById(fill.OrderId);\r\n                    if (order != null && order.BrokerId.Count > 0) brokerIds = string.Join('', '', order.BrokerId);\r\n                    Log.Trace(''BrokerageTransactionHandler.OrderStatusChanged(): '' + fill + '' BrokerId: '' + brokerIds);\r\n                }\r\n\r\n                HandleOrderEvent(fill);\r\n            }", span="116-128"];
m5_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_algorithm = algorithm", span="142-142"];
m5_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="throw new ArgumentNullException(''brokerage'');", span="107-107"];
m5_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday = true", span="112-112"];
m5_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_lastSyncTimeTicks = DateTime.UtcNow.Ticks", span="113-113"];
m5_8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                HandleAccountChanged(account);\r\n            }", span="130-133"];
m5_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_brokerage.OptionPositionAssigned += (sender, fill) =>\r\n            {\r\n                HandlePositionAssigned(fill);\r\n            }", span="135-138"];
m5_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="IsActive = true", span="140-140"];
m5_12 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="103-103"];
m5_102 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m5_278 [cluster="System.Math.Abs(decimal)", file="BrokerageTransactionHandler.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m5_71 [cluster="QuantConnect.Util.BusyBlockingCollection<T>.Add(T)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Util.BusyBlockingCollection<T>.Add(T)", span="91-91"];
m5_139 [cluster="Unk.Where", file="BrokerageTransactionHandler.cs", label="Entry Unk.Where", span=""];
m5_375 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
m5_415 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="818-818"];
m5_419 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="return order.Status != OrderStatus.Filled\r\n                && order.Status != OrderStatus.Canceled\r\n                && order.Status != OrderStatus.PartiallyFilled\r\n                && order.Status != OrderStatus.Invalid;", span="820-823"];
m5_420 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="818-818"];
m5_474 [cluster="QuantConnect.Interfaces.ITradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent, decimal, decimal)", span="57-57"];
m5_272 [cluster="System.Collections.Generic.List<T>.List()", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_533 [cluster="decimal.Equals(decimal)", file="BrokerageTransactionHandler.cs", label="Entry decimal.Equals(decimal)", span="0-0"];
m5_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="185-185"];
m5_51 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = !_algorithm.IsWarmingUp\r\n                ? OrderResponse.Success(request) \r\n                : OrderResponse.WarmingUp(request)", span="187-189"];
m5_52 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(response)", span="191-191"];
m5_53 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var ticket = new OrderTicket(_algorithm.Transactions, request)", span="192-192"];
m5_56 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.Add(request)", span="198-198"];
m5_57 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var order = Order.CreateOrder(request)", span="203-203"];
m5_63 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orders.TryAdd(request.OrderId, order)", span="212-212"];
m5_55 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="response.IsSuccess", span="196-196"];
m5_54 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orderTickets.TryAdd(ticket.OrderId, ticket)", span="193-193"];
m5_62 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.SetOrder(order)", span="211-211"];
m5_64 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="214-214"];
m5_58 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[order.Symbol]", span="206-206"];
m5_59 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.PriceCurrency = security.SymbolProperties.QuoteCurrency", span="207-207"];
m5_60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="209-209"];
m5_61 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Tag = ''Algorithm warming up.''", span="210-210"];
m5_65 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="185-185"];
m5_287 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="585-600"];
m5_15 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="algorithm.LiveMode", span="119-119"];
m5_17 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="var order = GetOrderById(fill.OrderId)", span="122-122"];
m5_20 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.OrderStatusChanged(): '' + fill + '' BrokerId: '' + brokerIds)", span="124-124"];
m5_21 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(fill)", span="127-127"];
m5_28 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandleAccountChanged(account)", span="132-132"];
m5_32 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandlePositionAssigned(fill)", span="137-137"];
m5_14 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="116-128"];
m5_16 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="var brokerIds = string.Empty", span="121-121"];
m5_18 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="order != null && order.BrokerId.Count > 0", span="123-123"];
m5_19 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="brokerIds = string.Join('', '', order.BrokerId)", span="123-123"];
m5_22 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="116-128"];
m5_27 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="130-133"];
m5_29 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="130-133"];
m5_31 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="135-138"];
m5_33 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="135-138"];
m5_140 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="342-342"];
m5_141 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Value", span="342-342"];
m5_142 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="342-342"];
m5_143 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="342-342"];
m5_144 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label=true, span="342-342"];
m5_145 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="342-342"];
m5_169 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Value.BrokerId.Contains(brokerageId)", span="389-389"];
m5_168 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="389-389"];
m5_170 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="389-389"];
m5_186 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="412-412"];
m5_189 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="412-412"];
m5_180 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="410-410"];
m5_183 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="410-410"];
m5_181 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Value", span="410-410"];
m5_182 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="410-410"];
m5_184 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Clone()", span="410-410"];
m5_185 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="410-410"];
m5_187 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Value", span="412-412"];
m5_188 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="412-412"];
m5_190 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Clone()", span="412-412"];
m5_191 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="412-412"];
m5_240 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="499-499"];
m5_244 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Key <= lowestOrderIdToKeep", span="501-501"];
m5_243 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="501-501"];
m5_241 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Key", span="499-499"];
m5_242 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="499-499"];
m5_245 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="501-501"];
m5_285 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="balance.Symbol == cash.Symbol", span="556-556"];
m5_284 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="556-556"];
m5_286 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="556-556"];
m5_288 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="TimeSinceLastFill <= TimeSpan.FromSeconds(20)", span="588-588"];
m5_289 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday = false", span="592-592"];
m5_291 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="_lastSyncTimeTicks = DateTime.UtcNow.Ticks", span="597-597"];
m5_290 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'')", span="593-593"];
m5_292 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'')", span="598-598"];
m5_293 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="585-600"];
m5_238 [cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0"];
m5_192 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="418-418"];
m5_193 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.GetConsumingEnumerable(_cancellationTokenSource.Token)", span="422-422"];
m5_194 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleOrderRequest(request)", span="424-424"];
m5_196 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label=Exception, span="428-428"];
m5_199 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="436-436"];
m5_195 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="ProcessAsynchronousEvents()", span="425-425"];
m5_197 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="431-431"];
m5_198 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_algorithm.RunTimeError = err", span="433-433"];
m5_200 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="IsActive = false", span="437-437"];
m5_201 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="418-418"];
m5_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="157-157"];
m5_36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.LiveMode", span="159-159"];
m5_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.Process(): '' + request)", span="161-161"];
m5_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="request.OrderRequestType", span="164-164"];
m5_40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="return AddOrder((SubmitOrderRequest) request);", span="167-167"];
m5_42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="return UpdateOrder((UpdateOrderRequest) request);", span="170-170"];
m5_44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="return CancelOrder((CancelOrderRequest) request);", span="173-173"];
m5_39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Submit", span="166-166"];
m5_41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Update", span="169-169"];
m5_43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Cancel", span="172-172"];
m5_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="throw new ArgumentOutOfRangeException();", span="176-176"];
m5_46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="157-157"];
m5_416 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="66-66"];
m5_206 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="451-451"];
m5_207 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="!_algorithm.LiveMode", span="456-456"];
m5_208 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.IsBusy && !_orderRequestQueue.WaitHandle.WaitOne(Time.OneSecond, _cancellationTokenSource.Token)", span="458-458"];
m5_211 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Enter'')", span="465-465"];
m5_209 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Timed out waiting for request queue to finish processing.'')", span="460-460"];
m5_210 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="return;", span="462-462"];
m5_212 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="var currentTimeNewYork = DateTime.UtcNow.ConvertFromUtc(TimeZones.NewYork)", span="468-468"];
m5_213 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday && currentTimeNewYork.Date != LastSyncDate", span="469-469"];
m5_215 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_algorithm.LiveMode && !_syncedLiveBrokerageCashToday && currentTimeNewYork.TimeOfDay >= LiveBrokerageCashSyncTime", span="475-475"];
m5_214 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday = false", span="471-471"];
m5_216 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="TimeSinceLastFill > TimeSpan.FromSeconds(10)", span="480-480"];
m5_220 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int maxOrdersToKeep = 10000", span="492-492"];
m5_217 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="PerformCashSync()", span="482-482"];
m5_218 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label=Exception, span="485-485"];
m5_219 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Error(err, ''Updating cash balances'')", span="487-487"];
m5_221 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.Count < maxOrdersToKeep + 1", span="493-493"];
m5_225 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int lowestOrderIdToKeep = max - maxOrdersToKeep", span="500-500"];
m5_222 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Exit'')", span="495-495"];
m5_224 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int max = _orders.Max(x => x.Key)", span="499-499"];
m5_223 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="return;", span="496-496"];
m5_226 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.Where(x => x.Key <= lowestOrderIdToKeep)", span="501-501"];
m5_227 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Order value", span="503-503"];
m5_231 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Exit'')", span="509-509"];
m5_229 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.TryRemove(item.Key, out value)", span="505-505"];
m5_230 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orderTickets.TryRemove(item.Key, out ticket)", span="506-506"];
m5_228 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="504-504"];
m5_232 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="451-451"];
m5_381 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="84-84"];
m5_204 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="443-443"];
m5_205 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="443-443"];
m5_473 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="529-529"];
m5_300 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m5_476 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="238-238"];
m5_96 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", span="336-336"];
m5_315 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", span="829-829"];
m5_421 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Order order", span="831-831"];
m5_423 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orders.TryGetValue(request.OrderId, out order) || !_orderTickets.TryGetValue(request.OrderId, out ticket)", span="833-833"];
m5_424 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelOrderRequest(): Unable to cancel order with ID '' + request.OrderId + ''.'')", span="835-835"];
m5_425 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.UnableToFindOrder(request);", span="836-836"];
m5_427 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.InvalidStatus(request, order);", span="841-841"];
m5_438 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToCancelOrder, message);", span="863-863"];
m5_440 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.Tag != null", span="869-869"];
m5_441 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Tag = request.Tag", span="872-872"];
m5_442 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Success(request);", span="875-875"];
m5_422 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="832-832"];
m5_426 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status.IsClosed()", span="839-839"];
m5_428 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.SetOrder(order)", span="844-844"];
m5_430 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderCanceled = _brokerage.CancelOrder(order)", span="849-849"];
m5_435 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="var message = ''Brokerage failed to cancel order with id '' + order.Id", span="860-860"];
m5_437 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to cancel order''))", span="862-862"];
m5_439 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Canceled", span="867-867"];
m5_429 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="bool orderCanceled", span="846-846"];
m5_431 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="851-851"];
m5_434 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="!orderCanceled", span="857-857"];
m5_432 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="853-853"];
m5_433 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderCanceled = false", span="854-854"];
m5_436 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(message)", span="861-861"];
m5_443 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", span="829-829"];
m5_534 [cluster="string.Format(string, object, object, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m5_25 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m5_69 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194"];
m5_138 [cluster="Unk.Select", file="BrokerageTransactionHandler.cs", label="Entry Unk.Select", span=""];
m5_97 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", span="370-370"];
m5_155 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="_orders == null", span="373-373"];
m5_158 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="return _orders.TryGetValue(orderId, out order) ? order : null;", span="376-376"];
m5_156 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="return null;", span="373-373"];
m5_157 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="Order order", span="375-375"];
m5_159 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", span="370-370"];
m5_418 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="91-91"];
m5_235 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="565-565"];
m5_283 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m5_280 [cluster="Unk.Trace", file="BrokerageTransactionHandler.cs", label="Entry Unk.Trace", span=""];
m5_237 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="515-515"];
m5_246 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="!Monitor.TryEnter(_performCashSyncReentranceGuard)", span="520-520"];
m5_247 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="return;", span="522-522"];
m5_248 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Sync cash balance'')", span="525-525"];
m5_249 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="var balances = new List<Cash>()", span="527-527"];
m5_250 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="balances = _brokerage.GetCashBalance()", span="530-530"];
m5_251 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label=Exception, span="532-532"];
m5_253 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="balances.Count == 0", span="537-537"];
m5_255 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label=balances, span="543-543"];
m5_261 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="var balanceCash = balances.FirstOrDefault(balance => balance.Symbol == cash.Symbol)", span="556-556"];
m5_252 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="534-534"];
m5_254 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="return;", span="539-539"];
m5_256 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Cash cash", span="545-545"];
m5_260 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.CashBook.Values", span="554-554"];
m5_257 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="!_algorithm.Portfolio.CashBook.TryGetValue(balance.Symbol, out cash)", span="546-546"];
m5_258 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unexpected cash found {0} {1}'', balance.Amount, balance.Symbol)", span="548-548"];
m5_259 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.SetCash(balance.Symbol, balance.Amount, balance.ConversionRate)", span="549-549"];
m5_268 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday = true", span="576-576"];
m5_263 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="var delta = cash.Amount - balanceCash.Amount", span="561-561"];
m5_264 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Math.Abs(_algorithm.Portfolio.CashBook.ConvertToAccountCurrency(delta, cash.Symbol)) > 5", span="562-562"];
m5_267 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.SetCash(cash.Symbol, 0, cash.ConversionRate)", span="573-573"];
m5_262 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="balanceCash != null", span="558-558"];
m5_265 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): {0} Delta: {1}'', balanceCash.Symbol,\r\n                                delta.ToString(''0.00''))", span="565-566"];
m5_266 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.SetCash(balanceCash.Symbol, balanceCash.Amount, balanceCash.ConversionRate)", span="568-568"];
m5_269 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Task.Delay(TimeSpan.FromSeconds(10)).ContinueWith(_ =>\r\n            {\r\n                // we want to make sure this is a good value, so check for any recent fills\r\n                if (TimeSinceLastFill <= TimeSpan.FromSeconds(20))\r\n                {\r\n                    // this will cause us to come back in and reset cash again until we \r\n                    // haven't processed a fill for +- 10 seconds of the set cash time\r\n                    _syncedLiveBrokerageCashToday = false;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'');\r\n                }\r\n                else\r\n                {\r\n                    _lastSyncTimeTicks = DateTime.UtcNow.Ticks;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'');\r\n                }\r\n            })", span="585-600"];
m5_270 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="515-515"];
m5_274 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m5_154 [cluster="QuantConnect.Orders.Order.Clone()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="224-224"];
m5_276 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m5_294 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="606-606"];
m5_295 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="var timeout = TimeSpan.FromSeconds(60)", span="608-608"];
m5_296 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="!_orderRequestQueue.WaitHandle.WaitOne(timeout)", span="609-609"];
m5_297 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Exit(): Exceed timeout: '' + (int)(timeout.TotalSeconds) + '' seconds.'')", span="611-611"];
m5_298 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="_cancellationTokenSource.Cancel()", span="613-613"];
m5_299 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="606-606"];
m5_475 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", span="296-296"];
m5_277 [cluster="Unk.ConvertToAccountCurrency", file="BrokerageTransactionHandler.cs", label="Entry Unk.ConvertToAccountCurrency", span=""];
m5_103 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m5_281 [cluster="Unk.SetCash", file="BrokerageTransactionHandler.cs", label="Entry Unk.SetCash", span=""];
m5_377 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m5_171 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m5_166 [cluster="Unk.FirstOrDefault", file="BrokerageTransactionHandler.cs", label="Entry Unk.FirstOrDefault", span=""];
m5_67 [cluster="QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", span="164-164"];
m5_379 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m5_271 [cluster="System.Threading.Monitor.TryEnter(object)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Monitor.TryEnter(object)", span="0-0"];
m5_98 [cluster="QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", span="145-145"];
m5_95 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", span="391-391"];
m5_373 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1044-1044"];
m5_500 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="order.Type == OrderType.Market ||\r\n                order.Type == OrderType.MarketOnOpen ||\r\n                order.Type == OrderType.MarketOnClose", span="1047-1049"];
m5_502 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="var increment = security.PriceVariationModel.GetMinimumPriceVariation(security)", span="1054-1054"];
m5_509 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="order.Type", span="1062-1062"];
m5_511 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="limitPrice = ((LimitOrder)order).LimitPrice", span="1065-1065"];
m5_513 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="((LimitOrder)order).LimitPrice = limitRound", span="1067-1067"];
m5_515 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="stopPrice = ((StopMarketOrder)order).StopPrice", span="1070-1070"];
m5_517 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="((StopMarketOrder)order).StopPrice = stopRound", span="1072-1072"];
m5_519 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="limitPrice = ((StopLimitOrder)order).LimitPrice", span="1075-1075"];
m5_521 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="((StopLimitOrder)order).LimitPrice = limitRound", span="1077-1077"];
m5_522 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="stopPrice = ((StopLimitOrder)order).StopPrice", span="1078-1078"];
m5_524 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="((StopLimitOrder)order).StopPrice = stopRound", span="1080-1080"];
m5_501 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="return;", span="1051-1051"];
m5_503 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="increment == 0", span="1055-1055"];
m5_512 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="limitRound = Math.Round(limitPrice / increment) * increment", span="1066-1066"];
m5_516 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="stopRound = Math.Round(stopPrice / increment) * increment", span="1071-1071"];
m5_520 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="limitRound = Math.Round(limitPrice / increment) * increment", span="1076-1076"];
m5_523 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="stopRound = Math.Round(stopPrice / increment) * increment", span="1079-1079"];
m5_504 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="return;", span="1055-1055"];
m5_505 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="var limitPrice = 0m", span="1057-1057"];
m5_506 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="var limitRound = 0m", span="1058-1058"];
m5_507 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="var stopPrice = 0m", span="1059-1059"];
m5_508 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="var stopRound = 0m", span="1060-1060"];
m5_510 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="OrderType.Limit", span="1064-1064"];
m5_514 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="OrderType.StopMarket", span="1069-1069"];
m5_518 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="OrderType.StopLimit", span="1074-1074"];
m5_525 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="var format = ''Warning: To meet brokerage precision requirements, order {0}Price was rounded to {1} from {2}''", span="1086-1086"];
m5_526 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="!limitPrice.Equals(limitRound)", span="1088-1088"];
m5_527 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(format, ''Limit'', limitRound, limitPrice))", span="1090-1090"];
m5_528 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="!stopPrice.Equals(stopRound)", span="1092-1092"];
m5_529 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(format, ''Stop'', stopRound, stopPrice))", span="1094-1094"];
m5_530 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1044-1044"];
m5_50 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="BrokerageTransactionHandler.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m5_490 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="418-418"];
m5_376 [cluster="string.Format(string, object, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_531 [cluster="QuantConnect.Securities.IPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.IPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)", span="28-28"];
m5_26 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="878-878"];
m5_445 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var order = GetOrderByIdInternal(fill.OrderId)", span="881-881"];
m5_447 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvent(): Unable to locate Order with id '' + fill.OrderId)", span="884-884"];
m5_449 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order.Status = fill.Status", span="889-889"];
m5_450 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="897-897"];
m5_452 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[fill.Symbol]", span="902-902"];
m5_453 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.ProcessFill(fill)", span="915-915"];
m5_456 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.TradeBuilder.ProcessFill(fill, conversionRate, multiplier)", span="920-920"];
m5_461 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_orderTickets.TryGetValue(fill.OrderId, out ticket)", span="931-931"];
m5_462 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="ticket.AddOrderEvent(fill)", span="933-933"];
m5_464 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvent(): Unable to resolve ticket: '' + fill.OrderId)", span="938-938"];
m5_465 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Status != OrderStatus.None", span="942-942"];
m5_466 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_resultHandler.OrderEvent(fill)", span="945-945"];
m5_467 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.OnOrderEvent(fill)", span="949-949"];
m5_446 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order == null", span="882-882"];
m5_459 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Error in Portfolio.ProcessFill: {1}'', order.Id, err.Message))", span="925-925"];
m5_463 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order.Price = ticket.AverageFillPrice", span="934-934"];
m5_448 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="return;", span="885-885"];
m5_451 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Interlocked.Exchange(ref _lastFillTimeTicks, DateTime.UtcNow.Ticks)", span="899-899"];
m5_460 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="930-930"];
m5_454 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var conversionRate = security.QuoteCurrency.ConversionRate", span="917-917"];
m5_455 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var multiplier = security.SymbolProperties.ContractMultiplier", span="918-918"];
m5_457 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label=Exception, span="922-922"];
m5_458 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="924-924"];
m5_468 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label=Exception, span="951-951"];
m5_469 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="953-953"];
m5_470 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.RunTimeError = err", span="955-955"];
m5_471 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="878-878"];
m5_236 [cluster="System.TimeSpan.FromSeconds(double)", file="BrokerageTransactionHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m5_134 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m5_167 [cluster="Unk.Clone", file="BrokerageTransactionHandler.cs", label="Entry Unk.Clone", span=""];
m5_477 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="411-411"];
m5_24 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageTransactionHandler.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m5_203 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", span="621-621"];
m5_302 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderResponse response", span="623-623"];
m5_303 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="request.OrderRequestType", span="624-624"];
m5_305 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="response = HandleSubmitOrderRequest((SubmitOrderRequest)request)", span="627-627"];
m5_307 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="response = HandleUpdateOrderRequest((UpdateOrderRequest)request)", span="630-630"];
m5_309 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="response = HandleCancelOrderRequest((CancelOrderRequest)request)", span="633-633"];
m5_311 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(response, OrderRequestStatus.Processed)", span="640-640"];
m5_304 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Submit", span="626-626"];
m5_306 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Update", span="629-629"];
m5_308 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Cancel", span="632-632"];
m5_310 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="throw new ArgumentOutOfRangeException();", span="636-636"];
m5_312 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", span="621-621"];
m5_282 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m5_131 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m5_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="222-222"];
m5_74 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="224-224"];
m5_75 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orderTickets.TryGetValue(request.OrderId, out ticket)", span="225-225"];
m5_76 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderTicket.InvalidUpdateOrderId(_algorithm.Transactions, request);", span="227-227"];
m5_77 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.AddUpdateRequest(request)", span="230-230"];
m5_78 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="var order = GetOrderByIdInternal(request.OrderId)", span="235-235"];
m5_80 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="239-239"];
m5_82 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.InvalidStatus(request, order))", span="244-244"];
m5_83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.Quantity.HasValue && request.Quantity.Value == 0", span="246-246"];
m5_84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.ZeroQuantity(request))", span="248-248"];
m5_86 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.WarmingUp(request))", span="252-252"];
m5_87 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Success(request), OrderRequestStatus.Processing)", span="256-256"];
m5_88 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.Add(request)", span="257-257"];
m5_91 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, err.Message))", span="263-263"];
m5_92 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="266-266"];
m5_79 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order == null", span="236-236"];
m5_81 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status.IsClosed()", span="241-241"];
m5_85 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.IsWarmingUp", span="250-250"];
m5_89 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="260-260"];
m5_90 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="262-262"];
m5_93 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="222-222"];
m5_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BrokerageTransactionHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_239 [cluster="Unk.TryRemove", file="BrokerageTransactionHandler.cs", label="Entry Unk.TryRemove", span=""];
m5_472 [cluster="System.Threading.Interlocked.Exchange(ref long, long)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Interlocked.Exchange(ref long, long)", span="0-0"];
m5_374 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="378-378"];
m5_94 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m5_484 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m5_172 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="398-398"];
m5_173 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="_orders == null", span="400-400"];
m5_175 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="filter != null", span="407-407"];
m5_176 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="return _orders.Select(x => x.Value).Where(filter).Select(x => x.Clone());", span="410-410"];
m5_174 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="return Enumerable.Empty<Order>();", span="404-404"];
m5_177 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="return _orders.Select(x => x.Value).Select(x => x.Clone());", span="412-412"];
m5_178 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="398-398"];
m5_314 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="750-750"];
m5_382 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Order order", span="752-752"];
m5_384 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orders.TryGetValue(request.OrderId, out order) || !_orderTickets.TryGetValue(request.OrderId, out ticket)", span="754-754"];
m5_385 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdateOrderRequest(): Unable to update order with ID '' + request.OrderId)", span="756-756"];
m5_386 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.UnableToFindOrder(request);", span="757-757"];
m5_388 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.InvalidStatus(request, order);", span="762-762"];
m5_392 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_algorithm.LiveMode && !_algorithm.BrokerageModel.CanUpdateOrder(_algorithm.Securities[order.Symbol], order, request, out message)", span="771-771"];
m5_396 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageModelRefusedToUpdateOrder, ''OrderID: '' + order.Id + '' '' + message)", span="776-776"];
m5_400 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.ApplyUpdateOrderRequest(request)", span="783-783"];
m5_409 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="var errorMessage = ''Brokerage failed to update order with id '' + request.OrderId", span="804-804"];
m5_412 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToUpdateOrder, errorMessage);", span="807-807"];
m5_413 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Success(request);", span="810-810"];
m5_383 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="753-753"];
m5_387 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!CanUpdateOrder(order)", span="760-760"];
m5_389 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[order.Symbol]", span="766-766"];
m5_390 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Quantity = RoundOffOrder(order, security)", span="767-767"];
m5_393 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="774-774"];
m5_395 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to update order: '' + order.Id)", span="775-775"];
m5_398 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''BrokerageModel declared unable to update order''))", span="778-778"];
m5_401 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="RoundOrderPrices(order, security)", span="786-786"];
m5_402 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.SetOrder(order)", span="788-788"];
m5_404 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderUpdated = _brokerage.UpdateOrder(order)", span="793-793"];
m5_411 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to update order''))", span="806-806"];
m5_391 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="BrokerageMessageEvent message", span="770-770"];
m5_394 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="message == null", span="775-775"];
m5_397 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="777-777"];
m5_399 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="779-779"];
m5_403 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="bool orderUpdated", span="790-790"];
m5_405 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="795-795"];
m5_408 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!orderUpdated", span="801-801"];
m5_406 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="797-797"];
m5_407 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderUpdated = false", span="798-798"];
m5_410 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(errorMessage)", span="805-805"];
m5_414 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="750-750"];
m5_234 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m5_133 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", span="357-357"];
m5_275 [cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62"];
m5_132 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", span="377-377"];
m5_99 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m5_444 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="98-98"];
m5_372 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1014-1014"];
m5_491 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="var orderLotMod = order.Quantity % security.SymbolProperties.LotSize", span="1016-1016"];
m5_493 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="order.Quantity = order.Quantity - orderLotMod", span="1020-1020"];
m5_495 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(\r\n                        string.Format(\r\n                            ''Warning: Due to brokerage limitations, orders will be rounded to the nearest lot size of {0}'',\r\n                            security.SymbolProperties.LotSize))", span="1024-1027"];
m5_497 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="return order.Quantity;", span="1030-1030"];
m5_498 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="return order.Quantity;", span="1034-1034"];
m5_492 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="orderLotMod != 0", span="1018-1018"];
m5_494 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="!_firstRoundOffMessage", span="1022-1022"];
m5_496 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="_firstRoundOffMessage = true", span="1028-1028"];
m5_499 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1014-1014"];
m5_160 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", span="384-384"];
m5_161 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="_orders == null", span="387-387"];
m5_163 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="var order = _orders.FirstOrDefault(x => x.Value.BrokerId.Contains(brokerageId)).Value", span="389-389"];
m5_162 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="return null;", span="387-387"];
m5_164 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="return order != null ? order.Clone() : null;", span="390-390"];
m5_165 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", span="384-384"];
m5_273 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m5_146 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", span="350-350"];
m5_147 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="352-352"];
m5_148 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="_orderTickets.TryGetValue(orderId, out ticket)", span="353-353"];
m5_149 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="354-354"];
m5_150 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", span="350-350"];
m5_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", span="273-273"];
m5_104 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="275-275"];
m5_105 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orderTickets.TryGetValue(request.OrderId, out ticket)", span="276-276"];
m5_107 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderTicket.InvalidCancelOrderId(_algorithm.Transactions, request);", span="279-279"];
m5_108 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="!ticket.TrySetCancelRequest(request)", span="286-286"];
m5_109 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.InvalidRequest, ''Cancellation is already in progress.''))", span="289-289"];
m5_111 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="var order = GetOrderByIdInternal(request.OrderId)", span="294-294"];
m5_112 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order != null && request.Tag != null", span="295-295"];
m5_113 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Tag = request.Tag", span="297-297"];
m5_116 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="302-302"];
m5_119 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.InvalidStatus(request, order))", span="307-307"];
m5_121 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.WarmingUp(request))", span="311-311"];
m5_124 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Success(request), OrderRequestStatus.Processing)", span="322-322"];
m5_125 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.Add(request)", span="323-323"];
m5_128 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, err.Message))", span="329-329"];
m5_106 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Unable to locate ticket for order.'')", span="278-278"];
m5_110 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="290-290"];
m5_129 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="332-332"];
m5_114 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order == null", span="299-299"];
m5_117 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status.IsClosed()", span="304-304"];
m5_118 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Order already '' + order.Status)", span="306-306"];
m5_122 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.CancelPending", span="316-316"];
m5_123 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m))", span="319-319"];
m5_115 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Cannot find this id.'')", span="301-301"];
m5_120 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.IsWarmingUp", span="309-309"];
m5_126 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="326-326"];
m5_127 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="328-328"];
m5_130 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", span="273-273"];
m5_535 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m5_536 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m5_537 [file="BrokerageTransactionHandler.cs", label=string, span=""];
m5_538 [file="BrokerageTransactionHandler.cs", label=lowestOrderIdToKeep, span=""];
m5_539 [file="BrokerageTransactionHandler.cs", label=cash, span=""];
m6_165 [cluster="QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", span="38-38"];
m6_2 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="47-47"];
m6_3 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageTransactionHandlerTests.cs", label="return Enumerable.Empty<Slice>();", span="49-49"];
m6_4 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="47-47"];
m6_91 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", span="155-155"];
m6_92 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="158-158"];
m6_93 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="159-159"];
m6_101 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="173-173"];
m6_103 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="175-175"];
m6_94 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var security = _algorithm.Securities[Ticker]", span="162-162"];
m6_95 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var price = 1.12129m", span="163-163"];
m6_96 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, security.Symbol, price, price, price))", span="164-164"];
m6_97 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Limit, security.Type, security.Symbol, 1600, 1.12121212m, 1.12121212m, DateTime.Now, '''')", span="165-165"];
m6_98 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="168-168"];
m6_99 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="169-169"];
m6_104 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="178-178"];
m6_105 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="179-179"];
m6_100 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="170-170"];
m6_102 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="174-174"];
m6_106 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="180-180"];
m6_107 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(1000, orderTicket.Quantity)", span="182-182"];
m6_108 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(1.12121m, orderTicket.Get(OrderField.LimitPrice))", span="184-184"];
m6_109 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", span="155-155"];
m6_39 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m6_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="89-89"];
m6_0 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="43-43"];
m6_1 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="43-43"];
m6_14 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.EmptyHistoryProvider()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.EmptyHistoryProvider()", span="36-36"];
m6_182 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="250-250"];
m6_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", span="621-621"];
m6_19 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", span="70-70"];
m6_20 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="73-73"];
m6_21 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="74-74"];
m6_27 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="86-86"];
m6_29 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="88-88"];
m6_22 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var security = _algorithm.Securities[Ticker]", span="77-77"];
m6_23 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, 1600, 0, 0, DateTime.Now, '''')", span="78-78"];
m6_24 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="81-81"];
m6_25 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="82-82"];
m6_30 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="91-91"];
m6_31 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="92-92"];
m6_26 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="83-83"];
m6_28 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="87-87"];
m6_32 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="93-93"];
m6_33 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(1000, orderTicket.Quantity)", span="95-95"];
m6_34 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", span="70-70"];
m6_40 [cluster="Mock<IOrderProcessor>.cstr", file="BrokerageTransactionHandlerTests.cs", label="Entry Mock<IOrderProcessor>.cstr", span=""];
m6_166 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Entry lambda expression", span="235-235"];
m6_49 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Entry lambda expression", span="82-82"];
m6_50 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="82-82"];
m6_51 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Exit lambda expression", span="82-82"];
m6_70 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Entry lambda expression", span="111-111"];
m6_71 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="111-111"];
m6_72 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Exit lambda expression", span="111-111"];
m6_88 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Entry lambda expression", span="140-140"];
m6_89 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="140-140"];
m6_90 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Exit lambda expression", span="140-140"];
m6_113 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Entry lambda expression", span="169-169"];
m6_114 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="169-169"];
m6_115 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Exit lambda expression", span="169-169"];
m6_135 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Entry lambda expression", span="202-202"];
m6_136 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="202-202"];
m6_137 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Exit lambda expression", span="202-202"];
m6_167 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="235-235"];
m6_168 [cluster="lambda expression", file="BrokerageTransactionHandlerTests.cs", label="Exit lambda expression", span="235-235"];
m6_110 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m6_41 [cluster="Unk.Setup", file="BrokerageTransactionHandlerTests.cs", label="Entry Unk.Setup", span=""];
m6_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="157-157"];
m6_111 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610"];
m6_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1287-1287"];
m6_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m6_46 [cluster="Unk.IsTrue", file="BrokerageTransactionHandlerTests.cs", label="Entry Unk.IsTrue", span=""];
m6_169 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", span="261-261"];
m6_170 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var algo = new QCAlgorithm()", span="263-263"];
m6_171 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="algo.SetBrokerageModel(BrokerageName.Default)", span="264-264"];
m6_172 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="algo.SetCash(100000)", span="265-265"];
m6_173 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", color=red, community=0, file="BrokerageTransactionHandlerTests.cs", label="0: var security = algo.AddSecurity(SecurityType.Forex, ''BTCUSD'', Resolution.Hour, Market.Bitfinex, false, 3.3m, true)", span="268-268"];
m6_175 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(algo, new BacktestingBrokerage(algo), new BacktestingResultHandler())", span="272-272"];
m6_174 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="271-271"];
m6_176 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, 123.456m, 0, 0, DateTime.Now, '''')", span="275-275"];
m6_178 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var actual = transactionHandler.RoundOffOrder(order, security)", span="277-277"];
m6_177 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var order = Order.CreateOrder(orderRequest)", span="276-276"];
m6_179 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(123.45m, actual)", span="279-279"];
m6_180 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", span="261-261"];
m6_138 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", span="221-221"];
m6_139 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="224-224"];
m6_140 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="225-225"];
m6_148 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="239-239"];
m6_149 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="240-240"];
m6_154 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Process(cancelRequest)", span="247-247"];
m6_159 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.HandleOrderRequest(cancelRequest)", span="253-253"];
m6_141 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="var security = _algorithm.Securities[Ticker]", span="228-228"];
m6_142 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="var price = 1.12m", span="229-229"];
m6_143 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, security.Symbol, price, price, price))", span="230-230"];
m6_144 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Limit, security.Type, security.Symbol, 1000, 0, 1.11m, DateTime.Now, '''')", span="231-231"];
m6_145 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="234-234"];
m6_146 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="235-235"];
m6_150 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="241-241"];
m6_151 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="242-242"];
m6_147 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="236-236"];
m6_152 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="243-243"];
m6_153 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="var cancelRequest = new CancelOrderRequest(DateTime.Now, orderTicket.OrderId, '''')", span="246-246"];
m6_158 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.CancelPending)", span="251-251"];
m6_163 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Canceled)", span="257-257"];
m6_155 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(cancelRequest.Response.IsProcessed)", span="248-248"];
m6_156 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(cancelRequest.Response.IsSuccess)", span="249-249"];
m6_157 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(cancelRequest.Status == OrderRequestStatus.Processing)", span="250-250"];
m6_160 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(cancelRequest.Response.IsProcessed)", span="254-254"];
m6_161 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(cancelRequest.Response.IsSuccess)", span="255-255"];
m6_162 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(cancelRequest.Status == OrderRequestStatus.Processed)", span="256-256"];
m6_164 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", span="221-221"];
m6_52 [cluster="Unk.>", file="BrokerageTransactionHandlerTests.cs", label="Entry Unk.>", span=""];
m6_73 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", span="128-128"];
m6_74 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="131-131"];
m6_75 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="132-132"];
m6_81 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="144-144"];
m6_83 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="146-146"];
m6_76 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="var security = _algorithm.Securities[Ticker]", span="135-135"];
m6_77 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, 600, 0, 0, DateTime.Now, '''')", span="136-136"];
m6_78 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="139-139"];
m6_79 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="140-140"];
m6_84 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="149-149"];
m6_85 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsError)", span="150-150"];
m6_80 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="141-141"];
m6_82 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="145-145"];
m6_86 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Invalid)", span="151-151"];
m6_87 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", span="128-128"];
m6_43 [cluster="Unk.Returns", file="BrokerageTransactionHandlerTests.cs", label="Entry Unk.Returns", span=""];
m6_53 [cluster="Unk.GetOrderTicket", file="BrokerageTransactionHandlerTests.cs", label="Entry Unk.GetOrderTicket", span=""];
m6_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49"];
m6_196 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", span="305-305"];
m6_197 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var algo = new QCAlgorithm()", span="307-307"];
m6_198 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="algo.SetBrokerageModel(BrokerageName.Default)", span="308-308"];
m6_199 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="algo.SetCash(100000)", span="309-309"];
m6_200 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", color=red, community=0, file="BrokerageTransactionHandlerTests.cs", label="0: var security = algo.AddSecurity(SecurityType.Forex, ''BTCUSD'', Resolution.Hour, Market.Bitfinex, false, 3.3m, true)", span="312-312"];
m6_202 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(algo, new BacktestingBrokerage(algo), new BacktestingResultHandler())", span="316-316"];
m6_201 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="315-315"];
m6_203 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, 0.009m, 0, 0, DateTime.Now, '''')", span="319-319"];
m6_205 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var actual = transactionHandler.RoundOffOrder(order, security)", span="321-321"];
m6_204 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var order = Order.CreateOrder(orderRequest)", span="320-320"];
m6_206 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(0, actual)", span="323-323"];
m6_207 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", span="305-305"];
m6_48 [cluster="Unk.AreEqual", file="BrokerageTransactionHandlerTests.cs", label="Entry Unk.AreEqual", span=""];
m6_112 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="211-211"];
m6_5 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="BrokerageTransactionHandlerTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m6_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="883-883"];
m6_6 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", span="60-60"];
m6_7 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm = new QCAlgorithm { HistoryProvider = new EmptyHistoryProvider() }", span="62-62"];
m6_8 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="63-63"];
m6_9 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.SetCash(100000)", span="64-64"];
m6_10 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.AddSecurity(SecurityType.Forex, Ticker)", span="65-65"];
m6_11 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.SetFinishedWarmingUp()", span="66-66"];
m6_12 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", span="60-60"];
m6_44 [cluster="Unk.SetOrderProcessor", file="BrokerageTransactionHandlerTests.cs", label="Entry Unk.SetOrderProcessor", span=""];
m6_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m6_184 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", span="283-283"];
m6_185 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var algo = new QCAlgorithm()", span="285-285"];
m6_186 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="algo.SetBrokerageModel(BrokerageName.Default)", span="286-286"];
m6_187 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="algo.SetCash(100000)", span="287-287"];
m6_188 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", color=red, community=0, file="BrokerageTransactionHandlerTests.cs", label="0: var security = algo.AddSecurity(SecurityType.Forex, ''BTCUSD'', Resolution.Hour, Market.Bitfinex, false, 3.3m, true)", span="290-290"];
m6_190 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(algo, new BacktestingBrokerage(algo), new BacktestingResultHandler())", span="294-294"];
m6_189 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="293-293"];
m6_191 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, -123.454m, 0, 0, DateTime.Now, '''')", span="297-297"];
m6_193 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var actual = transactionHandler.RoundOffOrder(order, security)", span="299-299"];
m6_192 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="var order = Order.CreateOrder(orderRequest)", span="298-298"];
m6_194 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(-123.45m, actual)", span="301-301"];
m6_195 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", span="283-283"];
m6_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler()", span="34-34"];
m6_37 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="176-176"];
m6_183 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1014-1014"];
m6_116 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", span="188-188"];
m6_117 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="191-191"];
m6_118 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="192-192"];
m6_126 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="206-206"];
m6_128 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="208-208"];
m6_119 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var security = _algorithm.Securities[Ticker]", span="195-195"];
m6_120 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var price = 1.12129m", span="196-196"];
m6_121 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, security.Symbol, price, price, price))", span="197-197"];
m6_122 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.StopMarket, security.Type, security.Symbol, 1600, 1.12131212m, 1.12131212m, DateTime.Now, '''')", span="198-198"];
m6_123 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="201-201"];
m6_124 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="202-202"];
m6_129 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="211-211"];
m6_130 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="212-212"];
m6_125 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="203-203"];
m6_127 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="207-207"];
m6_131 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="213-213"];
m6_132 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(1000, orderTicket.Quantity)", span="215-215"];
m6_133 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(1.12131m, orderTicket.Get(OrderField.StopPrice))", span="217-217"];
m6_134 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", span="188-188"];
m6_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1257-1257"];
m6_42 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194"];
m6_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="103-103"];
m6_54 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", span="99-99"];
m6_55 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="102-102"];
m6_56 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="103-103"];
m6_62 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="115-115"];
m6_64 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="117-117"];
m6_57 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var security = _algorithm.Securities[Ticker]", span="106-106"];
m6_58 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, -1600, 0, 0, DateTime.Now, '''')", span="107-107"];
m6_59 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="110-110"];
m6_60 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="111-111"];
m6_65 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="120-120"];
m6_66 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="121-121"];
m6_61 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="112-112"];
m6_63 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="116-116"];
m6_67 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="122-122"];
m6_68 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Assert.AreEqual(-1000, orderTicket.Quantity)", span="124-124"];
m6_69 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", span="99-99"];
m6_208 [file="BrokerageTransactionHandlerTests.cs", label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", span=""];
m7_37 [cluster="System.Diagnostics.Process.Kill()", file="Cash.cs", label="Entry System.Diagnostics.Process.Kill()", span="0-0"];
m7_41 [cluster="Unk.Where", file="Cash.cs", label="Entry Unk.Where", span=""];
m7_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", span="45-45"];
m7_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="var useTwsSwitch = useTws ? ''-tws'' : ''''", span="47-47"];
m7_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="var arguments = string.Format(''{0} {1} {2} {3} {4} {5}'', file, ibControllerDirectory, twsDirectory, userID, password, useTwsSwitch)", span="54-54"];
m7_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="Log.Trace(''InteractiveBrokersGatewayRunner.Start(): Launching IBController for account '' + userID + ''...'')", span="56-56"];
m7_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label=useTws, span="65-65"];
m7_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="var batchFilename = Path.Combine(''InteractiveBrokers'', ''run-ib-controller.bat'')", span="48-48"];
m7_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="var bashFilename = Path.Combine(''InteractiveBrokers'', ''run-ib-controller.sh'')", span="49-49"];
m7_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="var file = OS.IsWindows ? batchFilename : bashFilename", span="53-53"];
m7_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="var processStartInfo = OS.IsWindows ? new ProcessStartInfo(''cmd.exe'', ''/C '' + arguments) : new ProcessStartInfo(''bash'', arguments)", span="58-58"];
m7_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="processStartInfo.UseShellExecute = false", span="60-60"];
m7_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="processStartInfo.RedirectStandardOutput = false", span="61-61"];
m7_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="var process = Process.Start(processStartInfo)", span="62-62"];
m7_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="ScriptProcessID = process.Id", span="63-63"];
m7_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="Thread.Sleep(10000)", span="68-68"];
m7_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="Thread.Sleep(15000)", span="71-71"];
m7_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label=Exception, span="74-74"];
m7_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="Log.Error(''InteractiveBrokersGatewayRunner.Start(): '' + err.Message)", span="76-76"];
m7_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="Cash.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", span="45-45"];
m7_25 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="83-83"];
m7_26 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="ScriptProcessID == 0", span="85-85"];
m7_27 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="return;", span="87-87"];
m7_28 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="Log.Trace(''InteractiveBrokersGatewayRunner.Stop(): Stopping IBController...'')", span="92-92"];
m7_29 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="GetSpawnedProcesses(ScriptProcessID).ToList()", span="96-96"];
m7_30 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="process.Kill()", span="99-99"];
m7_31 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="ScriptProcessID = 0", span="102-102"];
m7_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label=Exception, span="104-104"];
m7_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="Log.Error(''InteractiveBrokersGatewayRunner.Stop(): '' + err.Message)", span="106-106"];
m7_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Cash.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="83-83"];
m7_42 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="113-128"];
m7_45 [cluster="lambda expression", file="Cash.cs", label="return parent.Id == id;", span="120-120"];
m7_43 [cluster="lambda expression", file="Cash.cs", label="var parent = ProcessExtensions.Parent(x)", span="117-117"];
m7_44 [cluster="lambda expression", file="Cash.cs", label="parent != null", span="118-118"];
m7_46 [cluster="lambda expression", file="Cash.cs", label="return false;", span="125-125"];
m7_47 [cluster="lambda expression", file="Cash.cs", label="return false;", span="127-127"];
m7_48 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="113-128"];
m7_66 [cluster="System.Diagnostics.PerformanceCounter.NextValue()", file="Cash.cs", label="Entry System.Diagnostics.PerformanceCounter.NextValue()", span="0-0"];
m7_24 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Cash.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m7_40 [cluster="System.Diagnostics.Process.GetProcesses()", file="Cash.cs", label="Entry System.Diagnostics.Process.GetProcesses()", span="0-0"];
m7_50 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", span="134-134"];
m7_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="var processName = Process.GetProcessById(pid).ProcessName", span="136-136"];
m7_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="(int)processId.NextValue() == pid", span="144-144"];
m7_52 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="var processesByName = Process.GetProcessesByName(processName)", span="137-137"];
m7_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="processIndexdName = index == 0 ? processName : processName + ''#'' + index", span="142-142"];
m7_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="string processIndexdName = null", span="138-138"];
m7_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="index < processesByName.Length", span="140-140"];
m7_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="var index = 0", span="140-140"];
m7_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="return processIndexdName;", span="150-150"];
m7_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="index++", span="140-140"];
m7_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="var processId = new PerformanceCounter(''Process'', ''ID Process'', processIndexdName)", span="143-143"];
m7_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="return processIndexdName;", span="146-146"];
m7_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="Cash.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", span="134-134"];
m7_65 [cluster="System.Diagnostics.PerformanceCounter.PerformanceCounter(string, string, string)", file="Cash.cs", label="Entry System.Diagnostics.PerformanceCounter.PerformanceCounter(string, string, string)", span="0-0"];
m7_63 [cluster="System.Diagnostics.Process.GetProcessById(int)", file="Cash.cs", label="Entry System.Diagnostics.Process.GetProcessById(int)", span="0-0"];
m7_64 [cluster="System.Diagnostics.Process.GetProcessesByName(string)", file="Cash.cs", label="Entry System.Diagnostics.Process.GetProcessesByName(string)", span="0-0"];
m7_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Cash.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m7_23 [cluster="System.Threading.Thread.Sleep(int)", file="Cash.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m7_22 [cluster="System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", file="Cash.cs", label="Entry System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", span="0-0"];
m7_18 [cluster="System.IO.Path.Combine(string, string)", file="Cash.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m7_19 [cluster="string.Format(string, params object[])", file="Cash.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m7_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="Cash.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", span="159-159"];
m7_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="Cash.cs", label="return FindPidFromIndexedProcessName(FindIndexedProcessName(process.Id));", span="161-161"];
m7_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="Cash.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", span="159-159"];
m7_20 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Cash.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m7_21 [cluster="System.Diagnostics.ProcessStartInfo.ProcessStartInfo(string, string)", file="Cash.cs", label="Entry System.Diagnostics.ProcessStartInfo.ProcessStartInfo(string, string)", span="0-0"];
m7_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="Cash.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", span="153-153"];
m7_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="Cash.cs", label="var parentId = new PerformanceCounter(''Process'', ''Creating Process ID'', indexedProcessName)", span="155-155"];
m7_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="Cash.cs", label="return Process.GetProcessById((int)parentId.NextValue());", span="156-156"];
m7_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="Cash.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", span="153-153"];
m7_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="Cash.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", span="110-110"];
m7_38 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="Cash.cs", label="return Process.GetProcesses().Where(x =>\r\n            {\r\n                try\r\n                {\r\n                    var parent = ProcessExtensions.Parent(x);\r\n                    if (parent != null)\r\n                    {\r\n                        return parent.Id == id;\r\n                    }\r\n                }\r\n                catch\r\n                {\r\n                    return false;\r\n                }\r\n                return false;\r\n            });", span="113-128"];
m7_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="Cash.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", span="110-110"];
m7_73 [file="Cash.cs", label=int, span=""];
m11_84 [cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33"];
m11_42 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="DefaultBrokerageModel.cs", label="Order(''SPY'', -100)", span="123-123"];
m11_43 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="DefaultBrokerageModel.cs", label="_last = consolidated", span="125-125"];
m11_44 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", span="113-113"];
m11_45 [cluster="System.DateTime.ToString(string)", file="DefaultBrokerageModel.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m11_61 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="211-211"];
m11_62 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="security.Type", span="213-213"];
m11_63 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Base", span="215-215"];
m11_66 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Forex", span="219-219"];
m11_69 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Commodity", span="223-223"];
m11_64 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Equity", span="216-216"];
m11_65 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantSlippageModel(0);", span="217-217"];
m11_67 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Cfd", span="220-220"];
m11_68 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantSlippageModel(0);", span="221-221"];
m11_70 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Option", span="224-224"];
m11_71 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Future", span="225-225"];
m11_72 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantSlippageModel(0);", span="227-227"];
m11_73 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="211-211"];
m11_19 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Entry lambda expression", span="133-138"];
m11_3 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="SetStartDate(start)", span="50-50"];
m11_4 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="SetEndDate(start.AddDays(1))", span="51-51"];
m11_5 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="var thirtyMinuteConsolidator = new TradeBarConsolidator(TimeSpan.FromMinutes(30))", span="55-55"];
m11_6 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="thirtyMinuteConsolidator.DataConsolidated += ThirtyMinuteBarHandler", span="59-59"];
m11_74 [cluster="QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", span="30-30"];
m11_25 [cluster="QuantConnect.Orders.OrderType.IsStopOrder()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderType.IsStopOrder()", span="70-70"];
m11_20 [cluster="System.TimeSpan.FromMinutes(double)", file="DefaultBrokerageModel.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m11_21 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m11_26 [cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="249-249"];
m11_27 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="146-146"];
m11_23 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(int)", span="53-53"];
m11_22 [cluster="System.TimeSpan.FromDays(double)", file="DefaultBrokerageModel.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m11_7 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="SubscriptionManager.AddConsolidator(''SPY'', thirtyMinuteConsolidator)", span="62-62"];
m11_8 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="var oneDayConsolidator = new TradeBarConsolidator(TimeSpan.FromDays(1))", span="71-71"];
m11_9 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="var threeCountConsolidator = new TradeBarConsolidator(3)", span="74-74"];
m11_10 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="var three_oneDayBar = new SequentialConsolidator(oneDayConsolidator, threeCountConsolidator)", span="79-79"];
m11_31 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Equity", span="155-155"];
m11_32 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return 2m;", span="156-156"];
m11_33 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Forex", span="158-158"];
m11_34 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Cfd", span="159-159"];
m11_36 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Base", span="162-162"];
m11_37 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Commodity", span="163-163"];
m11_38 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Option", span="164-164"];
m11_39 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Future", span="165-165"];
m11_40 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return 1m;", span="167-167"];
m11_41 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="146-146"];
m11_0 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="70-70"];
m11_1 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", color=green, community=0, file="DefaultBrokerageModel.cs", label="1: AccountType = accountType", span="72-72"];
m11_2 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="70-70"];
m11_11 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="116-116"];
m11_12 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs", label="return true;", span="118-118"];
m11_13 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="116-116"];
m11_47 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="security.Type", span="188-188"];
m11_24 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", span="107-107"];
m11_60 [cluster="QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", span="38-38"];
m11_46 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="186-186"];
m11_59 [cluster="QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", span="31-31"];
m11_28 [cluster="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.ThreeDayBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", color=red, community=0, file="DefaultBrokerageModel.cs", label="1: Entry QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm.ThreeDayBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", span="133-133"];
m11_30 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="security.Type", span="153-153"];
m11_29 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", color=red, community=0, file="DefaultBrokerageModel.cs", label="1: return 1m;", span="150-150"];
m11_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m11_75 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="237-237"];
m11_76 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="accountType == AccountType.Cash", span="239-239"];
m11_77 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="security.Type", span="241-241"];
m11_82 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="return new ImmediateSettlementModel();", span="251-251"];
m11_78 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="SecurityType.Equity", span="243-243"];
m11_80 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="SecurityType.Option", span="246-246"];
m11_79 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="return new DelayedSettlementModel(Equity.DefaultSettlementDays, Equity.DefaultSettlementTime);", span="244-244"];
m11_81 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="return new DelayedSettlementModel(Option.DefaultSettlementDays, Option.DefaultSettlementTime);", span="247-247"];
m11_83 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="237-237"];
m11_16 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="DefaultBrokerageModel.cs", label="tickets.ForEach(ticket => ticket.Update(new UpdateOrderFields\r\n            {\r\n                Quantity = (int?) (ticket.Quantity/splitFactor),\r\n                LimitPrice = ticket.OrderType.IsLimitOrder() ? ticket.Get(OrderField.LimitPrice)*splitFactor : (decimal?) null,\r\n                StopPrice = ticket.OrderType.IsStopOrder() ? ticket.Get(OrderField.StopPrice)*splitFactor : (decimal?) null\r\n            }))", span="133-138"];
m11_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1174-1174"];
m11_15 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="DefaultBrokerageModel.cs", label="var splitFactor = split.SplitFactor", span="132-132"];
m11_85 [cluster="QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", span="23-23"];
m11_48 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Base", span="190-190"];
m11_49 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Forex", span="191-191"];
m11_50 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Cfd", span="192-192"];
m11_51 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantFeeModel(0m);", span="193-193"];
m11_52 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", span=""];
m11_56 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Commodity", span="200-200"];
m11_53 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Option", span="196-196"];
m11_54 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="SecurityType.Future", span="197-197"];
m11_55 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new InteractiveBrokersFeeModel();", span="198-198"];
m11_57 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="return new ConstantFeeModel(0m);", span="202-202"];
m11_58 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="186-186"];
m11_14 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="129-129"];
m11_17 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="129-129"];
m11_86 [file="DefaultBrokerageModel.cs", label="QuantConnect.Brokerages.DefaultBrokerageModel", span=""];
m11_87 [file="DefaultBrokerageModel.cs", label=splitFactor, span=""];
m13_157 [cluster="string.Contains(string)", file="Extensions.cs", label="Entry string.Contains(string)", span="0-0"];
m13_103 [cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", span="627-627"];
m13_119 [cluster="string.Compare(string, string, System.StringComparison)", file="Extensions.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m13_105 [cluster="QuantConnect.Symbol.Equals(QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Symbol.Equals(QuantConnect.Symbol)", span="359-359"];
m13_125 [cluster="QuantConnect.Symbol.Equals(QuantConnect.Symbol)", file="Extensions.cs", label="ReferenceEquals(null, other)", span="361-361"];
m13_127 [cluster="QuantConnect.Symbol.Equals(QuantConnect.Symbol)", file="Extensions.cs", label="ReferenceEquals(this, other)", span="362-362"];
m13_129 [cluster="QuantConnect.Symbol.Equals(QuantConnect.Symbol)", file="Extensions.cs", label="return ID.Equals(other.ID);", span="364-364"];
m13_126 [cluster="QuantConnect.Symbol.Equals(QuantConnect.Symbol)", file="Extensions.cs", label="return false;", span="361-361"];
m13_128 [cluster="QuantConnect.Symbol.Equals(QuantConnect.Symbol)", file="Extensions.cs", label="return true;", span="362-362"];
m13_130 [cluster="QuantConnect.Symbol.Equals(QuantConnect.Symbol)", file="Extensions.cs", label="Exit QuantConnect.Symbol.Equals(QuantConnect.Symbol)", span="359-359"];
m13_104 [cluster="object.GetType()", file="Extensions.cs", label="Entry object.GetType()", span="0-0"];
m13_153 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m13_162 [cluster="QuantConnect.Symbol.StartsWith(string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.StartsWith(string)", span="441-441"];
m13_163 [cluster="QuantConnect.Symbol.StartsWith(string)", file="Extensions.cs", label="return Value.StartsWith(value);", span="441-441"];
m13_164 [cluster="QuantConnect.Symbol.StartsWith(string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.StartsWith(string)", span="441-441"];
m13_26 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Extensions.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m13_101 [cluster="object.ReferenceEquals(object, object)", file="Extensions.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m13_22 [cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="374-374"];
m13_106 [cluster="QuantConnect.Symbol.GetHashCode()", file="Extensions.cs", label="Entry QuantConnect.Symbol.GetHashCode()", span="307-307"];
m13_107 [cluster="QuantConnect.Symbol.GetHashCode()", file="Extensions.cs", label="return ID.GetHashCode();", span="310-310"];
m13_108 [cluster="QuantConnect.Symbol.GetHashCode()", file="Extensions.cs", label="Exit QuantConnect.Symbol.GetHashCode()", span="307-307"];
m13_110 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="Entry QuantConnect.Symbol.CompareTo(object)", span="320-320"];
m13_111 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="var str = obj as string", span="322-322"];
m13_114 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="var sym = obj as Symbol", span="327-327"];
m13_112 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="str != null", span="323-323"];
m13_113 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="return string.Compare(Value, str, StringComparison.OrdinalIgnoreCase);", span="325-325"];
m13_115 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="sym != null", span="328-328"];
m13_116 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="return string.Compare(Value, sym.Value, StringComparison.OrdinalIgnoreCase);", span="330-330"];
m13_117 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="throw new ArgumentException(''Object must be of type Symbol or string.'');", span="333-333"];
m13_118 [cluster="QuantConnect.Symbol.CompareTo(object)", file="Extensions.cs", label="Exit QuantConnect.Symbol.CompareTo(object)", span="320-320"];
m13_121 [cluster="QuantConnect.Symbol.ToString()", file="Extensions.cs", label="Entry QuantConnect.Symbol.ToString()", span="343-343"];
m13_122 [cluster="QuantConnect.Symbol.ToString()", file="Extensions.cs", label="return SymbolCache.GetTicker(this);", span="345-345"];
m13_123 [cluster="QuantConnect.Symbol.ToString()", file="Extensions.cs", label="Exit QuantConnect.Symbol.ToString()", span="343-343"];
m13_45 [cluster="System.DateTime.ToString(string)", file="Extensions.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m13_66 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Extensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m13_0 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="46-46"];
m13_1 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="SecurityIdentifier sid", span="48-48"];
m13_3 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label=securityType, span="50-50"];
m13_5 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="sid = SecurityIdentifier.GenerateBase(ticker, market)", span="53-53"];
m13_7 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="sid = SecurityIdentifier.GenerateEquity(ticker, market)", span="56-56"];
m13_9 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="sid = SecurityIdentifier.GenerateForex(ticker, market)", span="59-59"];
m13_11 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="sid = SecurityIdentifier.GenerateCfd(ticker, market)", span="62-62"];
m13_13 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="return CreateOption(ticker, market, default(OptionStyle), default(OptionRight), 0, SecurityIdentifier.DefaultDate);", span="65-65"];
m13_16 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="return CreateFuture(ticker, market, SecurityIdentifier.DefaultDate);", span="69-69"];
m13_17 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="throw new NotImplementedException(''The security type has not been implemented yet: '' + securityType);", span="72-72"];
m13_18 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="return new Symbol(sid, alias ?? ticker, underlyingSumbol);", span="75-75"];
m13_2 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="Symbol underlyingSumbol = null", span="49-49"];
m13_4 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="SecurityType.Base", span="52-52"];
m13_6 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="SecurityType.Equity", span="55-55"];
m13_8 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="SecurityType.Forex", span="58-58"];
m13_10 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="SecurityType.Cfd", span="61-61"];
m13_12 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="SecurityType.Option", span="64-64"];
m13_14 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="SecurityType.Commodity", span="67-67"];
m13_15 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="SecurityType.Future", span="68-68"];
m13_19 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="46-46"];
m13_43 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="301-301"];
m13_136 [cluster="QuantConnect.Symbol.operator !=(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Symbol.operator !=(QuantConnect.Symbol, QuantConnect.Symbol)", span="385-385"];
m13_137 [cluster="QuantConnect.Symbol.operator !=(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="ReferenceEquals(left, null)", span="387-387"];
m13_138 [cluster="QuantConnect.Symbol.operator !=(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="return ReferenceEquals(right, null);", span="387-387"];
m13_139 [cluster="QuantConnect.Symbol.operator !=(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="return !left.Equals(right);", span="388-388"];
m13_140 [cluster="QuantConnect.Symbol.operator !=(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="Exit QuantConnect.Symbol.operator !=(QuantConnect.Symbol, QuantConnect.Symbol)", span="385-385"];
m13_165 [cluster="string.StartsWith(string)", file="Extensions.cs", label="Entry string.StartsWith(string)", span="0-0"];
m13_169 [cluster="string.ToLower()", file="Extensions.cs", label="Entry string.ToLower()", span="0-0"];
m13_120 [cluster="System.ArgumentException.ArgumentException(string)", file="Extensions.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_161 [cluster="string.EndsWith(string)", file="Extensions.cs", label="Entry string.EndsWith(string)", span="0-0"];
m13_44 [cluster="string.ToUpper()", file="Extensions.cs", label="Entry string.ToUpper()", span="0-0"];
m13_131 [cluster="QuantConnect.Symbol.operator ==(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Symbol.operator ==(QuantConnect.Symbol, QuantConnect.Symbol)", span="373-373"];
m13_132 [cluster="QuantConnect.Symbol.operator ==(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="ReferenceEquals(left, null)", span="375-375"];
m13_133 [cluster="QuantConnect.Symbol.operator ==(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="return ReferenceEquals(right, null);", span="375-375"];
m13_134 [cluster="QuantConnect.Symbol.operator ==(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="return left.Equals(right);", span="376-376"];
m13_135 [cluster="QuantConnect.Symbol.operator ==(QuantConnect.Symbol, QuantConnect.Symbol)", file="Extensions.cs", label="Exit QuantConnect.Symbol.operator ==(QuantConnect.Symbol, QuantConnect.Symbol)", span="373-373"];
m13_124 [cluster="QuantConnect.SymbolCache.GetTicker(QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.SymbolCache.GetTicker(QuantConnect.Symbol)", span="70-70"];
m13_46 [cluster="System.Enum.ToString()", file="Extensions.cs", label="Entry System.Enum.ToString()", span="0-0"];
m13_25 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="138-138"];
m13_48 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="var expirationSymbology = new Dictionary<int, char>\r\n            {\r\n                { 1, 'F' },\r\n                { 2, 'G' },\r\n                { 3, 'H' },\r\n                { 4, 'J' },\r\n                { 5, 'K' },\r\n                { 6, 'M' },\r\n                { 7, 'N' },\r\n                { 8, 'Q' },\r\n                { 9, 'U' },\r\n                { 10, 'V' },\r\n                { 11, 'X' },\r\n                { 12, 'Z' }\r\n            }", span="140-154"];
m13_49 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="var underlyingSid = SecurityIdentifier.GenerateBase(underlying, market)", span="156-156"];
m13_50 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="var sid = SecurityIdentifier.GenerateFuture(expiry, underlyingSid, market)", span="157-157"];
m13_51 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="var underlyingSymbol = new Symbol(underlyingSid, underlying)", span="158-158"];
m13_52 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="expiry == SecurityIdentifier.DefaultDate", span="160-160"];
m13_53 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="alias = alias ?? ''?'' + underlying.ToUpper()", span="162-162"];
m13_55 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="alias = alias ?? string.Format(''{0}{1}{2}'', sym, expirationSymbology[sid.Date.Month], sid.Date.Year % 100)", span="167-167"];
m13_54 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="var sym = sid.Symbol", span="166-166"];
m13_56 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="return new Symbol(sid, alias, underlyingSymbol);", span="170-170"];
m13_57 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="138-138"];
m13_24 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="90-90"];
m13_28 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="var underlyingSid = SecurityIdentifier.GenerateEquity(underlying, market)", span="92-92"];
m13_29 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="var underlyingSymbol = new Symbol(underlyingSid, underlying)", span="93-93"];
m13_30 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="return CreateOption(underlyingSymbol, market, style, right, strike, expiry, alias);", span="95-95"];
m13_31 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="90-90"];
m13_23 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", span="385-385"];
m13_158 [cluster="QuantConnect.Symbol.EndsWith(string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.EndsWith(string)", span="439-439"];
m13_159 [cluster="QuantConnect.Symbol.EndsWith(string)", file="Extensions.cs", label="return Value.EndsWith(value);", span="439-439"];
m13_160 [cluster="QuantConnect.Symbol.EndsWith(string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.EndsWith(string)", span="439-439"];
m13_154 [cluster="QuantConnect.Symbol.Contains(string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.Contains(string)", span="437-437"];
m13_155 [cluster="QuantConnect.Symbol.Contains(string)", file="Extensions.cs", label="return Value.Contains(value);", span="437-437"];
m13_156 [cluster="QuantConnect.Symbol.Contains(string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.Contains(string)", span="437-437"];
m13_67 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.UpdateMappedSymbol(string)", span="222-222"];
m13_68 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="ID.SecurityType == SecurityType.Option", span="224-224"];
m13_69 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="var underlyingSymbol = new Symbol(Underlying.ID, mappedSymbol, null)", span="226-226"];
m13_72 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="var sym = mappedSymbol", span="232-232"];
m13_77 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="return new Symbol(ID, mappedSymbol, Underlying);", span="242-242"];
m13_70 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="var alias = Value", span="228-228"];
m13_76 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="return new Symbol(ID, alias, underlyingSymbol);", span="238-238"];
m13_71 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="ID.Date != SecurityIdentifier.DefaultDate", span="230-230"];
m13_73 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="sym.Length > 5", span="233-233"];
m13_74 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="sym += '' ''", span="233-233"];
m13_75 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="alias = string.Format(''{0,-6}{1}{2}{3:00000000}'', sym, ID.Date.ToString(DateFormat.SixCharacter), ID.OptionRight.ToString()[0], ID.StrikePrice * 1000m)", span="235-235"];
m13_78 [cluster="QuantConnect.Symbol.UpdateMappedSymbol(string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.UpdateMappedSymbol(string)", span="222-222"];
m13_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Extensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_166 [cluster="QuantConnect.Symbol.ToLower()", file="Extensions.cs", label="Entry QuantConnect.Symbol.ToLower()", span="443-443"];
m13_167 [cluster="QuantConnect.Symbol.ToLower()", file="Extensions.cs", label="return Value.ToLower();", span="443-443"];
m13_168 [cluster="QuantConnect.Symbol.ToLower()", file="Extensions.cs", label="Exit QuantConnect.Symbol.ToLower()", span="443-443"];
m13_59 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", span="318-318"];
m13_109 [cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.GetHashCode()", span="655-655"];
m13_47 [cluster="string.Format(string, params object[])", file="Extensions.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m13_60 [cluster="string.Format(string, object, object, object)", file="Extensions.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m13_144 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", span="412-412"];
m13_145 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="Symbol symbol", span="414-414"];
m13_146 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="SymbolCache.TryGetSymbol(ticker, out symbol)", span="415-415"];
m13_149 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="SecurityIdentifier.TryParse(ticker, out sid)", span="421-421"];
m13_147 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="return symbol;", span="417-417"];
m13_148 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="SecurityIdentifier sid", span="420-420"];
m13_150 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="return new Symbol(sid, sid.Symbol);", span="423-423"];
m13_151 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="return Empty;", span="426-426"];
m13_152 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", span="412-412"];
m13_102 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", span="554-554"];
m13_170 [cluster="QuantConnect.Symbol.ToUpper()", file="Extensions.cs", label="Entry QuantConnect.Symbol.ToUpper()", span="445-445"];
m13_171 [cluster="QuantConnect.Symbol.ToUpper()", file="Extensions.cs", label="return Value.ToUpper();", span="445-445"];
m13_172 [cluster="QuantConnect.Symbol.ToUpper()", file="Extensions.cs", label="Exit QuantConnect.Symbol.ToUpper()", span="445-445"];
m13_32 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="208-208"];
m13_61 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="Extensions.cs", label="value == null", span="210-210"];
m13_63 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="Extensions.cs", label="ID = sid", span="214-214"];
m13_64 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="Extensions.cs", label="Value = value.ToUpper()", span="215-215"];
m13_62 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="Extensions.cs", label="throw new ArgumentNullException(''value'');", span="212-212"];
m13_65 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="208-208"];
m13_27 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", span="252-252"];
m13_79 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="Extensions.cs", label="value == null", span="254-254"];
m13_81 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="Extensions.cs", label="ID = sid", span="258-258"];
m13_82 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="Extensions.cs", label="Value = value.ToUpper()", span="259-259"];
m13_83 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="Extensions.cs", label="Underlying = underlying", span="260-260"];
m13_80 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="Extensions.cs", label="throw new ArgumentNullException(''value'');", span="256-256"];
m13_84 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="Extensions.cs", label="Exit QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", span="252-252"];
m13_141 [cluster="QuantConnect.Symbol.implicit operator string(QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Symbol.implicit operator string(QuantConnect.Symbol)", span="401-401"];
m13_142 [cluster="QuantConnect.Symbol.implicit operator string(QuantConnect.Symbol)", file="Extensions.cs", label="return symbol.ToString();", span="403-403"];
m13_143 [cluster="QuantConnect.Symbol.implicit operator string(QuantConnect.Symbol)", file="Extensions.cs", label="Exit QuantConnect.Symbol.implicit operator string(QuantConnect.Symbol)", span="401-401"];
m13_20 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="363-363"];
m13_33 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="110-110"];
m13_34 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="var sid = SecurityIdentifier.GenerateOption(expiry, underlyingSymbol.ID, market, strike, right, style)", span="112-112"];
m13_35 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="expiry == SecurityIdentifier.DefaultDate", span="114-114"];
m13_36 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="alias = alias ?? ''?'' + underlyingSymbol.Value.ToUpper()", span="116-116"];
m13_37 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="var sym = underlyingSymbol.Value", span="120-120"];
m13_40 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="alias = alias ?? string.Format(''{0,-6}{1}{2}{3:00000000}'', sym, sid.Date.ToString(DateFormat.SixCharacter), sid.OptionRight.ToString()[0], sid.StrikePrice * 1000m)", span="123-123"];
m13_41 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="return new Symbol(sid, alias, underlyingSymbol);", span="126-126"];
m13_38 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="sym.Length > 5", span="121-121"];
m13_39 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="sym += '' ''", span="121-121"];
m13_42 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="Extensions.cs", label="Exit QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="110-110"];
m13_21 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="Extensions.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", span="332-332"];
m13_85 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="Entry QuantConnect.Symbol.Equals(object)", span="274-274"];
m13_86 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="ReferenceEquals(null, obj)", span="276-276"];
m13_88 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="ReferenceEquals(this, obj)", span="277-277"];
m13_90 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="var sidString = obj as string", span="280-280"];
m13_95 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="obj is SecurityIdentifier", span="291-291"];
m13_96 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="return ID.Equals((SecurityIdentifier) obj);", span="293-293"];
m13_97 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="obj.GetType() != GetType()", span="296-296"];
m13_99 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="return Equals((Symbol)obj);", span="297-297"];
m13_87 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="return false;", span="276-276"];
m13_89 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="return true;", span="277-277"];
m13_91 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="sidString != null", span="281-281"];
m13_93 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="SecurityIdentifier.TryParse(sidString, out sid)", span="284-284"];
m13_92 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="SecurityIdentifier sid", span="283-283"];
m13_94 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="return ID.Equals(sid);", span="286-286"];
m13_98 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="return false;", span="296-296"];
m13_100 [cluster="QuantConnect.Symbol.Equals(object)", file="Extensions.cs", label="Exit QuantConnect.Symbol.Equals(object)", span="274-274"];
m13_173 [file="Extensions.cs", label="QuantConnect.Symbol", span=""];
m14_8 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="68-68"];
m14_9 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="Holdings = new ForexHolding(this)", span="85-85"];
m14_11 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="DecomposeCurrencyPair(symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="89-89"];
m14_10 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="88-88"];
m14_12 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="90-90"];
m14_13 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="Exit QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="68-68"];
m14_7 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Forex.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="108-108"];
m14_14 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Forex.cs", label="currencyPair == null || currencyPair.Length != 6", span="110-110"];
m14_15 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Forex.cs", label="throw new ArgumentException(''Currency pairs must be exactly 6 characters: '' + currencyPair);", span="112-112"];
m14_16 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Forex.cs", label="baseCurrency = currencyPair.Substring(0, 3)", span="114-114"];
m14_17 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Forex.cs", label="quoteCurrency = currencyPair.Substring(3)", span="115-115"];
m14_18 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Forex.cs", label="Exit QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="108-108"];
m14_21 [cluster="string.Substring(int)", file="Forex.cs", label="Entry string.Substring(int)", span="0-0"];
m14_0 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m14_1 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="Holdings = new ForexHolding(this)", span="53-53"];
m14_3 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="DecomposeCurrencyPair(config.Symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="57-57"];
m14_2 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="56-56"];
m14_4 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="58-58"];
m14_5 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Forex.cs", label="Exit QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m14_6 [cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", file="Forex.cs", label="Entry QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", span="27-27"];
m14_19 [cluster="System.ArgumentException.ArgumentException(string)", file="Forex.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m14_20 [cluster="string.Substring(int, int)", file="Forex.cs", label="Entry string.Substring(int, int)", span="0-0"];
m14_22 [file="Forex.cs", label="QuantConnect.Securities.Forex.Forex", span=""];
m15_36 [cluster="System.Math.Truncate(decimal)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m15_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m15_35 [cluster="System.Math.Abs(decimal)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m15_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m15_16 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(int)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(int)", span="38-38"];
m15_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1287-1287"];
m15_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="971-971"];
m15_17 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m15_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m15_0 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", span="29-29"];
m15_1 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="SetStartDate(2015, 11, 12)", span="31-31"];
m15_2 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="SetEndDate(2016, 04, 01)", span="32-32"];
m15_3 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="SetCash(100000)", span="35-35"];
m15_4 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="SetTimeZone(NodaTime.DateTimeZone.Utc)", span="37-37"];
m15_5 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="0: var security = AddSecurity(SecurityType.Forex, ''BTCUSD'', Resolution.Daily, Market.Bitfinex, false, 3.3m, true)", span="38-38"];
m15_6 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="var con = new QuoteBarConsolidator(1)", span="39-39"];
m15_9 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="SetBenchmark(security.Symbol)", span="42-42"];
m15_7 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="SubscriptionManager.AddConsolidator(''BTCUSD'', con)", span="40-40"];
m15_8 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="con.DataConsolidated += con_DataConsolidated", span="41-41"];
m15_10 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", span="29-29"];
m15_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m15_19 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", span="45-45"];
m15_20 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="var quantity = Math.Truncate(Portfolio.Cash / Math.Abs(e.Value + 1))", span="47-47"];
m15_21 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="!Portfolio.Invested", span="48-48"];
m15_22 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Order(''BTCUSD'', quantity)", span="50-50"];
m15_23 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Portfolio[''BTCUSD''].Quantity == quantity", span="52-52"];
m15_25 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Portfolio[''BTCUSD''].Quantity == quantity + 0.1m", span="56-56"];
m15_27 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Portfolio[''BTCUSD''].Quantity == quantity + 0.11m", span="60-60"];
m15_29 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Portfolio[''BTCUSD''].Quantity == quantity + 0.09m", span="64-64"];
m15_24 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Order(''BTCUSD'', 0.1)", span="54-54"];
m15_26 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Order(''BTCUSD'', 0.01)", span="58-58"];
m15_28 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Order(''BTCUSD'', -0.02)", span="62-62"];
m15_30 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Order(''BTCUSD'', 0.001)", span="67-67"];
m15_31 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="SetHoldings(''BTCUSD'', -2.0m)", span="69-69"];
m15_32 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="SetHoldings(''BTCUSD'', 2.0m)", span="70-70"];
m15_33 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Quit()", span="71-71"];
m15_34 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", span="45-45"];
m15_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1654-1654"];
m15_14 [cluster="Unk.SetTimeZone", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry Unk.SetTimeZone", span=""];
m15_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m15_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m15_41 [file="FractionalQuantityRegressionAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", span=""];
m16_19 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Global.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="267-267"];
m16_0 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m16_1 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="CurrencySymbol = ''$''", span="85-85"];
m16_2 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="ConversionRate = 1m", span="86-86"];
m16_3 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="Exit QuantConnect.Holding.Holding()", span="83-83"];
m16_30 [cluster="string.Format(string, params object[])", file="Global.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m16_21 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="Entry QuantConnect.Holding.Clone()", span="120-120"];
m16_22 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="return new Holding\r\n            {\r\n                AveragePrice = AveragePrice,\r\n                Symbol = Symbol,\r\n                Type = Type,\r\n                Quantity = Quantity,\r\n                MarketPrice = MarketPrice,\r\n                MarketValue = MarketValue,\r\n                UnrealizedPnL = UnrealizedPnL,\r\n                ConversionRate  = ConversionRate,\r\n                CurrencySymbol = CurrencySymbol\r\n            };", span="122-133"];
m16_23 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="Exit QuantConnect.Holding.Clone()", span="120-120"];
m16_31 [cluster="string.Format(string, object)", file="Global.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_24 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="Entry QuantConnect.Holding.ToString()", span="139-139"];
m16_25 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="var value = string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4}'', Symbol.Value, Quantity, CurrencySymbol, AveragePrice, MarketPrice)", span="141-141"];
m16_26 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="ConversionRate != 1m", span="143-143"];
m16_27 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="value += string.Format('' - Conversion: {0}'', ConversionRate)", span="145-145"];
m16_28 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="return value;", span="148-148"];
m16_29 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="Exit QuantConnect.Holding.ToString()", span="139-139"];
m16_32 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Entry QuantConnect.AlgorithmControl.AlgorithmControl()", span="471-471"];
m16_33 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="HasSubscribers = true", span="474-474"];
m16_34 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Status = AlgorithmStatus.Running", span="475-475"];
m16_35 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="ChartSubscription = ''Strategy Equity''", span="476-476"];
m16_36 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Exit QuantConnect.AlgorithmControl.AlgorithmControl()", span="471-471"];
m16_4 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Entry QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="93-93"];
m16_5 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="var holding = security.Holdings", span="96-96"];
m16_10 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="CurrencySymbol = Currencies.GetCurrencySymbol(security.QuoteCurrency.Symbol)", span="102-102"];
m16_11 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="ConversionRate = security.QuoteCurrency.ConversionRate", span="103-103"];
m16_6 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Symbol = holding.Symbol", span="98-98"];
m16_7 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Type = holding.Type", span="99-99"];
m16_8 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Quantity = holding.Quantity", span="100-100"];
m16_9 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="MarketValue = holding.HoldingsValue", span="101-101"];
m16_13 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="holding.Type == SecurityType.Forex || holding.Type == SecurityType.Cfd", span="106-106"];
m16_15 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="AveragePrice = Math.Round(holding.AveragePrice, rounding)", span="111-111"];
m16_16 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="MarketPrice = Math.Round(holding.Price, rounding)", span="112-112"];
m16_17 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="UnrealizedPnL = Math.Round(holding.UnrealizedProfit, 2)", span="113-113"];
m16_12 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="var rounding = 2", span="105-105"];
m16_14 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="rounding = 5", span="108-108"];
m16_18 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Exit QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="93-93"];
m16_20 [cluster="System.Math.Round(decimal, int)", file="Global.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m16_37 [file="Global.cs", label="QuantConnect.Holding", span=""];
m16_38 [file="Global.cs", label="QuantConnect.AlgorithmControl", span=""];
m18_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="ITransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="70-70"];
m18_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="70-70"];
m18_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", file="ITransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", span="65-65"];
m18_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", span="65-65"];
m18_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="ITransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75"];
m18_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75"];
m18_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="ITransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="60-60"];
m18_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="60-60"];
m19_180 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="105-105"];
m19_187 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="LeanData.cs", label="Entry QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", span="35-35"];
m19_215 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", file="LeanData.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="392-392"];
m19_185 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="330-330"];
m19_203 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m19_219 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="LeanData.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="335-335"];
m19_174 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m19_211 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="228-228"];
m19_172 [cluster="object.GetType()", file="LeanData.cs", label="Entry object.GetType()", span="0-0"];
m19_204 [cluster="System.Collections.Generic.List<T>.List(int)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m19_201 [cluster="System.DateTime.ToLongTimeString()", file="LeanData.cs", label="Entry System.DateTime.ToLongTimeString()", span="0-0"];
m19_207 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(string, out T)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(string, out T)", span="165-165"];
m19_0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="130-130"];
m19_1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_dataPointCount = 0", span="133-133"];
m19_2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var startingPortfolioValue = setup.StartingPortfolioValue", span="134-134"];
m19_3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="135-135"];
m19_7 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_frontier = setup.StartingDate", span="141-141"];
m19_8 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmId = job.AlgorithmId", span="142-142"];
m19_10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_previousTime = setup.StartingDate.Date", span="144-144"];
m19_11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var hasOnTradeBar = AddMethodInvoker<Dictionary<string, TradeBar>>(algorithm, methodInvokers, ''OnTradeBar'')", span="149-149"];
m19_12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var hasOnTick = AddMethodInvoker<Dictionary<string, List<Tick>>>(algorithm, methodInvokers, ''OnTick'')", span="150-150"];
m19_13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="153-153"];
m19_14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="154-154"];
m19_16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="160-160"];
m19_17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="161-161"];
m19_18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="feed.Subscriptions", span="164-164"];
m19_20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="170-170"];
m19_23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="178-178"];
m19_28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="DataStream.GetData(feed, setup.StartingDate)", span="188-188"];
m19_35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="realtime.SetTime(time)", span="212-212"];
m19_37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="218-218"];
m19_39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SamplePerformance(_previousTime.Date, 0)", span="223-223"];
m19_40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="227-227"];
m19_41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="startingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="229-229"];
m19_42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.Portfolio.CashBook.Update(newData[time])", span="236-236"];
m19_43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.Securities.Update(time, newData[time])", span="239-239"];
m19_45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall()", span="245-245"];
m19_47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var executedOrders = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="249-249"];
m19_49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.Error(string.Format(''Executed MarginCallOrder: {0} - Quantity: {1} @ {2}'', order.Symbol, order.Quantity, order.Price))", span="252-252"];
m19_51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.GetQuit()", span="261-261"];
m19_53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.SetDateTime(time)", span="268-268"];
m19_62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var config = feed.Subscriptions[i]", span="284-284"];
m19_68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.Portfolio.ApplyDividend(dividend)", span="303-303"];
m19_73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.Portfolio.ApplySplit(split)", span="316-316"];
m19_81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.RunTimeError = err", span="335-335"];
m19_106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers[config.Type](algorithm, dataPoint)", span="396-396"];
m19_108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.RunTimeError = err", span="400-400"];
m19_113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers[typeof (Dividends)](algorithm, newDividends)", span="413-413"];
m19_115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers[typeof (Splits)](algorithm, newSplits)", span="417-417"];
m19_117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.RunTimeError = err", span="422-422"];
m19_123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers[typeof (TradeBars)](algorithm, oldBars)", span="434-434"];
m19_125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers[typeof(Ticks)](algorithm, oldTicks)", span="435-435"];
m19_127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.RunTimeError = err", span="439-439"];
m19_132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers[typeof (TradeBars)](algorithm, newBars)", span="450-450"];
m19_134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers[typeof(Ticks)](algorithm, newTicks)", span="451-451"];
m19_136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.RunTimeError = err", span="455-455"];
m19_140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="transactions.ProcessSynchronousEvents()", span="464-464"];
m19_142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.ProcessSynchronousEvents()", span="470-470"];
m19_144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.OnEndOfAlgorithm()", span="480-480"];
m19_147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="485-485"];
m19_150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.ProcessSynchronousEvents(forceProcess: true)", span="491-491"];
m19_153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="algorithm.Liquidate()", span="497-497"];
m19_154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.LogMessage(''Algorithm Liquidated'')", span="498-498"];
m19_155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Liquidated)", span="499-499"];
m19_158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.LogMessage(''Algorithm Stopped'')", span="506-506"];
m19_159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Stopped)", span="507-507"];
m19_162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="514-514"];
m19_163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Deleted)", span="515-515"];
m19_164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Completed)", span="519-519"];
m19_165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SampleRange(algorithm.GetChartUpdates())", span="522-522"];
m19_166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SampleEquity(_frontier, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="523-523"];
m19_167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="results.SamplePerformance(_frontier, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="524-524"];
m19_38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="startingPortfolioValue == 0m", span="221-221"];
m19_4 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="136-136"];
m19_34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=backtestMode, span="208-208"];
m19_5 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="137-137"];
m19_21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers.ContainsKey(config.Type)", span="173-173"];
m19_26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="182-182"];
m19_6 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var nextMarginCallTime = DateTime.MinValue", span="138-138"];
m19_50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="nextMarginCallTime = time + marginCallFrequency", span="256-256"];
m19_44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="time >= nextMarginCallTime", span="242-242"];
m19_9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.Running", span="143-143"];
m19_122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="hasOnTradeBar && oldBars.Count > 0", span="434-434"];
m19_124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="hasOnTick && oldTicks.Count > 0", span="435-435"];
m19_15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var backwardsCompatibilityMode = !hasOnDataTradeBars && !hasOnDataTicks", span="157-157"];
m19_131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="hasOnDataTradeBars && newBars.Count > 0", span="450-450"];
m19_133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="hasOnDataTicks && newTicks.Count > 0", span="451-451"];
m19_87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=backwardsCompatibilityMode, span="347-347"];
m19_95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=backwardsCompatibilityMode, span="367-367"];
m19_121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=backwardsCompatibilityMode, span="429-429"];
m19_69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=hasOnDataDividends, span="304-304"];
m19_112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="hasOnDataDividends && newDividends.Count != 0", span="411-411"];
m19_74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=hasOnDataSplits, span="317-317"];
m19_114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="hasOnDataSplits && newSplits.Count != 0", span="415-415"];
m19_19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="config.Type.Name != ''TradeBar'' && config.Type.Name != ''Tick''", span="167-167"];
m19_27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Debug(''AlgorithmManager.Run(): Algorithm initialized, launching time loop.'')", span="187-187"];
m19_22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="genericMethod == null", span="176-176"];
m19_24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.RuntimeError", span="179-179"];
m19_25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="return;", span="180-180"];
m19_29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState != AlgorithmStatus.Running", span="191-191"];
m19_143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="477-477"];
m19_30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="newData.Keys", span="194-194"];
m19_60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="newData[time].Keys", span="280-280"];
m19_61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var dataPoints = newData[time][i]", span="283-283"];
m19_31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_frontier = time", span="197-197"];
m19_36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_previousTime.Date != time.Date", span="215-215"];
m19_56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var newBars = new TradeBars(time)", span="273-273"];
m19_57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var newTicks = new Ticks(time)", span="274-274"];
m19_58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var newDividends = new Dividends(time)", span="275-275"];
m19_59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var newSplits = new Splits(time)", span="276-276"];
m19_91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Error(time.ToLongTimeString() + '' >> '' + bar.Time.ToLongTimeString() + '' >> '' + bar.Symbol + '' >> '' + bar.Value.ToString(''C''))", span="358-358"];
m19_92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Error(''AlgorithmManager.Run(): Failed to add TradeBar ('' + bar.Symbol + '') Time: ('' + time.ToLongTimeString() + '') Count:('' + newBars.Count + '') '' + err.Message)", span="359-359"];
m19_141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_previousTime = time", span="467-467"];
m19_32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Isolator.IsCancellationRequested", span="200-200"];
m19_33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="return;", span="202-202"];
m19_46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="marginCallOrders.Count != 0", span="246-246"];
m19_48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=executedOrders, span="250-250"];
m19_52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.Quit", span="263-263"];
m19_54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var oldBars = new Dictionary<string, TradeBar>()", span="271-271"];
m19_55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var oldTicks = new Dictionary<string, List<Tick>>()", span="272-272"];
m19_88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="oldBars[bar.Symbol] = bar", span="349-349"];
m19_97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="!oldTicks.TryGetValue(tick.Symbol, out ticks)", span="370-370"];
m19_99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="oldTicks.Add(tick.Symbol, ticks)", span="373-373"];
m19_89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="newBars[bar.Symbol] = bar", span="353-353"];
m19_102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="!newTicks.TryGetValue(tick.Symbol, out ticks)", span="380-380"];
m19_104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="newTicks.Add(tick.Symbol, ticks)", span="383-383"];
m19_70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="newDividends.Add(dividend)", span="307-307"];
m19_75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="newSplits.Add(split)", span="320-320"];
m19_63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_dataPointCount += dataPoints.Count", span="287-287"];
m19_65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=dataPoints, span="297-297"];
m19_64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="config.IsInternalFeed", span="290-290"];
m19_77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="j < config.Consolidators.Count", span="328-328"];
m19_78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="config.Consolidators[j].Update(dataPoint)", span="330-330"];
m19_66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var dividend = dataPoint as Dividend", span="299-299"];
m19_71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var split = dataPoint as Split", span="312-312"];
m19_85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var bar = dataPoint as TradeBar", span="342-342"];
m19_93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var tick = dataPoint as Tick", span="364-364"];
m19_67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="dividend != null", span="300-300"];
m19_72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="split != null", span="313-313"];
m19_76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="var j = 0", span="328-328"];
m19_79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="j++", span="328-328"];
m19_80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=Exception, span="333-333"];
m19_82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.RuntimeError", span="336-336"];
m19_83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err.Message)", span="337-337"];
m19_84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="return;", span="338-338"];
m19_86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="bar != null", span="343-343"];
m19_90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=Exception, span="356-356"];
m19_94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="tick != null", span="365-365"];
m19_100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="ticks.Add(tick)", span="375-375"];
m19_105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="ticks.Add(tick)", span="385-385"];
m19_96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="List<Tick> ticks", span="369-369"];
m19_101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="List<Tick> ticks", span="379-379"];
m19_98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="ticks = new List<Tick>(3)", span="372-372"];
m19_103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="ticks = new List<Tick>(3)", span="382-382"];
m19_107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=Exception, span="398-398"];
m19_109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.RuntimeError", span="401-401"];
m19_110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="402-402"];
m19_111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="return;", span="403-403"];
m19_116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=Exception, span="420-420"];
m19_118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.RuntimeError", span="423-423"];
m19_119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="424-424"];
m19_120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="return;", span="425-425"];
m19_126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=Exception, span="437-437"];
m19_128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.RuntimeError", span="440-440"];
m19_129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Backwards Compatibility Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="441-441"];
m19_130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="return;", span="442-442"];
m19_135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=Exception, span="453-453"];
m19_137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.RuntimeError", span="456-456"];
m19_138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="457-457"];
m19_139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="return;", span="458-458"];
m19_145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label=Exception, span="482-482"];
m19_146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.RuntimeError", span="484-484"];
m19_148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Debug(''AlgorithmManager.OnEndOfAlgorithm(): '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="486-486"];
m19_149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="return;", span="487-487"];
m19_151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState == AlgorithmStatus.Liquidated || !Engine.LiveMode", span="494-494"];
m19_152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="496-496"];
m19_156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState == AlgorithmStatus.Stopped", span="503-503"];
m19_157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="505-505"];
m19_160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="_algorithmState == AlgorithmStatus.Deleted", span="511-511"];
m19_161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="513-513"];
m19_168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="130-130"];
m19_195 [cluster="QuantConnect.Data.Market.Splits.Splits(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Splits.Splits(System.DateTime)", span="36-36"];
m19_196 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="512-512"];
m19_200 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="LeanData.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m19_218 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="95-95"];
m19_184 [cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="LeanData.cs", label="Entry QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="59-59"];
m19_192 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
m19_170 [cluster="System.TimeSpan.FromMinutes(double)", file="LeanData.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m19_171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="558-558"];
m19_231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="LeanData.cs", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="560-560"];
m19_233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="LeanData.cs", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="563-563"];
m19_232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="LeanData.cs", label="newSplitMethodInfo != null", span="561-561"];
m19_235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="LeanData.cs", label="return false;", span="566-566"];
m19_234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="LeanData.cs", label="return true;", span="564-564"];
m19_236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="558-558"];
m19_186 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="483-483"];
m19_205 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m19_175 [cluster="System.Exception.Exception(string)", file="LeanData.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m19_193 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
m19_176 [cluster="Unk.DelegateForCallMethod", file="LeanData.cs", label="Entry Unk.DelegateForCallMethod", span=""];
m19_209 [cluster="Unk.]", file="LeanData.cs", label="Entry Unk.]", span=""];
m19_220 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="166-166"];
m19_189 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="LeanData.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255"];
m19_198 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="534-534"];
m19_177 [cluster="Unk.Add", file="LeanData.cs", label="Entry Unk.Add", span=""];
m19_213 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="LeanData.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="270-270"];
m19_191 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="283-283"];
m19_208 [cluster="QuantConnect.Data.Market.DataDictionary<T>.Add(string, T)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.Add(string, T)", span="141-141"];
m19_178 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="LeanData.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="124-124"];
m19_210 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="68-68"];
m19_183 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="150-150"];
m19_221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="530-530"];
m19_222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="LeanData.cs", label="_frontier = new DateTime()", span="533-533"];
m19_223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="LeanData.cs", label="_algorithmId = ''''", span="534-534"];
m19_224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="LeanData.cs", label="_algorithmState = AlgorithmStatus.Running", span="535-535"];
m19_225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="530-530"];
m19_197 [cluster="QuantConnect.Data.Market.DataDictionary<T>.Add<T>(T)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.Add<T>(T)", span="225-225"];
m19_181 [cluster="System.Math.Round(decimal, int)", file="LeanData.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m19_182 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="142-142"];
m19_169 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m19_173 [cluster="System.Type.GetMethod(string, System.Type[])", file="LeanData.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m19_199 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", file="LeanData.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", span="54-54"];
m19_217 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="193-193"];
m19_179 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", span="58-58"];
m19_188 [cluster="string.Format(string, object, object, object)", file="LeanData.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m19_206 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m19_227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="542-542"];
m19_228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="LeanData.cs", label=_lock, span="544-544"];
m19_229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="LeanData.cs", label="_algorithmState = state", span="546-546"];
m19_230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="542-542"];
m19_214 [cluster="System.Exception.Exception(string, System.Exception)", file="LeanData.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m19_190 [cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", file="LeanData.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="440-440"];
m19_212 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LeanData.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m19_216 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="107-107"];
m19_226 [cluster="System.DateTime.DateTime()", file="LeanData.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m19_194 [cluster="QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", span="36-36"];
m19_202 [cluster="decimal.ToString(string)", file="LeanData.cs", label="Entry decimal.ToString(string)", span="0-0"];
m20_67 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179"];
m20_74 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var rows = new SortedDictionary<DateTime, string>()", span="181-181"];
m20_75 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var zip = ZipFile.Read(fileName)", span="183-183"];
m20_84 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="return rows;", span="202-202"];
m20_83 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="rows[time] = line", span="196-196"];
m20_76 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var stream = new MemoryStream()", span="185-185"];
m20_77 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="zip[0].Extract(stream)", span="187-187"];
m20_81 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="(line = reader.ReadLine()) != null", span="193-193"];
m20_82 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var time = DateTime.ParseExact(line.Substring(0, DateFormat.TwelveCharacter.Length), DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="195-195"];
m20_78 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="stream.Seek(0, SeekOrigin.Begin)", span="188-188"];
m20_79 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="var reader = new StreamReader(stream)", span="190-190"];
m20_80 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="string line", span="192-192"];
m20_85 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179"];
m20_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m20_14 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="Entry QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="87-87"];
m20_15 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="decimal typicalPrice = (input.High + input.Low + input.Close) / 3.0m", span="88-88"];
m20_18 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="NegativeMoneyFlow.Update(input.Time, typicalPrice < PreviousTypicalPrice ? moneyFlow : 0.0m)", span="92-92"];
m20_22 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="return 100.0m;", span="97-97"];
m20_16 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="decimal moneyFlow = typicalPrice * input.Volume", span="89-89"];
m20_19 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="PreviousTypicalPrice = typicalPrice", span="93-93"];
m20_17 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="PositiveMoneyFlow.Update(input.Time, typicalPrice > PreviousTypicalPrice ? moneyFlow : 0.0m)", span="91-91"];
m20_21 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="totalMoneyFlow == 0.0m", span="96-96"];
m20_20 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="decimal totalMoneyFlow = PositiveMoneyFlow.Current.Value + NegativeMoneyFlow.Current.Value", span="95-95"];
m20_23 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="return 100m * PositiveMoneyFlow.Current.Value / totalMoneyFlow;", span="100-100"];
m20_44 [cluster="System.Text.StringBuilder.ToString()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m20_45 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m20_101 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Compression.Zip(data, tempFilePath, LeanData.GenerateZipEntryName(_symbol.Value, _securityType, date, _resolution, _dataType))", span="226-226"];
m20_95 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="var tempFilePath = filePath + ''.tmp''", span="213-213"];
m20_96 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="data = data.TrimEnd()", span="215-215"];
m20_100 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Directory.CreateDirectory(Path.GetDirectoryName(filePath))", span="223-223"];
m20_102 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Move(tempFilePath, filePath)", span="229-229"];
m20_97 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Exists(filePath)", span="216-216"];
m20_98 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="File.Delete(filePath)", span="218-218"];
m20_99 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Log.Trace(''LeanDataWriter.Write(): Existing deleted: '' + filePath)", span="219-219"];
m20_103 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Log.Trace(''LeanDataWriter.Write(): Created: '' + filePath)", span="231-231"];
m20_104 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m20_71 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="144-144"];
m20_72 [cluster="lambda expression", file="LeanDataWriter.cs", label="LeanData.GenerateLine(x, _securityType, _resolution)", span="144-144"];
m20_68 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="144-144"];
m20_73 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="144-144"];
m20_69 [cluster="lambda expression", file="LeanDataWriter.cs", label="x.Time", span="144-144"];
m20_70 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="144-144"];
m20_111 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="LeanDataWriter.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="343-343"];
m20_93 [cluster="string.Substring(int, int)", file="LeanDataWriter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m20_92 [cluster="System.IO.StreamReader.ReadLine()", file="LeanDataWriter.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m20_64 [cluster="SortedDictionary<DateTime, string>.cstr", file="LeanDataWriter.cs", label="Entry SortedDictionary<DateTime, string>.cstr", span=""];
m20_9 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", color=green, community=0, file="LeanDataWriter.cs", label="0: _securityType != SecurityType.Equity && _securityType != SecurityType.Forex && _securityType != SecurityType.Cfd", span="63-63"];
m20_10 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="throw new Exception(''Sorry this security type is not yet supported by the LEAN data writer: '' + _securityType);", span="65-65"];
m20_11 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m20_12 [cluster="string.ToLower()", file="LeanDataWriter.cs", label="Entry string.ToLower()", span="0-0"];
m20_25 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="LeanDataWriter.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33"];
m20_32 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="111-111"];
m20_33 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="112-112"];
m20_36 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Append(LeanData.GenerateLine(data, _securityType, _resolution) + Environment.NewLine)", span="119-119"];
m20_38 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="125-125"];
m20_39 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="126-126"];
m20_27 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var lastTime = new DateTime()", span="98-98"];
m20_31 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="lastTime != DateTime.MinValue && data.Time.Date > lastTime.Date", span="108-108"];
m20_26 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="QuantConnect.Indicators.MoneyFlowIndex", span=""];
m20_34 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Clear()", span="113-113"];
m20_28 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=source, span="102-102"];
m20_35 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="lastTime = data.Time", span="116-116"];
m20_37 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Length > 0", span="123-123"];
m20_30 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="throw new Exception(''The data must be pre-sorted from oldest to newest'');", span="105-105"];
m20_29 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="data.Time < lastTime", span="105-105"];
m20_40 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="95-95"];
m20_0 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m20_1 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_securityType = symbol.ID.SecurityType", span="50-50"];
m20_2 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", color=red, community=0, file="LeanDataWriter.cs", label="1: _dataDirectory = dataDirectory", span="51-51"];
m20_3 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_resolution = resolution", span="52-52"];
m20_4 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_symbol = symbol", span="53-53"];
m20_5 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_market = symbol.ID.Market.ToLower()", span="54-54"];
m20_13 [cluster="QuantConnect.Indicators.Sum.Sum(string, int)", file="LeanDataWriter.cs", label="Entry QuantConnect.Indicators.Sum.Sum(string, int)", span="33-33"];
m20_112 [cluster="System.IO.File.Move(string, string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Move(string, string)", span="0-0"];
m20_110 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="450-450"];
m20_6 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_dataType = dataType", span="55-55"];
m20_109 [cluster="System.IO.Directory.CreateDirectory(string)", file="LeanDataWriter.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m20_105 [cluster="string.TrimEnd(params char[])", file="LeanDataWriter.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m20_7 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", color=green, community=0, file="LeanDataWriter.cs", label="0: _securityType == SecurityType.Forex || _securityType == SecurityType.Cfd", span="57-57"];
m20_8 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="LeanDataWriter.cs", label="_dataType = TickType.Quote", span="59-59"];
m20_115 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="291-291"];
m20_94 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanDataWriter.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m20_106 [cluster="System.IO.File.Delete(string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m20_24 [cluster="QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="LeanDataWriter.cs", label="Exit QuantConnect.Indicators.MoneyFlowIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="87-87"];
m20_51 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="141-141"];
m20_52 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var newRows = new SortedDictionary<DateTime, string>(source.ToDictionary(x => x.Time, x => LeanData.GenerateLine(x, _securityType, _resolution)))", span="144-144"];
m20_62 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="172-172"];
m20_50 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var lastTime = new DateTime()", span="138-138"];
m20_54 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="File.Exists(outputFile)", span="147-147"];
m20_55 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows = LoadHourlyOrDailyFile(outputFile)", span="150-150"];
m20_53 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="SortedDictionary<DateTime, string> rows", span="145-145"];
m20_56 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=newRows, span="151-151"];
m20_58 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows = newRows", span="159-159"];
m20_49 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="var sb = new StringBuilder()", span="137-137"];
m20_61 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Length > 0", span="170-170"];
m20_60 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="sb.Append(kvp.Value + Environment.NewLine)", span="166-166"];
m20_57 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="rows[kvp.Key] = kvp.Value", span="153-153"];
m20_59 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label=rows, span="163-163"];
m20_63 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="135-135"];
m20_46 [cluster="System.Text.StringBuilder.Clear()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.Clear()", span="0-0"];
m20_43 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m20_113 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs", label="return LeanData.GenerateZipFilePath(baseDirectory, _symbol.Value, _securityType, _market, time, _resolution);", span="242-242"];
m20_114 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="LeanDataWriter.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m20_66 [cluster="System.IO.File.Exists(string)", file="LeanDataWriter.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m20_48 [cluster="System.Text.StringBuilder.Append(string)", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m20_108 [cluster="System.IO.Path.GetDirectoryName(string)", file="LeanDataWriter.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m20_87 [cluster="Unk.Read", file="LeanDataWriter.cs", label="Entry Unk.Read", span=""];
m20_90 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="LeanDataWriter.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m20_41 [cluster="System.Text.StringBuilder.StringBuilder()", file="LeanDataWriter.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m20_91 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="LeanDataWriter.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m20_86 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="LeanDataWriter.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0"];
m20_107 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LeanDataWriter.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m20_89 [cluster="Unk.Extract", file="LeanDataWriter.cs", label="Entry Unk.Extract", span=""];
m20_42 [cluster="System.DateTime.DateTime()", file="LeanDataWriter.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m20_65 [cluster="Unk.ToDictionary", file="LeanDataWriter.cs", label="Entry Unk.ToDictionary", span=""];
m20_88 [cluster="System.IO.MemoryStream.MemoryStream()", file="LeanDataWriter.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m20_116 [file="LeanDataWriter.cs", label="QuantConnect.ToolBox.LeanDataWriter", span=""];
m21_51 [cluster="System.Text.Encoding.GetByteCount(string)", file="LeanDataWriterTests.cs", label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0"];
m21_15 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="LeanDataWriterTests.cs", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
m21_52 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", file="LeanDataWriterTests.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0"];
m21_20 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="LeanDataWriterTests.cs", label="1: _previousInput = input", span="106-106"];
m21_60 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="148-148"];
m21_61 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="LeanDataWriterTests.cs", label="var result = dictionary.AddOrUpdate(key, new Lazy<TValue>(() => addValueFactory(key)), (key2, old) => new Lazy<TValue>(() => updateValueFactory(key2, old.Value)))", span="150-150"];
m21_62 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="LeanDataWriterTests.cs", label="return result.Value;", span="151-151"];
m21_63 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="148-148"];
m21_9 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="LeanDataWriterTests.cs", label="previous == null", span="82-82"];
m21_10 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="LeanDataWriterTests.cs", label="return range1;", span="84-84"];
m21_11 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="LeanDataWriterTests.cs", label="var range2 = Math.Abs(current.High - previous.Close)", span="87-87"];
m21_12 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="LeanDataWriterTests.cs", label="var range3 = Math.Abs(current.Low - previous.Close)", span="88-88"];
m21_13 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="LeanDataWriterTests.cs", label="return Math.Max(range1, Math.Max(range2, range3));", span="90-90"];
m21_41 [cluster="System.Text.StringBuilder.ToString()", file="LeanDataWriterTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m21_36 [cluster="System.Security.Cryptography.MD5.Create()", file="LeanDataWriterTests.cs", label="Entry System.Security.Cryptography.MD5.Create()", span="0-0"];
m21_14 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", span="79-79"];
m21_83 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LeanDataWriterTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m21_72 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="Entry lambda expression", span="150-150"];
m21_58 [cluster="lambda expression", file="LeanDataWriterTests.cs", label=value, span="136-136"];
m21_57 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="Entry lambda expression", span="136-136"];
m21_59 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="Exit lambda expression", span="136-136"];
m21_66 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="addValueFactory(key)", span="150-150"];
m21_70 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="new Lazy<TValue>(() => updateValueFactory(key2, old.Value))", span="150-150"];
m21_73 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="updateValueFactory(key2, old.Value)", span="150-150"];
m21_69 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="Entry lambda expression", span="150-150"];
m21_65 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="Entry lambda expression", span="150-150"];
m21_67 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="Exit lambda expression", span="150-150"];
m21_71 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="Exit lambda expression", span="150-150"];
m21_74 [cluster="lambda expression", file="LeanDataWriterTests.cs", label="Exit lambda expression", span="150-150"];
m21_76 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="164-164"];
m21_77 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="LeanDataWriterTests.cs", label="TCollection list", span="167-167"];
m21_78 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="LeanDataWriterTests.cs", label="!dictionary.TryGetValue(key, out list)", span="168-168"];
m21_80 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="LeanDataWriterTests.cs", label="dictionary.Add(key, list)", span="171-171"];
m21_81 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="LeanDataWriterTests.cs", label="list.Add(element)", span="173-173"];
m21_79 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="LeanDataWriterTests.cs", label="list = new TCollection()", span="170-170"];
m21_82 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="164-164"];
m21_84 [cluster="TCollection.cstr", file="LeanDataWriterTests.cs", label="Entry TCollection.cstr", span=""];
m21_85 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="LeanDataWriterTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m21_0 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="52-52"];
m21_1 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="LeanDataWriterTests.cs", label="_smoother = movingAverageType.AsIndicator(string.Format(''{0}_{1}'', name, movingAverageType), period)", span="55-55"];
m21_2 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="52-52"];
m21_3 [cluster="string.Format(string, object, object)", file="LeanDataWriterTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m21_4 [cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="54-54"];
m21_5 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="LeanDataWriterTests.cs", label="list.Insert(newIndex, oItem)", span="50-50"];
m21_6 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="45-45"];
m21_17 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="LeanDataWriterTests.cs", label="T item", span="73-73"];
m21_19 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", color=green, community=0, file="LeanDataWriterTests.cs", label="1: Exit QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="71-71"];
m21_18 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="LeanDataWriterTests.cs", label="queue.TryDequeue(out item)", span="74-74"];
m21_21 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", color=green, community=0, file="LeanDataWriterTests.cs", label="1: Entry QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="85-85"];
m21_22 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="LeanDataWriterTests.cs", label="encoding == null", span="87-87"];
m21_26 [cluster="System.Text.Encoding.GetString(byte[])", file="LeanDataWriterTests.cs", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m21_64 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="LeanDataWriterTests.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m21_75 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="LeanDataWriterTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m21_53 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="134-134"];
m21_54 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="LeanDataWriterTests.cs", label="dictionary.AddOrUpdate(key, value, (oldkey, oldvalue) => value)", span="136-136"];
m21_55 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="134-134"];
m21_8 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="LeanDataWriterTests.cs", label="var range1 = current.High - current.Low", span="81-81"];
m21_27 [cluster="QuantConnect.Extensions.ToMD5(string)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Extensions.ToMD5(string)", span="97-97"];
m21_28 [cluster="QuantConnect.Extensions.ToMD5(string)", file="LeanDataWriterTests.cs", label="var builder = new StringBuilder()", span="99-99"];
m21_30 [cluster="QuantConnect.Extensions.ToMD5(string)", file="LeanDataWriterTests.cs", label="var data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(str))", span="102-102"];
m21_29 [cluster="QuantConnect.Extensions.ToMD5(string)", file="LeanDataWriterTests.cs", label="var md5Hash = MD5.Create()", span="100-100"];
m21_32 [cluster="QuantConnect.Extensions.ToMD5(string)", file="LeanDataWriterTests.cs", label="builder.Append(t.ToString(''x2''))", span="103-103"];
m21_33 [cluster="QuantConnect.Extensions.ToMD5(string)", file="LeanDataWriterTests.cs", label="return builder.ToString();", span="105-105"];
m21_31 [cluster="QuantConnect.Extensions.ToMD5(string)", file="LeanDataWriterTests.cs", label=data, span="103-103"];
m21_34 [cluster="QuantConnect.Extensions.ToMD5(string)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Extensions.ToMD5(string)", span="97-97"];
m21_40 [cluster="System.Text.StringBuilder.Append(string)", file="LeanDataWriterTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m21_35 [cluster="System.Text.StringBuilder.StringBuilder()", file="LeanDataWriterTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m21_7 [cluster="QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.ComputeTrueRange(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", span="79-79"];
m21_37 [cluster="System.Text.Encoding.GetBytes(string)", file="LeanDataWriterTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m21_68 [cluster="System.Func<T, TResult>.Invoke(T)", file="LeanDataWriterTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m21_16 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="71-71"];
m21_24 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="LeanDataWriterTests.cs", label="QuantConnect.Indicators.AverageTrueRange", span=""];
m21_23 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33"];
m21_25 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="85-85"];
m21_56 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="LeanDataWriterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m21_42 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="LeanDataWriterTests.cs", label="Entry QuantConnect.Extensions.ToSHA256(string)", span="113-113"];
m21_43 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="LeanDataWriterTests.cs", label="var crypt = new SHA256Managed()", span="115-115"];
m21_45 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="LeanDataWriterTests.cs", label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", span="117-117"];
m21_44 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="LeanDataWriterTests.cs", label="var hash = new StringBuilder()", span="116-116"];
m21_47 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="LeanDataWriterTests.cs", label="hash.Append(theByte.ToString(''x2''))", span="120-120"];
m21_48 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="LeanDataWriterTests.cs", label="return hash.ToString();", span="122-122"];
m21_46 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="LeanDataWriterTests.cs", label=crypto, span="118-118"];
m21_49 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="LeanDataWriterTests.cs", label="Exit QuantConnect.Extensions.ToSHA256(string)", span="113-113"];
m21_50 [cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", file="LeanDataWriterTests.cs", label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0"];
m21_39 [cluster="byte.ToString(string)", file="LeanDataWriterTests.cs", label="Entry byte.ToString(string)", span="0-0"];
m21_38 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", file="LeanDataWriterTests.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0"];
m21_450 [file="LeanDataWriterTests.cs", label=V, span=""];
m21_451 [file="LeanDataWriterTests.cs", label=TKey, span=""];
m21_452 [file="LeanDataWriterTests.cs", label="System.Func<TKey, TValue>", span=""];
m21_453 [file="LeanDataWriterTests.cs", label="System.Func<TKey, TValue, TValue>", span=""];
m21_454 [file="LeanDataWriterTests.cs", label=TKey, span=""];
m21_455 [file="LeanDataWriterTests.cs", label="System.Lazy<TValue>", span=""];
m21_456 [file="LeanDataWriterTests.cs", label=string, span=""];
m23_18 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Option.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="102-102"];
m23_19 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Option.cs", label="order.Status == OrderStatus.Canceled", span="104-104"];
m23_20 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Option.cs", label="return true;", span="106-106"];
m23_21 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Option.cs", label="return false;", span="108-108"];
m23_22 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Option.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="102-102"];
m23_8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Option.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="74-74"];
m23_9 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Option.cs", label="order.Status == OrderStatus.New", span="76-76"];
m23_10 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Option.cs", label="return true;", span="78-78"];
m23_11 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Option.cs", label="return false;", span="80-80"];
m23_12 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Option.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="74-74"];
m23_53 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Option.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="104-104"];
m23_4 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Option.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="51-51"];
m23_5 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Option.cs", label="_algorithm = algorithm", span="54-54"];
m23_6 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Option.cs", label="_orders = _algorithm.Transactions.Orders", span="55-55"];
m23_7 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="Option.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="51-51"];
m23_0 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Option.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="39-39"];
m23_1 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Option.cs", label="_algorithm = algorithm", span="42-42"];
m23_2 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Option.cs", label="_orders = _algorithm.Transactions.Orders", span="43-43"];
m23_3 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Option.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="39-39"];
m23_13 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Option.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="88-88"];
m23_14 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Option.cs", label="order.Status == OrderStatus.Update", span="90-90"];
m23_15 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Option.cs", label="return true;", span="92-92"];
m23_16 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Option.cs", label="return false;", span="94-94"];
m23_17 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Option.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="88-88"];
m23_48 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, string, QuantConnect.Orders.OrderStatus, decimal, int, string)", file="Option.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, string, QuantConnect.Orders.OrderStatus, decimal, int, string)", span="92-92"];
m23_50 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="Option.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="52-52"];
m23_59 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="Option.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="194-194"];
m23_60 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="Option.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="194-194"];
m23_54 [cluster="Unk.Format", file="Option.cs", label="Entry Unk.Format", span=""];
m23_56 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Option.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="102-102"];
m23_52 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="Option.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="61-61"];
m23_47 [cluster="Unk.GetSufficientCapitalForOrder", file="Option.cs", label="Entry Unk.GetSufficientCapitalForOrder", span=""];
m23_51 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="Option.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="44-44"];
m23_23 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="114-114"];
m23_24 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="var orders = (from order in _orders\r\n                          where order.Value.Status != OrderStatus.Filled &&\r\n                                order.Value.Status != OrderStatus.Canceled &&\r\n                                order.Value.Status != OrderStatus.Invalid\r\n                          orderby order.Value.Id ascending\r\n                          select order.Value)", span="122-127"];
m23_25 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label=orders, span="130-130"];
m23_26 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="var sufficientBuyingPower = _algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="133-133"];
m23_29 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="var model = _algorithm.Securities[order.Symbol].Model", span="141-141"];
m23_30 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="order.Type", span="146-146"];
m23_32 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="fill = model.LimitFill(_algorithm.Securities[order.Symbol], order as LimitOrder)", span="149-149"];
m23_34 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="fill = model.StopMarketFill(_algorithm.Securities[order.Symbol], order as StopMarketOrder)", span="152-152"];
m23_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="fill = model.MarketFill(_algorithm.Securities[order.Symbol], order as MarketOrder)", span="155-155"];
m23_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="fill = model.StopLimitFill(_algorithm.Securities[order.Symbol], order as StopLimitOrder)", span="158-158"];
m23_41 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'', order.Id, order.Type, err.Message))", span="165-165"];
m23_42 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="order.Status = OrderStatus.Invalid", span="171-171"];
m23_44 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="order.Status != OrderStatus.None", span="175-175"];
m23_27 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="var fill = new OrderEvent()", span="135-135"];
m23_28 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label=sufficientBuyingPower, span="138-138"];
m23_45 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="OnOrderEvent(fill)", span="178-178"];
m23_31 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="OrderType.Limit", span="148-148"];
m23_33 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="OrderType.StopMarket", span="151-151"];
m23_35 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="OrderType.Market", span="154-154"];
m23_37 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="OrderType.StopLimit", span="157-157"];
m23_39 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label=Exception, span="162-162"];
m23_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="Log.Error(''BacktestingBrokerage.Scan(): '' + err.Message)", span="164-164"];
m23_43 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order.'', order.Id))", span="172-172"];
m23_46 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="Option.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="114-114"];
m23_57 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="Option.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="186-186"];
m23_58 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="Option.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="186-186"];
m23_49 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="Option.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="69-69"];
m23_55 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="Option.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="246-246"];
m23_61 [file="Option.cs", label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
m24_9 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="OptionSymbolProperties.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", span="58-58"];
m24_10 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="OptionSymbolProperties.cs", label="ContractMultiplier = multiplier", span="60-60"];
m24_11 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="OptionSymbolProperties.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", span="58-58"];
m24_0 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="OptionSymbolProperties.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", span="34-34"];
m24_1 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="OptionSymbolProperties.cs", label="ContractUnitOfTrade = (int)contractMultiplier", span="37-37"];
m24_2 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="OptionSymbolProperties.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", span="34-34"];
m24_6 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="OptionSymbolProperties.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", span="53-53"];
m24_7 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="OptionSymbolProperties.cs", label="ContractUnitOfTrade = unitOfTrade", span="55-55"];
m24_8 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="OptionSymbolProperties.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", span="53-53"];
m24_3 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="OptionSymbolProperties.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43"];
m24_4 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="OptionSymbolProperties.cs", label="ContractUnitOfTrade = (int)properties.ContractMultiplier", span="50-50"];
m24_5 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="OptionSymbolProperties.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43"];
m24_12 [file="OptionSymbolProperties.cs", label="QuantConnect.Securities.Option.OptionSymbolProperties", span=""];
m25_186 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="293-293"];
m25_187 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="int id = 0", span="295-295"];
m25_188 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="296-296"];
m25_192 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="var order = new LimitOrder(Symbol, -buyQuantity, limitPrice, DateTime.UtcNow, type: Type) {Id = ++id}", span="308-308"];
m25_189 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="bool filled = false", span="298-298"];
m25_190 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filled = true;\r\n                }\r\n            }", span="299-305"];
m25_194 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="310-310"];
m25_199 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="ib.UpdateOrder(order)", span="318-318"];
m25_191 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="decimal limitPrice = 10000m", span="307-307"];
m25_196 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="!filled && stopwatch.Elapsed.TotalSeconds < 10", span="313-313"];
m25_200 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="Assert.IsTrue(filled)", span="321-321"];
m25_193 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="309-309"];
m25_198 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="order.LimitPrice = order.LimitPrice/2", span="317-317"];
m25_195 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="var stopwatch = Stopwatch.StartNew()", span="312-312"];
m25_197 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="Thread.Sleep(1000)", span="316-316"];
m25_201 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="293-293"];
m25_440 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", span="642-642"];
m25_441 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", file="OrderJsonConverter.cs", label="return _orders.FirstOrDefault(x => x.BrokerId.Contains(brokerageId));", span="644-644"];
m25_442 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", span="642-642"];
m25_425 [cluster="Unk.Pass", file="OrderJsonConverter.cs", label="Entry Unk.Pass", span=""];
m25_45 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="return order;", span="127-127"];
m25_414 [cluster="System.Console.WriteLine(string)", file="OrderJsonConverter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m25_281 [cluster="Unk.ContainsKey", file="OrderJsonConverter.cs", label="Entry Unk.ContainsKey", span=""];
m25_69 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new StopLimitOrder\r\n                    {\r\n                        LimitPrice = jObject[''LimitPrice''].Value<decimal>(),\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", span="154-158"];
m25_65 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new LimitOrder {LimitPrice = jObject[''LimitPrice''].Value<decimal>()}", span="143-143"];
m25_66 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.StopMarket", span="146-146"];
m25_67 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="order = new StopMarketOrder\r\n                    {\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", span="147-150"];
m25_68 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="OrderJsonConverter.cs", label="OrderType.StopLimit", span="153-153"];
m25_50 [cluster="lambda expression", file="OrderJsonConverter.cs", label="canceledResetEvent.Set()", span="78-78"];
m25_394 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="574-574"];
m25_395 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="576-576"];
m25_396 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Assert.IsTrue(ib.IsConnected)", span="577-577"];
m25_401 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="ib.IsConnected", span="586-586"];
m25_408 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="!ib.IsConnected && stopwatch.Elapsed < tenMinutes", span="599-599"];
m25_411 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Assert.IsTrue(ib.IsConnected)", span="605-605"];
m25_397 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="var tenMinutes = TimeSpan.FromMinutes(10)", span="579-579"];
m25_398 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Console.WriteLine(''------'')", span="581-581"];
m25_399 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Console.WriteLine(''Waiting for internet disconnection '')", span="582-582"];
m25_400 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Console.WriteLine(''------'')", span="583-583"];
m25_402 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Thread.Sleep(2500)", span="588-588"];
m25_404 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="var stopwatch = Stopwatch.StartNew()", span="592-592"];
m25_403 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Console.Write(''.'')", span="589-589"];
m25_405 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Console.WriteLine(''------'')", span="594-594"];
m25_406 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Console.WriteLine(''Trying to reconnect '')", span="595-595"];
m25_407 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Console.WriteLine(''------'')", span="596-596"];
m25_409 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Thread.Sleep(2500)", span="601-601"];
m25_410 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Console.Write(''.'')", span="602-602"];
m25_412 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="574-574"];
m25_209 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="325-325"];
m25_210 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="var orderedResetEvent = new ManualResetEvent(false)", span="327-327"];
m25_211 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="328-328"];
m25_213 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderedResetEvent.Set();\r\n                }\r\n                if (orderEvent.Status == OrderStatus.Canceled)\r\n                {\r\n                    canceledResetEvent.Set();\r\n                }\r\n            }", span="332-342"];
m25_217 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="orderedResetEvent.WaitOneAssertFail(2500, ''Limit order failed to be submitted.'')", span="348-348"];
m25_212 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="330-330"];
m25_220 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="canceledResetEvent.WaitOneAssertFail(2500, ''Canceled event did not fire.'')", span="354-354"];
m25_216 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="347-347"];
m25_219 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="ib.CancelOrder(order)", span="352-352"];
m25_221 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="var openOrders = ib.GetOpenOrders()", span="356-356"];
m25_214 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="var order = new LimitOrder(Symbol, -buyQuantity, 100000, DateTime.UtcNow, null, Type)", span="345-345"];
m25_215 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="346-346"];
m25_222 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="var cancelledOrder = openOrders.FirstOrDefault(x => x.BrokerId.Contains(order.BrokerId[0]))", span="357-357"];
m25_218 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="Thread.Sleep(500)", span="350-350"];
m25_223 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="Assert.IsNull(cancelledOrder)", span="358-358"];
m25_224 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="325-325"];
m25_84 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="161-161"];
m25_364 [cluster="Unk.Any", file="OrderJsonConverter.cs", label="Entry Unk.Any", span=""];
m25_43 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var tickerstring = jObject[''Symbol''].Value<string>()", span="124-124"];
m25_83 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OrderJsonConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m25_54 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.Quantity != 0", span="98-98"];
m25_304 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="289-289"];
m25_48 [cluster="lambda expression", file="OrderJsonConverter.cs", label="filledResetEvent.Set()", span="74-74"];
m25_60 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.Quantity != 0", span="110-110"];
m25_61 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="110-110"];
m25_64 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="110-110"];
m25_77 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type)", span="142-142"];
m25_76 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="Assert.AreNotEqual(0, brokerageID)", span="140-140"];
m25_62 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="110-110"];
m25_70 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="131-131"];
m25_72 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="var order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type)", span="135-135"];
m25_74 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="137-137"];
m25_63 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.Symbol + '' '' + x.Quantity", span="110-110"];
m25_71 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="133-133"];
m25_73 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="136-136"];
m25_75 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="var brokerageID = order.BrokerId.Single()", span="139-139"];
m25_78 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="143-143"];
m25_38 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="113-113"];
m25_227 [cluster="Unk.IsNull", file="OrderJsonConverter.cs", label="Entry Unk.IsNull", span=""];
m25_41 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="119-119"];
m25_327 [cluster="System.Collections.Generic.List<T>.List()", file="OrderJsonConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m25_80 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="Assert.AreNotEqual(brokerageID, order.BrokerId.Single())", span="146-146"];
m25_146 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="64-64"];
m25_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="45-45"];
m25_47 [cluster="Unk.>", file="OrderJsonConverter.cs", label="Entry Unk.>", span=""];
m25_49 [cluster="Unk.Select", file="OrderJsonConverter.cs", label="Entry Unk.Select", span=""];
m25_53 [cluster="Unk.Single", file="OrderJsonConverter.cs", label="Entry Unk.Single", span=""];
m25_56 [cluster="Unk.Create", file="OrderJsonConverter.cs", label="Entry Unk.Create", span=""];
m25_59 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="104-104"];
m25_46 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="87-87"];
m25_51 [cluster="Unk.SelectTokens", file="OrderJsonConverter.cs", label="Entry Unk.SelectTokens", span=""];
m25_55 [cluster="Symbol.cstr", file="OrderJsonConverter.cs", label="Entry Symbol.cstr", span=""];
m25_57 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="104-104"];
m25_58 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.Value<string>()", span="104-104"];
m25_104 [cluster="lambda expression", file="OrderJsonConverter.cs", label="manualResetEvent.Set()", span="161-161"];
m25_102 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderEvent.Status == OrderStatus.Filled", span="158-158"];
m25_101 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="156-163"];
m25_103 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderFilled = true", span="160-160"];
m25_105 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="156-163"];
m25_121 [cluster="lambda expression", file="OrderJsonConverter.cs", label="manualResetEvent.Set()", span="187-187"];
m25_119 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderEvent.Status == OrderStatus.Filled", span="184-184"];
m25_118 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="182-189"];
m25_120 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderFilled = true", span="186-186"];
m25_122 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="182-189"];
m25_150 [cluster="lambda expression", file="OrderJsonConverter.cs", label="manualResetEvent.Set()", span="216-216"];
m25_148 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderEvent.Status == OrderStatus.Filled", span="213-213"];
m25_151 [cluster="lambda expression", file="OrderJsonConverter.cs", label="price = orderEvent.FillPrice", span="218-218"];
m25_147 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="211-220"];
m25_149 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderFilled = true", span="215-215"];
m25_153 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="211-220"];
m25_152 [cluster="lambda expression", file="OrderJsonConverter.cs", label="delta = 0.02m", span="219-219"];
m25_184 [cluster="lambda expression", file="OrderJsonConverter.cs", label="manualResetEvent.Set()", span="261-261"];
m25_182 [cluster="lambda expression", file="OrderJsonConverter.cs", label="fillPrice = args.FillPrice", span="259-259"];
m25_180 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="256-262"];
m25_181 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderFilled = true", span="258-258"];
m25_185 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="256-262"];
m25_183 [cluster="lambda expression", file="OrderJsonConverter.cs", label="delta = 0.02m", span="260-260"];
m25_206 [cluster="lambda expression", file="OrderJsonConverter.cs", label="args.Status == OrderStatus.Filled", span="301-301"];
m25_205 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="299-305"];
m25_207 [cluster="lambda expression", file="OrderJsonConverter.cs", label="filled = true", span="303-303"];
m25_208 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="299-305"];
m25_230 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderedResetEvent.Set()", span="336-336"];
m25_232 [cluster="lambda expression", file="OrderJsonConverter.cs", label="canceledResetEvent.Set()", span="340-340"];
m25_229 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderEvent.Status == OrderStatus.Submitted", span="334-334"];
m25_231 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderEvent.Status == OrderStatus.Canceled", span="338-338"];
m25_235 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.BrokerId.Contains(order.BrokerId[0])", span="357-357"];
m25_234 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="357-357"];
m25_228 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="332-342"];
m25_233 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="332-342"];
m25_236 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="357-357"];
m25_255 [cluster="lambda expression", file="OrderJsonConverter.cs", label="order.Status = fill.Status", span="380-380"];
m25_254 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderFilledResetEvent.Set()", span="376-376"];
m25_252 [cluster="lambda expression", file="OrderJsonConverter.cs", label="fill.Status == OrderStatus.Filled", span="373-373"];
m25_253 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderFilledEventCount++", span="375-375"];
m25_251 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="371-381"];
m25_256 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="371-381"];
m25_282 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="400-400"];
m25_287 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderResetEvent.Set()", span="410-410"];
m25_286 [cluster="lambda expression", file="OrderJsonConverter.cs", label="fill.Status == OrderStatus.Filled", span="410-410"];
m25_290 [cluster="lambda expression", file="OrderJsonConverter.cs", label="portfolioResetEvent.Set()", span="416-416"];
m25_292 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="431-431"];
m25_283 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.Symbol", span="400-400"];
m25_284 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="400-400"];
m25_285 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="408-411"];
m25_288 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="408-411"];
m25_289 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="414-417"];
m25_291 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="414-417"];
m25_293 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.Symbol", span="431-431"];
m25_294 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="431-431"];
m25_330 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderEventFired.Set()", span="471-471"];
m25_329 [cluster="lambda expression", file="OrderJsonConverter.cs", label="args.Status == OrderStatus.Filled", span="469-469"];
m25_333 [cluster="lambda expression", file="OrderJsonConverter.cs", label="cashBalanceUpdates.Add(args.CashBalance)", span="479-479"];
m25_334 [cluster="lambda expression", file="OrderJsonConverter.cs", label="accountChangedFired.Set()", span="480-480"];
m25_328 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="467-473"];
m25_331 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="467-473"];
m25_332 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="477-481"];
m25_335 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="477-481"];
m25_349 [cluster="lambda expression", file="OrderJsonConverter.cs", label="manualResetEvent.Set()", span="509-509"];
m25_348 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="509-509"];
m25_350 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="509-509"];
m25_367 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderEventFired.Set()", span="532-532"];
m25_366 [cluster="lambda expression", file="OrderJsonConverter.cs", label="args.Status == OrderStatus.Filled", span="530-530"];
m25_370 [cluster="lambda expression", file="OrderJsonConverter.cs", label="order.BrokerId.Any(id => executions.Any(e => e.OrderId == id))", span="543-543"];
m25_373 [cluster="lambda expression", file="OrderJsonConverter.cs", label="executions.Any(e => e.OrderId == id)", span="543-543"];
m25_369 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="543-543"];
m25_365 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="528-534"];
m25_368 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="528-534"];
m25_371 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="543-543"];
m25_372 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="543-543"];
m25_376 [cluster="lambda expression", file="OrderJsonConverter.cs", label="e.OrderId == id", span="543-543"];
m25_374 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="543-543"];
m25_375 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="543-543"];
m25_377 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="543-543"];
m25_392 [cluster="lambda expression", file="OrderJsonConverter.cs", label="orderEventFired.Set()", span="556-556"];
m25_391 [cluster="lambda expression", file="OrderJsonConverter.cs", label="args.Status == OrderStatus.Submitted", span="554-554"];
m25_390 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="552-558"];
m25_393 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="552-558"];
m25_427 [cluster="lambda expression", file="OrderJsonConverter.cs", label="order.BrokerId.Any(x => x == id)", span="616-616"];
m25_426 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="616-616"];
m25_430 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x == id", span="616-616"];
m25_428 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="616-616"];
m25_429 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="616-616"];
m25_431 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="616-616"];
m25_438 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.Id == orderId", span="639-639"];
m25_437 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="639-639"];
m25_439 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="639-639"];
m25_444 [cluster="lambda expression", file="OrderJsonConverter.cs", label="x.BrokerId.Contains(brokerageId)", span="644-644"];
m25_443 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Entry lambda expression", span="644-644"];
m25_445 [cluster="lambda expression", file="OrderJsonConverter.cs", label="Exit lambda expression", span="644-644"];
m25_1 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OrderJsonConverter.cs", label="InteractiveBrokersGatewayRunner.Start(Config.Get(''ib-controller-dir''), \r\n                Config.Get(''ib-tws-dir''), \r\n                Config.Get(''ib-user-name''), \r\n                Config.Get(''ib-password''), \r\n                Config.GetBool(''ib-use-tws'')\r\n                )", span="47-52"];
m25_2 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OrderJsonConverter.cs", label="_interactiveBrokersBrokerage = new InteractiveBrokersBrokerage(new OrderMapping(_orders))", span="55-55"];
m25_336 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="501-501"];
m25_337 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="503-503"];
m25_338 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="decimal balance = ib.GetCashBalance()[''USD'']", span="505-505"];
m25_340 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="ib.AccountChanged += (sender, orderEvent) => manualResetEvent.Set()", span="509-509"];
m25_343 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="513-513"];
m25_345 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="decimal balanceAfterTrade = ib.GetCashBalance()[''USD'']", span="517-517"];
m25_339 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="508-508"];
m25_346 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="Assert.AreNotEqual(balance, balanceAfterTrade)", span="519-519"];
m25_344 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="manualResetEvent.WaitOneAssertFail(1500, ''Didn't receive account changed event'')", span="515-515"];
m25_341 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="var order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type)", span="511-511"];
m25_342 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="512-512"];
m25_347 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="501-501"];
m25_204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="182-182"];
m25_87 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="150-150"];
m25_88 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="bool orderFilled = false", span="152-152"];
m25_89 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="153-153"];
m25_90 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="154-154"];
m25_91 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="156-163"];
m25_95 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="manualResetEvent.WaitOne(2500)", span="169-169"];
m25_94 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="167-167"];
m25_96 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="170-170"];
m25_92 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="var order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type) {Id = 1}", span="165-165"];
m25_93 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="166-166"];
m25_97 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="171-171"];
m25_98 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="150-150"];
m25_35 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: market = Market.FXCM", span="108-108"];
m25_179 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="63-63"];
m25_79 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="144-144"];
m25_106 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="175-175"];
m25_107 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="bool orderFilled = false", span="177-177"];
m25_108 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="178-178"];
m25_109 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="180-180"];
m25_110 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="182-189"];
m25_114 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="manualResetEvent.WaitOne(2500)", span="196-196"];
m25_113 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="194-194"];
m25_115 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="198-198"];
m25_111 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="var order = new MarketOrder(Symbol, -buyQuantity, DateTime.UtcNow, type: Type)", span="192-192"];
m25_112 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="193-193"];
m25_116 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="199-199"];
m25_117 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="175-175"];
m25_415 [cluster="System.Console.Write(string)", file="OrderJsonConverter.cs", label="Entry System.Console.Write(string)", span="0-0"];
m25_11 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", span="60-60"];
m25_12 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="Log.Trace(''-----'')", span="64-64"];
m25_13 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Starting teardown...'')", span="65-65"];
m25_14 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="Log.Trace(''-----'')", span="66-66"];
m25_15 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="68-68"];
m25_16 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="var filledResetEvent = new ManualResetEvent(false)", span="69-69"];
m25_17 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="_interactiveBrokersBrokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n                {\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        filledResetEvent.Set();\r\n                    }\r\n                    if (orderEvent.Status == OrderStatus.Canceled)\r\n                    {\r\n                        canceledResetEvent.Set();\r\n                    }\r\n                }", span="70-80"];
m25_22 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var order = CreateOrder(orderType, jObject)", span="91-91"];
m25_23 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Id = jObject[''Id''].Value<int>()", span="94-94"];
m25_18 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Canceling open orders...'')", span="84-84"];
m25_19 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="OrderJsonConverter.cs", label="var orders = _interactiveBrokersBrokerage.GetOpenOrders()", span="86-86"];
m25_20 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="87-87"];
m25_21 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var orderType = (OrderType) jObject[''Type''].Value<int>()", span="90-90"];
m25_24 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Status = (OrderStatus) jObject[''Status''].Value<int>()", span="95-95"];
m25_25 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Time = jObject[''Time''].Value<DateTime>()", span="96-96"];
m25_26 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Tag = jObject[''Tag''].Value<string>()", span="97-97"];
m25_27 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Quantity = jObject[''Quantity''].Value<int>()", span="99-99"];
m25_28 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=red, community=0, file="OrderJsonConverter.cs", label="1: order.Quantity = jObject[''Quantity''].Value<decimal>()", span="100-100"];
m25_29 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Price = jObject[''Price''].Value<decimal>()", span="102-102"];
m25_30 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var securityType = (SecurityType) jObject[''SecurityType''].Value<int>()", span="103-103"];
m25_31 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.BrokerId = jObject[''BrokerId''].Select(x => x.Value<string>()).ToList()", span="104-104"];
m25_32 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.ContingentId = jObject[''ContingentId''].Value<int>()", span="105-105"];
m25_33 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="var market = Market.USA", span="107-107"];
m25_9 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", span="632-632"];
m25_432 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", file="OrderJsonConverter.cs", label="_orders = orders", span="634-634"];
m25_433 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", span="632-632"];
m25_34 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: securityType == SecurityType.Forex", span="108-108"];
m25_250 [cluster="System.DateTime.DateTime()", file="OrderJsonConverter.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m25_362 [cluster="System.DateTime.AddDays(double)", file="OrderJsonConverter.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m25_280 [cluster="Unk.ToDictionary", file="OrderJsonConverter.cs", label="Entry Unk.ToDictionary", span=""];
m25_42 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: order.Symbol = Symbol.Create(ticker, securityType, market)", span="120-120"];
m25_52 [cluster="System.Threading.EventWaitHandle.Set()", file="OrderJsonConverter.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m25_3 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OrderJsonConverter.cs", label="_interactiveBrokersBrokerage.Connect()", span="56-56"];
m25_5 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="89-89"];
m25_40 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: jObject.SelectTokens(''Symbol.Value'').Any()", span="116-116"];
m25_44 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="OrderJsonConverter.cs", label="order.Symbol = Symbol.Create(tickerstring, securityType, market)", span="125-125"];
m25_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, bool)", span="45-45"];
m25_37 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: var sid = SecurityIdentifier.Parse(jObject.SelectTokens(''Symbol.ID'').Single().Value<string>())", span="112-112"];
m25_39 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: order.Symbol = new Symbol(sid, ticker)", span="114-114"];
m25_85 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m25_306 [cluster="System.Console.WriteLine(string, object, object)", file="OrderJsonConverter.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m25_100 [cluster="Unk.AreEqual", file="OrderJsonConverter.cs", label="Entry Unk.AreEqual", span=""];
m25_226 [cluster="Unk.FirstOrDefault", file="OrderJsonConverter.cs", label="Entry Unk.FirstOrDefault", span=""];
m25_237 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="OrderJsonConverter.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m25_424 [cluster="Unk.Fail", file="OrderJsonConverter.cs", label="Entry Unk.Fail", span=""];
m25_202 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="OrderJsonConverter.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m25_86 [cluster="Unk.AreNotEqual", file="OrderJsonConverter.cs", label="Entry Unk.AreNotEqual", span=""];
m25_36 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", color=green, community=0, file="OrderJsonConverter.cs", label="1: jObject.SelectTokens(''Symbol.ID'').Any()", span="110-110"];
m25_81 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m25_4 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="45-45"];
m25_434 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", span="637-637"];
m25_435 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", file="OrderJsonConverter.cs", label="return _orders.FirstOrDefault(x => x.Id == orderId);", span="639-639"];
m25_436 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", span="637-637"];
m25_154 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="248-248"];
m25_155 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="bool orderFilled = false", span="250-250"];
m25_156 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="251-251"];
m25_157 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="252-252"];
m25_160 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                fillPrice = args.FillPrice;\r\n                delta = 0.02m;\r\n                manualResetEvent.Set();\r\n            }", span="256-262"];
m25_165 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="manualResetEvent.WaitOne(2000)", span="270-270"];
m25_166 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="manualResetEvent.Reset()", span="271-271"];
m25_175 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="manualResetEvent.WaitOne(1000)", span="286-286"];
m25_158 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="decimal fillPrice = 100m", span="254-254"];
m25_164 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="268-268"];
m25_171 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="280-280"];
m25_174 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="284-284"];
m25_176 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="288-288"];
m25_159 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="decimal delta = 85.0m", span="255-255"];
m25_161 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="int id = 0", span="265-265"];
m25_162 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="Order order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type) { Id = ++id }", span="266-266"];
m25_163 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="267-267"];
m25_169 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="order = new StopMarketOrder(Symbol, buyQuantity, fillPrice - delta, DateTime.UtcNow, type: Type) { Id = ++id }", span="278-278"];
m25_167 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="Assert.IsTrue(orderFilled)", span="272-272"];
m25_168 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="orderFilled = false", span="274-274"];
m25_170 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="279-279"];
m25_172 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="order = new StopMarketOrder(Symbol, -buyQuantity, fillPrice + delta, DateTime.UtcNow, type: Type) { Id = ++id }", span="282-282"];
m25_173 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="283-283"];
m25_177 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="Assert.AreEqual(OrderType.StopMarket, orderFromIB.Type)", span="289-289"];
m25_178 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="248-248"];
m25_123 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="203-203"];
m25_124 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="bool orderFilled = false", span="205-205"];
m25_125 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="206-206"];
m25_126 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="207-207"];
m25_129 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n                price = orderEvent.FillPrice;\r\n                delta = 0.02m;\r\n            }", span="211-220"];
m25_134 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="manualResetEvent.WaitOne(2000)", span="228-228"];
m25_135 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="manualResetEvent.Reset()", span="229-229"];
m25_142 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="manualResetEvent.WaitOne(1000)", span="241-241"];
m25_127 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="decimal price = 100m", span="209-209"];
m25_133 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="226-226"];
m25_138 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="235-235"];
m25_141 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="239-239"];
m25_143 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="243-243"];
m25_128 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="decimal delta = 85.0m", span="210-210"];
m25_130 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="int id = 0", span="223-223"];
m25_131 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="Order order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type) { Id = ++id }", span="224-224"];
m25_132 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="225-225"];
m25_136 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="order = new LimitOrder(Symbol, buyQuantity, price - delta, DateTime.UtcNow, null, Type) { Id = ++id }", span="233-233"];
m25_137 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="234-234"];
m25_139 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="order = new LimitOrder(Symbol, -buyQuantity, price + delta, DateTime.UtcNow, null, Type) { Id = ++id }", span="237-237"];
m25_140 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="238-238"];
m25_144 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="Assert.AreEqual(OrderType.Limit, orderFromIB.Type)", span="244-244"];
m25_145 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="203-203"];
m25_305 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OrderJsonConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m25_363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", span="298-298"];
m25_6 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="129-129"];
m25_307 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="462-462"];
m25_308 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="464-464"];
m25_309 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="var orderEventFired = new ManualResetEvent(false)", span="466-466"];
m25_310 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="467-473"];
m25_313 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="ib.AccountChanged += (sender, args) =>\r\n            {\r\n                cashBalanceUpdates.Add(args.CashBalance);\r\n                accountChangedFired.Set();\r\n            }", span="477-481"];
m25_319 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="488-488"];
m25_320 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="orderEventFired.WaitOneAssertFail(1500, ''Didnt receive order event #'' + i)", span="490-490"];
m25_321 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="orderEventFired.Reset()", span="491-491"];
m25_311 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="var cashBalanceUpdates = new List<decimal>()", span="475-475"];
m25_312 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="var accountChangedFired = new ManualResetEvent(false)", span="476-476"];
m25_325 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="Assert.AreEqual(orderCount, cashBalanceUpdates.Count)", span="497-497"];
m25_322 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="accountChangedFired.WaitOneAssertFail(1500, ''Didnt receive account event #'' + i)", span="493-493"];
m25_323 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="accountChangedFired.Reset()", span="494-494"];
m25_314 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="int orderCount = 3", span="483-483"];
m25_315 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="int i = 0", span="484-484"];
m25_316 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="i < orderCount", span="484-484"];
m25_317 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="var order = new MarketOrder(Symbol, buyQuantity*(i + 1), new DateTime(), type: Type) {Id = i + 1}", span="486-486"];
m25_324 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="i++", span="484-484"];
m25_318 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="487-487"];
m25_326 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="462-462"];
m25_238 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="362-362"];
m25_239 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="364-364"];
m25_240 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="var order = new MarketOrder(Symbol, buyQuantity, new DateTime(), type: Type) {Id = 1}", span="366-366"];
m25_244 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilledEventCount++;\r\n                    orderFilledResetEvent.Set();\r\n                }\r\n\r\n                // mimic what the transaction handler would do\r\n                order.Status = fill.Status;\r\n            }", span="371-381"];
m25_245 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="383-383"];
m25_241 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="367-367"];
m25_242 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="int orderFilledEventCount = 0", span="369-369"];
m25_243 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="var orderFilledResetEvent = new ManualResetEvent(false)", span="370-370"];
m25_246 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="orderFilledResetEvent.WaitOneAssertFail(2500, ''Didnt fire order filled event'')", span="385-385"];
m25_248 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="Assert.AreEqual(1, orderFilledEventCount)", span="390-390"];
m25_247 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="Thread.Sleep(2000)", span="388-388"];
m25_249 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="362-362"];
m25_413 [cluster="System.TimeSpan.FromMinutes(double)", file="OrderJsonConverter.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m25_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="352-352"];
m25_82 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m25_351 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="523-523"];
m25_352 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="525-525"];
m25_353 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="var orderEventFired = new ManualResetEvent(false)", span="527-527"];
m25_354 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="528-534"];
m25_357 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="538-538"];
m25_359 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="var executions = ib.GetExecutions(null, null, null, DateTime.UtcNow.AddDays(-1), null)", span="541-541"];
m25_358 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="orderEventFired.WaitOne(1500)", span="539-539"];
m25_355 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="var order = new MarketOrder(Symbol, -buyQuantity, new DateTime(), type: Type)", span="536-536"];
m25_356 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="537-537"];
m25_360 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="Assert.IsTrue(executions.Any(x => order.BrokerId.Any(id => executions.Any(e => e.OrderId == id))))", span="543-543"];
m25_361 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="523-523"];
m25_257 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="394-394"];
m25_258 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="396-396"];
m25_259 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="Thread.Sleep(500)", span="398-398"];
m25_260 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="var previousHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="400-400"];
m25_264 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled) orderResetEvent.Set();\r\n            }", span="408-411"];
m25_266 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="ib.SecurityHoldingUpdated += (sender, update) =>\r\n            {\r\n                portfolioResetEvent.Set();\r\n            }", span="414-417"];
m25_270 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="423-423"];
m25_273 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="var newHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="431-431"];
m25_261 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="Log.Trace(''Quantity: '' + previousHoldings[Symbol].Quantity)", span="402-402"];
m25_262 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="bool hasSymbol = previousHoldings.ContainsKey(Symbol)", span="404-404"];
m25_276 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="Assert.AreEqual(previousHoldings[Symbol].Quantity, newHoldings[Symbol].Quantity - quantity)", span="436-436"];
m25_263 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="var orderResetEvent = new ManualResetEvent(false)", span="407-407"];
m25_275 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label=hasSymbol, span="434-434"];
m25_271 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="orderResetEvent.WaitOneAssertFail(2500, ''Didn't receive order event'')", span="426-426"];
m25_265 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="var portfolioResetEvent = new ManualResetEvent(false)", span="413-413"];
m25_272 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="portfolioResetEvent.WaitOneAssertFail(1500, ''Didn't receive portfolio update event'')", span="429-429"];
m25_267 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="int quantity = -buyQuantity", span="420-420"];
m25_268 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="var order = new MarketOrder(Symbol, quantity, DateTime.UtcNow, type: Type)", span="421-421"];
m25_278 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="Assert.AreEqual(newHoldings[Symbol].Quantity, quantity)", span="441-441"];
m25_269 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="422-422"];
m25_274 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="Log.Trace(''New Quantity: '' + newHoldings[Symbol].Quantity)", span="432-432"];
m25_277 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="Assert.IsTrue(newHoldings.ContainsKey(Symbol))", span="440-440"];
m25_279 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="394-394"];
m25_295 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="446-446"];
m25_296 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="448-448"];
m25_297 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label="var cashBalance = ib.GetCashBalance()", span="449-449"];
m25_298 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label="Assert.IsTrue(cashBalance.ContainsKey(''USD''))", span="450-450"];
m25_299 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label=cashBalance, span="451-451"];
m25_302 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label="Assert.AreNotEqual(0m, cashBalance[''USD''])", span="456-456"];
m25_300 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label="Console.WriteLine(''{0} - {1}'', item.Key, item.Value)", span="453-453"];
m25_301 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label="item.Key == ''USD''", span="454-454"];
m25_303 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="446-446"];
m25_378 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="547-547"];
m25_379 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="var ib = _interactiveBrokersBrokerage", span="549-549"];
m25_380 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="var orderEventFired = new ManualResetEvent(false)", span="551-551"];
m25_381 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="552-558"];
m25_384 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="ib.PlaceOrder(order)", span="562-562"];
m25_387 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="var openOrders = ib.GetOpenOrders()", span="568-568"];
m25_385 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="orderEventFired.WaitOne(1500)", span="564-564"];
m25_382 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="var order = new LimitOrder(Symbol, buyQuantity, 0.01m, DateTime.UtcNow, type: Type)", span="560-560"];
m25_383 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="_orders.Add(order)", span="561-561"];
m25_386 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="Thread.Sleep(250)", span="566-566"];
m25_388 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="Assert.AreNotEqual(0, openOrders.Count)", span="570-570"];
m25_389 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="547-547"];
m25_203 [cluster="System.Threading.Thread.Sleep(int)", file="OrderJsonConverter.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m25_225 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="OrderJsonConverter.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m25_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping)", span="84-84"];
m25_99 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="608-608"];
m25_416 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="!orderFilled", span="611-611"];
m25_417 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="ib.GetOpenOrders()", span="614-614"];
m25_418 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="openOrder.BrokerId.Any(id => order.BrokerId.Any(x => x == id))", span="616-616"];
m25_421 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="Assert.Pass(''The order was successfully filled!'')", span="624-624"];
m25_420 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="Assert.Fail(''The order was not filled and was unable to be located via GetOpenOrders()'')", span="621-621"];
m25_419 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="return openOrder;", span="618-618"];
m25_422 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="return null;", span="625-625"];
m25_423 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="OrderJsonConverter.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="608-608"];
m25_446 [file="OrderJsonConverter.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", span=""];
m25_447 [file="OrderJsonConverter.cs", label=filledResetEvent, span=""];
m25_448 [file="OrderJsonConverter.cs", label=canceledResetEvent, span=""];
m25_449 [file="OrderJsonConverter.cs", label=manualResetEvent, span=""];
m25_450 [file="OrderJsonConverter.cs", label=manualResetEvent, span=""];
m25_451 [file="OrderJsonConverter.cs", label=manualResetEvent, span=""];
m25_452 [file="OrderJsonConverter.cs", label=manualResetEvent, span=""];
m25_453 [file="OrderJsonConverter.cs", label=orderedResetEvent, span=""];
m25_454 [file="OrderJsonConverter.cs", label=canceledResetEvent, span=""];
m25_455 [file="OrderJsonConverter.cs", label=order, span=""];
m25_456 [file="OrderJsonConverter.cs", label=orderFilledEventCount, span=""];
m25_457 [file="OrderJsonConverter.cs", label=orderFilledResetEvent, span=""];
m25_458 [file="OrderJsonConverter.cs", label=order, span=""];
m25_459 [file="OrderJsonConverter.cs", label=orderResetEvent, span=""];
m25_460 [file="OrderJsonConverter.cs", label=portfolioResetEvent, span=""];
m25_461 [file="OrderJsonConverter.cs", label=orderEventFired, span=""];
m25_462 [file="OrderJsonConverter.cs", label=cashBalanceUpdates, span=""];
m25_463 [file="OrderJsonConverter.cs", label=accountChangedFired, span=""];
m25_464 [file="OrderJsonConverter.cs", label=manualResetEvent, span=""];
m25_465 [file="OrderJsonConverter.cs", label=orderEventFired, span=""];
m25_466 [file="OrderJsonConverter.cs", label=order, span=""];
m25_467 [file="OrderJsonConverter.cs", label=executions, span=""];
m25_468 [file="OrderJsonConverter.cs", label=long, span=""];
m25_469 [file="OrderJsonConverter.cs", label=orderEventFired, span=""];
m25_470 [file="OrderJsonConverter.cs", label="QuantConnect.Orders.Order", span=""];
m25_471 [file="OrderJsonConverter.cs", label=long, span=""];
m25_472 [file="OrderJsonConverter.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping", span=""];
m25_473 [file="OrderJsonConverter.cs", label=int, span=""];
m25_474 [file="OrderJsonConverter.cs", label=int, span=""];
m26_287 [cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40"];
m26_461 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="335-335"];
m26_322 [cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="87-87"];
m26_152 [cluster="System.TimeSpan.FromHours(double)", file="OrderJsonConverterTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m26_135 [cluster="System.DateTime.ToUniversalTime()", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m26_56 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m26_151 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="794-794"];
m26_326 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var data_keys = Enumerable.Range(0, 0).Select(x => new\r\n            {\r\n                Key = (string)null,\r\n                Serialized = (string)null\r\n            }).ToList()", span="797-801"];
m26_328 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="packet.Type != PacketType.LiveResult", span="808-808"];
m26_330 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var live = packet as LiveResultPacket", span="811-811"];
m26_357 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="Engine.Api.Store(dataKey.Serialized, dataKey.Key, StoragePermissions.Authenticated, async)", span="878-878"];
m26_327 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label=_chartLock, span="805-805"];
m26_339 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="data_keys.Add(new\r\n                        {\r\n                            Key = CreateKey(''10minute''),\r\n                            Serialized = JsonConvert.SerializeObject(live.Results)\r\n                        })", span="829-833"];
m26_343 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="data_keys.Add(new\r\n                        {\r\n                            Key = CreateKey(''minute''),\r\n                            Serialized = JsonConvert.SerializeObject(live.Results)\r\n                        })", span="841-845"];
m26_354 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="data_keys.Add(new\r\n                            {\r\n                                Key = CreateKey(''second_'' + Uri.EscapeUriString(name), ''yyyy-MM-dd-HH''),\r\n                                Serialized = JsonConvert.SerializeObject(newPacket)\r\n                            })", span="862-866"];
m26_356 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label=data_keys, span="876-876"];
m26_329 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="return;", span="808-808"];
m26_331 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="live != null", span="813-813"];
m26_334 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="Truncate(live.Results, start, stop)", span="820-820"];
m26_335 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var highResolutionCharts = new Dictionary<string, Chart>(live.Results.Charts)", span="822-822"];
m26_337 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var tenminuteCharts = tenminuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="826-826"];
m26_338 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="live.Results.Charts = tenminuteCharts", span="828-828"];
m26_341 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var minuteCharts = minuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="837-837"];
m26_342 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="live.Results.Charts = minuteCharts", span="840-840"];
m26_344 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="live.Results.Charts = highResolutionCharts", span="848-848"];
m26_347 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="Truncate(live.Results, start, stop)", span="852-852"];
m26_348 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="live.Results.Charts.Keys", span="854-854"];
m26_350 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="newPacket.Orders = new Dictionary<int, Order>(live.Results.Orders)", span="857-857"];
m26_351 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="newPacket.Holdings = new Dictionary<string, Holding>(live.Results.Holdings)", span="858-858"];
m26_353 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="newPacket.Charts.Add(name, live.Results.Charts[name])", span="860-860"];
m26_332 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var start = DateTime.UtcNow.Date", span="816-816"];
m26_355 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="Log.Error(''LiveResultHandler.StoreResult(): Result Null.'')", span="871-871"];
m26_333 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var stop = start.AddDays(1)", span="817-817"];
m26_336 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var tenminuteSampler = new SeriesSampler(TimeSpan.FromMinutes(10))", span="825-825"];
m26_340 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var minuteSampler = new SeriesSampler(TimeSpan.FromMinutes(1))", span="836-836"];
m26_345 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="start = DateTime.UtcNow.RoundDown(TimeSpan.FromHours(1))", span="849-849"];
m26_346 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="stop = DateTime.UtcNow.RoundUp(TimeSpan.FromHours(1))", span="850-850"];
m26_349 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="var newPacket = new LiveResult()", span="856-856"];
m26_352 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="newPacket.Charts = new Dictionary<string, Chart>()", span="859-859"];
m26_358 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label=Exception, span="881-881"];
m26_359 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="Log.Error(''LiveResultHandler.StoreResult(): '' + err.Message)", span="883-883"];
m26_360 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="794-794"];
m26_380 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="904-904"];
m26_381 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="OrderJsonConverterTests.cs", label="_exitTriggered = true", span="906-906"];
m26_382 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="904-904"];
m26_253 [cluster="System.DateTime.ToShortTimeString()", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m26_416 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="961-961"];
m26_417 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="OrderJsonConverterTests.cs", label="_subscription = symbol", span="963-963"];
m26_418 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="961-961"];
m26_464 [cluster="object.GetType()", file="OrderJsonConverterTests.cs", label="Entry object.GetType()", span="0-0"];
m26_246 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", span="137-137"];
m26_193 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m26_225 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="67-67"];
m26_196 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m26_139 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m26_383 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="912-912"];
m26_384 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="OrderJsonConverterTests.cs", label="Messages.Clear()", span="914-914"];
m26_385 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="912-912"];
m26_468 [cluster="QuantConnect.Notifications.Notification.Send()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Notifications.Notification.Send()", span="31-31"];
m26_219 [cluster="System.DateTime.ToString(string)", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m26_254 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", span="614-614"];
m26_255 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Security security", span="617-617"];
m26_256 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="_algorithm.Securities.TryGetValue(symbol, out security) && !security.SubscriptionDataConfig.IsInternalFeed && value > 0", span="618-618"];
m26_258 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Sample(''Stockplot: '' + symbol, ChartType.Overlay, ''Stockplot: '' + symbol, SeriesType.Line, time, value)", span="623-623"];
m26_257 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="DateTime.Now.TimeOfDay > security.Exchange.MarketOpen\r\n                 && DateTime.Now.TimeOfDay < security.Exchange.MarketClose", span="620-621"];
m26_259 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(string, System.DateTime, decimal)", span="614-614"];
m26_154 [cluster="Unk.ToList", file="OrderJsonConverterTests.cs", label="Entry Unk.ToList", span=""];
m26_146 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="442-442"];
m26_176 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="int groupSize = 10", span="451-451"];
m26_179 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="deltaCharts.Values", span="454-454"];
m26_188 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="var packets = new[]\r\n            {\r\n                new LiveResultPacket(_job, new LiveResult {Orders = deltaOrders}),\r\n                new LiveResultPacket(_job, new LiveResult {Holdings = holdings}),\r\n                new LiveResultPacket(_job, new LiveResult\r\n                {\r\n                    Statistics = deltaStatistics,\r\n                    RuntimeStatistics = runtimeStatistics,\r\n                    ServerStatistics = serverStatistics\r\n                })\r\n            }", span="475-485"];
m26_177 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Dictionary<string, Chart> current = new Dictionary<string, Chart>()", span="452-452"];
m26_183 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="current.Count >= groupSize", span="463-463"];
m26_184 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="current = new Dictionary<string, Chart>(groupSize)", span="465-465"];
m26_178 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="var chartPackets = new List<LiveResultPacket>()", span="453-453"];
m26_182 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="current.Add(chart.Name, new Chart(chart.Name))", span="459-459"];
m26_186 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="current.Add(chart.Name, chart)", span="468-468"];
m26_187 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { Charts = current }))", span="472-472"];
m26_185 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { Charts = current }))", span="466-466"];
m26_189 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="return packets.Concat(chartPackets);", span="488-488"];
m26_180 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="chart.Series.Values.Sum(x => x.Values.Count) == 0", span="456-456"];
m26_181 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="chart.Name != _subscription", span="457-457"];
m26_190 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="442-442"];
m26_66 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="266-266"];
m26_69 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Dictionary<int, Order> deltaOrders", span="269-269"];
m26_70 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="_algorithm == null || _algorithm.Transactions == null || _algorithm.Transactions.Orders == null || !_algorithm.GetLocked()", span="272-272"];
m26_71 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Log.Error(''LiveTradingResultHandler.Update(): Algorithm not yet initialized.'')", span="274-274"];
m26_73 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="DateTime.Now > _nextUpdate", span="280-280"];
m26_72 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="return;", span="275-275"];
m26_74 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="deltaOrders = (from order in _algorithm.Transactions.Orders\r\n                                   where order.Value.Id > _lastOrderId\r\n                                   select order).ToDictionary(t => t.Key, t => t.Value)", span="283-285"];
m26_130 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=Exception, span="429-429"];
m26_75 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=deltaOrders, span="288-288"];
m26_77 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="_lastOrderId = (from order in deltaOrders.Values select order.Id).DefaultIfEmpty(_lastOrderId).Max()", span="294-294"];
m26_86 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var holdingsToSend = _algorithm.Portfolio.Values.Where(x => _firstHoldingsPacket || deltaOrders.Any(o => o.Value.Symbol == x.Symbol))", span="317-317"];
m26_100 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, holdings, deltaStatistics, runtimeStatistics, serverStatistics)", span="344-344"];
m26_76 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="290-290"];
m26_78 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var deltaCharts = new Dictionary<string, Chart>()", span="300-300"];
m26_79 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=_chartLock, span="301-301"];
m26_81 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="deltaCharts.Add(chart.Value.Name, chart.Value.GetUpdates())", span="306-306"];
m26_80 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=_charts, span="304-304"];
m26_82 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var holdings = new Dictionary<string, Holding>()", span="311-311"];
m26_83 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var deltaStatistics = new Dictionary<string, string>()", span="312-312"];
m26_88 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="holdings.Add(holding.Symbol, new Holding(holding))", span="320-320"];
m26_108 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var complete = new LiveResultPacket(_job, new LiveResult(chartComplete, orders, _algorithm.Transactions.TransactionRecord, holdings, deltaStatistics, runtimeStatistics, serverStatistics))", span="359-359"];
m26_84 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var runtimeStatistics = new Dictionary<string, string>()", span="313-313"];
m26_85 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var serverStatistics = OS.GetServerStatistics()", span="314-314"];
m26_92 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="runtimeStatistics.Add(pair.Key, pair.Value)", span="329-329"];
m26_93 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="runtimeStatistics.Add(''Unrealized:'', ''$'' + _algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="334-334"];
m26_94 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="runtimeStatistics.Add(''Fees:'', ''-$'' + _algorithm.Portfolio.TotalFees.ToString(''N2''))", span="335-335"];
m26_95 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="runtimeStatistics.Add(''Net Profit:'', ''$'' + _algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="336-336"];
m26_96 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="runtimeStatistics.Add(''Return:'', ((_algorithm.Portfolio.TotalPortfolioValue - Engine.SetupHandler.StartingPortfolioValue) / Engine.SetupHandler.StartingPortfolioValue).ToString(''P''))", span="337-337"];
m26_97 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="runtimeStatistics.Add(''Equity:'', ''$'' + _algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="338-338"];
m26_98 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="runtimeStatistics.Add(''Holdings:'', ''$'' + _algorithm.Portfolio.TotalHoldingsValue.ToString(''N2''))", span="339-339"];
m26_99 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="runtimeStatistics.Add(''Volume:'', ''$'' + _algorithm.Portfolio.TotalSaleVolume.ToString(''N2''))", span="340-340"];
m26_87 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="holdingsToSend.OrderBy(x => x.Symbol)", span="318-318"];
m26_89 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="_firstHoldingsPacket = false", span="322-322"];
m26_90 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=_runtimeStatistics, span="325-325"];
m26_91 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=_runtimeStatistics, span="327-327"];
m26_101 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=splitPackets, span="346-346"];
m26_102 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Engine.Notify.Send(liveResultPacket)", span="348-348"];
m26_103 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="DateTime.Now > _nextChartsUpdate", span="352-352"];
m26_104 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="_nextChartsUpdate = DateTime.Now.AddMinutes(1)", span="354-354"];
m26_110 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="DateTime.Now > _nextLogStoreUpdate", span="365-365"];
m26_105 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=_chartLock, span="355-355"];
m26_106 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var chartComplete = new Dictionary<string, Chart>(Charts)", span="357-357"];
m26_107 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var orders = new Dictionary<int, Order>(_algorithm.Transactions.Orders)", span="358-358"];
m26_109 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="StoreResult(complete)", span="360-360"];
m26_111 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.Update(): Storing log...'')", span="367-367"];
m26_120 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="DateTime.Now > _nextStatisticsUpdate", span="384-384"];
m26_112 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=_logStoreLock, span="368-368"];
m26_113 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.Updae(): Storing log with count: '' + _logStore.Count)", span="370-370"];
m26_114 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var utc = DateTime.UtcNow", span="371-371"];
m26_115 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="var logs = (from log in _logStore\r\n                                        where log.Time >= utc.RoundDown(TimeSpan.FromHours(1))\r\n                                        select log).ToList()", span="372-374"];
m26_116 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="_logStore = logs", span="376-376"];
m26_117 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="StoreLog(logs)", span="377-377"];
m26_118 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.Updae(): Post truncation log with count: '' + _logStore.Count)", span="378-378"];
m26_119 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="_nextLogStoreUpdate = DateTime.Now.AddMinutes(2)", span="380-380"];
m26_121 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Engine.Api.SendStatistics(\r\n                                _job.AlgorithmId, \r\n                                _algorithm.Portfolio.TotalUnrealizedProfit,\r\n                                _algorithm.Portfolio.TotalFees, \r\n                                _algorithm.Portfolio.TotalProfit,\r\n                                _algorithm.Portfolio.TotalHoldingsValue, \r\n                                _algorithm.Portfolio.TotalPortfolioValue,\r\n                                ((_algorithm.Portfolio.TotalPortfolioValue - Engine.SetupHandler.StartingPortfolioValue) / Engine.SetupHandler.StartingPortfolioValue),\r\n                                _algorithm.Portfolio.TotalSaleVolume, \r\n                                _lastOrderId, 0)", span="388-397"];
m26_125 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=_chartLock, span="407-407"];
m26_122 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=Exception, span="399-399"];
m26_124 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="_nextStatisticsUpdate = DateTime.Now.AddMinutes(1)", span="403-403"];
m26_123 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Log.Error(''LiveTradingResultHandler.Update(): Error sending statistics: '' + err.Message)", span="401-401"];
m26_126 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label=Charts, span="409-409"];
m26_127 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="chart.Value.Series", span="411-411"];
m26_129 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="_nextUpdate = DateTime.Now.AddSeconds(2)", span="425-425"];
m26_128 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="series.Value.Values =\r\n                                    (from v in series.Value.Values\r\n                                     where v.x > Time.DateTimeToUnixTimeStamp(DateTime.UtcNow.AddDays(-2))\r\n                                     select v).ToList()", span="414-417"];
m26_131 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Log.Error(''LiveTradingResultHandler().Update(): '' + err.Message, true)", span="431-431"];
m26_132 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="266-266"];
m26_374 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="891-891"];
m26_375 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveConsoleResultHandler.OrderEvent(): id:'' + newEvent.OrderId + '' >> Status:'' + newEvent.Status + '' >> Fill Price: '' + newEvent.FillPrice.ToString(''C'') + '' >> Fill Quantity: '' + newEvent.FillQuantity)", span="894-894"];
m26_376 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderJsonConverterTests.cs", label="Messages.Enqueue(new OrderEventPacket(_deployId, newEvent))", span="895-895"];
m26_377 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderJsonConverterTests.cs", label="LogMessage(''New Order Event: Id:'' + newEvent.OrderId + '' Symbol:'' + newEvent.Symbol + '' Quantity:'' + newEvent.FillQuantity + '' Status:'' + newEvent.Status)", span="898-898"];
m26_378 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="891-891"];
m26_244 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="130-130"];
m26_289 [cluster="System.Console.SetError(System.IO.TextWriter)", file="OrderJsonConverterTests.cs", label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0"];
m26_169 [cluster="Unk.Any", file="OrderJsonConverterTests.cs", label="Entry Unk.Any", span=""];
m26_321 [cluster="Unk.Join", file="OrderJsonConverterTests.cs", label="Entry Unk.Join", span=""];
m26_243 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m26_366 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="952-952"];
m26_413 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="OrderJsonConverterTests.cs", label="return string.Format(''live/{0}/{1}/{2}-{3}_{4}.json'', _job.UserId, _job.ProjectId, _job.DeployId, DateTime.UtcNow.ToString(dateFormat), suffix);", span="954-954"];
m26_414 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="952-952"];
m26_415 [cluster="string.Format(string, params object[])", file="OrderJsonConverterTests.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m26_363 [cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", span="30-30"];
m26_195 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m26_226 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="544-544"];
m26_227 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="OrderJsonConverterTests.cs", label="var packet = new SecurityTypesPacket { Types = types }", span="546-546"];
m26_228 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="OrderJsonConverterTests.cs", label="Messages.Enqueue(packet)", span="547-547"];
m26_229 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="544-544"];
m26_403 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="61-61"];
m26_295 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, QuantConnect.AlgorithmStatus, string)", span="71-71"];
m26_4 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="OrderJsonConverterTests.cs", label="_charts = new ConcurrentDictionary<string, Chart>()", span="160-160"];
m26_5 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="OrderJsonConverterTests.cs", label="_messages = new ConcurrentQueue<Packet>()", span="161-161"];
m26_6 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="OrderJsonConverterTests.cs", label="_isActive = true", span="162-162"];
m26_7 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="OrderJsonConverterTests.cs", label="_runtimeStatistics = new Dictionary<string, string>()", span="163-163"];
m26_273 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m26_362 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="920-920"];
m26_387 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="var unixDateStart = Time.DateTimeToUnixTimeStamp(start)", span="922-922"];
m26_388 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="var unixDateStop = Time.DateTimeToUnixTimeStamp(stop)", span="923-923"];
m26_390 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="result.Charts.Values", span="929-929"];
m26_397 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="result.Charts = charts", span="940-940"];
m26_398 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="result.Orders = result.Orders.Values.Where(x => x.Time >= start && x.Time <= stop).ToDictionary(x => x.Id)", span="941-941"];
m26_399 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="result.Orders", span="946-946"];
m26_395 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="newSeries.Values.AddRange(series.Values.Where(chartPoint => chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop))", span="936-936"];
m26_389 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="var charts = new Dictionary<string, Chart>()", span="928-928"];
m26_392 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="charts.Add(newChart.Name, newChart)", span="932-932"];
m26_391 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="var newChart = new Chart(chart.Name, chart.ChartType)", span="931-931"];
m26_393 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="chart.Series.Values", span="933-933"];
m26_396 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="newChart.AddSeries(newSeries)", span="937-937"];
m26_394 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="var newSeries = new Series(series.Name, series.SeriesType)", span="935-935"];
m26_400 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="948-948"];
m26_401 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="920-920"];
m26_14 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.ComputeNextValue(TFirst)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Indicators.SequentialIndicator<TFirst>.ComputeNextValue(TFirst)", span="76-76"];
m26_141 [cluster="Unk.Where", file="OrderJsonConverterTests.cs", label="Entry Unk.Where", span=""];
m26_365 [cluster="QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", span="119-119"];
m26_17 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.Reset()", color=green, community=0, file="OrderJsonConverterTests.cs", label="1: First.Reset()", span="94-94"];
m26_274 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="678-678"];
m26_275 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="_algorithm = algorithm", span="680-680"];
m26_281 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="var debug = new FuncTextWriter(algorithm.Debug)", span="690-690"];
m26_282 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="var error = new FuncTextWriter(algorithm.Error)", span="691-691"];
m26_276 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="var types = new List<SecurityType>()", span="682-682"];
m26_277 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="_algorithm.Securities.Values", span="683-683"];
m26_278 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="!types.Contains(security.Type)", span="685-685"];
m26_279 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="types.Add(security.Type)", span="685-685"];
m26_280 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="SecurityType(types)", span="687-687"];
m26_283 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="Console.SetOut(debug)", span="692-692"];
m26_284 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="Console.SetError(error)", span="693-693"];
m26_285 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="678-678"];
m26_475 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="1012-1012"];
m26_160 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="285-285"];
m26_163 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="285-285"];
m26_167 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="_firstHoldingsPacket || deltaOrders.Any(o => o.Value.Symbol == x.Symbol)", span="317-317"];
m26_166 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="317-317"];
m26_173 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="318-318"];
m26_161 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="t.Key", span="285-285"];
m26_162 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="285-285"];
m26_164 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="t.Value", span="285-285"];
m26_165 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="285-285"];
m26_171 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="o.Value.Symbol == x.Symbol", span="317-317"];
m26_168 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="317-317"];
m26_170 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="317-317"];
m26_172 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="317-317"];
m26_174 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="x.Symbol", span="318-318"];
m26_175 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="318-318"];
m26_197 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="456-456"];
m26_198 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="x.Values.Count", span="456-456"];
m26_199 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="456-456"];
m26_323 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="775-775"];
m26_324 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="x.Message", span="775-775"];
m26_325 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="775-775"];
m26_371 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="797-801"];
m26_372 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="new\r\n            {\r\n                Key = (string)null,\r\n                Serialized = (string)null\r\n            }", span="797-801"];
m26_373 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="797-801"];
m26_408 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="x.Time >= start && x.Time <= stop", span="941-941"];
m26_405 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop", span="936-936"];
m26_404 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="936-936"];
m26_407 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="941-941"];
m26_410 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="941-941"];
m26_406 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="936-936"];
m26_409 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="941-941"];
m26_411 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="x.Id", span="941-941"];
m26_412 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="941-941"];
m26_469 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="1004-1004"];
m26_472 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="1008-1008"];
m26_470 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="DebugMessage(x)", span="1004-1004"];
m26_471 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="1004-1004"];
m26_473 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="ErrorMessage(x)", span="1008-1008"];
m26_474 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="1008-1008"];
m26_476 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="LogMessage(x)", span="1012-1012"];
m26_477 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="1012-1012"];
m26_11 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.ComputeNextValue(TFirst)", file="OrderJsonConverterTests.cs", label="return 0m;", span="82-82"];
m26_0 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.SequentialIndicator(string, QuantConnect.Indicators.IndicatorBase<TFirst>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Indicators.SequentialIndicator<TFirst>.SequentialIndicator(string, QuantConnect.Indicators.IndicatorBase<TFirst>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="52-52"];
m26_1 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.SequentialIndicator(string, QuantConnect.Indicators.IndicatorBase<TFirst>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="OrderJsonConverterTests.cs", label="First = first", span="55-55"];
m26_2 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.SequentialIndicator(string, QuantConnect.Indicators.IndicatorBase<TFirst>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="OrderJsonConverterTests.cs", label="Second = second", span="56-56"];
m26_3 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.SequentialIndicator(string, QuantConnect.Indicators.IndicatorBase<TFirst>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Indicators.SequentialIndicator<TFirst>.SequentialIndicator(string, QuantConnect.Indicators.IndicatorBase<TFirst>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="52-52"];
m26_8 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.ComputeNextValue(TFirst)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Indicators.SequentialIndicator<TFirst>.ComputeNextValue(TFirst)", span="76-76"];
m26_9 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.ComputeNextValue(TFirst)", color=green, community=0, file="OrderJsonConverterTests.cs", label="0: First.Update(input)", span="78-78"];
m26_10 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.ComputeNextValue(TFirst)", color=green, community=0, file="OrderJsonConverterTests.cs", label="0: !First.IsReady", span="79-79"];
m26_12 [cluster="QuantConnect.Indicators.SequentialIndicator<TFirst>.ComputeNextValue(TFirst)", file="OrderJsonConverterTests.cs", label="Second.Update(First.Current)", span="85-85"];
m26_156 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="74-74"];
m26_235 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="571-571"];
m26_236 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="OrderJsonConverterTests.cs", label=_chartLock, span="573-573"];
m26_237 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="OrderJsonConverterTests.cs", label="!Charts.ContainsKey(chartName)", span="576-576"];
m26_238 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="OrderJsonConverterTests.cs", label="Charts.AddOrUpdate(chartName, new Chart(chartName, chartType))", span="578-578"];
m26_239 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="OrderJsonConverterTests.cs", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="582-582"];
m26_240 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="OrderJsonConverterTests.cs", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType))", span="584-584"];
m26_241 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="OrderJsonConverterTests.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="588-588"];
m26_242 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, QuantConnect.ChartType, string, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="571-571"];
m26_368 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="306-306"];
m26_369 [cluster="System.Uri.EscapeUriString(string)", file="OrderJsonConverterTests.cs", label="Entry System.Uri.EscapeUriString(string)", span="0-0"];
m26_419 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="971-971"];
m26_420 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="var time = DateTime.Now", span="973-973"];
m26_421 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="time > _nextSample || forceProcess", span="975-975"];
m26_422 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_nextSample = time.Add(ResamplePeriod)", span="978-978"];
m26_429 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="SampleAssetPrices(subscription.Symbol, time, price)", span="992-992"];
m26_431 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="997-997"];
m26_433 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.DebugMessages.ForEach(x => DebugMessage(x))", span="1004-1004"];
m26_423 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Engine.DataFeed != null", span="981-981"];
m26_424 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="var i = 0", span="983-983"];
m26_425 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="i < Engine.DataFeed.Subscriptions.Count", span="983-983"];
m26_426 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="var price = Engine.DataFeed.RealtimePrices[i]", span="985-985"];
m26_427 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="var subscription = Engine.DataFeed.Subscriptions[i]", span="986-986"];
m26_430 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="i++", span="983-983"];
m26_428 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.Portfolio[subscription.Symbol].UpdateMarketPrice(price)", span="989-989"];
m26_432 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="SampleRange(_algorithm.GetChartUpdates(true))", span="1000-1000"];
m26_434 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.DebugMessages.Clear()", span="1005-1005"];
m26_435 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.ErrorMessages.ForEach(x => ErrorMessage(x))", span="1008-1008"];
m26_436 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.ErrorMessages.Clear()", span="1009-1009"];
m26_437 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.LogMessages.ForEach(x => LogMessage(x))", span="1012-1012"];
m26_438 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.LogMessages.Clear()", span="1013-1013"];
m26_439 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.RuntimeStatistics", span="1016-1016"];
m26_440 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="RuntimeStatistic(pair.Key, pair.Value)", span="1018-1018"];
m26_441 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="var start = DateTime.Now", span="1022-1022"];
m26_442 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.Notify.Messages.Count > 0 && DateTime.Now < start.AddSeconds(1)", span="1023-1023"];
m26_443 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Notification message", span="1025-1025"];
m26_444 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="_algorithm.Notify.Messages.TryDequeue(out message)", span="1026-1026"];
m26_445 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.ProcessSynchronousEvents(): Processing Notification...'')", span="1029-1029"];
m26_446 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="message.GetType().Name", span="1031-1031"];
m26_448 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Engine.Notify.Email(message as NotificationEmail)", span="1034-1034"];
m26_450 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Engine.Notify.Sms(message as NotificationSms)", span="1038-1038"];
m26_452 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Engine.Notify.Web(message as NotificationWeb)", span="1042-1042"];
m26_453 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="message.Send()", span="1049-1049"];
m26_447 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="''NotificationEmail''", span="1033-1033"];
m26_449 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="''NotificationSms''", span="1037-1037"];
m26_451 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="''NotificationWeb''", span="1041-1041"];
m26_454 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label=Exception, span="1051-1051"];
m26_455 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Log.Error(''LiveTradingResultHandler.ProcessSynchronousEvents(): Custom send notification: '' + err.Message)", span="1053-1053"];
m26_456 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="ErrorMessage(''Custom send notification: '' + err.Message, err.StackTrace)", span="1054-1054"];
m26_457 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="971-971"];
m26_21 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Messages.TryDequeue(out packet)", span="189-189"];
m26_205 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="72-72"];
m26_144 [cluster="Unk.Add", file="OrderJsonConverterTests.cs", label="Entry Unk.Add", span=""];
m26_155 [cluster="Unk.StoreLog", file="OrderJsonConverterTests.cs", label="Entry Unk.StoreLog", span=""];
m26_214 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="60-60"];
m26_467 [cluster="QuantConnect.Interfaces.IMessagingHandler.Web(QuantConnect.Notifications.NotificationWeb)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Web(QuantConnect.Notifications.NotificationWeb)", span="116-116"];
m26_13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m26_361 [cluster="System.Linq.Enumerable.Range(int, int)", file="OrderJsonConverterTests.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m26_379 [cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", span="62-62"];
m26_16 [cluster="System.TimeSpan.FromSeconds(double)", file="OrderJsonConverterTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m26_18 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=green, community=0, file="OrderJsonConverterTests.cs", label="1: Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="180-180"];
m26_19 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=green, community=0, file="OrderJsonConverterTests.cs", label="1: !(_exitTriggered && Messages.Count == 0)", span="183-183"];
m26_20 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Packet packet", span="188-188"];
m26_263 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="646-646"];
m26_264 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label=_chartLock, span="648-648"];
m26_265 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label=updates, span="650-650"];
m26_266 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label="!Charts.ContainsKey(update.Name)", span="653-653"];
m26_267 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name, update.ChartType))", span="655-655"];
m26_268 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label="update.Series.Values", span="659-659"];
m26_269 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="662-662"];
m26_270 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType))", span="664-664"];
m26_271 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="668-668"];
m26_272 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="646-646"];
m26_465 [cluster="QuantConnect.Interfaces.IMessagingHandler.Email(QuantConnect.Notifications.NotificationEmail)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Email(QuantConnect.Notifications.NotificationEmail)", span="104-104"];
m26_234 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", span="67-67"];
m26_62 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m26_192 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="50-50"];
m26_157 [cluster="System.DateTime.AddDays(double)", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m26_134 [cluster="Unk.ToDictionary", file="OrderJsonConverterTests.cs", label="Entry Unk.ToDictionary", span=""];
m26_320 [cluster="Unk.Select", file="OrderJsonConverterTests.cs", label="Entry Unk.Select", span=""];
m26_149 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="122-122"];
m26_463 [cluster="System.Collections.Generic.List<T>.Clear()", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m26_59 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="77-77"];
m26_138 [cluster="QuantConnect.Chart.GetUpdates()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="78-78"];
m26_248 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="598-598"];
m26_249 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="value > 0", span="600-600"];
m26_250 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Log.Debug(''LiveTradingResultHandler.SampleEquity(): '' + time.ToShortTimeString() + '' >'' + value)", span="602-602"];
m26_251 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Sample(''Strategy Equity'', ChartType.Stacked, ''Equity'', SeriesType.Candle, time, value)", span="603-603"];
m26_252 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="598-598"];
m26_290 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="703-703"];
m26_291 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.SendStatusUpdate(): '' + status)", span="705-705"];
m26_292 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="OrderJsonConverterTests.cs", label="var packet = new AlgorithmStatusPacket(algorithmId, status, message)", span="706-706"];
m26_293 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="OrderJsonConverterTests.cs", label="Messages.Enqueue(packet)", span="707-707"];
m26_294 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="703-703"];
m26_137 [cluster="Unk.Max", file="OrderJsonConverterTests.cs", label="Entry Unk.Max", span=""];
m26_208 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="509-509"];
m26_209 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="OrderJsonConverterTests.cs", label="Messages.Count > 500", span="512-512"];
m26_211 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="OrderJsonConverterTests.cs", label="Messages.Enqueue(new LogPacket(_deployId, message))", span="513-513"];
m26_212 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="OrderJsonConverterTests.cs", label="AddToLogStore(message)", span="514-514"];
m26_210 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="OrderJsonConverterTests.cs", label="return;", span="512-512"];
m26_213 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="509-509"];
m26_288 [cluster="System.Console.SetOut(System.IO.TextWriter)", file="OrderJsonConverterTests.cs", label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0"];
m26_142 [cluster="Unk.OrderBy", file="OrderJsonConverterTests.cs", label="Entry Unk.OrderBy", span=""];
m26_319 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="770-770"];
m26_313 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="770-770"];
m26_314 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="OrderJsonConverterTests.cs", label="var joined = string.Join(''\r\n'', logs.Select(x=>x.Message))", span="775-775"];
m26_315 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="OrderJsonConverterTests.cs", label="var key = ''live/'' + _job.UserId + ''/'' + _job.ProjectId + ''/'' + _job.DeployId + ''-'' + DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'') + ''-log.txt''", span="776-776"];
m26_316 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="OrderJsonConverterTests.cs", label="Engine.Api.Store(joined, key, StoragePermissions.Authenticated)", span="777-777"];
m26_317 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="OrderJsonConverterTests.cs", label=Exception, span="779-779"];
m26_318 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="OrderJsonConverterTests.cs", label="Log.Error(''LiveTradingResultHandler.StoreLog(): '' + err.Message)", span="781-781"];
m26_61 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="47-47"];
m26_286 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m26_15 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m26_216 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="OrderJsonConverterTests.cs", label="_logStore.Add(new LogEntry(DateTime.Now.ToString(DateFormat.UI) + '' '' + message))", span="525-525"];
m26_207 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="521-521"];
m26_215 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="OrderJsonConverterTests.cs", label=_logStoreLock, span="523-523"];
m26_217 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="521-521"];
m26_460 [cluster="System.Math.Round(decimal, int)", file="OrderJsonConverterTests.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m26_147 [cluster="System.DateTime.AddMinutes(double)", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m26_218 [cluster="QuantConnect.Logging.LogEntry.LogEntry(string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Logging.LogEntry.LogEntry(string)", span="50-50"];
m26_402 [cluster="Unk.AddRange", file="OrderJsonConverterTests.cs", label="Entry Unk.AddRange", span=""];
m26_148 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m26_150 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="193-193"];
m26_145 [cluster="decimal.ToString(string)", file="OrderJsonConverterTests.cs", label="Entry decimal.ToString(string)", span="0-0"];
m26_386 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="84-84"];
m26_466 [cluster="QuantConnect.Interfaces.IMessagingHandler.Sms(QuantConnect.Notifications.NotificationSms)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Sms(QuantConnect.Notifications.NotificationSms)", span="110-110"];
m26_260 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(string, out QuantConnect.Securities.Security)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(string, out QuantConnect.Securities.Security)", span="215-215"];
m26_245 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m26_65 [cluster="QuantConnect.Interfaces.IMessagingHandler.AlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.AlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="85-85"];
m26_367 [cluster="Unk.SerializeObject", file="OrderJsonConverterTests.cs", label="Entry Unk.SerializeObject", span=""];
m26_231 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="555-555"];
m26_232 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="OrderJsonConverterTests.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_deployId, message, stacktrace))", span="557-557"];
m26_233 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="555-555"];
m26_68 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m26_370 [cluster="Unk.Store", file="OrderJsonConverterTests.cs", label="Entry Unk.Store", span=""];
m26_364 [cluster="System.TimeSpan.FromMinutes(double)", file="OrderJsonConverterTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m26_458 [cluster="System.DateTime.Add(System.TimeSpan)", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m26_153 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="277-277"];
m26_220 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="534-534"];
m26_221 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="OrderJsonConverterTests.cs", label="Messages.Count > 500", span="536-536"];
m26_223 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="OrderJsonConverterTests.cs", label="Messages.Enqueue(new HandledErrorPacket(_deployId, message, stacktrace))", span="537-537"];
m26_222 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="OrderJsonConverterTests.cs", label="return;", span="536-536"];
m26_224 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="534-534"];
m26_459 [cluster="QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", span="375-375"];
m26_312 [cluster="QuantConnect.Interfaces.IMessagingHandler.LiveTradingResult(QuantConnect.Packets.LiveResultPacket)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.LiveTradingResult(QuantConnect.Packets.LiveResultPacket)", span="98-98"];
m26_143 [cluster="Holding.cstr", file="OrderJsonConverterTests.cs", label="Entry Holding.cstr", span=""];
m26_191 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m26_296 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="716-716"];
m26_297 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="OrderJsonConverterTests.cs", label=_runtimeLock, span="718-718"];
m26_298 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="OrderJsonConverterTests.cs", label="!_runtimeStatistics.ContainsKey(key)", span="720-720"];
m26_299 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="OrderJsonConverterTests.cs", label="_runtimeStatistics.Add(key, value)", span="722-722"];
m26_300 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="OrderJsonConverterTests.cs", label="_runtimeStatistics[key] = value", span="724-724"];
m26_301 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="716-716"];
m26_58 [cluster="QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.DebugMessage(string, int, string, string)", span="56-56"];
m26_302 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="737-737"];
m26_303 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="var charts = new Dictionary<string, Chart>(Charts)", span="742-742"];
m26_304 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="var result = new LiveResultPacket((LiveNodePacket)job, new LiveResult(charts, orders, profitLoss, holdings, statistics, runtime))", span="745-745"];
m26_305 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="result.ProcessingTime = (DateTime.Now - _startTime).TotalSeconds", span="748-748"];
m26_306 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="StoreResult(result, false)", span="751-751"];
m26_307 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="result.Results = new LiveResult()", span="754-754"];
m26_308 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Engine.Notify.LiveTradingResult(result)", span="757-757"];
m26_309 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label=Exception, span="759-759"];
m26_310 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Log.Error(''Algorithm.Worker.SendResult(): '' + err.Message)", span="761-761"];
m26_311 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="737-737"];
m26_57 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="124-124"];
m26_67 [cluster="System.Threading.Thread.Sleep(int)", file="OrderJsonConverterTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m26_230 [cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="65-65"];
m26_64 [cluster="QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SecurityTypes(QuantConnect.Packets.SecurityTypesPacket)", span="62-62"];
m26_159 [cluster="System.DateTime.AddSeconds(double)", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m26_194 [cluster="QuantConnect.Packets.LiveResult.LiveResult()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.LiveResult.LiveResult()", span="187-187"];
m26_462 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
m26_60 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="497-497"];
m26_200 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="OrderJsonConverterTests.cs", label="Messages.Count > 500", span="499-499"];
m26_202 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="OrderJsonConverterTests.cs", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="500-500"];
m26_203 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="OrderJsonConverterTests.cs", label="AddToLogStore(message)", span="501-501"];
m26_201 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="OrderJsonConverterTests.cs", label="return;", span="499-499"];
m26_204 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="497-497"];
m26_206 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m26_158 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="90-90"];
m26_133 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="328-328"];
m26_53 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.Run(): Ending Thread...'')", span="258-258"];
m26_22 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="QuantConnect.Indicators.SequentialIndicator<TFirst>", span=""];
m26_48 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Update()", span="243-243"];
m26_24 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="var debug = packet as DebugPacket", span="195-195"];
m26_28 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="var runtimeError = packet as RuntimeErrorPacket", span="201-201"];
m26_31 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="var orderEvent = packet as OrderEventPacket", span="207-207"];
m26_35 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="var log = packet as LogPacket", span="216-216"];
m26_39 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="var securityPacket = packet as SecurityTypesPacket", span="223-223"];
m26_43 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="var statusPacket = packet as AlgorithmStatusPacket", span="230-230"];
m26_46 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Engine.Notify.Send(packet)", span="236-236"];
m26_47 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Log.Debug(''LiveTradingResultHandler.Run(): Case Unhandled: '' + packet.Type)", span="237-237"];
m26_23 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="PacketType.Debug", span="194-194"];
m26_27 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="PacketType.RuntimeError", span="200-200"];
m26_30 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="PacketType.OrderEvent", span="206-206"];
m26_34 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="PacketType.Log", span="215-215"];
m26_38 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="PacketType.SecurityTypes", span="222-222"];
m26_42 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="PacketType.AlgorithmStatus", span="229-229"];
m26_25 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Log.Debug(''LiveTradingResultHandlerRun(): Debug Packet: '' + debug.Message)", span="196-196"];
m26_26 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Engine.Notify.DebugMessage(debug.Message, debug.ProjectId, _deployId, _compileId)", span="197-197"];
m26_29 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Engine.Notify.RuntimeError(_deployId, runtimeError.Message, runtimeError.StackTrace)", span="202-202"];
m26_32 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="DebugMessage(''New Order Event: OrderId:'' + orderEvent.Event.OrderId + '' Symbol:'' +\r\n                                                orderEvent.Event.Symbol + '' Quantity:'' + orderEvent.Event.FillQuantity +\r\n                                                '' Status:'' + orderEvent.Event.Status)", span="208-210"];
m26_33 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Engine.Notify.Send(orderEvent)", span="211-211"];
m26_36 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.Run(): Log Packet: '' + log.Message)", span="217-217"];
m26_37 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Engine.Notify.LogMessage(_deployId, log.Message)", span="218-218"];
m26_40 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.Run(): Security Types Packet: '' + securityPacket.TypesCSV)", span="224-224"];
m26_41 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Engine.Notify.SecurityTypes(securityPacket)", span="225-225"];
m26_44 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Log.Trace(''LiveTradingResultHandler.Run(): Algorithm Status Packet:'' + statusPacket.Status + '' '' + statusPacket.AlgorithmId)", span="231-231"];
m26_45 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Engine.Notify.AlgorithmStatus(statusPacket.AlgorithmId, statusPacket.Status, statusPacket.Message)", span="232-232"];
m26_49 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Messages.Count == 0", span="245-245"];
m26_50 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Thread.Sleep(10)", span="248-248"];
m26_51 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label=Exception, span="251-251"];
m26_52 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Log.Error(''LiveTradingResultHandler.Run(): '' + err.Message)", span="254-254"];
m26_54 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="_isActive = false", span="259-259"];
m26_55 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="180-180"];
m26_247 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="201-201"];
m26_140 [cluster="QuantConnect.OS.GetServerStatistics()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.OS.GetServerStatistics()", span="228-228"];
m26_261 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", span="634-634"];
m26_262 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", span="634-634"];
m26_63 [cluster="QuantConnect.Interfaces.IMessagingHandler.LogMessage(string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.LogMessage(string, string)", span="69-69"];
m26_136 [cluster="Unk.DefaultIfEmpty", file="OrderJsonConverterTests.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m26_478 [file="OrderJsonConverterTests.cs", label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", span=""];
m26_479 [file="OrderJsonConverterTests.cs", label=deltaOrders, span=""];
m26_480 [file="OrderJsonConverterTests.cs", label="QuantConnect.Securities.SecurityHolding", span=""];
m26_481 [file="OrderJsonConverterTests.cs", label=unixDateStart, span=""];
m26_482 [file="OrderJsonConverterTests.cs", label=unixDateStop, span=""];
m26_483 [file="OrderJsonConverterTests.cs", label="System.DateTime", span=""];
m26_484 [file="OrderJsonConverterTests.cs", label="System.DateTime", span=""];
m27_15 [cluster="QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.BaseData)", file="Program.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.BaseData)", span="24-24"];
m27_9 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="Program.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", span="84-84"];
m27_10 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="Program.cs", label="var handler = DataConsolidated", span="86-86"];
m27_12 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="Program.cs", label="handler(this, consolidated)", span="87-87"];
m27_13 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="Program.cs", label="Consolidated = consolidated", span="92-92"];
m27_11 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="Program.cs", label="handler != null", span="87-87"];
m27_14 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="Program.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", span="84-84"];
m27_0 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="Program.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", span="32-32"];
m27_1 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="Program.cs", label="var typedData = data as TInput", span="34-34"];
m27_2 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="Program.cs", label="typedData == null", span="35-35"];
m27_4 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="Program.cs", label="Update(typedData)", span="39-39"];
m27_3 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="Program.cs", label="throw new ArgumentNullException(''data'');", span="37-37"];
m27_5 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="Program.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", span="32-32"];
m27_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Program.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m27_7 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", file="Program.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", span="77-77"];
m27_8 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", file="Program.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", span="77-77"];
m27_16 [file="Program.cs", label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", span=""];
m28_11 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.CurrentPriceOptionPriceModel()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.CurrentPriceOptionPriceModel()", span="26-26"];
m28_15 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="80-80"];
m28_16 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="ExerciseSettlement = SettlementType.PhysicalDelivery", span="97-97"];
m28_21 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="_symbolProperties = symbolProperties", span="102-102"];
m28_17 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="SetDataNormalizationMode(DataNormalizationMode.Raw)", span="98-98"];
m28_18 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="OptionExerciseModel = new DefaultExerciseModel()", span="99-99"];
m28_19 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="PriceModel = new CurrentPriceOptionPriceModel()", span="100-100"];
m28_20 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="Holdings = new OptionHolding(this)", span="101-101"];
m28_22 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="SetFilter(-1, 1, TimeSpan.Zero, TimeSpan.FromDays(35))", span="103-103"];
m28_23 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="80-80"];
m28_56 [cluster="QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", span="33-33"];
m28_43 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="305-305"];
m28_54 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="QCAlgorithm.cs", label="ContractFilter = new FuncSecurityDerivativeFilter(universe =>\r\n            {\r\n                var optionUniverse = universe as OptionFilterUniverse;\r\n                var result = universeFunc(optionUniverse);\r\n                return result.ApplyOptionTypesFilter();\r\n            })", span="307-312"];
m28_55 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="305-305"];
m28_33 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", span="203-203"];
m28_34 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="QCAlgorithm.cs", label="return Math.Max(0.0m, GetPayOff(underlyingPrice));", span="205-205"];
m28_35 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", span="203-203"];
m28_40 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int)", span="275-275"];
m28_41 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="QCAlgorithm.cs", label="SetFilter(universe => universe.Strikes(minStrike, maxStrike))", span="277-277"];
m28_42 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(int, int)", span="275-275"];
m28_57 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="307-312"];
m28_45 [cluster="lambda expression", file="QCAlgorithm.cs", label="universe.Strikes(minStrike, maxStrike)", span="277-277"];
m28_44 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="277-277"];
m28_46 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="277-277"];
m28_51 [cluster="lambda expression", file="QCAlgorithm.cs", label="universe\r\n                                .Strikes(minStrike, maxStrike)\r\n                                .Expiration(minExpiry, maxExpiry)", span="296-298"];
m28_50 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="296-298"];
m28_52 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="296-298"];
m28_59 [cluster="lambda expression", file="QCAlgorithm.cs", label="var result = universeFunc(optionUniverse)", span="310-310"];
m28_58 [cluster="lambda expression", file="QCAlgorithm.cs", label="var optionUniverse = universe as OptionFilterUniverse", span="309-309"];
m28_60 [cluster="lambda expression", file="QCAlgorithm.cs", label="return result.ApplyOptionTypesFilter();", span="311-311"];
m28_61 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="307-312"];
m28_10 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.DefaultExerciseModel()", file="QCAlgorithm.cs", label="Entry QuantConnect.Orders.OptionExercise.DefaultExerciseModel.DefaultExerciseModel()", span="29-29"];
m28_63 [cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", span="119-119"];
m28_30 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195"];
m28_31 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="QCAlgorithm.cs", label="return GetIntrinsicValue(underlyingPrice) >= 0.01m;", span="197-197"];
m28_32 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195"];
m28_53 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271"];
m28_24 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", span="177-177"];
m28_25 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="QCAlgorithm.cs", label="return StrikePrice * ContractMultiplier;", span="179-179"];
m28_26 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", span="177-177"];
m28_68 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m28_47 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199"];
m28_27 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="187-187"];
m28_28 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="QCAlgorithm.cs", label="return quantity * ContractUnitOfTrade / ContractMultiplier;", span="189-189"];
m28_29 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="187-187"];
m28_13 [cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m28_14 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="294-294"];
m28_48 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="SetFilter(universe => universe\r\n                                .Strikes(minStrike, maxStrike)\r\n                                .Expiration(minExpiry, maxExpiry))", span="296-298"];
m28_49 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="294-294"];
m28_9 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="318-318"];
m28_64 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="QCAlgorithm.cs", label="mode != DataNormalizationMode.Raw", span="320-320"];
m28_66 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="QCAlgorithm.cs", label="base.SetDataNormalizationMode(mode)", span="325-325"];
m28_65 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="QCAlgorithm.cs", label="throw new ArgumentException(''DataNormalizationMode.Raw must be used with options'');", span="322-322"];
m28_67 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="318-318"];
m28_62 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m28_37 [cluster="System.Math.Max(decimal, decimal)", file="QCAlgorithm.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m28_0 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47"];
m28_1 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="ExerciseSettlement = SettlementType.PhysicalDelivery", span="64-64"];
m28_6 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="_symbolProperties = symbolProperties", span="69-69"];
m28_2 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="SetDataNormalizationMode(DataNormalizationMode.Raw)", span="65-65"];
m28_3 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="OptionExerciseModel = new DefaultExerciseModel()", span="66-66"];
m28_4 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="PriceModel = new CurrentPriceOptionPriceModel()", span="67-67"];
m28_5 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="Holdings = new OptionHolding(this)", span="68-68"];
m28_7 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="SetFilter(-1, 1, TimeSpan.Zero, TimeSpan.FromDays(35))", span="70-70"];
m28_8 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47"];
m28_36 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="212-212"];
m28_38 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="QCAlgorithm.cs", label="return Right == OptionRight.Call ? underlyingPrice - StrikePrice : StrikePrice - underlyingPrice;", span="214-214"];
m28_39 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="212-212"];
m28_12 [cluster="QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security)", span="29-29"];
m28_69 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="651-651"];
m28_70 [file="QCAlgorithm.cs", label="QuantConnect.Securities.Option.Option", span=""];
m28_71 [file="QCAlgorithm.cs", label=int, span=""];
m28_72 [file="QCAlgorithm.cs", label=int, span=""];
m28_73 [file="QCAlgorithm.cs", label=int, span=""];
m28_74 [file="QCAlgorithm.cs", label=int, span=""];
m28_75 [file="QCAlgorithm.cs", label="System.TimeSpan", span=""];
m28_76 [file="QCAlgorithm.cs", label="System.TimeSpan", span=""];
m28_77 [file="QCAlgorithm.cs", label="System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>", span=""];
m29_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
m29_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbols, Time - span, Time, resolution).Memoize();", span="171-171"];
m29_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
m29_258 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="139-139"];
m29_50 [cluster="Unk.Where", file="QCAlgorithm.History.cs", label="Entry Unk.Where", span=""];
m29_189 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", span="105-105"];
m29_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m29_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupBarCount = null", span="53-53"];
m29_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = timeSpan", span="54-54"];
m29_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m29_191 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="108-108"];
m29_264 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m29_194 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m29_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m29_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="SetWarmup(barCount)", span="88-88"];
m29_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m29_187 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="251-251"];
m29_33 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m29_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
m29_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="return History(new[] {request}).Memoize();", span="414-414"];
m29_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
m29_190 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m29_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1629-1629"];
m29_184 [cluster="QuantConnect.Symbol.IsCanonical()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164"];
m29_193 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="677-677"];
m29_266 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="591-591"];
m29_59 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="193-193"];
m29_60 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="194-194"];
m29_61 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="195-195"];
m29_54 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="187-196"];
m29_69 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="198-198"];
m29_55 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="189-189"];
m29_56 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="190-190"];
m29_57 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config == null", span="191-191"];
m29_58 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return null;", span="191-191"];
m29_62 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="187-196"];
m29_70 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x != null", span="198-198"];
m29_71 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="198-198"];
m29_80 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(security, config, start, end, resolution);", span="219-219"];
m29_75 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="213-220"];
m29_82 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="222-222"];
m29_76 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="215-215"];
m29_77 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="216-216"];
m29_78 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config == null", span="217-217"];
m29_79 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return null;", span="217-217"];
m29_81 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="213-220"];
m29_83 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x != null", span="222-222"];
m29_84 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="222-222"];
m29_116 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="280-280"];
m29_117 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="280-280"];
m29_118 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="280-280"];
m29_130 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="305-305"];
m29_131 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="305-305"];
m29_132 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="305-305"];
m29_227 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution)", span="534-534"];
m29_228 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="537-537"];
m29_229 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="fillForward.HasValue", span="538-538"];
m29_230 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.FillForwardResolution = fillForward.Value ? res : null", span="538-538"];
m29_231 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="extendedMarket.HasValue", span="539-539"];
m29_232 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="539-539"];
m29_220 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="527-527"];
m29_223 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="527-545"];
m29_221 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="527-527"];
m29_222 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="527-527"];
m29_224 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var requests = new List<HistoryRequest>()", span="529-529"];
m29_225 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="531-531"];
m29_233 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="requests.Add(request)", span="541-541"];
m29_234 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return requests;", span="544-544"];
m29_226 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="GetMatchingSubscriptions(security, typeof(BaseData))", span="532-532"];
m29_235 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="527-545"];
m29_245 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="556-556"];
m29_246 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="557-557"];
m29_248 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));", span="560-561"];
m29_251 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateHistoryRequest(security, config, start, end, resolution)", span="561-561"];
m29_240 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="553-553"];
m29_243 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="553-562"];
m29_241 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="553-553"];
m29_242 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="553-553"];
m29_244 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="555-555"];
m29_247 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var end = Time.RoundDown(res.Value.ToTimeSpan())", span="558-558"];
m29_249 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="553-562"];
m29_250 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="561-561"];
m29_252 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="561-561"];
m29_267 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="s.Resolution", span="591-591"];
m29_268 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="591-591"];
m29_51 [cluster="Unk.History", file="QCAlgorithm.History.cs", label="Entry Unk.History", span=""];
m29_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="582-582"];
m29_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, type).FirstOrDefault();", span="585-585"];
m29_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="582-582"];
m29_115 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m29_192 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="638-638"];
m29_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m29_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="399-399"];
m29_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="400-400"];
m29_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="403-403"];
m29_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="404-404"];
m29_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="402-402"];
m29_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m29_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
m29_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="273-273"];
m29_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="274-274"];
m29_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="281-281"];
m29_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="284-284"];
m29_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Memoize();", span="285-285"];
m29_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="273-273"];
m29_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="276-276"];
m29_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="277-277"];
m29_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="280-280"];
m29_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="278-278"];
m29_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
m29_185 [cluster="System.Math.Max(int, int)", file="QCAlgorithm.History.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m29_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m29_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="IsWarmingUp = false", span="96-96"];
m29_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m29_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m29_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = null", span="75-75"];
m29_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="_warmupBarCount = barCount", span="76-76"];
m29_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m29_98 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
m29_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
m29_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, periods, resolution).Memoize();", span="142-142"];
m29_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
m29_67 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m29_114 [cluster="ArgumentException.cstr", file="QCAlgorithm.History.cs", label="Entry ArgumentException.cstr", span=""];
m29_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="485-485"];
m29_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="487-487"];
m29_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="492-492"];
m29_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="493-493"];
m29_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="490-490"];
m29_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="485-485"];
m29_52 [cluster="Unk.>", file="QCAlgorithm.History.cs", label="Entry Unk.>", span=""];
m29_261 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m29_111 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.History.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m29_265 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QCAlgorithm.History.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m29_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m29_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="361-361"];
m29_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m29_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1604-1604"];
m29_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="588-588"];
m29_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                where type.IsAssignableFrom(sub.Type)\r\n                select sub;", span="591-593"];
m29_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="588-588"];
m29_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
m29_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="187-196"];
m29_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="198-198"];
m29_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
m29_129 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m29_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m29_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="129-129"];
m29_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m29_113 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.History.cs", label="Entry Unk.FirstOrDefault", span=""];
m29_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m29_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="249-249"];
m29_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="250-250"];
m29_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="252-252"];
m29_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Get(symbol).Memoize();", span="258-258"];
m29_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", color=red, community=0, file="QCAlgorithm.History.cs", label="1: securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="253-253"];
m29_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", color=red, community=0, file="QCAlgorithm.History.cs", label="1: Error(''Calling this method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="255-255"];
m29_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m29_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="320-320"];
m29_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="322-322"];
m29_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, span, resolution).Get(symbol).Memoize();", span="328-328"];
m29_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", color=red, community=0, file="QCAlgorithm.History.cs", label="1: securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="323-323"];
m29_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", color=red, community=0, file="QCAlgorithm.History.cs", label="1: Error(''Calling this method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="325-325"];
m29_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="320-320"];
m29_214 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m29_162 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="546-546"];
m29_28 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="QCAlgorithm.History.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m29_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
m29_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="341-341"];
m29_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, start, end, resolution).Get(symbol).Memoize();", span="347-347"];
m29_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", color=red, community=0, file="QCAlgorithm.History.cs", label="1: securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="342-342"];
m29_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", color=red, community=0, file="QCAlgorithm.History.cs", label="1: Error(''Calling this method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="344-344"];
m29_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
m29_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m29_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="156-156"];
m29_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m29_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m29_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="236-236"];
m29_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m29_195 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m29_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m29_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="391-391"];
m29_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m29_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="525-525"];
m29_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var requests = new List<HistoryRequest>();\r\n\r\n                var security = Securities[x];\r\n                foreach (var config in GetMatchingSubscriptions(security, typeof(BaseData)))\r\n                {\r\n                    var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                    // apply overrides\r\n                    Resolution? res = resolution ?? security.Resolution;\r\n                    if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                    if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n\r\n                    requests.Add(request);\r\n                }\r\n\r\n                return requests;\r\n            });", span="527-545"];
m29_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="525-525"];
m29_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
m29_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="_warmupBarCount.HasValue", span="105-105"];
m29_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return CreateBarCountHistoryRequests(Securities.Keys, _warmupBarCount.Value);", span="107-107"];
m29_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="_warmupTimeSpan.HasValue", span="109-109"];
m29_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="var end = UtcTime.ConvertFromUtc(TimeZone)", span="111-111"];
m29_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return Enumerable.Empty<HistoryRequest>();", span="116-116"];
m29_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return CreateDateRangeHistoryRequests(Securities.Keys, end - _warmupTimeSpan.Value, end);", span="112-112"];
m29_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
m29_216 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m29_65 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="577-577"];
m29_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="422-422"];
m29_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="return History(requests, TimeZone).Memoize();", span="424-424"];
m29_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="422-422"];
m29_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m29_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="375-375"];
m29_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="376-376"];
m29_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="375-375"];
m29_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m29_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="496-496"];
m29_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var sentMessage = false", span="498-498"];
m29_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var reqs = requests.ToList()", span="499-499"];
m29_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="return ((IAlgorithm) this).HistoryProvider.GetHistory(reqs, timeZone);", span="519-519"];
m29_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="!sentMessage", span="510-510"];
m29_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label=reqs, span="500-500"];
m29_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc > UtcTime", span="503-503"];
m29_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc = UtcTime", span="505-505"];
m29_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc > request.EndTimeUtc", span="506-506"];
m29_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc = request.EndTimeUtc", span="508-508"];
m29_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="sentMessage = true", span="512-512"];
m29_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Debug(''Request for future history modified to end now.'')", span="513-513"];
m29_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="496-496"];
m29_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
m29_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Symbol.IsCanonical()", span="435-435"];
m29_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="441-441"];
m29_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="443-443"];
m29_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var subscriptionDataConfig = GetMatchingSubscription(security, typeof(BaseData))", span="447-447"];
m29_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="456-469"];
m29_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="437-437"];
m29_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="444-444"];
m29_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="452-452"];
m29_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="453-453"];
m29_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="450-450"];
m29_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var history = History(new List<HistoryRequest> { request })", span="471-471"];
m29_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="history.Any() && history.First().Values.Any()", span="473-473"];
m29_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return history.First().Values.First();", span="475-475"];
m29_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="478-478"];
m29_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
m29_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="551-551"];
m29_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));\r\n            });", span="553-562"];
m29_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="551-551"];
m29_237 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m29_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m29_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="SetWarmup(timeSpan)", span="63-63"];
m29_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m29_53 [cluster="Unk.Memoize", file="QCAlgorithm.History.cs", label="Entry Unk.Memoize", span=""];
m29_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
m29_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="299-299"];
m29_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="306-306"];
m29_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="309-309"];
m29_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(request).Get<T>(symbol).Memoize();", span="310-310"];
m29_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="301-301"];
m29_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="302-302"];
m29_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="305-305"];
m29_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="303-303"];
m29_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
m29_219 [cluster="Unk.SelectMany", file="QCAlgorithm.History.cs", label="Entry Unk.SelectMany", span=""];
m29_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210"];
m29_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="213-220"];
m29_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="222-222"];
m29_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210"];
m29_188 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m29_161 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="390-390"];
m29_66 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="683-683"];
m29_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="565-565"];
m29_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution = resolution ?? security.Resolution", span="567-567"];
m29_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="570-570"];
m29_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null\r\n            }", span="572-577"];
m29_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return request;", span="579-579"];
m29_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="565-565"];
m29_49 [cluster="Unk.Select", file="QCAlgorithm.History.cs", label="Entry Unk.Select", span=""];
m29_196 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m29_112 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.History.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m29_26 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="565-565"];
m29_269 [file="QCAlgorithm.History.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m29_270 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m29_271 [file="QCAlgorithm.History.cs", label=int, span=""];
m29_272 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m29_273 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m29_274 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m29_275 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m29_276 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m29_277 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m29_278 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m29_279 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m29_280 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m29_281 [file="QCAlgorithm.History.cs", label=int, span=""];
m29_282 [file="QCAlgorithm.History.cs", label=security, span=""];
m29_283 [file="QCAlgorithm.History.cs", label=start, span=""];
m29_284 [file="QCAlgorithm.History.cs", label=end, span=""];
m30_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="367-367"];
m30_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="369-369"];
m30_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="!PyList.IsListType(pyObject)", span="372-372"];
m30_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="tmp.Append(pyObject)", span="375-375"];
m30_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label=pyObject, span="380-380"];
m30_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var tmp = new PyList()", span="374-374"];
m30_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var symbols = new List<Symbol>()", span="379-379"];
m30_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="pyObject = tmp", span="376-376"];
m30_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="symbols.Add(symbol)", span="389-389"];
m30_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="return symbols.Count == 0 ? null : symbols;", span="391-391"];
m30_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="382-382"];
m30_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="string.IsNullOrWhiteSpace(symbol.Value)", span="384-384"];
m30_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="367-367"];
m30_67 [cluster="Unk.Where", file="QCAlgorithm.Python.cs", label="Entry Unk.Where", span=""];
m30_185 [cluster="Unk.ModuleFromString", file="QCAlgorithm.Python.cs", label="Entry Unk.ModuleFromString", span=""];
m30_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="91-92"];
m30_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="82-82"];
m30_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="84-84"];
m30_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="87-87"];
m30_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="88-88"];
m30_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddToUserDefinedUniverse(security)", span="94-94"];
m30_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="82-82"];
m30_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", span="426-426"];
m30_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Python.cs", label="var testMod =\r\n               ''from clr import AddReference\n'' +\r\n               ''AddReference(\''System\'')\n'' +\r\n               ''AddReference(\''System.Collections\'')\n'' +\r\n               ''AddReference(\''QuantConnect.Common\'')\n'' +\r\n               ''from System import Func\n'' +\r\n               ''from System.Collections.Generic import IEnumerable\n'' +\r\n               ''from QuantConnect import Symbol\n'' +\r\n               ''from QuantConnect.Data.Fundamental import FineFundamental\n'' +\r\n               ''from QuantConnect.Data.UniverseSelection import CoarseFundamental\n'' +\r\n               ''def to_func(pyobject, type):\n'' +\r\n               ''    return Func[IEnumerable[type], IEnumerable[Symbol]](pyobject)''", span="428-439"];
m30_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Python.cs", label="return toFunc(pyObject, typeof(T))\r\n                    .AsManagedObject(typeof(Func<IEnumerable<T>, IEnumerable<Symbol>>));", span="444-445"];
m30_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="441-441"];
m30_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Python.cs", label="dynamic toFunc = PythonEngine.ModuleFromString(''x'', testMod).GetAttr(''to_func'')", span="443-443"];
m30_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", span="426-426"];
m30_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="166-166"];
m30_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="168-168"];
m30_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="166-166"];
m30_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1329-1329"];
m30_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="260-260"];
m30_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="262-262"];
m30_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="260-260"];
m30_173 [cluster="Unk.Split", file="QCAlgorithm.Python.cs", label="Entry Unk.Split", span=""];
m30_88 [cluster="Unk.PlotIndicator", file="QCAlgorithm.Python.cs", label="Entry Unk.PlotIndicator", span=""];
m30_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="276-276"];
m30_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="278-278"];
m30_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="276-276"];
m30_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="284-284"];
m30_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="286-286"];
m30_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="284-284"];
m30_161 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m30_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="321-321"];
m30_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="323-323"];
m30_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, periods, resolution));", span="326-326"];
m30_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="324-324"];
m30_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="324-324"];
m30_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="321-321"];
m30_68 [cluster="Unk.ToArray", file="QCAlgorithm.Python.cs", label="Entry Unk.ToArray", span=""];
m30_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="102-102"];
m30_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = ToFunc<CoarseFundamental>(pycoarse)", span="104-104"];
m30_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(coarse)", span="105-105"];
m30_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="102-102"];
m30_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="179-179"];
m30_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="181-181"];
m30_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="179-179"];
m30_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="262-262"];
m30_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="268-268"];
m30_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="270-270"];
m30_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="268-268"];
m30_119 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="310-310"];
m30_70 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="234-234"];
m30_71 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="234-234"];
m30_72 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="234-234"];
m30_76 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="248-248"];
m30_77 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="248-248"];
m30_78 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="248-248"];
m30_82 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="262-262"];
m30_83 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="262-262"];
m30_84 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="262-262"];
m30_89 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="270-270"];
m30_90 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="270-270"];
m30_91 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="270-270"];
m30_95 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="278-278"];
m30_96 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="278-278"];
m30_97 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="278-278"];
m30_101 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="286-286"];
m30_102 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="286-286"];
m30_103 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="286-286"];
m30_107 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="294-294"];
m30_108 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="294-294"];
m30_109 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="294-294"];
m30_113 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="302-302"];
m30_114 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="302-302"];
m30_115 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="302-302"];
m30_120 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="310-310"];
m30_121 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="310-310"];
m30_163 [cluster="string.IsNullOrWhiteSpace(string)", file="QCAlgorithm.Python.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m30_18 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m30_186 [cluster="Unk.GetAttr", file="QCAlgorithm.Python.cs", label="Entry Unk.GetAttr", span=""];
m30_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="218-218"];
m30_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="220-220"];
m30_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="218-218"];
m30_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="308-308"];
m30_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="310-310"];
m30_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="308-308"];
m30_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="114-114"];
m30_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = ToFunc<CoarseFundamental>(pycoarse)", span="116-116"];
m30_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var fine = ToFunc<FineFundamental>(pyfine)", span="117-117"];
m30_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(coarse, fine)", span="118-118"];
m30_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="114-114"];
m30_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="192-192"];
m30_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="194-194"];
m30_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="192-192"];
m30_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="128-128"];
m30_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution)", span="130-130"];
m30_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="128-128"];
m30_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="53-53"];
m30_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", color=red, community=0, file="QCAlgorithm.Python.cs", label="1: AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m)", span="55-55"];
m30_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="53-53"];
m30_172 [cluster="Unk.Repr", file="QCAlgorithm.Python.cs", label="Entry Unk.Repr", span=""];
m30_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1315-1315"];
m30_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m30_22 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="438-438"];
m30_187 [cluster="Unk.toFunc", file="QCAlgorithm.Python.cs", label="Entry Unk.toFunc", span=""];
m30_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m30_159 [cluster="PyList.cstr", file="QCAlgorithm.Python.cs", label="Entry PyList.cstr", span=""];
m30_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1301-1301"];
m30_171 [cluster="AssemblyName.cstr", file="QCAlgorithm.Python.cs", label="Entry AssemblyName.cstr", span=""];
m30_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="300-300"];
m30_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="302-302"];
m30_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="300-300"];
m30_179 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m30_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m30_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="292-292"];
m30_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="294-294"];
m30_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="292-292"];
m30_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="246-246"];
m30_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="248-248"];
m30_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="246-246"];
m30_175 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="QCAlgorithm.Python.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m30_177 [cluster="Unk.HasAttr", file="QCAlgorithm.Python.cs", label="Entry Unk.HasAttr", span=""];
m30_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="153-153"];
m30_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="155-155"];
m30_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="153-153"];
m30_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="205-205"];
m30_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="207-207"];
m30_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="205-205"];
m30_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="40-40"];
m30_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="_converter = new PandasConverter()", span="42-42"];
m30_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="40-40"];
m30_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="251-251"];
m30_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="140-140"];
m30_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="142-142"];
m30_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="140-140"];
m30_160 [cluster="Unk.Append", file="QCAlgorithm.Python.cs", label="Entry Unk.Append", span=""];
m30_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m30_178 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m30_157 [cluster="Unk.GIL", file="QCAlgorithm.Python.cs", label="Entry Unk.GIL", span=""];
m30_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m30_158 [cluster="Unk.IsListType", file="QCAlgorithm.Python.cs", label="Entry Unk.IsListType", span=""];
m30_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1343-1343"];
m30_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="400-400"];
m30_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="402-402"];
m30_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="404-404"];
m30_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="407-416"];
m30_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="405-405"];
m30_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="406-406"];
m30_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="400-400"];
m30_164 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m30_130 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m30_19 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="217-217"];
m30_21 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m30_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="68-68"];
m30_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage)", span="70-70"];
m30_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="68-68"];
m30_162 [cluster="Unk.AsManagedObject", file="QCAlgorithm.Python.cs", label="Entry Unk.AsManagedObject", span=""];
m30_69 [cluster="Unk.Plot", file="QCAlgorithm.Python.cs", label="Entry Unk.Plot", span=""];
m30_20 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m30_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="337-337"];
m30_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="339-339"];
m30_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, span, resolution));", span="342-342"];
m30_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="340-340"];
m30_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="340-340"];
m30_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="337-337"];
m30_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="353-353"];
m30_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="355-355"];
m30_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, start, end, resolution));", span="358-358"];
m30_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="356-356"];
m30_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="356-356"];
m30_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="353-353"];
m30_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="232-232"];
m30_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="234-234"];
m30_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="232-232"];
m30_176 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m30_174 [cluster="Unk.Replace", file="QCAlgorithm.Python.cs", label="Entry Unk.Replace", span=""];
m30_188 [file="QCAlgorithm.Python.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m31_281 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m31_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m31_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="412-412"];
m31_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice)", span="413-413"];
m31_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="414-414"];
m31_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="417-417"];
m31_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="420-420"];
m31_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="415-415"];
m31_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m31_73 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222"];
m31_202 [cluster="int.ToString()", file="QCAlgorithm.Trading.cs", label="Entry int.ToString()", span="0-0"];
m31_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m31_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return Order(strategy, Math.Abs(quantity) * -1);", span="533-533"];
m31_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m31_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
m31_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="87-87"];
m31_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
m31_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m31_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="850-850"];
m31_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m31_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m31_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="42-42"];
m31_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m31_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
m31_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var orders = new List<OrderTicket>()", span="549-549"];
m31_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="552-552"];
m31_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.OptionLegs != null", span="555-555"];
m31_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.OptionLegs", span="557-557"];
m31_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="559-562"];
m31_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="566-567"];
m31_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="576-576"];
m31_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="580-580"];
m31_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.UnderlyingLegs != null", span="590-590"];
m31_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.UnderlyingLegs", span="592-592"];
m31_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="!Securities.ContainsKey(strategy.Underlying)", span="594-594"];
m31_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="596-596"];
m31_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="603-603"];
m31_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="607-607"];
m31_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(marketOrder)", span="577-577"];
m31_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(limitOrder)", span="581-581"];
m31_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(marketOrder)", span="604-604"];
m31_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(limitOrder)", span="608-608"];
m31_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return orders;", span="615-615"];
m31_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="optionLeg.OrderType", span="573-573"];
m31_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="584-584"];
m31_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="optionSeq.Count() != 1", span="564-564"];
m31_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var option = optionSeq.First().Key", span="571-571"];
m31_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(error);", span="568-568"];
m31_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Market", span="575-575"];
m31_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Limit", span="579-579"];
m31_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="underlyingLeg.OrderType", span="600-600"];
m31_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="611-611"];
m31_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(error);", span="597-597"];
m31_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Market", span="602-602"];
m31_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Limit", span="606-606"];
m31_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
m31_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m31_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="399-399"];
m31_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m31_204 [cluster="Unk.Count", file="QCAlgorithm.Trading.cs", label="Entry Unk.Count", span=""];
m31_216 [cluster="string.Format(string, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object)", span="0-0"];
m31_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m31_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="930-930"];
m31_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="target == 0", span="937-937"];
m31_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var targetPortfolioValue = target * Portfolio.TotalPortfolioValue", span="940-940"];
m31_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="948-948"];
m31_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="952-952"];
m31_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var price = security.Price", span="931-931"];
m31_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return -security.Holdings.Quantity;", span="937-937"];
m31_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="941-941"];
m31_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity % security.SymbolProperties.LotSize != 0", span="964-964"];
m31_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity = orderQuantity - (orderQuantity % security.SymbolProperties.LotSize)", span="966-966"];
m31_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="984-984"];
m31_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderValue = order.GetValue(security)", span="985-985"];
m31_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="986-986"];
m31_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="990-990"];
m31_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity % security.SymbolProperties.LotSize != 0", span="997-997"];
m31_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity = orderQuantity - (orderQuantity % security.SymbolProperties.LotSize)", span="999-999"];
m31_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="price == 0", span="934-934"];
m31_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="934-934"];
m31_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="944-944"];
m31_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="945-945"];
m31_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal orderQuantity = targetOrderValue / unitPrice", span="962-962"];
m31_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity > 0 && (marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue)", span="994-994"];
m31_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="1003-1003"];
m31_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="unitPrice == 0", span="949-949"];
m31_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="feeToPriceRatio = (int)(orderFees / unitPrice)", span="987-987"];
m31_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="949-949"];
m31_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="marginRemaining <= 0", span="953-953"];
m31_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="953-953"];
m31_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal marginRequired", span="956-956"];
m31_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal orderValue", span="957-957"];
m31_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal orderFees", span="958-958"];
m31_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var feeToPriceRatio = 0", span="959-959"];
m31_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="feeToPriceRatio > 0", span="977-977"];
m31_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity -= feeToPriceRatio", span="978-978"];
m31_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity--", span="980-980"];
m31_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var iterations = 0", span="969-969"];
m31_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="iterations > 0", span="974-974"];
m31_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="iterations++", span="992-992"];
m31_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m31_66 [cluster="Unk.Any", file="QCAlgorithm.Trading.cs", label="Entry Unk.Any", span=""];
m31_209 [cluster="string.Format(string, params object[])", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m31_213 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m31_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m31_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="837-837"];
m31_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m31_277 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m31_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m31_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="294-294"];
m31_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m31_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m31_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="863-863"];
m31_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m31_3 [cluster="System.Math.Abs(int)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m31_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m31_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="306-306"];
m31_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m31_12 [cluster="System.Math.Abs(decimal)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m31_8 [cluster="System.Math.Abs(double)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m31_203 [cluster="Unk.Where", file="QCAlgorithm.Trading.cs", label="Entry Unk.Where", span=""];
m31_304 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m31_201 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m31_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
m31_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return GenerateOrders(strategy, quantity);", span="544-544"];
m31_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
m31_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m31_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="274-274"];
m31_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag)", span="275-275"];
m31_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="276-276"];
m31_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="279-279"];
m31_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="282-282"];
m31_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="277-277"];
m31_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m31_307 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="765-765"];
m31_74 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="206-206"];
m31_75 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Resolution != Resolution.Daily", span="206-206"];
m31_76 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="206-206"];
m31_218 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="559-562"];
m31_217 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="559-562"];
m31_219 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="559-562"];
m31_308 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Value", span="765-765"];
m31_309 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="765-765"];
m31_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m31_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Security security", span="879-879"];
m31_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!Securities.TryGetValue(symbol, out security)", span="880-880"];
m31_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="882-882"];
m31_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=liquidateExistingHoldings, span="887-887"];
m31_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="893-893"];
m31_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="896-896"];
m31_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="902-902"];
m31_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="MarketOrder(symbol, quantity, false, tag)", span="905-905"];
m31_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return;", span="883-883"];
m31_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=Portfolio, span="889-889"];
m31_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var holdingSymbol = kvp.Key", span="891-891"];
m31_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var holdings = kvp.Value", span="892-892"];
m31_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Math.Abs(quantity) > 0", span="903-903"];
m31_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m31_385 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m31_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m31_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="352-352"];
m31_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m31_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1041-1041"];
m31_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)quantity);", span="1043-1043"];
m31_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1041-1041"];
m31_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158"];
m31_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="160-160"];
m31_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158"];
m31_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m31_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="365-365"];
m31_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice)", span="366-366"];
m31_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="367-367"];
m31_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="370-370"];
m31_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="373-373"];
m31_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="368-368"];
m31_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m31_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m31_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="434-434"];
m31_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m31_279 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m31_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m31_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Security security", span="644-644"];
m31_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Securities.TryGetValue(request.Symbol, out security)", span="645-645"];
m31_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="647-647"];
m31_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity == 0 || request.Symbol == null || request.Symbol == QuantConnect.Symbol.Empty || Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="651-651"];
m31_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.ZeroQuantity(request);", span="653-653"];
m31_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="658-658"];
m31_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="664-664"];
m31_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="666-666"];
m31_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="670-670"];
m31_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="672-672"];
m31_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="677-677"];
m31_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="685-685"];
m31_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="689-689"];
m31_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="699-699"];
m31_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="703-703"];
m31_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="710-710"];
m31_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="717-717"];
m31_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.OptionExercise", span="720-720"];
m31_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="723-723"];
m31_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="726-726"];
m31_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity > security.Holdings.Quantity", span="728-728"];
m31_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="729-729"];
m31_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity <= 0.0m", span="731-731"];
m31_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="OrderResponse.ZeroQuantity(request)", span="732-732"];
m31_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.MarketOnClose", span="735-735"];
m31_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="745-745"];
m31_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Success(request);", span="750-750"];
m31_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.IsTradable", span="656-656"];
m31_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var price = security.Price", span="661-661"];
m31_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var quoteCurrency = security.QuoteCurrency.Symbol", span="682-682"];
m31_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.QuoteCurrency.ConversionRate == 0m", span="687-687"];
m31_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="0: security.Type == SecurityType.Forex", span="693-693"];
m31_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="0: var baseCurrency = ((Forex)security).BaseCurrencySymbol", span="696-696"];
m31_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.HasData", span="708-708"];
m31_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Type != SecurityType.Option", span="722-722"];
m31_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Holdings.IsShort", span="725-725"];
m31_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="737-737"];
m31_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="740-740"];
m31_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="price == 0", span="675-675"];
m31_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Cash quoteCash", span="681-681"];
m31_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="683-683"];
m31_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Cash baseCash", span="695-695"];
m31_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="697-697"];
m31_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="baseCash.ConversionRate == 0m", span="701-701"];
m31_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Transactions.OrdersCount > _maxOrders", span="714-714"];
m31_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Status = AlgorithmStatus.Stopped", span="716-716"];
m31_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="739-739"];
m31_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m31_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1051-1051"];
m31_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var exchangeHours = MarketHoursDatabase\r\n                .FromDataFolder()\r\n                .GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType)", span="1053-1055"];
m31_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var time = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="1057-1057"];
m31_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return exchangeHours.IsOpen(time, false);", span="1059-1059"];
m31_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1051-1051"];
m31_16 [cluster="System.Math.Abs(float)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(float)", span="0-0"];
m31_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1604-1604"];
m31_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m31_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)quantity);", span="129-129"];
m31_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m31_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m31_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity);", span="138-138"];
m31_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m31_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m31_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="250-250"];
m31_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m31_206 [cluster="System.Enum.ToString()", file="QCAlgorithm.Trading.cs", label="Entry System.Enum.ToString()", span="0-0"];
m31_215 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m31_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1017-1017"];
m31_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="1019-1019"];
m31_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1017-1017"];
m31_303 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m31_71 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="405-405"];
m31_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m31_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecksImpl(request)", span="627-627"];
m31_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="628-628"];
m31_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Error(response.ErrorMessage)", span="630-630"];
m31_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return response;", span="632-632"];
m31_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m31_214 [cluster="Unk.LimitOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.LimitOrder", span=""];
m31_402 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="565-565"];
m31_403 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
m31_406 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m31_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m31_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="98-98"];
m31_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m31_212 [cluster="Unk.MarketOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.MarketOrder", span=""];
m31_400 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m31_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1629-1629"];
m31_278 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m31_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m31_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="386-386"];
m31_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m31_205 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m31_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m31_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return Order(strategy, Math.Abs(quantity));", span="522-522"];
m31_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m31_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m31_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="186-186"];
m31_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m31_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1029-1029"];
m31_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="1031-1031"];
m31_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1029-1029"];
m31_276 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m31_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m31_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="262-262"];
m31_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m31_382 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m31_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m31_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="462-462"];
m31_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice)", span="463-463"];
m31_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="464-464"];
m31_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="467-467"];
m31_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="471-471"];
m31_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="465-465"];
m31_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m31_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m31_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="339-339"];
m31_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m31_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m31_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m31_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
m31_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m31_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", span="1062-1062"];
m31_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag);", span="1064-1064"];
m31_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", span="1062-1062"];
m31_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m31_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var option = (Option)Securities[optionSymbol]", span="483-483"];
m31_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag)", span="485-485"];
m31_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="504-504"];
m31_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="488-488"];
m31_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="490-490"];
m31_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="494-494"];
m31_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="497-497"];
m31_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.AddOrder(request)", span="501-501"];
m31_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="preOrderCheckResponse.IsError", span="495-495"];
m31_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="506-506"];
m31_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return ticket;", span="509-509"];
m31_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m31_69 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="414-414"];
m31_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m31_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="!_locked", span="822-822"];
m31_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="_maxOrders = max", span="824-824"];
m31_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m31_280 [cluster="System.DateTime.AddMinutes(double)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m31_211 [cluster="Unk.First", file="QCAlgorithm.Trading.cs", label="Entry Unk.First", span=""];
m31_305 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210"];
m31_381 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m31_208 [cluster="System.DateTime.ToString()", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m31_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m31_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, quantity);", span="147-147"];
m31_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m31_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m31_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="173-173"];
m31_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m31_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m31_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="318-318"];
m31_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag)", span="319-319"];
m31_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="320-320"];
m31_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="323-323"];
m31_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="326-326"];
m31_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="321-321"];
m31_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m31_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m31_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="917-917"];
m31_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m31_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m31_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="199-199"];
m31_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="205-205"];
m31_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag)", span="214-214"];
m31_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="233-233"];
m31_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!security.Exchange.ExchangeOpen", span="203-203"];
m31_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="206-206"];
m31_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="207-207"];
m31_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="209-209"];
m31_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return mooTicket;", span="211-211"];
m31_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="217-217"];
m31_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="219-219"];
m31_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="223-223"];
m31_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="226-226"];
m31_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.AddOrder(request)", span="230-230"];
m31_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="preOrderCheckResponse.IsError", span="224-224"];
m31_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="235-235"];
m31_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return ticket;", span="238-238"];
m31_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m31_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m31_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="75-75"];
m31_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m31_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m31_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1m);", span="109-109"];
m31_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m31_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m31_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="53-53"];
m31_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m31_383 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m31_210 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="QCAlgorithm.Trading.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m31_275 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m31_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m31_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var orderIdList = new List<int>()", span="762-762"];
m31_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="symbolToLiquidate = symbolToLiquidate ?? QuantConnect.Symbol.Empty", span="763-763"];
m31_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Transactions.CancelOrder(order.Id, tag)", span="797-797"];
m31_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="orderIdList.Add(ticket.OrderId)", span="808-808"];
m31_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="return orderIdList;", span="813-813"];
m31_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Securities.Keys.OrderBy(x => x.Value)", span="765-765"];
m31_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="symbol != symbolToLiquidate && symbolToLiquidate != QuantConnect.Symbol.Empty", span="768-768"];
m31_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var orders = Transactions.GetOpenOrders(symbol)", span="772-772"];
m31_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var quantity = Portfolio[symbol].Quantity", span="775-775"];
m31_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity)", span="805-805"];
m31_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="778-778"];
m31_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label=orders, span="783-783"];
m31_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="quantity != 0", span="802-802"];
m31_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var marketOrdersQuantity = 0m", span="782-782"];
m31_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="792-792"];
m31_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="order.Type == OrderType.Market", span="785-785"];
m31_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="788-788"];
m31_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="ticket != null", span="789-789"];
m31_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="ticket.Status == OrderStatus.Filled", span="806-806"];
m31_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m31_72 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m31_384 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m31_306 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164"];
m31_207 [cluster="decimal.ToString()", file="QCAlgorithm.Trading.cs", label="Entry decimal.ToString()", span="0-0"];
m31_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m31_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
m31_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m31_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m31_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="448-448"];
m31_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m31_407 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m31_408 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Securities.Option.OptionStrategy", span=""];
m31_409 [file="QCAlgorithm.Trading.cs", label=optionLeg, span=""];
m32_161 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="74-74"];
m32_11 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager()", file="QuoteBar.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager()", span="51-51"];
m32_79 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="QuoteBar.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m32_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="344-344"];
m32_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="344-344"];
m32_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", span="304-304"];
m32_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", span="304-304"];
m32_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="371-371"];
m32_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="371-371"];
m32_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="446-446"];
m32_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QuoteBar.cs", label="!_locked", span="448-448"];
m32_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QuoteBar.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="450-450"];
m32_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QuoteBar.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="454-454"];
m32_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="446-446"];
m32_158 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="38-38"];
m32_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="68-68"];
m32_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="SubscriptionManager = new SubscriptionManager()", span="75-75"];
m32_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="Securities = new SecurityManager()", span="77-77"];
m32_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="Transactions = new SecurityTransactionManager(Securities)", span="78-78"];
m32_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="Portfolio = new SecurityPortfolioManager(Securities, Transactions)", span="79-79"];
m32_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="Notify = new NotificationManager(false)", span="80-80"];
m32_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="_runMode = RunMode.Series", span="83-83"];
m32_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="_locked = false", span="86-86"];
m32_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="_startDate = new DateTime(1998, 01, 01)", span="89-89"];
m32_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="_endDate = DateTime.Now.AddDays(-1)", span="90-90"];
m32_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="68-68"];
m32_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="393-393"];
m32_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QuoteBar.cs", label="mode != RunMode.Parallel", span="395-395"];
m32_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QuoteBar.cs", label="return;", span="395-395"];
m32_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QuoteBar.cs", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="396-396"];
m32_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QuoteBar.cs", label="mode = RunMode.Series", span="397-397"];
m32_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="393-393"];
m32_163 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="222-222"];
m32_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetQuit()", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetQuit()", span="870-870"];
m32_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetQuit()", file="QuoteBar.cs", label="return _quit;", span="872-872"];
m32_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetQuit()", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetQuit()", span="870-870"];
m32_21 [cluster="System.NotImplementedException.NotImplementedException(string)", file="QuoteBar.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m32_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="609-609"];
m32_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QuoteBar.cs", label="return _locked;", span="611-611"];
m32_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="609-609"];
m32_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="820-820"];
m32_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QuoteBar.cs", label="message == '''' || _previousErrorMessage == message", span="822-822"];
m32_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QuoteBar.cs", label="_errorMessages.Add(message)", span="823-823"];
m32_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QuoteBar.cs", label="_previousErrorMessage = message", span="824-824"];
m32_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QuoteBar.cs", label="return;", span="822-822"];
m32_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="820-820"];
m32_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="664-664"];
m32_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label=_locked, span="668-668"];
m32_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="symbol = symbol.ToUpper()", span="673-673"];
m32_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="leverage <= 0", span="675-675"];
m32_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label=securityType, span="677-677"];
m32_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="var config = SubscriptionManager.Add(securityType, symbol, resolution, fillDataForward, extendedMarketHours)", span="689-689"];
m32_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="security = new Equity(config, leverage, false)", span="695-695"];
m32_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="security = new Forex(Portfolio.CashBook[quoteCurrency], config, leverage, false)", span="713-713"];
m32_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="security = new Security(config, leverage, false)", span="718-718"];
m32_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="throw new Exception(''Algorithm.AddSecurity(): Cannot add another security after algorithm running.'');", span="670-670"];
m32_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(symbol, out baseCurrency, out quoteCurrency)", span="701-701"];
m32_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="SecurityType.Equity", span="679-679"];
m32_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="SecurityType.Forex", span="682-682"];
m32_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="leverage = 2", span="680-680"];
m32_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="leverage = 50", span="683-683"];
m32_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="Security security", span="691-691"];
m32_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="config.SecurityType", span="692-692"];
m32_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="Securities.Add(config.Symbol, security)", span="723-723"];
m32_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="SecurityType.Equity", span="694-694"];
m32_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="SecurityType.Forex", span="698-698"];
m32_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="SecurityType.Base", span="717-717"];
m32_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="string baseCurrency, quoteCurrency", span="700-700"];
m32_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="!Portfolio.CashBook.ContainsKey(baseCurrency)", span="703-703"];
m32_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="Portfolio.CashBook.Add(baseCurrency, 0, 0)", span="706-706"];
m32_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="!Portfolio.CashBook.ContainsKey(quoteCurrency)", span="708-708"];
m32_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="Portfolio.CashBook.Add(quoteCurrency, 0, 0)", span="711-711"];
m32_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label=Exception, span="725-725"];
m32_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="Error(''Algorithm.AddSecurity(): '' + err.Message)", span="727-727"];
m32_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="664-664"];
m32_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="516-516"];
m32_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QuoteBar.cs", label="_algorithmId = algorithmId", span="518-518"];
m32_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="516-516"];
m32_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="738-738"];
m32_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QuoteBar.cs", label=_locked, span="740-740"];
m32_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QuoteBar.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m, isTradeBar: false, hasVolume: false)", span="746-746"];
m32_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QuoteBar.cs", label="return;", span="740-740"];
m32_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="738-738"];
m32_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", span="775-775"];
m32_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="QuoteBar.cs", label=_locked, span="777-777"];
m32_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="QuoteBar.cs", label="symbol = symbol.ToUpper()", span="779-779"];
m32_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="QuoteBar.cs", label="var config = SubscriptionManager.Add(typeof(T), SecurityType.Base, symbol, resolution, fillDataForward, extendedMarketHours: true, isTradeBar: isTradeBar, hasVolume: hasVolume)", span="782-782"];
m32_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="QuoteBar.cs", label="var security = new Security(config, leverage,  true)", span="785-785"];
m32_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="QuoteBar.cs", label="return;", span="777-777"];
m32_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="QuoteBar.cs", label="Securities.Add(symbol, security)", span="786-786"];
m32_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", span="775-775"];
m32_107 [cluster="System.DateTime.AddTicks(long)", file="QuoteBar.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m32_159 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="102-102"];
m32_162 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="44-44"];
m32_62 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="449-449"];
m32_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="353-353"];
m32_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="353-353"];
m32_56 [cluster="System.Exception.Exception(string)", file="QuoteBar.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m32_16 [cluster="System.DateTime.DateTime(int, int, int)", file="QuoteBar.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m32_164 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", span="82-82"];
m32_96 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QuoteBar.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="277-277"];
m32_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="858-858"];
m32_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QuoteBar.cs", label="_quit = quit", span="860-860"];
m32_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="858-858"];
m32_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="469-469"];
m32_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QuoteBar.cs", label="var start = new DateTime(year, month, day)", span="473-473"];
m32_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QuoteBar.cs", label="start = start.Date", span="476-476"];
m32_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QuoteBar.cs", label="SetStartDate(start)", span="478-478"];
m32_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QuoteBar.cs", label=Exception, span="480-480"];
m32_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QuoteBar.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="482-482"];
m32_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="469-469"];
m32_12 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager()", file="QuoteBar.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager()", span="61-61"];
m32_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", span="757-757"];
m32_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label=_locked, span="759-759"];
m32_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m, isTradeBar: isTradeBar, hasVolume: hasVolume)", span="761-761"];
m32_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label="return;", span="759-759"];
m32_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", span="757-757"];
m32_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="795-795"];
m32_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QuoteBar.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="797-797"];
m32_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QuoteBar.cs", label="_debugMessages.Add(message)", span="798-798"];
m32_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QuoteBar.cs", label="_previousDebugMessage = message", span="799-799"];
m32_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QuoteBar.cs", label="return;", span="797-797"];
m32_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="795-795"];
m32_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="381-381"];
m32_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QuoteBar.cs", label="_time = frontier", span="383-383"];
m32_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="381-381"];
m32_156 [cluster="string.ToUpper()", file="QuoteBar.cs", label="Entry string.ToUpper()", span="0-0"];
m32_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="407-407"];
m32_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QuoteBar.cs", label="SetCash((decimal)startingCash)", span="409-409"];
m32_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="407-407"];
m32_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", span="633-633"];
m32_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", file="QuoteBar.cs", label="!_locked", span="635-635"];
m32_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", file="QuoteBar.cs", label="Securities.SetLimits(minuteLimit, secondLimit, tickLimit)", span="637-637"];
m32_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", span="633-633"];
m32_160 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="175-175"];
m32_123 [cluster="QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", span="317-317"];
m32_95 [cluster="System.TimeSpan.FromDays(double)", file="QuoteBar.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m32_14 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="61-61"];
m32_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="808-808"];
m32_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QuoteBar.cs", label="message == ''''", span="810-810"];
m32_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QuoteBar.cs", label="_logMessages.Add(message)", span="811-811"];
m32_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QuoteBar.cs", label="return;", span="810-810"];
m32_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="808-808"];
m32_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="361-361"];
m32_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="361-361"];
m32_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="494-494"];
m32_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QuoteBar.cs", label="var end = new DateTime(year, month, day)", span="498-498"];
m32_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QuoteBar.cs", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="501-501"];
m32_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QuoteBar.cs", label="SetEndDate(end)", span="503-503"];
m32_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QuoteBar.cs", label=Exception, span="505-505"];
m32_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QuoteBar.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="507-507"];
m32_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="494-494"];
m32_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="617-617"];
m32_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QuoteBar.cs", label="!_locked", span="619-619"];
m32_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QuoteBar.cs", label="_liveMode = live", span="621-621"];
m32_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QuoteBar.cs", label="Notify = new NotificationManager(live)", span="622-622"];
m32_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="617-617"];
m32_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="527-527"];
m32_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="start < (new DateTime(1900, 01, 01))", span="531-531"];
m32_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="start > _endDate", span="539-539"];
m32_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="546-546"];
m32_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="533-533"];
m32_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="_endDate != new DateTime()", span="537-537"];
m32_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="throw new Exception(''Please select start date less than end date.'');", span="541-541"];
m32_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="!_locked", span="549-549"];
m32_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="_startDate = start", span="551-551"];
m32_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="555-555"];
m32_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="527-527"];
m32_78 [cluster="System.TimeSpan.FromTicks(long)", file="QuoteBar.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m32_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="418-418"];
m32_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QuoteBar.cs", label="SetCash((decimal)startingCash)", span="420-420"];
m32_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="418-418"];
m32_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="565-565"];
m32_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="569-569"];
m32_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="end < _startDate", span="577-577"];
m32_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="584-584"];
m32_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="571-571"];
m32_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="_startDate != new DateTime()", span="575-575"];
m32_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="579-579"];
m32_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="!_locked", span="587-587"];
m32_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="_endDate = end", span="589-589"];
m32_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="593-593"];
m32_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="565-565"];
m32_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="292-292"];
m32_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QuoteBar.cs", label="throw new NotImplementedException(''Please override the Intitialize() method'');", span="295-295"];
m32_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="292-292"];
m32_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="833-833"];
m32_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QuoteBar.cs", label="var message = error.Message", span="835-835"];
m32_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QuoteBar.cs", label="message == '''' || _previousErrorMessage == message", span="836-836"];
m32_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QuoteBar.cs", label="_errorMessages.Add(message)", span="837-837"];
m32_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QuoteBar.cs", label="_previousErrorMessage = message", span="838-838"];
m32_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QuoteBar.cs", label="return;", span="836-836"];
m32_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="833-833"];
m32_55 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="438-438"];
m32_190 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QuoteBar.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m32_13 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QuoteBar.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="58-58"];
m32_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnTick(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>>)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnTick(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>>)", span="316-316"];
m32_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnTick(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>>)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnTick(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>>)", span="316-316"];
m32_184 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool)", span="106-106"];
m32_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="428-428"];
m32_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QuoteBar.cs", label="!_locked", span="430-430"];
m32_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QuoteBar.cs", label="Portfolio.SetCash(startingCash)", span="432-432"];
m32_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QuoteBar.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="436-436"];
m32_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="428-428"];
m32_15 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="QuoteBar.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="56-56"];
m32_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="649-649"];
m32_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label="AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours)", span="651-651"];
m32_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="649-649"];
m32_157 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QuoteBar.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="82-82"];
m32_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="845-845"];
m32_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QuoteBar.cs", label="Debug(''Quit(): '' + message)", span="847-847"];
m32_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QuoteBar.cs", label="_quit = true", span="848-848"];
m32_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="845-845"];
m32_94 [cluster="System.DateTime.DateTime()", file="QuoteBar.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m32_17 [cluster="System.DateTime.AddDays(double)", file="QuoteBar.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m32_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QuoteBar.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="601-601"];
m32_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QuoteBar.cs", label="_locked = true", span="603-603"];
m32_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QuoteBar.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="601-601"];
m32_218 [file="QuoteBar.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m33_44 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="675-675"];
m33_45 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="675-675"];
m33_46 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="675-675"];
m33_5 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, double)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, double)", span="126-126"];
m33_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="684-684"];
m33_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="686-686"];
m33_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="687-687"];
m33_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="688-688"];
m33_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="684-684"];
m33_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m33_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=1, file="RegressionTests.cs", label="0: var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m33_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m33_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546"];
m33_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-675"];
m33_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m33_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569"];
m33_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m33_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m33_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m33_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m33_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m33_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m33_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m33_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m33_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m33_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m33_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m33_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m33_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m33_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m33_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''127''},\r\n                {''Average Win'', ''3.65%''},\r\n                {''Average Loss'', ''-2.38%''},\r\n                {''Compounding Annual Return'', ''2.295%''},\r\n                {''Drawdown'', ''31.900%''},\r\n                {''Expectancy'', ''0.209''},\r\n                {''Net Profit'', ''28.377%''},\r\n                {''Sharpe Ratio'', ''0.226''},\r\n                {''Loss Rate'', ''52%''},\r\n                {''Win Rate'', ''48%''},\r\n                {''Profit-Loss Ratio'', ''1.54''},\r\n                {''Alpha'', ''-0.006''},\r\n                {''Beta'', ''0.394''},\r\n                {''Annual Standard Deviation'', ''0.108''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''-0.392''},\r\n                {''Tracking Error'', ''0.135''},\r\n                {''Treynor Ratio'', ''0.062''},\r\n                {''Total Fees'', ''$604.31''},\r\n            }", span="364-385"];
m33_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m33_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m33_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m33_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592"];
m33_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''1.29%''},\r\n                {''Average Loss'', ''0.0%''},\r\n                {''Compounding Annual Return'', ''920.568%''},\r\n                {''Drawdown'', ''3.300%''},\r\n                {''Expectancy'', ''-0.333''},\r\n                {''Net Profit'', ''2.578%''},\r\n                {''Sharpe Ratio'', ''3.031''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.001''},\r\n                {''Beta'', ''0.995''},\r\n                {''Annual Standard Deviation'', ''0.451''},\r\n                {''Annual Variance'', ''0.203''},\r\n                {''Information Ratio'', ''-3.42''},\r\n                {''Tracking Error'', ''0.002''},\r\n                {''Treynor Ratio'', ''1.374''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="594-615"];
m33_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m33_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m33_40 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m33_47 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m33_48 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m33_0 [cluster="QuantConnect.Tests.Indicators.MoneyFlowIndexTests.ComparesAgainstExternalData()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Indicators.MoneyFlowIndexTests.ComparesAgainstExternalData()", span="22-22"];
m33_1 [cluster="QuantConnect.Tests.Indicators.MoneyFlowIndexTests.ComparesAgainstExternalData()", file="RegressionTests.cs", label="var mfi = new MoneyFlowIndex(20)", span="23-23"];
m33_2 [cluster="QuantConnect.Tests.Indicators.MoneyFlowIndexTests.ComparesAgainstExternalData()", file="RegressionTests.cs", label="TestHelper.TestIndicator(mfi, ''spy_with_cci.txt'', ''Money Flow Index 20'')", span="24-24"];
m33_3 [cluster="QuantConnect.Tests.Indicators.MoneyFlowIndexTests.ComparesAgainstExternalData()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Indicators.MoneyFlowIndexTests.ComparesAgainstExternalData()", span="22-22"];
m33_42 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m33_43 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m33_4 [cluster="QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(int)", file="RegressionTests.cs", label="Entry QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(int)", span="56-56"];
m33_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m33_53 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m34_21 [cluster="QuantConnect.Data.Market.Ticks.ContainsKey(string)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Data.Market.Ticks.ContainsKey(string)", span="181-181"];
m34_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="723-723"];
m34_0 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", span="32-32"];
m34_1 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", file="SecurityIdentifier.cs", label="SetCash(25000)", span="34-34"];
m34_2 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", file="SecurityIdentifier.cs", label="SetStartDate(2014, 6, 1)", span="35-35"];
m34_3 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", file="SecurityIdentifier.cs", label="SetEndDate(2014, 7, 1)", span="36-36"];
m34_4 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", file="SecurityIdentifier.cs", label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Tick)", span="37-37"];
m34_5 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", file="SecurityIdentifier.cs", label="Securities[''SPY''].DataFilter = new ExchangeDataFilter(this)", span="40-40"];
m34_6 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", file="SecurityIdentifier.cs", label="Exit QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.Initialize()", span="32-32"];
m34_11 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.ExchangeDataFilter(QuantConnect.Interfaces.IAlgorithm)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.Examples.ExchangeDataFilter.ExchangeDataFilter(QuantConnect.Interfaces.IAlgorithm)", span="73-73"];
m34_24 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.ExchangeDataFilter(QuantConnect.Interfaces.IAlgorithm)", file="SecurityIdentifier.cs", label="_algo = algo", span="75-75"];
m34_25 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.ExchangeDataFilter(QuantConnect.Interfaces.IAlgorithm)", file="SecurityIdentifier.cs", label="Exit QuantConnect.Algorithm.Examples.ExchangeDataFilter.ExchangeDataFilter(QuantConnect.Interfaces.IAlgorithm)", span="73-73"];
m34_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="470-470"];
m34_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="612-612"];
m34_26 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="127-127"];
m34_27 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SecurityIdentifier.cs", label="var tick = data as Tick", span="131-131"];
m34_28 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SecurityIdentifier.cs", label="tick != null", span="134-134"];
m34_29 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SecurityIdentifier.cs", label="tick.Exchange == ''P''", span="136-136"];
m34_31 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SecurityIdentifier.cs", label="return false;", span="143-143"];
m34_30 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SecurityIdentifier.cs", label="return true;", span="138-138"];
m34_32 [cluster="QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SecurityIdentifier.cs", label="Exit QuantConnect.Algorithm.Examples.ExchangeDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="127-127"];
m34_12 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", span="47-47"];
m34_13 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label="!data.ContainsKey(''SPY'')", span="49-49"];
m34_15 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label="var spyTickList = data[''SPY'']", span="50-50"];
m34_14 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label="return;", span="49-49"];
m34_16 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label=spyTickList, span="53-53"];
m34_17 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label="Log(tick.Exchange)", span="55-55"];
m34_18 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label="!Portfolio.Invested", span="58-58"];
m34_19 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label="SetHoldings(''SPY'', 1)", span="60-60"];
m34_20 [cluster="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", file="SecurityIdentifier.cs", label="Exit QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm.OnData(QuantConnect.Data.Market.Ticks)", span="47-47"];
m34_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="445-445"];
m34_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", span="423-423"];
m34_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SecurityIdentifier.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="412-412"];
m34_33 [file="SecurityIdentifier.cs", label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", span=""];
m34_34 [file="SecurityIdentifier.cs", label="QuantConnect.Algorithm.Examples.ExchangeDataFilter", span=""];
m35_55 [cluster="QuantConnect.Data.Market.TradeBar.ParseCfd<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseCfd<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="353-353"];
m35_126 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="var tradeBar = new T\r\n            {\r\n                Period = config.Increment,\r\n                Symbol = config.Symbol\r\n            }", span="421-425"];
m35_114 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="var csv = line.ToCsv(6)", span="389-389"];
m35_124 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="380-380"];
m35_19 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Add(pair.Key, pair.Value)", span="93-93"];
m35_5 [cluster="System.TimeSpan.FromMinutes(double)", file="SecurityManager.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m35_6 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="132-132"];
m35_7 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="DataType = MarketDataType.TradeBar", span="134-134"];
m35_8 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Time = new DateTime(original.Time.Ticks)", span="135-135"];
m35_9 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Symbol = original.Symbol", span="136-136"];
m35_53 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", file="SecurityManager.cs", label="return _securityManager.GetEnumerator();", span="220-220"];
m35_73 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="securityPortfolioManager.CashBook.Add(quoteCurrency, 0, 0)", span="351-351"];
m35_74 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", color=green, community=0, file="SecurityManager.cs", label="0: symbol.ID.SecurityType == SecurityType.Forex", span="353-353"];
m35_75 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="string baseCurrency", span="356-356"];
m35_76 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Forex.Forex.DecomposeCurrencyPair(symbol.Value, out baseCurrency, out quoteCurrency)", span="357-357"];
m35_77 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="!securityPortfolioManager.CashBook.ContainsKey(baseCurrency)", span="359-359"];
m35_78 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="securityPortfolioManager.CashBook.Add(baseCurrency, 0, 0)", span="362-362"];
m35_79 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="!securityPortfolioManager.CashBook.ContainsKey(quoteCurrency)", span="364-364"];
m35_80 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="securityPortfolioManager.CashBook.Add(quoteCurrency, 0, 0)", span="367-367"];
m35_81 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var quoteCash = securityPortfolioManager.CashBook[symbolProperties.QuoteCurrency]", span="371-371"];
m35_82 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Security security", span="373-373"];
m35_83 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="configList.Symbol.ID.SecurityType", span="374-374"];
m35_84 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SecurityType.Equity", span="376-376"];
m35_33 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m35_34 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="((IDictionary<Symbol, Security>)_securityManager).CopyTo(array, number)", span="135-135"];
m35_36 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="SecurityManager.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m35_38 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="return Remove(pair.Key);", span="164-164"];
m35_40 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m35_42 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="_securityManager.TryRemove(symbol, out security)", span="175-175"];
m35_44 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="return true;", span="178-178"];
m35_46 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m35_48 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m35_50 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m35_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m35_35 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m35_37 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="162-162"];
m35_39 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="162-162"];
m35_41 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="Security security", span="174-174"];
m35_43 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, security))", span="177-177"];
m35_45 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="return false;", span="180-180"];
m35_47 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m35_49 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="return _securityManager.TryGetValue(symbol, out security);", span="201-201"];
m35_52 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", span="218-218"];
m35_127 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="var csv = line.ToCsv(6)", span="427-427"];
m35_108 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="return security;", span="430-430"];
m35_109 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="308-308"];
m35_58 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m35_10 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Value = original.Close", span="137-137"];
m35_152 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="502-502"];
m35_54 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="304-304"];
m35_88 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SymbolCache.Set(symbol.Underlying.Value, symbol.Underlying)", span="381-381"];
m35_14 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Close = original.Close", span="141-141"];
m35_59 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="SecurityManager.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m35_60 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="229-229"];
m35_61 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="config.SecurityType", span="231-231"];
m35_62 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="SecurityType.Equity", span="233-233"];
m35_110 [cluster="QuantConnect.Data.Market.TradeBar.ParseCfd(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="return ParseCfd<TradeBar>(config, line, date);", span="369-369"];
m35_32 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m35_18 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="132-132"];
m35_20 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m35_130 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="tradeBar.Time = date.Date.AddMilliseconds(csv[0].ToInt32()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="436-436"];
m35_57 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="return _securityManager.GetEnumerator();", span="230-230"];
m35_140 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="501-501"];
m35_141 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var defaultQuoteCurrency = CashBook.AccountCurrency", span="503-503"];
m35_72 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="!securityPortfolioManager.CashBook.ContainsKey(quoteCurrency)", span="348-348"];
m35_111 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SecurityManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m35_85 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Equity.Equity(symbol, exchangeHours, quoteCash, symbolProperties)", span="377-377"];
m35_71 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var quoteCurrency = symbolProperties.QuoteCurrency", span="347-347"];
m35_106 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="isLiveMode && security.Type == SecurityType.Equity", span="425-425"];
m35_107 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security.PriceVariationModel = new EquityPriceVariationModel()", span="427-427"];
m35_136 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="return tradeBar;", span="445-445"];
m35_161 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="283-283"];
m35_15 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Volume = original.Volume", span="142-142"];
m35_16 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Period = original.Period", span="143-143"];
m35_17 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="_initialized = 1", span="144-144"];
m35_63 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="return ParseEquity(config, line, baseDate);", span="234-234"];
m35_163 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="SecurityManager.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57"];
m35_122 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="tradeBar.Volume = csv[5].ToDecimal()", span="405-405"];
m35_135 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="tradeBar.Volume = csv[5].ToDecimal()", span="443-443"];
m35_137 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="418-418"];
m35_151 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.Initialize(decimal)", span="530-530"];
m35_56 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m35_138 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="484-484"];
m35_139 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol, symbol.ID.SecurityType)", span="500-500"];
m35_119 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="tradeBar.High = config.GetNormalizedPrice(csv[2].ToDecimal() * _scaleFactor)", span="402-402"];
m35_132 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="tradeBar.High = config.GetNormalizedPrice(csv[2].ToDecimal())", span="440-440"];
m35_133 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="tradeBar.Low = config.GetNormalizedPrice(csv[3].ToDecimal())", span="441-441"];
m35_134 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="tradeBar.Close = config.GetNormalizedPrice(csv[4].ToDecimal())", span="442-442"];
m35_115 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="390-390"];
m35_146 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="lastTrade < Low", span="487-487"];
m35_145 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="High = lastTrade", span="486-486"];
m35_142 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="483-483"];
m35_143 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="Initialize(lastTrade)", span="485-485"];
m35_144 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="lastTrade > High", span="486-486"];
m35_147 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="Low = lastTrade", span="487-487"];
m35_125 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="418-418"];
m35_131 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="SecurityManager.cs", label="tradeBar.Open = config.GetNormalizedPrice(csv[1].ToDecimal())", span="439-439"];
m35_70 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="configList.AddRange(from subscriptionDataType \r\n                                in subscriptionDataTypes\r\n                                let dataType = subscriptionDataType.Item1\r\n                                let tickType = subscriptionDataType.Item2\r\n                                select subscriptionManager.Add(dataType, tickType, \r\n                                                               symbol, resolution, dataTimeZone, \r\n                                                               exchangeHours.TimeZone, isCustomData, \r\n                                                               fillDataForward, extendedMarketHours, \r\n                                                               isInternalFeed, isFilteredSubscription))", span="336-344"];
m35_93 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Future.Future(symbol, exchangeHours, securityPortfolioManager.CashBook[CashBook.AccountCurrency], symbolProperties)", span="388-388"];
m35_94 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SecurityType.Forex", span="391-391"];
m35_29 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityManager.cs", label="Period = period ?? TimeSpan.FromMinutes(1)", span="168-168"];
m35_30 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityManager.cs", label="DataType = MarketDataType.TradeBar", span="169-169"];
m35_31 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityManager.cs", label="_initialized = 1", span="170-170"];
m35_28 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityManager.cs", label="Volume = volume", span="167-167"];
m35_148 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="Volume += volume", span="489-489"];
m35_24 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityManager.cs", label="Open = open", span="163-163"];
m35_21 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Clear()", span="100-100"];
m35_22 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="_securityManager.Clear()", span="102-102"];
m35_23 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Clear()", span="100-100"];
m35_25 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="111-111"];
m35_26 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="return _securityManager.Contains(pair);", span="113-113"];
m35_27 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="111-111"];
m35_112 [cluster="Unk.nameof", file="SecurityManager.cs", label="Entry Unk.nameof", span=""];
m35_113 [cluster="QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", file="SecurityManager.cs", label="Entry QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", span="36-36"];
m35_116 [cluster="Unk.AddRange", file="SecurityManager.cs", label="Entry Unk.AddRange", span=""];
m35_117 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="224-224"];
m35_118 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m35_120 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m35_121 [cluster="QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityManager.cs", label="Entry QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="56-56"];
m35_123 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43"];
m35_65 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="!subscriptionDataTypes.Any()", span="326-326"];
m35_67 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label=addToSymbolCache, span="332-332"];
m35_64 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="308-308"];
m35_66 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="throw new ArgumentNullException(nameof(subscriptionDataTypes), ''At least one type needed to create security'');", span="328-328"];
m35_68 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SymbolCache.Set(symbol.Value, symbol)", span="332-332"];
m35_69 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var configList = new SubscriptionDataConfigList(symbol)", span="335-335"];
m35_173 [cluster="System.Threading.Interlocked.CompareExchange(ref int, int, int)", file="SecurityManager.cs", label="Entry System.Threading.Interlocked.CompareExchange(ref int, int, int)", span="0-0"];
m35_128 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", span="699-699"];
m35_129 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m35_168 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="SecurityManager.cs", label="Interlocked.CompareExchange(ref _initialized, 1, 0) == 0", span="532-532"];
m35_169 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="SecurityManager.cs", label="_open = value", span="534-534"];
m35_170 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="SecurityManager.cs", label="_low = value", span="535-535"];
m35_171 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="SecurityManager.cs", label="_high = value", span="536-536"];
m35_172 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.Initialize(decimal)", span="530-530"];
m35_150 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="483-483"];
m35_4 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m35_12 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="High = original.High", span="139-139"];
m35_149 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="SecurityManager.cs", label="Close = lastTrade", span="491-491"];
m35_162 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SecurityManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="364-364"];
m35_0 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m35_1 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="_timeKeeper = timeKeeper", span="57-57"];
m35_2 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="_securityManager = new ConcurrentDictionary<Symbol, Security>()", span="58-58"];
m35_3 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m35_13 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="SecurityManager.cs", label="Low = original.Low", span="140-140"];
m35_11 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="SecurityManager.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m35_95 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Forex.Forex(symbol, exchangeHours, quoteCash, symbolProperties)", span="392-392"];
m35_96 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SecurityType.Cfd", span="395-395"];
m35_97 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Cfd.Cfd(symbol, exchangeHours, quoteCash, symbolProperties)", span="396-396"];
m35_98 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", color=green, community=0, file="SecurityManager.cs", label="0: SecurityType.Base", span="400-400"];
m35_99 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", color=green, community=0, file="SecurityManager.cs", label="0: security = new Security(symbol, exchangeHours, quoteCash, symbolProperties)", span="401-401"];
m35_100 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="!configList.IsInternalFeed", span="407-407"];
m35_101 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security.IsTradable = true", span="409-409"];
m35_102 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security.AddData(configList)", span="412-412"];
m35_103 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="securityInitializer.Initialize(security, true)", span="415-415"];
m35_104 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="leverage > 0", span="419-419"];
m35_105 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security.SetLeverage(leverage)", span="421-421"];
m35_90 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Option.Option(symbol, exchangeHours, securityPortfolioManager.CashBook[CashBook.AccountCurrency], new Option.OptionSymbolProperties(symbolProperties))", span="383-383"];
m35_167 [cluster="object.MemberwiseClone()", file="SecurityManager.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m35_89 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="configList.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="382-382"];
m35_92 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="configList.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="387-387"];
m35_87 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label=addToSymbolCache, span="381-381"];
m35_86 [cluster="string.ToCsv(int)", file="SecurityManager.cs", label="Entry string.ToCsv(int)", span="329-329"];
m35_91 [cluster="string.ToDecimal()", file="SecurityManager.cs", label="Entry string.ToDecimal()", span="248-248"];
m35_160 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="SecurityManager.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="44-44"];
m35_157 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SecurityManager.cs", label="source += ''#'' + LeanData.GenerateZipEntryName(config.Symbol, date, config.Resolution, config.TickType)", span="513-513"];
m35_153 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=red, community=0, file="SecurityManager.cs", label="0: QuantConnect.Securities.SecurityManager", span=""];
m35_155 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SecurityManager.cs", label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="509-509"];
m35_156 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SecurityManager.cs", label="config.SecurityType == SecurityType.Option ||\r\n                config.SecurityType == SecurityType.Future", span="510-511"];
m35_154 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SecurityManager.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="506-506"];
m35_158 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SecurityManager.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.Csv);", span="515-515"];
m35_159 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="502-502"];
m35_164 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="SecurityManager.cs", label="Entry QuantConnect.Data.Market.TradeBar.Clone()", span="521-521"];
m35_165 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="SecurityManager.cs", label="return (BaseData)MemberwiseClone();", span="523-523"];
m35_166 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="SecurityManager.cs", label="Exit QuantConnect.Data.Market.TradeBar.Clone()", span="521-521"];
m35_174 [file="SecurityManager.cs", label="QuantConnect.Data.Market.TradeBar", span=""];
m36_196 [cluster="QuantConnect.Data.SubscriptionDataConfigList.SubscriptionDataConfigList(QuantConnect.Symbol)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfigList.SubscriptionDataConfigList(QuantConnect.Symbol)", span="47-47"];
m36_18 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m36_42 [cluster="Unk.Pass", file="SecurityManagerTests.cs", label="Entry Unk.Pass", span=""];
m36_149 [cluster="System.Collections.Generic.List<T>.List()", file="SecurityManagerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m36_43 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", span="75-75"];
m36_44 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="SecurityManagerTests.cs", label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="77-77"];
m36_45 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="SecurityManagerTests.cs", label="var manager = new SecurityManager(timeKeeper)", span="78-78"];
m36_46 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="SecurityManagerTests.cs", label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="80-80"];
m36_47 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="SecurityManagerTests.cs", label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.NewItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="81-92"];
m36_48 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="SecurityManagerTests.cs", label="manager[security.Symbol] = security", span="94-94"];
m36_49 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", span="75-75"];
m36_17 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m36_28 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", span="360-360"];
m36_215 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", file="SecurityManagerTests.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, false);", span="362-362"];
m36_216 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", span="360-360"];
m36_152 [cluster="QuantConnect.Symbol.IsCanonical()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164"];
m36_177 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", file="SecurityManagerTests.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", span="319-319"];
m36_187 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", span="346-346"];
m36_188 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="var option = new Symbol(SecurityIdentifier.GenerateOption(SecurityIdentifier.DefaultDate, Symbols.SPY.ID, Market.USA, 0, default(OptionRight), default(OptionStyle)), ''?SPY'')", span="348-348"];
m36_189 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="var subscriptionDataConfigList = new SubscriptionDataConfigList(option)", span="350-350"];
m36_190 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="Assert.DoesNotThrow(() => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="352-352"];
m36_191 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="354-354"];
m36_192 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="355-355"];
m36_193 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="356-356"];
m36_194 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="357-357"];
m36_195 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", span="346-346"];
m36_202 [cluster="QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="56-56"];
m36_212 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="357-357"];
m36_33 [cluster="lambda expression", file="SecurityManagerTests.cs", label="args.NewItems.OfType<object>().Single() != security", span="60-60"];
m36_35 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add)", span="66-66"];
m36_32 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="58-69"];
m36_34 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'')", span="62-62"];
m36_36 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.Pass()", span="67-67"];
m36_37 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="58-69"];
m36_51 [cluster="lambda expression", file="SecurityManagerTests.cs", label="args.NewItems.OfType<object>().Single() != security", span="83-83"];
m36_53 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add)", span="89-89"];
m36_50 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="81-92"];
m36_52 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'')", span="85-85"];
m36_54 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.Pass()", span="90-90"];
m36_55 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="81-92"];
m36_66 [cluster="lambda expression", file="SecurityManagerTests.cs", label="args.OldItems.OfType<object>().Single() != security", span="107-107"];
m36_68 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Remove)", span="113-113"];
m36_65 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="105-116"];
m36_67 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'')", span="109-109"];
m36_69 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Assert.Pass()", span="114-114"];
m36_70 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="105-116"];
m36_155 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="301-301"];
m36_158 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="302-302"];
m36_161 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="303-303"];
m36_156 [cluster="lambda expression", file="SecurityManagerTests.cs", label="x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)", span="301-301"];
m36_157 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="301-301"];
m36_159 [cluster="lambda expression", file="SecurityManagerTests.cs", label="x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)", span="302-302"];
m36_160 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="302-302"];
m36_162 [cluster="lambda expression", file="SecurityManagerTests.cs", label="x.TickType == TickType.Trade && x.Type == typeof(TradeBar)", span="303-303"];
m36_163 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="303-303"];
m36_178 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="340-340"];
m36_181 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="341-341"];
m36_184 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="342-342"];
m36_179 [cluster="lambda expression", file="SecurityManagerTests.cs", label="x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)", span="340-340"];
m36_180 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="340-340"];
m36_182 [cluster="lambda expression", file="SecurityManagerTests.cs", label="x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)", span="341-341"];
m36_183 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="341-341"];
m36_185 [cluster="lambda expression", file="SecurityManagerTests.cs", label="x.TickType == TickType.Trade && x.Type == typeof(TradeBar)", span="342-342"];
m36_186 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="342-342"];
m36_200 [cluster="lambda expression", file="SecurityManagerTests.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="352-352"];
m36_204 [cluster="lambda expression", file="SecurityManagerTests.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="354-354"];
m36_207 [cluster="lambda expression", file="SecurityManagerTests.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="355-355"];
m36_210 [cluster="lambda expression", file="SecurityManagerTests.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="356-356"];
m36_213 [cluster="lambda expression", file="SecurityManagerTests.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="357-357"];
m36_199 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="352-352"];
m36_203 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="354-354"];
m36_206 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="355-355"];
m36_209 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Entry lambda expression", span="356-356"];
m36_201 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="352-352"];
m36_205 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="354-354"];
m36_208 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="355-355"];
m36_211 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="356-356"];
m36_214 [cluster="lambda expression", file="SecurityManagerTests.cs", label="Exit lambda expression", span="357-357"];
m36_130 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m36_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="SecurityManagerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m36_153 [cluster="Unk.IsFalse", file="SecurityManagerTests.cs", label="Entry Unk.IsFalse", span=""];
m36_217 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m36_31 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m36_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var subscriptions = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                marketHoursDbEntry.ExchangeHours,\r\n                marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties,\r\n                _securityInitializer,\r\n                symbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="321-335"];
m36_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", span="307-307"];
m36_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var identifier = SecurityIdentifier.GenerateFuture(new DateTime(2020, 12, 15), ''ED'', Market.USA)", span="309-309"];
m36_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var symbol = new Symbol(identifier, ''ED'', Symbol.Empty)", span="310-310"];
m36_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''ED'', SecurityType.Equity, TimeZones.NewYork)", span="311-311"];
m36_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, ''ED'', symbol.ID.SecurityType, CashBook.AccountCurrency)", span="312-312"];
m36_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.IsFalse(symbol.IsCanonical())", span="337-337"];
m36_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var subscriptionTypes = new List<Tuple<Type, TickType>>\r\n            {\r\n                new Tuple<Type, TickType>(typeof(TradeBar), TickType.Trade),\r\n                new Tuple<Type, TickType>(typeof(QuoteBar), TickType.Quote),\r\n                new Tuple<Type, TickType>(typeof(OpenInterest), TickType.OpenInterest)\r\n            }", span="314-319"];
m36_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(subscriptions.Subscriptions.Count(), 3)", span="339-339"];
m36_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)))", span="340-340"];
m36_174 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)))", span="341-341"];
m36_175 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.Trade && x.Type == typeof(TradeBar)))", span="342-342"];
m36_176 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", span="307-307"];
m36_197 [cluster="Unk.DoesNotThrow", file="SecurityManagerTests.cs", label="Entry Unk.DoesNotThrow", span=""];
m36_11 [cluster="System.DateTime.DateTime(int, int, int)", file="SecurityManagerTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m36_16 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="SecurityManagerTests.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m36_12 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m36_41 [cluster="Unk.IsTrue", file="SecurityManagerTests.cs", label="Entry Unk.IsTrue", span=""];
m36_85 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="438-438"];
m36_38 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SecurityManagerTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m36_81 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m36_84 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72"];
m36_19 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", span="52-52"];
m36_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="SecurityManagerTests.cs", label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="54-54"];
m36_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="SecurityManagerTests.cs", label="var manager = new SecurityManager(timeKeeper)", span="55-55"];
m36_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="SecurityManagerTests.cs", label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="57-57"];
m36_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="SecurityManagerTests.cs", label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.NewItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="58-69"];
m36_24 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="SecurityManagerTests.cs", label="manager.Add(security.Symbol, security)", span="71-71"];
m36_25 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", span="52-52"];
m36_114 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var subscriptions = SecurityManager.CreateSecurity(typeof(QuoteBar),\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                marketHoursDbEntry.ExchangeHours,\r\n                marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties,\r\n                _securityInitializer,\r\n                symbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="217-231"];
m36_109 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", span="210-210"];
m36_110 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var symbol = Symbol.Create(''abc'', SecurityType.Cfd, Market.USA)", span="212-212"];
m36_111 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(symbol.ID.Market, symbol, SecurityType.Equity)", span="213-213"];
m36_113 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol, symbol.ID.SecurityType, defaultQuoteCurrency)", span="215-215"];
m36_112 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var defaultQuoteCurrency = CashBook.AccountCurrency", span="214-214"];
m36_115 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(subscriptions.Subscriptions.Count(), 1)", span="233-233"];
m36_116 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(subscriptions.Subscriptions.First().Type, typeof(QuoteBar))", span="234-234"];
m36_117 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(subscriptions.Subscriptions.First().TickType, TickType.Quote)", span="235-235"];
m36_118 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", span="210-210"];
m36_123 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equity = SecurityManager.CreateSecurity(typeof(Bitcoin),\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                equityMarketHoursDbEntry.ExchangeHours,\r\n                equityMarketHoursDbEntry.DataTimeZone,\r\n                equitySymbolProperties,\r\n                _securityInitializer,\r\n                equitySymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="245-259"];
m36_119 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", span="239-239"];
m36_120 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equitySymbol = new Symbol(SecurityIdentifier.GenerateBase(''BTC'', Market.USA), ''BTC'')", span="241-241"];
m36_121 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equityMarketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''BTC'', SecurityType.Base, TimeZones.NewYork)", span="242-242"];
m36_122 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equitySymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(equitySymbol.ID.Market, equitySymbol, equitySymbol.ID.SecurityType, CashBook.AccountCurrency)", span="243-243"];
m36_124 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(equity.Subscriptions.Count(), 1)", span="261-261"];
m36_125 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(equity.Subscriptions.First().Type, typeof(Bitcoin))", span="262-262"];
m36_126 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(equity.Subscriptions.First().TickType, TickType.Trade)", span="263-263"];
m36_127 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", span="239-239"];
m36_146 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="SecurityManagerTests.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="302-302"];
m36_151 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="308-308"];
m36_27 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m36_87 [cluster="Unk.AreEqual", file="SecurityManagerTests.cs", label="Entry Unk.AreEqual", span=""];
m36_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(option.Subscriptions.First().Type, typeof(ZipEntryName))", span="175-175"];
m36_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", span="151-151"];
m36_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionSymbol = Symbol.Create(''GOOG'', SecurityType.Option, Market.USA)", span="153-153"];
m36_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionMarketHoursDbEntry = _marketHoursDatabase.GetEntry(optionSymbol.ID.Market, optionSymbol, SecurityType.Option)", span="154-154"];
m36_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionSymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(optionSymbol.ID.Market, optionSymbol, optionSymbol.ID.SecurityType, optionDefaultQuoteCurrency)", span="156-156"];
m36_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var option = SecurityManager.CreateSecurity(typeof(ZipEntryName),\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                optionMarketHoursDbEntry.ExchangeHours,\r\n                optionMarketHoursDbEntry.DataTimeZone,\r\n                optionSymbolProperties,\r\n                _securityInitializer,\r\n                optionSymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="158-172"];
m36_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionDefaultQuoteCurrency = CashBook.AccountCurrency", span="155-155"];
m36_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(option.Subscriptions.Count(), 1)", span="174-174"];
m36_97 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(option.Subscriptions.First().TickType, TickType.Quote)", span="176-176"];
m36_98 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", span="151-151"];
m36_14 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m36_15 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m36_10 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="SecurityManagerTests.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m36_40 [cluster="Unk.Fail", file="SecurityManagerTests.cs", label="Entry Unk.Fail", span=""];
m36_83 [cluster="string.Substring(int)", file="SecurityManagerTests.cs", label="Entry string.Substring(int)", span="0-0"];
m36_26 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m36_154 [cluster="Unk.Any", file="SecurityManagerTests.cs", label="Entry Unk.Any", span=""];
m36_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equity = SecurityManager.CreateSecurity(typeof(TradeBar),\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                equityMarketHoursDbEntry.ExchangeHours,\r\n                equityMarketHoursDbEntry.DataTimeZone,\r\n                equitySymbolProperties,\r\n                _securityInitializer,\r\n                equitySymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="188-202"];
m36_99 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", span="181-181"];
m36_100 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equitySymbol = Symbol.Create(''AAPL'', SecurityType.Equity, Market.USA)", span="183-183"];
m36_101 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equityMarketHoursDbEntry = _marketHoursDatabase.GetEntry(equitySymbol.ID.Market, equitySymbol, SecurityType.Equity)", span="184-184"];
m36_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equitySymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(equitySymbol.ID.Market, equitySymbol, equitySymbol.ID.SecurityType, equityDefaultQuoteCurrency)", span="186-186"];
m36_102 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var equityDefaultQuoteCurrency = CashBook.AccountCurrency", span="185-185"];
m36_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(equity.Subscriptions.Count(), 1)", span="204-204"];
m36_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(equity.Subscriptions.First().Type, typeof(TradeBar))", span="205-205"];
m36_107 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(equity.Subscriptions.First().TickType, TickType.Trade)", span="206-206"];
m36_108 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", span="181-181"];
m36_30 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m36_64 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m36_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionSubscriptions = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                optionMarketHoursDbEntry.ExchangeHours,\r\n                optionMarketHoursDbEntry.DataTimeZone,\r\n                optionSymbolProperties,\r\n                _securityInitializer,\r\n                optionSymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="282-296"];
m36_131 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", span="267-267"];
m36_132 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var underlying = SecurityIdentifier.GenerateEquity(new DateTime(1998, 01, 02), ''SPY'', Market.USA)", span="269-269"];
m36_133 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionIdentifier = SecurityIdentifier.GenerateOption(new DateTime(2015, 09, 18), underlying, Market.USA, 195.50m, OptionRight.Put, OptionStyle.European)", span="270-270"];
m36_134 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionSymbol = new Symbol(optionIdentifier, ''SPY'', Symbol.Empty)", span="271-271"];
m36_135 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionMarketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''SPY'', SecurityType.Equity, TimeZones.NewYork)", span="272-272"];
m36_136 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var optionSymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(optionSymbol.ID.Market, ''SPY'', optionSymbol.ID.SecurityType, CashBook.AccountCurrency)", span="273-273"];
m36_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.IsFalse(optionSymbol.IsCanonical())", span="298-298"];
m36_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="var subscriptionTypes = new List<Tuple<Type, TickType>>\r\n            {\r\n                new Tuple<Type, TickType>(typeof(TradeBar), TickType.Trade),\r\n                new Tuple<Type, TickType>(typeof(QuoteBar), TickType.Quote),\r\n                new Tuple<Type, TickType>(typeof(OpenInterest), TickType.OpenInterest)\r\n            }", span="275-280"];
m36_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.AreEqual(optionSubscriptions.Subscriptions.Count(), 3)", span="300-300"];
m36_141 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)))", span="301-301"];
m36_142 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)))", span="302-302"];
m36_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.Trade && x.Type == typeof(TradeBar)))", span="303-303"];
m36_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", span="267-267"];
m36_13 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m36_29 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m36_128 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="217-217"];
m36_147 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", span="259-259"];
m36_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", span="98-98"];
m36_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="SecurityManagerTests.cs", label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="100-100"];
m36_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="SecurityManagerTests.cs", label="var manager = new SecurityManager(timeKeeper)", span="101-101"];
m36_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="SecurityManagerTests.cs", label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="103-103"];
m36_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="SecurityManagerTests.cs", label="manager.Add(security.Symbol, security)", span="104-104"];
m36_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="SecurityManagerTests.cs", label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.OldItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Remove);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="105-116"];
m36_62 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="SecurityManagerTests.cs", label="manager.Remove(security.Symbol)", span="118-118"];
m36_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", span="98-98"];
m36_148 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m36_0 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", span="39-39"];
m36_1 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="41-41"];
m36_2 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="_securityManager = new SecurityManager(timeKeeper)", span="42-42"];
m36_5 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="_subscriptionManager = new SubscriptionManager(new AlgorithmSettings(), timeKeeper)", span="45-45"];
m36_3 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="_securityTransactionManager = new SecurityTransactionManager(_securityManager)", span="43-43"];
m36_4 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="_securityPortfolioManager = new SecurityPortfolioManager(_securityManager, _securityTransactionManager)", span="44-44"];
m36_6 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="46-46"];
m36_7 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="47-47"];
m36_8 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="_securityInitializer = SecurityInitializer.Null", span="48-48"];
m36_9 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", span="39-39"];
m36_198 [cluster="Unk.Throws", file="SecurityManagerTests.cs", label="Entry Unk.Throws", span=""];
m36_82 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="SecurityManagerTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="210-210"];
m36_88 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SecurityManagerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m36_129 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="SecurityManagerTests.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m36_150 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SecurityManagerTests.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m36_145 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="SecurityManagerTests.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="362-362"];
m36_86 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SecurityManagerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m36_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", color=red, community=1, file="SecurityManagerTests.cs", label="1: var forex = SecurityManager.CreateSecurity(typeof(QuoteBar),\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                forexMarketHoursDbEntry.ExchangeHours,\r\n                forexMarketHoursDbEntry.DataTimeZone,\r\n                forexSymbolProperties,\r\n                _securityInitializer,\r\n                forexSymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="130-144"];
m36_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", span="122-122"];
m36_72 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", color=red, community=0, file="SecurityManagerTests.cs", label="1: var forexSymbol = Symbol.Create(''EURUSD'', SecurityType.Forex, Market.FXCM)", span="124-124"];
m36_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", color=red, community=0, file="SecurityManagerTests.cs", label="1: var forexMarketHoursDbEntry = _marketHoursDatabase.GetEntry(forexSymbol.ID.Market, forexSymbol, SecurityType.Forex)", span="125-125"];
m36_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", color=red, community=0, file="SecurityManagerTests.cs", label="1: var forexDefaultQuoteCurrency = forexSymbol.Value.Substring(3)", span="126-126"];
m36_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", color=red, community=0, file="SecurityManagerTests.cs", label="1: var forexSymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(forexSymbol.ID.Market, forexSymbol, forexSymbol.ID.SecurityType, forexDefaultQuoteCurrency)", span="128-128"];
m36_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", color=red, community=0, file="SecurityManagerTests.cs", label="1: Assert.AreEqual(forex.Subscriptions.Count(), 1)", span="145-145"];
m36_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", color=red, community=0, file="SecurityManagerTests.cs", label="1: Assert.AreEqual(forex.Subscriptions.First().Type, typeof(QuoteBar))", span="146-146"];
m36_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", color=red, community=0, file="SecurityManagerTests.cs", label="1: Assert.AreEqual(forex.Subscriptions.First().TickType, TickType.Quote)", span="147-147"];
m36_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="SecurityManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", span="122-122"];
m36_218 [file="SecurityManagerTests.cs", label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", span=""];
m36_219 [file="SecurityManagerTests.cs", label=security, span=""];
m36_220 [file="SecurityManagerTests.cs", label=security, span=""];
m36_221 [file="SecurityManagerTests.cs", label=security, span=""];
m36_222 [file="SecurityManagerTests.cs", label=subscriptionDataConfigList, span=""];
m37_11 [cluster="Unk.SelectToken", file="SecurityPortfolioManager.cs", label="Entry Unk.SelectToken", span=""];
m37_5 [cluster="Unk.Fail", file="SecurityPortfolioManager.cs", label="Entry Unk.Fail", span=""];
m37_13 [cluster="Unk.IsTrue", file="SecurityPortfolioManager.cs", label="Entry Unk.IsTrue", span=""];
m37_0 [cluster="QuantConnect.Tests.TestExtensions.WaitOneAssertFail(System.Threading.WaitHandle, int, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Tests.TestExtensions.WaitOneAssertFail(System.Threading.WaitHandle, int, string)", span="33-33"];
m37_1 [cluster="QuantConnect.Tests.TestExtensions.WaitOneAssertFail(System.Threading.WaitHandle, int, string)", file="SecurityPortfolioManager.cs", label="!wait.WaitOne(milliseconds)", span="35-35"];
m37_2 [cluster="QuantConnect.Tests.TestExtensions.WaitOneAssertFail(System.Threading.WaitHandle, int, string)", file="SecurityPortfolioManager.cs", label="Assert.Fail(message)", span="37-37"];
m37_3 [cluster="QuantConnect.Tests.TestExtensions.WaitOneAssertFail(System.Threading.WaitHandle, int, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Tests.TestExtensions.WaitOneAssertFail(System.Threading.WaitHandle, int, string)", span="33-33"];
m37_4 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="SecurityPortfolioManager.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m37_12 [cluster="Unk.DeepEquals", file="SecurityPortfolioManager.cs", label="Entry Unk.DeepEquals", span=""];
m37_6 [cluster="QuantConnect.Tests.TestExtensions.IsEqualTo(JObject, JObject, string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Tests.TestExtensions.IsEqualTo(JObject, JObject, string)", span="47-47"];
m37_7 [cluster="QuantConnect.Tests.TestExtensions.IsEqualTo(JObject, JObject, string)", file="SecurityPortfolioManager.cs", label="var e = expected.SelectToken(property)", span="49-49"];
m37_8 [cluster="QuantConnect.Tests.TestExtensions.IsEqualTo(JObject, JObject, string)", file="SecurityPortfolioManager.cs", label="var a = actual.SelectToken(property)", span="50-50"];
m37_9 [cluster="QuantConnect.Tests.TestExtensions.IsEqualTo(JObject, JObject, string)", file="SecurityPortfolioManager.cs", label="Assert.IsTrue(JToken.DeepEquals(e, a), $''{property}: Expected {e}. Actual {a}'')", span="51-51"];
m37_10 [cluster="QuantConnect.Tests.TestExtensions.IsEqualTo(JObject, JObject, string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Tests.TestExtensions.IsEqualTo(JObject, JObject, string)", span="47-47"];
m38_400 [cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33"];
m38_317 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="489-489"];
m38_318 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="491-491"];
m38_319 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="492-492"];
m38_320 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="493-493"];
m38_322 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="496-496"];
m38_323 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="497-497"];
m38_327 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.AAPL].Holdings.Quantity)", span="503-503"];
m38_321 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="494-494"];
m38_325 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="500-500"];
m38_326 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="502-502"];
m38_324 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="499-499"];
m38_328 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="489-489"];
m38_486 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", span="711-711"];
m38_487 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="713-713"];
m38_488 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="714-714"];
m38_492 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="719-719"];
m38_493 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="720-720"];
m38_489 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="715-715"];
m38_491 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="717-717"];
m38_496 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="726-726"];
m38_497 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="727-727"];
m38_498 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="728-728"];
m38_499 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="729-729"];
m38_500 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="731-731"];
m38_501 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="732-732"];
m38_503 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="734-734"];
m38_507 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="744-744"];
m38_511 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="750-750"];
m38_490 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="716-716"];
m38_494 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="721-721"];
m38_502 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="733-733"];
m38_495 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(192 * 100)", span="724-724"];
m38_506 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="740-740"];
m38_508 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="745-745"];
m38_504 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="736-736"];
m38_505 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="738-738"];
m38_509 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="746-746"];
m38_510 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="747-747"];
m38_512 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", span="711-711"];
m38_401 [cluster="System.TimeSpan.FromHours(double)", file="SecurityPortfolioManagerTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m38_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="89-89"];
m38_0 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", span="58-58"];
m38_1 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="string fillsFile = ''TestData\\test_cash_fills.xml''", span="63-63"];
m38_2 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="string equityFile = ''TestData\\test_cash_equity.xml''", span="64-64"];
m38_3 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue, \r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0m)\r\n                ).ToList()", span="66-77"];
m38_4 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="79-81"];
m38_5 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="83-83"];
m38_15 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="i < fills.Count", span="95-95"];
m38_16 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var fill = fills[i]", span="98-98"];
m38_13 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(equity[0])", span="93-93"];
m38_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(equity[i + 1], portfolio.TotalPortfolioValue, ''Failed on '' + i)", span="106-106"];
m38_6 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="86-86"];
m38_7 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="87-87"];
m38_8 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var security = new Security(SecurityExchangeHours, subscriptions.Add(CASH, Resolution.Daily, TimeZones.NewYork, TimeZones.NewYork), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="88-88"];
m38_10 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(CASH, security)", span="90-90"];
m38_11 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="91-91"];
m38_12 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="92-92"];
m38_9 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="security.SetLeverage(10m)", span="89-89"];
m38_19 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new IndicatorDataPoint(CASH, time, i + 1))", span="103-103"];
m38_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="105-105"];
m38_14 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="int i = 0", span="95-95"];
m38_17 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="var time = DateTime.Today.AddDays(i)", span="99-99"];
m38_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="i++", span="95-95"];
m38_18 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="TimeKeeper.SetUtcDateTime(time.ConvertToUtc(TimeZones.NewYork))", span="100-100"];
m38_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", span="58-58"];
m38_259 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", span="405-405"];
m38_260 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="407-407"];
m38_261 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="408-408"];
m38_262 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="409-409"];
m38_264 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="412-412"];
m38_268 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="418-418"];
m38_272 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="424-424"];
m38_263 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="410-410"];
m38_266 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fillBuy)", span="415-415"];
m38_267 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="417-417"];
m38_270 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fillSell)", span="421-421"];
m38_271 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="423-423"];
m38_265 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="414-414"];
m38_269 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 100, -100, 0)", span="420-420"];
m38_273 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", span="405-405"];
m38_115 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
m38_446 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", span="654-654"];
m38_447 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="decimal leverage = 2m", span="656-656"];
m38_448 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="int amount = 1000", span="657-657"];
m38_449 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="int quantity = (int)(amount * leverage)", span="658-658"];
m38_459 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="security.SetLeverage(leverage)", span="669-669"];
m38_455 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook[''USD''].SetAmount(amount)", span="664-664"];
m38_450 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="659-659"];
m38_463 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var order = new MarketOrder(Symbols.AAPL, -quantity, time) { Price = sellPrice }", span="675-675"];
m38_464 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = sellPrice, FillQuantity = -quantity }", span="676-676"];
m38_473 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity, time.AddSeconds(1)) { Price = sellPrice }", span="690-690"];
m38_479 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity, time.AddSeconds(1)) { Price = highPrice }", span="700-700"];
m38_482 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity + 1, time.AddSeconds(1)) { Price = highPrice }", span="705-705"];
m38_451 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="660-660"];
m38_454 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="663-663"];
m38_457 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="667-667"];
m38_458 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var security = securities[Symbols.AAPL]", span="668-668"];
m38_452 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var orderProcessor = new OrderProcessor()", span="661-661"];
m38_453 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="662-662"];
m38_471 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="686-686"];
m38_474 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="691-691"];
m38_480 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="701-701"];
m38_483 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="706-706"];
m38_465 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddOrder(order)", span="677-677"];
m38_468 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="680-680"];
m38_469 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="682-682"];
m38_456 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="666-666"];
m38_462 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, sellPrice, sellPrice, sellPrice, sellPrice, 1))", span="673-673"];
m38_466 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="678-678"];
m38_478 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="697-697"];
m38_460 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var time = DateTime.Now", span="671-671"];
m38_461 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="decimal sellPrice = 1m", span="672-672"];
m38_470 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, -1, time.AddSeconds(1)) { Price = sellPrice }", span="685-685"];
m38_476 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="time = time.AddDays(1)", span="695-695"];
m38_477 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="decimal highPrice = sellPrice * 2", span="696-696"];
m38_467 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="request.SetOrderId(0)", span="679-679"];
m38_472 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(sufficientCapital)", span="687-687"];
m38_475 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(sufficientCapital)", span="692-692"];
m38_481 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(sufficientCapital)", span="702-702"];
m38_484 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(sufficientCapital)", span="707-707"];
m38_485 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", span="654-654"];
m38_1053 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m38_118 [cluster="System.Console.WriteLine(string)", file="SecurityPortfolioManagerTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m38_36 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m38_213 [cluster="Unk.IsTrue", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.IsTrue", span=""];
m38_27 [cluster="Unk.ToList", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.ToList", span=""];
m38_516 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="50-50"];
m38_197 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", span="1507-1507"];
m38_680 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", span="969-969"];
m38_681 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="971-971"];
m38_682 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="972-972"];
m38_686 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="977-977"];
m38_687 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="978-978"];
m38_683 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="973-973"];
m38_685 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="975-975"];
m38_690 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="984-984"];
m38_691 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="985-985"];
m38_692 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="986-986"];
m38_693 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="988-988"];
m38_694 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="989-989"];
m38_696 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="991-991"];
m38_701 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1004-1004"];
m38_705 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1010-1010"];
m38_684 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="974-974"];
m38_688 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="979-979"];
m38_695 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="990-990"];
m38_689 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(192 * 100)", span="982-982"];
m38_700 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="999-999"];
m38_702 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1005-1005"];
m38_697 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="993-993"];
m38_698 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="996-996"];
m38_699 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="997-997"];
m38_703 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="1006-1006"];
m38_704 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="1007-1007"];
m38_706 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", span="969-969"];
m38_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m38_522 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m38_402 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="SecurityPortfolioManagerTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m38_35 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="652-652"];
m38_216 [cluster="Unk.GreaterOrEqual", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.GreaterOrEqual", span=""];
m38_274 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m38_37 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m38_523 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SecurityPortfolioManagerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m38_111 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m38_211 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
m38_1081 [cluster="Unk.Where", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.Where", span=""];
m38_113 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m38_206 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107"];
m38_921 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", span="1306-1306"];
m38_922 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1308-1308"];
m38_923 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1309-1309"];
m38_927 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1314-1314"];
m38_928 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1315-1315"];
m38_924 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1310-1310"];
m38_926 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1312-1312"];
m38_931 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1321-1321"];
m38_932 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1322-1322"];
m38_933 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1323-1323"];
m38_934 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1324-1324"];
m38_935 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1326-1326"];
m38_936 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1327-1327"];
m38_938 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1329-1329"];
m38_944 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1342-1342"];
m38_946 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1344-1344"];
m38_947 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1347-1347"];
m38_925 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1311-1311"];
m38_929 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1316-1316"];
m38_937 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1328-1328"];
m38_930 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash((195 - 192) * 100)", span="1319-1319"];
m38_943 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1338-1338"];
m38_945 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1343-1343"];
m38_939 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1330-1330"];
m38_940 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1332-1332"];
m38_941 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1335-1335"];
m38_942 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1336-1336"];
m38_948 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", span="1306-1306"];
m38_1093 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1547-1547"];
m38_46 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="66-76"];
m38_51 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="80-80"];
m38_47 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue, \r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0m)", span="66-76"];
m38_48 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="66-76"];
m38_52 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="80-80"];
m38_53 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="80-80"];
m38_119 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="121-131"];
m38_122 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="135-135"];
m38_125 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="139-139"];
m38_128 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="143-143"];
m38_120 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)", span="121-131"];
m38_121 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="121-131"];
m38_123 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="135-135"];
m38_124 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="135-135"];
m38_126 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="139-139"];
m38_127 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="139-139"];
m38_129 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="143-143"];
m38_130 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="143-143"];
m38_525 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="733-733"];
m38_526 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="733-733"];
m38_527 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="733-733"];
m38_555 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="775-775"];
m38_556 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="775-775"];
m38_557 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="775-775"];
m38_586 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="816-816"];
m38_587 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="816-816"];
m38_588 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="816-816"];
m38_615 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="857-857"];
m38_616 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="857-857"];
m38_617 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="857-857"];
m38_645 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="901-901"];
m38_646 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="901-901"];
m38_647 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="901-901"];
m38_677 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="942-942"];
m38_678 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="942-942"];
m38_679 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="942-942"];
m38_707 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="990-990"];
m38_708 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="990-990"];
m38_709 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="990-990"];
m38_737 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1035-1035"];
m38_738 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1035-1035"];
m38_739 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1035-1035"];
m38_766 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1081-1081"];
m38_767 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1081-1081"];
m38_768 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1081-1081"];
m38_795 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1122-1122"];
m38_796 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1122-1122"];
m38_797 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1122-1122"];
m38_824 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1162-1162"];
m38_825 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1162-1162"];
m38_826 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1162-1162"];
m38_918 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1286-1286"];
m38_919 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1286-1286"];
m38_920 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1286-1286"];
m38_949 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1328-1328"];
m38_950 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1328-1328"];
m38_951 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1328-1328"];
m38_980 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1372-1372"];
m38_981 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1372-1372"];
m38_982 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1372-1372"];
m38_1011 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1418-1418"];
m38_1012 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1418-1418"];
m38_1013 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1418-1418"];
m38_1042 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1464-1464"];
m38_1043 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1464-1464"];
m38_1044 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1464-1464"];
m38_1075 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="x.BrokerId.Contains(brokerageId)", span="1530-1530"];
m38_1074 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1530-1530"];
m38_1076 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1530-1530"];
m38_1082 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="1535-1535"];
m38_1083 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1535-1535"];
m38_1084 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1535-1535"];
m38_1094 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label=true, span="1547-1547"];
m38_1095 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="1547-1547"];
m38_42 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m38_44 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610"];
m38_329 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="507-507"];
m38_330 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="509-509"];
m38_331 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="510-510"];
m38_332 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="511-511"];
m38_334 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="514-514"];
m38_335 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, -100)", span="515-515"];
m38_337 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="518-518"];
m38_340 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-200, securities[Symbols.AAPL].Holdings.Quantity)", span="522-522"];
m38_333 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="512-512"];
m38_338 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="519-519"];
m38_339 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="521-521"];
m38_336 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue,  OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="517-517"];
m38_341 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="507-507"];
m38_589 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", span="838-838"];
m38_590 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="840-840"];
m38_591 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="841-841"];
m38_595 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="846-846"];
m38_596 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="847-847"];
m38_592 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="842-842"];
m38_594 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="844-844"];
m38_599 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="851-851"];
m38_600 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="852-852"];
m38_601 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="853-853"];
m38_602 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="855-855"];
m38_603 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="856-856"];
m38_605 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="858-858"];
m38_609 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="869-869"];
m38_613 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="875-875"];
m38_593 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="843-843"];
m38_597 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="848-848"];
m38_604 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="857-857"];
m38_598 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="849-849"];
m38_608 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="864-864"];
m38_610 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(192 * 100, portfolio.Cash)", span="870-870"];
m38_606 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="860-860"];
m38_607 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="862-862"];
m38_611 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-100, newUnderlyingHoldings.Quantity)", span="871-871"];
m38_612 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="872-872"];
m38_614 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", span="838-838"];
m38_1085 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="1538-1538"];
m38_1086 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="SecurityPortfolioManagerTests.cs", label="OrderTicket ticket", span="1540-1540"];
m38_1087 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="SecurityPortfolioManagerTests.cs", label="_tickets.TryGetValue(orderId, out ticket)", span="1541-1541"];
m38_1088 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="SecurityPortfolioManagerTests.cs", label="return ticket;", span="1542-1542"];
m38_1089 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="1538-1538"];
m38_55 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="111-111"];
m38_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="string fillsFile = ''TestData\\test_forex_fills.xml''", span="116-116"];
m38_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="string equityFile = ''TestData\\test_forex_equity.xml''", span="117-117"];
m38_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)\r\n                ).ToList()", span="121-132"];
m38_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="string mchQuantityFile = ''TestData\\test_forex_fills_mch_quantity.xml''", span="118-118"];
m38_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="134-136"];
m38_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="string jwbQuantityFile = ''TestData\\test_forex_fills_jwb_quantity.xml''", span="119-119"];
m38_62 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var mchQuantity = XDocument.Load(mchQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="138-140"];
m38_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var jwbQuantity = XDocument.Load(jwbQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="142-144"];
m38_64 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="146-146"];
m38_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="i < fills.Count", span="179-179"];
m38_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var fill = fills[i]", span="182-182"];
m38_69 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(equity[0])", span="153-153"];
m38_70 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook.Add(''MCH'', mchQuantity[0], 0)", span="154-154"];
m38_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual((double) mchQuantity[i + 1], (double)portfolio.CashBook[''MCH''].Amount)", span="223-223"];
m38_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook.Add(''JWB'', jwbQuantity[0], 0)", span="155-155"];
m38_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual((double) jwbQuantity[i + 1], (double)portfolio.CashBook[''JWB''].Amount)", span="224-224"];
m38_65 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="149-149"];
m38_66 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="150-150"];
m38_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var mchJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, jwbCash, subscriptions.Add(MCHJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(jwbCash.Symbol))", span="161-161"];
m38_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var mchUsdSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, subscriptions.Add(MCHUSD, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(usdCash.Symbol))", span="163-163"];
m38_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var usdJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, mchCash, subscriptions.Add(USDJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(mchCash.Symbol))", span="165-165"];
m38_87 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook.EnsureCurrencyDataFeeds(securities, subscriptions, MarketHoursDatabase.FromDataFolder(), SymbolPropertiesDatabase.FromDataFolder(), DefaultBrokerageModel.DefaultMarketMap)", span="177-177"];
m38_67 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="151-151"];
m38_68 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="152-152"];
m38_84 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(mchJwbSecurity)", span="173-173"];
m38_85 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(usdJwbSecurity)", span="174-174"];
m38_86 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(mchUsdSecurity)", span="175-175"];
m38_72 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var jwbCash = portfolio.CashBook[''JWB'']", span="157-157"];
m38_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var mchCash = portfolio.CashBook[''MCH'']", span="158-158"];
m38_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var usdCash = portfolio.CashBook[''USD'']", span="159-159"];
m38_102 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="210-210"];
m38_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="Console.WriteLine(i + 1 + ''   '' + portfolio.TotalPortfolioValue.ToString(''C''))", span="221-221"];
m38_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="jwbCash.Update(new IndicatorDataPoint(MCHJWB, time, mchJwb))", span="194-194"];
m38_98 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="mchCash.Update(new IndicatorDataPoint(JWBUSD, time, usdJwb))", span="196-196"];
m38_97 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="usdCash.Update(new IndicatorDataPoint(MCHUSD, time, mchUsd))", span="195-195"];
m38_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="mchJwbSecurity.SetLeverage(10m)", span="162-162"];
m38_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="mchJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="169-169"];
m38_99 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var updateData = new Dictionary<Security, BaseData>\r\n                {\r\n                    {mchJwbSecurity, new IndicatorDataPoint(MCHJWB, time, mchJwb)},\r\n                    {mchUsdSecurity, new IndicatorDataPoint(MCHUSD, time, mchUsd)},\r\n                    {usdJwbSecurity, new IndicatorDataPoint(JWBUSD, time, usdJwb)}\r\n                }", span="198-203"];
m38_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="mchUsdSecurity.SetLeverage(10m)", span="164-164"];
m38_82 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="mchUsdSecurity.TransactionModel = new SecurityTransactionModel()", span="170-170"];
m38_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="usdJwbSecurity.SetLeverage(10m)", span="166-166"];
m38_83 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="usdJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="171-171"];
m38_88 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="int i = 0", span="179-179"];
m38_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="var time = DateTime.Today.AddDays(i)", span="183-183"];
m38_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="decimal mchJwb = i + 1", span="187-187"];
m38_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="decimal mchUsd = (i + 1)/(i + 2m)", span="188-188"];
m38_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="decimal usdJwb = i + 2", span="189-189"];
m38_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="i++", span="179-179"];
m38_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual((double)mchJwb, (double)(mchUsd*usdJwb), 1e-10)", span="190-190"];
m38_100 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label=updateData, span="205-205"];
m38_101 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="kvp.Key.SetMarketPrice(kvp.Value)", span="207-207"];
m38_107 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="111-111"];
m38_108 [cluster="Unk.Add", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.Add", span=""];
m38_676 [cluster="QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33"];
m38_859 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="41-41"];
m38_209 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="529-529"];
m38_1055 [cluster="System.Enum.ToString()", file="SecurityPortfolioManagerTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m38_31 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m38_514 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", span="25-25"];
m38_798 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", span="1142-1142"];
m38_799 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1144-1144"];
m38_800 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1145-1145"];
m38_804 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1150-1150"];
m38_805 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1151-1151"];
m38_801 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1146-1146"];
m38_803 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1148-1148"];
m38_808 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1155-1155"];
m38_809 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1156-1156"];
m38_810 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1157-1157"];
m38_811 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="1158-1158"];
m38_812 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1160-1160"];
m38_813 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1161-1161"];
m38_815 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1163-1163"];
m38_821 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1175-1175"];
m38_822 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1178-1178"];
m38_802 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1147-1147"];
m38_806 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1152-1152"];
m38_814 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1162-1162"];
m38_807 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="1153-1153"];
m38_819 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="1170-1170"];
m38_820 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual((192 - 189) * 100, portfolio.Cash)", span="1174-1174"];
m38_816 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1164-1164"];
m38_817 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1166-1166"];
m38_818 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1168-1168"];
m38_823 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", span="1142-1142"];
m38_54 [cluster="decimal.Parse(string, System.IFormatProvider)", file="SecurityPortfolioManagerTests.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m38_41 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="SecurityPortfolioManagerTests.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="577-577"];
m38_45 [cluster="Unk.ProcessFill", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.ProcessFill", span=""];
m38_33 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m38_207 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194"];
m38_26 [cluster="Unk.Select", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.Select", span=""];
m38_40 [cluster="System.DateTime.AddDays(double)", file="SecurityPortfolioManagerTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m38_201 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m38_769 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", span="1101-1101"];
m38_770 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1103-1103"];
m38_771 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1104-1104"];
m38_775 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1109-1109"];
m38_776 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1110-1110"];
m38_772 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1105-1105"];
m38_774 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1107-1107"];
m38_779 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1115-1115"];
m38_780 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1116-1116"];
m38_781 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 190 })", span="1117-1117"];
m38_782 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="1118-1118"];
m38_783 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="1120-1120"];
m38_784 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1121-1121"];
m38_786 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1123-1123"];
m38_792 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1135-1135"];
m38_793 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1138-1138"];
m38_773 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1106-1106"];
m38_777 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1111-1111"];
m38_785 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1122-1122"];
m38_778 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="1113-1113"];
m38_790 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="1130-1130"];
m38_791 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1134-1134"];
m38_787 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1124-1124"];
m38_788 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1126-1126"];
m38_789 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1128-1128"];
m38_794 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", span="1101-1101"];
m38_983 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", span="1396-1396"];
m38_984 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1398-1398"];
m38_985 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1399-1399"];
m38_989 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1404-1404"];
m38_990 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1405-1405"];
m38_986 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1400-1400"];
m38_988 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1402-1402"];
m38_993 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1411-1411"];
m38_994 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1412-1412"];
m38_995 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1413-1413"];
m38_996 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1414-1414"];
m38_997 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1416-1416"];
m38_998 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1417-1417"];
m38_1000 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1419-1419"];
m38_1006 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1433-1433"];
m38_1008 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1435-1435"];
m38_1009 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1438-1438"];
m38_987 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1401-1401"];
m38_991 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1406-1406"];
m38_999 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1418-1418"];
m38_992 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash((192 - 189) * 100)", span="1409-1409"];
m38_1005 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1429-1429"];
m38_1007 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1434-1434"];
m38_1001 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1420-1420"];
m38_1002 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1422-1422"];
m38_1003 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1425-1425"];
m38_1004 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1427-1427"];
m38_1010 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", span="1396-1396"];
m38_892 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", span="1266-1266"];
m38_893 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1268-1268"];
m38_894 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1269-1269"];
m38_898 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1274-1274"];
m38_899 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1275-1275"];
m38_895 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1270-1270"];
m38_897 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1272-1272"];
m38_902 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1279-1279"];
m38_903 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1280-1280"];
m38_904 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1281-1281"];
m38_905 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 2)", span="1282-1282"];
m38_906 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1284-1284"];
m38_907 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1285-1285"];
m38_909 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1287-1287"];
m38_915 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1299-1299"];
m38_916 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: Assert.AreEqual(1, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1302-1302"];
m38_896 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1271-1271"];
m38_900 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1276-1276"];
m38_908 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1286-1286"];
m38_901 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="1277-1277"];
m38_913 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="1294-1294"];
m38_914 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: Assert.AreEqual((195 - 192) * 100, portfolio.Cash)", span="1298-1298"];
m38_910 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1288-1288"];
m38_911 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1290-1290"];
m38_912 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1292-1292"];
m38_917 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", span="1266-1266"];
m38_648 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", span="922-922"];
m38_649 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="924-924"];
m38_650 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="925-925"];
m38_654 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="930-930"];
m38_655 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="931-931"];
m38_651 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="926-926"];
m38_653 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="928-928"];
m38_658 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="935-935"];
m38_659 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="936-936"];
m38_660 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="937-937"];
m38_661 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="938-938"];
m38_662 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="940-940"];
m38_663 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="941-941"];
m38_665 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="943-943"];
m38_670 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="959-959"];
m38_674 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="965-965"];
m38_652 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="927-927"];
m38_656 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="932-932"];
m38_664 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="942-942"];
m38_657 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="933-933"];
m38_669 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="952-952"];
m38_671 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(192 * 100, portfolio.Cash)", span="960-960"];
m38_666 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="945-945"];
m38_667 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="948-948"];
m38_668 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="950-950"];
m38_672 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-100, newUnderlyingHoldings.Quantity)", span="961-961"];
m38_673 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="962-962"];
m38_675 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", span="922-922"];
m38_205 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m38_112 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m38_1054 [cluster="System.NotImplementedException.NotImplementedException(string)", file="SecurityPortfolioManagerTests.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m38_208 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="1516-1516"];
m38_1062 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="SecurityPortfolioManagerTests.cs", label="_tickets[ticket.OrderId] = ticket", span="1518-1518"];
m38_1063 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="1516-1516"];
m38_1070 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="1528-1528"];
m38_1071 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="SecurityPortfolioManagerTests.cs", label="return _orders.Values.FirstOrDefault(x => x.BrokerId.Contains(brokerageId));", span="1530-1530"];
m38_1072 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="1528-1528"];
m38_558 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", span="795-795"];
m38_559 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="797-797"];
m38_560 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="798-798"];
m38_564 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="803-803"];
m38_565 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="804-804"];
m38_561 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="799-799"];
m38_563 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="801-801"];
m38_568 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="809-809"];
m38_569 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="810-810"];
m38_570 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="811-811"];
m38_571 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 2000 })", span="812-812"];
m38_572 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="814-814"];
m38_573 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="815-815"];
m38_575 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="817-817"];
m38_580 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="828-828"];
m38_584 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="834-834"];
m38_562 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="800-800"];
m38_566 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="805-805"];
m38_574 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="816-816"];
m38_567 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="807-807"];
m38_579 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="824-824"];
m38_581 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="829-829"];
m38_576 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="818-818"];
m38_577 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="820-820"];
m38_578 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label=fills, span="822-822"];
m38_582 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.Quantity)", span="830-830"];
m38_583 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.AveragePrice)", span="831-831"];
m38_585 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", span="795-795"];
m38_276 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", span="428-428"];
m38_277 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="430-430"];
m38_278 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="431-431"];
m38_279 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="432-432"];
m38_281 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), new SymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 50, 0.01m, 1)))", span="435-435"];
m38_285 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="441-441"];
m38_289 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="447-447"];
m38_280 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="433-433"];
m38_283 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fillBuy)", span="438-438"];
m38_284 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="440-440"];
m38_287 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fillSell)", span="444-444"];
m38_288 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-100 * 50, portfolio.Cash)", span="446-446"];
m38_282 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="437-437"];
m38_286 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 99, -100, 0)", span="443-443"];
m38_290 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", span="428-428"];
m38_214 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
m38_1099 [cluster="System.NotImplementedException.NotImplementedException()", file="SecurityPortfolioManagerTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m38_517 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36"];
m38_1096 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="1550-1550"];
m38_1097 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="SecurityPortfolioManagerTests.cs", label="throw new NotImplementedException();", span="1552-1552"];
m38_1098 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="1550-1550"];
m38_1059 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72"];
m38_109 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m38_39 [cluster="Unk.SetCash", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.SetCash", span=""];
m38_28 [cluster="Unk.AreEqual", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.AreEqual", span=""];
m38_1073 [cluster="Unk.FirstOrDefault", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m38_198 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374"];
m38_618 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", span="879-879"];
m38_619 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="881-881"];
m38_620 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="882-882"];
m38_624 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="887-887"];
m38_625 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="888-888"];
m38_621 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="883-883"];
m38_623 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="885-885"];
m38_628 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="894-894"];
m38_629 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="895-895"];
m38_630 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 2)", span="896-896"];
m38_631 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="897-897"];
m38_632 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="899-899"];
m38_633 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="900-900"];
m38_635 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="902-902"];
m38_639 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="912-912"];
m38_643 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: Assert.AreEqual(1, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="918-918"];
m38_622 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="884-884"];
m38_626 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="889-889"];
m38_634 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="901-901"];
m38_627 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: portfolio.SetCash(192 * 100)", span="892-892"];
m38_638 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="908-908"];
m38_640 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="913-913"];
m38_636 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="904-904"];
m38_637 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="906-906"];
m38_641 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="914-914"];
m38_642 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="915-915"];
m38_644 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", span="879-879"];
m38_1077 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="SecurityPortfolioManagerTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m38_398 [cluster="QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="258-258"];
m38_524 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
m38_1078 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="1533-1533"];
m38_1079 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="SecurityPortfolioManagerTests.cs", label="return _tickets.Values.Where(filter ?? (x => true));", span="1535-1535"];
m38_1080 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="1533-1533"];
m38_740 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", span="1060-1060"];
m38_741 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1062-1062"];
m38_742 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1063-1063"];
m38_746 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1068-1068"];
m38_747 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1069-1069"];
m38_743 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1064-1064"];
m38_745 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1066-1066"];
m38_750 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1074-1074"];
m38_751 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1075-1075"];
m38_752 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1076-1076"];
m38_753 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="1077-1077"];
m38_754 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1079-1079"];
m38_755 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1080-1080"];
m38_757 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1082-1082"];
m38_763 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1094-1094"];
m38_764 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1097-1097"];
m38_744 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1065-1065"];
m38_748 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1070-1070"];
m38_756 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1081-1081"];
m38_749 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="1072-1072"];
m38_761 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="1089-1089"];
m38_762 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual((195 - 192) * 100, portfolio.Cash)", span="1093-1093"];
m38_758 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1083-1083"];
m38_759 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1085-1085"];
m38_760 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1087-1087"];
m38_765 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", span="1060-1060"];
m38_34 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m38_131 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="232-232"];
m38_132 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="decimal leverage = 1m", span="234-234"];
m38_133 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="int quantity = (int) (1000*leverage)", span="235-235"];
m38_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="security.SetLeverage(leverage)", span="246-246"];
m38_180 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="security.SetLeverage(leverage * 2)", span="304-304"];
m38_134 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="236-236"];
m38_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook[''USD''].SetAmount(quantity)", span="241-241"];
m38_147 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var order = new MarketOrder(Symbols.AAPL, quantity, time) {Price = buyPrice}", span="252-252"];
m38_148 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="253-253"];
m38_156 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="263-263"];
m38_157 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(quantity, portfolio.TotalPortfolioValue)", span="264-264"];
m38_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(quantity, portfolio.MarginRemaining)", span="277-277"];
m38_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="278-278"];
m38_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(quantity * 2, portfolio.TotalPortfolioValue)", span="279-279"];
m38_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-quantity/2m, portfolio.MarginRemaining)", span="292-292"];
m38_174 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="293-293"];
m38_175 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(quantity/2m, portfolio.TotalPortfolioValue)", span="294-294"];
m38_187 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="318-318"];
m38_188 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="319-319"];
m38_135 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="237-237"];
m38_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="240-240"];
m38_141 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="244-244"];
m38_142 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var security = securities[Symbols.AAPL]", span="245-245"];
m38_136 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var orderProcessor = new OrderProcessor()", span="238-238"];
m38_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="239-239"];
m38_159 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="268-268"];
m38_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, anotherOrder)", span="283-283"];
m38_149 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddOrder(order)", span="254-254"];
m38_152 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="257-257"];
m38_153 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(portfolio.CashBook[''USD''].Amount, fill.FillPrice*fill.FillQuantity)", span="258-258"];
m38_154 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="260-260"];
m38_155 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.MarginRemaining)", span="262-262"];
m38_177 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="299-299"];
m38_183 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="311-311"];
m38_189 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="321-321"];
m38_190 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.TotalPortfolioValue)", span="323-323"];
m38_191 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="325-325"];
m38_195 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.GreaterOrEqual(-portfolio.MarginRemaining, security.Price * marginCallOrders[0].Quantity)", span="329-329"];
m38_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="243-243"];
m38_146 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="250-250"];
m38_150 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="255-255"];
m38_163 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="275-275"];
m38_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="290-290"];
m38_182 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, newPrice, newPrice, newPrice, newPrice, 1))", span="308-308"];
m38_186 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="316-316"];
m38_194 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-security.Holdings.Quantity, marginCallOrders[0].Quantity)", span="328-328"];
m38_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var time = DateTime.Now", span="248-248"];
m38_145 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="decimal buyPrice = 1m", span="249-249"];
m38_158 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) {Price = buyPrice}", span="267-267"];
m38_161 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="time = time.AddDays(1)", span="273-273"];
m38_162 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="decimal highPrice = buyPrice * 2", span="274-274"];
m38_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="decimal lowPrice = buyPrice/2", span="289-289"];
m38_151 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="request.SetOrderId(0)", span="256-256"];
m38_160 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(sufficientCapital)", span="269-269"];
m38_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="var anotherOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = highPrice }", span="282-282"];
m38_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="time = time.AddDays(1)", span="288-288"];
m38_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(sufficientCapital)", span="284-284"];
m38_181 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="decimal newPrice = lowPrice + 0.01m", span="307-307"];
m38_176 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="bool issueMarginCallWarning", span="298-298"];
m38_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(issueMarginCallWarning)", span="300-300"];
m38_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, marginCallOrders.Count)", span="301-301"];
m38_184 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(issueMarginCallWarning)", span="312-312"];
m38_185 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, marginCallOrders.Count)", span="313-313"];
m38_192 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(issueMarginCallWarning)", span="326-326"];
m38_193 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreNotEqual(0, marginCallOrders.Count)", span="327-327"];
m38_196 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="232-232"];
m38_1058 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43"];
m38_24 [cluster="Unk.Load", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.Load", span=""];
m38_200 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="1486-1486"];
m38_1045 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="type == SecurityType.Equity", span="1488-1488"];
m38_1046 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1489-1489"];
m38_1047 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="type == SecurityType.Forex", span="1490-1490"];
m38_1048 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1491-1491"];
m38_1049 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="type == SecurityType.Future", span="1492-1492"];
m38_1050 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1493-1493"];
m38_1051 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="throw new NotImplementedException(type.ToString());", span="1494-1494"];
m38_1052 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="1486-1486"];
m38_291 [cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70"];
m38_518 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47"];
m38_406 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", span="597-597"];
m38_407 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="decimal leverage = 2m", span="599-599"];
m38_408 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="int amount = 1000", span="600-600"];
m38_409 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="int quantity = (int)(amount * leverage)", span="601-601"];
m38_419 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="security.SetLeverage(leverage)", span="612-612"];
m38_415 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook[''USD''].SetAmount(amount)", span="607-607"];
m38_410 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="602-602"];
m38_423 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="618-618"];
m38_424 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="619-619"];
m38_433 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity, time.AddSeconds(1)) { Price = buyPrice }", span="633-633"];
m38_439 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity, time.AddSeconds(1)) { Price = lowPrice }", span="643-643"];
m38_442 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity - 1, time.AddSeconds(1)) { Price = lowPrice }", span="648-648"];
m38_411 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="603-603"];
m38_414 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="606-606"];
m38_417 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="610-610"];
m38_418 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var security = securities[Symbols.AAPL]", span="611-611"];
m38_412 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var orderProcessor = new OrderProcessor()", span="604-604"];
m38_413 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="605-605"];
m38_431 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="629-629"];
m38_434 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="634-634"];
m38_440 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="644-644"];
m38_443 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="649-649"];
m38_425 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddOrder(order)", span="620-620"];
m38_428 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="623-623"];
m38_429 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="625-625"];
m38_416 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="609-609"];
m38_422 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="616-616"];
m38_426 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="621-621"];
m38_438 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="640-640"];
m38_420 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var time = DateTime.Now", span="614-614"];
m38_421 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="decimal buyPrice = 1m", span="615-615"];
m38_430 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = buyPrice }", span="628-628"];
m38_436 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="time = time.AddDays(1)", span="638-638"];
m38_437 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="decimal lowPrice = buyPrice / 2", span="639-639"];
m38_427 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="request.SetOrderId(0)", span="622-622"];
m38_432 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(sufficientCapital)", span="630-630"];
m38_435 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(sufficientCapital)", span="635-635"];
m38_441 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(sufficientCapital)", span="645-645"];
m38_444 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(sufficientCapital)", span="650-650"];
m38_445 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", span="597-597"];
m38_258 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m38_520 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m38_519 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", span="1497-1497"];
m38_1056 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: return new OptionSymbolProperties(SymbolPropertiesDatabase.FromDataFolder().GetSymbolProperties(symbol.ID.Market, symbol, symbol.SecurityType, CashBook.AccountCurrency));", span="1499-1499"];
m38_1057 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", span="1497-1497"];
m38_1014 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", span="1442-1442"];
m38_1015 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1444-1444"];
m38_1016 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1445-1445"];
m38_1020 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1450-1450"];
m38_1021 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1451-1451"];
m38_1017 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1446-1446"];
m38_1019 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1448-1448"];
m38_1024 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1457-1457"];
m38_1025 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1458-1458"];
m38_1026 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1459-1459"];
m38_1027 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -2)", span="1460-1460"];
m38_1028 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1462-1462"];
m38_1029 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1463-1463"];
m38_1031 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1465-1465"];
m38_1037 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1478-1478"];
m38_1039 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1480-1480"];
m38_1040 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: Assert.AreEqual(-1, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1483-1483"];
m38_1018 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1447-1447"];
m38_1022 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1452-1452"];
m38_1030 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1464-1464"];
m38_1023 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: portfolio.SetCash((192 - 189) * 100)", span="1455-1455"];
m38_1036 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1474-1474"];
m38_1038 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1479-1479"];
m38_1032 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1466-1466"];
m38_1033 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1468-1468"];
m38_1034 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1471-1471"];
m38_1035 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1472-1472"];
m38_1041 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", span="1442-1442"];
m38_203 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m38_361 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="549-549"];
m38_362 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var securityExchangeHours = SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="551-551"];
m38_363 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="552-552"];
m38_367 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.AAPL, new QuantConnect.Securities.Equity.Equity(securityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="556-556"];
m38_391 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var marketOpen = securityExchangeHours.MarketHours[timeUtc.DayOfWeek].GetMarketOpen(TimeSpan.Zero, false)", span="588-588"];
m38_393 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="timeUtc = timeUtc.AddDays(1).Date.Add(marketOpen.Value).ConvertToUtc(securityExchangeHours.TimeZone)", span="590-590"];
m38_364 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="553-553"];
m38_365 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="554-554"];
m38_368 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var security = securities[Symbols.AAPL]", span="557-557"];
m38_366 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(1000)", span="555-555"];
m38_371 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(1000, portfolio.Cash)", span="560-560"];
m38_372 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="561-561"];
m38_376 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="567-567"];
m38_378 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-1, portfolio.Cash)", span="569-569"];
m38_379 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="570-570"];
m38_383 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="576-576"];
m38_385 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-2, portfolio.Cash)", span="578-578"];
m38_386 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="579-579"];
m38_388 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ScanForCashSettlement(timeUtc)", span="583-583"];
m38_389 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-2, portfolio.Cash)", span="584-584"];
m38_390 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="585-585"];
m38_394 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ScanForCashSettlement(timeUtc)", span="591-591"];
m38_395 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(998, portfolio.Cash)", span="592-592"];
m38_396 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="593-593"];
m38_369 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="security.SettlementModel = new DelayedSettlementModel(3, TimeSpan.FromHours(8))", span="558-558"];
m38_370 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="559-559"];
m38_374 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var orderFee = security.FeeModel.GetOrderFee(security,new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="565-565"];
m38_377 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(10, security.Holdings.Quantity)", span="568-568"];
m38_381 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="574-574"];
m38_384 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="577-577"];
m38_373 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var timeUtc = new DateTime(2015, 10, 26, 15, 30, 0)", span="564-564"];
m38_375 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Buy, 100, 10, orderFee)", span="566-566"];
m38_380 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="timeUtc = timeUtc.AddDays(1)", span="573-573"];
m38_382 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="fill = new OrderEvent(2, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Sell, 100, -10, orderFee)", span="575-575"];
m38_387 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="timeUtc = timeUtc.AddDays(2)", span="582-582"];
m38_392 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(marketOpen.HasValue)", span="589-589"];
m38_397 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="549-549"];
m38_117 [cluster="decimal.ToString(string)", file="SecurityPortfolioManagerTests.cs", label="Entry decimal.ToString(string)", span="0-0"];
m38_202 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m38_256 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m38_293 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", span="451-451"];
m38_294 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="453-453"];
m38_295 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="454-454"];
m38_296 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="455-455"];
m38_298 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), new SymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 50, 0.01m, 1)))", span="458-458"];
m38_301 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100 * 100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.TotalSaleVolume)", span="463-463"];
m38_304 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(2 * 100 * 100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.TotalSaleVolume)", span="468-468"];
m38_297 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="456-456"];
m38_300 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fillBuy)", span="461-461"];
m38_303 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fillSell)", span="466-466"];
m38_299 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="460-460"];
m38_302 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 100, -100, 0)", span="465-465"];
m38_305 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", span="451-451"];
m38_1090 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="1545-1545"];
m38_1091 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="SecurityPortfolioManagerTests.cs", label="return _orders.Values.Where(filter ?? (x => true));", span="1547-1547"];
m38_1092 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="1545-1545"];
m38_306 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="472-472"];
m38_307 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="474-474"];
m38_308 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="475-475"];
m38_309 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="476-476"];
m38_311 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="479-479"];
m38_315 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="485-485"];
m38_310 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="477-477"];
m38_313 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="482-482"];
m38_314 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="484-484"];
m38_312 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="481-481"];
m38_316 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="472-472"];
m38_32 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m38_49 [cluster="OrderEvent.cstr", file="SecurityPortfolioManagerTests.cs", label="Entry OrderEvent.cstr", span=""];
m38_212 [cluster="Unk.IsFalse", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.IsFalse", span=""];
m38_275 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", span="106-106"];
m38_405 [cluster="System.DateTime.Add(System.TimeSpan)", file="SecurityPortfolioManagerTests.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m38_25 [cluster="Unk.Descendants", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.Descendants", span=""];
m38_30 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m38_50 [cluster="Unk.>", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.>", span=""];
m38_1069 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityPortfolioManagerTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m38_199 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m38_292 [cluster="string.ToUpper()", file="SecurityPortfolioManagerTests.cs", label="Entry string.ToUpper()", span="0-0"];
m38_1064 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="1521-1521"];
m38_1065 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="SecurityPortfolioManagerTests.cs", label="Order order", span="1523-1523"];
m38_1066 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="SecurityPortfolioManagerTests.cs", label="_orders.TryGetValue(orderId, out order)", span="1524-1524"];
m38_1067 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="SecurityPortfolioManagerTests.cs", label="return order;", span="1525-1525"];
m38_1068 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="1521-1521"];
m38_515 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49"];
m38_43 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m38_204 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="1511-1511"];
m38_1060 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="SecurityPortfolioManagerTests.cs", label="_orders[order.Id] = order", span="1513-1513"];
m38_1061 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="1511-1511"];
m38_29 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m38_403 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m38_528 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", span="754-754"];
m38_529 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="756-756"];
m38_530 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="757-757"];
m38_534 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="762-762"];
m38_535 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="763-763"];
m38_531 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="758-758"];
m38_533 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="760-760"];
m38_538 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="768-768"];
m38_539 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="769-769"];
m38_540 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="770-770"];
m38_541 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 20 })", span="771-771"];
m38_542 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="773-773"];
m38_543 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="774-774"];
m38_545 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="776-776"];
m38_549 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="785-785"];
m38_553 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="791-791"];
m38_532 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="759-759"];
m38_536 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="764-764"];
m38_544 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="775-775"];
m38_537 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="766-766"];
m38_548 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="782-782"];
m38_550 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="786-786"];
m38_546 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="778-778"];
m38_547 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label=fills, span="780-780"];
m38_551 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.Quantity)", span="787-787"];
m38_552 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.AveragePrice)", span="788-788"];
m38_554 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", span="754-754"];
m38_114 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m38_110 [cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="37-37"];
m38_217 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="333-333"];
m38_218 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="335-335"];
m38_219 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="336-336"];
m38_222 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="339-339"];
m38_231 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(new Security(SecurityExchangeHours, config1, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="350-350"];
m38_232 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.AAPL].SetLeverage(2m)", span="351-351"];
m38_233 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="352-352"];
m38_234 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.AAPL].SetMarketPrice(new TradeBar{Time = time, Value = 100})", span="353-353"];
m38_236 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, config2, SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="360-360"];
m38_237 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.EURUSD].SetLeverage(100m)", span="361-361"];
m38_238 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.EURUSD].Holdings.SetHoldings(1.1m, 1000)", span="362-362"];
m38_239 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.EURUSD].SetMarketPrice(new TradeBar { Time = time, Value = 1.1m })", span="363-363"];
m38_241 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, gbpCash, config3, SymbolProperties.GetDefault(gbpCash.Symbol)))", span="370-370"];
m38_242 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.EURGBP].SetLeverage(100m)", span="371-371"];
m38_243 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.EURGBP].Holdings.SetHoldings(1m, 1000)", span="372-372"];
m38_244 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.EURGBP].SetMarketPrice(new TradeBar { Time = time, Value = 1m })", span="373-373"];
m38_220 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var orderProcessor = new OrderProcessor()", span="337-337"];
m38_221 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="338-338"];
m38_250 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, acceptedOrder)", span="396-396"];
m38_253 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, rejectedOrder)", span="400-400"];
m38_246 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddOrder(acceptedOrder)", span="392-392"];
m38_249 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="395-395"];
m38_223 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook[''USD''].SetAmount(1000)", span="340-340"];
m38_224 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook.Add(''EUR'',  1000, 1.1m)", span="341-341"];
m38_225 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook.Add(''GBP'', -1000, 2.0m)", span="342-342"];
m38_226 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var eurCash = portfolio.CashBook[''EUR'']", span="344-344"];
m38_227 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var gbpCash = portfolio.CashBook[''GBP'']", span="345-345"];
m38_228 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var usdCash = portfolio.CashBook[''USD'']", span="346-346"];
m38_229 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var time = DateTime.Now", span="348-348"];
m38_230 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var config1 = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="349-349"];
m38_235 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var config2 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD)", span="359-359"];
m38_240 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var config3 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURGBP)", span="369-369"];
m38_245 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var acceptedOrder = new MarketOrder(Symbols.AAPL, 101, DateTime.Now) { Price = 100 }", span="391-391"];
m38_247 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var request = new SubmitOrderRequest(OrderType.Market, acceptedOrder.SecurityType, acceptedOrder.Symbol, acceptedOrder.Quantity, 0, 0, acceptedOrder.Time, null)", span="393-393"];
m38_248 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="request.SetOrderId(0)", span="394-394"];
m38_251 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(sufficientCapital)", span="397-397"];
m38_252 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="var rejectedOrder = new MarketOrder(Symbols.AAPL, 102, DateTime.Now) { Price = 100 }", span="399-399"];
m38_254 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(sufficientCapital)", span="401-401"];
m38_255 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="333-333"];
m38_342 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="526-526"];
m38_343 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="528-528"];
m38_344 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="529-529"];
m38_345 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="530-530"];
m38_348 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.EURUSD, new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, portfolio.CashBook[''USD''], CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="534-534"];
m38_349 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var security = securities[Symbols.EURUSD]", span="535-535"];
m38_346 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(1000)", span="531-531"];
m38_347 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="portfolio.CashBook.Add(''EUR'', 0, 1.1000m)", span="532-532"];
m38_351 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(1000, portfolio.Cash)", span="537-537"];
m38_354 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="portfolio.ProcessFill(fill)", span="541-541"];
m38_356 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(998, portfolio.Cash)", span="543-543"];
m38_357 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100, portfolio.CashBook[''EUR''].Amount)", span="544-544"];
m38_358 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(888, portfolio.CashBook[''USD''].Amount)", span="545-545"];
m38_350 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="536-536"];
m38_352 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.EURUSD, 100, DateTime.MinValue))", span="539-539"];
m38_355 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(100, security.Holdings.Quantity)", span="542-542"];
m38_353 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="var fill = new OrderEvent(1, Symbols.EURUSD, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 1.1000m, 100, orderFee)", span="540-540"];
m38_359 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="526-526"];
m38_360 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m38_210 [cluster="System.DateTime.AddSeconds(double)", file="SecurityPortfolioManagerTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m38_521 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m38_116 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SecurityPortfolioManagerTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m38_860 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", span="1224-1224"];
m38_861 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1226-1226"];
m38_862 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1227-1227"];
m38_867 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1233-1233"];
m38_863 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1228-1228"];
m38_865 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1230-1230"];
m38_870 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1238-1238"];
m38_871 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1239-1239"];
m38_872 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1240-1240"];
m38_873 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -10)", span="1241-1241"];
m38_874 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1243-1243"];
m38_875 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1244-1244"];
m38_883 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 150 })", span="1254-1254"];
m38_864 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var orderProcessor = new OrderProcessor()", span="1229-1229"];
m38_868 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="1234-1234"];
m38_881 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1251-1251"];
m38_889 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1261-1261"];
m38_877 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddOrder(order)", span="1247-1247"];
m38_880 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1250-1250"];
m38_885 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddOrder(order)", span="1257-1257"];
m38_888 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1260-1260"];
m38_866 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var time = DateTime.Now", span="1232-1232"];
m38_869 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(1000)", span="1236-1236"];
m38_876 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, -10, time.AddSeconds(1))", span="1246-1246"];
m38_884 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, -10, time.AddSeconds(1))", span="1256-1256"];
m38_878 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1248-1248"];
m38_886 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1258-1258"];
m38_879 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="request.SetOrderId(0)", span="1249-1249"];
m38_882 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(sufficientCapital)", span="1252-1252"];
m38_887 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="request.SetOrderId(0)", span="1259-1259"];
m38_890 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(sufficientCapital)", span="1262-1262"];
m38_891 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", span="1224-1224"];
m38_215 [cluster="Unk.AreNotEqual", file="SecurityPortfolioManagerTests.cs", label="Entry Unk.AreNotEqual", span=""];
m38_257 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m38_404 [cluster="QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", span="172-172"];
m38_827 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", span="1182-1182"];
m38_828 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1184-1184"];
m38_829 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1185-1185"];
m38_834 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1191-1191"];
m38_830 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1186-1186"];
m38_832 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1188-1188"];
m38_837 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1196-1196"];
m38_838 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1197-1197"];
m38_839 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1198-1198"];
m38_840 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 10)", span="1199-1199"];
m38_841 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1201-1201"];
m38_842 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1202-1202"];
m38_850 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 150 })", span="1212-1212"];
m38_831 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var orderProcessor = new OrderProcessor()", span="1187-1187"];
m38_835 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="1192-1192"];
m38_848 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1209-1209"];
m38_856 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1219-1219"];
m38_844 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddOrder(order)", span="1205-1205"];
m38_847 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1208-1208"];
m38_852 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddOrder(order)", span="1215-1215"];
m38_855 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1218-1218"];
m38_833 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var time = DateTime.Now", span="1190-1190"];
m38_836 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(1000)", span="1194-1194"];
m38_843 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, 10, time.AddSeconds(1))", span="1204-1204"];
m38_851 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, 10, time.AddSeconds(1))", span="1214-1214"];
m38_845 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1206-1206"];
m38_853 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1216-1216"];
m38_846 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="request.SetOrderId(0)", span="1207-1207"];
m38_849 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsFalse(sufficientCapital)", span="1210-1210"];
m38_854 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="request.SetOrderId(0)", span="1217-1217"];
m38_857 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="Assert.IsTrue(sufficientCapital)", span="1220-1220"];
m38_858 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", span="1182-1182"];
m38_952 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", span="1351-1351"];
m38_953 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1353-1353"];
m38_954 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1354-1354"];
m38_958 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1359-1359"];
m38_959 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1360-1360"];
m38_955 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1355-1355"];
m38_957 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1357-1357"];
m38_962 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1365-1365"];
m38_963 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1366-1366"];
m38_964 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 10 })", span="1367-1367"];
m38_965 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -100)", span="1368-1368"];
m38_966 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -100, 0, 0, securities.UtcTime, ''''))", span="1370-1370"];
m38_967 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1371-1371"];
m38_969 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1373-1373"];
m38_975 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1387-1387"];
m38_977 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1389-1389"];
m38_978 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1392-1392"];
m38_956 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1356-1356"];
m38_960 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1361-1361"];
m38_968 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1372-1372"];
m38_961 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="portfolio.SetCash(0)", span="1363-1363"];
m38_974 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1383-1383"];
m38_976 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1388-1388"];
m38_970 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1374-1374"];
m38_971 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1376-1376"];
m38_972 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1379-1379"];
m38_973 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1381-1381"];
m38_979 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", span="1351-1351"];
m38_710 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", span="1014-1014"];
m38_711 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var algorithm = new QCAlgorithm()", span="1016-1016"];
m38_712 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1017-1017"];
m38_716 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="algorithm.Securities = securities", span="1022-1022"];
m38_717 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1023-1023"];
m38_713 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1018-1018"];
m38_715 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1020-1020"];
m38_720 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1029-1029"];
m38_721 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1030-1030"];
m38_722 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -2)", span="1031-1031"];
m38_723 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1033-1033"];
m38_724 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1034-1034"];
m38_726 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="option.Underlying = securities[Symbols.SPY]", span="1036-1036"];
m38_731 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1050-1050"];
m38_735 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: Assert.AreEqual(-1, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1056-1056"];
m38_714 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1019-1019"];
m38_718 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1024-1024"];
m38_725 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1035-1035"];
m38_719 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="0: portfolio.SetCash(192 * 100)", span="1027-1027"];
m38_730 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1045-1045"];
m38_732 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1051-1051"];
m38_727 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1038-1038"];
m38_728 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1041-1041"];
m38_729 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label=fills, span="1043-1043"];
m38_733 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", color=red, community=0, file="SecurityPortfolioManagerTests.cs", label="1: Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="1052-1052"];
m38_734 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="1053-1053"];
m38_736 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", span="1014-1014"];
m38_399 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65"];
m38_1100 [file="SecurityPortfolioManagerTests.cs", label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", span=""];
m38_1101 [file="SecurityPortfolioManagerTests.cs", label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", span=""];
m38_1102 [file="SecurityPortfolioManagerTests.cs", label=string, span=""];
m40_49 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="141-141"];
m40_50 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="StopLimitOrderTestParameters.cs", label="d == 0", span="143-143"];
m40_52 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="StopLimitOrderTestParameters.cs", label="var scale = Math.Pow(10, Math.Floor(Math.Log10(Math.Abs(d))) + 1)", span="144-144"];
m40_53 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="StopLimitOrderTestParameters.cs", label="return scale * Math.Round(d / scale, digits);", span="145-145"];
m40_51 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="StopLimitOrderTestParameters.cs", label="return 0;", span="143-143"];
m40_54 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="141-141"];
m40_55 [cluster="System.Math.Abs(double)", file="StopLimitOrderTestParameters.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m40_21 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="throw new FormatException(''Unexpected path format: '' + path);", span="71-71"];
m40_22 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var market = parts[parts.Length - offset + 1]", span="75-75"];
m40_23 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var resolution = (Resolution) Enum.Parse(typeof (Resolution), parts[parts.Length - offset + 2], true)", span="76-76"];
m40_24 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var ticker = offset == 4 ? Path.GetFileNameWithoutExtension(path) : parts[parts.Length - offset + 3]", span="77-77"];
m40_25 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var date = offset == 4 ? DateTime.MinValue : DateTime.ParseExact(filename.Substring(0, filename.IndexOf(''_'', StringComparison.Ordinal)), DateFormat.EightCharacter, null)", span="78-78"];
m40_20 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="!Enum.TryParse(rawValue, true, out securityType)", span="69-69"];
m40_140 [cluster="System.Timers.Timer.Stop()", file="StopLimitOrderTestParameters.cs", label="Entry System.Timers.Timer.Stop()", span="0-0"];
m40_44 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="129-129"];
m40_9 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var fileinfo = new FileInfo(path)", span="54-54"];
m40_10 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var filename = fileinfo.Name", span="55-55"];
m40_11 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var parts = path.Split('/', '\\')", span="56-56"];
m40_12 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="parts.Length < 4", span="57-57"];
m40_13 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="throw new FormatException(''Unexpected path format: '' + path);", span="59-59"];
m40_41 [cluster="string.IndexOf(string, System.StringComparison)", file="StopLimitOrderTestParameters.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m40_95 [cluster="System.Collections.Generic.List<T>.List()", file="StopLimitOrderTestParameters.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m40_131 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="300-300"];
m40_132 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="d == TimeSpan.Zero", span="302-302"];
m40_133 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="return time;", span="305-305"];
m40_134 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="return new DateTime(((time.Ticks + d.Ticks - 1) / d.Ticks) * d.Ticks);", span="307-307"];
m40_135 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="300-300"];
m40_36 [cluster="string.Split(params char[])", file="StopLimitOrderTestParameters.cs", label="Entry string.Split(params char[])", span="0-0"];
m40_14 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var offset = 4", span="62-62"];
m40_108 [cluster="System.IO.StreamWriter.Flush()", file="StopLimitOrderTestParameters.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m40_38 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", file="StopLimitOrderTestParameters.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0"];
m40_129 [cluster="System.DateTime.DateTime(long)", file="StopLimitOrderTestParameters.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m40_166 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="Entry lambda expression", span="350-350"];
m40_47 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m40_46 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="87-87"];
m40_48 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="QuantConnect.ToolBox.LeanDataPathComponents", span=""];
m40_160 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="x.GetType().AssemblyQualifiedName == typeName", span="336-336"];
m40_164 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="x.GetType().FullName == typeName", span="343-343"];
m40_167 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="x.GetType().Name == typeName", span="350-350"];
m40_159 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="Entry lambda expression", span="336-336"];
m40_163 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="Entry lambda expression", span="343-343"];
m40_161 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="Exit lambda expression", span="336-336"];
m40_165 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="Exit lambda expression", span="343-343"];
m40_168 [cluster="lambda expression", file="StopLimitOrderTestParameters.cs", label="Exit lambda expression", span="350-350"];
m40_42 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="129-129"];
m40_162 [cluster="Unk.GetType", file="StopLimitOrderTestParameters.cs", label="Entry Unk.GetType", span=""];
m40_58 [cluster="System.Math.Pow(double, double)", file="StopLimitOrderTestParameters.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m40_26 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="Symbol symbol", span="80-80"];
m40_125 [cluster="System.DateTime.AddTicks(long)", file="StopLimitOrderTestParameters.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m40_114 [cluster="System.TimeSpan.TimeSpan(long)", file="StopLimitOrderTestParameters.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m40_0 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.ToolBox.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime)", span="35-35"];
m40_1 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime)", file="StopLimitOrderTestParameters.cs", label="Date = date", span="37-37"];
m40_2 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime)", file="StopLimitOrderTestParameters.cs", label="SecurityType = securityType", span="38-38"];
m40_3 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime)", file="StopLimitOrderTestParameters.cs", label="Market = market", span="39-39"];
m40_4 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime)", file="StopLimitOrderTestParameters.cs", label="Resolution = resolution", span="40-40"];
m40_5 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime)", file="StopLimitOrderTestParameters.cs", label="Filename = filename", span="41-41"];
m40_6 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime)", file="StopLimitOrderTestParameters.cs", label="Symbol = symbol", span="42-42"];
m40_97 [cluster="QuantConnect.Extensions.ToStream(string)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.ToStream(string)", span="218-218"];
m40_98 [cluster="QuantConnect.Extensions.ToStream(string)", file="StopLimitOrderTestParameters.cs", label="var stream = new MemoryStream()", span="220-220"];
m40_100 [cluster="QuantConnect.Extensions.ToStream(string)", file="StopLimitOrderTestParameters.cs", label="writer.Write(str)", span="222-222"];
m40_99 [cluster="QuantConnect.Extensions.ToStream(string)", file="StopLimitOrderTestParameters.cs", label="var writer = new StreamWriter(stream)", span="221-221"];
m40_102 [cluster="QuantConnect.Extensions.ToStream(string)", file="StopLimitOrderTestParameters.cs", label="stream.Position = 0", span="224-224"];
m40_103 [cluster="QuantConnect.Extensions.ToStream(string)", file="StopLimitOrderTestParameters.cs", label="return stream;", span="225-225"];
m40_101 [cluster="QuantConnect.Extensions.ToStream(string)", file="StopLimitOrderTestParameters.cs", label="writer.Flush()", span="223-223"];
m40_104 [cluster="QuantConnect.Extensions.ToStream(string)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.ToStream(string)", span="218-218"];
m40_120 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="271-271"];
m40_121 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="interval == TimeSpan.Zero", span="273-273"];
m40_122 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="return dateTime;", span="276-276"];
m40_123 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="return dateTime.AddTicks(-(dateTime.Ticks % interval.Ticks));", span="278-278"];
m40_124 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="271-271"];
m40_116 [cluster="System.Convert.ToInt64(decimal)", file="StopLimitOrderTestParameters.cs", label="Entry System.Convert.ToInt64(decimal)", span="0-0"];
m40_142 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", span="330-330"];
m40_143 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="var values = container.GetExportedValues<T>().ToList()", span="333-333"];
m40_144 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="var value = values.FirstOrDefault(x => x.GetType().AssemblyQualifiedName == typeName)", span="336-336"];
m40_147 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="value = values.FirstOrDefault(x => x.GetType().FullName == typeName)", span="343-343"];
m40_150 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="value = values.FirstOrDefault(x => x.GetType().Name == typeName)", span="350-350"];
m40_152 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="throw new ArgumentException(''Unable to locate any exports matching the requested typeName: '' + typeName, ''typeName'');", span="353-353"];
m40_145 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="value != null", span="337-337"];
m40_146 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="return value;", span="339-339"];
m40_148 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="value != null", span="344-344"];
m40_149 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="return value;", span="346-346"];
m40_151 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="value == null", span="351-351"];
m40_153 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="return value;", span="356-356"];
m40_154 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", span="330-330"];
m40_141 [cluster="System.Timers.Timer.Start()", file="StopLimitOrderTestParameters.cs", label="Entry System.Timers.Timer.Start()", span="0-0"];
m40_37 [cluster="System.Text.Encoding.GetBytes(string)", file="StopLimitOrderTestParameters.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m40_56 [cluster="System.Math.Log10(double)", file="StopLimitOrderTestParameters.cs", label="Entry System.Math.Log10(double)", span="0-0"];
m40_156 [cluster="Unk.ToList", file="StopLimitOrderTestParameters.cs", label="Entry Unk.ToList", span=""];
m40_40 [cluster="System.Text.StringBuilder.Append(string)", file="StopLimitOrderTestParameters.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m40_130 [cluster="System.TimeSpan.Round(System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Entry System.TimeSpan.Round(System.TimeSpan)", span="259-259"];
m40_107 [cluster="System.IO.StreamWriter.Write(string)", file="StopLimitOrderTestParameters.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m40_155 [cluster="Unk.>", file="StopLimitOrderTestParameters.cs", label="Entry Unk.>", span=""];
m40_43 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="StopLimitOrderTestParameters.cs", label="dictionary.AddOrUpdate(key, value, (oldkey, oldvalue) => value)", span="131-131"];
m40_96 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="StopLimitOrderTestParameters.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m40_157 [cluster="Unk.FirstOrDefault", file="StopLimitOrderTestParameters.cs", label="Entry Unk.FirstOrDefault", span=""];
m40_8 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", span="50-50"];
m40_27 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="securityType == SecurityType.Option", span="81-81"];
m40_28 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var withoutExtension = Path.GetFileNameWithoutExtension(filename)", span="83-83"];
m40_30 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="var style = (OptionStyle) Enum.Parse(typeof (OptionStyle), rawValue, true)", span="85-85"];
m40_29 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="rawValue = withoutExtension.Substring(withoutExtension.LastIndexOf(''_'', StringComparison.Ordinal) + 1)", span="84-84"];
m40_32 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="symbol = Symbol.Create(ticker, securityType, market)", span="90-90"];
m40_33 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="return new LeanDataPathComponents(securityType, market, resolution, symbol, filename, date);", span="93-93"];
m40_31 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="symbol = Symbol.CreateOption(ticker, market, style, OptionRight.Call | OptionRight.Put, 0, SecurityIdentifier.DefaultDate)", span="86-86"];
m40_34 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", span="50-50"];
m40_15 [cluster="QuantConnect.ToolBox.LeanDataPathComponents.Parse(string)", file="StopLimitOrderTestParameters.cs", label="SecurityType securityType", span="63-63"];
m40_45 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="StopLimitOrderTestParameters.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m40_94 [cluster="string.Substring(int)", file="StopLimitOrderTestParameters.cs", label="Entry string.Substring(int)", span="0-0"];
m40_117 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="259-259"];
m40_118 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="return Round(time, roundingInterval, MidpointRounding.ToEven);", span="261-261"];
m40_119 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="259-259"];
m40_17 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", color=green, community=0, file="StopLimitOrderTestParameters.cs", label="0: T item", span="85-85"];
m40_16 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="83-83"];
m40_18 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="StopLimitOrderTestParameters.cs", label="queue.TryDequeue(out item)", span="86-86"];
m40_19 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="83-83"];
m40_7 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="StopLimitOrderTestParameters.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m40_60 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.ToDecimal(string)", span="155-155"];
m40_61 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="long value = 0", span="157-157"];
m40_66 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="i < str.Length", span="162-162"];
m40_67 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="var ch = str[i]", span="164-164"];
m40_62 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="var exp = 0", span="158-158"];
m40_69 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="value >= maxValueDivideTen", span="167-167"];
m40_70 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="value >>= 1", span="169-169"];
m40_72 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="value = value * 10 + (ch - '0')", span="172-172"];
m40_83 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="return (decimal)value / divider;", span="190-190"];
m40_84 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="return (decimal)value;", span="193-193"];
m40_63 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="var decimalPlaces = int.MinValue", span="159-159"];
m40_71 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="exp++", span="170-170"];
m40_64 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="long maxValueDivideTen = (long.MaxValue/10)", span="160-160"];
m40_73 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="decimalPlaces++", span="173-173"];
m40_77 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="decimalPlaces > 0", span="185-185"];
m40_80 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="i < decimalPlaces", span="188-188"];
m40_65 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="var i = 0", span="162-162"];
m40_76 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="i++", span="162-162"];
m40_68 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="ch >= '0' && ch <= '9'", span="165-165"];
m40_74 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="ch == '.'", span="175-175"];
m40_75 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="decimalPlaces = 0", span="177-177"];
m40_78 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="var divider = 10", span="187-187"];
m40_79 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="var i = 1", span="188-188"];
m40_81 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="divider *= 10", span="188-188"];
m40_82 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="i++", span="188-188"];
m40_85 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.ToDecimal(string)", span="155-155"];
m40_59 [cluster="System.Math.Round(double, int)", file="StopLimitOrderTestParameters.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m40_35 [cluster="System.IO.FileInfo.FileInfo(string)", file="StopLimitOrderTestParameters.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m40_136 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.Reset(System.Timers.Timer)", span="314-314"];
m40_137 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="StopLimitOrderTestParameters.cs", label="timer.Stop()", span="316-316"];
m40_138 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="StopLimitOrderTestParameters.cs", label="timer.Start()", span="317-317"];
m40_139 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.Reset(System.Timers.Timer)", span="314-314"];
m40_57 [cluster="System.Math.Floor(double)", file="StopLimitOrderTestParameters.cs", label="Entry System.Math.Floor(double)", span="0-0"];
m40_106 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="StopLimitOrderTestParameters.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m40_109 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="236-236"];
m40_110 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="StopLimitOrderTestParameters.cs", label="roundingInterval == TimeSpan.Zero", span="238-238"];
m40_111 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="StopLimitOrderTestParameters.cs", label="return time;", span="241-241"];
m40_112 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="StopLimitOrderTestParameters.cs", label="return new TimeSpan(\r\n                Convert.ToInt64(System.Math.Round(\r\n                    time.Ticks / (decimal)roundingInterval.Ticks,\r\n                    roundingType\r\n                )) * roundingInterval.Ticks\r\n            );", span="244-249"];
m40_113 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="236-236"];
m40_126 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="288-288"];
m40_127 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="return new DateTime((datetime - DateTime.MinValue).Round(roundingInterval).Ticks);", span="290-290"];
m40_128 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="288-288"];
m40_158 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StopLimitOrderTestParameters.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m40_39 [cluster="byte.ToString(string)", file="StopLimitOrderTestParameters.cs", label="Entry byte.ToString(string)", span="0-0"];
m40_115 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="StopLimitOrderTestParameters.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m40_86 [cluster="QuantConnect.Extensions.GetExtension(string)", file="StopLimitOrderTestParameters.cs", label="Entry QuantConnect.Extensions.GetExtension(string)", span="202-202"];
m40_87 [cluster="QuantConnect.Extensions.GetExtension(string)", file="StopLimitOrderTestParameters.cs", label="var ext = str.Substring(Math.Max(0, str.Length - 4))", span="203-203"];
m40_88 [cluster="QuantConnect.Extensions.GetExtension(string)", file="StopLimitOrderTestParameters.cs", label="var allowedExt = new List<string>() { ''.zip'', ''.csv'', ''.json'' }", span="204-204"];
m40_89 [cluster="QuantConnect.Extensions.GetExtension(string)", file="StopLimitOrderTestParameters.cs", label="!allowedExt.Contains(ext)", span="205-205"];
m40_91 [cluster="QuantConnect.Extensions.GetExtension(string)", file="StopLimitOrderTestParameters.cs", label="return ext;", span="209-209"];
m40_90 [cluster="QuantConnect.Extensions.GetExtension(string)", file="StopLimitOrderTestParameters.cs", label="ext = ''.custom''", span="207-207"];
m40_92 [cluster="QuantConnect.Extensions.GetExtension(string)", file="StopLimitOrderTestParameters.cs", label="Exit QuantConnect.Extensions.GetExtension(string)", span="202-202"];
m40_93 [cluster="System.Math.Max(int, int)", file="StopLimitOrderTestParameters.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m40_105 [cluster="System.IO.MemoryStream.MemoryStream()", file="StopLimitOrderTestParameters.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m40_169 [file="StopLimitOrderTestParameters.cs", label=V, span=""];
m40_170 [file="StopLimitOrderTestParameters.cs", label=string, span=""];
m41_5 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m41_43 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m41_56 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="consolidator.InputType.IsAssignableFrom(subscription.Type)", span="183-183"];
m41_90 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="251-251"];
m41_91 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SubscriptionManager.cs", label="QuantConnect.Data.SubscriptionManager", span=""];
m41_96 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", span="209-209"];
m41_97 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", span="209-209"];
m41_38 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="106-106"];
m41_25 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Subscriptions.Add(newConfig)", span="140-140"];
m41_26 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="var uniqueCount = Subscriptions\r\n                .Where(x => !x.Symbol.IsCanonical())\r\n                .DistinctBy(x => x.Symbol.Value)\r\n                .Count()", span="143-146"];
m41_27 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="uniqueCount > _algorithmSettings.DataSubscriptionLimit", span="147-147"];
m41_44 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", span="116-116"];
m41_45 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="SubscriptionManager.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _job.AlgorithmId, message, stacktrace))", span="118-118"];
m41_46 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", span="116-116"];
m41_17 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="dataTimeZone == null", span="121-121"];
m41_28 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new Exception(\r\n                    string.Format(\r\n                        ''The maximum number of concurrent market data subscriptions was exceeded ({0}). Please reduce the number of symbols requested or increase the limit using Settings.DataSubscriptionLimit.'',\r\n                        _algorithmSettings.DataSubscriptionLimit));", span="149-152"];
m41_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m41_35 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m41_58 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="return;", span="186-186"];
m41_103 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="SubscriptionManager.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m41_8 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="52-52"];
m41_13 [cluster="lambda expression", file="SubscriptionManager.cs", label="Messages.TryDequeue(out packet)", span="62-62"];
m41_9 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="54-74"];
m41_12 [cluster="lambda expression", file="SubscriptionManager.cs", label="Packet packet", span="61-61"];
m41_11 [cluster="lambda expression", file="SubscriptionManager.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="59-59"];
m41_10 [cluster="lambda expression", file="SubscriptionManager.cs", label="IsActive = true", span="58-58"];
m41_14 [cluster="lambda expression", file="SubscriptionManager.cs", label="_packetHandler(packet)", span="64-64"];
m41_63 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", span="139-139"];
m41_20 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new ArgumentNullException(''exchangeTimeZone'', ''ExchangeTimeZone is a required parameter for new subscriptions.  Set to the time zone the security exchange resides in.'');", span="127-127"];
m41_21 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="var newConfig = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, fillDataForward, extendedMarketHours, isInternalFeed, isCustomData, isFilteredSubscription: isFilteredSubscription, tickType: tickType)", span="131-131"];
m41_22 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Subscriptions.Contains(newConfig)", span="134-134"];
m41_59 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and symbol. '' +\r\n                ''Symbol: {0} does not support input type: {1}. Supported types: {2}.'',\r\n                symbol.Value, \r\n                consolidator.InputType.Name,\r\n                string.Join('','', subscriptions.Select(x => x.Type.Name))));", span="190-194"];
m41_77 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SubscriptionManager.cs", label="!Charts.ContainsKey(update.Name)", span="164-164"];
m41_15 [cluster="lambda expression", file="SubscriptionManager.cs", label="Thread.Sleep(1)", span="67-67"];
m41_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m41_37 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m41_104 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="222-222"];
m41_105 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="SubscriptionManager.cs", label="Messages.Clear()", span="224-224"];
m41_106 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="222-222"];
m41_71 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="149-149"];
m41_7 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m41_16 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m41_88 [cluster="QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="188-188"];
m41_48 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="121-121"];
m41_68 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="144-144"];
m41_87 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="184-184"];
m41_89 [cluster="QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="188-188"];
m41_50 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SubscriptionManager.cs", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="126-126"];
m41_49 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SubscriptionManager.cs", label="!Charts.ContainsKey(chartName)", span="124-124"];
m41_69 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="149-149"];
m41_70 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="SubscriptionManager.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="151-151"];
m41_72 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="154-154"];
m41_73 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SubscriptionManager.cs", label="Sample(''Stockplot: '' + symbol.Value, ''Stockplot: '' + symbol.Value, 0, SeriesType.Line, time, value)", span="156-156"];
m41_75 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m41_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m41_78 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="217-217"];
m41_79 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="return AvailableDataTypes[securityType];", span="219-219"];
m41_80 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="217-217"];
m41_81 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="229-229"];
m41_82 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label=isCanonical, span="231-231"];
m41_83 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="return new List<Tuple<Type, TickType>> { new Tuple<Type, TickType>(typeof(ZipEntryName), TickType.Quote) };", span="233-233"];
m41_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m41_41 [cluster="System.Exception.Exception(string)", file="SubscriptionManager.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m41_42 [cluster="string.Format(string, object)", file="SubscriptionManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m41_6 [cluster="System.Threading.Tasks.Task.Run(System.Action)", file="SubscriptionManager.cs", label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0"];
m41_60 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m41_29 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="SubscriptionManager.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m41_30 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="96-96"];
m41_23 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Run()", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Run()", span="87-87"];
m41_31 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="SubscriptionManager.cs", label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _job.AlgorithmId, _job.CompileId, message))", span="98-98"];
m41_19 [cluster="System.Threading.Thread.Sleep(int)", file="SubscriptionManager.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m41_24 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Run()", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Run()", span="87-87"];
m41_18 [cluster="System.Action<T>.Invoke(T)", file="SubscriptionManager.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m41_32 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="96-96"];
m41_39 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m41_92 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SubscriptionManager.cs", label="QuantConnect.Symbol", span=""];
m41_93 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SubscriptionManager.cs", label="QuantConnect.Resolution", span=""];
m41_0 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m41_1 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="_algorithmSettings = algorithmSettings", span="59-59"];
m41_2 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="_timeKeeper = timeKeeper", span="60-60"];
m41_3 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Subscriptions = new HashSet<SubscriptionDataConfig>()", span="62-62"];
m41_4 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="AvailableDataTypes = DefaultDataTypes()", span="65-65"];
m41_61 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="SubscriptionManager.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370"];
m41_74 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", color=green, community=0, file="SubscriptionManager.cs", label="1: Exit QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="154-154"];
m41_62 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m41_64 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="SubscriptionManager.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value)", span="141-141"];
m41_108 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", span="227-227"];
m41_109 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", span="227-227"];
m41_84 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m41_85 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m41_65 [cluster="Unk.Select", file="SubscriptionManager.cs", label="Entry Unk.Select", span=""];
m41_100 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="217-217"];
m41_101 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="SubscriptionManager.cs", label="_cancellationTokenSource.Cancel()", span="219-219"];
m41_102 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="217-217"];
m41_51 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SubscriptionManager.cs", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="130-130"];
m41_52 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SubscriptionManager.cs", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="132-132"];
m41_53 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SubscriptionManager.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="136-136"];
m41_55 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="SubscriptionManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m41_54 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="121-121"];
m41_57 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="SubscriptionManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="133-133"];
m41_47 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m41_66 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="144-144"];
m41_67 [cluster="string.Format(string, object, object, object)", file="SubscriptionManager.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m41_98 [cluster="QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m41_99 [cluster="QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m41_94 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", file="SubscriptionManager.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", span="205-205"];
m41_95 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", file="SubscriptionManager.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", span="205-205"];
m41_86 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SubscriptionManager.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m41_33 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SubscriptionManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m41_107 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="SubscriptionManager.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="70-70"];
m41_110 [file="SubscriptionManager.cs", label="QuantConnect.Tests.Engine.TestResultHandler", span=""];
m42_24 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m42_25 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="80-80"];
m42_26 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(3, types.Count)", span="82-82"];
m42_27 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[0].Item1)", span="83-83"];
m42_28 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="84-84"];
m42_29 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="85-85"];
m42_30 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="86-86"];
m42_31 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[2].Item1)", span="87-87"];
m42_32 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="88-88"];
m42_33 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m42_41 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="229-229"];
m42_7 [cluster="Unk.AreEqual", file="SubscriptionManagerTests.cs", label="Entry Unk.AreEqual", span=""];
m42_39 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m42_38 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m42_14 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m42_15 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="64-64"];
m42_16 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(3, types.Count)", span="66-66"];
m42_17 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(QuoteBar), types[0].Item1)", span="67-67"];
m42_18 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="68-68"];
m42_19 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="69-69"];
m42_20 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="70-70"];
m42_21 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(OpenInterest), types[2].Item1)", span="71-71"];
m42_22 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="72-72"];
m42_23 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m42_8 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m42_9 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution, true)", span="52-52"];
m42_11 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="55-55"];
m42_12 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="56-56"];
m42_10 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(1, types.Count)", span="54-54"];
m42_13 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m42_40 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m42_6 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="91-91"];
m42_34 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="var timeKeeper = new TimeKeeper(DateTime.UtcNow)", span="93-93"];
m42_36 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="return subscriptionManager.LookupSubscriptionConfigDataTypes(securityType, resolution, isCanonical);", span="95-95"];
m42_35 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="var subscriptionManager = new SubscriptionManager(new AlgorithmSettings(), timeKeeper)", span="94-94"];
m42_37 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="91-91"];
m42_0 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m42_1 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="38-38"];
m42_3 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="41-41"];
m42_4 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="42-42"];
m42_2 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(1, types.Count)", span="40-40"];
m42_5 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m43_57 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="531-531"];
m43_58 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="Symbol.cs", label="_baseAlgorithm.Debug(message)", span="533-533"];
m43_59 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="531-531"];
m43_131 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="704-704"];
m43_133 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="var pyRequests = _algorithm.OnMarginCall(requests) as PyObject", span="710-710"];
m43_139 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="TryConvert(pyRequest, out request)", span="723-723"];
m43_145 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="_baseAlgorithm.OnMarginCall(requests)", span="741-741"];
m43_132 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="Py.GIL()", span="708-708"];
m43_134 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="pyRequests == null || !pyRequests.IsIterable()", span="713-713"];
m43_137 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label=pyRequests, span="720-720"];
m43_138 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="SubmitOrderRequest request", span="722-722"];
m43_140 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="requests.Add(request)", span="725-725"];
m43_144 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="pythonException.Message.Equals(''TypeError : No method matches given arguments'')", span="739-739"];
m43_136 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="requests.Clear()", span="718-718"];
m43_141 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="requests.Count == 0", span="730-730"];
m43_135 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="715-715"];
m43_143 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label=PythonException, span="736-736"];
m43_146 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="throw pythonException;", span="746-746"];
m43_142 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="732-732"];
m43_147 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="704-704"];
m43_152 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="983-983"];
m43_241 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="Symbol.cs", label="result = default(T)", span="985-985"];
m43_242 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="Symbol.cs", label="var type = (Type)pyObject.GetPythonType().AsManagedObject(typeof(Type))", span="986-986"];
m43_244 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="Symbol.cs", label="result = (T)pyObject.AsManagedObject(typeof(T))", span="990-990"];
m43_245 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="Symbol.cs", label="return type == typeof(T);", span="993-993"];
m43_243 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="Symbol.cs", label="type == typeof(T)", span="988-988"];
m43_246 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="983-983"];
m43_45 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="496-496"];
m43_46 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="Symbol.cs", label="return _baseAlgorithm.AddSecurity(securityType, symbol, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="498-498"];
m43_47 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="496-496"];
m43_24 [cluster="Unk.Split", file="Symbol.cs", label="Entry Unk.Split", span=""];
m43_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1221-1221"];
m43_208 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="876-876"];
m43_209 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="Symbol.cs", label="_baseAlgorithm.SetRunTimeError(exception)", span="878-878"];
m43_210 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="876-876"];
m43_188 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="829-829"];
m43_189 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="Symbol.cs", label="_baseAlgorithm.SetBrokerageMessageHandler(brokerageMessageHandler)", span="831-831"];
m43_190 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="829-829"];
m43_23 [cluster="Unk.Repr", file="Symbol.cs", label="Entry Unk.Repr", span=""];
m43_26 [cluster="Unk.ToString", file="Symbol.cs", label="Entry Unk.ToString", span=""];
m43_228 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="919-919"];
m43_229 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="Symbol.cs", label="_baseAlgorithm.SetMaximumOrders(max)", span="921-921"];
m43_230 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="919-919"];
m43_20 [cluster="Unk.HasAttr", file="Symbol.cs", label="Entry Unk.HasAttr", span=""];
m43_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="555-555"];
m43_176 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="801-801"];
m43_177 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="Symbol.cs", label="_baseAlgorithm.PostInitialize()", span="803-803"];
m43_178 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="801-801"];
m43_104 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="640-640"];
m43_106 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="Symbol.cs", label="_algorithm.OnBrokerageReconnect()", span="644-644"];
m43_105 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="Symbol.cs", label="Py.GIL()", span="642-642"];
m43_107 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="640-640"];
m43_41 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="403-403"];
m43_42 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="Symbol.cs", label="_baseAlgorithm.SetOptionChainProvider(optionChainProvider)", span="405-405"];
m43_43 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="403-403"];
m43_200 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="858-858"];
m43_201 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="Symbol.cs", label="_baseAlgorithm.SetCash(symbol, startingCash, conversionRate)", span="860-860"];
m43_202 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="858-858"];
m43_99 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="629-629"];
m43_101 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="Symbol.cs", label="_algorithm.OnBrokerageMessage(messageEvent)", span="633-633"];
m43_100 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="Symbol.cs", label="Py.GIL()", span="631-631"];
m43_102 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="629-629"];
m43_170 [cluster="Unk.OnAssignmentOrderEvent", file="Symbol.cs", label="Entry Unk.OnAssignmentOrderEvent", span=""];
m43_29 [cluster="Unk.SetAttr", file="Symbol.cs", label="Entry Unk.SetAttr", span=""];
m43_6 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="Symbol.cs", label="_util = ImportUtil()", span="66-66"];
m43_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="894-894"];
m43_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="291-291"];
m43_212 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="884-884"];
m43_213 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="Symbol.cs", label="_baseAlgorithm.SetFinishedWarmingUp()", span="886-886"];
m43_214 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="884-884"];
m43_25 [cluster="Unk.Dir", file="Symbol.cs", label="Entry Unk.Dir", span=""];
m43_153 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Symbol.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m43_49 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="509-509"];
m43_50 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="Symbol.cs", label="return _baseAlgorithm.AddFutureContract(symbol, resolution, fillDataForward, leverage);", span="511-511"];
m43_51 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="509-509"];
m43_98 [cluster="Unk.OnBrokerageDisconnect", file="Symbol.cs", label="Entry Unk.OnBrokerageDisconnect", span=""];
m43_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1524-1524"];
m43_61 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="540-540"];
m43_62 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="Symbol.cs", label="_baseAlgorithm.Error(message)", span="542-542"];
m43_63 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="540-540"];
m43_32 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Symbol.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m43_90 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="609-609"];
m43_91 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="Symbol.cs", label="_baseAlgorithm.Log(message)", span="611-611"];
m43_92 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="609-609"];
m43_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="527-527"];
m43_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1047-1047"];
m43_81 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="586-586"];
m43_83 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="Symbol.cs", label="_algorithm.Initialize()", span="590-590"];
m43_82 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="Symbol.cs", label="Py.GIL()", span="588-588"];
m43_84 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="586-586"];
m43_240 [cluster="Unk.ModuleFromString", file="Symbol.cs", label="Entry Unk.ModuleFromString", span=""];
m43_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="596-596"];
m43_0 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ComparesAgainstExternalData()", file="Symbol.cs", label="Entry QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ComparesAgainstExternalData()", span="24-24"];
m43_10 [cluster="Unk.AreEqual", color=green, community=0, file="Symbol.cs", label="1: Entry Unk.AreEqual", span=""];
m43_5 [cluster="QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", file="Symbol.cs", label="Entry QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", span="66-66"];
m43_7 [cluster="lambda expression", file="Symbol.cs", label="Entry lambda expression", span="31-31"];
m43_9 [cluster="lambda expression", file="Symbol.cs", label="Exit lambda expression", span="31-31"];
m43_11 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", color=green, community=0, file="Symbol.cs", label="0: Entry QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", span="37-37"];
m43_8 [cluster="lambda expression", file="Symbol.cs", label="Assert.AreEqual(expected, (double)((AverageDirectionalIndex)ind).Current.Value, epsilon)", span="31-31"];
m43_12 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", file="Symbol.cs", label="var adxIndicator = new AverageDirectionalIndex(''ADX'', 14)", span="39-39"];
m43_3 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ComparesAgainstExternalData()", file="Symbol.cs", label="TestHelper.TestIndicator(adx, ''spy_with_adx.txt'', ''ADX 14'',\r\n                (ind, expected) => Assert.AreEqual(expected, (double)((AverageDirectionalIndex)ind).Current.Value, epsilon)\r\n\r\n            )", span="30-33"];
m43_16 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", file="Symbol.cs", label="adxIndicator.Reset()", span="47-47"];
m43_1 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ComparesAgainstExternalData()", file="Symbol.cs", label="var adx = new AverageDirectionalIndex(''adx'', 14)", span="26-26"];
m43_13 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", file="Symbol.cs", label="TestHelper.GetTradeBarStream(''spy_with_adx.txt'', false)", span="40-40"];
m43_14 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", file="Symbol.cs", label="adxIndicator.Update(data)", span="42-42"];
m43_2 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ComparesAgainstExternalData()", file="Symbol.cs", label="double epsilon = 1", span="28-28"];
m43_4 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ComparesAgainstExternalData()", file="Symbol.cs", label="Exit QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ComparesAgainstExternalData()", span="24-24"];
m43_17 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", file="Symbol.cs", label="Exit QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", span="37-37"];
m43_15 [cluster="QuantConnect.Tests.Indicators.AverageDirectionalIndexTests.ResetsProperly()", file="Symbol.cs", label="Assert.IsTrue(adxIndicator.IsReady)", span="45-45"];
m43_18 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetTradeBarStream(string, bool)", file="Symbol.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.GetTradeBarStream(string, bool)", span="222-222"];
m43_161 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="766-766"];
m43_163 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Symbol.cs", label="_algorithm.OnOrderEvent(newEvent)", span="770-770"];
m43_162 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Symbol.cs", label="Py.GIL()", span="768-768"];
m43_164 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="766-766"];
m43_117 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="669-669"];
m43_119 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="Symbol.cs", label="_algorithm.OnEndOfAlgorithm()", span="673-673"];
m43_118 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="Symbol.cs", label="Py.GIL()", span="671-671"];
m43_120 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="669-669"];
m43_77 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="578-578"];
m43_78 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="Symbol.cs", label="return _baseAlgorithm.GetWarmupHistoryRequests();", span="580-580"];
m43_79 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="578-578"];
m43_175 [cluster="Unk.OnSecuritiesChanged", file="Symbol.cs", label="Entry Unk.OnSecuritiesChanged", span=""];
m43_148 [cluster="Unk.OnMarginCall", file="Symbol.cs", label="Entry Unk.OnMarginCall", span=""];
m43_252 [cluster="object.ToString()", file="Symbol.cs", label="Entry object.ToString()", span="0-0"];
m43_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1761-1761"];
m43_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623"];
m43_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="822-822"];
m43_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636"];
m43_149 [cluster="Unk.IsIterable", file="Symbol.cs", label="Entry Unk.IsIterable", span=""];
m43_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
m43_220 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="902-902"];
m43_221 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="Symbol.cs", label="_baseAlgorithm.SetLiveMode(live)", span="904-904"];
m43_222 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="902-902"];
m43_122 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="680-680"];
m43_124 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="Symbol.cs", label="_algorithm.OnEndOfDay()", span="684-684"];
m43_123 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="Symbol.cs", label="Py.GIL()", span="682-682"];
m43_125 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="680-680"];
m43_192 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="838-838"];
m43_193 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="Symbol.cs", label="_baseAlgorithm.SetBrokerageModel(brokerageModel)", span="840-840"];
m43_194 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="838-838"];
m43_115 [cluster="Unk.OnPythonData", file="Symbol.cs", label="Entry Unk.OnPythonData", span=""];
m43_94 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="617-617"];
m43_96 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="Symbol.cs", label="_algorithm.OnBrokerageDisconnect()", span="621-621"];
m43_95 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="Symbol.cs", label="Py.GIL()", span="619-619"];
m43_97 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="617-617"];
m43_248 [cluster="Unk.AsManagedObject", file="Symbol.cs", label="Entry Unk.AsManagedObject", span=""];
m43_232 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="928-928"];
m43_233 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="Symbol.cs", label="_baseAlgorithm.SetParameters(parameters)", span="930-930"];
m43_234 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="928-928"];
m43_126 [cluster="Unk.OnEndOfDay", file="Symbol.cs", label="Entry Unk.OnEndOfDay", span=""];
m43_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="724-724"];
m43_151 [cluster="System.Collections.Generic.List<T>.Clear()", file="Symbol.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m43_30 [cluster="Unk.Invoke", file="Symbol.cs", label="Entry Unk.Invoke", span=""];
m43_21 [cluster="QuantConnect.Indicators.AverageDirectionalIndex.Reset()", file="Symbol.cs", label="Entry QuantConnect.Indicators.AverageDirectionalIndex.Reset()", span="321-321"];
m43_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1648-1648"];
m43_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1788-1788"];
m43_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1117-1117"];
m43_150 [cluster="System.Exception.Exception(string)", file="Symbol.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m43_86 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="600-600"];
m43_87 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="Symbol.cs", label="return _baseAlgorithm.Liquidate(symbolToLiquidate, tag);", span="602-602"];
m43_88 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="600-600"];
m43_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1467-1467"];
m43_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="471-471"];
m43_121 [cluster="Unk.OnEndOfAlgorithm", file="Symbol.cs", label="Entry Unk.OnEndOfAlgorithm", span=""];
m43_160 [cluster="Unk.OnMarginCallWarning", file="Symbol.cs", label="Entry Unk.OnMarginCallWarning", span=""];
m43_19 [cluster="Unk.GIL", file="Symbol.cs", label="Entry Unk.GIL", span=""];
m43_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1229-1229"];
m43_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="537-537"];
m43_180 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="811-811"];
m43_181 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="Symbol.cs", label="return _baseAlgorithm.RemoveSecurity(symbol);", span="813-813"];
m43_182 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="811-811"];
m43_53 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="522-522"];
m43_54 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="Symbol.cs", label="return _baseAlgorithm.AddOptionContract(symbol, resolution, fillDataForward, leverage);", span="524-524"];
m43_55 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="522-522"];
m43_109 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="651-651"];
m43_111 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="Symbol.cs", label="SubscriptionManager.HasCustomData", span="655-655"];
m43_112 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="Symbol.cs", label="_algorithm.OnPythonData(slice)", span="657-657"];
m43_113 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="Symbol.cs", label="_algorithm.OnData(slice)", span="661-661"];
m43_110 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="Symbol.cs", label="Py.GIL()", span="653-653"];
m43_114 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="651-651"];
m43_249 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="1000-1000"];
m43_250 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="Symbol.cs", label="return _algorithm == null ? base.ToString() : _algorithm.Repr();", span="1002-1002"];
m43_251 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="1000-1000"];
m43_116 [cluster="Unk.OnData", file="Symbol.cs", label="Entry Unk.OnData", span=""];
m43_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m43_73 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="569-569"];
m43_74 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="Symbol.cs", label="return _baseAlgorithm.GetParameter(name);", span="571-571"];
m43_75 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="569-569"];
m43_166 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="778-778"];
m43_168 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="Symbol.cs", label="_algorithm.OnAssignmentOrderEvent(newEvent)", span="782-782"];
m43_167 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="Symbol.cs", label="Py.GIL()", span="780-780"];
m43_169 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="778-778"];
m43_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1029-1029"];
m43_127 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="692-692"];
m43_129 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="Symbol.cs", label="_algorithm.OnEndOfDay(symbol)", span="696-696"];
m43_128 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="Symbol.cs", label="Py.GIL()", span="694-694"];
m43_130 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="692-692"];
m43_156 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="754-754"];
m43_158 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="Symbol.cs", label="_algorithm.OnMarginCallWarning()", span="758-758"];
m43_157 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="Symbol.cs", label="Py.GIL()", span="756-756"];
m43_159 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="754-754"];
m43_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1774-1774"];
m43_85 [cluster="Unk.Initialize", file="Symbol.cs", label="Entry Unk.Initialize", span=""];
m43_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1449-1449"];
m43_37 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="394-394"];
m43_38 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="Symbol.cs", label="_baseAlgorithm.SetAvailableDataTypes(availableDataTypes)", span="396-396"];
m43_39 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="394-394"];
m43_196 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="847-847"];
m43_197 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="Symbol.cs", label="_baseAlgorithm.SetCash(startingCash)", span="849-849"];
m43_198 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="847-847"];
m43_216 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="893-893"];
m43_217 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="Symbol.cs", label="_baseAlgorithm.SetHistoryProvider(historyProvider)", span="895-895"];
m43_218 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="893-893"];
m43_108 [cluster="Unk.OnBrokerageReconnect", file="Symbol.cs", label="Entry Unk.OnBrokerageReconnect", span=""];
m43_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1292-1292"];
m43_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m43_224 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="910-910"];
m43_225 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="Symbol.cs", label="_baseAlgorithm.SetLocked()", span="912-912"];
m43_226 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="910-910"];
m43_65 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="550-550"];
m43_66 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="Symbol.cs", label="return _baseAlgorithm.GetChartUpdates(clearChartData);", span="552-552"];
m43_67 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="550-550"];
m43_165 [cluster="Unk.OnOrderEvent", file="Symbol.cs", label="Entry Unk.OnOrderEvent", span=""];
m43_204 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="867-867"];
m43_205 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="Symbol.cs", label="_baseAlgorithm.SetDateTime(time)", span="869-869"];
m43_206 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="867-867"];
m43_154 [cluster="Unk.Equals", file="Symbol.cs", label="Entry Unk.Equals", span=""];
m43_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="40-40"];
m43_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="926-926"];
m43_103 [cluster="Unk.OnBrokerageMessage", file="Symbol.cs", label="Entry Unk.OnBrokerageMessage", span=""];
m43_247 [cluster="Unk.GetPythonType", file="Symbol.cs", label="Entry Unk.GetPythonType", span=""];
m43_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m43_171 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="790-790"];
m43_173 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="_algorithm.OnSecuritiesChanged(changes)", span="794-794"];
m43_172 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="Py.GIL()", span="792-792"];
m43_174 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="790-790"];
m43_33 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="385-385"];
m43_34 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="Symbol.cs", label="_baseAlgorithm.SetStatus(value)", span="387-387"];
m43_35 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="385-385"];
m43_22 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="Symbol.cs", label=epsilon, span=""];
m43_236 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="Symbol.cs", label="var code =\r\n                ''from clr import AddReference\n'' +\r\n                ''AddReference(\''System\'')\n'' +\r\n                ''AddReference(\''QuantConnect.Common\'')\n'' +\r\n                ''import decimal\n'' +\r\n\r\n                // OnPythonData call OnData after converting the Slice object\r\n                ''def OnPythonData(self, data):\n'' +\r\n                ''    self.OnData(PythonSlice(data))\n'' +\r\n\r\n                // PythonSlice class \r\n                ''class PythonSlice(dict):\n'' +\r\n                ''    def __init__(self, slice):\n'' +\r\n                ''        for data in slice:\n'' +\r\n                ''            self[data.Key] = Data(data.Value)\n'' +\r\n                ''            self[data.Key.Value] = Data(data.Value)\n'' +\r\n\r\n                // Python Data class: Converts custom data (PythonData) into a python object'''\r\n                ''class Data(object):\n'' +\r\n                ''    def __init__(self, data):\n'' +\r\n                ''        members = [attr for attr in dir(data) if not callable(attr) and not attr.startswith(\''__\'')]\n'' +\r\n                ''        for member in members:\n'' +\r\n                ''            setattr(self, member, getattr(data, member))\n'' +\r\n\r\n                ''        if not hasattr(data, 'GetStorageDictionary'): return\n'' +\r\n\r\n                ''        for kvp in data.GetStorageDictionary():\n'' +\r\n                ''           name = kvp.Key.replace('-',' ').replace('.',' ').title().replace(' ', '')\n'' +\r\n                ''           value = decimal.Decimal(kvp.Value) if isinstance(kvp.Value, float) else kvp.Value\n'' +\r\n                ''           setattr(self, name, value)''", span="939-968"];
m43_237 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="Symbol.cs", label="Py.GIL()", span="970-970"];
m43_238 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="Symbol.cs", label="return PythonEngine.ModuleFromString(''AlgorithmPythonUtil'', code);", span="972-972"];
m43_239 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", span="937-937"];
m43_184 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="820-820"];
m43_185 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="Symbol.cs", label="_baseAlgorithm.SetAlgorithmId(algorithmId)", span="822-822"];
m43_186 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="820-820"];
m43_28 [cluster="Unk.Contains", file="Symbol.cs", label="Entry Unk.Contains", span=""];
m43_27 [cluster="Unk.IsSubclass", file="Symbol.cs", label="Entry Unk.IsSubclass", span=""];
m43_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="Symbol.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1213-1213"];
m43_69 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="Symbol.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="559-559"];
m43_70 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="Symbol.cs", label="return _baseAlgorithm.GetLocked();", span="561-561"];
m43_71 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="Symbol.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="559-559"];
m43_253 [file="Symbol.cs", label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", span=""];
m45_5 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="TestResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m45_56 [cluster="QuantConnect.Chart.Chart(string)", file="TestResultHandler.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m45_90 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="192-192"];
m45_91 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="192-192"];
m45_96 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", span="209-209"];
m45_97 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", span="209-209"];
m45_25 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", span="91-91"];
m45_26 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="TestResultHandler.cs", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _job.AlgorithmId, _job.CompileId, message))", span="93-93"];
m45_27 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", span="91-91"];
m45_44 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", span="116-116"];
m45_45 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="TestResultHandler.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _job.AlgorithmId, message, stacktrace))", span="118-118"];
m45_46 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", span="116-116"];
m45_17 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="TestResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m45_28 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", file="TestResultHandler.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74"];
m45_34 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="102-102"];
m45_35 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="102-102"];
m45_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TestResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m45_103 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="TestResultHandler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m45_20 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="77-77"];
m45_21 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="TestResultHandler.cs", label="_job = job", span="84-84"];
m45_22 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="77-77"];
m45_59 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
m45_36 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="106-106"];
m45_37 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="TestResultHandler.cs", label="Messages.Enqueue(new LogPacket(_job.AlgorithmId, message))", span="108-108"];
m45_38 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="106-106"];
m45_104 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="222-222"];
m45_105 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="TestResultHandler.cs", label="Messages.Clear()", span="224-224"];
m45_106 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="222-222"];
m45_43 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m45_7 [cluster="lambda expression", file="TestResultHandler.cs", label="Entry lambda expression", span="52-52"];
m45_9 [cluster="lambda expression", file="TestResultHandler.cs", label="Entry lambda expression", span="54-74"];
m45_8 [cluster="lambda expression", file="TestResultHandler.cs", label="Exit lambda expression", span="52-52"];
m45_10 [cluster="lambda expression", file="TestResultHandler.cs", label="IsActive = true", span="58-58"];
m45_11 [cluster="lambda expression", file="TestResultHandler.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="59-59"];
m45_12 [cluster="lambda expression", file="TestResultHandler.cs", label="Packet packet", span="61-61"];
m45_13 [cluster="lambda expression", file="TestResultHandler.cs", label="Messages.TryDequeue(out packet)", span="62-62"];
m45_14 [cluster="lambda expression", file="TestResultHandler.cs", label="_packetHandler(packet)", span="64-64"];
m45_15 [cluster="lambda expression", file="TestResultHandler.cs", label="Thread.Sleep(1)", span="67-67"];
m45_16 [cluster="lambda expression", file="TestResultHandler.cs", label="Exit lambda expression", span="54-74"];
m45_75 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="159-159"];
m45_76 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label=updates, span="161-161"];
m45_77 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label="!Charts.ContainsKey(update.Name)", span="164-164"];
m45_78 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name, update.ChartType))", span="166-166"];
m45_79 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label="update.Series.Values", span="170-170"];
m45_80 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="173-173"];
m45_81 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit))", span="175-175"];
m45_82 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="179-179"];
m45_83 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="159-159"];
m45_40 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", span="111-111"];
m45_41 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="TestResultHandler.cs", label="Messages.Enqueue(new HandledErrorPacket(_job.AlgorithmId, error, stacktrace))", span="113-113"];
m45_42 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", span="111-111"];
m45_60 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TestResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m45_88 [cluster="QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="188-188"];
m45_89 [cluster="QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="188-188"];
m45_92 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="201-201"];
m45_93 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="201-201"];
m45_0 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="50-50"];
m45_1 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="TestResultHandler.cs", label="_packetHandler = packetHandler ?? (packet => { })", span="52-52"];
m45_2 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="TestResultHandler.cs", label="Messages = new ConcurrentQueue<Packet>()", span="53-53"];
m45_3 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="TestResultHandler.cs", label="Task.Run(() =>\r\n            {\r\n                try\r\n                {\r\n                    IsActive = true;\r\n                    while (!_cancellationTokenSource.IsCancellationRequested)\r\n                    {\r\n                        Packet packet;\r\n                        if (Messages.TryDequeue(out packet))\r\n                        {\r\n                            _packetHandler(packet);\r\n                        }\r\n\r\n                        Thread.Sleep(1);\r\n                    }\r\n                }\r\n                finally\r\n                {\r\n                    IsActive = false;\r\n                }\r\n            })", span="54-74"];
m45_4 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="50-50"];
m45_72 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="154-154"];
m45_73 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="TestResultHandler.cs", label="Sample(''Stockplot: '' + symbol.Value, ''Stockplot: '' + symbol.Value, 0, SeriesType.Line, time, value)", span="156-156"];
m45_74 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="154-154"];
m45_23 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Run()", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Run()", span="87-87"];
m45_24 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Run()", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Run()", span="87-87"];
m45_108 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", span="227-227"];
m45_109 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", span="227-227"];
m45_63 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", span="139-139"];
m45_64 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="TestResultHandler.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value)", span="141-141"];
m45_65 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", span="139-139"];
m45_39 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m45_100 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="217-217"];
m45_101 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="TestResultHandler.cs", label="_cancellationTokenSource.Cancel()", span="219-219"];
m45_102 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="217-217"];
m45_19 [cluster="System.Threading.Thread.Sleep(int)", file="TestResultHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m45_6 [cluster="System.Threading.Tasks.Task.Run(System.Action)", file="TestResultHandler.cs", label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0"];
m45_57 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="TestResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m45_69 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="149-149"];
m45_70 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="TestResultHandler.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="151-151"];
m45_71 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="149-149"];
m45_47 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m45_55 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="TestResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m45_30 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="96-96"];
m45_31 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="TestResultHandler.cs", label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _job.AlgorithmId, _job.CompileId, message))", span="98-98"];
m45_32 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="96-96"];
m45_48 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="121-121"];
m45_49 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="TestResultHandler.cs", label="!Charts.ContainsKey(chartName)", span="124-124"];
m45_50 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="TestResultHandler.cs", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="126-126"];
m45_51 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="TestResultHandler.cs", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="130-130"];
m45_52 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="TestResultHandler.cs", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="132-132"];
m45_53 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="TestResultHandler.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="136-136"];
m45_54 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="121-121"];
m45_18 [cluster="System.Action<T>.Invoke(T)", file="TestResultHandler.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m45_29 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="TestResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m45_62 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TestResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m45_66 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="144-144"];
m45_67 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="TestResultHandler.cs", label="Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Line, time, value, ''%'')", span="146-146"];
m45_68 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="144-144"];
m45_98 [cluster="QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m45_99 [cluster="QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m45_94 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", span="205-205"];
m45_95 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", span="205-205"];
m45_61 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="TestResultHandler.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370"];
m45_86 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="TestResultHandler.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="184-184"];
m45_87 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="TestResultHandler.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="184-184"];
m45_84 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="TestResultHandler.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m45_33 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="TestResultHandler.cs", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
m45_107 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="TestResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71"];
m45_85 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="TestResultHandler.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m45_110 [file="TestResultHandler.cs", label="QuantConnect.Tests.Engine.TestResultHandler", span=""];
m46_136 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Tick.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m46_151 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="Tick.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="283-283"];
m46_48 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", span="177-177"];
m46_49 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="var csv = line.Split(',')", span="179-179"];
m46_51 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Symbol = symbol", span="181-181"];
m46_50 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="180-180"];
m46_52 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Time = DateTime.ParseExact(csv[0], DateFormat.Forex, CultureInfo.InvariantCulture)", span="182-182"];
m46_55 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="185-185"];
m46_56 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="AskPrice = Convert.ToDecimal(csv[2], CultureInfo.InvariantCulture)", span="186-186"];
m46_53 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Value = (BidPrice + AskPrice) / 2", span="183-183"];
m46_54 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="TickType = TickType.Quote", span="184-184"];
m46_57 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", span="177-177"];
m46_14 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="117-117"];
m46_15 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Symbol = original.Symbol", span="119-119"];
m46_16 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Time = new DateTime(original.Time.Ticks)", span="120-120"];
m46_17 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Value = original.Value", span="121-121"];
m46_18 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="BidPrice = original.BidPrice", span="122-122"];
m46_19 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="AskPrice = original.AskPrice", span="123-123"];
m46_20 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Exchange = original.Exchange", span="124-124"];
m46_21 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="SaleCondition = original.SaleCondition", span="125-125"];
m46_22 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Quantity = original.Quantity", span="126-126"];
m46_23 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Suspicious = original.Suspicious", span="127-127"];
m46_25 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="TickType = original.TickType", span="129-129"];
m46_26 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="BidSize = original.BidSize", span="130-130"];
m46_27 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="AskSize = original.AskSize", span="131-131"];
m46_24 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="128-128"];
m46_28 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="117-117"];
m46_153 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="Tick.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57"];
m46_162 [cluster="System.Convert.ToDecimal(decimal)", file="Tick.cs", label="Entry System.Convert.ToDecimal(decimal)", span="0-0"];
m46_154 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="370-370"];
m46_155 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="Value = lastTrade", span="372-372"];
m46_156 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="BidPrice = bidPrice", span="373-373"];
m46_157 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="AskPrice = askPrice", span="374-374"];
m46_158 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="BidSize = bidSize", span="375-375"];
m46_159 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="AskSize = askSize", span="376-376"];
m46_160 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="Quantity = Convert.ToDecimal(volume)", span="377-377"];
m46_161 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="370-370"];
m46_58 [cluster="string.Split(params char[])", file="Tick.cs", label="Entry string.Split(params char[])", span="0-0"];
m46_29 [cluster="System.DateTime.DateTime(long)", file="Tick.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m46_147 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="source += ''#'' + LeanData.GenerateZipEntryName(config.Symbol, date, config.Resolution, config.TickType)", span="356-356"];
m46_142 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="344-344"];
m46_143 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label=isLiveMode, span="346-346"];
m46_145 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="352-352"];
m46_146 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="config.SecurityType == SecurityType.Option ||\r\n                config.SecurityType == SecurityType.Future", span="353-354"];
m46_144 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="349-349"];
m46_148 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.Csv);", span="358-358"];
m46_149 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="344-344"];
m46_39 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m46_40 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="163-163"];
m46_41 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Time = time", span="164-164"];
m46_42 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Symbol = symbol", span="165-165"];
m46_43 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Value = last", span="166-166"];
m46_45 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="BidPrice = bid", span="168-168"];
m46_46 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="AskPrice = ask", span="169-169"];
m46_44 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="TickType = TickType.Quote", span="167-167"];
m46_47 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m46_74 [cluster="System.DateTime.AddMilliseconds(double)", file="Tick.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m46_61 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195"];
m46_62 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="var csv = line.Split(',')", span="197-197"];
m46_64 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Symbol = symbol", span="199-199"];
m46_65 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Time = baseDate.Date.AddMilliseconds(csv[0].ToInt32())", span="200-200"];
m46_66 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Value = csv[1].ToDecimal() / GetScaleFactor(symbol.SecurityType)", span="201-201"];
m46_63 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="198-198"];
m46_68 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Quantity = csv[2].ToDecimal()", span="203-203"];
m46_69 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[3].Trim()", span="204-204"];
m46_70 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="SaleCondition = csv[4]", span="205-205"];
m46_71 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Suspicious = csv[5].ToInt32() == 1", span="206-206"];
m46_67 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Trade", span="202-202"];
m46_72 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195"];
m46_137 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="326-326"];
m46_138 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label=isLiveMode, span="328-328"];
m46_140 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="return new Tick(config, line, date);", span="334-334"];
m46_139 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="return new Tick();", span="331-331"];
m46_141 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="326-326"];
m46_73 [cluster="string.ToInt32()", file="Tick.cs", label="Entry string.ToInt32()", span="297-297"];
m46_78 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215"];
m46_79 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="219-219"];
m46_80 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var scaleFactor = GetScaleFactor(config.SecurityType)", span="222-222"];
m46_81 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="config.SecurityType", span="224-224"];
m46_83 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var csv = line.ToCsv(6)", span="228-228"];
m46_84 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Symbol = config.Symbol", span="229-229"];
m46_85 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="230-230"];
m46_86 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = config.GetNormalizedPrice(csv[1].ToDecimal() / scaleFactor)", span="231-231"];
m46_95 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var csv = line.ToCsv(3)", span="246-246"];
m46_96 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Symbol = config.Symbol", span="247-247"];
m46_98 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="249-249"];
m46_104 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var csv = line.ToCsv(7)", span="259-259"];
m46_105 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType = config.TickType", span="260-260"];
m46_106 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="261-261"];
m46_107 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Symbol = config.Symbol", span="262-262"];
m46_109 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = config.GetNormalizedPrice(csv[1].ToDecimal()/scaleFactor)", span="266-266"];
m46_117 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidPrice = config.GetNormalizedPrice(csv[1].ToDecimal()/scaleFactor)", span="280-280"];
m46_120 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskPrice = config.GetNormalizedPrice(csv[3].ToDecimal()/scaleFactor)", span="285-285"];
m46_82 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Equity", span="226-226"];
m46_93 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Forex", span="243-243"];
m46_102 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Future", span="256-256"];
m46_88 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Quantity = csv[2].ToDecimal()", span="233-233"];
m46_89 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="csv.Count > 3", span="234-234"];
m46_90 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[3]", span="236-236"];
m46_91 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SaleCondition = csv[4]", span="237-237"];
m46_92 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Suspicious = (csv[5] == ''1'')", span="238-238"];
m46_87 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Trade", span="232-232"];
m46_129 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label=Exception, span="312-312"];
m46_94 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Cfd", span="244-244"];
m46_99 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidPrice = csv[1].ToDecimal()", span="250-250"];
m46_100 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskPrice = csv[2].ToDecimal()", span="251-251"];
m46_97 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Quote", span="248-248"];
m46_101 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = (BidPrice + AskPrice) / 2", span="252-252"];
m46_103 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Option", span="257-257"];
m46_110 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Quantity = csv[2].ToDecimal()", span="267-267"];
m46_111 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[3]", span="268-268"];
m46_112 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SaleCondition = csv[4]", span="269-269"];
m46_113 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Suspicious = csv[5] == ''1''", span="270-270"];
m46_115 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = csv[1].ToDecimal()", span="274-274"];
m46_116 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="csv[1].Length != 0", span="278-278"];
m46_118 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidSize = csv[2].ToDecimal()", span="281-281"];
m46_119 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="csv[3].Length != 0", span="283-283"];
m46_121 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskSize = csv[4].ToDecimal()", span="286-286"];
m46_122 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[5]", span="288-288"];
m46_123 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Suspicious = csv[6] == ''1''", span="289-289"];
m46_108 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType == TickType.Trade", span="264-264"];
m46_114 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType == TickType.OpenInterest", span="272-272"];
m46_124 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidPrice != 0", span="291-291"];
m46_125 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskPrice != 0", span="293-293"];
m46_128 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = AskPrice", span="304-304"];
m46_126 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = (BidPrice + AskPrice)/2m", span="295-295"];
m46_127 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = BidPrice", span="299-299"];
m46_130 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Log.Error(err)", span="314-314"];
m46_131 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215"];
m46_135 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Tick.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="270-270"];
m46_59 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Tick.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m46_163 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="383-383"];
m46_164 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="Tick.cs", label="return (TickType == TickType.Trade && LastPrice > 0.0m && Quantity > 0) ||\r\n                   (TickType == TickType.Quote && AskPrice > 0.0m && AskSize > 0) ||\r\n                   (TickType == TickType.Quote && BidPrice > 0.0m && BidSize > 0) ||\r\n                   (TickType == TickType.OpenInterest && Value > 0);", span="385-388"];
m46_165 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.IsValid()", span="383-383"];
m46_150 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="Tick.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="44-44"];
m46_134 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="Tick.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="546-546"];
m46_30 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m46_31 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="144-144"];
m46_32 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Time = time", span="145-145"];
m46_33 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Symbol = symbol", span="146-146"];
m46_34 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Value = (bid + ask) / 2", span="147-147"];
m46_36 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="BidPrice = bid", span="149-149"];
m46_37 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="AskPrice = ask", span="150-150"];
m46_35 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="TickType = TickType.Quote", span="148-148"];
m46_38 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m46_75 [cluster="string.ToDecimal()", file="Tick.cs", label="Entry string.ToDecimal()", span="248-248"];
m46_76 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="400-400"];
m46_169 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="Tick.cs", label="return securityType == SecurityType.Equity || securityType == SecurityType.Option ? 10000m : 1;", span="402-402"];
m46_170 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="400-400"];
m46_77 [cluster="string.Trim()", file="Tick.cs", label="Entry string.Trim()", span="0-0"];
m46_152 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="Tick.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="364-364"];
m46_132 [cluster="string.ToCsv(int)", file="Tick.cs", label="Entry string.ToCsv(int)", span="329-329"];
m46_0 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m46_1 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Value = 0", span="100-100"];
m46_2 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Time = new DateTime()", span="101-101"];
m46_3 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="DataType = MarketDataType.Tick", span="102-102"];
m46_4 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Symbol = Symbol.Empty", span="103-103"];
m46_5 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="TickType = TickType.Trade", span="104-104"];
m46_6 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Quantity = 0", span="105-105"];
m46_7 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Exchange = ''''", span="106-106"];
m46_8 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="SaleCondition = ''''", span="107-107"];
m46_9 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Suspicious = false", span="108-108"];
m46_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="BidSize = 0", span="109-109"];
m46_11 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="AskSize = 0", span="110-110"];
m46_12 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m46_13 [cluster="System.DateTime.DateTime()", file="Tick.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m46_133 [cluster="string.ToInt64()", file="Tick.cs", label="Entry string.ToInt64()", span="313-313"];
m46_166 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="395-395"];
m46_167 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="return new Tick(this);", span="397-397"];
m46_168 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Clone()", span="395-395"];
m46_60 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="Tick.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m46_171 [file="Tick.cs", label="QuantConnect.Data.Market.Tick", span=""];
m47_112 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="380-380"];
m47_113 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var tradeBar = new T\r\n            {\r\n                Period = config.Increment,\r\n                Symbol = config.Symbol\r\n            }", span="383-387"];
m47_114 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var csv = line.ToCsv(6)", span="389-389"];
m47_116 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = DateTime.ParseExact(csv[0], DateFormat.TwelveCharacter, CultureInfo.InvariantCulture).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="393-393"];
m47_117 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = date.Date.AddMilliseconds(csv[0].ToInt32()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="398-398"];
m47_118 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Open = config.GetNormalizedPrice(csv[1].ToDecimal() * _scaleFactor)", span="401-401"];
m47_119 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.High = config.GetNormalizedPrice(csv[2].ToDecimal() * _scaleFactor)", span="402-402"];
m47_120 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Low = config.GetNormalizedPrice(csv[3].ToDecimal() * _scaleFactor)", span="403-403"];
m47_121 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Close = config.GetNormalizedPrice(csv[4].ToDecimal() * _scaleFactor)", span="404-404"];
m47_122 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Volume = csv[5].ToDecimal()", span="405-405"];
m47_123 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return tradeBar;", span="407-407"];
m47_115 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="390-390"];
m47_124 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseOption<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="380-380"];
m47_164 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Clone()", span="521-521"];
m47_165 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="TradeBar.cs", label="return (BaseData)MemberwiseClone();", span="523-523"];
m47_166 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Clone()", span="521-521"];
m47_59 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="TradeBar.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m47_54 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="304-304"];
m47_95 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var tradeBar = new T\r\n            {\r\n                Symbol = config.Symbol,\r\n                Period = config.Increment\r\n            }", span="307-311"];
m47_96 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var csv = line.ToCsv(5)", span="313-313"];
m47_97 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="314-314"];
m47_98 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = DateTime.ParseExact(csv[0], DateFormat.TwelveCharacter, CultureInfo.InvariantCulture).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="317-317"];
m47_99 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = date.Date.AddMilliseconds(csv[0].ToInt32()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="322-322"];
m47_104 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return tradeBar;", span="330-330"];
m47_100 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Open = csv[1].ToDecimal()", span="325-325"];
m47_101 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.High = csv[2].ToDecimal()", span="326-326"];
m47_102 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Low = csv[3].ToDecimal()", span="327-327"];
m47_103 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Close = csv[4].ToDecimal()", span="328-328"];
m47_105 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="304-304"];
m47_60 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="229-229"];
m47_66 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=green, community=0, file="TradeBar.cs", label="0: SecurityType.Cfd", span="239-239"];
m47_61 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.SecurityType", span="231-231"];
m47_67 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseCfd(config, line, baseDate);", span="240-240"];
m47_62 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="SecurityType.Equity", span="233-233"];
m47_64 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="SecurityType.Forex", span="236-236"];
m47_63 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseEquity(config, line, baseDate);", span="234-234"];
m47_65 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseForex(config, line, baseDate);", span="237-237"];
m47_68 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return null;", span="243-243"];
m47_69 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="229-229"];
m47_14 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Close = original.Close", span="141-141"];
m47_36 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label=isLiveMode, span="189-189"];
m47_37 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return new TradeBar();", span="191-191"];
m47_38 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="config.SecurityType", span="196-196"];
m47_39 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="SecurityType.Equity", span="199-199"];
m47_40 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return ParseEquity<TradeBar>(config, line, date);", span="200-200"];
m47_173 [cluster="System.Threading.Interlocked.CompareExchange(ref int, int, int)", file="TradeBar.cs", label="Entry System.Threading.Interlocked.CompareExchange(ref int, int, int)", span="0-0"];
m47_125 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="418-418"];
m47_126 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var tradeBar = new T\r\n            {\r\n                Period = config.Increment,\r\n                Symbol = config.Symbol\r\n            }", span="421-425"];
m47_127 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var csv = line.ToCsv(6)", span="427-427"];
m47_129 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = DateTime.ParseExact(csv[0], DateFormat.TwelveCharacter, CultureInfo.InvariantCulture).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="431-431"];
m47_130 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = date.Date.AddMilliseconds(csv[0].ToInt32()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="436-436"];
m47_131 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Open = config.GetNormalizedPrice(csv[1].ToDecimal())", span="439-439"];
m47_132 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.High = config.GetNormalizedPrice(csv[2].ToDecimal())", span="440-440"];
m47_133 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Low = config.GetNormalizedPrice(csv[3].ToDecimal())", span="441-441"];
m47_134 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Close = config.GetNormalizedPrice(csv[4].ToDecimal())", span="442-442"];
m47_135 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Volume = csv[5].ToDecimal()", span="443-443"];
m47_136 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return tradeBar;", span="445-445"];
m47_128 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="428-428"];
m47_137 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseFuture<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="418-418"];
m47_19 [cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", file="TradeBar.cs", label="Entry QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", span="30-30"];
m47_20 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m47_21 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Time = time", span="160-160"];
m47_22 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Symbol = symbol", span="161-161"];
m47_56 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseOption(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="456-456"];
m47_138 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseOption<TradeBar>(config, line, date);", span="458-458"];
m47_139 [cluster="QuantConnect.Data.Market.TradeBar.ParseOption(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseOption(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="456-456"];
m47_90 [cluster="System.DateTime.AddMilliseconds(double)", file="TradeBar.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m47_18 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="132-132"];
m47_5 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.AlgoSeekOptionsProcessor(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution, string)", file="TradeBar.cs", label="_queue = new Queue<BaseData>()", span="126-126"];
m47_53 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="254-254"];
m47_73 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var tradeBar = new T\r\n            {\r\n                Symbol = config.Symbol,\r\n                Period = config.Increment\r\n            }", span="257-261"];
m47_74 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var csv = line.ToCsv(6)", span="263-263"];
m47_75 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="264-264"];
m47_76 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = DateTime.ParseExact(csv[0], DateFormat.TwelveCharacter, CultureInfo.InvariantCulture).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="267-267"];
m47_77 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = date.Date.AddMilliseconds(csv[0].ToInt32()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="272-272"];
m47_78 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Open = config.GetNormalizedPrice(csv[1].ToDecimal()*_scaleFactor)", span="275-275"];
m47_79 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.High = config.GetNormalizedPrice(csv[2].ToDecimal()*_scaleFactor)", span="276-276"];
m47_80 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Low = config.GetNormalizedPrice(csv[3].ToDecimal()*_scaleFactor)", span="277-277"];
m47_81 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Close = config.GetNormalizedPrice(csv[4].ToDecimal()*_scaleFactor)", span="278-278"];
m47_83 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return tradeBar;", span="281-281"];
m47_82 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Volume = csv[5].ToDecimal()", span="279-279"];
m47_84 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="254-254"];
m47_33 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.FlushBuffer(System.DateTime, bool)", file="TradeBar.cs", label="_queue.Enqueue(_consolidator.WorkingData)", span="171-171"];
m47_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", color=green, community=0, file="TradeBar.cs", label="1: Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m47_41 [cluster="string.ToLower()", file="TradeBar.cs", label="Entry string.ToLower()", span="0-0"];
m47_34 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.FlushBuffer(System.DateTime, bool)", file="TradeBar.cs", label="Exit QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.FlushBuffer(System.DateTime, bool)", span="163-163"];
m47_44 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="TradeBar.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="90-90"];
m47_46 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.SafeName(string)", file="TradeBar.cs", label="fileName = fileName.Replace(name, ''_'' + name)", span="196-196"];
m47_48 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.SafeName(string)", file="TradeBar.cs", label="Exit QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.SafeName(string)", span="192-192"];
m47_50 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", span=""];
m47_51 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return new TradeBar{Symbol = config.Symbol, Period = config.Increment};", span="223-223"];
m47_35 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
m47_43 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.SafeName(string)", file="TradeBar.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.SafeName(string)", span="192-192"];
m47_45 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.SafeName(string)", file="TradeBar.cs", label=_windowsRestrictedNames, span="194-194"];
m47_47 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.SafeName(string)", file="TradeBar.cs", label="return fileName;", span="198-198"];
m47_49 [cluster="string.Replace(string, string)", file="TradeBar.cs", label="Entry string.Replace(string, string)", span="0-0"];
m47_52 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="181-181"];
m47_55 [cluster="QuantConnect.Data.Market.TradeBar.ParseCfd<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseCfd<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="353-353"];
m47_108 [cluster="QuantConnect.Data.Market.TradeBar.ParseCfd<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseForex<T>(config, line, date);", span="357-357"];
m47_109 [cluster="QuantConnect.Data.Market.TradeBar.ParseCfd<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseCfd<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="353-353"];
m47_58 [cluster="System.DateTime.ToString(string)", file="TradeBar.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m47_151 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Initialize(decimal)", span="530-530"];
m47_168 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="TradeBar.cs", label="Interlocked.CompareExchange(ref _initialized, 1, 0) == 0", span="532-532"];
m47_169 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="TradeBar.cs", label="_open = value", span="534-534"];
m47_170 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="TradeBar.cs", label="_low = value", span="535-535"];
m47_171 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="TradeBar.cs", label="_high = value", span="536-536"];
m47_172 [cluster="QuantConnect.Data.Market.TradeBar.Initialize(decimal)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Initialize(decimal)", span="530-530"];
m47_89 [cluster="string.ToInt32()", file="TradeBar.cs", label="Entry string.ToInt32()", span="297-297"];
m47_0 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m47_1 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Symbol = Symbol.Empty", span="122-122"];
m47_2 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="DataType = MarketDataType.TradeBar", span="123-123"];
m47_3 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Period = TimeSpan.FromMinutes(1)", span="124-124"];
m47_4 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m47_6 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="132-132"];
m47_7 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="DataType = MarketDataType.TradeBar", span="134-134"];
m47_8 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Time = new DateTime(original.Time.Ticks)", span="135-135"];
m47_10 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Value = original.Close", span="137-137"];
m47_11 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Open = original.Open", span="138-138"];
m47_9 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Symbol = original.Symbol", span="136-136"];
m47_12 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="High = original.High", span="139-139"];
m47_13 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Low = original.Low", span="140-140"];
m47_24 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Open = open", span="163-163"];
m47_25 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="High = high", span="164-164"];
m47_27 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Close = close", span="166-166"];
m47_26 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Low = low", span="165-165"];
m47_28 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Volume = volume", span="167-167"];
m47_167 [cluster="object.MemberwiseClone()", file="TradeBar.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m47_92 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="TradeBar.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="270-270"];
m47_87 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="TradeBar.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m47_142 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="483-483"];
m47_143 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Initialize(lastTrade)", span="485-485"];
m47_144 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="lastTrade > High", span="486-486"];
m47_145 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="High = lastTrade", span="486-486"];
m47_146 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="lastTrade < Low", span="487-487"];
m47_147 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Low = lastTrade", span="487-487"];
m47_148 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Volume += volume", span="489-489"];
m47_149 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Close = lastTrade", span="491-491"];
m47_150 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="483-483"];
m47_70 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseEquity(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="291-291"];
m47_93 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseEquity<TradeBar>(config, line, date);", span="293-293"];
m47_94 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseEquity(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="291-291"];
m47_30 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="DataType = MarketDataType.TradeBar", span="169-169"];
m47_31 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="_initialized = 1", span="170-170"];
m47_32 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m47_88 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="TradeBar.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="546-546"];
m47_29 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Period = period ?? TimeSpan.FromMinutes(1)", span="168-168"];
m47_91 [cluster="string.ToDecimal()", file="TradeBar.cs", label="Entry string.ToDecimal()", span="248-248"];
m47_15 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Volume = original.Volume", span="142-142"];
m47_72 [cluster="QuantConnect.Data.Market.TradeBar.ParseCfd(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseCfd(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="367-367"];
m47_110 [cluster="QuantConnect.Data.Market.TradeBar.ParseCfd(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseCfd<TradeBar>(config, line, date);", span="369-369"];
m47_111 [cluster="QuantConnect.Data.Market.TradeBar.ParseCfd(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseCfd(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="367-367"];
m47_57 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseFuture(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="469-469"];
m47_140 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseFuture<TradeBar>(config, line, date);", span="471-471"];
m47_141 [cluster="QuantConnect.Data.Market.TradeBar.ParseFuture(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseFuture(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="469-469"];
m47_85 [cluster="T.cstr", file="TradeBar.cs", label="Entry T.cstr", span=""];
m47_23 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="TradeBar.cs", label="Value = close", span="162-162"];
m47_71 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseForex(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="340-340"];
m47_106 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseForex<TradeBar>(config, line, date);", span="342-342"];
m47_107 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseForex(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="340-340"];
m47_86 [cluster="string.ToCsv(int)", file="TradeBar.cs", label="Entry string.ToCsv(int)", span="329-329"];
m47_17 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="_initialized = 1", span="144-144"];
m47_16 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Period = original.Period", span="143-143"];
m47_174 [file="TradeBar.cs", label="QuantConnect.Data.Market.TradeBar", span=""];
m48_22 [cluster="Unk.AsNumeric", file="UserDefinedUniverse.cs", label="Entry Unk.AsNumeric", span=""];
m48_18 [cluster="Unk.GetInstance", file="UserDefinedUniverse.cs", label="Entry Unk.GetInstance", span=""];
m48_21 [cluster="Unk.SetSymbol", file="UserDefinedUniverse.cs", label="Entry Unk.SetSymbol", span=""];
m48_25 [cluster="Unk.Dispose", file="UserDefinedUniverse.cs", label="Entry Unk.Dispose", span=""];
m48_19 [cluster="Unk.Evaluate", file="UserDefinedUniverse.cs", label="Entry Unk.Evaluate", span=""];
m48_23 [cluster="Unk.AsList", file="UserDefinedUniverse.cs", label="Entry Unk.AsList", span=""];
m48_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1339-1339"];
m48_20 [cluster="Unk.CreateNumericVector", file="UserDefinedUniverse.cs", label="Entry Unk.CreateNumericVector", span=""];
m48_26 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.OnData(QuantConnect.Data.Slice)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Algorithm.CSharp.CallingRFromCSharp.OnData(QuantConnect.Data.Slice)", span="59-59"];
m48_27 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.OnData(QuantConnect.Data.Slice)", file="UserDefinedUniverse.cs", label="!Portfolio.Invested", span="61-61"];
m48_28 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.OnData(QuantConnect.Data.Slice)", file="UserDefinedUniverse.cs", label="SetHoldings(_spy, 1)", span="63-63"];
m48_29 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.OnData(QuantConnect.Data.Slice)", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Algorithm.CSharp.CallingRFromCSharp.OnData(QuantConnect.Data.Slice)", span="59-59"];
m48_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m48_24 [cluster="Unk.First", file="UserDefinedUniverse.cs", label="Entry Unk.First", span=""];
m48_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m48_0 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", span="31-31"];
m48_1 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="SetStartDate(2013, 10, 07)", span="33-33"];
m48_2 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="SetEndDate(2013, 10, 11)", span="34-34"];
m48_3 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="SetCash(100000)", span="35-35"];
m48_4 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="AddEquity(''SPY'', Resolution.Second)", span="37-37"];
m48_5 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="REngine engine = REngine.GetInstance()", span="39-39"];
m48_6 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="engine.Evaluate(''print('This is from R command.')'')", span="40-40"];
m48_7 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="NumericVector group1 = engine.CreateNumericVector(new double[] { 30.02, 29.99, 30.11, 29.97, 30.01, 29.99 })", span="42-42"];
m48_8 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="engine.SetSymbol(''group1'', group1)", span="43-43"];
m48_9 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="NumericVector group2 = engine.Evaluate(''group2 <- c(29.89, 29.93, 29.72, 29.98, 30.02, 29.98)'').AsNumeric()", span="45-45"];
m48_10 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="GenericVector testResult = engine.Evaluate(''t.test(group1, group2)'').AsList()", span="47-47"];
m48_12 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="engine.Dispose()", span="51-51"];
m48_11 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="double p = testResult[''p.value''].AsNumeric().First()", span="48-48"];
m48_13 [cluster="QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Algorithm.CSharp.CallingRFromCSharp.Initialize()", span="31-31"];
m48_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m48_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m48_31 [file="UserDefinedUniverse.cs", label="QuantConnect.Algorithm.CSharp.CallingRFromCSharp", span=""];
n7 -> n1  [color=red, key=1, label="QuantConnect.Data.Market.FuturesContract", style=dashed];
n7 -> n2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesContract", style=dashed];
n7 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesContract", style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n1 -> n2  [color=red, key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n4  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_28  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_29  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_28  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_28  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=2, style=dotted];
m0_27 -> m0_21  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_11  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m0_13 -> m0_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m0_13 -> m0_17  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_20  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_20  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_20  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_13  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_8  [key=2, style=dotted];
m0_4 -> m0_10  [key=2, style=dotted];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_30 -> m0_1  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_2  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_3  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_4  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_17  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_22  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_23  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_24  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_25  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m0_30 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RegressionChannel", style=dashed];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_10  [color=darkorchid, key=3, label="Field variable string DB", style=bold];
m1_11 -> m1_10  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_3  [color=darkorchid, key=3, label="Field variable string SixCharacter", style=bold];
m1_4 -> m1_3  [key=0, style=solid];
m1_4 -> m1_9  [key=2, style=dotted];
m1_4 -> m1_4  [color=darkorchid, key=3, label="Field variable string EightCharacter", style=bold];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_12 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark", style=dashed];
m1_12 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark", style=dashed];
m1_12 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.Benchmarks.EmptyMinute400EquityBenchmark", style=dashed];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_33  [key=2, style=dotted];
m3_32 -> m3_30  [color=blue, key=0, style=bold];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_47  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m3_35 -> m3_36  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_54  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_40  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_46  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_53  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_49  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_33  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_33  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_52  [key=0, style=solid];
m3_48 -> m3_52  [key=0, style=solid];
m3_48 -> m3_33  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_33  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_55  [key=2, style=dotted];
m3_52 -> m3_34  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_21  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_22  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_23  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_24  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_25  [key=2, style=dotted];
m3_5 -> m3_9  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m3_5 -> m3_10  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m3_5 -> m3_11  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m3_5 -> m3_12  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_26  [key=2, style=dotted];
m3_6 -> m3_9  [color=darkseagreen4, key=1, label=buyOrders, style=dashed];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_27  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_27  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_27  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_28  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_26  [key=2, style=dotted];
m3_7 -> m3_10  [color=darkseagreen4, key=1, label=sellOrders, style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_26  [key=2, style=dotted];
m3_8 -> m3_11  [color=darkseagreen4, key=1, label=assetPrice, style=dashed];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_25  [key=2, style=dotted];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label=avgCross, style=dashed];
m3_13 -> m3_17  [color=darkseagreen4, key=1, label=avgCross, style=dashed];
m3_13 -> m3_18  [color=darkseagreen4, key=1, label=avgCross, style=dashed];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_26  [key=2, style=dotted];
m3_14 -> m3_16  [color=darkseagreen4, key=1, label=fastMa, style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_27  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_27  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_28  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_26  [key=2, style=dotted];
m3_15 -> m3_17  [color=darkseagreen4, key=1, label=slowMa, style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_29  [key=2, style=dotted];
m3_20 -> m3_0  [color=blue, key=0, style=bold];
m3_56 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m3_56 -> m3_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomChartingAlgorithm", style=dashed];
m5_30 -> m5_478  [key=0, style=solid];
m5_30 -> m5_480  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m5_30 -> m5_482  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m5_30 -> m5_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.AccountEvent account", style=bold];
m5_478 -> m5_479  [key=0, style=solid];
m5_478 -> m5_480  [color=darkseagreen4, key=1, label=delta, style=dashed];
m5_480 -> m5_481  [key=0, style=solid];
m5_480 -> m5_376  [key=2, style=dotted];
m5_480 -> m5_25  [key=2, style=dotted];
m5_482 -> m5_483  [key=0, style=solid];
m5_482 -> m5_484  [key=2, style=dotted];
m5_479 -> m5_480  [key=0, style=solid];
m5_479 -> m5_481  [key=0, style=solid];
m5_481 -> m5_482  [key=0, style=solid];
m5_481 -> m5_483  [key=0, style=solid];
m5_483 -> m5_30  [color=blue, key=0, style=bold];
m5_34 -> m5_485  [key=0, style=solid];
m5_34 -> m5_486  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_34 -> m5_487  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_34 -> m5_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
m5_485 -> m5_486  [key=0, style=solid];
m5_485 -> m5_488  [key=0, style=solid];
m5_486 -> m5_487  [key=0, style=solid];
m5_486 -> m5_489  [key=2, style=dotted];
m5_487 -> m5_488  [key=0, style=solid];
m5_487 -> m5_490  [key=2, style=dotted];
m5_488 -> m5_34  [color=blue, key=0, style=bold];
m5_23 -> m5_151  [key=0, style=solid];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_97  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_154  [key=2, style=dotted];
m5_153 -> m5_23  [color=blue, key=0, style=bold];
m5_313 -> m5_316  [key=0, style=solid];
m5_313 -> m5_317  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_323  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_326  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_331  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_341  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_344  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_353  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_365  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_370  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_313 -> m5_203  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m5_316 -> m5_317  [key=0, style=solid];
m5_317 -> m5_318  [key=0, style=solid];
m5_317 -> m5_72  [key=2, style=dotted];
m5_317 -> m5_319  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_320  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_321  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_324  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_327  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_328  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_329  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_330  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_333  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_336  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_339  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_340  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_343  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_344  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_346  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_349  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_350  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_352  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_353  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_355  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_358  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_363  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_364  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_367  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_317 -> m5_369  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_323 -> m5_371  [key=0, style=solid];
m5_323 -> m5_103  [key=2, style=dotted];
m5_326 -> m5_371  [key=0, style=solid];
m5_326 -> m5_98  [key=2, style=dotted];
m5_331 -> m5_332  [key=0, style=solid];
m5_331 -> m5_101  [key=2, style=dotted];
m5_331 -> m5_334  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_341 -> m5_371  [key=0, style=solid];
m5_341 -> m5_103  [key=2, style=dotted];
m5_344 -> m5_345  [key=0, style=solid];
m5_344 -> m5_377  [key=2, style=dotted];
m5_344 -> m5_378  [key=2, style=dotted];
m5_344 -> m5_376  [key=2, style=dotted];
m5_344 -> m5_103  [key=2, style=dotted];
m5_344 -> m5_347  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_353 -> m5_354  [key=0, style=solid];
m5_353 -> m5_103  [key=2, style=dotted];
m5_353 -> m5_356  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_365 -> m5_366  [key=0, style=solid];
m5_365 -> m5_103  [key=2, style=dotted];
m5_365 -> m5_368  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_370 -> m5_371  [key=0, style=solid];
m5_370 -> m5_66  [key=2, style=dotted];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_320  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_318 -> m5_327  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_318 -> m5_344  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_318 -> m5_349  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_319 -> m5_320  [key=0, style=solid];
m5_320 -> m5_321  [key=0, style=solid];
m5_320 -> m5_372  [key=2, style=dotted];
m5_321 -> m5_322  [key=0, style=solid];
m5_321 -> m5_324  [key=0, style=solid];
m5_321 -> m5_70  [key=2, style=dotted];
m5_324 -> m5_325  [key=0, style=solid];
m5_324 -> m5_327  [key=0, style=solid];
m5_324 -> m5_94  [key=2, style=dotted];
m5_324 -> m5_328  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_373  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_73  [key=2, style=dotted];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_335  [key=0, style=solid];
m5_330 -> m5_331  [key=0, style=solid];
m5_333 -> m5_334  [key=0, style=solid];
m5_333 -> m5_134  [key=2, style=dotted];
m5_333 -> m5_26  [key=2, style=dotted];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_342  [key=0, style=solid];
m5_336 -> m5_375  [key=2, style=dotted];
m5_339 -> m5_340  [key=0, style=solid];
m5_339 -> m5_376  [key=2, style=dotted];
m5_339 -> m5_374  [key=2, style=dotted];
m5_340 -> m5_341  [key=0, style=solid];
m5_340 -> m5_134  [key=2, style=dotted];
m5_340 -> m5_26  [key=2, style=dotted];
m5_343 -> m5_344  [key=0, style=solid];
m5_346 -> m5_347  [key=0, style=solid];
m5_346 -> m5_134  [key=2, style=dotted];
m5_346 -> m5_26  [key=2, style=dotted];
m5_349 -> m5_350  [key=0, style=solid];
m5_349 -> m5_357  [key=0, style=solid];
m5_349 -> m5_379  [key=2, style=dotted];
m5_349 -> m5_351  [color=darkseagreen4, key=1, label=message, style=dashed];
m5_349 -> m5_353  [color=darkseagreen4, key=1, label=message, style=dashed];
m5_350 -> m5_351  [key=0, style=solid];
m5_352 -> m5_353  [key=0, style=solid];
m5_352 -> m5_380  [key=2, style=dotted];
m5_355 -> m5_356  [key=0, style=solid];
m5_355 -> m5_134  [key=2, style=dotted];
m5_355 -> m5_26  [key=2, style=dotted];
m5_358 -> m5_359  [key=0, style=solid];
m5_358 -> m5_362  [key=0, style=solid];
m5_358 -> m5_381  [key=2, style=dotted];
m5_363 -> m5_364  [key=0, style=solid];
m5_364 -> m5_365  [key=0, style=solid];
m5_367 -> m5_368  [key=0, style=solid];
m5_367 -> m5_134  [key=2, style=dotted];
m5_367 -> m5_26  [key=2, style=dotted];
m5_369 -> m5_370  [key=0, style=solid];
m5_322 -> m5_323  [key=0, style=solid];
m5_322 -> m5_131  [key=2, style=dotted];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_131  [key=2, style=dotted];
m5_335 -> m5_336  [key=0, style=solid];
m5_332 -> m5_333  [key=0, style=solid];
m5_332 -> m5_374  [key=2, style=dotted];
m5_334 -> m5_371  [key=0, style=solid];
m5_337 -> m5_338  [key=0, style=solid];
m5_342 -> m5_343  [key=0, style=solid];
m5_342 -> m5_348  [key=0, style=solid];
m5_338 -> m5_339  [key=0, style=solid];
m5_338 -> m5_102  [key=2, style=dotted];
m5_348 -> m5_349  [key=0, style=solid];
m5_345 -> m5_346  [key=0, style=solid];
m5_345 -> m5_374  [key=2, style=dotted];
m5_347 -> m5_371  [key=0, style=solid];
m5_357 -> m5_358  [key=0, style=solid];
m5_351 -> m5_352  [key=0, style=solid];
m5_351 -> m5_353  [key=0, style=solid];
m5_354 -> m5_355  [key=0, style=solid];
m5_354 -> m5_374  [key=2, style=dotted];
m5_356 -> m5_371  [key=0, style=solid];
m5_359 -> m5_360  [key=0, style=solid];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_369  [key=0, style=solid];
m5_360 -> m5_361  [key=0, style=solid];
m5_360 -> m5_102  [key=2, style=dotted];
m5_361 -> m5_362  [key=0, style=solid];
m5_366 -> m5_367  [key=0, style=solid];
m5_366 -> m5_374  [key=2, style=dotted];
m5_368 -> m5_371  [key=0, style=solid];
m5_371 -> m5_313  [color=blue, key=0, style=bold];
m5_135 -> m5_136  [key=0, style=solid];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_138  [key=2, style=dotted];
m5_136 -> m5_139  [key=2, style=dotted];
m5_136 -> m5_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_137 -> m5_135  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m5_0 -> m5_6  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m5_0 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_0 -> m5_15  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_0 -> m5_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_7 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_7 -> m5_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_7 -> m5_23  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.Order order", style=bold];
m5_11 -> m5_12  [key=0, style=solid];
m5_2 -> m5_12  [key=0, style=solid];
m5_2 -> m5_13  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_12 -> m5_0  [color=blue, key=0, style=bold];
m5_415 -> m5_419  [key=0, style=solid];
m5_415 -> m5_382  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m5_419 -> m5_420  [key=0, style=solid];
m5_420 -> m5_415  [color=blue, key=0, style=bold];
m5_47 -> m5_51  [key=0, style=solid];
m5_47 -> m5_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_47 -> m5_53  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_47 -> m5_56  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_47 -> m5_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_47 -> m5_63  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m5_47 -> m5_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_66  [key=2, style=dotted];
m5_51 -> m5_67  [key=2, style=dotted];
m5_51 -> m5_55  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_68  [key=2, style=dotted];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_69  [key=2, style=dotted];
m5_53 -> m5_62  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m5_53 -> m5_64  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m5_56 -> m5_64  [key=0, style=solid];
m5_56 -> m5_71  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_72  [key=2, style=dotted];
m5_57 -> m5_59  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_57 -> m5_60  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_57 -> m5_61  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_57 -> m5_62  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_57 -> m5_63  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_70  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_57  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_70  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_73  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_65 -> m5_47  [color=blue, key=0, style=bold];
m5_287 -> m5_288  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_21  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_23  [key=2, style=dotted];
m5_17 -> m5_19  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_25  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_26  [key=2, style=dotted];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_14 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_14 -> m5_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_20  [color=darkseagreen4, key=1, label=brokerIds, style=dashed];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_24  [key=2, style=dotted];
m5_22 -> m5_14  [color=blue, key=0, style=bold];
m5_27 -> m5_28  [key=0, style=solid];
m5_29 -> m5_27  [color=blue, key=0, style=bold];
m5_31 -> m5_32  [key=0, style=solid];
m5_33 -> m5_31  [color=blue, key=0, style=bold];
m5_140 -> m5_141  [key=0, style=solid];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_141  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.OrderTicket>", style=dashed];
m5_142 -> m5_140  [color=blue, key=0, style=bold];
m5_143 -> m5_144  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_145 -> m5_143  [color=blue, key=0, style=bold];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_171  [key=2, style=dotted];
m5_169 -> m5_169  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m5_168 -> m5_169  [key=0, style=solid];
m5_170 -> m5_168  [color=blue, key=0, style=bold];
m5_186 -> m5_187  [key=0, style=solid];
m5_189 -> m5_190  [key=0, style=solid];
m5_180 -> m5_181  [key=0, style=solid];
m5_183 -> m5_184  [key=0, style=solid];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m5_182 -> m5_180  [color=blue, key=0, style=bold];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_167  [key=2, style=dotted];
m5_185 -> m5_183  [color=blue, key=0, style=bold];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_187  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m5_188 -> m5_186  [color=blue, key=0, style=bold];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_167  [key=2, style=dotted];
m5_191 -> m5_189  [color=blue, key=0, style=bold];
m5_240 -> m5_241  [key=0, style=solid];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_244  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m5_243 -> m5_244  [key=0, style=solid];
m5_241 -> m5_242  [key=0, style=solid];
m5_241 -> m5_241  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m5_242 -> m5_240  [color=blue, key=0, style=bold];
m5_245 -> m5_243  [color=blue, key=0, style=bold];
m5_285 -> m5_286  [key=0, style=solid];
m5_284 -> m5_285  [key=0, style=solid];
m5_286 -> m5_284  [color=blue, key=0, style=bold];
m5_288 -> m5_289  [key=0, style=solid];
m5_288 -> m5_291  [key=0, style=solid];
m5_288 -> m5_236  [key=2, style=dotted];
m5_289 -> m5_290  [key=0, style=solid];
m5_291 -> m5_292  [key=0, style=solid];
m5_290 -> m5_293  [key=0, style=solid];
m5_290 -> m5_25  [key=2, style=dotted];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_25  [key=2, style=dotted];
m5_293 -> m5_287  [color=blue, key=0, style=bold];
m5_192 -> m5_193  [key=0, style=solid];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_196  [key=0, style=solid];
m5_193 -> m5_199  [key=0, style=solid];
m5_193 -> m5_202  [key=2, style=dotted];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_203  [key=2, style=dotted];
m5_196 -> m5_197  [key=0, style=solid];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_25  [key=2, style=dotted];
m5_195 -> m5_193  [key=0, style=solid];
m5_195 -> m5_204  [key=2, style=dotted];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_102  [key=2, style=dotted];
m5_198 -> m5_199  [key=0, style=solid];
m5_200 -> m5_201  [key=0, style=solid];
m5_201 -> m5_192  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_35 -> m5_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_35 -> m5_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_35 -> m5_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_35 -> m5_44  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_35 -> m5_47  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m5_35 -> m5_48  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m5_35 -> m5_49  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_25  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_41  [key=0, style=solid];
m5_38 -> m5_43  [key=0, style=solid];
m5_38 -> m5_45  [key=0, style=solid];
m5_40 -> m5_46  [key=0, style=solid];
m5_40 -> m5_47  [key=2, style=dotted];
m5_42 -> m5_46  [key=0, style=solid];
m5_42 -> m5_48  [key=2, style=dotted];
m5_44 -> m5_46  [key=0, style=solid];
m5_44 -> m5_49  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_50  [key=2, style=dotted];
m5_46 -> m5_35  [color=blue, key=0, style=bold];
m5_206 -> m5_207  [key=0, style=solid];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_211  [key=0, style=solid];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_210  [key=0, style=solid];
m5_208 -> m5_233  [key=2, style=dotted];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_234  [key=2, style=dotted];
m5_209 -> m5_210  [key=0, style=solid];
m5_209 -> m5_131  [key=2, style=dotted];
m5_210 -> m5_232  [key=0, style=solid];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_235  [key=2, style=dotted];
m5_212 -> m5_215  [color=darkseagreen4, key=1, label=currentTimeNewYork, style=dashed];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_215  [key=0, style=solid];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_220  [key=0, style=solid];
m5_214 -> m5_215  [key=0, style=solid];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_218  [key=0, style=solid];
m5_216 -> m5_220  [key=0, style=solid];
m5_216 -> m5_236  [key=2, style=dotted];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_225  [color=darkseagreen4, key=1, label=maxOrdersToKeep, style=dashed];
m5_220 -> m5_220  [color=darkorchid, key=3, label="Local variable int maxOrdersToKeep", style=bold];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_220  [key=0, style=solid];
m5_217 -> m5_237  [key=2, style=dotted];
m5_218 -> m5_219  [key=0, style=solid];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_102  [key=2, style=dotted];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_224  [key=0, style=solid];
m5_225 -> m5_226  [key=0, style=solid];
m5_225 -> m5_244  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_234  [key=2, style=dotted];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_238  [key=2, style=dotted];
m5_224 -> m5_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_223 -> m5_232  [key=0, style=solid];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_231  [key=0, style=solid];
m5_226 -> m5_139  [key=2, style=dotted];
m5_226 -> m5_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_226 -> m5_229  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_226 -> m5_230  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_227 -> m5_228  [key=0, style=solid];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_234  [key=2, style=dotted];
m5_229 -> m5_230  [key=0, style=solid];
m5_229 -> m5_239  [key=2, style=dotted];
m5_230 -> m5_226  [key=0, style=solid];
m5_230 -> m5_239  [key=2, style=dotted];
m5_228 -> m5_229  [key=0, style=solid];
m5_232 -> m5_206  [color=blue, key=0, style=bold];
m5_204 -> m5_205  [key=0, style=solid];
m5_205 -> m5_204  [color=blue, key=0, style=bold];
m5_315 -> m5_421  [key=0, style=solid];
m5_315 -> m5_423  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_315 -> m5_424  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_315 -> m5_425  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_315 -> m5_427  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_315 -> m5_438  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_315 -> m5_440  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_315 -> m5_441  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_315 -> m5_442  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_315 -> m5_203  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.CancelOrderRequest request", style=bold];
m5_421 -> m5_422  [key=0, style=solid];
m5_423 -> m5_424  [key=0, style=solid];
m5_423 -> m5_426  [key=0, style=solid];
m5_423 -> m5_94  [key=2, style=dotted];
m5_423 -> m5_427  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_423 -> m5_428  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_423 -> m5_430  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_423 -> m5_435  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_423 -> m5_437  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_423 -> m5_439  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_423 -> m5_441  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_424 -> m5_425  [key=0, style=solid];
m5_424 -> m5_131  [key=2, style=dotted];
m5_425 -> m5_443  [key=0, style=solid];
m5_425 -> m5_98  [key=2, style=dotted];
m5_427 -> m5_443  [key=0, style=solid];
m5_427 -> m5_100  [key=2, style=dotted];
m5_438 -> m5_443  [key=0, style=solid];
m5_438 -> m5_103  [key=2, style=dotted];
m5_440 -> m5_441  [key=0, style=solid];
m5_440 -> m5_442  [key=0, style=solid];
m5_441 -> m5_442  [key=0, style=solid];
m5_442 -> m5_443  [key=0, style=solid];
m5_442 -> m5_66  [key=2, style=dotted];
m5_422 -> m5_423  [key=0, style=solid];
m5_426 -> m5_427  [key=0, style=solid];
m5_426 -> m5_428  [key=0, style=solid];
m5_426 -> m5_99  [key=2, style=dotted];
m5_428 -> m5_429  [key=0, style=solid];
m5_428 -> m5_73  [key=2, style=dotted];
m5_430 -> m5_431  [key=0, style=solid];
m5_430 -> m5_434  [key=0, style=solid];
m5_430 -> m5_444  [key=2, style=dotted];
m5_435 -> m5_436  [key=0, style=solid];
m5_435 -> m5_438  [color=darkseagreen4, key=1, label=message, style=dashed];
m5_437 -> m5_438  [key=0, style=solid];
m5_437 -> m5_134  [key=2, style=dotted];
m5_437 -> m5_26  [key=2, style=dotted];
m5_439 -> m5_440  [key=0, style=solid];
m5_429 -> m5_430  [key=0, style=solid];
m5_431 -> m5_432  [key=0, style=solid];
m5_434 -> m5_435  [key=0, style=solid];
m5_434 -> m5_439  [key=0, style=solid];
m5_432 -> m5_433  [key=0, style=solid];
m5_432 -> m5_102  [key=2, style=dotted];
m5_433 -> m5_434  [key=0, style=solid];
m5_436 -> m5_437  [key=0, style=solid];
m5_436 -> m5_374  [key=2, style=dotted];
m5_443 -> m5_315  [color=blue, key=0, style=bold];
m5_97 -> m5_155  [key=0, style=solid];
m5_97 -> m5_158  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_97 -> m5_23  [color=darkorchid, key=3, label="Parameter variable int orderId", style=bold];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_157  [key=0, style=solid];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_94  [key=2, style=dotted];
m5_158 -> m5_158  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_156 -> m5_159  [key=0, style=solid];
m5_157 -> m5_158  [key=0, style=solid];
m5_159 -> m5_97  [color=blue, key=0, style=bold];
m5_237 -> m5_246  [key=0, style=solid];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_248  [key=0, style=solid];
m5_246 -> m5_271  [key=2, style=dotted];
m5_247 -> m5_269  [key=0, style=solid];
m5_247 -> m5_270  [key=0, style=solid];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_25  [key=2, style=dotted];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_272  [key=2, style=dotted];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_253  [key=0, style=solid];
m5_250 -> m5_273  [key=2, style=dotted];
m5_250 -> m5_255  [color=darkseagreen4, key=1, label=balances, style=dashed];
m5_250 -> m5_261  [color=darkseagreen4, key=1, label=balances, style=dashed];
m5_251 -> m5_252  [key=0, style=solid];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_255  [key=0, style=solid];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_260  [key=0, style=solid];
m5_255 -> m5_257  [color=darkseagreen4, key=1, label=balance, style=dashed];
m5_255 -> m5_258  [color=darkseagreen4, key=1, label=balance, style=dashed];
m5_255 -> m5_259  [color=darkseagreen4, key=1, label=balance, style=dashed];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_166  [key=2, style=dotted];
m5_261 -> m5_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_261 -> m5_263  [color=darkseagreen4, key=1, label=balanceCash, style=dashed];
m5_261 -> m5_265  [color=darkseagreen4, key=1, label=balanceCash, style=dashed];
m5_261 -> m5_266  [color=darkseagreen4, key=1, label=balanceCash, style=dashed];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_102  [key=2, style=dotted];
m5_254 -> m5_269  [key=0, style=solid];
m5_254 -> m5_270  [key=0, style=solid];
m5_256 -> m5_257  [key=0, style=solid];
m5_260 -> m5_261  [key=0, style=solid];
m5_260 -> m5_268  [key=0, style=solid];
m5_260 -> m5_285  [color=darkseagreen4, key=1, label=cash, style=dashed];
m5_260 -> m5_263  [color=darkseagreen4, key=1, label=cash, style=dashed];
m5_260 -> m5_264  [color=darkseagreen4, key=1, label=cash, style=dashed];
m5_260 -> m5_267  [color=darkseagreen4, key=1, label=cash, style=dashed];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_255  [key=0, style=solid];
m5_257 -> m5_274  [key=2, style=dotted];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_275  [key=2, style=dotted];
m5_259 -> m5_255  [key=0, style=solid];
m5_259 -> m5_276  [key=2, style=dotted];
m5_268 -> m5_269  [key=0, style=solid];
m5_263 -> m5_264  [key=0, style=solid];
m5_263 -> m5_265  [color=darkseagreen4, key=1, label=delta, style=dashed];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_266  [key=0, style=solid];
m5_264 -> m5_277  [key=2, style=dotted];
m5_264 -> m5_278  [key=2, style=dotted];
m5_267 -> m5_260  [key=0, style=solid];
m5_267 -> m5_276  [key=2, style=dotted];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_267  [key=0, style=solid];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_279  [key=2, style=dotted];
m5_265 -> m5_280  [key=2, style=dotted];
m5_266 -> m5_260  [key=0, style=solid];
m5_266 -> m5_281  [key=2, style=dotted];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_236  [key=2, style=dotted];
m5_269 -> m5_282  [key=2, style=dotted];
m5_269 -> m5_283  [key=2, style=dotted];
m5_269 -> m5_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_270 -> m5_237  [color=blue, key=0, style=bold];
m5_294 -> m5_295  [key=0, style=solid];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_236  [key=2, style=dotted];
m5_295 -> m5_297  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_298  [key=0, style=solid];
m5_296 -> m5_300  [key=2, style=dotted];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_131  [key=2, style=dotted];
m5_297 -> m5_297  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_301  [key=2, style=dotted];
m5_299 -> m5_294  [color=blue, key=0, style=bold];
m5_373 -> m5_500  [key=0, style=solid];
m5_373 -> m5_502  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m5_373 -> m5_509  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_511  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_513  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_515  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_517  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_519  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_521  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_522  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_524  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_373 -> m5_317  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m5_373 -> m5_382  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m5_373 -> m5_318  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m5_373 -> m5_389  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m5_500 -> m5_501  [key=0, style=solid];
m5_500 -> m5_502  [key=0, style=solid];
m5_502 -> m5_503  [key=0, style=solid];
m5_502 -> m5_531  [key=2, style=dotted];
m5_502 -> m5_512  [color=darkseagreen4, key=1, label=increment, style=dashed];
m5_502 -> m5_516  [color=darkseagreen4, key=1, label=increment, style=dashed];
m5_502 -> m5_520  [color=darkseagreen4, key=1, label=increment, style=dashed];
m5_502 -> m5_523  [color=darkseagreen4, key=1, label=increment, style=dashed];
m5_509 -> m5_510  [key=0, style=solid];
m5_509 -> m5_514  [key=0, style=solid];
m5_509 -> m5_518  [key=0, style=solid];
m5_509 -> m5_525  [key=0, style=solid];
m5_511 -> m5_512  [key=0, style=solid];
m5_513 -> m5_525  [key=0, style=solid];
m5_515 -> m5_516  [key=0, style=solid];
m5_517 -> m5_525  [key=0, style=solid];
m5_519 -> m5_520  [key=0, style=solid];
m5_519 -> m5_526  [color=darkseagreen4, key=1, label=limitPrice, style=dashed];
m5_519 -> m5_527  [color=darkseagreen4, key=1, label=limitPrice, style=dashed];
m5_521 -> m5_522  [key=0, style=solid];
m5_522 -> m5_523  [key=0, style=solid];
m5_522 -> m5_528  [color=darkseagreen4, key=1, label=stopPrice, style=dashed];
m5_522 -> m5_529  [color=darkseagreen4, key=1, label=stopPrice, style=dashed];
m5_524 -> m5_525  [key=0, style=solid];
m5_501 -> m5_530  [key=0, style=solid];
m5_503 -> m5_504  [key=0, style=solid];
m5_503 -> m5_505  [key=0, style=solid];
m5_512 -> m5_513  [key=0, style=solid];
m5_512 -> m5_532  [key=2, style=dotted];
m5_516 -> m5_517  [key=0, style=solid];
m5_516 -> m5_532  [key=2, style=dotted];
m5_520 -> m5_521  [key=0, style=solid];
m5_520 -> m5_532  [key=2, style=dotted];
m5_520 -> m5_526  [color=darkseagreen4, key=1, label=limitRound, style=dashed];
m5_520 -> m5_527  [color=darkseagreen4, key=1, label=limitRound, style=dashed];
m5_523 -> m5_524  [key=0, style=solid];
m5_523 -> m5_532  [key=2, style=dotted];
m5_523 -> m5_528  [color=darkseagreen4, key=1, label=stopRound, style=dashed];
m5_523 -> m5_529  [color=darkseagreen4, key=1, label=stopRound, style=dashed];
m5_504 -> m5_530  [key=0, style=solid];
m5_505 -> m5_506  [key=0, style=solid];
m5_505 -> m5_505  [color=darkorchid, key=3, label="Local variable decimal limitPrice", style=bold];
m5_506 -> m5_507  [key=0, style=solid];
m5_506 -> m5_505  [color=darkorchid, key=3, label="Local variable decimal limitRound", style=bold];
m5_507 -> m5_508  [key=0, style=solid];
m5_507 -> m5_505  [color=darkorchid, key=3, label="Local variable decimal stopPrice", style=bold];
m5_508 -> m5_509  [key=0, style=solid];
m5_508 -> m5_505  [color=darkorchid, key=3, label="Local variable decimal stopRound", style=bold];
m5_510 -> m5_511  [key=0, style=solid];
m5_514 -> m5_515  [key=0, style=solid];
m5_518 -> m5_519  [key=0, style=solid];
m5_525 -> m5_526  [key=0, style=solid];
m5_525 -> m5_527  [color=darkseagreen4, key=1, label=format, style=dashed];
m5_525 -> m5_529  [color=darkseagreen4, key=1, label=format, style=dashed];
m5_525 -> m5_525  [color=darkorchid, key=3, label="Local variable string format", style=bold];
m5_526 -> m5_527  [key=0, style=solid];
m5_526 -> m5_528  [key=0, style=solid];
m5_526 -> m5_533  [key=2, style=dotted];
m5_527 -> m5_528  [key=0, style=solid];
m5_527 -> m5_534  [key=2, style=dotted];
m5_527 -> m5_374  [key=2, style=dotted];
m5_528 -> m5_529  [key=0, style=solid];
m5_528 -> m5_530  [key=0, style=solid];
m5_528 -> m5_533  [key=2, style=dotted];
m5_529 -> m5_530  [key=0, style=solid];
m5_529 -> m5_534  [key=2, style=dotted];
m5_529 -> m5_374  [key=2, style=dotted];
m5_530 -> m5_373  [color=blue, key=0, style=bold];
m5_26 -> m5_445  [key=0, style=solid];
m5_26 -> m5_447  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_449  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_450  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_452  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_456  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_461  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_462  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_464  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_465  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_466  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_467  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_26 -> m5_7  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
m5_445 -> m5_446  [key=0, style=solid];
m5_445 -> m5_97  [key=2, style=dotted];
m5_445 -> m5_449  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_445 -> m5_459  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_445 -> m5_463  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_447 -> m5_448  [key=0, style=solid];
m5_447 -> m5_131  [key=2, style=dotted];
m5_449 -> m5_450  [key=0, style=solid];
m5_450 -> m5_451  [key=0, style=solid];
m5_450 -> m5_460  [key=0, style=solid];
m5_452 -> m5_453  [key=0, style=solid];
m5_452 -> m5_454  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_452 -> m5_455  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_453 -> m5_454  [key=0, style=solid];
m5_453 -> m5_473  [key=2, style=dotted];
m5_456 -> m5_457  [key=0, style=solid];
m5_456 -> m5_460  [key=0, style=solid];
m5_456 -> m5_474  [key=2, style=dotted];
m5_461 -> m5_462  [key=0, style=solid];
m5_461 -> m5_464  [key=0, style=solid];
m5_461 -> m5_94  [key=2, style=dotted];
m5_461 -> m5_463  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m5_462 -> m5_463  [key=0, style=solid];
m5_462 -> m5_475  [key=2, style=dotted];
m5_464 -> m5_465  [key=0, style=solid];
m5_464 -> m5_131  [key=2, style=dotted];
m5_465 -> m5_466  [key=0, style=solid];
m5_465 -> m5_471  [key=0, style=solid];
m5_466 -> m5_467  [key=0, style=solid];
m5_466 -> m5_476  [key=2, style=dotted];
m5_467 -> m5_468  [key=0, style=solid];
m5_467 -> m5_471  [key=0, style=solid];
m5_467 -> m5_477  [key=2, style=dotted];
m5_446 -> m5_447  [key=0, style=solid];
m5_446 -> m5_449  [key=0, style=solid];
m5_459 -> m5_460  [key=0, style=solid];
m5_459 -> m5_376  [key=2, style=dotted];
m5_459 -> m5_374  [key=2, style=dotted];
m5_463 -> m5_465  [key=0, style=solid];
m5_448 -> m5_471  [key=0, style=solid];
m5_451 -> m5_452  [key=0, style=solid];
m5_451 -> m5_472  [key=2, style=dotted];
m5_460 -> m5_461  [key=0, style=solid];
m5_454 -> m5_455  [key=0, style=solid];
m5_454 -> m5_456  [color=darkseagreen4, key=1, label=conversionRate, style=dashed];
m5_455 -> m5_456  [key=0, style=solid];
m5_457 -> m5_458  [key=0, style=solid];
m5_458 -> m5_459  [key=0, style=solid];
m5_458 -> m5_102  [key=2, style=dotted];
m5_468 -> m5_469  [key=0, style=solid];
m5_469 -> m5_470  [key=0, style=solid];
m5_469 -> m5_374  [key=2, style=dotted];
m5_470 -> m5_471  [key=0, style=solid];
m5_471 -> m5_26  [color=blue, key=0, style=bold];
m5_203 -> m5_302  [key=0, style=solid];
m5_203 -> m5_303  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_203 -> m5_305  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_203 -> m5_307  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_203 -> m5_309  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_203 -> m5_311  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m5_203 -> m5_193  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderRequest request", style=bold];
m5_302 -> m5_303  [key=0, style=solid];
m5_302 -> m5_313  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m5_302 -> m5_314  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m5_302 -> m5_315  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_306  [key=0, style=solid];
m5_303 -> m5_308  [key=0, style=solid];
m5_303 -> m5_310  [key=0, style=solid];
m5_305 -> m5_311  [key=0, style=solid];
m5_305 -> m5_313  [key=2, style=dotted];
m5_307 -> m5_311  [key=0, style=solid];
m5_307 -> m5_314  [key=2, style=dotted];
m5_309 -> m5_311  [key=0, style=solid];
m5_309 -> m5_315  [key=2, style=dotted];
m5_311 -> m5_312  [key=0, style=solid];
m5_311 -> m5_68  [key=2, style=dotted];
m5_304 -> m5_305  [key=0, style=solid];
m5_306 -> m5_307  [key=0, style=solid];
m5_308 -> m5_309  [key=0, style=solid];
m5_310 -> m5_312  [key=0, style=solid];
m5_310 -> m5_50  [key=2, style=dotted];
m5_312 -> m5_203  [color=blue, key=0, style=bold];
m5_48 -> m5_74  [key=0, style=solid];
m5_48 -> m5_75  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_76  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_80  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_82  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_86  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_87  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_88  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_91  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_48 -> m5_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.UpdateOrderRequest request", style=bold];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_77  [key=0, style=solid];
m5_75 -> m5_94  [key=2, style=dotted];
m5_75 -> m5_92  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m5_76 -> m5_93  [key=0, style=solid];
m5_76 -> m5_95  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_96  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_97  [key=2, style=dotted];
m5_78 -> m5_81  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_78 -> m5_82  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_80 -> m5_89  [key=0, style=solid];
m5_80 -> m5_92  [key=0, style=solid];
m5_80 -> m5_98  [key=2, style=dotted];
m5_80 -> m5_68  [key=2, style=dotted];
m5_82 -> m5_89  [key=0, style=solid];
m5_82 -> m5_92  [key=0, style=solid];
m5_82 -> m5_100  [key=2, style=dotted];
m5_82 -> m5_68  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_85  [key=0, style=solid];
m5_84 -> m5_89  [key=0, style=solid];
m5_84 -> m5_92  [key=0, style=solid];
m5_84 -> m5_101  [key=2, style=dotted];
m5_84 -> m5_68  [key=2, style=dotted];
m5_86 -> m5_89  [key=0, style=solid];
m5_86 -> m5_92  [key=0, style=solid];
m5_86 -> m5_67  [key=2, style=dotted];
m5_86 -> m5_68  [key=2, style=dotted];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_66  [key=2, style=dotted];
m5_87 -> m5_68  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_92  [key=0, style=solid];
m5_88 -> m5_71  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_103  [key=2, style=dotted];
m5_91 -> m5_68  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_81  [key=0, style=solid];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_83  [key=0, style=solid];
m5_81 -> m5_99  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_87  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_102  [key=2, style=dotted];
m5_93 -> m5_48  [color=blue, key=0, style=bold];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_175  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Orders.Order, bool>", style=dashed];
m5_172 -> m5_176  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Orders.Order, bool>", style=dashed];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_175  [key=0, style=solid];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_177  [key=0, style=solid];
m5_176 -> m5_178  [key=0, style=solid];
m5_176 -> m5_138  [key=2, style=dotted];
m5_176 -> m5_139  [key=2, style=dotted];
m5_176 -> m5_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_176 -> m5_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_174 -> m5_178  [key=0, style=solid];
m5_174 -> m5_179  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_138  [key=2, style=dotted];
m5_177 -> m5_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_177 -> m5_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_178 -> m5_172  [color=blue, key=0, style=bold];
m5_314 -> m5_382  [key=0, style=solid];
m5_314 -> m5_384  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_385  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_386  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_388  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_392  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_396  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_400  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_409  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_412  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_413  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m5_314 -> m5_203  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.UpdateOrderRequest request", style=bold];
m5_382 -> m5_383  [key=0, style=solid];
m5_384 -> m5_385  [key=0, style=solid];
m5_384 -> m5_387  [key=0, style=solid];
m5_384 -> m5_94  [key=2, style=dotted];
m5_384 -> m5_388  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_389  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_390  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_392  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_393  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_396  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_398  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_400  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_401  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_402  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_404  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_384 -> m5_411  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_385 -> m5_386  [key=0, style=solid];
m5_385 -> m5_131  [key=2, style=dotted];
m5_386 -> m5_414  [key=0, style=solid];
m5_386 -> m5_98  [key=2, style=dotted];
m5_388 -> m5_414  [key=0, style=solid];
m5_388 -> m5_100  [key=2, style=dotted];
m5_392 -> m5_393  [key=0, style=solid];
m5_392 -> m5_400  [key=0, style=solid];
m5_392 -> m5_416  [key=2, style=dotted];
m5_392 -> m5_394  [color=darkseagreen4, key=1, label=message, style=dashed];
m5_392 -> m5_396  [color=darkseagreen4, key=1, label=message, style=dashed];
m5_396 -> m5_397  [key=0, style=solid];
m5_396 -> m5_103  [key=2, style=dotted];
m5_396 -> m5_399  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_400 -> m5_401  [key=0, style=solid];
m5_400 -> m5_417  [key=2, style=dotted];
m5_409 -> m5_410  [key=0, style=solid];
m5_409 -> m5_412  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m5_412 -> m5_414  [key=0, style=solid];
m5_412 -> m5_103  [key=2, style=dotted];
m5_413 -> m5_414  [key=0, style=solid];
m5_413 -> m5_66  [key=2, style=dotted];
m5_383 -> m5_384  [key=0, style=solid];
m5_387 -> m5_388  [key=0, style=solid];
m5_387 -> m5_389  [key=0, style=solid];
m5_387 -> m5_415  [key=2, style=dotted];
m5_389 -> m5_390  [key=0, style=solid];
m5_389 -> m5_401  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_390 -> m5_391  [key=0, style=solid];
m5_390 -> m5_372  [key=2, style=dotted];
m5_393 -> m5_394  [key=0, style=solid];
m5_395 -> m5_396  [key=0, style=solid];
m5_395 -> m5_380  [key=2, style=dotted];
m5_398 -> m5_399  [key=0, style=solid];
m5_398 -> m5_134  [key=2, style=dotted];
m5_398 -> m5_26  [key=2, style=dotted];
m5_401 -> m5_402  [key=0, style=solid];
m5_401 -> m5_373  [key=2, style=dotted];
m5_402 -> m5_403  [key=0, style=solid];
m5_402 -> m5_73  [key=2, style=dotted];
m5_404 -> m5_405  [key=0, style=solid];
m5_404 -> m5_408  [key=0, style=solid];
m5_404 -> m5_418  [key=2, style=dotted];
m5_411 -> m5_412  [key=0, style=solid];
m5_411 -> m5_134  [key=2, style=dotted];
m5_411 -> m5_26  [key=2, style=dotted];
m5_391 -> m5_392  [key=0, style=solid];
m5_394 -> m5_395  [key=0, style=solid];
m5_394 -> m5_396  [key=0, style=solid];
m5_397 -> m5_398  [key=0, style=solid];
m5_397 -> m5_374  [key=2, style=dotted];
m5_399 -> m5_414  [key=0, style=solid];
m5_403 -> m5_404  [key=0, style=solid];
m5_405 -> m5_406  [key=0, style=solid];
m5_408 -> m5_409  [key=0, style=solid];
m5_408 -> m5_413  [key=0, style=solid];
m5_406 -> m5_407  [key=0, style=solid];
m5_406 -> m5_102  [key=2, style=dotted];
m5_407 -> m5_408  [key=0, style=solid];
m5_410 -> m5_411  [key=0, style=solid];
m5_410 -> m5_374  [key=2, style=dotted];
m5_414 -> m5_314  [color=blue, key=0, style=bold];
m5_372 -> m5_491  [key=0, style=solid];
m5_372 -> m5_493  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_372 -> m5_495  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m5_372 -> m5_497  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_372 -> m5_498  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m5_372 -> m5_317  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m5_372 -> m5_382  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m5_372 -> m5_318  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m5_372 -> m5_389  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m5_491 -> m5_492  [key=0, style=solid];
m5_491 -> m5_493  [color=darkseagreen4, key=1, label=orderLotMod, style=dashed];
m5_493 -> m5_494  [key=0, style=solid];
m5_495 -> m5_496  [key=0, style=solid];
m5_495 -> m5_489  [key=2, style=dotted];
m5_495 -> m5_374  [key=2, style=dotted];
m5_497 -> m5_499  [key=0, style=solid];
m5_498 -> m5_499  [key=0, style=solid];
m5_492 -> m5_493  [key=0, style=solid];
m5_492 -> m5_498  [key=0, style=solid];
m5_494 -> m5_495  [key=0, style=solid];
m5_494 -> m5_497  [key=0, style=solid];
m5_496 -> m5_497  [key=0, style=solid];
m5_499 -> m5_372  [color=blue, key=0, style=bold];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_160 -> m5_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_160 -> m5_155  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order GetOrderByBrokerageId", style=bold];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_163  [key=0, style=solid];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_166  [key=2, style=dotted];
m5_163 -> m5_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_162 -> m5_165  [key=0, style=solid];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_167  [key=2, style=dotted];
m5_165 -> m5_160  [color=blue, key=0, style=bold];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_148  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_147 -> m5_148  [key=0, style=solid];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_94  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_150 -> m5_146  [color=blue, key=0, style=bold];
m5_49 -> m5_104  [key=0, style=solid];
m5_49 -> m5_105  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_107  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_109  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_112  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_116  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_119  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_121  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_124  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_125  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_128  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m5_49 -> m5_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.CancelOrderRequest request", style=bold];
m5_104 -> m5_105  [key=0, style=solid];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_108  [key=0, style=solid];
m5_105 -> m5_94  [key=2, style=dotted];
m5_105 -> m5_110  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m5_105 -> m5_129  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m5_107 -> m5_130  [key=0, style=solid];
m5_107 -> m5_132  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_111  [key=0, style=solid];
m5_108 -> m5_133  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_103  [key=2, style=dotted];
m5_109 -> m5_68  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_97  [key=2, style=dotted];
m5_111 -> m5_113  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_111 -> m5_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_111 -> m5_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_111 -> m5_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_111 -> m5_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_111 -> m5_122  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_111 -> m5_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_114  [key=0, style=solid];
m5_113 -> m5_114  [key=0, style=solid];
m5_116 -> m5_126  [key=0, style=solid];
m5_116 -> m5_129  [key=0, style=solid];
m5_116 -> m5_98  [key=2, style=dotted];
m5_116 -> m5_68  [key=2, style=dotted];
m5_119 -> m5_126  [key=0, style=solid];
m5_119 -> m5_129  [key=0, style=solid];
m5_119 -> m5_100  [key=2, style=dotted];
m5_119 -> m5_68  [key=2, style=dotted];
m5_121 -> m5_126  [key=0, style=solid];
m5_121 -> m5_129  [key=0, style=solid];
m5_121 -> m5_67  [key=2, style=dotted];
m5_121 -> m5_68  [key=2, style=dotted];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_66  [key=2, style=dotted];
m5_124 -> m5_68  [key=2, style=dotted];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_129  [key=0, style=solid];
m5_125 -> m5_71  [key=2, style=dotted];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_103  [key=2, style=dotted];
m5_128 -> m5_68  [key=2, style=dotted];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_131  [key=2, style=dotted];
m5_110 -> m5_130  [key=0, style=solid];
m5_129 -> m5_130  [key=0, style=solid];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_117  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_120  [key=0, style=solid];
m5_117 -> m5_99  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_131  [key=2, style=dotted];
m5_122 -> m5_123  [key=0, style=solid];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_134  [key=2, style=dotted];
m5_123 -> m5_26  [key=2, style=dotted];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_131  [key=2, style=dotted];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_122  [key=0, style=solid];
m5_126 -> m5_127  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_102  [key=2, style=dotted];
m5_130 -> m5_49  [color=blue, key=0, style=bold];
m5_535 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_136  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_151  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_155  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_158  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_161  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_173  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_176  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_177  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_193  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_194  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_195  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_198  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_200  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_207  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_208  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_213  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_250  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_257  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_259  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_260  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_264  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_266  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_267  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_268  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_269  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_288  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_289  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_291  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_296  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_298  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_305  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_307  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_309  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_318  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_320  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_321  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_324  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_332  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_336  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_339  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_340  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_345  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_346  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_349  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_354  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_355  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_358  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_366  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_367  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_384  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_387  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_389  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_390  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_392  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_397  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_398  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_401  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_404  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_410  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_411  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_423  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_430  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_436  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_437  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_445  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_451  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_452  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_453  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_456  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_459  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_461  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_466  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_467  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_469  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_470  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_478  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_481  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_482  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_487  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_494  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_495  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_496  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_527  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_535 -> m5_529  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m5_536 -> m5_15  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_537 -> m5_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_538 -> m5_244  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m5_539 -> m5_285  [color=darkseagreen4, key=1, label=cash, style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=2, style=dotted];
m6_4 -> m6_2  [color=blue, key=0, style=bold];
m6_91 -> m6_92  [key=0, style=solid];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_35  [key=2, style=dotted];
m6_92 -> m6_101  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_92 -> m6_103  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_36  [key=2, style=dotted];
m6_93 -> m6_37  [key=2, style=dotted];
m6_93 -> m6_38  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_45  [key=2, style=dotted];
m6_101 -> m6_106  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_101 -> m6_107  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_101 -> m6_108  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_47  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_96  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_94 -> m6_97  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_95  [color=darkorchid, key=3, label="Local variable decimal price", style=bold];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_110  [key=2, style=dotted];
m6_96 -> m6_111  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_39  [key=2, style=dotted];
m6_97 -> m6_99  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_97 -> m6_101  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_97 -> m6_103  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_97 -> m6_104  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_97 -> m6_105  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_40  [key=2, style=dotted];
m6_98 -> m6_100  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_41  [key=2, style=dotted];
m6_99 -> m6_42  [key=2, style=dotted];
m6_99 -> m6_43  [key=2, style=dotted];
m6_99 -> m6_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_46  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_46  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_44  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_46  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_46  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_48  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_112  [key=2, style=dotted];
m6_108 -> m6_48  [key=2, style=dotted];
m6_109 -> m6_91  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_35  [key=2, style=dotted];
m6_20 -> m6_27  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_20 -> m6_29  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_36  [key=2, style=dotted];
m6_21 -> m6_37  [key=2, style=dotted];
m6_21 -> m6_38  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_45  [key=2, style=dotted];
m6_27 -> m6_32  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_27 -> m6_33  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_47  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_39  [key=2, style=dotted];
m6_23 -> m6_25  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_23 -> m6_27  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_23 -> m6_29  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_23 -> m6_30  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_23 -> m6_31  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_40  [key=2, style=dotted];
m6_24 -> m6_26  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_41  [key=2, style=dotted];
m6_25 -> m6_42  [key=2, style=dotted];
m6_25 -> m6_43  [key=2, style=dotted];
m6_25 -> m6_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_46  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_46  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_44  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_46  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_46  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_48  [key=2, style=dotted];
m6_34 -> m6_19  [color=blue, key=0, style=bold];
m6_166 -> m6_167  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [key=2, style=dotted];
m6_50 -> m6_53  [key=2, style=dotted];
m6_51 -> m6_49  [color=blue, key=0, style=bold];
m6_70 -> m6_71  [key=0, style=solid];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_52  [key=2, style=dotted];
m6_71 -> m6_53  [key=2, style=dotted];
m6_72 -> m6_70  [color=blue, key=0, style=bold];
m6_88 -> m6_89  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_52  [key=2, style=dotted];
m6_89 -> m6_53  [key=2, style=dotted];
m6_90 -> m6_88  [color=blue, key=0, style=bold];
m6_113 -> m6_114  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_52  [key=2, style=dotted];
m6_114 -> m6_53  [key=2, style=dotted];
m6_115 -> m6_113  [color=blue, key=0, style=bold];
m6_135 -> m6_136  [key=0, style=solid];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_52  [key=2, style=dotted];
m6_136 -> m6_53  [key=2, style=dotted];
m6_137 -> m6_135  [color=blue, key=0, style=bold];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_52  [key=2, style=dotted];
m6_167 -> m6_53  [key=2, style=dotted];
m6_168 -> m6_166  [color=blue, key=0, style=bold];
m6_169 -> m6_170  [key=0, style=solid];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_13  [key=2, style=dotted];
m6_170 -> m6_172  [color=darkseagreen4, key=1, label=algo, style=dashed];
m6_170 -> m6_173  [color=red, key=1, label=algo, style=dashed];
m6_170 -> m6_175  [color=darkseagreen4, key=1, label=algo, style=dashed];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_15  [key=2, style=dotted];
m6_172 -> m6_173  [color=red, key=0, style=solid];
m6_172 -> m6_16  [key=2, style=dotted];
m6_173 -> m6_174  [color=red, key=0, style=solid];
m6_173 -> m6_181  [color=red, key=2, style=dotted];
m6_173 -> m6_176  [color=red, key=1, label=security, style=dashed];
m6_173 -> m6_178  [color=red, key=1, label=security, style=dashed];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_36  [key=2, style=dotted];
m6_175 -> m6_37  [key=2, style=dotted];
m6_175 -> m6_38  [key=2, style=dotted];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_35  [key=2, style=dotted];
m6_174 -> m6_178  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_176 -> m6_177  [key=0, style=solid];
m6_176 -> m6_39  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_183  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_182  [key=2, style=dotted];
m6_179 -> m6_180  [key=0, style=solid];
m6_179 -> m6_48  [key=2, style=dotted];
m6_180 -> m6_169  [color=blue, key=0, style=bold];
m6_138 -> m6_139  [key=0, style=solid];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_35  [key=2, style=dotted];
m6_139 -> m6_148  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_139 -> m6_149  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_139 -> m6_154  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_139 -> m6_159  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_36  [key=2, style=dotted];
m6_140 -> m6_37  [key=2, style=dotted];
m6_140 -> m6_38  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_45  [key=2, style=dotted];
m6_148 -> m6_152  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_148 -> m6_153  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_148 -> m6_158  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_148 -> m6_163  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_47  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_45  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_47  [key=2, style=dotted];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_143  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_141 -> m6_144  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_142  [color=darkorchid, key=3, label="Local variable decimal price", style=bold];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_110  [key=2, style=dotted];
m6_143 -> m6_111  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_39  [key=2, style=dotted];
m6_144 -> m6_146  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_144 -> m6_148  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_144 -> m6_149  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_144 -> m6_150  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_144 -> m6_151  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_40  [key=2, style=dotted];
m6_145 -> m6_147  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_41  [key=2, style=dotted];
m6_146 -> m6_42  [key=2, style=dotted];
m6_146 -> m6_43  [key=2, style=dotted];
m6_146 -> m6_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_46  [key=2, style=dotted];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_46  [key=2, style=dotted];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_44  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_46  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_165  [key=2, style=dotted];
m6_153 -> m6_155  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m6_153 -> m6_156  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m6_153 -> m6_157  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m6_153 -> m6_159  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m6_153 -> m6_160  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m6_153 -> m6_161  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m6_153 -> m6_162  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_46  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_46  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_46  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_46  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_46  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_46  [key=2, style=dotted];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_46  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_46  [key=2, style=dotted];
m6_164 -> m6_138  [color=blue, key=0, style=bold];
m6_73 -> m6_74  [key=0, style=solid];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_35  [key=2, style=dotted];
m6_74 -> m6_81  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_74 -> m6_83  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_36  [key=2, style=dotted];
m6_75 -> m6_37  [key=2, style=dotted];
m6_75 -> m6_38  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_45  [key=2, style=dotted];
m6_81 -> m6_86  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_47  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_39  [key=2, style=dotted];
m6_77 -> m6_79  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_77 -> m6_81  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_77 -> m6_83  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_77 -> m6_84  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_77 -> m6_85  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_40  [key=2, style=dotted];
m6_78 -> m6_80  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_41  [key=2, style=dotted];
m6_79 -> m6_42  [key=2, style=dotted];
m6_79 -> m6_43  [key=2, style=dotted];
m6_79 -> m6_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_46  [key=2, style=dotted];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_46  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_44  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_46  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_46  [key=2, style=dotted];
m6_87 -> m6_73  [color=blue, key=0, style=bold];
m6_196 -> m6_197  [key=0, style=solid];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_13  [key=2, style=dotted];
m6_197 -> m6_199  [color=darkseagreen4, key=1, label=algo, style=dashed];
m6_197 -> m6_200  [color=red, key=1, label=algo, style=dashed];
m6_197 -> m6_202  [color=darkseagreen4, key=1, label=algo, style=dashed];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_15  [key=2, style=dotted];
m6_199 -> m6_200  [color=red, key=0, style=solid];
m6_199 -> m6_16  [key=2, style=dotted];
m6_200 -> m6_201  [color=red, key=0, style=solid];
m6_200 -> m6_181  [color=red, key=2, style=dotted];
m6_200 -> m6_203  [color=red, key=1, label=security, style=dashed];
m6_200 -> m6_205  [color=red, key=1, label=security, style=dashed];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_36  [key=2, style=dotted];
m6_202 -> m6_37  [key=2, style=dotted];
m6_202 -> m6_38  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_35  [key=2, style=dotted];
m6_201 -> m6_205  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_39  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_183  [key=2, style=dotted];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_182  [key=2, style=dotted];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_48  [key=2, style=dotted];
m6_207 -> m6_196  [color=blue, key=0, style=bold];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_13  [key=2, style=dotted];
m6_7 -> m6_14  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_15  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_16  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_17  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_18  [key=2, style=dotted];
m6_12 -> m6_6  [color=blue, key=0, style=bold];
m6_184 -> m6_185  [key=0, style=solid];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_13  [key=2, style=dotted];
m6_185 -> m6_187  [color=darkseagreen4, key=1, label=algo, style=dashed];
m6_185 -> m6_188  [color=red, key=1, label=algo, style=dashed];
m6_185 -> m6_190  [color=darkseagreen4, key=1, label=algo, style=dashed];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_15  [key=2, style=dotted];
m6_187 -> m6_188  [color=red, key=0, style=solid];
m6_187 -> m6_16  [key=2, style=dotted];
m6_188 -> m6_189  [color=red, key=0, style=solid];
m6_188 -> m6_181  [color=red, key=2, style=dotted];
m6_188 -> m6_191  [color=red, key=1, label=security, style=dashed];
m6_188 -> m6_193  [color=red, key=1, label=security, style=dashed];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_36  [key=2, style=dotted];
m6_190 -> m6_37  [key=2, style=dotted];
m6_190 -> m6_38  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_35  [key=2, style=dotted];
m6_189 -> m6_193  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_39  [key=2, style=dotted];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_183  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_182  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_48  [key=2, style=dotted];
m6_195 -> m6_184  [color=blue, key=0, style=bold];
m6_116 -> m6_117  [key=0, style=solid];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_35  [key=2, style=dotted];
m6_117 -> m6_126  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_117 -> m6_128  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_36  [key=2, style=dotted];
m6_118 -> m6_37  [key=2, style=dotted];
m6_118 -> m6_38  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_45  [key=2, style=dotted];
m6_126 -> m6_131  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_126 -> m6_132  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_126 -> m6_133  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_47  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_121  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_119 -> m6_122  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_95  [color=darkorchid, key=3, label="Local variable decimal price", style=bold];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_110  [key=2, style=dotted];
m6_121 -> m6_111  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_39  [key=2, style=dotted];
m6_122 -> m6_124  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_122 -> m6_126  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_122 -> m6_128  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_122 -> m6_129  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_122 -> m6_130  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_40  [key=2, style=dotted];
m6_123 -> m6_125  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_41  [key=2, style=dotted];
m6_124 -> m6_42  [key=2, style=dotted];
m6_124 -> m6_43  [key=2, style=dotted];
m6_124 -> m6_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_46  [key=2, style=dotted];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_46  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_44  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_46  [key=2, style=dotted];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_46  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_48  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_112  [key=2, style=dotted];
m6_133 -> m6_48  [key=2, style=dotted];
m6_134 -> m6_116  [color=blue, key=0, style=bold];
m6_54 -> m6_55  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_35  [key=2, style=dotted];
m6_55 -> m6_62  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_55 -> m6_64  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_36  [key=2, style=dotted];
m6_56 -> m6_37  [key=2, style=dotted];
m6_56 -> m6_38  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_45  [key=2, style=dotted];
m6_62 -> m6_67  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_62 -> m6_68  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_47  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_39  [key=2, style=dotted];
m6_58 -> m6_60  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_58 -> m6_62  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_58 -> m6_64  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_58 -> m6_65  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_58 -> m6_66  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_40  [key=2, style=dotted];
m6_59 -> m6_61  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_41  [key=2, style=dotted];
m6_60 -> m6_42  [key=2, style=dotted];
m6_60 -> m6_43  [key=2, style=dotted];
m6_60 -> m6_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_46  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_46  [key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_44  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_46  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_46  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_48  [key=2, style=dotted];
m6_69 -> m6_54  [color=blue, key=0, style=bold];
m6_208 -> m6_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_9  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_22  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_56  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_57  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_60  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_61  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_75  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_76  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_79  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_93  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_94  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_99  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_100  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_118  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_119  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_124  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_125  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_140  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_146  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m6_208 -> m6_147  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_0 -> m7_12  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_5  [color=darkseagreen4, key=1, label=useTwsSwitch, style=dashed];
m7_1 -> m7_13  [color=darkorchid, key=3, label="Property variable decimal Amount", style=bold];
m7_1 -> m7_38  [color=darkorchid, key=3, label="Property variable decimal Amount", style=bold];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_19  [key=2, style=dotted];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_20  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_18  [key=2, style=dotted];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=batchFilename, style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_18  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_21  [key=2, style=dotted];
m7_7 -> m7_9  [color=darkseagreen4, key=1, label=processStartInfo, style=dashed];
m7_7 -> m7_10  [color=darkseagreen4, key=1, label=processStartInfo, style=dashed];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_22  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_23  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_17  [key=0, style=solid];
m7_14 -> m7_23  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_24  [key=2, style=dotted];
m7_17 -> m7_0  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_28  [key=0, style=solid];
m7_27 -> m7_34  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_20  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=0, style=solid];
m7_29 -> m7_35  [key=2, style=dotted];
m7_29 -> m7_36  [key=2, style=dotted];
m7_30 -> m7_29  [key=0, style=solid];
m7_30 -> m7_37  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_34  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_24  [key=2, style=dotted];
m7_34 -> m7_25  [color=blue, key=0, style=bold];
m7_42 -> m7_43  [key=0, style=solid];
m7_45 -> m7_48  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_49  [key=2, style=dotted];
m7_43 -> m7_45  [color=darkseagreen4, key=1, label=parent, style=dashed];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [key=0, style=solid];
m7_44 -> m7_47  [key=0, style=solid];
m7_46 -> m7_48  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_48 -> m7_42  [color=blue, key=0, style=bold];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_63  [key=2, style=dotted];
m7_51 -> m7_56  [color=darkseagreen4, key=1, label=processName, style=dashed];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_60  [key=0, style=solid];
m7_58 -> m7_66  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_64  [key=2, style=dotted];
m7_52 -> m7_55  [color=darkseagreen4, key=1, label=processesByName, style=dashed];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_59  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m7_56 -> m7_61  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_61  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_61  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_56  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_54 -> m7_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_61 -> m7_62  [key=0, style=solid];
m7_60 -> m7_55  [key=0, style=solid];
m7_60 -> m7_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_65  [key=2, style=dotted];
m7_59 -> m7_62  [key=0, style=solid];
m7_62 -> m7_50  [color=blue, key=0, style=bold];
m7_49 -> m7_71  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_50  [key=2, style=dotted];
m7_71 -> m7_67  [key=2, style=dotted];
m7_72 -> m7_49  [color=blue, key=0, style=bold];
m7_67 -> m7_68  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_65  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_66  [key=2, style=dotted];
m7_69 -> m7_63  [key=2, style=dotted];
m7_70 -> m7_67  [color=blue, key=0, style=bold];
m7_35 -> m7_38  [key=0, style=solid];
m7_35 -> m7_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_40  [key=2, style=dotted];
m7_38 -> m7_41  [key=2, style=dotted];
m7_38 -> m7_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_39 -> m7_35  [color=blue, key=0, style=bold];
m7_73 -> m7_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_47  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_45  [key=2, style=dotted];
m11_44 -> m11_42  [color=blue, key=0, style=bold];
m11_44 -> m11_36  [color=blue, key=0, style=bold];
m11_61 -> m11_62  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_66  [key=0, style=solid];
m11_62 -> m11_69  [key=0, style=solid];
m11_63 -> m11_64  [key=0, style=solid];
m11_66 -> m11_67  [key=0, style=solid];
m11_69 -> m11_70  [key=0, style=solid];
m11_64 -> m11_65  [key=0, style=solid];
m11_65 -> m11_73  [key=0, style=solid];
m11_65 -> m11_74  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_68 -> m11_73  [key=0, style=solid];
m11_68 -> m11_74  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_71 -> m11_72  [key=0, style=solid];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_74  [key=2, style=dotted];
m11_73 -> m11_61  [color=blue, key=0, style=bold];
m11_19 -> m11_20  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_5  [color=darkorchid, key=3, label="method methodReturn bool CanSubmitOrder", style=bold];
m11_3 -> m11_16  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_6  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m11_4 -> m11_17  [key=2, style=dotted];
m11_4 -> m11_18  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [color=darkseagreen4, key=1, label=thirtyMinuteConsolidator, style=dashed];
m11_5 -> m11_19  [key=2, style=dotted];
m11_5 -> m11_20  [key=2, style=dotted];
m11_6 -> m11_3  [color=blue, key=0, style=bold];
m11_6 -> m11_7  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_22  [key=2, style=dotted];
m11_20 -> m11_23  [key=2, style=dotted];
m11_20 -> m11_24  [key=2, style=dotted];
m11_20 -> m11_25  [key=2, style=dotted];
m11_20 -> m11_26  [key=2, style=dotted];
m11_21 -> m11_19  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_28  [key=2, style=dotted];
m11_27 -> m11_25  [color=blue, key=0, style=bold];
m11_27 -> m11_28  [color=red, key=0, style=solid];
m11_27 -> m11_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_27 -> m11_29  [color=red, key=3, label="method methodReturn decimal GetLeverage", style=bold];
m11_27 -> m11_32  [color=darkorchid, key=3, label="method methodReturn decimal GetLeverage", style=bold];
m11_27 -> m11_35  [color=darkorchid, key=3, label="method methodReturn decimal GetLeverage", style=bold];
m11_23 -> m11_60  [color=darkorchid, key=3, label="Property variable System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string> DefaultMarkets", style=bold];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_5  [color=darkorchid, key=3, label="method methodReturn bool CanUpdateOrder", style=bold];
m11_7 -> m11_21  [key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [color=darkseagreen4, key=1, label=oneDayConsolidator, style=dashed];
m11_8 -> m11_19  [key=2, style=dotted];
m11_8 -> m11_22  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_23  [key=2, style=dotted];
m11_10 -> m11_7  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_12  [color=darkseagreen4, key=1, label=three_oneDayBar, style=dashed];
m11_10 -> m11_24  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_35  [key=2, style=dotted];
m11_32 -> m11_41  [key=0, style=solid];
m11_33 -> m11_34  [key=0, style=solid];
m11_34 -> m11_31  [color=blue, key=0, style=bold];
m11_34 -> m11_35  [key=0, style=solid];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m11_36 -> m11_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m11_36 -> m11_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m11_36 -> m11_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_40  [key=0, style=solid];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_45  [key=2, style=dotted];
m11_38 -> m11_46  [key=2, style=dotted];
m11_39 -> m11_43  [key=0, style=solid];
m11_39 -> m11_47  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_43  [key=0, style=solid];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_45  [key=2, style=dotted];
m11_41 -> m11_46  [key=2, style=dotted];
m11_41 -> m11_27  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_1 -> m11_14  [color=green, key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_15  [key=2, style=dotted];
m11_2 -> m11_4  [color=darkseagreen4, key=1, label=start, style=dashed];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_26  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_11 -> m11_5  [color=darkorchid, key=3, label="method methodReturn bool CanExecuteOrder", style=bold];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_21  [key=2, style=dotted];
m11_13 -> m11_0  [color=blue, key=0, style=bold];
m11_13 -> m11_11  [color=blue, key=0, style=bold];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_52  [key=0, style=solid];
m11_47 -> m11_56  [key=0, style=solid];
m11_46 -> m11_47  [key=0, style=solid];
m11_28 -> m11_29  [color=red, key=0, style=solid];
m11_28 -> m11_30  [color=red, key=0, style=solid];
m11_28 -> m11_11  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.TradeBar consolidated", style=bold];
m11_28 -> m11_48  [key=0, style=solid];
m11_28 -> m11_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_33  [key=0, style=solid];
m11_30 -> m11_36  [key=0, style=solid];
m11_29 -> m11_41  [color=red, key=0, style=solid];
m11_35 -> m11_41  [key=0, style=solid];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_77  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_82  [key=0, style=solid];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_80  [key=0, style=solid];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_85  [key=2, style=dotted];
m11_78 -> m11_79  [key=0, style=solid];
m11_80 -> m11_81  [key=0, style=solid];
m11_79 -> m11_83  [key=0, style=solid];
m11_79 -> m11_84  [key=2, style=dotted];
m11_81 -> m11_83  [key=0, style=solid];
m11_81 -> m11_84  [key=2, style=dotted];
m11_83 -> m11_75  [color=blue, key=0, style=bold];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [key=2, style=dotted];
m11_16 -> m11_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_20  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_45  [key=2, style=dotted];
m11_48 -> m11_46  [key=2, style=dotted];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_51  [key=2, style=dotted];
m11_50 -> m11_28  [color=blue, key=0, style=bold];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_58  [key=0, style=solid];
m11_51 -> m11_59  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_1  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_52 -> m11_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DataConsolidationAlgorithm", style=dashed];
m11_56 -> m11_57  [key=0, style=solid];
m11_53 -> m11_54  [key=0, style=solid];
m11_54 -> m11_55  [key=0, style=solid];
m11_55 -> m11_58  [key=0, style=solid];
m11_55 -> m11_60  [key=2, style=dotted];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_59  [key=2, style=dotted];
m11_58 -> m11_46  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>", style=dashed];
m11_17 -> m11_14  [color=blue, key=0, style=bold];
m11_86 -> m11_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.DefaultBrokerageModel", style=dashed];
m11_86 -> m11_28  [color=red, key=1, label="QuantConnect.Brokerages.DefaultBrokerageModel", style=dashed];
m11_87 -> m11_20  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m13_105 -> m13_125  [key=0, style=solid];
m13_105 -> m13_127  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_105 -> m13_129  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_105 -> m13_85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol other", style=bold];
m13_105 -> m13_131  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol other", style=bold];
m13_105 -> m13_23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol other", style=bold];
m13_105 -> m13_86  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m13_105 -> m13_88  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m13_125 -> m13_126  [key=0, style=solid];
m13_125 -> m13_127  [key=0, style=solid];
m13_125 -> m13_101  [key=2, style=dotted];
m13_127 -> m13_128  [key=0, style=solid];
m13_127 -> m13_129  [key=0, style=solid];
m13_127 -> m13_101  [key=2, style=dotted];
m13_129 -> m13_130  [key=0, style=solid];
m13_129 -> m13_103  [key=2, style=dotted];
m13_126 -> m13_130  [key=0, style=solid];
m13_128 -> m13_130  [key=0, style=solid];
m13_130 -> m13_105  [color=blue, key=0, style=bold];
m13_162 -> m13_163  [key=0, style=solid];
m13_163 -> m13_164  [key=0, style=solid];
m13_163 -> m13_165  [key=2, style=dotted];
m13_164 -> m13_162  [color=blue, key=0, style=bold];
m13_106 -> m13_107  [key=0, style=solid];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_109  [key=2, style=dotted];
m13_108 -> m13_106  [color=blue, key=0, style=bold];
m13_110 -> m13_111  [key=0, style=solid];
m13_110 -> m13_114  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_111 -> m13_112  [key=0, style=solid];
m13_111 -> m13_113  [color=darkseagreen4, key=1, label=str, style=dashed];
m13_114 -> m13_115  [key=0, style=solid];
m13_114 -> m13_116  [color=darkseagreen4, key=1, label=sym, style=dashed];
m13_112 -> m13_113  [key=0, style=solid];
m13_112 -> m13_114  [key=0, style=solid];
m13_113 -> m13_118  [key=0, style=solid];
m13_113 -> m13_119  [key=2, style=dotted];
m13_115 -> m13_116  [key=0, style=solid];
m13_115 -> m13_117  [key=0, style=solid];
m13_116 -> m13_118  [key=0, style=solid];
m13_116 -> m13_119  [key=2, style=dotted];
m13_117 -> m13_118  [key=0, style=solid];
m13_117 -> m13_120  [key=2, style=dotted];
m13_118 -> m13_110  [color=blue, key=0, style=bold];
m13_121 -> m13_122  [key=0, style=solid];
m13_122 -> m13_123  [key=0, style=solid];
m13_122 -> m13_124  [key=2, style=dotted];
m13_123 -> m13_121  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m13_0 -> m13_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_17  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m13_0 -> m13_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_24  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Symbol Create", style=bold];
m13_0 -> m13_25  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Symbol Create", style=bold];
m13_1 -> m13_2  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_6  [key=0, style=solid];
m13_3 -> m13_8  [key=0, style=solid];
m13_3 -> m13_10  [key=0, style=solid];
m13_3 -> m13_12  [key=0, style=solid];
m13_3 -> m13_14  [key=0, style=solid];
m13_3 -> m13_17  [key=0, style=solid];
m13_5 -> m13_18  [key=0, style=solid];
m13_5 -> m13_20  [key=2, style=dotted];
m13_7 -> m13_18  [key=0, style=solid];
m13_7 -> m13_21  [key=2, style=dotted];
m13_9 -> m13_18  [key=0, style=solid];
m13_9 -> m13_22  [key=2, style=dotted];
m13_11 -> m13_18  [key=0, style=solid];
m13_11 -> m13_23  [key=2, style=dotted];
m13_13 -> m13_19  [key=0, style=solid];
m13_13 -> m13_24  [key=2, style=dotted];
m13_16 -> m13_19  [key=0, style=solid];
m13_16 -> m13_25  [key=2, style=dotted];
m13_17 -> m13_19  [key=0, style=solid];
m13_17 -> m13_26  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_27  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_18  [color=darkseagreen4, key=1, label=underlyingSumbol, style=dashed];
m13_2 -> m13_2  [color=darkorchid, key=3, label="Local variable QuantConnect.Symbol underlyingSumbol", style=bold];
m13_4 -> m13_5  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_14 -> m13_15  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_19 -> m13_0  [color=blue, key=0, style=bold];
m13_136 -> m13_137  [key=0, style=solid];
m13_136 -> m13_138  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_136 -> m13_139  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_137 -> m13_138  [key=0, style=solid];
m13_137 -> m13_139  [key=0, style=solid];
m13_137 -> m13_101  [key=2, style=dotted];
m13_138 -> m13_140  [key=0, style=solid];
m13_138 -> m13_101  [key=2, style=dotted];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_105  [key=2, style=dotted];
m13_140 -> m13_136  [color=blue, key=0, style=bold];
m13_131 -> m13_132  [key=0, style=solid];
m13_131 -> m13_133  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_131 -> m13_134  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_131 -> m13_105  [color=darkorchid, key=3, label="method methodReturn bool op_Equality", style=bold];
m13_132 -> m13_133  [key=0, style=solid];
m13_132 -> m13_134  [key=0, style=solid];
m13_132 -> m13_101  [key=2, style=dotted];
m13_133 -> m13_135  [key=0, style=solid];
m13_133 -> m13_101  [key=2, style=dotted];
m13_134 -> m13_135  [key=0, style=solid];
m13_134 -> m13_105  [key=2, style=dotted];
m13_135 -> m13_131  [color=blue, key=0, style=bold];
m13_25 -> m13_48  [key=0, style=solid];
m13_25 -> m13_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_25 -> m13_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_25 -> m13_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_25 -> m13_52  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_25 -> m13_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_25 -> m13_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_25 -> m13_0  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_58  [key=2, style=dotted];
m13_48 -> m13_55  [color=darkseagreen4, key=1, label=expirationSymbology, style=dashed];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_20  [key=2, style=dotted];
m13_49 -> m13_51  [color=darkseagreen4, key=1, label=underlyingSid, style=dashed];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_59  [key=2, style=dotted];
m13_50 -> m13_54  [color=darkseagreen4, key=1, label=sid, style=dashed];
m13_50 -> m13_56  [color=darkseagreen4, key=1, label=sid, style=dashed];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_32  [key=2, style=dotted];
m13_51 -> m13_56  [color=darkseagreen4, key=1, label=underlyingSymbol, style=dashed];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_54  [key=0, style=solid];
m13_53 -> m13_56  [key=0, style=solid];
m13_53 -> m13_44  [key=2, style=dotted];
m13_53 -> m13_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_60  [key=2, style=dotted];
m13_55 -> m13_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_54  [color=darkseagreen4, key=1, label=sid, style=dashed];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_27  [key=2, style=dotted];
m13_57 -> m13_25  [color=blue, key=0, style=bold];
m13_24 -> m13_28  [key=0, style=solid];
m13_24 -> m13_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_24 -> m13_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_24 -> m13_0  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m13_24 -> m13_13  [color=darkorchid, key=3, label="Parameter variable decimal strike", style=bold];
m13_24 -> m13_33  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Symbol CreateOption", style=bold];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_21  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_32  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_33  [key=2, style=dotted];
m13_31 -> m13_24  [color=blue, key=0, style=bold];
m13_23 -> m13_2  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol right", style=bold];
m13_23 -> m13_114  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol left", style=bold];
m13_158 -> m13_159  [key=0, style=solid];
m13_159 -> m13_160  [key=0, style=solid];
m13_159 -> m13_161  [key=2, style=dotted];
m13_160 -> m13_158  [color=blue, key=0, style=bold];
m13_154 -> m13_155  [key=0, style=solid];
m13_155 -> m13_156  [key=0, style=solid];
m13_155 -> m13_157  [key=2, style=dotted];
m13_156 -> m13_154  [color=blue, key=0, style=bold];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_67 -> m13_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_67 -> m13_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_77  [key=0, style=solid];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_27  [key=2, style=dotted];
m13_69 -> m13_76  [color=darkseagreen4, key=1, label=underlyingSymbol, style=dashed];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_74  [color=darkseagreen4, key=1, label=sym, style=dashed];
m13_72 -> m13_75  [color=darkseagreen4, key=1, label=sym, style=dashed];
m13_72 -> m13_67  [color=darkorchid, key=3, label="Local variable string sym", style=bold];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_27  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_76  [color=darkseagreen4, key=1, label=alias, style=dashed];
m13_76 -> m13_78  [key=0, style=solid];
m13_76 -> m13_27  [key=2, style=dotted];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_76  [key=0, style=solid];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_75  [key=0, style=solid];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_74  [color=darkseagreen4, key=1, label=sym, style=dashed];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_45  [key=2, style=dotted];
m13_75 -> m13_46  [key=2, style=dotted];
m13_75 -> m13_47  [key=2, style=dotted];
m13_78 -> m13_67  [color=blue, key=0, style=bold];
m13_166 -> m13_167  [key=0, style=solid];
m13_167 -> m13_168  [key=0, style=solid];
m13_167 -> m13_169  [key=2, style=dotted];
m13_168 -> m13_166  [color=blue, key=0, style=bold];
m13_144 -> m13_145  [key=0, style=solid];
m13_144 -> m13_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_144 -> m13_149  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_145 -> m13_146  [key=0, style=solid];
m13_146 -> m13_147  [key=0, style=solid];
m13_146 -> m13_148  [key=0, style=solid];
m13_146 -> m13_153  [key=2, style=dotted];
m13_149 -> m13_150  [key=0, style=solid];
m13_149 -> m13_151  [key=0, style=solid];
m13_149 -> m13_102  [key=2, style=dotted];
m13_147 -> m13_152  [key=0, style=solid];
m13_148 -> m13_149  [key=0, style=solid];
m13_150 -> m13_152  [key=0, style=solid];
m13_150 -> m13_32  [key=2, style=dotted];
m13_150 -> m13_150  [color=darkseagreen4, key=1, label=sid, style=dashed];
m13_151 -> m13_152  [key=0, style=solid];
m13_152 -> m13_144  [color=blue, key=0, style=bold];
m13_170 -> m13_171  [key=0, style=solid];
m13_171 -> m13_172  [key=0, style=solid];
m13_171 -> m13_44  [key=2, style=dotted];
m13_172 -> m13_170  [color=blue, key=0, style=bold];
m13_32 -> m13_61  [key=0, style=solid];
m13_32 -> m13_63  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m13_32 -> m13_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_63  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_44  [key=2, style=dotted];
m13_62 -> m13_65  [key=0, style=solid];
m13_62 -> m13_66  [key=2, style=dotted];
m13_65 -> m13_32  [color=blue, key=0, style=bold];
m13_27 -> m13_79  [key=0, style=solid];
m13_27 -> m13_81  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m13_27 -> m13_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_27 -> m13_83  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_81  [key=0, style=solid];
m13_81 -> m13_82  [key=0, style=solid];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_44  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_80 -> m13_84  [key=0, style=solid];
m13_80 -> m13_66  [key=2, style=dotted];
m13_84 -> m13_27  [color=blue, key=0, style=bold];
m13_141 -> m13_142  [key=0, style=solid];
m13_141 -> m13_121  [color=darkorchid, key=3, label="method methodReturn string op_Implicit", style=bold];
m13_142 -> m13_143  [key=0, style=solid];
m13_142 -> m13_121  [key=2, style=dotted];
m13_143 -> m13_141  [color=blue, key=0, style=bold];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_35  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_33 -> m13_36  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_33 -> m13_37  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_33 -> m13_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_33 -> m13_41  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_33 -> m13_29  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol underlyingSymbol", style=bold];
m13_33 -> m13_24  [color=darkorchid, key=3, label="Parameter variable string alias", style=bold];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_43  [key=2, style=dotted];
m13_34 -> m13_40  [color=darkseagreen4, key=1, label=sid, style=dashed];
m13_34 -> m13_41  [color=darkseagreen4, key=1, label=sid, style=dashed];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_37  [key=0, style=solid];
m13_36 -> m13_41  [key=0, style=solid];
m13_36 -> m13_44  [key=2, style=dotted];
m13_36 -> m13_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_39  [color=darkseagreen4, key=1, label=sym, style=dashed];
m13_37 -> m13_40  [color=darkseagreen4, key=1, label=sym, style=dashed];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_45  [key=2, style=dotted];
m13_40 -> m13_46  [key=2, style=dotted];
m13_40 -> m13_47  [key=2, style=dotted];
m13_40 -> m13_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_27  [key=2, style=dotted];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_40  [key=0, style=solid];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_39  [color=darkseagreen4, key=1, label=sym, style=dashed];
m13_42 -> m13_33  [color=blue, key=0, style=bold];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_88  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_85 -> m13_90  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_85 -> m13_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_85 -> m13_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_85 -> m13_97  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_85 -> m13_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_85 -> m13_105  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_88  [key=0, style=solid];
m13_86 -> m13_101  [key=2, style=dotted];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_90  [key=0, style=solid];
m13_88 -> m13_101  [key=2, style=dotted];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_93  [color=darkseagreen4, key=1, label=sidString, style=dashed];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_97  [key=0, style=solid];
m13_96 -> m13_100  [key=0, style=solid];
m13_96 -> m13_103  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_97 -> m13_99  [key=0, style=solid];
m13_97 -> m13_104  [key=2, style=dotted];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_105  [key=2, style=dotted];
m13_87 -> m13_100  [key=0, style=solid];
m13_89 -> m13_100  [key=0, style=solid];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_95  [key=0, style=solid];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_95  [key=0, style=solid];
m13_93 -> m13_102  [key=2, style=dotted];
m13_92 -> m13_93  [key=0, style=solid];
m13_94 -> m13_100  [key=0, style=solid];
m13_94 -> m13_103  [key=2, style=dotted];
m13_98 -> m13_100  [key=0, style=solid];
m13_100 -> m13_85  [color=blue, key=0, style=bold];
m13_173 -> m13_63  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_64  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_68  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_70  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_71  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_75  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_76  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_77  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_81  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_82  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_83  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_88  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_94  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_96  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_97  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_99  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_107  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_113  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_116  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_122  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_127  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_129  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_155  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_159  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_163  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_167  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_173 -> m13_171  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_11  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_6  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_7  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_8  [color=blue, key=0, style=bold];
m14_7 -> m14_14  [key=0, style=solid];
m14_7 -> m14_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_7 -> m14_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_7 -> m14_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_7 -> m14_2  [color=darkorchid, key=3, label="Parameter variable string quoteCurrency", style=bold];
m14_7 -> m14_10  [color=darkorchid, key=3, label="Parameter variable string quoteCurrency", style=bold];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_16  [key=0, style=solid];
m14_15 -> m14_18  [key=0, style=solid];
m14_15 -> m14_19  [key=2, style=dotted];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_20  [key=2, style=dotted];
m14_16 -> m14_18  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_21  [key=2, style=dotted];
m14_18 -> m14_7  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_6  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_7  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_0  [color=blue, key=0, style=bold];
m14_22 -> m14_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m14_22 -> m14_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m14_22 -> m14_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m14_22 -> m14_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_11  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_12  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_13  [key=2, style=dotted];
m15_4 -> m15_5  [color=green, key=0, style=solid];
m15_4 -> m15_14  [key=2, style=dotted];
m15_5 -> m15_6  [color=green, key=0, style=solid];
m15_5 -> m15_15  [color=green, key=2, style=dotted];
m15_5 -> m15_9  [color=green, key=1, label=security, style=dashed];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_16  [key=2, style=dotted];
m15_6 -> m15_8  [color=darkseagreen4, key=1, label=con, style=dashed];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_18  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_17  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_10 -> m15_0  [color=blue, key=0, style=bold];
m15_19 -> m15_20  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_35  [key=2, style=dotted];
m15_20 -> m15_36  [key=2, style=dotted];
m15_20 -> m15_22  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_20 -> m15_23  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_20 -> m15_25  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_20 -> m15_27  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_20 -> m15_29  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_23  [key=0, style=solid];
m15_22 -> m15_34  [key=0, style=solid];
m15_22 -> m15_37  [key=2, style=dotted];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_25  [key=0, style=solid];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=0, style=solid];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_34  [key=0, style=solid];
m15_24 -> m15_34  [key=0, style=solid];
m15_24 -> m15_38  [key=2, style=dotted];
m15_26 -> m15_34  [key=0, style=solid];
m15_26 -> m15_38  [key=2, style=dotted];
m15_28 -> m15_34  [key=0, style=solid];
m15_28 -> m15_38  [key=2, style=dotted];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_38  [key=2, style=dotted];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_39  [key=2, style=dotted];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> m15_39  [key=2, style=dotted];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_40  [key=2, style=dotted];
m15_34 -> m15_19  [color=blue, key=0, style=bold];
m15_41 -> m15_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_5  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m15_41 -> m15_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_0  [color=blue, key=0, style=bold];
m16_21 -> m16_22  [key=0, style=solid];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_0  [key=2, style=dotted];
m16_23 -> m16_21  [color=blue, key=0, style=bold];
m16_24 -> m16_25  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_30  [key=2, style=dotted];
m16_25 -> m16_27  [color=darkseagreen4, key=1, label=value, style=dashed];
m16_25 -> m16_28  [color=darkseagreen4, key=1, label=value, style=dashed];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_28  [key=0, style=solid];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_31  [key=2, style=dotted];
m16_27 -> m16_27  [color=darkseagreen4, key=1, label=value, style=dashed];
m16_28 -> m16_29  [key=0, style=solid];
m16_29 -> m16_24  [color=blue, key=0, style=bold];
m16_32 -> m16_33  [key=0, style=solid];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_35 -> m16_36  [key=0, style=solid];
m16_36 -> m16_32  [color=blue, key=0, style=bold];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m16_4 -> m16_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_7  [color=darkseagreen4, key=1, label=holding, style=dashed];
m16_5 -> m16_8  [color=darkseagreen4, key=1, label=holding, style=dashed];
m16_5 -> m16_9  [color=darkseagreen4, key=1, label=holding, style=dashed];
m16_5 -> m16_13  [color=darkseagreen4, key=1, label=holding, style=dashed];
m16_5 -> m16_15  [color=darkseagreen4, key=1, label=holding, style=dashed];
m16_5 -> m16_16  [color=darkseagreen4, key=1, label=holding, style=dashed];
m16_5 -> m16_17  [color=darkseagreen4, key=1, label=holding, style=dashed];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_19  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_9 -> m16_10  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_15  [key=0, style=solid];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_20  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_20  [key=2, style=dotted];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_20  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_15  [color=darkseagreen4, key=1, label=rounding, style=dashed];
m16_12 -> m16_16  [color=darkseagreen4, key=1, label=rounding, style=dashed];
m16_12 -> m16_12  [color=darkorchid, key=3, label="Local variable int rounding", style=bold];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_16  [color=darkseagreen4, key=1, label=rounding, style=dashed];
m16_18 -> m16_4  [color=blue, key=0, style=bold];
m16_37 -> m16_1  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_2  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_6  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_7  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_8  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_9  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_10  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_11  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_15  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_16  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_17  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_22  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_25  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_26  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_37 -> m16_27  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m16_38 -> m16_33  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmControl", style=dashed];
m16_38 -> m16_34  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmControl", style=dashed];
m16_38 -> m16_35  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmControl", style=dashed];
m18_4 -> m18_5  [key=0, style=solid];
m18_5 -> m18_4  [color=blue, key=0, style=bold];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_2  [color=blue, key=0, style=bold];
m18_6 -> m18_7  [key=0, style=solid];
m18_7 -> m18_6  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_0 -> m19_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m19_0 -> m19_8  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_0 -> m19_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m19_0 -> m19_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_12  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_14  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_16  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_17  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m19_0 -> m19_20  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_23  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m19_0 -> m19_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m19_0 -> m19_37  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m19_0 -> m19_40  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_41  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_43  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_45  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_49  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_51  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_53  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m19_0 -> m19_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_73  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_81  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_106  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_108  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_113  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_115  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_117  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_123  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_125  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_127  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_132  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_134  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_136  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_140  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m19_0 -> m19_142  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m19_0 -> m19_144  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_147  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_150  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m19_0 -> m19_153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_154  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m19_0 -> m19_155  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_0 -> m19_158  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m19_0 -> m19_159  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_0 -> m19_162  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_0 -> m19_163  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_0 -> m19_164  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_0 -> m19_165  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_166  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_0 -> m19_167  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_38  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
m19_2 -> m19_40  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
m19_2 -> m19_167  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_34  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_171  [key=2, style=dotted];
m19_11 -> m19_122  [color=darkseagreen4, key=1, label=hasOnTradeBar, style=dashed];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_171  [key=2, style=dotted];
m19_12 -> m19_124  [color=darkseagreen4, key=1, label=hasOnTick, style=dashed];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_171  [key=2, style=dotted];
m19_13 -> m19_15  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
m19_13 -> m19_131  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_171  [key=2, style=dotted];
m19_14 -> m19_133  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_171  [key=2, style=dotted];
m19_16 -> m19_69  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
m19_16 -> m19_112  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_171  [key=2, style=dotted];
m19_17 -> m19_74  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
m19_17 -> m19_114  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_27  [key=0, style=solid];
m19_18 -> m19_20  [color=darkseagreen4, key=1, label=config, style=dashed];
m19_18 -> m19_21  [color=darkseagreen4, key=1, label=config, style=dashed];
m19_18 -> m19_23  [color=darkseagreen4, key=1, label=config, style=dashed];
m19_18 -> m19_26  [color=darkseagreen4, key=1, label=config, style=dashed];
m19_20 -> m19_21  [key=0, style=solid];
m19_20 -> m19_172  [key=2, style=dotted];
m19_20 -> m19_173  [key=2, style=dotted];
m19_20 -> m19_22  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m19_20 -> m19_26  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_175  [key=2, style=dotted];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_143  [key=0, style=solid];
m19_28 -> m19_179  [key=2, style=dotted];
m19_28 -> m19_30  [color=darkseagreen4, key=1, label=newData, style=dashed];
m19_28 -> m19_42  [color=darkseagreen4, key=1, label=newData, style=dashed];
m19_28 -> m19_43  [color=darkseagreen4, key=1, label=newData, style=dashed];
m19_28 -> m19_60  [color=darkseagreen4, key=1, label=newData, style=dashed];
m19_28 -> m19_61  [color=darkseagreen4, key=1, label=newData, style=dashed];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_180  [key=2, style=dotted];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_181  [key=2, style=dotted];
m19_37 -> m19_182  [key=2, style=dotted];
m19_39 -> m19_41  [key=0, style=solid];
m19_39 -> m19_183  [key=2, style=dotted];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_181  [key=2, style=dotted];
m19_40 -> m19_183  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_167  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_184  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_185  [key=2, style=dotted];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_186  [key=2, style=dotted];
m19_45 -> m19_47  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_187  [key=2, style=dotted];
m19_49 -> m19_48  [key=0, style=solid];
m19_49 -> m19_188  [key=2, style=dotted];
m19_49 -> m19_189  [key=2, style=dotted];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_53  [key=0, style=solid];
m19_51 -> m19_190  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_191  [key=2, style=dotted];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_64  [color=darkseagreen4, key=1, label=config, style=dashed];
m19_62 -> m19_77  [color=darkseagreen4, key=1, label=config, style=dashed];
m19_62 -> m19_78  [color=darkseagreen4, key=1, label=config, style=dashed];
m19_62 -> m19_106  [color=darkseagreen4, key=1, label=config, style=dashed];
m19_68 -> m19_69  [key=0, style=solid];
m19_68 -> m19_196  [key=2, style=dotted];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_198  [key=2, style=dotted];
m19_81 -> m19_82  [key=0, style=solid];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_65  [key=0, style=solid];
m19_106 -> m19_209  [key=2, style=dotted];
m19_108 -> m19_109  [key=0, style=solid];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_209  [key=2, style=dotted];
m19_115 -> m19_116  [key=0, style=solid];
m19_115 -> m19_121  [key=0, style=solid];
m19_115 -> m19_209  [key=2, style=dotted];
m19_117 -> m19_118  [key=0, style=solid];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_209  [key=2, style=dotted];
m19_125 -> m19_126  [key=0, style=solid];
m19_125 -> m19_140  [key=0, style=solid];
m19_125 -> m19_209  [key=2, style=dotted];
m19_127 -> m19_128  [key=0, style=solid];
m19_132 -> m19_133  [key=0, style=solid];
m19_132 -> m19_209  [key=2, style=dotted];
m19_134 -> m19_135  [key=0, style=solid];
m19_134 -> m19_140  [key=0, style=solid];
m19_134 -> m19_209  [key=2, style=dotted];
m19_136 -> m19_137  [key=0, style=solid];
m19_140 -> m19_141  [key=0, style=solid];
m19_140 -> m19_210  [key=2, style=dotted];
m19_142 -> m19_30  [key=0, style=solid];
m19_142 -> m19_211  [key=2, style=dotted];
m19_144 -> m19_145  [key=0, style=solid];
m19_144 -> m19_150  [key=0, style=solid];
m19_144 -> m19_213  [key=2, style=dotted];
m19_147 -> m19_148  [key=0, style=solid];
m19_147 -> m19_214  [key=2, style=dotted];
m19_150 -> m19_151  [key=0, style=solid];
m19_150 -> m19_211  [key=2, style=dotted];
m19_153 -> m19_154  [key=0, style=solid];
m19_153 -> m19_215  [key=2, style=dotted];
m19_154 -> m19_155  [key=0, style=solid];
m19_154 -> m19_216  [key=2, style=dotted];
m19_155 -> m19_156  [key=0, style=solid];
m19_155 -> m19_217  [key=2, style=dotted];
m19_158 -> m19_159  [key=0, style=solid];
m19_158 -> m19_216  [key=2, style=dotted];
m19_159 -> m19_160  [key=0, style=solid];
m19_159 -> m19_217  [key=2, style=dotted];
m19_162 -> m19_163  [key=0, style=solid];
m19_162 -> m19_218  [key=2, style=dotted];
m19_163 -> m19_164  [key=0, style=solid];
m19_163 -> m19_217  [key=2, style=dotted];
m19_164 -> m19_165  [key=0, style=solid];
m19_164 -> m19_217  [key=2, style=dotted];
m19_165 -> m19_166  [key=0, style=solid];
m19_165 -> m19_219  [key=2, style=dotted];
m19_165 -> m19_220  [key=2, style=dotted];
m19_166 -> m19_167  [key=0, style=solid];
m19_166 -> m19_181  [key=2, style=dotted];
m19_166 -> m19_182  [key=2, style=dotted];
m19_167 -> m19_168  [key=0, style=solid];
m19_167 -> m19_181  [key=2, style=dotted];
m19_167 -> m19_183  [key=2, style=dotted];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_40  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_169  [key=2, style=dotted];
m19_4 -> m19_11  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_12  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_13  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_14  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_16  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_17  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_21  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_26  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_106  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_113  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_115  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_123  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_125  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_132  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_4 -> m19_134  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_42  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_170  [key=2, style=dotted];
m19_5 -> m19_50  [color=darkseagreen4, key=1, label=marginCallFrequency, style=dashed];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_18  [key=0, style=solid];
m19_21 -> m19_174  [key=2, style=dotted];
m19_26 -> m19_18  [key=0, style=solid];
m19_26 -> m19_176  [key=2, style=dotted];
m19_26 -> m19_177  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_44  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
m19_50 -> m19_51  [key=0, style=solid];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_51  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_124  [key=0, style=solid];
m19_124 -> m19_125  [key=0, style=solid];
m19_124 -> m19_126  [key=0, style=solid];
m19_124 -> m19_140  [key=0, style=solid];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_87  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
m19_15 -> m19_95  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
m19_15 -> m19_121  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
m19_131 -> m19_132  [key=0, style=solid];
m19_131 -> m19_133  [key=0, style=solid];
m19_133 -> m19_134  [key=0, style=solid];
m19_133 -> m19_135  [key=0, style=solid];
m19_133 -> m19_140  [key=0, style=solid];
m19_87 -> m19_88  [key=0, style=solid];
m19_87 -> m19_89  [key=0, style=solid];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_101  [key=0, style=solid];
m19_121 -> m19_122  [key=0, style=solid];
m19_121 -> m19_131  [key=0, style=solid];
m19_69 -> m19_70  [key=0, style=solid];
m19_69 -> m19_65  [key=0, style=solid];
m19_112 -> m19_113  [key=0, style=solid];
m19_112 -> m19_114  [key=0, style=solid];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_65  [key=0, style=solid];
m19_114 -> m19_115  [key=0, style=solid];
m19_114 -> m19_116  [key=0, style=solid];
m19_114 -> m19_121  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_18  [key=0, style=solid];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_178  [key=2, style=dotted];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_26  [key=0, style=solid];
m19_24 -> m19_25  [key=0, style=solid];
m19_25 -> m19_168  [key=0, style=solid];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_143  [key=0, style=solid];
m19_143 -> m19_144  [key=0, style=solid];
m19_143 -> m19_212  [key=2, style=dotted];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_28  [key=0, style=solid];
m19_30 -> m19_35  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_36  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_42  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_43  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_44  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_50  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_53  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_56  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_57  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_58  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_59  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_60  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_61  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_91  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_92  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_30 -> m19_141  [color=darkseagreen4, key=1, label=time, style=dashed];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_112  [key=0, style=solid];
m19_60 -> m19_62  [color=darkseagreen4, key=1, label=i, style=dashed];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_63  [color=darkseagreen4, key=1, label=dataPoints, style=dashed];
m19_61 -> m19_65  [color=darkseagreen4, key=1, label=dataPoints, style=dashed];
m19_31 -> m19_32  [key=0, style=solid];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_42  [key=0, style=solid];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_192  [key=2, style=dotted];
m19_56 -> m19_89  [color=darkseagreen4, key=1, label=newBars, style=dashed];
m19_56 -> m19_92  [color=darkseagreen4, key=1, label=newBars, style=dashed];
m19_56 -> m19_131  [color=darkseagreen4, key=1, label=newBars, style=dashed];
m19_56 -> m19_132  [color=darkseagreen4, key=1, label=newBars, style=dashed];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_193  [key=2, style=dotted];
m19_57 -> m19_102  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
m19_57 -> m19_104  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
m19_57 -> m19_133  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
m19_57 -> m19_134  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_194  [key=2, style=dotted];
m19_58 -> m19_70  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
m19_58 -> m19_112  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
m19_58 -> m19_113  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_195  [key=2, style=dotted];
m19_59 -> m19_75  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
m19_59 -> m19_114  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
m19_59 -> m19_115  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_201  [key=2, style=dotted];
m19_91 -> m19_202  [key=2, style=dotted];
m19_91 -> m19_200  [key=2, style=dotted];
m19_92 -> m19_65  [key=0, style=solid];
m19_92 -> m19_201  [key=2, style=dotted];
m19_92 -> m19_200  [key=2, style=dotted];
m19_141 -> m19_142  [key=0, style=solid];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_34  [key=0, style=solid];
m19_33 -> m19_168  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_50  [key=0, style=solid];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_50  [key=0, style=solid];
m19_52 -> m19_28  [key=0, style=solid];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_169  [key=2, style=dotted];
m19_54 -> m19_88  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
m19_54 -> m19_122  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
m19_54 -> m19_123  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_169  [key=2, style=dotted];
m19_55 -> m19_97  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
m19_55 -> m19_99  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
m19_55 -> m19_124  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
m19_55 -> m19_125  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
m19_88 -> m19_90  [key=0, style=solid];
m19_88 -> m19_65  [key=0, style=solid];
m19_97 -> m19_98  [key=0, style=solid];
m19_97 -> m19_100  [key=0, style=solid];
m19_97 -> m19_203  [key=2, style=dotted];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_205  [key=2, style=dotted];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_65  [key=0, style=solid];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_105  [key=0, style=solid];
m19_102 -> m19_207  [key=2, style=dotted];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_208  [key=2, style=dotted];
m19_70 -> m19_65  [key=0, style=solid];
m19_70 -> m19_197  [key=2, style=dotted];
m19_75 -> m19_65  [key=0, style=solid];
m19_75 -> m19_197  [key=2, style=dotted];
m19_63 -> m19_64  [key=0, style=solid];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_60  [key=0, style=solid];
m19_65 -> m19_71  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m19_65 -> m19_78  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m19_65 -> m19_85  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m19_65 -> m19_93  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m19_65 -> m19_106  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_60  [key=0, style=solid];
m19_77 -> m19_78  [key=0, style=solid];
m19_77 -> m19_80  [key=0, style=solid];
m19_77 -> m19_85  [key=0, style=solid];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_199  [key=2, style=dotted];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_68  [color=darkseagreen4, key=1, label=dividend, style=dashed];
m19_66 -> m19_70  [color=darkseagreen4, key=1, label=dividend, style=dashed];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_73  [color=darkseagreen4, key=1, label=split, style=dashed];
m19_71 -> m19_75  [color=darkseagreen4, key=1, label=split, style=dashed];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_88  [color=darkseagreen4, key=1, label=bar, style=dashed];
m19_85 -> m19_89  [color=darkseagreen4, key=1, label=bar, style=dashed];
m19_85 -> m19_91  [color=darkseagreen4, key=1, label=bar, style=dashed];
m19_85 -> m19_92  [color=darkseagreen4, key=1, label=bar, style=dashed];
m19_93 -> m19_94  [key=0, style=solid];
m19_93 -> m19_97  [color=darkseagreen4, key=1, label=tick, style=dashed];
m19_93 -> m19_99  [color=darkseagreen4, key=1, label=tick, style=dashed];
m19_93 -> m19_100  [color=darkseagreen4, key=1, label=tick, style=dashed];
m19_93 -> m19_102  [color=darkseagreen4, key=1, label=tick, style=dashed];
m19_93 -> m19_104  [color=darkseagreen4, key=1, label=tick, style=dashed];
m19_93 -> m19_105  [color=darkseagreen4, key=1, label=tick, style=dashed];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_71  [key=0, style=solid];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_76  [key=0, style=solid];
m19_76 -> m19_77  [key=0, style=solid];
m19_76 -> m19_78  [color=darkseagreen4, key=1, label=j, style=dashed];
m19_76 -> m19_79  [color=darkseagreen4, key=1, label=j, style=dashed];
m19_79 -> m19_77  [key=0, style=solid];
m19_79 -> m19_79  [color=darkseagreen4, key=1, label=j, style=dashed];
m19_80 -> m19_81  [key=0, style=solid];
m19_82 -> m19_83  [key=0, style=solid];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_200  [key=2, style=dotted];
m19_84 -> m19_168  [key=0, style=solid];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_93  [key=0, style=solid];
m19_90 -> m19_91  [key=0, style=solid];
m19_94 -> m19_95  [key=0, style=solid];
m19_94 -> m19_106  [key=0, style=solid];
m19_100 -> m19_65  [key=0, style=solid];
m19_100 -> m19_206  [key=2, style=dotted];
m19_105 -> m19_65  [key=0, style=solid];
m19_105 -> m19_206  [key=2, style=dotted];
m19_96 -> m19_97  [key=0, style=solid];
m19_101 -> m19_102  [key=0, style=solid];
m19_98 -> m19_99  [key=0, style=solid];
m19_98 -> m19_204  [key=2, style=dotted];
m19_98 -> m19_100  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_204  [key=2, style=dotted];
m19_103 -> m19_105  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m19_107 -> m19_108  [key=0, style=solid];
m19_109 -> m19_110  [key=0, style=solid];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_178  [key=2, style=dotted];
m19_111 -> m19_168  [key=0, style=solid];
m19_116 -> m19_117  [key=0, style=solid];
m19_118 -> m19_119  [key=0, style=solid];
m19_119 -> m19_120  [key=0, style=solid];
m19_119 -> m19_178  [key=2, style=dotted];
m19_120 -> m19_168  [key=0, style=solid];
m19_126 -> m19_127  [key=0, style=solid];
m19_128 -> m19_129  [key=0, style=solid];
m19_129 -> m19_130  [key=0, style=solid];
m19_129 -> m19_178  [key=2, style=dotted];
m19_130 -> m19_168  [key=0, style=solid];
m19_135 -> m19_136  [key=0, style=solid];
m19_137 -> m19_138  [key=0, style=solid];
m19_138 -> m19_139  [key=0, style=solid];
m19_138 -> m19_178  [key=2, style=dotted];
m19_139 -> m19_168  [key=0, style=solid];
m19_145 -> m19_146  [key=0, style=solid];
m19_146 -> m19_147  [key=0, style=solid];
m19_148 -> m19_149  [key=0, style=solid];
m19_148 -> m19_178  [key=2, style=dotted];
m19_149 -> m19_168  [key=0, style=solid];
m19_151 -> m19_152  [key=0, style=solid];
m19_151 -> m19_156  [key=0, style=solid];
m19_152 -> m19_153  [key=0, style=solid];
m19_152 -> m19_212  [key=2, style=dotted];
m19_156 -> m19_157  [key=0, style=solid];
m19_156 -> m19_160  [key=0, style=solid];
m19_157 -> m19_158  [key=0, style=solid];
m19_157 -> m19_212  [key=2, style=dotted];
m19_160 -> m19_161  [key=0, style=solid];
m19_160 -> m19_164  [key=0, style=solid];
m19_161 -> m19_162  [key=0, style=solid];
m19_161 -> m19_212  [key=2, style=dotted];
m19_168 -> m19_0  [color=blue, key=0, style=bold];
m19_171 -> m19_231  [key=0, style=solid];
m19_171 -> m19_233  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
m19_231 -> m19_232  [key=0, style=solid];
m19_231 -> m19_172  [key=2, style=dotted];
m19_231 -> m19_173  [key=2, style=dotted];
m19_231 -> m19_233  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
m19_233 -> m19_234  [key=0, style=solid];
m19_233 -> m19_176  [key=2, style=dotted];
m19_233 -> m19_177  [key=2, style=dotted];
m19_232 -> m19_233  [key=0, style=solid];
m19_232 -> m19_235  [key=0, style=solid];
m19_235 -> m19_236  [key=0, style=solid];
m19_234 -> m19_236  [key=0, style=solid];
m19_236 -> m19_171  [color=blue, key=0, style=bold];
m19_221 -> m19_222  [key=0, style=solid];
m19_222 -> m19_223  [key=0, style=solid];
m19_222 -> m19_226  [key=2, style=dotted];
m19_223 -> m19_224  [key=0, style=solid];
m19_224 -> m19_225  [key=0, style=solid];
m19_225 -> m19_221  [color=blue, key=0, style=bold];
m19_227 -> m19_228  [key=0, style=solid];
m19_227 -> m19_229  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m19_228 -> m19_229  [key=0, style=solid];
m19_229 -> m19_230  [key=0, style=solid];
m19_230 -> m19_227  [color=blue, key=0, style=bold];
m20_67 -> m20_51  [color=darkorchid, key=3, label="Parameter variable string fileName", style=bold];
m20_67 -> m20_74  [key=0, style=solid];
m20_67 -> m20_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_74 -> m20_75  [key=0, style=solid];
m20_74 -> m20_86  [key=2, style=dotted];
m20_74 -> m20_83  [color=darkseagreen4, key=1, label=rows, style=dashed];
m20_74 -> m20_84  [color=darkseagreen4, key=1, label=rows, style=dashed];
m20_75 -> m20_76  [key=0, style=solid];
m20_75 -> m20_87  [key=2, style=dotted];
m20_75 -> m20_77  [color=darkseagreen4, key=1, label=zip, style=dashed];
m20_84 -> m20_85  [key=0, style=solid];
m20_83 -> m20_81  [key=0, style=solid];
m20_76 -> m20_77  [key=0, style=solid];
m20_76 -> m20_88  [key=2, style=dotted];
m20_76 -> m20_78  [color=darkseagreen4, key=1, label=stream, style=dashed];
m20_76 -> m20_79  [color=darkseagreen4, key=1, label=stream, style=dashed];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> m20_89  [key=2, style=dotted];
m20_81 -> m20_84  [key=0, style=solid];
m20_81 -> m20_83  [color=darkseagreen4, key=1, label=line, style=dashed];
m20_81 -> m20_82  [key=0, style=solid];
m20_81 -> m20_92  [key=2, style=dotted];
m20_82 -> m20_83  [key=0, style=solid];
m20_82 -> m20_93  [key=2, style=dotted];
m20_82 -> m20_94  [key=2, style=dotted];
m20_78 -> m20_79  [key=0, style=solid];
m20_78 -> m20_90  [key=2, style=dotted];
m20_79 -> m20_81  [color=darkseagreen4, key=1, label=reader, style=dashed];
m20_79 -> m20_80  [key=0, style=solid];
m20_79 -> m20_91  [key=2, style=dotted];
m20_80 -> m20_81  [key=0, style=solid];
m20_85 -> m20_67  [color=blue, key=0, style=bold];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m20_14 -> m20_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m20_14 -> m20_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m20_14 -> m20_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_19  [key=0, style=solid];
m20_15 -> m20_17  [color=darkseagreen4, key=1, label=typicalPrice, style=dashed];
m20_15 -> m20_18  [color=darkseagreen4, key=1, label=typicalPrice, style=dashed];
m20_18 -> m20_23  [key=0, style=solid];
m20_18 -> m20_24  [key=2, style=dotted];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_25  [key=2, style=dotted];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_25  [key=2, style=dotted];
m20_22 -> m20_24  [key=0, style=solid];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_18  [color=darkseagreen4, key=1, label=moneyFlow, style=dashed];
m20_19 -> m20_20  [key=0, style=solid];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_25  [key=2, style=dotted];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_23  [key=0, style=solid];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_23  [color=darkseagreen4, key=1, label=totalMoneyFlow, style=dashed];
m20_23 -> m20_14  [color=blue, key=0, style=bold];
m20_23 -> m20_24  [key=0, style=solid];
m20_45 -> m20_32  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m20_45 -> m20_38  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m20_45 -> m20_51  [color=darkorchid, key=3, label="Parameter variable string filePath", style=bold];
m20_45 -> m20_101  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m20_45 -> m20_27  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m20_45 -> m20_95  [key=0, style=solid];
m20_45 -> m20_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_45 -> m20_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_45 -> m20_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_45 -> m20_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_45 -> m20_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_45 -> m20_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_45 -> m20_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_45 -> m20_50  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m20_101 -> m20_102  [key=0, style=solid];
m20_101 -> m20_110  [key=2, style=dotted];
m20_101 -> m20_111  [key=2, style=dotted];
m20_95 -> m20_101  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m20_95 -> m20_96  [key=0, style=solid];
m20_95 -> m20_102  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m20_96 -> m20_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_96 -> m20_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_96 -> m20_97  [key=0, style=solid];
m20_96 -> m20_105  [key=2, style=dotted];
m20_100 -> m20_101  [key=0, style=solid];
m20_100 -> m20_108  [key=2, style=dotted];
m20_100 -> m20_109  [key=2, style=dotted];
m20_102 -> m20_103  [key=0, style=solid];
m20_102 -> m20_112  [key=2, style=dotted];
m20_97 -> m20_100  [key=0, style=solid];
m20_97 -> m20_98  [key=0, style=solid];
m20_97 -> m20_66  [key=2, style=dotted];
m20_98 -> m20_99  [key=0, style=solid];
m20_98 -> m20_106  [key=2, style=dotted];
m20_99 -> m20_100  [key=0, style=solid];
m20_99 -> m20_107  [key=2, style=dotted];
m20_103 -> m20_104  [key=0, style=solid];
m20_103 -> m20_107  [key=2, style=dotted];
m20_104 -> m20_45  [color=blue, key=0, style=bold];
m20_71 -> m20_72  [key=0, style=solid];
m20_72 -> m20_73  [key=0, style=solid];
m20_72 -> m20_47  [key=2, style=dotted];
m20_68 -> m20_69  [key=0, style=solid];
m20_73 -> m20_71  [color=blue, key=0, style=bold];
m20_69 -> m20_70  [key=0, style=solid];
m20_70 -> m20_68  [color=blue, key=0, style=bold];
m20_9 -> m20_10  [color=green, key=0, style=solid];
m20_9 -> m20_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_10 -> m20_11  [key=0, style=solid];
m20_10 -> m20_13  [key=2, style=dotted];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_13  [key=2, style=dotted];
m20_11 -> m20_0  [color=blue, key=0, style=bold];
m20_12 -> m20_9  [color=blue, key=0, style=bold];
m20_25 -> m20_14  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> source", style=bold];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_43  [key=2, style=dotted];
m20_33 -> m20_34  [key=0, style=solid];
m20_33 -> m20_44  [key=2, style=dotted];
m20_33 -> m20_45  [key=2, style=dotted];
m20_36 -> m20_28  [key=0, style=solid];
m20_36 -> m20_47  [key=2, style=dotted];
m20_36 -> m20_48  [key=2, style=dotted];
m20_38 -> m20_39  [key=0, style=solid];
m20_38 -> m20_43  [key=2, style=dotted];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_44  [key=2, style=dotted];
m20_39 -> m20_45  [key=2, style=dotted];
m20_27 -> m20_32  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_27 -> m20_33  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_27 -> m20_38  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_27 -> m20_39  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_27 -> m20_28  [key=0, style=solid];
m20_27 -> m20_42  [key=2, style=dotted];
m20_27 -> m20_29  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_27 -> m20_31  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_35  [key=0, style=solid];
m20_26 -> m20_33  [color=darkseagreen4, key=1, label=sb, style=dashed];
m20_26 -> m20_36  [color=darkseagreen4, key=1, label=sb, style=dashed];
m20_26 -> m20_39  [color=darkseagreen4, key=1, label=sb, style=dashed];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_41  [key=2, style=dotted];
m20_26 -> m20_34  [color=darkseagreen4, key=1, label=sb, style=dashed];
m20_26 -> m20_37  [color=darkseagreen4, key=1, label=sb, style=dashed];
m20_26 -> m20_1  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_2  [color=red, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_3  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_4  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_17  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_19  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_20  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_26 -> m20_23  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MoneyFlowIndex", style=dashed];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_46  [key=2, style=dotted];
m20_28 -> m20_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m20_28 -> m20_31  [color=darkseagreen4, key=1, label=data, style=dashed];
m20_28 -> m20_29  [key=0, style=solid];
m20_28 -> m20_37  [key=0, style=solid];
m20_28 -> m20_35  [color=darkseagreen4, key=1, label=data, style=dashed];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_38  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_35 -> m20_39  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_37 -> m20_38  [key=0, style=solid];
m20_37 -> m20_40  [key=0, style=solid];
m20_30 -> m20_13  [key=2, style=dotted];
m20_30 -> m20_40  [key=0, style=solid];
m20_29 -> m20_31  [key=0, style=solid];
m20_29 -> m20_30  [key=0, style=solid];
m20_40 -> m20_25  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_6  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m20_0 -> m20_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_0 -> m20_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m20_0 -> m20_4  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_0 -> m20_5  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_1 -> m20_2  [color=red, key=0, style=solid];
m20_2 -> m20_3  [color=red, key=0, style=solid];
m20_2 -> m20_6  [color=red, key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_6  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_6  [key=2, style=dotted];
m20_5 -> m20_0  [color=blue, key=0, style=bold];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_12  [key=2, style=dotted];
m20_6 -> m20_22  [color=darkorchid, key=3, label="method methodReturn decimal ComputeNextValue", style=bold];
m20_6 -> m20_7  [color=green, key=0, style=solid];
m20_7 -> m20_8  [color=green, key=0, style=solid];
m20_7 -> m20_9  [color=green, key=0, style=solid];
m20_8 -> m20_7  [color=blue, key=0, style=bold];
m20_8 -> m20_9  [color=green, key=0, style=solid];
m20_24 -> m20_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m20_24 -> m20_14  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> source", style=bold];
m20_24 -> m20_49  [key=0, style=solid];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_43  [key=2, style=dotted];
m20_51 -> m20_54  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m20_51 -> m20_55  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m20_51 -> m20_62  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m20_52 -> m20_53  [key=0, style=solid];
m20_52 -> m20_64  [key=2, style=dotted];
m20_52 -> m20_65  [key=2, style=dotted];
m20_52 -> m20_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_52 -> m20_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_52 -> m20_56  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m20_52 -> m20_58  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m20_62 -> m20_63  [key=0, style=solid];
m20_62 -> m20_44  [key=2, style=dotted];
m20_62 -> m20_45  [key=2, style=dotted];
m20_50 -> m20_51  [key=0, style=solid];
m20_50 -> m20_62  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m20_50 -> m20_42  [key=2, style=dotted];
m20_54 -> m20_55  [key=0, style=solid];
m20_54 -> m20_58  [key=0, style=solid];
m20_54 -> m20_66  [key=2, style=dotted];
m20_55 -> m20_67  [key=2, style=dotted];
m20_55 -> m20_56  [key=0, style=solid];
m20_55 -> m20_57  [color=darkseagreen4, key=1, label=rows, style=dashed];
m20_55 -> m20_59  [color=darkseagreen4, key=1, label=rows, style=dashed];
m20_53 -> m20_52  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.SortedDictionary<System.DateTime, string> rows", style=bold];
m20_53 -> m20_67  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.SortedDictionary<System.DateTime, string> rows", style=bold];
m20_53 -> m20_54  [key=0, style=solid];
m20_56 -> m20_57  [key=0, style=solid];
m20_56 -> m20_59  [key=0, style=solid];
m20_58 -> m20_59  [key=0, style=solid];
m20_49 -> m20_62  [color=darkseagreen4, key=1, label=sb, style=dashed];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_41  [key=2, style=dotted];
m20_49 -> m20_60  [color=darkseagreen4, key=1, label=sb, style=dashed];
m20_49 -> m20_61  [color=darkseagreen4, key=1, label=sb, style=dashed];
m20_61 -> m20_62  [key=0, style=solid];
m20_61 -> m20_63  [key=0, style=solid];
m20_60 -> m20_48  [key=2, style=dotted];
m20_60 -> m20_60  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m20_60 -> m20_59  [key=0, style=solid];
m20_57 -> m20_56  [key=0, style=solid];
m20_57 -> m20_57  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m20_59 -> m20_61  [key=0, style=solid];
m20_59 -> m20_60  [key=0, style=solid];
m20_63 -> m20_24  [color=blue, key=0, style=bold];
m20_43 -> m20_113  [key=0, style=solid];
m20_43 -> m20_27  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m20_43 -> m20_50  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m20_113 -> m20_114  [key=0, style=solid];
m20_113 -> m20_115  [key=2, style=dotted];
m20_114 -> m20_43  [color=blue, key=0, style=bold];
m20_116 -> m20_7  [color=green, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_9  [color=green, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_1  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_2  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_3  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_4  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_5  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_6  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_8  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_10  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_15  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_18  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_22  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_32  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_33  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_36  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_38  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_39  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_51  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_52  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_72  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_62  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_101  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_116 -> m20_113  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m21_20 -> m21_21  [color=green, key=0, style=solid];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_11  [key=0, style=solid];
m21_10 -> m21_14  [key=0, style=solid];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_15  [key=2, style=dotted];
m21_11 -> m21_13  [color=darkseagreen4, key=1, label=range2, style=dashed];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_15  [key=2, style=dotted];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_16  [key=2, style=dotted];
m21_14 -> m21_7  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_1 -> m21_4  [key=2, style=dotted];
m21_2 -> m21_0  [color=blue, key=0, style=bold];
m21_17 -> m21_19  [color=green, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m21_17 -> m21_20  [color=green, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m21_17 -> m21_18  [key=0, style=solid];
m21_19 -> m21_20  [color=green, key=0, style=solid];
m21_19 -> m21_23  [color=green, key=2, style=dotted];
m21_18 -> m21_19  [color=green, key=0, style=solid];
m21_18 -> m21_7  [key=2, style=dotted];
m21_21 -> m21_22  [color=green, key=0, style=solid];
m21_22 -> m21_17  [color=blue, key=0, style=bold];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_10  [color=darkseagreen4, key=1, label=range1, style=dashed];
m21_8 -> m21_13  [color=darkseagreen4, key=1, label=range1, style=dashed];
m21_7 -> m21_17  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.TradeBar current", style=bold];
m21_7 -> m21_23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.TradeBar previous", style=bold];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m21_7 -> m21_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m21_7 -> m21_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m21_24 -> m21_19  [color=green, key=1, label="QuantConnect.Indicators.AverageTrueRange", style=dashed];
m21_24 -> m21_20  [color=green, key=1, label="QuantConnect.Indicators.AverageTrueRange", style=dashed];
m21_24 -> m21_21  [color=green, key=1, label="QuantConnect.Indicators.AverageTrueRange", style=dashed];
m21_24 -> m21_1  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.AverageTrueRange", style=dashed];
m21_24 -> m21_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.AverageTrueRange", style=dashed];
m21_23 -> m21_17  [color=darkorchid, key=3, label="Field variable QuantConnect.Data.Market.TradeBar _previousInput", style=bold];
m23_18 -> m23_19  [key=0, style=solid];
m23_18 -> m23_11  [color=darkorchid, key=3, label="method methodReturn bool CancelOrder", style=bold];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_21  [key=0, style=solid];
m23_20 -> m23_22  [key=0, style=solid];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_11  [color=darkorchid, key=3, label="Field variable QuantConnect.Securities.Option.OptionSymbolProperties _symbolProperties", style=bold];
m23_22 -> m23_18  [color=blue, key=0, style=bold];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_11  [color=darkorchid, key=3, label="method methodReturn bool PlaceOrder", style=bold];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_11  [key=0, style=solid];
m23_10 -> m23_12  [key=0, style=solid];
m23_11 -> m23_12  [key=0, style=solid];
m23_12 -> m23_8  [color=blue, key=0, style=bold];
m23_4 -> m23_5  [key=0, style=solid];
m23_5 -> m23_6  [key=0, style=solid];
m23_6 -> m23_7  [key=0, style=solid];
m23_7 -> m23_4  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_0  [color=blue, key=0, style=bold];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_11  [color=darkorchid, key=3, label="method methodReturn bool UpdateOrder", style=bold];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_16  [key=0, style=solid];
m23_15 -> m23_17  [key=0, style=solid];
m23_16 -> m23_17  [key=0, style=solid];
m23_17 -> m23_13  [color=blue, key=0, style=bold];
m23_59 -> m23_60  [key=0, style=solid];
m23_60 -> m23_59  [color=blue, key=0, style=bold];
m23_23 -> m23_24  [key=0, style=solid];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_24  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_46  [key=0, style=solid];
m23_25 -> m23_29  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_30  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_34  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_36  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_41  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_42  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_25 -> m23_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_47  [key=2, style=dotted];
m23_26 -> m23_28  [color=darkseagreen4, key=1, label=sufficientBuyingPower, style=dashed];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_32  [color=darkseagreen4, key=1, label=model, style=dashed];
m23_29 -> m23_34  [color=darkseagreen4, key=1, label=model, style=dashed];
m23_29 -> m23_36  [color=darkseagreen4, key=1, label=model, style=dashed];
m23_29 -> m23_38  [color=darkseagreen4, key=1, label=model, style=dashed];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_33  [key=0, style=solid];
m23_30 -> m23_35  [key=0, style=solid];
m23_30 -> m23_37  [key=0, style=solid];
m23_32 -> m23_39  [key=0, style=solid];
m23_32 -> m23_44  [key=0, style=solid];
m23_32 -> m23_49  [key=2, style=dotted];
m23_34 -> m23_39  [key=0, style=solid];
m23_34 -> m23_44  [key=0, style=solid];
m23_34 -> m23_50  [key=2, style=dotted];
m23_36 -> m23_39  [key=0, style=solid];
m23_36 -> m23_44  [key=0, style=solid];
m23_36 -> m23_51  [key=2, style=dotted];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_44  [key=0, style=solid];
m23_38 -> m23_52  [key=2, style=dotted];
m23_38 -> m23_45  [color=darkseagreen4, key=1, label=fill, style=dashed];
m23_41 -> m23_44  [key=0, style=solid];
m23_41 -> m23_54  [key=2, style=dotted];
m23_41 -> m23_55  [key=2, style=dotted];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_42  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_42 -> m23_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_44 -> m23_45  [key=0, style=solid];
m23_44 -> m23_25  [key=0, style=solid];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_48  [key=2, style=dotted];
m23_27 -> m23_45  [color=darkseagreen4, key=1, label=fill, style=dashed];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_42  [key=0, style=solid];
m23_45 -> m23_25  [key=0, style=solid];
m23_45 -> m23_56  [key=2, style=dotted];
m23_31 -> m23_32  [key=0, style=solid];
m23_33 -> m23_34  [key=0, style=solid];
m23_35 -> m23_36  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_39 -> m23_40  [key=0, style=solid];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_53  [key=2, style=dotted];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_54  [key=2, style=dotted];
m23_43 -> m23_55  [key=2, style=dotted];
m23_46 -> m23_23  [color=blue, key=0, style=bold];
m23_57 -> m23_58  [key=0, style=solid];
m23_58 -> m23_57  [color=blue, key=0, style=bold];
m23_61 -> m23_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_36  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_43  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m23_61 -> m23_45  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m24_9 -> m24_10  [key=0, style=solid];
m24_10 -> m24_11  [key=0, style=solid];
m24_11 -> m24_9  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_2 -> m24_0  [color=blue, key=0, style=bold];
m24_6 -> m24_7  [key=0, style=solid];
m24_7 -> m24_8  [key=0, style=solid];
m24_8 -> m24_6  [color=blue, key=0, style=bold];
m24_3 -> m24_4  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_5 -> m24_3  [color=blue, key=0, style=bold];
m24_12 -> m24_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionSymbolProperties", style=dashed];
m24_12 -> m24_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionSymbolProperties", style=dashed];
m24_12 -> m24_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionSymbolProperties", style=dashed];
m24_12 -> m24_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionSymbolProperties", style=dashed];
m25_186 -> m25_187  [key=0, style=solid];
m25_187 -> m25_188  [key=0, style=solid];
m25_187 -> m25_192  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_188 -> m25_189  [key=0, style=solid];
m25_188 -> m25_190  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_188 -> m25_194  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_188 -> m25_199  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_192 -> m25_193  [key=0, style=solid];
m25_192 -> m25_146  [key=2, style=dotted];
m25_192 -> m25_192  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_192 -> m25_194  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_192 -> m25_198  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_192 -> m25_199  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_189 -> m25_190  [key=0, style=solid];
m25_190 -> m25_191  [key=0, style=solid];
m25_190 -> m25_206  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_190 -> m25_196  [color=darkseagreen4, key=1, label=filled, style=dashed];
m25_190 -> m25_200  [color=darkseagreen4, key=1, label=filled, style=dashed];
m25_194 -> m25_195  [key=0, style=solid];
m25_194 -> m25_84  [key=2, style=dotted];
m25_199 -> m25_196  [key=0, style=solid];
m25_199 -> m25_204  [key=2, style=dotted];
m25_191 -> m25_192  [key=0, style=solid];
m25_196 -> m25_197  [key=0, style=solid];
m25_196 -> m25_200  [key=0, style=solid];
m25_200 -> m25_201  [key=0, style=solid];
m25_200 -> m25_69  [key=2, style=dotted];
m25_193 -> m25_194  [key=0, style=solid];
m25_193 -> m25_83  [key=2, style=dotted];
m25_198 -> m25_199  [key=0, style=solid];
m25_195 -> m25_196  [key=0, style=solid];
m25_195 -> m25_202  [key=2, style=dotted];
m25_197 -> m25_198  [key=0, style=solid];
m25_197 -> m25_203  [key=2, style=dotted];
m25_201 -> m25_186  [color=blue, key=0, style=bold];
m25_440 -> m25_441  [key=0, style=solid];
m25_440 -> m25_444  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_441 -> m25_442  [key=0, style=solid];
m25_441 -> m25_226  [key=2, style=dotted];
m25_441 -> m25_443  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_442 -> m25_440  [color=blue, key=0, style=bold];
m25_45 -> m25_46  [key=0, style=solid];
m25_69 -> m25_47  [key=2, style=dotted];
m25_69 -> m25_77  [key=0, style=solid];
m25_69 -> m25_82  [key=2, style=dotted];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> m25_47  [key=2, style=dotted];
m25_65 -> m25_77  [key=0, style=solid];
m25_65 -> m25_80  [key=2, style=dotted];
m25_66 -> m25_67  [key=0, style=solid];
m25_67 -> m25_68  [key=0, style=solid];
m25_67 -> m25_69  [key=2, style=dotted];
m25_67 -> m25_47  [key=2, style=dotted];
m25_67 -> m25_77  [key=0, style=solid];
m25_67 -> m25_81  [key=2, style=dotted];
m25_68 -> m25_65  [color=blue, key=0, style=bold];
m25_68 -> m25_69  [key=0, style=solid];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_52  [key=2, style=dotted];
m25_394 -> m25_395  [key=0, style=solid];
m25_395 -> m25_396  [key=0, style=solid];
m25_395 -> m25_401  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_395 -> m25_408  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_395 -> m25_411  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_396 -> m25_397  [key=0, style=solid];
m25_396 -> m25_69  [key=2, style=dotted];
m25_401 -> m25_402  [key=0, style=solid];
m25_401 -> m25_404  [key=0, style=solid];
m25_408 -> m25_409  [key=0, style=solid];
m25_408 -> m25_411  [key=0, style=solid];
m25_411 -> m25_412  [key=0, style=solid];
m25_411 -> m25_69  [key=2, style=dotted];
m25_397 -> m25_398  [key=0, style=solid];
m25_397 -> m25_413  [key=2, style=dotted];
m25_397 -> m25_408  [color=darkseagreen4, key=1, label=tenMinutes, style=dashed];
m25_398 -> m25_399  [key=0, style=solid];
m25_398 -> m25_414  [key=2, style=dotted];
m25_399 -> m25_400  [key=0, style=solid];
m25_399 -> m25_414  [key=2, style=dotted];
m25_400 -> m25_401  [key=0, style=solid];
m25_400 -> m25_414  [key=2, style=dotted];
m25_402 -> m25_403  [key=0, style=solid];
m25_402 -> m25_203  [key=2, style=dotted];
m25_404 -> m25_405  [key=0, style=solid];
m25_404 -> m25_202  [key=2, style=dotted];
m25_404 -> m25_408  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m25_403 -> m25_401  [key=0, style=solid];
m25_403 -> m25_415  [key=2, style=dotted];
m25_405 -> m25_406  [key=0, style=solid];
m25_405 -> m25_414  [key=2, style=dotted];
m25_406 -> m25_407  [key=0, style=solid];
m25_406 -> m25_414  [key=2, style=dotted];
m25_407 -> m25_408  [key=0, style=solid];
m25_407 -> m25_414  [key=2, style=dotted];
m25_409 -> m25_410  [key=0, style=solid];
m25_409 -> m25_203  [key=2, style=dotted];
m25_410 -> m25_408  [key=0, style=solid];
m25_410 -> m25_415  [key=2, style=dotted];
m25_412 -> m25_394  [color=blue, key=0, style=bold];
m25_209 -> m25_210  [key=0, style=solid];
m25_210 -> m25_211  [key=0, style=solid];
m25_210 -> m25_35  [key=2, style=dotted];
m25_210 -> m25_213  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m25_210 -> m25_230  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m25_210 -> m25_217  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m25_211 -> m25_212  [key=0, style=solid];
m25_211 -> m25_35  [key=2, style=dotted];
m25_211 -> m25_213  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_211 -> m25_232  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_211 -> m25_220  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_213 -> m25_214  [key=0, style=solid];
m25_213 -> m25_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_213 -> m25_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_217 -> m25_218  [key=0, style=solid];
m25_217 -> m25_225  [key=2, style=dotted];
m25_212 -> m25_213  [key=0, style=solid];
m25_212 -> m25_216  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_212 -> m25_219  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_212 -> m25_221  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_220 -> m25_221  [key=0, style=solid];
m25_220 -> m25_225  [key=2, style=dotted];
m25_216 -> m25_217  [key=0, style=solid];
m25_216 -> m25_84  [key=2, style=dotted];
m25_219 -> m25_220  [key=0, style=solid];
m25_219 -> m25_37  [key=2, style=dotted];
m25_221 -> m25_222  [key=0, style=solid];
m25_221 -> m25_36  [key=2, style=dotted];
m25_214 -> m25_215  [key=0, style=solid];
m25_214 -> m25_146  [key=2, style=dotted];
m25_214 -> m25_216  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_214 -> m25_219  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_214 -> m25_222  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_214 -> m25_235  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_215 -> m25_216  [key=0, style=solid];
m25_215 -> m25_83  [key=2, style=dotted];
m25_222 -> m25_223  [key=0, style=solid];
m25_222 -> m25_226  [key=2, style=dotted];
m25_222 -> m25_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_218 -> m25_219  [key=0, style=solid];
m25_218 -> m25_203  [key=2, style=dotted];
m25_223 -> m25_224  [key=0, style=solid];
m25_223 -> m25_227  [key=2, style=dotted];
m25_224 -> m25_209  [color=blue, key=0, style=bold];
m25_43 -> m25_47  [key=2, style=dotted];
m25_43 -> m25_44  [key=0, style=solid];
m25_54 -> m25_55  [key=0, style=solid];
m25_48 -> m25_20  [color=darkorchid, key=3, label="Parameter variable JObject jObject", style=bold];
m25_48 -> m25_60  [key=0, style=solid];
m25_48 -> m25_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m25_48 -> m25_65  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_48 -> m25_67  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_48 -> m25_69  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_48 -> m25_3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_52  [key=2, style=dotted];
m25_60 -> m25_61  [key=0, style=solid];
m25_61 -> m25_62  [key=0, style=solid];
m25_61 -> m25_64  [key=0, style=solid];
m25_61 -> m25_66  [key=0, style=solid];
m25_61 -> m25_68  [key=0, style=solid];
m25_61 -> m25_70  [key=0, style=solid];
m25_61 -> m25_72  [key=0, style=solid];
m25_61 -> m25_74  [key=0, style=solid];
m25_61 -> m25_76  [key=0, style=solid];
m25_61 -> m25_59  [color=blue, key=0, style=bold];
m25_64 -> m25_65  [key=0, style=solid];
m25_64 -> m25_62  [color=blue, key=0, style=bold];
m25_77 -> m25_78  [key=0, style=solid];
m25_77 -> m25_82  [key=2, style=dotted];
m25_77 -> m25_79  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_77 -> m25_80  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_76 -> m25_78  [key=0, style=solid];
m25_76 -> m25_86  [key=2, style=dotted];
m25_76 -> m25_77  [key=0, style=solid];
m25_62 -> m25_63  [key=0, style=solid];
m25_70 -> m25_71  [key=0, style=solid];
m25_72 -> m25_73  [key=0, style=solid];
m25_72 -> m25_82  [key=2, style=dotted];
m25_72 -> m25_74  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_72 -> m25_75  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_74 -> m25_75  [key=0, style=solid];
m25_74 -> m25_84  [key=2, style=dotted];
m25_63 -> m25_77  [key=0, style=solid];
m25_63 -> m25_79  [key=2, style=dotted];
m25_63 -> m25_64  [key=0, style=solid];
m25_71 -> m25_77  [key=0, style=solid];
m25_71 -> m25_83  [key=2, style=dotted];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_74  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_71 -> m25_79  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_73 -> m25_77  [key=0, style=solid];
m25_73 -> m25_84  [key=2, style=dotted];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_83  [key=2, style=dotted];
m25_75 -> m25_77  [key=0, style=solid];
m25_75 -> m25_85  [key=2, style=dotted];
m25_75 -> m25_76  [key=0, style=solid];
m25_75 -> m25_80  [color=darkseagreen4, key=1, label=brokerageID, style=dashed];
m25_78 -> m25_48  [color=blue, key=0, style=bold];
m25_78 -> m25_79  [key=0, style=solid];
m25_78 -> m25_83  [key=2, style=dotted];
m25_38 -> m25_39  [color=green, key=0, style=solid];
m25_38 -> m25_51  [color=green, key=2, style=dotted];
m25_38 -> m25_53  [color=green, key=2, style=dotted];
m25_38 -> m25_47  [color=green, key=2, style=dotted];
m25_41 -> m25_42  [color=green, key=0, style=solid];
m25_41 -> m25_51  [color=green, key=2, style=dotted];
m25_41 -> m25_53  [color=green, key=2, style=dotted];
m25_41 -> m25_47  [color=green, key=2, style=dotted];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> m25_85  [key=2, style=dotted];
m25_80 -> m25_86  [key=2, style=dotted];
m25_0 -> m25_1  [key=0, style=solid];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_49  [key=0, style=solid];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_51  [key=0, style=solid];
m25_53 -> m25_54  [key=0, style=solid];
m25_56 -> m25_57  [key=0, style=solid];
m25_59 -> m25_60  [key=0, style=solid];
m25_59 -> m25_57  [color=blue, key=0, style=bold];
m25_46 -> m25_47  [key=0, style=solid];
m25_46 -> m25_49  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_46 -> m25_20  [color=blue, key=0, style=bold];
m25_51 -> m25_46  [color=blue, key=0, style=bold];
m25_55 -> m25_53  [color=blue, key=0, style=bold];
m25_57 -> m25_58  [key=0, style=solid];
m25_58 -> m25_56  [color=blue, key=0, style=bold];
m25_58 -> m25_47  [key=2, style=dotted];
m25_58 -> m25_59  [key=0, style=solid];
m25_104 -> m25_105  [key=0, style=solid];
m25_104 -> m25_52  [key=2, style=dotted];
m25_102 -> m25_103  [key=0, style=solid];
m25_102 -> m25_105  [key=0, style=solid];
m25_101 -> m25_102  [key=0, style=solid];
m25_103 -> m25_104  [key=0, style=solid];
m25_103 -> m25_96  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_103 -> m25_105  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_105 -> m25_101  [color=blue, key=0, style=bold];
m25_121 -> m25_122  [key=0, style=solid];
m25_121 -> m25_52  [key=2, style=dotted];
m25_119 -> m25_120  [key=0, style=solid];
m25_119 -> m25_122  [key=0, style=solid];
m25_118 -> m25_119  [key=0, style=solid];
m25_120 -> m25_121  [key=0, style=solid];
m25_120 -> m25_115  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_120 -> m25_122  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_122 -> m25_118  [color=blue, key=0, style=bold];
m25_150 -> m25_151  [key=0, style=solid];
m25_150 -> m25_52  [key=2, style=dotted];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_151  [key=0, style=solid];
m25_151 -> m25_152  [key=0, style=solid];
m25_151 -> m25_136  [color=darkseagreen4, key=1, label=price, style=dashed];
m25_151 -> m25_139  [color=darkseagreen4, key=1, label=price, style=dashed];
m25_151 -> m25_153  [color=darkseagreen4, key=1, label=price, style=dashed];
m25_147 -> m25_148  [key=0, style=solid];
m25_147 -> m25_151  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_149 -> m25_150  [key=0, style=solid];
m25_149 -> m25_143  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_149 -> m25_153  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_153 -> m25_147  [color=blue, key=0, style=bold];
m25_152 -> m25_153  [key=0, style=solid];
m25_152 -> m25_136  [color=darkseagreen4, key=1, label=delta, style=dashed];
m25_152 -> m25_139  [color=darkseagreen4, key=1, label=delta, style=dashed];
m25_184 -> m25_185  [key=0, style=solid];
m25_184 -> m25_52  [key=2, style=dotted];
m25_182 -> m25_183  [key=0, style=solid];
m25_182 -> m25_169  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m25_182 -> m25_172  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m25_182 -> m25_185  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m25_180 -> m25_181  [key=0, style=solid];
m25_180 -> m25_182  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_181 -> m25_182  [key=0, style=solid];
m25_181 -> m25_167  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_181 -> m25_185  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_185 -> m25_180  [color=blue, key=0, style=bold];
m25_183 -> m25_184  [key=0, style=solid];
m25_183 -> m25_169  [color=darkseagreen4, key=1, label=delta, style=dashed];
m25_183 -> m25_172  [color=darkseagreen4, key=1, label=delta, style=dashed];
m25_183 -> m25_185  [color=darkseagreen4, key=1, label=delta, style=dashed];
m25_206 -> m25_207  [key=0, style=solid];
m25_206 -> m25_208  [key=0, style=solid];
m25_205 -> m25_206  [key=0, style=solid];
m25_207 -> m25_208  [key=0, style=solid];
m25_207 -> m25_196  [color=darkseagreen4, key=1, label=filled, style=dashed];
m25_207 -> m25_200  [color=darkseagreen4, key=1, label=filled, style=dashed];
m25_208 -> m25_205  [color=blue, key=0, style=bold];
m25_230 -> m25_231  [key=0, style=solid];
m25_230 -> m25_52  [key=2, style=dotted];
m25_232 -> m25_233  [key=0, style=solid];
m25_232 -> m25_52  [key=2, style=dotted];
m25_229 -> m25_230  [key=0, style=solid];
m25_229 -> m25_231  [key=0, style=solid];
m25_231 -> m25_232  [key=0, style=solid];
m25_231 -> m25_233  [key=0, style=solid];
m25_235 -> m25_236  [key=0, style=solid];
m25_235 -> m25_237  [key=2, style=dotted];
m25_234 -> m25_235  [key=0, style=solid];
m25_228 -> m25_229  [key=0, style=solid];
m25_228 -> m25_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_233 -> m25_228  [color=blue, key=0, style=bold];
m25_236 -> m25_234  [color=blue, key=0, style=bold];
m25_255 -> m25_256  [key=0, style=solid];
m25_254 -> m25_255  [key=0, style=solid];
m25_254 -> m25_52  [key=2, style=dotted];
m25_252 -> m25_253  [key=0, style=solid];
m25_252 -> m25_255  [key=0, style=solid];
m25_253 -> m25_254  [key=0, style=solid];
m25_253 -> m25_253  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_253 -> m25_248  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_253 -> m25_256  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_251 -> m25_252  [key=0, style=solid];
m25_251 -> m25_255  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_256 -> m25_251  [color=blue, key=0, style=bold];
m25_282 -> m25_283  [key=0, style=solid];
m25_287 -> m25_288  [key=0, style=solid];
m25_287 -> m25_52  [key=2, style=dotted];
m25_286 -> m25_287  [key=0, style=solid];
m25_286 -> m25_288  [key=0, style=solid];
m25_290 -> m25_291  [key=0, style=solid];
m25_290 -> m25_52  [key=2, style=dotted];
m25_292 -> m25_293  [key=0, style=solid];
m25_283 -> m25_284  [key=0, style=solid];
m25_284 -> m25_282  [color=blue, key=0, style=bold];
m25_285 -> m25_286  [key=0, style=solid];
m25_288 -> m25_285  [color=blue, key=0, style=bold];
m25_289 -> m25_290  [key=0, style=solid];
m25_291 -> m25_289  [color=blue, key=0, style=bold];
m25_293 -> m25_294  [key=0, style=solid];
m25_294 -> m25_292  [color=blue, key=0, style=bold];
m25_330 -> m25_331  [key=0, style=solid];
m25_330 -> m25_52  [key=2, style=dotted];
m25_329 -> m25_330  [key=0, style=solid];
m25_329 -> m25_331  [key=0, style=solid];
m25_333 -> m25_334  [key=0, style=solid];
m25_333 -> m25_83  [key=2, style=dotted];
m25_334 -> m25_335  [key=0, style=solid];
m25_334 -> m25_52  [key=2, style=dotted];
m25_328 -> m25_329  [key=0, style=solid];
m25_331 -> m25_328  [color=blue, key=0, style=bold];
m25_332 -> m25_333  [key=0, style=solid];
m25_335 -> m25_332  [color=blue, key=0, style=bold];
m25_349 -> m25_350  [key=0, style=solid];
m25_349 -> m25_52  [key=2, style=dotted];
m25_348 -> m25_349  [key=0, style=solid];
m25_350 -> m25_348  [color=blue, key=0, style=bold];
m25_367 -> m25_368  [key=0, style=solid];
m25_367 -> m25_52  [key=2, style=dotted];
m25_366 -> m25_367  [key=0, style=solid];
m25_366 -> m25_368  [key=0, style=solid];
m25_370 -> m25_371  [key=0, style=solid];
m25_370 -> m25_364  [key=2, style=dotted];
m25_370 -> m25_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_373 -> m25_374  [key=0, style=solid];
m25_373 -> m25_364  [key=2, style=dotted];
m25_373 -> m25_375  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_369 -> m25_370  [key=0, style=solid];
m25_365 -> m25_366  [key=0, style=solid];
m25_368 -> m25_365  [color=blue, key=0, style=bold];
m25_371 -> m25_369  [color=blue, key=0, style=bold];
m25_372 -> m25_373  [key=0, style=solid];
m25_372 -> m25_376  [color=darkseagreen4, key=1, label=long, style=dashed];
m25_376 -> m25_377  [key=0, style=solid];
m25_374 -> m25_372  [color=blue, key=0, style=bold];
m25_375 -> m25_376  [key=0, style=solid];
m25_377 -> m25_375  [color=blue, key=0, style=bold];
m25_392 -> m25_393  [key=0, style=solid];
m25_392 -> m25_52  [key=2, style=dotted];
m25_391 -> m25_392  [key=0, style=solid];
m25_391 -> m25_393  [key=0, style=solid];
m25_390 -> m25_391  [key=0, style=solid];
m25_393 -> m25_390  [color=blue, key=0, style=bold];
m25_427 -> m25_428  [key=0, style=solid];
m25_427 -> m25_364  [key=2, style=dotted];
m25_427 -> m25_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_426 -> m25_427  [key=0, style=solid];
m25_426 -> m25_430  [color=darkseagreen4, key=1, label=long, style=dashed];
m25_430 -> m25_431  [key=0, style=solid];
m25_428 -> m25_426  [color=blue, key=0, style=bold];
m25_429 -> m25_430  [key=0, style=solid];
m25_431 -> m25_429  [color=blue, key=0, style=bold];
m25_438 -> m25_439  [key=0, style=solid];
m25_437 -> m25_438  [key=0, style=solid];
m25_439 -> m25_437  [color=blue, key=0, style=bold];
m25_444 -> m25_445  [key=0, style=solid];
m25_444 -> m25_237  [key=2, style=dotted];
m25_443 -> m25_444  [key=0, style=solid];
m25_445 -> m25_443  [color=blue, key=0, style=bold];
m25_1 -> m25_3  [key=2, style=dotted];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_4  [key=2, style=dotted];
m25_1 -> m25_5  [key=2, style=dotted];
m25_1 -> m25_6  [key=2, style=dotted];
m25_1 -> m25_7  [key=2, style=dotted];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_8  [key=2, style=dotted];
m25_2 -> m25_9  [key=2, style=dotted];
m25_336 -> m25_337  [key=0, style=solid];
m25_337 -> m25_338  [key=0, style=solid];
m25_337 -> m25_340  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_337 -> m25_343  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_337 -> m25_345  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_338 -> m25_339  [key=0, style=solid];
m25_338 -> m25_304  [key=2, style=dotted];
m25_338 -> m25_346  [color=darkseagreen4, key=1, label=balance, style=dashed];
m25_340 -> m25_341  [key=0, style=solid];
m25_343 -> m25_344  [key=0, style=solid];
m25_343 -> m25_84  [key=2, style=dotted];
m25_345 -> m25_346  [key=0, style=solid];
m25_345 -> m25_304  [key=2, style=dotted];
m25_339 -> m25_340  [key=0, style=solid];
m25_339 -> m25_35  [key=2, style=dotted];
m25_339 -> m25_349  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_339 -> m25_344  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_346 -> m25_347  [key=0, style=solid];
m25_346 -> m25_86  [key=2, style=dotted];
m25_344 -> m25_345  [key=0, style=solid];
m25_344 -> m25_225  [key=2, style=dotted];
m25_341 -> m25_342  [key=0, style=solid];
m25_341 -> m25_82  [key=2, style=dotted];
m25_341 -> m25_343  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_342 -> m25_343  [key=0, style=solid];
m25_342 -> m25_83  [key=2, style=dotted];
m25_347 -> m25_336  [color=blue, key=0, style=bold];
m25_87 -> m25_88  [key=0, style=solid];
m25_88 -> m25_89  [key=0, style=solid];
m25_89 -> m25_90  [key=0, style=solid];
m25_89 -> m25_35  [key=2, style=dotted];
m25_89 -> m25_91  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_89 -> m25_104  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_89 -> m25_95  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_90 -> m25_91  [key=0, style=solid];
m25_90 -> m25_94  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_90 -> m25_96  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_91 -> m25_92  [key=0, style=solid];
m25_91 -> m25_102  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_91 -> m25_96  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_95 -> m25_96  [key=0, style=solid];
m25_95 -> m25_38  [key=2, style=dotted];
m25_94 -> m25_95  [key=0, style=solid];
m25_94 -> m25_84  [key=2, style=dotted];
m25_96 -> m25_97  [key=0, style=solid];
m25_96 -> m25_99  [key=2, style=dotted];
m25_92 -> m25_93  [key=0, style=solid];
m25_92 -> m25_82  [key=2, style=dotted];
m25_92 -> m25_94  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_92 -> m25_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_93 -> m25_94  [key=0, style=solid];
m25_93 -> m25_83  [key=2, style=dotted];
m25_97 -> m25_98  [key=0, style=solid];
m25_97 -> m25_100  [key=2, style=dotted];
m25_98 -> m25_87  [color=blue, key=0, style=bold];
m25_35 -> m25_36  [color=green, key=0, style=solid];
m25_35 -> m25_42  [color=green, key=1, label=market, style=dashed];
m25_35 -> m25_44  [color=green, key=1, label=market, style=dashed];
m25_79 -> m25_80  [key=0, style=solid];
m25_79 -> m25_84  [key=2, style=dotted];
m25_106 -> m25_107  [key=0, style=solid];
m25_107 -> m25_108  [key=0, style=solid];
m25_108 -> m25_109  [key=0, style=solid];
m25_108 -> m25_35  [key=2, style=dotted];
m25_108 -> m25_110  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_108 -> m25_121  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_108 -> m25_114  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_109 -> m25_110  [key=0, style=solid];
m25_109 -> m25_113  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_109 -> m25_115  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_110 -> m25_111  [key=0, style=solid];
m25_110 -> m25_119  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_110 -> m25_115  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_114 -> m25_115  [key=0, style=solid];
m25_114 -> m25_38  [key=2, style=dotted];
m25_113 -> m25_114  [key=0, style=solid];
m25_113 -> m25_84  [key=2, style=dotted];
m25_115 -> m25_116  [key=0, style=solid];
m25_115 -> m25_99  [key=2, style=dotted];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> m25_82  [key=2, style=dotted];
m25_111 -> m25_113  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_111 -> m25_115  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_112 -> m25_113  [key=0, style=solid];
m25_112 -> m25_83  [key=2, style=dotted];
m25_116 -> m25_117  [key=0, style=solid];
m25_116 -> m25_100  [key=2, style=dotted];
m25_117 -> m25_106  [color=blue, key=0, style=bold];
m25_11 -> m25_12  [key=0, style=solid];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_34  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_34  [key=2, style=dotted];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_34  [key=2, style=dotted];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_35  [key=2, style=dotted];
m25_15 -> m25_17  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_15 -> m25_50  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_15 -> m25_22  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_15 -> m25_23  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_35  [key=2, style=dotted];
m25_16 -> m25_48  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m25_17 -> m25_18  [key=0, style=solid];
m25_17 -> m25_47  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_17 -> m25_49  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_22 -> m25_23  [key=0, style=solid];
m25_22 -> m25_38  [key=2, style=dotted];
m25_22 -> m25_39  [color=green, key=1, label=order, style=dashed];
m25_22 -> m25_42  [color=green, key=1, label=order, style=dashed];
m25_22 -> m25_48  [key=2, style=dotted];
m25_22 -> m25_24  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_25  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_26  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_27  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_28  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_29  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_31  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_22 -> m25_45  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_23 -> m25_20  [key=0, style=solid];
m25_23 -> m25_39  [key=2, style=dotted];
m25_23 -> m25_47  [key=2, style=dotted];
m25_23 -> m25_24  [key=0, style=solid];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_34  [key=2, style=dotted];
m25_19 -> m25_20  [key=0, style=solid];
m25_19 -> m25_36  [key=2, style=dotted];
m25_20 -> m25_21  [key=0, style=solid];
m25_20 -> m25_24  [key=0, style=solid];
m25_20 -> m25_36  [color=green, key=1, label=JObject, style=dashed];
m25_20 -> m25_37  [color=green, key=1, label=JObject, style=dashed];
m25_20 -> m25_38  [color=green, key=1, label=JObject, style=dashed];
m25_20 -> m25_40  [color=green, key=1, label=JObject, style=dashed];
m25_20 -> m25_41  [color=green, key=1, label=JObject, style=dashed];
m25_20 -> m25_22  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_23  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_25  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_26  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_27  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_28  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_29  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_30  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_31  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_32  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_20 -> m25_43  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_37  [key=2, style=dotted];
m25_21 -> m25_47  [key=2, style=dotted];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_34  [key=2, style=dotted];
m25_24 -> m25_47  [key=2, style=dotted];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_40  [key=2, style=dotted];
m25_25 -> m25_47  [key=2, style=dotted];
m25_26 -> m25_26  [key=0, style=solid];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_41  [key=2, style=dotted];
m25_26 -> m25_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_26 -> m25_47  [key=2, style=dotted];
m25_27 -> m25_28  [color=red, key=0, style=solid];
m25_27 -> m25_36  [key=2, style=dotted];
m25_27 -> m25_42  [key=2, style=dotted];
m25_27 -> m25_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_27 -> m25_47  [key=2, style=dotted];
m25_27 -> m25_29  [key=0, style=solid];
m25_28 -> m25_29  [color=red, key=0, style=solid];
m25_28 -> m25_43  [color=red, key=2, style=dotted];
m25_28 -> m25_44  [color=red, key=2, style=dotted];
m25_28 -> m25_47  [key=2, style=dotted];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_40  [key=2, style=dotted];
m25_29 -> m25_41  [key=2, style=dotted];
m25_29 -> m25_42  [key=2, style=dotted];
m25_29 -> m25_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_29 -> m25_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_29 -> m25_47  [key=2, style=dotted];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_43  [key=2, style=dotted];
m25_30 -> m25_44  [key=2, style=dotted];
m25_30 -> m25_42  [color=green, key=1, label=securityType, style=dashed];
m25_30 -> m25_34  [color=green, key=1, label=securityType, style=dashed];
m25_30 -> m25_47  [key=2, style=dotted];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_45  [key=2, style=dotted];
m25_31 -> m25_49  [key=2, style=dotted];
m25_31 -> m25_50  [key=2, style=dotted];
m25_31 -> m25_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_47  [key=2, style=dotted];
m25_33 -> m25_11  [color=blue, key=0, style=bold];
m25_33 -> m25_42  [color=green, key=1, label=market, style=dashed];
m25_33 -> m25_34  [color=green, key=0, style=solid];
m25_33 -> m25_44  [color=darkseagreen4, key=1, label=market, style=dashed];
m25_9 -> m25_432  [key=0, style=solid];
m25_432 -> m25_433  [key=0, style=solid];
m25_433 -> m25_9  [color=blue, key=0, style=bold];
m25_34 -> m25_36  [color=green, key=0, style=solid];
m25_34 -> m25_35  [color=green, key=0, style=solid];
m25_42 -> m25_45  [color=green, key=0, style=solid];
m25_42 -> m25_56  [color=green, key=2, style=dotted];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_10  [key=2, style=dotted];
m25_40 -> m25_41  [color=green, key=0, style=solid];
m25_40 -> m25_43  [color=green, key=0, style=solid];
m25_40 -> m25_51  [color=green, key=2, style=dotted];
m25_40 -> m25_364  [color=green, key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_56  [key=2, style=dotted];
m25_37 -> m25_38  [color=green, key=0, style=solid];
m25_37 -> m25_51  [color=green, key=2, style=dotted];
m25_37 -> m25_53  [color=green, key=2, style=dotted];
m25_37 -> m25_47  [color=green, key=2, style=dotted];
m25_37 -> m25_54  [color=green, key=2, style=dotted];
m25_37 -> m25_39  [color=green, key=1, label=sid, style=dashed];
m25_39 -> m25_45  [color=green, key=0, style=solid];
m25_39 -> m25_55  [color=green, key=2, style=dotted];
m25_36 -> m25_37  [color=green, key=0, style=solid];
m25_36 -> m25_40  [color=green, key=0, style=solid];
m25_36 -> m25_51  [color=green, key=2, style=dotted];
m25_36 -> m25_364  [color=green, key=2, style=dotted];
m25_81 -> m25_70  [color=blue, key=0, style=bold];
m25_4 -> m25_0  [color=blue, key=0, style=bold];
m25_434 -> m25_435  [key=0, style=solid];
m25_434 -> m25_438  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_435 -> m25_436  [key=0, style=solid];
m25_435 -> m25_226  [key=2, style=dotted];
m25_435 -> m25_437  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_436 -> m25_434  [color=blue, key=0, style=bold];
m25_154 -> m25_155  [key=0, style=solid];
m25_155 -> m25_156  [key=0, style=solid];
m25_156 -> m25_157  [key=0, style=solid];
m25_156 -> m25_35  [key=2, style=dotted];
m25_156 -> m25_160  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_156 -> m25_184  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_156 -> m25_165  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_156 -> m25_166  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_156 -> m25_175  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_157 -> m25_158  [key=0, style=solid];
m25_157 -> m25_160  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_157 -> m25_164  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_157 -> m25_171  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_157 -> m25_174  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_157 -> m25_176  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_160 -> m25_161  [key=0, style=solid];
m25_160 -> m25_182  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_165 -> m25_166  [key=0, style=solid];
m25_165 -> m25_38  [key=2, style=dotted];
m25_166 -> m25_167  [key=0, style=solid];
m25_166 -> m25_39  [key=2, style=dotted];
m25_175 -> m25_176  [key=0, style=solid];
m25_175 -> m25_38  [key=2, style=dotted];
m25_158 -> m25_159  [key=0, style=solid];
m25_164 -> m25_165  [key=0, style=solid];
m25_164 -> m25_84  [key=2, style=dotted];
m25_171 -> m25_172  [key=0, style=solid];
m25_171 -> m25_84  [key=2, style=dotted];
m25_174 -> m25_175  [key=0, style=solid];
m25_174 -> m25_84  [key=2, style=dotted];
m25_176 -> m25_177  [key=0, style=solid];
m25_176 -> m25_99  [key=2, style=dotted];
m25_159 -> m25_160  [key=0, style=solid];
m25_161 -> m25_162  [key=0, style=solid];
m25_162 -> m25_163  [key=0, style=solid];
m25_162 -> m25_82  [key=2, style=dotted];
m25_162 -> m25_162  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_162 -> m25_164  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_162 -> m25_169  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_163 -> m25_164  [key=0, style=solid];
m25_163 -> m25_83  [key=2, style=dotted];
m25_169 -> m25_170  [key=0, style=solid];
m25_169 -> m25_179  [key=2, style=dotted];
m25_169 -> m25_169  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_169 -> m25_171  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_169 -> m25_172  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_167 -> m25_168  [key=0, style=solid];
m25_167 -> m25_69  [key=2, style=dotted];
m25_168 -> m25_169  [key=0, style=solid];
m25_168 -> m25_176  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_170 -> m25_171  [key=0, style=solid];
m25_170 -> m25_83  [key=2, style=dotted];
m25_172 -> m25_173  [key=0, style=solid];
m25_172 -> m25_179  [key=2, style=dotted];
m25_172 -> m25_172  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_172 -> m25_174  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_172 -> m25_176  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_173 -> m25_174  [key=0, style=solid];
m25_173 -> m25_83  [key=2, style=dotted];
m25_177 -> m25_178  [key=0, style=solid];
m25_177 -> m25_100  [key=2, style=dotted];
m25_178 -> m25_154  [color=blue, key=0, style=bold];
m25_123 -> m25_124  [key=0, style=solid];
m25_124 -> m25_125  [key=0, style=solid];
m25_125 -> m25_126  [key=0, style=solid];
m25_125 -> m25_35  [key=2, style=dotted];
m25_125 -> m25_129  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_125 -> m25_150  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_125 -> m25_134  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_125 -> m25_135  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_125 -> m25_142  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_126 -> m25_127  [key=0, style=solid];
m25_126 -> m25_129  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_126 -> m25_133  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_126 -> m25_138  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_126 -> m25_141  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_126 -> m25_143  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_129 -> m25_130  [key=0, style=solid];
m25_129 -> m25_148  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_129 -> m25_151  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_129 -> m25_143  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_134 -> m25_135  [key=0, style=solid];
m25_134 -> m25_38  [key=2, style=dotted];
m25_135 -> m25_136  [key=0, style=solid];
m25_135 -> m25_39  [key=2, style=dotted];
m25_142 -> m25_143  [key=0, style=solid];
m25_142 -> m25_38  [key=2, style=dotted];
m25_127 -> m25_128  [key=0, style=solid];
m25_133 -> m25_134  [key=0, style=solid];
m25_133 -> m25_84  [key=2, style=dotted];
m25_138 -> m25_139  [key=0, style=solid];
m25_138 -> m25_84  [key=2, style=dotted];
m25_141 -> m25_142  [key=0, style=solid];
m25_141 -> m25_84  [key=2, style=dotted];
m25_143 -> m25_144  [key=0, style=solid];
m25_143 -> m25_99  [key=2, style=dotted];
m25_128 -> m25_129  [key=0, style=solid];
m25_130 -> m25_131  [key=0, style=solid];
m25_131 -> m25_132  [key=0, style=solid];
m25_131 -> m25_82  [key=2, style=dotted];
m25_131 -> m25_131  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_131 -> m25_133  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_131 -> m25_136  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_132 -> m25_133  [key=0, style=solid];
m25_132 -> m25_83  [key=2, style=dotted];
m25_136 -> m25_137  [key=0, style=solid];
m25_136 -> m25_146  [key=2, style=dotted];
m25_136 -> m25_136  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_136 -> m25_138  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_136 -> m25_139  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_137 -> m25_138  [key=0, style=solid];
m25_137 -> m25_83  [key=2, style=dotted];
m25_139 -> m25_140  [key=0, style=solid];
m25_139 -> m25_146  [key=2, style=dotted];
m25_139 -> m25_139  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_139 -> m25_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_139 -> m25_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_140 -> m25_141  [key=0, style=solid];
m25_140 -> m25_83  [key=2, style=dotted];
m25_144 -> m25_145  [key=0, style=solid];
m25_144 -> m25_100  [key=2, style=dotted];
m25_145 -> m25_123  [color=blue, key=0, style=bold];
m25_307 -> m25_308  [key=0, style=solid];
m25_308 -> m25_309  [key=0, style=solid];
m25_308 -> m25_310  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_308 -> m25_313  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_308 -> m25_319  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_309 -> m25_310  [key=0, style=solid];
m25_309 -> m25_35  [key=2, style=dotted];
m25_309 -> m25_330  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_309 -> m25_320  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_309 -> m25_321  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_310 -> m25_311  [key=0, style=solid];
m25_310 -> m25_329  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_313 -> m25_314  [key=0, style=solid];
m25_313 -> m25_333  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m25_319 -> m25_320  [key=0, style=solid];
m25_319 -> m25_84  [key=2, style=dotted];
m25_320 -> m25_321  [key=0, style=solid];
m25_320 -> m25_225  [key=2, style=dotted];
m25_321 -> m25_322  [key=0, style=solid];
m25_321 -> m25_39  [key=2, style=dotted];
m25_311 -> m25_312  [key=0, style=solid];
m25_311 -> m25_327  [key=2, style=dotted];
m25_311 -> m25_313  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m25_311 -> m25_333  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m25_311 -> m25_325  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m25_312 -> m25_313  [key=0, style=solid];
m25_312 -> m25_35  [key=2, style=dotted];
m25_312 -> m25_334  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m25_312 -> m25_322  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m25_312 -> m25_323  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m25_325 -> m25_326  [key=0, style=solid];
m25_325 -> m25_100  [key=2, style=dotted];
m25_322 -> m25_323  [key=0, style=solid];
m25_322 -> m25_225  [key=2, style=dotted];
m25_323 -> m25_324  [key=0, style=solid];
m25_323 -> m25_39  [key=2, style=dotted];
m25_314 -> m25_315  [key=0, style=solid];
m25_314 -> m25_316  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m25_314 -> m25_325  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m25_315 -> m25_316  [key=0, style=solid];
m25_315 -> m25_317  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_315 -> m25_320  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_315 -> m25_322  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_315 -> m25_324  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_316 -> m25_317  [key=0, style=solid];
m25_316 -> m25_325  [key=0, style=solid];
m25_317 -> m25_318  [key=0, style=solid];
m25_317 -> m25_82  [key=2, style=dotted];
m25_317 -> m25_250  [key=2, style=dotted];
m25_317 -> m25_319  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_324 -> m25_316  [key=0, style=solid];
m25_324 -> m25_324  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_318 -> m25_319  [key=0, style=solid];
m25_318 -> m25_83  [key=2, style=dotted];
m25_326 -> m25_307  [color=blue, key=0, style=bold];
m25_238 -> m25_239  [key=0, style=solid];
m25_239 -> m25_240  [key=0, style=solid];
m25_239 -> m25_244  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_239 -> m25_245  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_240 -> m25_241  [key=0, style=solid];
m25_240 -> m25_82  [key=2, style=dotted];
m25_240 -> m25_250  [key=2, style=dotted];
m25_240 -> m25_244  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_240 -> m25_255  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_240 -> m25_245  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_244 -> m25_245  [key=0, style=solid];
m25_244 -> m25_244  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_244 -> m25_252  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_244 -> m25_253  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_244 -> m25_255  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_244 -> m25_248  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_245 -> m25_246  [key=0, style=solid];
m25_245 -> m25_84  [key=2, style=dotted];
m25_241 -> m25_242  [key=0, style=solid];
m25_241 -> m25_83  [key=2, style=dotted];
m25_242 -> m25_243  [key=0, style=solid];
m25_242 -> m25_244  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_243 -> m25_244  [key=0, style=solid];
m25_243 -> m25_35  [key=2, style=dotted];
m25_243 -> m25_254  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m25_243 -> m25_246  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m25_246 -> m25_247  [key=0, style=solid];
m25_246 -> m25_225  [key=2, style=dotted];
m25_248 -> m25_249  [key=0, style=solid];
m25_248 -> m25_100  [key=2, style=dotted];
m25_247 -> m25_248  [key=0, style=solid];
m25_247 -> m25_203  [key=2, style=dotted];
m25_249 -> m25_238  [color=blue, key=0, style=bold];
m25_351 -> m25_352  [key=0, style=solid];
m25_352 -> m25_353  [key=0, style=solid];
m25_352 -> m25_354  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_352 -> m25_357  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_352 -> m25_359  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_353 -> m25_354  [key=0, style=solid];
m25_353 -> m25_35  [key=2, style=dotted];
m25_353 -> m25_367  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_353 -> m25_358  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_354 -> m25_355  [key=0, style=solid];
m25_354 -> m25_366  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_357 -> m25_358  [key=0, style=solid];
m25_357 -> m25_84  [key=2, style=dotted];
m25_359 -> m25_360  [key=0, style=solid];
m25_359 -> m25_362  [key=2, style=dotted];
m25_359 -> m25_363  [key=2, style=dotted];
m25_359 -> m25_370  [color=darkseagreen4, key=1, label=executions, style=dashed];
m25_359 -> m25_373  [color=darkseagreen4, key=1, label=executions, style=dashed];
m25_358 -> m25_359  [key=0, style=solid];
m25_358 -> m25_38  [key=2, style=dotted];
m25_355 -> m25_356  [key=0, style=solid];
m25_355 -> m25_82  [key=2, style=dotted];
m25_355 -> m25_250  [key=2, style=dotted];
m25_355 -> m25_357  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_355 -> m25_360  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_355 -> m25_370  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_356 -> m25_357  [key=0, style=solid];
m25_356 -> m25_83  [key=2, style=dotted];
m25_360 -> m25_361  [key=0, style=solid];
m25_360 -> m25_364  [key=2, style=dotted];
m25_360 -> m25_69  [key=2, style=dotted];
m25_360 -> m25_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_361 -> m25_351  [color=blue, key=0, style=bold];
m25_257 -> m25_258  [key=0, style=solid];
m25_258 -> m25_259  [key=0, style=solid];
m25_258 -> m25_260  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_258 -> m25_264  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_258 -> m25_266  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_258 -> m25_270  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_258 -> m25_273  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_259 -> m25_260  [key=0, style=solid];
m25_259 -> m25_203  [key=2, style=dotted];
m25_260 -> m25_261  [key=0, style=solid];
m25_260 -> m25_40  [key=2, style=dotted];
m25_260 -> m25_280  [key=2, style=dotted];
m25_260 -> m25_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_260 -> m25_262  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m25_260 -> m25_276  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m25_264 -> m25_265  [key=0, style=solid];
m25_264 -> m25_286  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_266 -> m25_267  [key=0, style=solid];
m25_270 -> m25_271  [key=0, style=solid];
m25_270 -> m25_84  [key=2, style=dotted];
m25_273 -> m25_274  [key=0, style=solid];
m25_273 -> m25_40  [key=2, style=dotted];
m25_273 -> m25_280  [key=2, style=dotted];
m25_273 -> m25_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_273 -> m25_276  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m25_273 -> m25_277  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m25_273 -> m25_278  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m25_261 -> m25_262  [key=0, style=solid];
m25_261 -> m25_44  [key=2, style=dotted];
m25_262 -> m25_263  [key=0, style=solid];
m25_262 -> m25_281  [key=2, style=dotted];
m25_262 -> m25_275  [color=darkseagreen4, key=1, label=hasSymbol, style=dashed];
m25_276 -> m25_279  [key=0, style=solid];
m25_276 -> m25_100  [key=2, style=dotted];
m25_263 -> m25_264  [key=0, style=solid];
m25_263 -> m25_35  [key=2, style=dotted];
m25_263 -> m25_287  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m25_263 -> m25_271  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m25_275 -> m25_276  [key=0, style=solid];
m25_275 -> m25_277  [key=0, style=solid];
m25_271 -> m25_272  [key=0, style=solid];
m25_271 -> m25_225  [key=2, style=dotted];
m25_265 -> m25_266  [key=0, style=solid];
m25_265 -> m25_35  [key=2, style=dotted];
m25_265 -> m25_290  [color=darkseagreen4, key=1, label=portfolioResetEvent, style=dashed];
m25_265 -> m25_272  [color=darkseagreen4, key=1, label=portfolioResetEvent, style=dashed];
m25_272 -> m25_273  [key=0, style=solid];
m25_272 -> m25_225  [key=2, style=dotted];
m25_267 -> m25_268  [key=0, style=solid];
m25_267 -> m25_276  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m25_267 -> m25_278  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m25_268 -> m25_269  [key=0, style=solid];
m25_268 -> m25_82  [key=2, style=dotted];
m25_268 -> m25_270  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_278 -> m25_279  [key=0, style=solid];
m25_278 -> m25_100  [key=2, style=dotted];
m25_269 -> m25_270  [key=0, style=solid];
m25_269 -> m25_83  [key=2, style=dotted];
m25_274 -> m25_275  [key=0, style=solid];
m25_274 -> m25_44  [key=2, style=dotted];
m25_277 -> m25_278  [key=0, style=solid];
m25_277 -> m25_281  [key=2, style=dotted];
m25_277 -> m25_69  [key=2, style=dotted];
m25_279 -> m25_257  [color=blue, key=0, style=bold];
m25_295 -> m25_296  [key=0, style=solid];
m25_296 -> m25_297  [key=0, style=solid];
m25_297 -> m25_298  [key=0, style=solid];
m25_297 -> m25_304  [key=2, style=dotted];
m25_297 -> m25_299  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m25_297 -> m25_302  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m25_298 -> m25_299  [key=0, style=solid];
m25_298 -> m25_305  [key=2, style=dotted];
m25_298 -> m25_69  [key=2, style=dotted];
m25_299 -> m25_300  [key=0, style=solid];
m25_299 -> m25_303  [key=0, style=solid];
m25_302 -> m25_299  [key=0, style=solid];
m25_302 -> m25_86  [key=2, style=dotted];
m25_300 -> m25_301  [key=0, style=solid];
m25_300 -> m25_306  [key=2, style=dotted];
m25_300 -> m25_300  [color=darkseagreen4, key=1, label=item, style=dashed];
m25_301 -> m25_302  [key=0, style=solid];
m25_301 -> m25_299  [key=0, style=solid];
m25_301 -> m25_301  [color=darkseagreen4, key=1, label=item, style=dashed];
m25_303 -> m25_295  [color=blue, key=0, style=bold];
m25_378 -> m25_379  [key=0, style=solid];
m25_379 -> m25_380  [key=0, style=solid];
m25_379 -> m25_381  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_379 -> m25_384  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_379 -> m25_387  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_380 -> m25_381  [key=0, style=solid];
m25_380 -> m25_35  [key=2, style=dotted];
m25_380 -> m25_392  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_380 -> m25_385  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_381 -> m25_382  [key=0, style=solid];
m25_381 -> m25_391  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_384 -> m25_385  [key=0, style=solid];
m25_384 -> m25_84  [key=2, style=dotted];
m25_387 -> m25_388  [key=0, style=solid];
m25_387 -> m25_36  [key=2, style=dotted];
m25_385 -> m25_386  [key=0, style=solid];
m25_385 -> m25_38  [key=2, style=dotted];
m25_382 -> m25_383  [key=0, style=solid];
m25_382 -> m25_146  [key=2, style=dotted];
m25_382 -> m25_384  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_383 -> m25_384  [key=0, style=solid];
m25_383 -> m25_83  [key=2, style=dotted];
m25_386 -> m25_387  [key=0, style=solid];
m25_386 -> m25_203  [key=2, style=dotted];
m25_388 -> m25_389  [key=0, style=solid];
m25_388 -> m25_86  [key=2, style=dotted];
m25_389 -> m25_378  [color=blue, key=0, style=bold];
m25_99 -> m25_416  [key=0, style=solid];
m25_99 -> m25_417  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m25_99 -> m25_418  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m25_99 -> m25_427  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m25_416 -> m25_417  [key=0, style=solid];
m25_416 -> m25_421  [key=0, style=solid];
m25_417 -> m25_418  [key=0, style=solid];
m25_417 -> m25_420  [key=0, style=solid];
m25_417 -> m25_36  [key=2, style=dotted];
m25_417 -> m25_419  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m25_418 -> m25_419  [key=0, style=solid];
m25_418 -> m25_417  [key=0, style=solid];
m25_418 -> m25_364  [key=2, style=dotted];
m25_418 -> m25_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_421 -> m25_422  [key=0, style=solid];
m25_421 -> m25_425  [key=2, style=dotted];
m25_420 -> m25_421  [key=0, style=solid];
m25_420 -> m25_424  [key=2, style=dotted];
m25_419 -> m25_423  [key=0, style=solid];
m25_422 -> m25_423  [key=0, style=solid];
m25_423 -> m25_99  [color=blue, key=0, style=bold];
m25_446 -> m25_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_17  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_19  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_29  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_32  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_66  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_71  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_90  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_93  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_109  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_112  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_126  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_132  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_137  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_140  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_157  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_163  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_170  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_173  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_188  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_193  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_212  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_215  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_239  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_241  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_258  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_269  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_296  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_308  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_318  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_337  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_342  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_352  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_356  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_379  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_383  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_446 -> m25_395  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m25_447 -> m25_48  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m25_448 -> m25_50  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_449 -> m25_104  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_450 -> m25_121  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_451 -> m25_150  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_452 -> m25_184  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_453 -> m25_230  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m25_454 -> m25_232  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m25_455 -> m25_235  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_456 -> m25_253  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_456 -> m25_256  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m25_457 -> m25_254  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m25_458 -> m25_255  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_459 -> m25_287  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m25_460 -> m25_290  [color=darkseagreen4, key=1, label=portfolioResetEvent, style=dashed];
m25_461 -> m25_330  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_462 -> m25_333  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m25_463 -> m25_334  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m25_464 -> m25_349  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_465 -> m25_367  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_466 -> m25_370  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_467 -> m25_370  [color=darkseagreen4, key=1, label=executions, style=dashed];
m25_467 -> m25_373  [color=darkseagreen4, key=1, label=executions, style=dashed];
m25_468 -> m25_376  [color=darkseagreen4, key=1, label=long, style=dashed];
m25_469 -> m25_392  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m25_470 -> m25_427  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m25_471 -> m25_430  [color=darkseagreen4, key=1, label=long, style=dashed];
m25_472 -> m25_432  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping", style=dashed];
m25_472 -> m25_435  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping", style=dashed];
m25_472 -> m25_441  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping", style=dashed];
m25_473 -> m25_438  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_474 -> m25_444  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_151 -> m26_326  [key=0, style=solid];
m26_151 -> m26_328  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m26_151 -> m26_330  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m26_151 -> m26_357  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_326 -> m26_327  [key=0, style=solid];
m26_326 -> m26_361  [key=2, style=dotted];
m26_326 -> m26_320  [key=2, style=dotted];
m26_326 -> m26_154  [key=2, style=dotted];
m26_326 -> m26_371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_326 -> m26_339  [color=darkseagreen4, key=1, label=data_keys, style=dashed];
m26_326 -> m26_343  [color=darkseagreen4, key=1, label=data_keys, style=dashed];
m26_326 -> m26_354  [color=darkseagreen4, key=1, label=data_keys, style=dashed];
m26_326 -> m26_356  [color=darkseagreen4, key=1, label=data_keys, style=dashed];
m26_328 -> m26_329  [key=0, style=solid];
m26_328 -> m26_330  [key=0, style=solid];
m26_330 -> m26_331  [key=0, style=solid];
m26_330 -> m26_334  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_335  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_337  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_338  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_339  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_341  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_342  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_343  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_344  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_347  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_348  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_350  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_351  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_330 -> m26_353  [color=darkseagreen4, key=1, label=live, style=dashed];
m26_357 -> m26_356  [key=0, style=solid];
m26_357 -> m26_370  [key=2, style=dotted];
m26_327 -> m26_328  [key=0, style=solid];
m26_339 -> m26_340  [key=0, style=solid];
m26_339 -> m26_366  [key=2, style=dotted];
m26_339 -> m26_367  [key=2, style=dotted];
m26_339 -> m26_144  [key=2, style=dotted];
m26_343 -> m26_344  [key=0, style=solid];
m26_343 -> m26_366  [key=2, style=dotted];
m26_343 -> m26_367  [key=2, style=dotted];
m26_343 -> m26_144  [key=2, style=dotted];
m26_354 -> m26_348  [key=0, style=solid];
m26_354 -> m26_369  [key=2, style=dotted];
m26_354 -> m26_366  [key=2, style=dotted];
m26_354 -> m26_367  [key=2, style=dotted];
m26_354 -> m26_144  [key=2, style=dotted];
m26_356 -> m26_357  [key=0, style=solid];
m26_356 -> m26_358  [key=0, style=solid];
m26_356 -> m26_360  [key=0, style=solid];
m26_329 -> m26_360  [key=0, style=solid];
m26_331 -> m26_332  [key=0, style=solid];
m26_331 -> m26_355  [key=0, style=solid];
m26_334 -> m26_335  [key=0, style=solid];
m26_334 -> m26_362  [key=2, style=dotted];
m26_335 -> m26_336  [key=0, style=solid];
m26_335 -> m26_148  [key=2, style=dotted];
m26_335 -> m26_344  [color=darkseagreen4, key=1, label=highResolutionCharts, style=dashed];
m26_337 -> m26_338  [key=0, style=solid];
m26_337 -> m26_365  [key=2, style=dotted];
m26_338 -> m26_339  [key=0, style=solid];
m26_341 -> m26_342  [key=0, style=solid];
m26_341 -> m26_365  [key=2, style=dotted];
m26_342 -> m26_343  [key=0, style=solid];
m26_344 -> m26_345  [key=0, style=solid];
m26_347 -> m26_348  [key=0, style=solid];
m26_347 -> m26_362  [key=2, style=dotted];
m26_348 -> m26_349  [key=0, style=solid];
m26_348 -> m26_356  [key=0, style=solid];
m26_348 -> m26_353  [color=darkseagreen4, key=1, label=name, style=dashed];
m26_348 -> m26_354  [color=darkseagreen4, key=1, label=name, style=dashed];
m26_350 -> m26_351  [key=0, style=solid];
m26_350 -> m26_148  [key=2, style=dotted];
m26_351 -> m26_352  [key=0, style=solid];
m26_351 -> m26_148  [key=2, style=dotted];
m26_353 -> m26_354  [key=0, style=solid];
m26_353 -> m26_139  [key=2, style=dotted];
m26_332 -> m26_333  [key=0, style=solid];
m26_332 -> m26_334  [color=darkseagreen4, key=1, label=start, style=dashed];
m26_332 -> m26_337  [color=darkseagreen4, key=1, label=start, style=dashed];
m26_332 -> m26_341  [color=darkseagreen4, key=1, label=start, style=dashed];
m26_355 -> m26_356  [key=0, style=solid];
m26_355 -> m26_68  [key=2, style=dotted];
m26_333 -> m26_334  [key=0, style=solid];
m26_333 -> m26_157  [key=2, style=dotted];
m26_333 -> m26_337  [color=darkseagreen4, key=1, label=stop, style=dashed];
m26_333 -> m26_341  [color=darkseagreen4, key=1, label=stop, style=dashed];
m26_336 -> m26_337  [key=0, style=solid];
m26_336 -> m26_363  [key=2, style=dotted];
m26_336 -> m26_364  [key=2, style=dotted];
m26_340 -> m26_341  [key=0, style=solid];
m26_340 -> m26_363  [key=2, style=dotted];
m26_340 -> m26_364  [key=2, style=dotted];
m26_345 -> m26_346  [key=0, style=solid];
m26_345 -> m26_152  [key=2, style=dotted];
m26_345 -> m26_153  [key=2, style=dotted];
m26_345 -> m26_347  [color=darkseagreen4, key=1, label=start, style=dashed];
m26_346 -> m26_347  [key=0, style=solid];
m26_346 -> m26_152  [key=2, style=dotted];
m26_346 -> m26_368  [key=2, style=dotted];
m26_349 -> m26_350  [key=0, style=solid];
m26_349 -> m26_194  [key=2, style=dotted];
m26_349 -> m26_351  [color=darkseagreen4, key=1, label=newPacket, style=dashed];
m26_349 -> m26_352  [color=darkseagreen4, key=1, label=newPacket, style=dashed];
m26_349 -> m26_353  [color=darkseagreen4, key=1, label=newPacket, style=dashed];
m26_349 -> m26_354  [color=darkseagreen4, key=1, label=newPacket, style=dashed];
m26_352 -> m26_353  [key=0, style=solid];
m26_352 -> m26_15  [key=2, style=dotted];
m26_358 -> m26_359  [key=0, style=solid];
m26_359 -> m26_360  [key=0, style=solid];
m26_359 -> m26_68  [key=2, style=dotted];
m26_360 -> m26_151  [color=blue, key=0, style=bold];
m26_380 -> m26_381  [key=0, style=solid];
m26_381 -> m26_382  [key=0, style=solid];
m26_382 -> m26_380  [color=blue, key=0, style=bold];
m26_416 -> m26_417  [key=0, style=solid];
m26_417 -> m26_418  [key=0, style=solid];
m26_418 -> m26_416  [color=blue, key=0, style=bold];
m26_246 -> m26_246  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m26_383 -> m26_384  [key=0, style=solid];
m26_384 -> m26_385  [key=0, style=solid];
m26_384 -> m26_386  [key=2, style=dotted];
m26_385 -> m26_383  [color=blue, key=0, style=bold];
m26_254 -> m26_255  [key=0, style=solid];
m26_254 -> m26_256  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_254 -> m26_258  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_255 -> m26_256  [key=0, style=solid];
m26_256 -> m26_257  [key=0, style=solid];
m26_256 -> m26_259  [key=0, style=solid];
m26_256 -> m26_260  [key=2, style=dotted];
m26_256 -> m26_256  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_258 -> m26_259  [key=0, style=solid];
m26_258 -> m26_235  [key=2, style=dotted];
m26_257 -> m26_258  [key=0, style=solid];
m26_257 -> m26_259  [key=0, style=solid];
m26_259 -> m26_254  [color=blue, key=0, style=bold];
m26_146 -> m26_176  [key=0, style=solid];
m26_146 -> m26_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>", style=dashed];
m26_146 -> m26_188  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>", style=dashed];
m26_176 -> m26_177  [key=0, style=solid];
m26_176 -> m26_183  [color=darkseagreen4, key=1, label=groupSize, style=dashed];
m26_176 -> m26_184  [color=darkseagreen4, key=1, label=groupSize, style=dashed];
m26_179 -> m26_180  [key=0, style=solid];
m26_179 -> m26_187  [key=0, style=solid];
m26_179 -> m26_181  [color=darkseagreen4, key=1, label=chart, style=dashed];
m26_179 -> m26_182  [color=darkseagreen4, key=1, label=chart, style=dashed];
m26_179 -> m26_186  [color=darkseagreen4, key=1, label=chart, style=dashed];
m26_188 -> m26_189  [key=0, style=solid];
m26_188 -> m26_149  [key=2, style=dotted];
m26_188 -> m26_194  [key=2, style=dotted];
m26_177 -> m26_178  [key=0, style=solid];
m26_177 -> m26_15  [key=2, style=dotted];
m26_177 -> m26_182  [color=darkseagreen4, key=1, label=current, style=dashed];
m26_177 -> m26_183  [color=darkseagreen4, key=1, label=current, style=dashed];
m26_177 -> m26_186  [color=darkseagreen4, key=1, label=current, style=dashed];
m26_177 -> m26_187  [color=darkseagreen4, key=1, label=current, style=dashed];
m26_183 -> m26_184  [key=0, style=solid];
m26_183 -> m26_186  [key=0, style=solid];
m26_184 -> m26_185  [key=0, style=solid];
m26_184 -> m26_193  [key=2, style=dotted];
m26_184 -> m26_186  [color=darkseagreen4, key=1, label=current, style=dashed];
m26_184 -> m26_187  [color=darkseagreen4, key=1, label=current, style=dashed];
m26_178 -> m26_179  [key=0, style=solid];
m26_178 -> m26_17  [key=2, style=dotted];
m26_178 -> m26_185  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
m26_178 -> m26_187  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
m26_178 -> m26_189  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
m26_182 -> m26_179  [key=0, style=solid];
m26_182 -> m26_192  [key=2, style=dotted];
m26_182 -> m26_139  [key=2, style=dotted];
m26_186 -> m26_179  [key=0, style=solid];
m26_186 -> m26_139  [key=2, style=dotted];
m26_187 -> m26_188  [key=0, style=solid];
m26_187 -> m26_149  [key=2, style=dotted];
m26_187 -> m26_194  [key=2, style=dotted];
m26_187 -> m26_195  [key=2, style=dotted];
m26_185 -> m26_186  [key=0, style=solid];
m26_185 -> m26_149  [key=2, style=dotted];
m26_185 -> m26_194  [key=2, style=dotted];
m26_185 -> m26_195  [key=2, style=dotted];
m26_189 -> m26_190  [key=0, style=solid];
m26_189 -> m26_196  [key=2, style=dotted];
m26_180 -> m26_181  [key=0, style=solid];
m26_180 -> m26_179  [key=0, style=solid];
m26_180 -> m26_191  [key=2, style=dotted];
m26_180 -> m26_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_181 -> m26_182  [key=0, style=solid];
m26_181 -> m26_183  [key=0, style=solid];
m26_190 -> m26_146  [color=blue, key=0, style=bold];
m26_66 -> m26_69  [key=0, style=solid];
m26_69 -> m26_70  [key=0, style=solid];
m26_70 -> m26_71  [key=0, style=solid];
m26_70 -> m26_73  [key=0, style=solid];
m26_70 -> m26_133  [key=2, style=dotted];
m26_71 -> m26_72  [key=0, style=solid];
m26_71 -> m26_68  [key=2, style=dotted];
m26_73 -> m26_74  [key=0, style=solid];
m26_73 -> m26_130  [key=0, style=solid];
m26_73 -> m26_132  [key=0, style=solid];
m26_72 -> m26_132  [key=0, style=solid];
m26_74 -> m26_75  [key=0, style=solid];
m26_74 -> m26_134  [key=2, style=dotted];
m26_74 -> m26_74  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_74 -> m26_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_74 -> m26_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_74 -> m26_77  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m26_74 -> m26_86  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m26_74 -> m26_167  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m26_74 -> m26_100  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m26_130 -> m26_131  [key=0, style=solid];
m26_75 -> m26_76  [key=0, style=solid];
m26_75 -> m26_77  [key=0, style=solid];
m26_77 -> m26_78  [key=0, style=solid];
m26_77 -> m26_136  [key=2, style=dotted];
m26_77 -> m26_137  [key=2, style=dotted];
m26_77 -> m26_77  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_86 -> m26_87  [key=0, style=solid];
m26_86 -> m26_141  [key=2, style=dotted];
m26_86 -> m26_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_100 -> m26_101  [key=0, style=solid];
m26_100 -> m26_146  [key=2, style=dotted];
m26_76 -> m26_75  [key=0, style=solid];
m26_76 -> m26_135  [key=2, style=dotted];
m26_76 -> m26_76  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_78 -> m26_79  [key=0, style=solid];
m26_78 -> m26_15  [key=2, style=dotted];
m26_78 -> m26_81  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m26_78 -> m26_100  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m26_79 -> m26_80  [key=0, style=solid];
m26_81 -> m26_80  [key=0, style=solid];
m26_81 -> m26_138  [key=2, style=dotted];
m26_81 -> m26_139  [key=2, style=dotted];
m26_81 -> m26_81  [color=darkseagreen4, key=1, label=chart, style=dashed];
m26_80 -> m26_81  [key=0, style=solid];
m26_80 -> m26_82  [key=0, style=solid];
m26_82 -> m26_83  [key=0, style=solid];
m26_82 -> m26_15  [key=2, style=dotted];
m26_82 -> m26_88  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m26_82 -> m26_100  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m26_82 -> m26_108  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m26_83 -> m26_84  [key=0, style=solid];
m26_83 -> m26_15  [key=2, style=dotted];
m26_83 -> m26_100  [color=darkseagreen4, key=1, label=deltaStatistics, style=dashed];
m26_83 -> m26_108  [color=darkseagreen4, key=1, label=deltaStatistics, style=dashed];
m26_88 -> m26_87  [key=0, style=solid];
m26_88 -> m26_143  [key=2, style=dotted];
m26_88 -> m26_144  [key=2, style=dotted];
m26_108 -> m26_109  [key=0, style=solid];
m26_108 -> m26_149  [key=2, style=dotted];
m26_108 -> m26_150  [key=2, style=dotted];
m26_84 -> m26_85  [key=0, style=solid];
m26_84 -> m26_15  [key=2, style=dotted];
m26_84 -> m26_92  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_93  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_94  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_95  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_96  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_97  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_98  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_99  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_100  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_84 -> m26_108  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m26_85 -> m26_86  [key=0, style=solid];
m26_85 -> m26_140  [key=2, style=dotted];
m26_85 -> m26_100  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
m26_85 -> m26_108  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
m26_92 -> m26_91  [key=0, style=solid];
m26_92 -> m26_139  [key=2, style=dotted];
m26_92 -> m26_92  [color=darkseagreen4, key=1, label=pair, style=dashed];
m26_93 -> m26_94  [key=0, style=solid];
m26_93 -> m26_145  [key=2, style=dotted];
m26_93 -> m26_139  [key=2, style=dotted];
m26_94 -> m26_95  [key=0, style=solid];
m26_94 -> m26_145  [key=2, style=dotted];
m26_94 -> m26_139  [key=2, style=dotted];
m26_95 -> m26_96  [key=0, style=solid];
m26_95 -> m26_145  [key=2, style=dotted];
m26_95 -> m26_139  [key=2, style=dotted];
m26_96 -> m26_97  [key=0, style=solid];
m26_96 -> m26_145  [key=2, style=dotted];
m26_96 -> m26_139  [key=2, style=dotted];
m26_97 -> m26_98  [key=0, style=solid];
m26_97 -> m26_145  [key=2, style=dotted];
m26_97 -> m26_139  [key=2, style=dotted];
m26_98 -> m26_99  [key=0, style=solid];
m26_98 -> m26_145  [key=2, style=dotted];
m26_98 -> m26_139  [key=2, style=dotted];
m26_99 -> m26_100  [key=0, style=solid];
m26_99 -> m26_145  [key=2, style=dotted];
m26_99 -> m26_139  [key=2, style=dotted];
m26_87 -> m26_88  [key=0, style=solid];
m26_87 -> m26_89  [key=0, style=solid];
m26_87 -> m26_142  [key=2, style=dotted];
m26_87 -> m26_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_89 -> m26_90  [key=0, style=solid];
m26_90 -> m26_91  [key=0, style=solid];
m26_91 -> m26_92  [key=0, style=solid];
m26_91 -> m26_93  [key=0, style=solid];
m26_101 -> m26_102  [key=0, style=solid];
m26_101 -> m26_103  [key=0, style=solid];
m26_102 -> m26_101  [key=0, style=solid];
m26_102 -> m26_61  [key=2, style=dotted];
m26_103 -> m26_104  [key=0, style=solid];
m26_103 -> m26_110  [key=0, style=solid];
m26_104 -> m26_105  [key=0, style=solid];
m26_104 -> m26_147  [key=2, style=dotted];
m26_110 -> m26_111  [key=0, style=solid];
m26_110 -> m26_120  [key=0, style=solid];
m26_105 -> m26_106  [key=0, style=solid];
m26_106 -> m26_107  [key=0, style=solid];
m26_106 -> m26_148  [key=2, style=dotted];
m26_106 -> m26_108  [color=darkseagreen4, key=1, label=chartComplete, style=dashed];
m26_107 -> m26_108  [key=0, style=solid];
m26_107 -> m26_148  [key=2, style=dotted];
m26_109 -> m26_110  [key=0, style=solid];
m26_109 -> m26_151  [key=2, style=dotted];
m26_111 -> m26_112  [key=0, style=solid];
m26_111 -> m26_62  [key=2, style=dotted];
m26_120 -> m26_121  [key=0, style=solid];
m26_120 -> m26_125  [key=0, style=solid];
m26_112 -> m26_113  [key=0, style=solid];
m26_113 -> m26_114  [key=0, style=solid];
m26_113 -> m26_62  [key=2, style=dotted];
m26_114 -> m26_115  [key=0, style=solid];
m26_115 -> m26_116  [key=0, style=solid];
m26_115 -> m26_152  [key=2, style=dotted];
m26_115 -> m26_153  [key=2, style=dotted];
m26_115 -> m26_154  [key=2, style=dotted];
m26_115 -> m26_115  [color=darkseagreen4, key=1, label=log, style=dashed];
m26_115 -> m26_117  [color=darkseagreen4, key=1, label=logs, style=dashed];
m26_116 -> m26_117  [key=0, style=solid];
m26_117 -> m26_118  [key=0, style=solid];
m26_117 -> m26_155  [key=2, style=dotted];
m26_118 -> m26_119  [key=0, style=solid];
m26_118 -> m26_62  [key=2, style=dotted];
m26_119 -> m26_120  [key=0, style=solid];
m26_119 -> m26_147  [key=2, style=dotted];
m26_121 -> m26_122  [key=0, style=solid];
m26_121 -> m26_124  [key=0, style=solid];
m26_121 -> m26_156  [key=2, style=dotted];
m26_125 -> m26_126  [key=0, style=solid];
m26_122 -> m26_123  [key=0, style=solid];
m26_124 -> m26_125  [key=0, style=solid];
m26_124 -> m26_147  [key=2, style=dotted];
m26_123 -> m26_124  [key=0, style=solid];
m26_123 -> m26_68  [key=2, style=dotted];
m26_126 -> m26_127  [key=0, style=solid];
m26_126 -> m26_129  [key=0, style=solid];
m26_127 -> m26_128  [key=0, style=solid];
m26_127 -> m26_126  [key=0, style=solid];
m26_127 -> m26_127  [color=darkseagreen4, key=1, label=chart, style=dashed];
m26_129 -> m26_130  [key=0, style=solid];
m26_129 -> m26_132  [key=0, style=solid];
m26_129 -> m26_159  [key=2, style=dotted];
m26_128 -> m26_127  [key=0, style=solid];
m26_128 -> m26_157  [key=2, style=dotted];
m26_128 -> m26_158  [key=2, style=dotted];
m26_128 -> m26_154  [key=2, style=dotted];
m26_128 -> m26_128  [color=darkseagreen4, key=1, label=series, style=dashed];
m26_131 -> m26_132  [key=0, style=solid];
m26_131 -> m26_68  [key=2, style=dotted];
m26_132 -> m26_66  [color=blue, key=0, style=bold];
m26_374 -> m26_375  [key=0, style=solid];
m26_374 -> m26_376  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m26_374 -> m26_377  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m26_375 -> m26_376  [key=0, style=solid];
m26_375 -> m26_145  [key=2, style=dotted];
m26_375 -> m26_62  [key=2, style=dotted];
m26_376 -> m26_377  [key=0, style=solid];
m26_376 -> m26_379  [key=2, style=dotted];
m26_376 -> m26_206  [key=2, style=dotted];
m26_377 -> m26_378  [key=0, style=solid];
m26_377 -> m26_208  [key=2, style=dotted];
m26_378 -> m26_374  [color=blue, key=0, style=bold];
m26_366 -> m26_413  [key=0, style=solid];
m26_413 -> m26_414  [key=0, style=solid];
m26_413 -> m26_219  [key=2, style=dotted];
m26_413 -> m26_415  [key=2, style=dotted];
m26_414 -> m26_366  [color=blue, key=0, style=bold];
m26_226 -> m26_227  [key=0, style=solid];
m26_227 -> m26_228  [key=0, style=solid];
m26_227 -> m26_230  [key=2, style=dotted];
m26_228 -> m26_229  [key=0, style=solid];
m26_228 -> m26_206  [key=2, style=dotted];
m26_229 -> m26_226  [color=blue, key=0, style=bold];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_6  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m26_4 -> m26_13  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_14  [key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid];
m26_7 -> m26_4  [color=blue, key=0, style=bold];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_15  [key=2, style=dotted];
m26_362 -> m26_387  [key=0, style=solid];
m26_362 -> m26_388  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m26_362 -> m26_390  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m26_362 -> m26_397  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m26_362 -> m26_398  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m26_362 -> m26_408  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m26_362 -> m26_399  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m26_387 -> m26_388  [key=0, style=solid];
m26_387 -> m26_158  [key=2, style=dotted];
m26_387 -> m26_395  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m26_387 -> m26_405  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m26_388 -> m26_389  [key=0, style=solid];
m26_388 -> m26_158  [key=2, style=dotted];
m26_388 -> m26_395  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m26_388 -> m26_405  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m26_390 -> m26_391  [key=0, style=solid];
m26_390 -> m26_397  [key=0, style=solid];
m26_390 -> m26_393  [color=darkseagreen4, key=1, label=chart, style=dashed];
m26_397 -> m26_398  [key=0, style=solid];
m26_398 -> m26_399  [key=0, style=solid];
m26_398 -> m26_141  [key=2, style=dotted];
m26_398 -> m26_134  [key=2, style=dotted];
m26_398 -> m26_407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_398 -> m26_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_399 -> m26_400  [key=0, style=solid];
m26_399 -> m26_401  [key=0, style=solid];
m26_395 -> m26_396  [key=0, style=solid];
m26_395 -> m26_141  [key=2, style=dotted];
m26_395 -> m26_402  [key=2, style=dotted];
m26_395 -> m26_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_389 -> m26_390  [key=0, style=solid];
m26_389 -> m26_15  [key=2, style=dotted];
m26_389 -> m26_392  [color=darkseagreen4, key=1, label=charts, style=dashed];
m26_389 -> m26_397  [color=darkseagreen4, key=1, label=charts, style=dashed];
m26_392 -> m26_393  [key=0, style=solid];
m26_392 -> m26_139  [key=2, style=dotted];
m26_391 -> m26_392  [key=0, style=solid];
m26_391 -> m26_192  [key=2, style=dotted];
m26_391 -> m26_396  [color=darkseagreen4, key=1, label=newChart, style=dashed];
m26_393 -> m26_394  [key=0, style=solid];
m26_393 -> m26_390  [key=0, style=solid];
m26_393 -> m26_395  [color=darkseagreen4, key=1, label=series, style=dashed];
m26_396 -> m26_393  [key=0, style=solid];
m26_396 -> m26_403  [key=2, style=dotted];
m26_394 -> m26_395  [key=0, style=solid];
m26_394 -> m26_246  [key=2, style=dotted];
m26_394 -> m26_396  [color=darkseagreen4, key=1, label=newSeries, style=dashed];
m26_400 -> m26_399  [key=0, style=solid];
m26_400 -> m26_135  [key=2, style=dotted];
m26_400 -> m26_400  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_401 -> m26_362  [color=blue, key=0, style=bold];
m26_14 -> m26_8  [color=blue, key=0, style=bold];
m26_17 -> m26_18  [color=green, key=0, style=solid];
m26_17 -> m26_21  [color=green, key=2, style=dotted];
m26_274 -> m26_275  [key=0, style=solid];
m26_274 -> m26_281  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m26_274 -> m26_282  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m26_275 -> m26_276  [key=0, style=solid];
m26_281 -> m26_282  [key=0, style=solid];
m26_281 -> m26_287  [key=2, style=dotted];
m26_281 -> m26_283  [color=darkseagreen4, key=1, label=debug, style=dashed];
m26_282 -> m26_283  [key=0, style=solid];
m26_282 -> m26_287  [key=2, style=dotted];
m26_282 -> m26_284  [color=darkseagreen4, key=1, label=error, style=dashed];
m26_276 -> m26_277  [key=0, style=solid];
m26_276 -> m26_17  [key=2, style=dotted];
m26_276 -> m26_278  [color=darkseagreen4, key=1, label=types, style=dashed];
m26_276 -> m26_279  [color=darkseagreen4, key=1, label=types, style=dashed];
m26_276 -> m26_280  [color=darkseagreen4, key=1, label=types, style=dashed];
m26_277 -> m26_278  [key=0, style=solid];
m26_277 -> m26_280  [key=0, style=solid];
m26_277 -> m26_279  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_278 -> m26_279  [key=0, style=solid];
m26_278 -> m26_277  [key=0, style=solid];
m26_278 -> m26_286  [key=2, style=dotted];
m26_279 -> m26_277  [key=0, style=solid];
m26_279 -> m26_195  [key=2, style=dotted];
m26_280 -> m26_281  [key=0, style=solid];
m26_280 -> m26_226  [key=2, style=dotted];
m26_283 -> m26_284  [key=0, style=solid];
m26_283 -> m26_288  [key=2, style=dotted];
m26_284 -> m26_285  [key=0, style=solid];
m26_284 -> m26_289  [key=2, style=dotted];
m26_285 -> m26_274  [color=blue, key=0, style=bold];
m26_475 -> m26_476  [key=0, style=solid];
m26_160 -> m26_161  [key=0, style=solid];
m26_163 -> m26_164  [key=0, style=solid];
m26_167 -> m26_168  [key=0, style=solid];
m26_167 -> m26_169  [key=2, style=dotted];
m26_167 -> m26_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_166 -> m26_167  [key=0, style=solid];
m26_166 -> m26_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m26_173 -> m26_174  [key=0, style=solid];
m26_161 -> m26_162  [key=0, style=solid];
m26_162 -> m26_160  [color=blue, key=0, style=bold];
m26_164 -> m26_165  [key=0, style=solid];
m26_165 -> m26_163  [color=blue, key=0, style=bold];
m26_171 -> m26_172  [key=0, style=solid];
m26_171 -> m26_171  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m26_168 -> m26_166  [color=blue, key=0, style=bold];
m26_170 -> m26_171  [key=0, style=solid];
m26_172 -> m26_170  [color=blue, key=0, style=bold];
m26_174 -> m26_175  [key=0, style=solid];
m26_175 -> m26_173  [color=blue, key=0, style=bold];
m26_197 -> m26_198  [key=0, style=solid];
m26_198 -> m26_199  [key=0, style=solid];
m26_199 -> m26_197  [color=blue, key=0, style=bold];
m26_323 -> m26_324  [key=0, style=solid];
m26_324 -> m26_325  [key=0, style=solid];
m26_325 -> m26_323  [color=blue, key=0, style=bold];
m26_371 -> m26_372  [key=0, style=solid];
m26_372 -> m26_373  [key=0, style=solid];
m26_373 -> m26_371  [color=blue, key=0, style=bold];
m26_408 -> m26_409  [key=0, style=solid];
m26_405 -> m26_406  [key=0, style=solid];
m26_404 -> m26_405  [key=0, style=solid];
m26_407 -> m26_408  [key=0, style=solid];
m26_410 -> m26_411  [key=0, style=solid];
m26_406 -> m26_404  [color=blue, key=0, style=bold];
m26_409 -> m26_407  [color=blue, key=0, style=bold];
m26_411 -> m26_412  [key=0, style=solid];
m26_412 -> m26_410  [color=blue, key=0, style=bold];
m26_469 -> m26_470  [key=0, style=solid];
m26_472 -> m26_473  [key=0, style=solid];
m26_470 -> m26_471  [key=0, style=solid];
m26_470 -> m26_60  [key=2, style=dotted];
m26_471 -> m26_469  [color=blue, key=0, style=bold];
m26_473 -> m26_474  [key=0, style=solid];
m26_473 -> m26_220  [key=2, style=dotted];
m26_474 -> m26_472  [color=blue, key=0, style=bold];
m26_476 -> m26_477  [key=0, style=solid];
m26_476 -> m26_208  [key=2, style=dotted];
m26_477 -> m26_475  [color=blue, key=0, style=bold];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_17  [key=2, style=dotted];
m26_11 -> m26_14  [key=0, style=solid];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_2  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m26_1 -> m26_2  [key=0, style=solid];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_0  [color=blue, key=0, style=bold];
m26_8 -> m26_9  [color=green, key=0, style=solid];
m26_8 -> m26_16  [key=2, style=dotted];
m26_9 -> m26_10  [color=green, key=0, style=solid];
m26_9 -> m26_16  [key=2, style=dotted];
m26_9 -> m26_15  [color=green, key=2, style=dotted];
m26_10 -> m26_11  [color=green, key=0, style=solid];
m26_10 -> m26_12  [color=green, key=0, style=solid];
m26_12 -> m26_0  [color=blue, key=0, style=bold];
m26_12 -> m26_15  [key=2, style=dotted];
m26_12 -> m26_13  [key=0, style=solid];
m26_235 -> m26_236  [key=0, style=solid];
m26_235 -> m26_237  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_235 -> m26_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_235 -> m26_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_235 -> m26_240  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_235 -> m26_241  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_236 -> m26_237  [key=0, style=solid];
m26_237 -> m26_238  [key=0, style=solid];
m26_237 -> m26_239  [key=0, style=solid];
m26_237 -> m26_243  [key=2, style=dotted];
m26_238 -> m26_239  [key=0, style=solid];
m26_238 -> m26_192  [key=2, style=dotted];
m26_238 -> m26_244  [key=2, style=dotted];
m26_239 -> m26_240  [key=0, style=solid];
m26_239 -> m26_241  [key=0, style=solid];
m26_239 -> m26_245  [key=2, style=dotted];
m26_240 -> m26_241  [key=0, style=solid];
m26_240 -> m26_246  [key=2, style=dotted];
m26_240 -> m26_139  [key=2, style=dotted];
m26_241 -> m26_242  [key=0, style=solid];
m26_241 -> m26_247  [key=2, style=dotted];
m26_241 -> m26_195  [key=2, style=dotted];
m26_242 -> m26_235  [color=blue, key=0, style=bold];
m26_419 -> m26_420  [key=0, style=solid];
m26_419 -> m26_421  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_420 -> m26_421  [key=0, style=solid];
m26_420 -> m26_422  [color=darkseagreen4, key=1, label=time, style=dashed];
m26_420 -> m26_429  [color=darkseagreen4, key=1, label=time, style=dashed];
m26_420 -> m26_431  [color=darkseagreen4, key=1, label=time, style=dashed];
m26_421 -> m26_422  [key=0, style=solid];
m26_421 -> m26_433  [key=0, style=solid];
m26_422 -> m26_423  [key=0, style=solid];
m26_422 -> m26_458  [key=2, style=dotted];
m26_429 -> m26_430  [key=0, style=solid];
m26_429 -> m26_254  [key=2, style=dotted];
m26_431 -> m26_432  [key=0, style=solid];
m26_431 -> m26_460  [key=2, style=dotted];
m26_431 -> m26_248  [key=2, style=dotted];
m26_433 -> m26_434  [key=0, style=solid];
m26_433 -> m26_462  [key=2, style=dotted];
m26_433 -> m26_469  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_423 -> m26_424  [key=0, style=solid];
m26_423 -> m26_431  [key=0, style=solid];
m26_424 -> m26_425  [key=0, style=solid];
m26_424 -> m26_426  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_424 -> m26_427  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_424 -> m26_430  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_425 -> m26_426  [key=0, style=solid];
m26_425 -> m26_431  [key=0, style=solid];
m26_426 -> m26_427  [key=0, style=solid];
m26_426 -> m26_428  [color=darkseagreen4, key=1, label=price, style=dashed];
m26_426 -> m26_429  [color=darkseagreen4, key=1, label=price, style=dashed];
m26_427 -> m26_428  [key=0, style=solid];
m26_427 -> m26_429  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m26_430 -> m26_425  [key=0, style=solid];
m26_430 -> m26_430  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_428 -> m26_429  [key=0, style=solid];
m26_428 -> m26_459  [key=2, style=dotted];
m26_432 -> m26_433  [key=0, style=solid];
m26_432 -> m26_461  [key=2, style=dotted];
m26_432 -> m26_263  [key=2, style=dotted];
m26_434 -> m26_435  [key=0, style=solid];
m26_434 -> m26_463  [key=2, style=dotted];
m26_435 -> m26_436  [key=0, style=solid];
m26_435 -> m26_462  [key=2, style=dotted];
m26_435 -> m26_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_436 -> m26_437  [key=0, style=solid];
m26_436 -> m26_463  [key=2, style=dotted];
m26_437 -> m26_438  [key=0, style=solid];
m26_437 -> m26_462  [key=2, style=dotted];
m26_437 -> m26_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_438 -> m26_439  [key=0, style=solid];
m26_438 -> m26_463  [key=2, style=dotted];
m26_439 -> m26_440  [key=0, style=solid];
m26_439 -> m26_441  [key=0, style=solid];
m26_440 -> m26_439  [key=0, style=solid];
m26_440 -> m26_296  [key=2, style=dotted];
m26_440 -> m26_440  [color=darkseagreen4, key=1, label=pair, style=dashed];
m26_441 -> m26_442  [key=0, style=solid];
m26_442 -> m26_443  [key=0, style=solid];
m26_442 -> m26_457  [key=0, style=solid];
m26_442 -> m26_159  [key=2, style=dotted];
m26_443 -> m26_444  [key=0, style=solid];
m26_444 -> m26_445  [key=0, style=solid];
m26_444 -> m26_442  [key=0, style=solid];
m26_444 -> m26_56  [key=2, style=dotted];
m26_444 -> m26_446  [color=darkseagreen4, key=1, label=message, style=dashed];
m26_444 -> m26_448  [color=darkseagreen4, key=1, label=message, style=dashed];
m26_444 -> m26_450  [color=darkseagreen4, key=1, label=message, style=dashed];
m26_444 -> m26_452  [color=darkseagreen4, key=1, label=message, style=dashed];
m26_444 -> m26_453  [color=darkseagreen4, key=1, label=message, style=dashed];
m26_445 -> m26_446  [key=0, style=solid];
m26_445 -> m26_62  [key=2, style=dotted];
m26_446 -> m26_447  [key=0, style=solid];
m26_446 -> m26_449  [key=0, style=solid];
m26_446 -> m26_451  [key=0, style=solid];
m26_446 -> m26_453  [key=0, style=solid];
m26_446 -> m26_464  [key=2, style=dotted];
m26_448 -> m26_442  [key=0, style=solid];
m26_448 -> m26_465  [key=2, style=dotted];
m26_450 -> m26_442  [key=0, style=solid];
m26_450 -> m26_466  [key=2, style=dotted];
m26_452 -> m26_442  [key=0, style=solid];
m26_452 -> m26_467  [key=2, style=dotted];
m26_453 -> m26_454  [key=0, style=solid];
m26_453 -> m26_442  [key=0, style=solid];
m26_453 -> m26_468  [key=2, style=dotted];
m26_447 -> m26_448  [key=0, style=solid];
m26_449 -> m26_450  [key=0, style=solid];
m26_451 -> m26_452  [key=0, style=solid];
m26_454 -> m26_455  [key=0, style=solid];
m26_455 -> m26_456  [key=0, style=solid];
m26_455 -> m26_68  [key=2, style=dotted];
m26_456 -> m26_442  [key=0, style=solid];
m26_456 -> m26_220  [key=2, style=dotted];
m26_457 -> m26_419  [color=blue, key=0, style=bold];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_48  [key=0, style=solid];
m26_21 -> m26_56  [key=2, style=dotted];
m26_21 -> m26_24  [color=darkseagreen4, key=1, label=packet, style=dashed];
m26_21 -> m26_28  [color=darkseagreen4, key=1, label=packet, style=dashed];
m26_21 -> m26_31  [color=darkseagreen4, key=1, label=packet, style=dashed];
m26_21 -> m26_35  [color=darkseagreen4, key=1, label=packet, style=dashed];
m26_21 -> m26_39  [color=darkseagreen4, key=1, label=packet, style=dashed];
m26_21 -> m26_43  [color=darkseagreen4, key=1, label=packet, style=dashed];
m26_21 -> m26_46  [color=darkseagreen4, key=1, label=packet, style=dashed];
m26_21 -> m26_47  [color=darkseagreen4, key=1, label=packet, style=dashed];
m26_13 -> m26_14  [key=0, style=solid];
m26_16 -> m26_17  [color=green, key=0, style=solid];
m26_18 -> m26_19  [color=green, key=0, style=solid];
m26_18 -> m26_21  [color=green, key=2, style=dotted];
m26_19 -> m26_20  [color=green, key=0, style=solid];
m26_19 -> m26_21  [color=green, key=2, style=dotted];
m26_19 -> m26_53  [key=0, style=solid];
m26_20 -> m26_16  [color=blue, key=0, style=bold];
m26_20 -> m26_21  [key=0, style=solid];
m26_263 -> m26_264  [key=0, style=solid];
m26_263 -> m26_265  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
m26_264 -> m26_265  [key=0, style=solid];
m26_265 -> m26_266  [key=0, style=solid];
m26_265 -> m26_272  [key=0, style=solid];
m26_265 -> m26_267  [color=darkseagreen4, key=1, label=update, style=dashed];
m26_265 -> m26_268  [color=darkseagreen4, key=1, label=update, style=dashed];
m26_265 -> m26_269  [color=darkseagreen4, key=1, label=update, style=dashed];
m26_265 -> m26_270  [color=darkseagreen4, key=1, label=update, style=dashed];
m26_265 -> m26_271  [color=darkseagreen4, key=1, label=update, style=dashed];
m26_266 -> m26_267  [key=0, style=solid];
m26_266 -> m26_268  [key=0, style=solid];
m26_266 -> m26_243  [key=2, style=dotted];
m26_267 -> m26_268  [key=0, style=solid];
m26_267 -> m26_192  [key=2, style=dotted];
m26_267 -> m26_244  [key=2, style=dotted];
m26_268 -> m26_269  [key=0, style=solid];
m26_268 -> m26_265  [key=0, style=solid];
m26_268 -> m26_270  [color=darkseagreen4, key=1, label=series, style=dashed];
m26_268 -> m26_271  [color=darkseagreen4, key=1, label=series, style=dashed];
m26_269 -> m26_270  [key=0, style=solid];
m26_269 -> m26_271  [key=0, style=solid];
m26_269 -> m26_245  [key=2, style=dotted];
m26_270 -> m26_271  [key=0, style=solid];
m26_270 -> m26_246  [key=2, style=dotted];
m26_270 -> m26_139  [key=2, style=dotted];
m26_271 -> m26_268  [key=0, style=solid];
m26_271 -> m26_273  [key=2, style=dotted];
m26_272 -> m26_263  [color=blue, key=0, style=bold];
m26_248 -> m26_249  [key=0, style=solid];
m26_248 -> m26_250  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m26_248 -> m26_251  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m26_249 -> m26_250  [key=0, style=solid];
m26_249 -> m26_252  [key=0, style=solid];
m26_250 -> m26_251  [key=0, style=solid];
m26_250 -> m26_253  [key=2, style=dotted];
m26_250 -> m26_57  [key=2, style=dotted];
m26_251 -> m26_252  [key=0, style=solid];
m26_251 -> m26_235  [key=2, style=dotted];
m26_252 -> m26_248  [color=blue, key=0, style=bold];
m26_290 -> m26_291  [key=0, style=solid];
m26_290 -> m26_292  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_291 -> m26_292  [key=0, style=solid];
m26_291 -> m26_62  [key=2, style=dotted];
m26_292 -> m26_293  [key=0, style=solid];
m26_292 -> m26_295  [key=2, style=dotted];
m26_293 -> m26_294  [key=0, style=solid];
m26_293 -> m26_206  [key=2, style=dotted];
m26_294 -> m26_290  [color=blue, key=0, style=bold];
m26_208 -> m26_209  [key=0, style=solid];
m26_208 -> m26_211  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_208 -> m26_212  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_209 -> m26_210  [key=0, style=solid];
m26_209 -> m26_211  [key=0, style=solid];
m26_211 -> m26_212  [key=0, style=solid];
m26_211 -> m26_214  [key=2, style=dotted];
m26_211 -> m26_206  [key=2, style=dotted];
m26_212 -> m26_213  [key=0, style=solid];
m26_212 -> m26_207  [key=2, style=dotted];
m26_210 -> m26_213  [key=0, style=solid];
m26_213 -> m26_208  [color=blue, key=0, style=bold];
m26_319 -> m26_313  [color=blue, key=0, style=bold];
m26_313 -> m26_314  [key=0, style=solid];
m26_314 -> m26_315  [key=0, style=solid];
m26_314 -> m26_320  [key=2, style=dotted];
m26_314 -> m26_321  [key=2, style=dotted];
m26_314 -> m26_323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_314 -> m26_316  [color=darkseagreen4, key=1, label=joined, style=dashed];
m26_315 -> m26_316  [key=0, style=solid];
m26_315 -> m26_219  [key=2, style=dotted];
m26_316 -> m26_317  [key=0, style=solid];
m26_316 -> m26_319  [key=0, style=solid];
m26_316 -> m26_322  [key=2, style=dotted];
m26_317 -> m26_318  [key=0, style=solid];
m26_318 -> m26_319  [key=0, style=solid];
m26_318 -> m26_68  [key=2, style=dotted];
m26_216 -> m26_217  [key=0, style=solid];
m26_216 -> m26_218  [key=2, style=dotted];
m26_216 -> m26_219  [key=2, style=dotted];
m26_216 -> m26_195  [key=2, style=dotted];
m26_207 -> m26_215  [key=0, style=solid];
m26_207 -> m26_216  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_215 -> m26_216  [key=0, style=solid];
m26_217 -> m26_207  [color=blue, key=0, style=bold];
m26_231 -> m26_232  [key=0, style=solid];
m26_232 -> m26_233  [key=0, style=solid];
m26_232 -> m26_234  [key=2, style=dotted];
m26_232 -> m26_206  [key=2, style=dotted];
m26_233 -> m26_231  [color=blue, key=0, style=bold];
m26_220 -> m26_221  [key=0, style=solid];
m26_220 -> m26_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_221 -> m26_222  [key=0, style=solid];
m26_221 -> m26_223  [key=0, style=solid];
m26_223 -> m26_224  [key=0, style=solid];
m26_223 -> m26_225  [key=2, style=dotted];
m26_223 -> m26_206  [key=2, style=dotted];
m26_222 -> m26_224  [key=0, style=solid];
m26_224 -> m26_220  [color=blue, key=0, style=bold];
m26_296 -> m26_297  [key=0, style=solid];
m26_296 -> m26_298  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_296 -> m26_299  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_296 -> m26_300  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_297 -> m26_298  [key=0, style=solid];
m26_298 -> m26_299  [key=0, style=solid];
m26_298 -> m26_300  [key=0, style=solid];
m26_298 -> m26_245  [key=2, style=dotted];
m26_299 -> m26_300  [key=0, style=solid];
m26_299 -> m26_139  [key=2, style=dotted];
m26_300 -> m26_301  [key=0, style=solid];
m26_301 -> m26_296  [color=blue, key=0, style=bold];
m26_302 -> m26_303  [key=0, style=solid];
m26_302 -> m26_304  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m26_303 -> m26_304  [key=0, style=solid];
m26_303 -> m26_148  [key=2, style=dotted];
m26_304 -> m26_305  [key=0, style=solid];
m26_304 -> m26_149  [key=2, style=dotted];
m26_304 -> m26_150  [key=2, style=dotted];
m26_304 -> m26_306  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_304 -> m26_307  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_304 -> m26_308  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_305 -> m26_306  [key=0, style=solid];
m26_306 -> m26_307  [key=0, style=solid];
m26_306 -> m26_151  [key=2, style=dotted];
m26_307 -> m26_308  [key=0, style=solid];
m26_307 -> m26_194  [key=2, style=dotted];
m26_308 -> m26_309  [key=0, style=solid];
m26_308 -> m26_311  [key=0, style=solid];
m26_308 -> m26_312  [key=2, style=dotted];
m26_309 -> m26_310  [key=0, style=solid];
m26_310 -> m26_311  [key=0, style=solid];
m26_310 -> m26_68  [key=2, style=dotted];
m26_311 -> m26_302  [color=blue, key=0, style=bold];
m26_60 -> m26_200  [key=0, style=solid];
m26_60 -> m26_202  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_60 -> m26_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_200 -> m26_201  [key=0, style=solid];
m26_200 -> m26_202  [key=0, style=solid];
m26_202 -> m26_203  [key=0, style=solid];
m26_202 -> m26_205  [key=2, style=dotted];
m26_202 -> m26_206  [key=2, style=dotted];
m26_203 -> m26_204  [key=0, style=solid];
m26_203 -> m26_207  [key=2, style=dotted];
m26_201 -> m26_204  [key=0, style=solid];
m26_204 -> m26_60  [color=blue, key=0, style=bold];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_62  [key=2, style=dotted];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_27  [key=0, style=solid];
m26_22 -> m26_30  [key=0, style=solid];
m26_22 -> m26_34  [key=0, style=solid];
m26_22 -> m26_38  [key=0, style=solid];
m26_22 -> m26_42  [key=0, style=solid];
m26_22 -> m26_46  [key=0, style=solid];
m26_22 -> m26_363  [color=darkorchid, key=3, label="Parameter variable T expected", style=bold];
m26_22 -> m26_205  [color=darkorchid, key=3, label="Parameter variable T expected", style=bold];
m26_22 -> m26_62  [color=darkorchid, key=3, label="Parameter variable T expected", style=bold];
m26_22 -> m26_25  [color=darkorchid, key=3, label="method methodReturn T TestOrderType", style=bold];
m26_22 -> m26_9  [color=green, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_10  [color=green, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_17  [color=green, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_18  [color=green, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_19  [color=green, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_1  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_2  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_5  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_6  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_22 -> m26_13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.SequentialIndicator<TFirst>", style=dashed];
m26_48 -> m26_49  [key=0, style=solid];
m26_48 -> m26_66  [key=2, style=dotted];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_26  [color=darkseagreen4, key=1, label=debug, style=dashed];
m26_28 -> m26_29  [key=0, style=solid];
m26_31 -> m26_32  [key=0, style=solid];
m26_31 -> m26_33  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_37  [color=darkseagreen4, key=1, label=log, style=dashed];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_41  [color=darkseagreen4, key=1, label=securityPacket, style=dashed];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_45  [color=darkseagreen4, key=1, label=statusPacket, style=dashed];
m26_46 -> m26_47  [key=0, style=solid];
m26_46 -> m26_61  [key=2, style=dotted];
m26_47 -> m26_48  [key=0, style=solid];
m26_47 -> m26_57  [key=2, style=dotted];
m26_23 -> m26_24  [key=0, style=solid];
m26_27 -> m26_28  [key=0, style=solid];
m26_30 -> m26_31  [key=0, style=solid];
m26_34 -> m26_35  [key=0, style=solid];
m26_38 -> m26_39  [key=0, style=solid];
m26_42 -> m26_43  [key=0, style=solid];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_57  [key=2, style=dotted];
m26_26 -> m26_48  [key=0, style=solid];
m26_26 -> m26_58  [key=2, style=dotted];
m26_29 -> m26_48  [key=0, style=solid];
m26_29 -> m26_59  [key=2, style=dotted];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_60  [key=2, style=dotted];
m26_33 -> m26_48  [key=0, style=solid];
m26_33 -> m26_61  [key=2, style=dotted];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_62  [key=2, style=dotted];
m26_37 -> m26_48  [key=0, style=solid];
m26_37 -> m26_63  [key=2, style=dotted];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_62  [key=2, style=dotted];
m26_41 -> m26_48  [key=0, style=solid];
m26_41 -> m26_64  [key=2, style=dotted];
m26_44 -> m26_45  [key=0, style=solid];
m26_44 -> m26_62  [key=2, style=dotted];
m26_45 -> m26_48  [key=0, style=solid];
m26_45 -> m26_65  [key=2, style=dotted];
m26_49 -> m26_50  [key=0, style=solid];
m26_49 -> m26_51  [key=0, style=solid];
m26_49 -> m26_19  [key=0, style=solid];
m26_50 -> m26_51  [key=0, style=solid];
m26_50 -> m26_19  [key=0, style=solid];
m26_50 -> m26_67  [key=2, style=dotted];
m26_51 -> m26_52  [key=0, style=solid];
m26_52 -> m26_19  [key=0, style=solid];
m26_52 -> m26_68  [key=2, style=dotted];
m26_54 -> m26_55  [key=0, style=solid];
m26_55 -> m26_18  [color=blue, key=0, style=bold];
m26_261 -> m26_262  [key=0, style=solid];
m26_262 -> m26_261  [color=blue, key=0, style=bold];
m26_478 -> m26_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_167  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_98  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_104  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_106  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_112  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_126  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_181  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_185  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_187  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_188  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_200  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_202  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_203  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_209  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_211  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_223  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_237  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_238  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_241  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_251  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_256  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_258  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_264  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_266  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_267  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_269  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_270  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_271  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_275  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_277  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_280  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_293  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_297  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_298  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_299  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_300  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_303  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_305  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_306  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_315  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_339  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_343  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_354  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_376  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_377  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_381  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_384  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_413  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_417  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_421  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_422  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_428  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_429  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_431  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_432  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_433  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_470  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_434  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_435  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_473  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_436  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_437  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_476  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_438  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_439  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_440  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_442  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_444  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_478 -> m26_456  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m26_479 -> m26_167  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m26_480 -> m26_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m26_481 -> m26_405  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m26_482 -> m26_405  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m26_483 -> m26_408  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m26_484 -> m26_408  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_9 -> m27_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_12  [color=darkseagreen4, key=1, label=handler, style=dashed];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_15  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_13  [key=0, style=solid];
m27_14 -> m27_9  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_4  [color=darkseagreen4, key=1, label=typedData, style=dashed];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_4  [key=0, style=solid];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_7  [key=2, style=dotted];
m27_3 -> m27_5  [key=0, style=solid];
m27_3 -> m27_6  [key=2, style=dotted];
m27_5 -> m27_0  [color=blue, key=0, style=bold];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_1  [color=darkorchid, key=3, label="Parameter variable TInput data", style=bold];
m27_8 -> m27_7  [color=blue, key=0, style=bold];
m27_16 -> m27_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m27_16 -> m27_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m27_16 -> m27_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m27_16 -> m27_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m28_15 -> m28_16  [key=0, style=solid];
m28_15 -> m28_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionSymbolProperties", style=dashed];
m28_16 -> m28_17  [key=0, style=solid];
m28_21 -> m28_22  [key=0, style=solid];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_9  [key=2, style=dotted];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_10  [key=2, style=dotted];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_11  [key=2, style=dotted];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_12  [key=2, style=dotted];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_13  [key=2, style=dotted];
m28_22 -> m28_14  [key=2, style=dotted];
m28_23 -> m28_15  [color=blue, key=0, style=bold];
m28_56 -> m28_56  [color=green, key=3, label="Field variable int DefaultSettlementDays", style=bold];
m28_43 -> m28_54  [key=0, style=solid];
m28_43 -> m28_59  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>", style=dashed];
m28_43 -> m28_41  [color=green, key=3, label="Parameter variable System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse> universeFunc", style=bold];
m28_43 -> m28_48  [color=green, key=3, label="Parameter variable System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse> universeFunc", style=bold];
m28_54 -> m28_55  [key=0, style=solid];
m28_54 -> m28_56  [key=2, style=dotted];
m28_54 -> m28_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m28_55 -> m28_43  [color=blue, key=0, style=bold];
m28_33 -> m28_34  [key=0, style=solid];
m28_33 -> m28_30  [color=green, key=3, label="Parameter variable decimal underlyingPrice", style=bold];
m28_34 -> m28_35  [key=0, style=solid];
m28_34 -> m28_36  [key=2, style=dotted];
m28_34 -> m28_37  [key=2, style=dotted];
m28_35 -> m28_33  [color=blue, key=0, style=bold];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_41 -> m28_42  [key=0, style=solid];
m28_41 -> m28_43  [key=2, style=dotted];
m28_41 -> m28_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_42 -> m28_40  [color=blue, key=0, style=bold];
m28_57 -> m28_58  [key=0, style=solid];
m28_45 -> m28_46  [key=0, style=solid];
m28_45 -> m28_47  [key=2, style=dotted];
m28_44 -> m28_45  [key=0, style=solid];
m28_46 -> m28_44  [color=blue, key=0, style=bold];
m28_51 -> m28_52  [key=0, style=solid];
m28_51 -> m28_47  [key=2, style=dotted];
m28_51 -> m28_53  [key=2, style=dotted];
m28_50 -> m28_51  [key=0, style=solid];
m28_52 -> m28_50  [color=blue, key=0, style=bold];
m28_59 -> m28_60  [key=0, style=solid];
m28_59 -> m28_62  [key=2, style=dotted];
m28_58 -> m28_59  [key=0, style=solid];
m28_60 -> m28_61  [key=0, style=solid];
m28_60 -> m28_63  [key=2, style=dotted];
m28_61 -> m28_57  [color=blue, key=0, style=bold];
m28_30 -> m28_31  [key=0, style=solid];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_33  [key=2, style=dotted];
m28_32 -> m28_30  [color=blue, key=0, style=bold];
m28_24 -> m28_25  [key=0, style=solid];
m28_25 -> m28_26  [key=0, style=solid];
m28_26 -> m28_24  [color=blue, key=0, style=bold];
m28_27 -> m28_28  [key=0, style=solid];
m28_28 -> m28_29  [key=0, style=solid];
m28_29 -> m28_27  [color=blue, key=0, style=bold];
m28_14 -> m28_48  [key=0, style=solid];
m28_14 -> m28_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_14 -> m28_7  [color=green, key=3, label="Parameter variable int minStrike", style=bold];
m28_14 -> m28_56  [color=green, key=3, label="Parameter variable int maxStrike", style=bold];
m28_48 -> m28_49  [key=0, style=solid];
m28_48 -> m28_43  [key=2, style=dotted];
m28_48 -> m28_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_49 -> m28_14  [color=blue, key=0, style=bold];
m28_9 -> m28_64  [key=0, style=solid];
m28_9 -> m28_66  [color=darkseagreen4, key=1, label="QuantConnect.DataNormalizationMode", style=dashed];
m28_9 -> m28_2  [color=green, key=3, label="Parameter variable QuantConnect.DataNormalizationMode mode", style=bold];
m28_64 -> m28_65  [key=0, style=solid];
m28_64 -> m28_66  [key=0, style=solid];
m28_66 -> m28_67  [key=0, style=solid];
m28_66 -> m28_69  [key=2, style=dotted];
m28_65 -> m28_67  [key=0, style=solid];
m28_65 -> m28_68  [key=2, style=dotted];
m28_67 -> m28_9  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionSymbolProperties", style=dashed];
m28_1 -> m28_2  [key=0, style=solid];
m28_6 -> m28_7  [key=0, style=solid];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_9  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_10  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_11  [key=2, style=dotted];
m28_5 -> m28_6  [key=0, style=solid];
m28_5 -> m28_12  [key=2, style=dotted];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_13  [key=2, style=dotted];
m28_7 -> m28_14  [key=2, style=dotted];
m28_8 -> m28_0  [color=blue, key=0, style=bold];
m28_36 -> m28_38  [key=0, style=solid];
m28_36 -> m28_33  [color=green, key=3, label="Parameter variable decimal underlyingPrice", style=bold];
m28_38 -> m28_39  [key=0, style=solid];
m28_39 -> m28_36  [color=blue, key=0, style=bold];
m28_70 -> m28_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_70 -> m28_66  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m28_71 -> m28_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_72 -> m28_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_73 -> m28_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_74 -> m28_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_75 -> m28_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m28_76 -> m28_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m28_77 -> m28_59  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>", style=dashed];
m29_41 -> m29_42  [key=0, style=solid];
m29_41 -> m29_38  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_42 -> m29_43  [key=0, style=solid];
m29_42 -> m29_44  [key=2, style=dotted];
m29_42 -> m29_33  [key=2, style=dotted];
m29_43 -> m29_41  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_0 -> m29_4  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan timeSpan", style=bold];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_3  [key=0, style=solid];
m29_3 -> m29_0  [color=blue, key=0, style=bold];
m29_11 -> m29_12  [key=0, style=solid];
m29_12 -> m29_13  [key=0, style=solid];
m29_12 -> m29_7  [key=2, style=dotted];
m29_13 -> m29_11  [color=blue, key=0, style=bold];
m29_128 -> m29_163  [key=0, style=solid];
m29_128 -> m29_125  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.HistoryRequest request", style=bold];
m29_163 -> m29_164  [key=0, style=solid];
m29_163 -> m29_152  [key=2, style=dotted];
m29_163 -> m29_33  [key=2, style=dotted];
m29_164 -> m29_128  [color=blue, key=0, style=bold];
m29_266 -> m29_267  [key=0, style=solid];
m29_59 -> m29_60  [key=0, style=solid];
m29_59 -> m29_61  [color=darkseagreen4, key=1, label=res, style=dashed];
m29_60 -> m29_61  [key=0, style=solid];
m29_60 -> m29_64  [key=2, style=dotted];
m29_60 -> m29_65  [key=2, style=dotted];
m29_61 -> m29_62  [key=0, style=solid];
m29_61 -> m29_66  [key=2, style=dotted];
m29_61 -> m29_67  [key=2, style=dotted];
m29_61 -> m29_68  [key=2, style=dotted];
m29_54 -> m29_55  [key=0, style=solid];
m29_54 -> m29_60  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_69 -> m29_70  [key=0, style=solid];
m29_55 -> m29_56  [key=0, style=solid];
m29_55 -> m29_59  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_55 -> m29_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_56 -> m29_57  [key=0, style=solid];
m29_56 -> m29_63  [key=2, style=dotted];
m29_56 -> m29_61  [color=darkseagreen4, key=1, label=config, style=dashed];
m29_57 -> m29_58  [key=0, style=solid];
m29_57 -> m29_59  [key=0, style=solid];
m29_58 -> m29_62  [key=0, style=solid];
m29_62 -> m29_54  [color=blue, key=0, style=bold];
m29_70 -> m29_71  [key=0, style=solid];
m29_71 -> m29_69  [color=blue, key=0, style=bold];
m29_80 -> m29_81  [key=0, style=solid];
m29_80 -> m29_68  [key=2, style=dotted];
m29_75 -> m29_76  [key=0, style=solid];
m29_82 -> m29_83  [key=0, style=solid];
m29_76 -> m29_77  [key=0, style=solid];
m29_76 -> m29_80  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_77 -> m29_78  [key=0, style=solid];
m29_77 -> m29_63  [key=2, style=dotted];
m29_77 -> m29_80  [color=darkseagreen4, key=1, label=config, style=dashed];
m29_78 -> m29_79  [key=0, style=solid];
m29_78 -> m29_80  [key=0, style=solid];
m29_79 -> m29_81  [key=0, style=solid];
m29_81 -> m29_75  [color=blue, key=0, style=bold];
m29_83 -> m29_84  [key=0, style=solid];
m29_84 -> m29_82  [color=blue, key=0, style=bold];
m29_116 -> m29_117  [key=0, style=solid];
m29_117 -> m29_118  [key=0, style=solid];
m29_118 -> m29_116  [color=blue, key=0, style=bold];
m29_130 -> m29_131  [key=0, style=solid];
m29_131 -> m29_132  [key=0, style=solid];
m29_132 -> m29_130  [color=blue, key=0, style=bold];
m29_227 -> m29_228  [key=0, style=solid];
m29_227 -> m29_68  [key=2, style=dotted];
m29_227 -> m29_230  [color=darkseagreen4, key=1, label=request, style=dashed];
m29_227 -> m29_232  [color=darkseagreen4, key=1, label=request, style=dashed];
m29_227 -> m29_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m29_228 -> m29_229  [key=0, style=solid];
m29_228 -> m29_230  [color=darkseagreen4, key=1, label=res, style=dashed];
m29_229 -> m29_230  [key=0, style=solid];
m29_229 -> m29_231  [key=0, style=solid];
m29_230 -> m29_231  [key=0, style=solid];
m29_231 -> m29_232  [key=0, style=solid];
m29_231 -> m29_233  [key=0, style=solid];
m29_232 -> m29_233  [key=0, style=solid];
m29_220 -> m29_221  [key=0, style=solid];
m29_223 -> m29_224  [key=0, style=solid];
m29_223 -> m29_225  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_221 -> m29_222  [key=0, style=solid];
m29_221 -> m29_184  [key=2, style=dotted];
m29_222 -> m29_220  [color=blue, key=0, style=bold];
m29_224 -> m29_225  [key=0, style=solid];
m29_224 -> m29_194  [key=2, style=dotted];
m29_224 -> m29_233  [color=darkseagreen4, key=1, label=requests, style=dashed];
m29_224 -> m29_234  [color=darkseagreen4, key=1, label=requests, style=dashed];
m29_225 -> m29_226  [key=0, style=solid];
m29_225 -> m29_227  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_225 -> m29_228  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_233 -> m29_226  [key=0, style=solid];
m29_233 -> m29_237  [key=2, style=dotted];
m29_234 -> m29_235  [key=0, style=solid];
m29_226 -> m29_227  [key=0, style=solid];
m29_226 -> m29_234  [key=0, style=solid];
m29_226 -> m29_236  [key=2, style=dotted];
m29_235 -> m29_223  [color=blue, key=0, style=bold];
m29_245 -> m29_246  [key=0, style=solid];
m29_245 -> m29_247  [color=darkseagreen4, key=1, label=res, style=dashed];
m29_246 -> m29_247  [key=0, style=solid];
m29_246 -> m29_64  [key=2, style=dotted];
m29_246 -> m29_248  [color=darkseagreen4, key=1, label=start, style=dashed];
m29_246 -> m29_251  [color=darkseagreen4, key=1, label=start, style=dashed];
m29_248 -> m29_249  [key=0, style=solid];
m29_248 -> m29_236  [key=2, style=dotted];
m29_248 -> m29_49  [key=2, style=dotted];
m29_248 -> m29_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_251 -> m29_252  [key=0, style=solid];
m29_251 -> m29_68  [key=2, style=dotted];
m29_240 -> m29_241  [key=0, style=solid];
m29_243 -> m29_244  [key=0, style=solid];
m29_243 -> m29_246  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_241 -> m29_242  [key=0, style=solid];
m29_241 -> m29_184  [key=2, style=dotted];
m29_242 -> m29_240  [color=blue, key=0, style=bold];
m29_244 -> m29_245  [key=0, style=solid];
m29_244 -> m29_248  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_244 -> m29_251  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_247 -> m29_248  [key=0, style=solid];
m29_247 -> m29_66  [key=2, style=dotted];
m29_247 -> m29_67  [key=2, style=dotted];
m29_247 -> m29_251  [color=darkseagreen4, key=1, label=end, style=dashed];
m29_249 -> m29_243  [color=blue, key=0, style=bold];
m29_250 -> m29_251  [key=0, style=solid];
m29_252 -> m29_250  [color=blue, key=0, style=bold];
m29_267 -> m29_268  [key=0, style=solid];
m29_268 -> m29_266  [color=blue, key=0, style=bold];
m29_63 -> m29_259  [key=0, style=solid];
m29_63 -> m29_46  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_63 -> m29_72  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_63 -> m29_102  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_63 -> m29_119  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_63 -> m29_168  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_63 -> m29_103  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m29_63 -> m29_120  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m29_259 -> m29_260  [key=0, style=solid];
m29_259 -> m29_236  [key=2, style=dotted];
m29_259 -> m29_261  [key=2, style=dotted];
m29_260 -> m29_63  [color=blue, key=0, style=bold];
m29_64 -> m29_155  [key=0, style=solid];
m29_64 -> m29_156  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_64 -> m29_158  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_64 -> m29_46  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m29_64 -> m29_89  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_64 -> m29_99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_64 -> m29_238  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_64 -> m29_45  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_64 -> m29_25  [color=darkorchid, key=3, label="Parameter variable int periods", style=bold];
m29_155 -> m29_156  [key=0, style=solid];
m29_155 -> m29_158  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_155 -> m29_159  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_156 -> m29_157  [key=0, style=solid];
m29_156 -> m29_66  [key=2, style=dotted];
m29_158 -> m29_159  [key=0, style=solid];
m29_158 -> m29_26  [key=2, style=dotted];
m29_158 -> m29_161  [key=2, style=dotted];
m29_159 -> m29_160  [key=0, style=solid];
m29_159 -> m29_162  [key=2, style=dotted];
m29_157 -> m29_158  [key=0, style=solid];
m29_157 -> m29_157  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m29_160 -> m29_64  [color=blue, key=0, style=bold];
m29_99 -> m29_100  [key=0, style=solid];
m29_99 -> m29_102  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_99 -> m29_107  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_99 -> m29_108  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_99 -> m29_109  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_100 -> m29_101  [key=0, style=solid];
m29_100 -> m29_102  [key=0, style=solid];
m29_102 -> m29_103  [key=0, style=solid];
m29_102 -> m29_104  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_102 -> m29_106  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_102 -> m29_109  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_107 -> m29_110  [key=0, style=solid];
m29_107 -> m29_114  [key=2, style=dotted];
m29_107 -> m29_115  [key=2, style=dotted];
m29_108 -> m29_109  [key=0, style=solid];
m29_108 -> m29_64  [key=2, style=dotted];
m29_109 -> m29_110  [key=0, style=solid];
m29_109 -> m29_66  [key=2, style=dotted];
m29_109 -> m29_67  [key=2, style=dotted];
m29_109 -> m29_88  [key=2, style=dotted];
m29_109 -> m29_33  [key=2, style=dotted];
m29_101 -> m29_110  [key=0, style=solid];
m29_101 -> m29_111  [key=2, style=dotted];
m29_103 -> m29_104  [key=0, style=solid];
m29_103 -> m29_107  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m29_104 -> m29_105  [key=0, style=solid];
m29_104 -> m29_63  [key=2, style=dotted];
m29_106 -> m29_107  [key=0, style=solid];
m29_106 -> m29_49  [key=2, style=dotted];
m29_106 -> m29_112  [key=2, style=dotted];
m29_106 -> m29_113  [key=2, style=dotted];
m29_106 -> m29_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_105 -> m29_106  [key=0, style=solid];
m29_105 -> m29_108  [key=0, style=solid];
m29_110 -> m29_99  [color=blue, key=0, style=bold];
m29_14 -> m29_15  [key=0, style=solid];
m29_15 -> m29_16  [key=0, style=solid];
m29_16 -> m29_14  [color=blue, key=0, style=bold];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_7 -> m29_11  [color=darkorchid, key=3, label="Parameter variable int barCount", style=bold];
m29_8 -> m29_9  [key=0, style=solid];
m29_9 -> m29_10  [key=0, style=solid];
m29_10 -> m29_7  [color=blue, key=0, style=bold];
m29_34 -> m29_35  [key=0, style=solid];
m29_35 -> m29_36  [key=0, style=solid];
m29_35 -> m29_37  [key=2, style=dotted];
m29_35 -> m29_33  [key=2, style=dotted];
m29_36 -> m29_34  [color=blue, key=0, style=bold];
m29_186 -> m29_197  [key=0, style=solid];
m29_186 -> m29_199  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m29_186 -> m29_200  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m29_186 -> m29_168  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_186 -> m29_172  [color=darkorchid, key=3, label="Parameter variable int periods", style=bold];
m29_186 -> m29_171  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_197 -> m29_198  [key=0, style=solid];
m29_197 -> m29_66  [key=2, style=dotted];
m29_199 -> m29_200  [key=0, style=solid];
m29_199 -> m29_26  [key=2, style=dotted];
m29_199 -> m29_161  [key=2, style=dotted];
m29_200 -> m29_201  [key=0, style=solid];
m29_200 -> m29_162  [key=2, style=dotted];
m29_198 -> m29_199  [key=0, style=solid];
m29_198 -> m29_198  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m29_201 -> m29_186  [color=blue, key=0, style=bold];
m29_139 -> m29_146  [key=0, style=solid];
m29_139 -> m29_133  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_146 -> m29_147  [key=0, style=solid];
m29_146 -> m29_32  [key=2, style=dotted];
m29_146 -> m29_33  [key=2, style=dotted];
m29_147 -> m29_139  [color=blue, key=0, style=bold];
m29_236 -> m29_262  [key=0, style=solid];
m29_236 -> m29_217  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_236 -> m29_238  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_236 -> m29_63  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m29_262 -> m29_263  [key=0, style=solid];
m29_262 -> m29_264  [key=2, style=dotted];
m29_262 -> m29_265  [key=2, style=dotted];
m29_262 -> m29_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_262 -> m29_262  [color=darkseagreen4, key=1, label=sub, style=dashed];
m29_263 -> m29_236  [color=blue, key=0, style=bold];
m29_45 -> m29_46  [key=0, style=solid];
m29_45 -> m29_59  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_45 -> m29_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_45 -> m29_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_46 -> m29_47  [key=0, style=solid];
m29_46 -> m29_49  [key=2, style=dotted];
m29_46 -> m29_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_46 -> m29_63  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.SubscriptionDataConfig config", style=bold];
m29_46 -> m29_46  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m29_46 -> m29_26  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m29_47 -> m29_48  [key=0, style=solid];
m29_47 -> m29_50  [key=2, style=dotted];
m29_47 -> m29_51  [key=2, style=dotted];
m29_47 -> m29_52  [key=2, style=dotted];
m29_47 -> m29_53  [key=2, style=dotted];
m29_47 -> m29_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_48 -> m29_45  [color=blue, key=0, style=bold];
m29_29 -> m29_30  [key=0, style=solid];
m29_30 -> m29_31  [key=0, style=solid];
m29_30 -> m29_32  [key=2, style=dotted];
m29_30 -> m29_33  [key=2, style=dotted];
m29_31 -> m29_29  [color=blue, key=0, style=bold];
m29_89 -> m29_90  [key=0, style=solid];
m29_89 -> m29_91  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_89 -> m29_92  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_89 -> m29_95  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_90 -> m29_91  [key=0, style=solid];
m29_90 -> m29_95  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_91 -> m29_92  [key=0, style=solid];
m29_91 -> m29_64  [key=2, style=dotted];
m29_91 -> m29_95  [color=darkseagreen4, key=1, label=start, style=dashed];
m29_92 -> m29_93  [color=red, key=0, style=solid];
m29_95 -> m29_96  [key=0, style=solid];
m29_95 -> m29_66  [key=2, style=dotted];
m29_95 -> m29_67  [key=2, style=dotted];
m29_95 -> m29_32  [key=2, style=dotted];
m29_95 -> m29_98  [key=2, style=dotted];
m29_95 -> m29_33  [key=2, style=dotted];
m29_93 -> m29_94  [color=red, key=0, style=solid];
m29_93 -> m29_95  [color=red, key=0, style=solid];
m29_94 -> m29_95  [color=red, key=0, style=solid];
m29_94 -> m29_97  [color=red, key=2, style=dotted];
m29_96 -> m29_89  [color=blue, key=0, style=bold];
m29_133 -> m29_134  [key=0, style=solid];
m29_133 -> m29_137  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_134 -> m29_135  [color=red, key=0, style=solid];
m29_137 -> m29_138  [key=0, style=solid];
m29_137 -> m29_139  [key=2, style=dotted];
m29_137 -> m29_98  [key=2, style=dotted];
m29_137 -> m29_33  [key=2, style=dotted];
m29_135 -> m29_136  [color=red, key=0, style=solid];
m29_135 -> m29_137  [color=red, key=0, style=solid];
m29_136 -> m29_137  [color=red, key=0, style=solid];
m29_136 -> m29_97  [color=red, key=2, style=dotted];
m29_138 -> m29_133  [color=blue, key=0, style=bold];
m29_140 -> m29_141  [key=0, style=solid];
m29_140 -> m29_144  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_141 -> m29_142  [color=red, key=0, style=solid];
m29_144 -> m29_145  [key=0, style=solid];
m29_144 -> m29_32  [key=2, style=dotted];
m29_144 -> m29_98  [key=2, style=dotted];
m29_144 -> m29_33  [key=2, style=dotted];
m29_142 -> m29_143  [color=red, key=0, style=solid];
m29_142 -> m29_144  [color=red, key=0, style=solid];
m29_143 -> m29_144  [color=red, key=0, style=solid];
m29_143 -> m29_97  [color=red, key=2, style=dotted];
m29_145 -> m29_140  [color=blue, key=0, style=bold];
m29_38 -> m29_39  [key=0, style=solid];
m29_39 -> m29_40  [key=0, style=solid];
m29_39 -> m29_41  [key=2, style=dotted];
m29_39 -> m29_33  [key=2, style=dotted];
m29_40 -> m29_38  [color=blue, key=0, style=bold];
m29_85 -> m29_86  [key=0, style=solid];
m29_86 -> m29_87  [key=0, style=solid];
m29_86 -> m29_88  [key=2, style=dotted];
m29_86 -> m29_33  [key=2, style=dotted];
m29_87 -> m29_85  [color=blue, key=0, style=bold];
m29_32 -> m29_153  [key=0, style=solid];
m29_32 -> m29_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_32 -> m29_140  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m29_32 -> m29_29  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_32 -> m29_89  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_32 -> m29_91  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m29_153 -> m29_154  [key=0, style=solid];
m29_153 -> m29_27  [key=2, style=dotted];
m29_153 -> m29_152  [key=2, style=dotted];
m29_153 -> m29_33  [key=2, style=dotted];
m29_154 -> m29_32  [color=blue, key=0, style=bold];
m29_27 -> m29_217  [key=0, style=solid];
m29_27 -> m29_227  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_27 -> m29_228  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_27 -> m29_229  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m29_27 -> m29_230  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m29_27 -> m29_231  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m29_27 -> m29_232  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m29_27 -> m29_32  [color=darkorchid, key=3, label="Parameter variable bool? extendedMarket", style=bold];
m29_27 -> m29_21  [color=darkorchid, key=3, label="Parameter variable System.DateTime endAlgoTz", style=bold];
m29_217 -> m29_218  [key=0, style=solid];
m29_217 -> m29_50  [key=2, style=dotted];
m29_217 -> m29_219  [key=2, style=dotted];
m29_217 -> m29_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_217 -> m29_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_217 -> m29_26  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.HistoryRequest request", style=bold];
m29_217 -> m29_217  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Symbol> ", style=bold];
m29_218 -> m29_27  [color=blue, key=0, style=bold];
m29_17 -> m29_18  [key=0, style=solid];
m29_17 -> m29_25  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> GetWarmupHistoryRequests", style=bold];
m29_17 -> m29_27  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> GetWarmupHistoryRequests", style=bold];
m29_18 -> m29_19  [key=0, style=solid];
m29_18 -> m29_20  [key=0, style=solid];
m29_19 -> m29_24  [key=0, style=solid];
m29_19 -> m29_25  [key=2, style=dotted];
m29_20 -> m29_21  [key=0, style=solid];
m29_20 -> m29_23  [key=0, style=solid];
m29_21 -> m29_22  [key=0, style=solid];
m29_21 -> m29_26  [key=2, style=dotted];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_28  [key=2, style=dotted];
m29_22 -> m29_24  [key=0, style=solid];
m29_22 -> m29_27  [key=2, style=dotted];
m29_24 -> m29_17  [color=blue, key=0, style=bold];
m29_152 -> m29_165  [key=0, style=solid];
m29_152 -> m29_25  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m29_152 -> m29_27  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m29_165 -> m29_166  [key=0, style=solid];
m29_165 -> m29_167  [key=2, style=dotted];
m29_165 -> m29_33  [key=2, style=dotted];
m29_166 -> m29_152  [color=blue, key=0, style=bold];
m29_37 -> m29_148  [key=0, style=solid];
m29_37 -> m29_150  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m29_37 -> m29_34  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_148 -> m29_149  [key=0, style=solid];
m29_148 -> m29_150  [key=0, style=solid];
m29_150 -> m29_151  [key=0, style=solid];
m29_150 -> m29_25  [key=2, style=dotted];
m29_150 -> m29_152  [key=2, style=dotted];
m29_150 -> m29_33  [key=2, style=dotted];
m29_149 -> m29_151  [key=0, style=solid];
m29_149 -> m29_111  [key=2, style=dotted];
m29_151 -> m29_37  [color=blue, key=0, style=bold];
m29_167 -> m29_202  [key=0, style=solid];
m29_167 -> m29_203  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>", style=dashed];
m29_167 -> m29_212  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m29_167 -> m29_152  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m29_202 -> m29_203  [key=0, style=solid];
m29_202 -> m29_209  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m29_202 -> m29_202  [color=darkorchid, key=3, label="Local variable bool sentMessage", style=bold];
m29_203 -> m29_204  [key=0, style=solid];
m29_203 -> m29_214  [key=2, style=dotted];
m29_203 -> m29_212  [color=darkseagreen4, key=1, label=reqs, style=dashed];
m29_212 -> m29_213  [key=0, style=solid];
m29_212 -> m29_216  [key=2, style=dotted];
m29_209 -> m29_210  [key=0, style=solid];
m29_209 -> m29_204  [key=0, style=solid];
m29_204 -> m29_205  [key=0, style=solid];
m29_204 -> m29_212  [key=0, style=solid];
m29_204 -> m29_206  [color=darkseagreen4, key=1, label=request, style=dashed];
m29_204 -> m29_207  [color=darkseagreen4, key=1, label=request, style=dashed];
m29_204 -> m29_208  [color=darkseagreen4, key=1, label=request, style=dashed];
m29_205 -> m29_206  [key=0, style=solid];
m29_205 -> m29_204  [key=0, style=solid];
m29_206 -> m29_207  [key=0, style=solid];
m29_207 -> m29_208  [key=0, style=solid];
m29_207 -> m29_209  [key=0, style=solid];
m29_208 -> m29_209  [key=0, style=solid];
m29_210 -> m29_211  [key=0, style=solid];
m29_211 -> m29_204  [key=0, style=solid];
m29_211 -> m29_215  [key=2, style=dotted];
m29_213 -> m29_167  [color=blue, key=0, style=bold];
m29_168 -> m29_169  [key=0, style=solid];
m29_168 -> m29_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m29_168 -> m29_172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m29_168 -> m29_174  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m29_168 -> m29_178  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m29_168 -> m29_46  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.BaseData GetLastKnownPrice", style=bold];
m29_169 -> m29_170  [key=0, style=solid];
m29_169 -> m29_171  [key=0, style=solid];
m29_169 -> m29_184  [key=2, style=dotted];
m29_171 -> m29_172  [key=0, style=solid];
m29_171 -> m29_185  [key=2, style=dotted];
m29_171 -> m29_173  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m29_171 -> m29_176  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m29_171 -> m29_177  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m29_171 -> m29_178  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m29_172 -> m29_173  [key=0, style=solid];
m29_172 -> m29_186  [key=2, style=dotted];
m29_172 -> m29_178  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m29_174 -> m29_175  [key=0, style=solid];
m29_174 -> m29_63  [key=2, style=dotted];
m29_174 -> m29_176  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m29_174 -> m29_177  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m29_174 -> m29_178  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m29_178 -> m29_179  [key=0, style=solid];
m29_178 -> m29_189  [key=2, style=dotted];
m29_178 -> m29_65  [key=2, style=dotted];
m29_178 -> m29_190  [key=2, style=dotted];
m29_178 -> m29_191  [key=2, style=dotted];
m29_178 -> m29_192  [key=2, style=dotted];
m29_178 -> m29_193  [key=2, style=dotted];
m29_170 -> m29_183  [key=0, style=solid];
m29_173 -> m29_174  [key=0, style=solid];
m29_173 -> m29_66  [key=2, style=dotted];
m29_173 -> m29_67  [key=2, style=dotted];
m29_173 -> m29_178  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m29_176 -> m29_177  [key=0, style=solid];
m29_176 -> m29_187  [key=2, style=dotted];
m29_177 -> m29_178  [key=0, style=solid];
m29_177 -> m29_188  [key=2, style=dotted];
m29_177 -> m29_177  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m29_175 -> m29_176  [key=0, style=solid];
m29_175 -> m29_178  [key=0, style=solid];
m29_179 -> m29_180  [key=0, style=solid];
m29_179 -> m29_194  [key=2, style=dotted];
m29_179 -> m29_152  [key=2, style=dotted];
m29_179 -> m29_181  [color=darkseagreen4, key=1, label=history, style=dashed];
m29_180 -> m29_181  [key=0, style=solid];
m29_180 -> m29_182  [key=0, style=solid];
m29_180 -> m29_195  [key=2, style=dotted];
m29_180 -> m29_196  [key=2, style=dotted];
m29_181 -> m29_183  [key=0, style=solid];
m29_181 -> m29_196  [key=2, style=dotted];
m29_182 -> m29_183  [key=0, style=solid];
m29_183 -> m29_168  [color=blue, key=0, style=bold];
m29_25 -> m29_238  [key=0, style=solid];
m29_25 -> m29_245  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_25 -> m29_246  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_25 -> m29_248  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_25 -> m29_251  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_25 -> m29_37  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_238 -> m29_239  [key=0, style=solid];
m29_238 -> m29_50  [key=2, style=dotted];
m29_238 -> m29_219  [key=2, style=dotted];
m29_238 -> m29_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_238 -> m29_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_238 -> m29_64  [color=darkorchid, key=3, label="Local variable System.DateTime start", style=bold];
m29_239 -> m29_25  [color=blue, key=0, style=bold];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_0  [key=2, style=dotted];
m29_6 -> m29_4  [color=blue, key=0, style=bold];
m29_88 -> m29_119  [key=0, style=solid];
m29_88 -> m29_124  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_88 -> m29_125  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_88 -> m29_126  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_88 -> m29_85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_88 -> m29_99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_88 -> m29_108  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m29_119 -> m29_120  [key=0, style=solid];
m29_119 -> m29_121  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_119 -> m29_123  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_119 -> m29_125  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_124 -> m29_127  [key=0, style=solid];
m29_124 -> m29_114  [key=2, style=dotted];
m29_124 -> m29_115  [key=2, style=dotted];
m29_125 -> m29_126  [key=0, style=solid];
m29_125 -> m29_68  [key=2, style=dotted];
m29_125 -> m29_26  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.HistoryRequest request", style=bold];
m29_126 -> m29_127  [key=0, style=solid];
m29_126 -> m29_128  [key=2, style=dotted];
m29_126 -> m29_129  [key=2, style=dotted];
m29_126 -> m29_33  [key=2, style=dotted];
m29_120 -> m29_121  [key=0, style=solid];
m29_120 -> m29_124  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m29_121 -> m29_122  [key=0, style=solid];
m29_121 -> m29_63  [key=2, style=dotted];
m29_121 -> m29_125  [color=darkseagreen4, key=1, label=config, style=dashed];
m29_123 -> m29_124  [key=0, style=solid];
m29_123 -> m29_49  [key=2, style=dotted];
m29_123 -> m29_112  [key=2, style=dotted];
m29_123 -> m29_113  [key=2, style=dotted];
m29_123 -> m29_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_122 -> m29_123  [key=0, style=solid];
m29_122 -> m29_125  [key=0, style=solid];
m29_127 -> m29_88  [color=blue, key=0, style=bold];
m29_44 -> m29_72  [key=0, style=solid];
m29_44 -> m29_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_44 -> m29_41  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_72 -> m29_73  [key=0, style=solid];
m29_72 -> m29_49  [key=2, style=dotted];
m29_72 -> m29_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_72 -> m29_63  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.SubscriptionDataConfig config", style=bold];
m29_72 -> m29_46  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m29_72 -> m29_26  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m29_73 -> m29_74  [key=0, style=solid];
m29_73 -> m29_50  [key=2, style=dotted];
m29_73 -> m29_51  [key=2, style=dotted];
m29_73 -> m29_52  [key=2, style=dotted];
m29_73 -> m29_53  [key=2, style=dotted];
m29_73 -> m29_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_74 -> m29_44  [color=blue, key=0, style=bold];
m29_68 -> m29_253  [key=0, style=solid];
m29_68 -> m29_254  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m29_68 -> m29_255  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m29_253 -> m29_254  [key=0, style=solid];
m29_253 -> m29_253  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_253 -> m29_255  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_254 -> m29_255  [key=0, style=solid];
m29_254 -> m29_187  [key=2, style=dotted];
m29_255 -> m29_256  [key=0, style=solid];
m29_255 -> m29_258  [key=2, style=dotted];
m29_255 -> m29_65  [key=2, style=dotted];
m29_256 -> m29_257  [key=0, style=solid];
m29_257 -> m29_68  [color=blue, key=0, style=bold];
m29_26 -> m29_46  [color=darkorchid, key=3, label="Parameter variable System.DateTime startAlgoTz", style=bold];
m29_26 -> m29_72  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m29_26 -> m29_119  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m29_26 -> m29_217  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m29_26 -> m29_238  [color=darkorchid, key=3, label="Parameter variable System.DateTime endAlgoTz", style=bold];
m29_26 -> m29_121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m29_26 -> m29_44  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_26 -> m29_88  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_26 -> m29_27  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_26 -> m29_45  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_26 -> m29_25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m29_26 -> m29_255  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest CreateHistoryRequest", style=bold];
m29_269 -> m29_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_90  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_94  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_108  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_119  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_136  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_143  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_158  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_159  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_163  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_178  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_179  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_199  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_200  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_206  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_211  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_212  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_238  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_244  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_246  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_251  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_269 -> m29_255  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m29_270 -> m29_59  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_270 -> m29_60  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_270 -> m29_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_271 -> m29_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_272 -> m29_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_273 -> m29_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_274 -> m29_80  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_275 -> m29_227  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_276 -> m29_227  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_277 -> m29_227  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_277 -> m29_228  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_278 -> m29_229  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m29_278 -> m29_230  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m29_279 -> m29_231  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m29_279 -> m29_232  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m29_280 -> m29_245  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_280 -> m29_248  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_280 -> m29_251  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m29_281 -> m29_246  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_282 -> m29_251  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_283 -> m29_251  [color=darkseagreen4, key=1, label=start, style=dashed];
m29_284 -> m29_251  [color=darkseagreen4, key=1, label=end, style=dashed];
m30_128 -> m30_145  [key=0, style=solid];
m30_128 -> m30_146  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m30_128 -> m30_148  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m30_128 -> m30_151  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m30_128 -> m30_122  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m30_128 -> m30_131  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m30_128 -> m30_138  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m30_128 -> m30_147  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m30_145 -> m30_146  [key=0, style=solid];
m30_145 -> m30_157  [key=2, style=dotted];
m30_146 -> m30_147  [key=0, style=solid];
m30_146 -> m30_150  [key=0, style=solid];
m30_146 -> m30_158  [key=2, style=dotted];
m30_148 -> m30_149  [key=0, style=solid];
m30_148 -> m30_160  [key=2, style=dotted];
m30_151 -> m30_152  [key=0, style=solid];
m30_151 -> m30_155  [key=0, style=solid];
m30_147 -> m30_148  [key=0, style=solid];
m30_147 -> m30_159  [key=2, style=dotted];
m30_147 -> m30_149  [color=darkseagreen4, key=1, label=tmp, style=dashed];
m30_150 -> m30_151  [key=0, style=solid];
m30_150 -> m30_161  [key=2, style=dotted];
m30_150 -> m30_154  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m30_150 -> m30_155  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m30_149 -> m30_150  [key=0, style=solid];
m30_149 -> m30_151  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m30_154 -> m30_151  [key=0, style=solid];
m30_154 -> m30_164  [key=2, style=dotted];
m30_155 -> m30_156  [key=0, style=solid];
m30_152 -> m30_153  [key=0, style=solid];
m30_152 -> m30_162  [key=2, style=dotted];
m30_152 -> m30_154  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_153 -> m30_154  [key=0, style=solid];
m30_153 -> m30_151  [key=0, style=solid];
m30_153 -> m30_163  [key=2, style=dotted];
m30_156 -> m30_128  [color=blue, key=0, style=bold];
m30_15 -> m30_16  [key=0, style=solid];
m30_15 -> m30_22  [key=2, style=dotted];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_11 -> m30_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_11 -> m30_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m30_11 -> m30_10  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m30_11 -> m30_7  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_18  [key=2, style=dotted];
m30_12 -> m30_15  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_19  [key=2, style=dotted];
m30_13 -> m30_20  [key=2, style=dotted];
m30_13 -> m30_15  [color=darkseagreen4, key=1, label=symbolObject, style=dashed];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_21  [key=2, style=dotted];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_23  [key=2, style=dotted];
m30_17 -> m30_11  [color=blue, key=0, style=bold];
m30_28 -> m30_180  [key=0, style=solid];
m30_28 -> m30_183  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m30_28 -> m30_24  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m30_28 -> m30_30  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m30_180 -> m30_181  [key=0, style=solid];
m30_180 -> m30_182  [color=darkseagreen4, key=1, label=testMod, style=dashed];
m30_180 -> m30_180  [color=darkorchid, key=3, label="Local variable string testMod", style=bold];
m30_183 -> m30_184  [key=0, style=solid];
m30_183 -> m30_187  [key=2, style=dotted];
m30_183 -> m30_162  [key=2, style=dotted];
m30_181 -> m30_182  [key=0, style=solid];
m30_181 -> m30_157  [key=2, style=dotted];
m30_182 -> m30_183  [key=0, style=solid];
m30_182 -> m30_185  [key=2, style=dotted];
m30_182 -> m30_186  [key=2, style=dotted];
m30_184 -> m30_28  [color=blue, key=0, style=bold];
m30_47 -> m30_48  [key=0, style=solid];
m30_48 -> m30_49  [key=0, style=solid];
m30_48 -> m30_46  [key=2, style=dotted];
m30_49 -> m30_47  [color=blue, key=0, style=bold];
m30_79 -> m30_80  [key=0, style=solid];
m30_80 -> m30_81  [key=0, style=solid];
m30_80 -> m30_67  [key=2, style=dotted];
m30_80 -> m30_68  [key=2, style=dotted];
m30_80 -> m30_69  [key=2, style=dotted];
m30_80 -> m30_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_81 -> m30_79  [color=blue, key=0, style=bold];
m30_92 -> m30_93  [key=0, style=solid];
m30_93 -> m30_94  [key=0, style=solid];
m30_93 -> m30_67  [key=2, style=dotted];
m30_93 -> m30_68  [key=2, style=dotted];
m30_93 -> m30_88  [key=2, style=dotted];
m30_93 -> m30_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_94 -> m30_92  [color=blue, key=0, style=bold];
m30_98 -> m30_99  [key=0, style=solid];
m30_99 -> m30_100  [key=0, style=solid];
m30_99 -> m30_67  [key=2, style=dotted];
m30_99 -> m30_68  [key=2, style=dotted];
m30_99 -> m30_88  [key=2, style=dotted];
m30_99 -> m30_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_100 -> m30_98  [color=blue, key=0, style=bold];
m30_122 -> m30_123  [key=0, style=solid];
m30_122 -> m30_126  [color=darkseagreen4, key=1, label=int, style=dashed];
m30_122 -> m30_124  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m30_123 -> m30_124  [key=0, style=solid];
m30_123 -> m30_128  [key=2, style=dotted];
m30_123 -> m30_126  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m30_126 -> m30_127  [key=0, style=solid];
m30_126 -> m30_129  [key=2, style=dotted];
m30_126 -> m30_130  [key=2, style=dotted];
m30_124 -> m30_125  [key=0, style=solid];
m30_124 -> m30_126  [key=0, style=solid];
m30_125 -> m30_127  [key=0, style=solid];
m30_127 -> m30_122  [color=blue, key=0, style=bold];
m30_24 -> m30_25  [key=0, style=solid];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_28  [key=2, style=dotted];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_29  [key=2, style=dotted];
m30_27 -> m30_24  [color=blue, key=0, style=bold];
m30_50 -> m30_51  [key=0, style=solid];
m30_51 -> m30_52  [key=0, style=solid];
m30_51 -> m30_53  [key=2, style=dotted];
m30_52 -> m30_50  [color=blue, key=0, style=bold];
m30_85 -> m30_86  [key=0, style=solid];
m30_86 -> m30_87  [key=0, style=solid];
m30_86 -> m30_67  [key=2, style=dotted];
m30_86 -> m30_68  [key=2, style=dotted];
m30_86 -> m30_88  [key=2, style=dotted];
m30_86 -> m30_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_87 -> m30_85  [color=blue, key=0, style=bold];
m30_119 -> m30_120  [key=0, style=solid];
m30_70 -> m30_71  [key=0, style=solid];
m30_71 -> m30_72  [key=0, style=solid];
m30_72 -> m30_70  [color=blue, key=0, style=bold];
m30_76 -> m30_77  [key=0, style=solid];
m30_77 -> m30_78  [key=0, style=solid];
m30_78 -> m30_76  [color=blue, key=0, style=bold];
m30_82 -> m30_83  [key=0, style=solid];
m30_83 -> m30_84  [key=0, style=solid];
m30_84 -> m30_82  [color=blue, key=0, style=bold];
m30_89 -> m30_90  [key=0, style=solid];
m30_90 -> m30_91  [key=0, style=solid];
m30_91 -> m30_89  [color=blue, key=0, style=bold];
m30_95 -> m30_96  [key=0, style=solid];
m30_96 -> m30_97  [key=0, style=solid];
m30_97 -> m30_95  [color=blue, key=0, style=bold];
m30_101 -> m30_102  [key=0, style=solid];
m30_102 -> m30_103  [key=0, style=solid];
m30_103 -> m30_101  [color=blue, key=0, style=bold];
m30_107 -> m30_108  [key=0, style=solid];
m30_108 -> m30_109  [key=0, style=solid];
m30_109 -> m30_107  [color=blue, key=0, style=bold];
m30_113 -> m30_114  [key=0, style=solid];
m30_114 -> m30_115  [key=0, style=solid];
m30_115 -> m30_113  [color=blue, key=0, style=bold];
m30_120 -> m30_121  [key=0, style=solid];
m30_121 -> m30_119  [color=blue, key=0, style=bold];
m30_61 -> m30_62  [key=0, style=solid];
m30_62 -> m30_63  [key=0, style=solid];
m30_62 -> m30_60  [key=2, style=dotted];
m30_63 -> m30_61  [color=blue, key=0, style=bold];
m30_116 -> m30_117  [key=0, style=solid];
m30_117 -> m30_118  [key=0, style=solid];
m30_117 -> m30_67  [key=2, style=dotted];
m30_117 -> m30_68  [key=2, style=dotted];
m30_117 -> m30_88  [key=2, style=dotted];
m30_117 -> m30_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_118 -> m30_116  [color=blue, key=0, style=bold];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_32  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_28  [key=2, style=dotted];
m30_31 -> m30_33  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m30_32 -> m30_33  [key=0, style=solid];
m30_32 -> m30_28  [key=2, style=dotted];
m30_33 -> m30_34  [key=0, style=solid];
m30_33 -> m30_35  [key=2, style=dotted];
m30_34 -> m30_30  [color=blue, key=0, style=bold];
m30_54 -> m30_55  [key=0, style=solid];
m30_55 -> m30_56  [key=0, style=solid];
m30_55 -> m30_53  [key=2, style=dotted];
m30_56 -> m30_54  [color=blue, key=0, style=bold];
m30_36 -> m30_37  [key=0, style=solid];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_39  [key=2, style=dotted];
m30_38 -> m30_36  [color=blue, key=0, style=bold];
m30_4 -> m30_5  [color=red, key=0, style=solid];
m30_5 -> m30_6  [color=red, key=0, style=solid];
m30_5 -> m30_7  [color=red, key=2, style=dotted];
m30_6 -> m30_4  [color=blue, key=0, style=bold];
m30_110 -> m30_111  [key=0, style=solid];
m30_111 -> m30_112  [key=0, style=solid];
m30_111 -> m30_67  [key=2, style=dotted];
m30_111 -> m30_68  [key=2, style=dotted];
m30_111 -> m30_88  [key=2, style=dotted];
m30_111 -> m30_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_112 -> m30_110  [color=blue, key=0, style=bold];
m30_104 -> m30_105  [key=0, style=solid];
m30_105 -> m30_106  [key=0, style=solid];
m30_105 -> m30_67  [key=2, style=dotted];
m30_105 -> m30_68  [key=2, style=dotted];
m30_105 -> m30_88  [key=2, style=dotted];
m30_105 -> m30_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_106 -> m30_104  [color=blue, key=0, style=bold];
m30_73 -> m30_74  [key=0, style=solid];
m30_74 -> m30_75  [key=0, style=solid];
m30_74 -> m30_67  [key=2, style=dotted];
m30_74 -> m30_68  [key=2, style=dotted];
m30_74 -> m30_69  [key=2, style=dotted];
m30_74 -> m30_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_75 -> m30_73  [color=blue, key=0, style=bold];
m30_43 -> m30_44  [key=0, style=solid];
m30_44 -> m30_45  [key=0, style=solid];
m30_44 -> m30_46  [key=2, style=dotted];
m30_45 -> m30_43  [color=blue, key=0, style=bold];
m30_57 -> m30_58  [key=0, style=solid];
m30_58 -> m30_59  [key=0, style=solid];
m30_58 -> m30_60  [key=2, style=dotted];
m30_59 -> m30_57  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=2, style=dotted];
m30_2 -> m30_0  [color=blue, key=0, style=bold];
m30_40 -> m30_41  [key=0, style=solid];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_39  [key=2, style=dotted];
m30_42 -> m30_40  [color=blue, key=0, style=bold];
m30_10 -> m30_165  [key=0, style=solid];
m30_10 -> m30_166  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m30_10 -> m30_169  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m30_10 -> m30_7  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m30_165 -> m30_166  [key=0, style=solid];
m30_165 -> m30_157  [key=2, style=dotted];
m30_166 -> m30_167  [key=0, style=solid];
m30_166 -> m30_171  [key=2, style=dotted];
m30_166 -> m30_172  [key=2, style=dotted];
m30_166 -> m30_173  [key=2, style=dotted];
m30_166 -> m30_174  [key=2, style=dotted];
m30_166 -> m30_169  [color=darkseagreen4, key=1, label=an, style=dashed];
m30_169 -> m30_170  [key=0, style=solid];
m30_169 -> m30_177  [key=2, style=dotted];
m30_169 -> m30_178  [key=2, style=dotted];
m30_169 -> m30_179  [key=2, style=dotted];
m30_167 -> m30_168  [key=0, style=solid];
m30_167 -> m30_175  [key=2, style=dotted];
m30_168 -> m30_169  [key=0, style=solid];
m30_168 -> m30_176  [key=2, style=dotted];
m30_170 -> m30_10  [color=blue, key=0, style=bold];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m30_7 -> m30_5  [color=red, key=3, label="Parameter variable decimal leverage", style=bold];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_10  [key=2, style=dotted];
m30_8 -> m30_11  [key=2, style=dotted];
m30_9 -> m30_7  [color=blue, key=0, style=bold];
m30_131 -> m30_132  [key=0, style=solid];
m30_131 -> m30_135  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m30_131 -> m30_124  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m30_132 -> m30_133  [key=0, style=solid];
m30_132 -> m30_128  [key=2, style=dotted];
m30_132 -> m30_135  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m30_135 -> m30_136  [key=0, style=solid];
m30_135 -> m30_137  [key=2, style=dotted];
m30_135 -> m30_130  [key=2, style=dotted];
m30_133 -> m30_134  [key=0, style=solid];
m30_133 -> m30_135  [key=0, style=solid];
m30_134 -> m30_136  [key=0, style=solid];
m30_136 -> m30_131  [color=blue, key=0, style=bold];
m30_138 -> m30_139  [key=0, style=solid];
m30_138 -> m30_142  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m30_138 -> m30_124  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m30_139 -> m30_140  [key=0, style=solid];
m30_139 -> m30_128  [key=2, style=dotted];
m30_139 -> m30_142  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m30_142 -> m30_143  [key=0, style=solid];
m30_142 -> m30_144  [key=2, style=dotted];
m30_142 -> m30_130  [key=2, style=dotted];
m30_140 -> m30_141  [key=0, style=solid];
m30_140 -> m30_142  [key=0, style=solid];
m30_141 -> m30_143  [key=0, style=solid];
m30_143 -> m30_138  [color=blue, key=0, style=bold];
m30_64 -> m30_65  [key=0, style=solid];
m30_65 -> m30_66  [key=0, style=solid];
m30_65 -> m30_67  [key=2, style=dotted];
m30_65 -> m30_68  [key=2, style=dotted];
m30_65 -> m30_69  [key=2, style=dotted];
m30_65 -> m30_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_66 -> m30_64  [color=blue, key=0, style=bold];
m30_188 -> m30_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_5  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_58  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_74  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_123  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_135  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m30_188 -> m30_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_121 -> m31_125  [key=0, style=solid];
m31_121 -> m31_126  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_121 -> m31_118  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_121 -> m31_122  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_125 -> m31_126  [key=0, style=solid];
m31_126 -> m31_127  [key=0, style=solid];
m31_126 -> m31_68  [key=2, style=dotted];
m31_126 -> m31_129  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_126 -> m31_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_127 -> m31_128  [key=0, style=solid];
m31_127 -> m31_70  [key=2, style=dotted];
m31_127 -> m31_129  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_129 -> m31_131  [key=0, style=solid];
m31_129 -> m31_71  [key=2, style=dotted];
m31_130 -> m31_131  [key=0, style=solid];
m31_130 -> m31_72  [key=2, style=dotted];
m31_128 -> m31_129  [key=0, style=solid];
m31_128 -> m31_130  [key=0, style=solid];
m31_131 -> m31_121  [color=blue, key=0, style=bold];
m31_163 -> m31_164  [key=0, style=solid];
m31_163 -> m31_162  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Sell", style=bold];
m31_164 -> m31_165  [key=0, style=solid];
m31_164 -> m31_3  [key=2, style=dotted];
m31_164 -> m31_162  [key=2, style=dotted];
m31_165 -> m31_163  [color=blue, key=0, style=bold];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_3  [key=2, style=dotted];
m31_18 -> m31_4  [key=2, style=dotted];
m31_19 -> m31_17  [color=blue, key=0, style=bold];
m31_318 -> m31_319  [key=0, style=solid];
m31_319 -> m31_320  [key=0, style=solid];
m31_319 -> m31_317  [key=2, style=dotted];
m31_320 -> m31_318  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_3  [key=2, style=dotted];
m31_1 -> m31_4  [key=2, style=dotted];
m31_2 -> m31_0  [color=blue, key=0, style=bold];
m31_168 -> m31_169  [key=0, style=solid];
m31_168 -> m31_170  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_173  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_218  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_175  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_180  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_168 -> m31_183  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_168 -> m31_186  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_188  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_193  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_196  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_168 -> m31_162  [color=darkorchid, key=3, label="Parameter variable int strategyQuantity", style=bold];
m31_169 -> m31_170  [key=0, style=solid];
m31_169 -> m31_201  [key=2, style=dotted];
m31_169 -> m31_181  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_169 -> m31_184  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_169 -> m31_194  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_169 -> m31_197  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_169 -> m31_199  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_170 -> m31_171  [key=0, style=solid];
m31_170 -> m31_202  [key=2, style=dotted];
m31_170 -> m31_180  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m31_170 -> m31_183  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m31_170 -> m31_193  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m31_170 -> m31_196  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m31_171 -> m31_172  [key=0, style=solid];
m31_171 -> m31_186  [key=0, style=solid];
m31_172 -> m31_173  [key=0, style=solid];
m31_172 -> m31_186  [key=0, style=solid];
m31_172 -> m31_218  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_172 -> m31_175  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_172 -> m31_178  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_172 -> m31_180  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_172 -> m31_183  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_172 -> m31_185  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_173 -> m31_174  [key=0, style=solid];
m31_173 -> m31_203  [key=2, style=dotted];
m31_173 -> m31_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_173 -> m31_177  [color=darkseagreen4, key=1, label=optionSeq, style=dashed];
m31_175 -> m31_176  [key=0, style=solid];
m31_175 -> m31_205  [key=2, style=dotted];
m31_175 -> m31_206  [key=2, style=dotted];
m31_175 -> m31_207  [key=2, style=dotted];
m31_175 -> m31_208  [key=2, style=dotted];
m31_175 -> m31_209  [key=2, style=dotted];
m31_180 -> m31_181  [key=0, style=solid];
m31_180 -> m31_212  [key=2, style=dotted];
m31_183 -> m31_184  [key=0, style=solid];
m31_183 -> m31_214  [key=2, style=dotted];
m31_186 -> m31_187  [key=0, style=solid];
m31_186 -> m31_199  [key=0, style=solid];
m31_187 -> m31_188  [key=0, style=solid];
m31_187 -> m31_199  [key=0, style=solid];
m31_187 -> m31_191  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m31_187 -> m31_193  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m31_187 -> m31_196  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m31_187 -> m31_198  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m31_188 -> m31_189  [key=0, style=solid];
m31_188 -> m31_191  [key=0, style=solid];
m31_188 -> m31_215  [key=2, style=dotted];
m31_189 -> m31_190  [key=0, style=solid];
m31_189 -> m31_205  [key=2, style=dotted];
m31_189 -> m31_216  [key=2, style=dotted];
m31_193 -> m31_194  [key=0, style=solid];
m31_193 -> m31_41  [key=2, style=dotted];
m31_196 -> m31_197  [key=0, style=solid];
m31_196 -> m31_104  [key=2, style=dotted];
m31_181 -> m31_172  [key=0, style=solid];
m31_181 -> m31_213  [key=2, style=dotted];
m31_184 -> m31_172  [key=0, style=solid];
m31_184 -> m31_213  [key=2, style=dotted];
m31_194 -> m31_187  [key=0, style=solid];
m31_194 -> m31_213  [key=2, style=dotted];
m31_197 -> m31_187  [key=0, style=solid];
m31_197 -> m31_213  [key=2, style=dotted];
m31_199 -> m31_200  [key=0, style=solid];
m31_178 -> m31_179  [key=0, style=solid];
m31_178 -> m31_182  [key=0, style=solid];
m31_178 -> m31_185  [key=0, style=solid];
m31_185 -> m31_200  [key=0, style=solid];
m31_185 -> m31_210  [key=2, style=dotted];
m31_185 -> m31_206  [key=2, style=dotted];
m31_174 -> m31_175  [key=0, style=solid];
m31_174 -> m31_177  [key=0, style=solid];
m31_174 -> m31_204  [key=2, style=dotted];
m31_177 -> m31_178  [key=0, style=solid];
m31_177 -> m31_211  [key=2, style=dotted];
m31_177 -> m31_180  [color=darkseagreen4, key=1, label=option, style=dashed];
m31_177 -> m31_183  [color=darkseagreen4, key=1, label=option, style=dashed];
m31_176 -> m31_200  [key=0, style=solid];
m31_176 -> m31_210  [key=2, style=dotted];
m31_179 -> m31_180  [key=0, style=solid];
m31_182 -> m31_183  [key=0, style=solid];
m31_191 -> m31_192  [key=0, style=solid];
m31_191 -> m31_195  [key=0, style=solid];
m31_191 -> m31_198  [key=0, style=solid];
m31_198 -> m31_200  [key=0, style=solid];
m31_198 -> m31_210  [key=2, style=dotted];
m31_198 -> m31_206  [key=2, style=dotted];
m31_190 -> m31_200  [key=0, style=solid];
m31_190 -> m31_210  [key=2, style=dotted];
m31_192 -> m31_193  [key=0, style=solid];
m31_195 -> m31_196  [key=0, style=solid];
m31_200 -> m31_168  [color=blue, key=0, style=bold];
m31_122 -> m31_123  [key=0, style=solid];
m31_122 -> m31_121  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopMarketOrder", style=bold];
m31_123 -> m31_124  [key=0, style=solid];
m31_123 -> m31_121  [key=2, style=dotted];
m31_124 -> m31_122  [color=blue, key=0, style=bold];
m31_338 -> m31_342  [key=0, style=solid];
m31_338 -> m31_346  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_338 -> m31_348  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_338 -> m31_352  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_338 -> m31_355  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_338 -> m31_317  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
m31_338 -> m31_339  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
m31_338 -> m31_54  [color=darkorchid, key=3, label="method methodReturn decimal CalculateOrderQuantity", style=bold];
m31_342 -> m31_343  [key=0, style=solid];
m31_342 -> m31_347  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_349  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_352  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_363  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_364  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_370  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_371  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_372  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_374  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_377  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_342 -> m31_378  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_346 -> m31_347  [key=0, style=solid];
m31_346 -> m31_348  [key=0, style=solid];
m31_348 -> m31_349  [key=0, style=solid];
m31_348 -> m31_350  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m31_348 -> m31_351  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m31_352 -> m31_353  [key=0, style=solid];
m31_352 -> m31_381  [key=2, style=dotted];
m31_352 -> m31_382  [key=2, style=dotted];
m31_352 -> m31_362  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m31_352 -> m31_373  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m31_355 -> m31_356  [key=0, style=solid];
m31_355 -> m31_383  [key=2, style=dotted];
m31_355 -> m31_376  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m31_343 -> m31_344  [key=0, style=solid];
m31_347 -> m31_380  [key=0, style=solid];
m31_349 -> m31_350  [key=0, style=solid];
m31_349 -> m31_351  [color=darkseagreen4, key=1, label=currentHoldingsValue, style=dashed];
m31_363 -> m31_364  [key=0, style=solid];
m31_363 -> m31_365  [key=0, style=solid];
m31_364 -> m31_365  [key=0, style=solid];
m31_364 -> m31_364  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_364 -> m31_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_364 -> m31_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_364 -> m31_370  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_364 -> m31_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_364 -> m31_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_364 -> m31_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_364 -> m31_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_370 -> m31_371  [key=0, style=solid];
m31_370 -> m31_381  [key=2, style=dotted];
m31_370 -> m31_372  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_370 -> m31_374  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_371 -> m31_372  [key=0, style=solid];
m31_371 -> m31_382  [key=2, style=dotted];
m31_371 -> m31_376  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m31_372 -> m31_373  [key=0, style=solid];
m31_372 -> m31_384  [key=2, style=dotted];
m31_372 -> m31_376  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m31_374 -> m31_375  [key=0, style=solid];
m31_374 -> m31_385  [key=2, style=dotted];
m31_374 -> m31_376  [color=darkseagreen4, key=1, label=marginRequired, style=dashed];
m31_377 -> m31_378  [key=0, style=solid];
m31_377 -> m31_379  [key=0, style=solid];
m31_378 -> m31_379  [key=0, style=solid];
m31_378 -> m31_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_344 -> m31_345  [key=0, style=solid];
m31_344 -> m31_346  [key=0, style=solid];
m31_345 -> m31_380  [key=0, style=solid];
m31_350 -> m31_351  [key=0, style=solid];
m31_350 -> m31_12  [key=2, style=dotted];
m31_350 -> m31_362  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m31_350 -> m31_376  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m31_351 -> m31_352  [key=0, style=solid];
m31_351 -> m31_355  [color=darkseagreen4, key=1, label=direction, style=dashed];
m31_351 -> m31_379  [color=darkseagreen4, key=1, label=direction, style=dashed];
m31_362 -> m31_363  [key=0, style=solid];
m31_362 -> m31_364  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_362 -> m31_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_362 -> m31_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_362 -> m31_370  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_362 -> m31_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_362 -> m31_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_362 -> m31_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_362 -> m31_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_362 -> m31_361  [color=darkorchid, key=3, label="Local variable decimal orderQuantity", style=bold];
m31_376 -> m31_365  [key=0, style=solid];
m31_376 -> m31_377  [key=0, style=solid];
m31_379 -> m31_380  [key=0, style=solid];
m31_353 -> m31_354  [key=0, style=solid];
m31_353 -> m31_355  [key=0, style=solid];
m31_373 -> m31_374  [key=0, style=solid];
m31_354 -> m31_380  [key=0, style=solid];
m31_356 -> m31_357  [key=0, style=solid];
m31_356 -> m31_358  [key=0, style=solid];
m31_357 -> m31_380  [key=0, style=solid];
m31_358 -> m31_359  [key=0, style=solid];
m31_359 -> m31_360  [key=0, style=solid];
m31_360 -> m31_361  [key=0, style=solid];
m31_361 -> m31_362  [key=0, style=solid];
m31_361 -> m31_367  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m31_361 -> m31_368  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m31_361 -> m31_54  [color=darkorchid, key=3, label="Local variable int feeToPriceRatio", style=bold];
m31_367 -> m31_368  [key=0, style=solid];
m31_367 -> m31_369  [key=0, style=solid];
m31_368 -> m31_370  [key=0, style=solid];
m31_368 -> m31_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_368 -> m31_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_368 -> m31_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_368 -> m31_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_368 -> m31_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_369 -> m31_370  [key=0, style=solid];
m31_369 -> m31_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_369 -> m31_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_369 -> m31_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_369 -> m31_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_369 -> m31_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_365 -> m31_366  [key=0, style=solid];
m31_365 -> m31_375  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m31_365 -> m31_54  [color=darkorchid, key=3, label="Local variable int iterations", style=bold];
m31_366 -> m31_367  [key=0, style=solid];
m31_366 -> m31_370  [key=0, style=solid];
m31_375 -> m31_376  [key=0, style=solid];
m31_375 -> m31_375  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m31_380 -> m31_338  [color=blue, key=0, style=bold];
m31_314 -> m31_315  [key=0, style=solid];
m31_315 -> m31_316  [key=0, style=solid];
m31_315 -> m31_317  [key=2, style=dotted];
m31_316 -> m31_314  [color=blue, key=0, style=bold];
m31_90 -> m31_91  [key=0, style=solid];
m31_90 -> m31_93  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnCloseOrder", style=bold];
m31_91 -> m31_92  [key=0, style=solid];
m31_91 -> m31_93  [key=2, style=dotted];
m31_92 -> m31_90  [color=blue, key=0, style=bold];
m31_321 -> m31_322  [key=0, style=solid];
m31_322 -> m31_323  [key=0, style=solid];
m31_322 -> m31_317  [key=2, style=dotted];
m31_323 -> m31_321  [color=blue, key=0, style=bold];
m31_94 -> m31_95  [key=0, style=solid];
m31_94 -> m31_93  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnCloseOrder", style=bold];
m31_95 -> m31_96  [key=0, style=solid];
m31_95 -> m31_93  [key=2, style=dotted];
m31_96 -> m31_94  [color=blue, key=0, style=bold];
m31_162 -> m31_166  [key=0, style=solid];
m31_162 -> m31_159  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Option.OptionStrategy strategy", style=bold];
m31_162 -> m31_163  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Option.OptionStrategy strategy", style=bold];
m31_162 -> m31_168  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Order", style=bold];
m31_166 -> m31_167  [key=0, style=solid];
m31_166 -> m31_168  [key=2, style=dotted];
m31_167 -> m31_162  [color=blue, key=0, style=bold];
m31_65 -> m31_83  [key=0, style=solid];
m31_65 -> m31_84  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_65 -> m31_77  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_65 -> m31_80  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_65 -> m31_35  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_83 -> m31_84  [key=0, style=solid];
m31_84 -> m31_85  [key=0, style=solid];
m31_84 -> m31_68  [key=2, style=dotted];
m31_84 -> m31_87  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_84 -> m31_88  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_85 -> m31_86  [key=0, style=solid];
m31_85 -> m31_70  [key=2, style=dotted];
m31_85 -> m31_87  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_87 -> m31_89  [key=0, style=solid];
m31_87 -> m31_71  [key=2, style=dotted];
m31_88 -> m31_89  [key=0, style=solid];
m31_88 -> m31_72  [key=2, style=dotted];
m31_86 -> m31_87  [key=0, style=solid];
m31_86 -> m31_88  [key=0, style=solid];
m31_89 -> m31_65  [color=blue, key=0, style=bold];
m31_307 -> m31_308  [key=0, style=solid];
m31_74 -> m31_75  [key=0, style=solid];
m31_75 -> m31_76  [key=0, style=solid];
m31_76 -> m31_74  [color=blue, key=0, style=bold];
m31_218 -> m31_219  [key=0, style=solid];
m31_218 -> m31_218  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m31_217 -> m31_218  [key=0, style=solid];
m31_219 -> m31_217  [color=blue, key=0, style=bold];
m31_308 -> m31_309  [key=0, style=solid];
m31_309 -> m31_307  [color=blue, key=0, style=bold];
m31_317 -> m31_324  [key=0, style=solid];
m31_317 -> m31_325  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_317 -> m31_326  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_317 -> m31_328  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_317 -> m31_332  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_317 -> m31_333  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_317 -> m31_334  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_317 -> m31_336  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_317 -> m31_314  [color=darkorchid, key=3, label="Parameter variable bool liquidateExistingHoldings", style=bold];
m31_317 -> m31_318  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_317 -> m31_321  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_324 -> m31_325  [key=0, style=solid];
m31_325 -> m31_326  [key=0, style=solid];
m31_325 -> m31_328  [key=0, style=solid];
m31_325 -> m31_275  [key=2, style=dotted];
m31_326 -> m31_327  [key=0, style=solid];
m31_326 -> m31_205  [key=2, style=dotted];
m31_326 -> m31_226  [key=2, style=dotted];
m31_328 -> m31_329  [key=0, style=solid];
m31_328 -> m31_334  [key=0, style=solid];
m31_332 -> m31_333  [key=0, style=solid];
m31_332 -> m31_329  [key=0, style=solid];
m31_333 -> m31_329  [key=0, style=solid];
m31_333 -> m31_38  [key=2, style=dotted];
m31_334 -> m31_335  [key=0, style=solid];
m31_334 -> m31_338  [key=2, style=dotted];
m31_334 -> m31_336  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_336 -> m31_337  [key=0, style=solid];
m31_336 -> m31_35  [key=2, style=dotted];
m31_327 -> m31_337  [key=0, style=solid];
m31_329 -> m31_330  [key=0, style=solid];
m31_329 -> m31_334  [key=0, style=solid];
m31_330 -> m31_331  [key=0, style=solid];
m31_330 -> m31_330  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m31_330 -> m31_332  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m31_330 -> m31_333  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m31_331 -> m31_332  [key=0, style=solid];
m31_331 -> m31_331  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m31_331 -> m31_333  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m31_335 -> m31_336  [key=0, style=solid];
m31_335 -> m31_337  [key=0, style=solid];
m31_335 -> m31_12  [key=2, style=dotted];
m31_337 -> m31_317  [color=blue, key=0, style=bold];
m31_108 -> m31_109  [key=0, style=solid];
m31_108 -> m31_107  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket LimitOrder", style=bold];
m31_109 -> m31_110  [key=0, style=solid];
m31_109 -> m31_107  [key=2, style=dotted];
m31_110 -> m31_108  [color=blue, key=0, style=bold];
m31_392 -> m31_393  [key=0, style=solid];
m31_392 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m31_393 -> m31_394  [key=0, style=solid];
m31_393 -> m31_4  [key=2, style=dotted];
m31_394 -> m31_392  [color=blue, key=0, style=bold];
m31_38 -> m31_39  [key=0, style=solid];
m31_38 -> m31_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m31_38 -> m31_330  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_38 -> m31_386  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m31_38 -> m31_336  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
m31_38 -> m31_317  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_39 -> m31_40  [key=0, style=solid];
m31_39 -> m31_35  [key=2, style=dotted];
m31_40 -> m31_38  [color=blue, key=0, style=bold];
m31_107 -> m31_111  [key=0, style=solid];
m31_107 -> m31_112  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_107 -> m31_104  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_107 -> m31_108  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_111 -> m31_112  [key=0, style=solid];
m31_112 -> m31_113  [key=0, style=solid];
m31_112 -> m31_68  [key=2, style=dotted];
m31_112 -> m31_115  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_112 -> m31_116  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_113 -> m31_114  [key=0, style=solid];
m31_113 -> m31_70  [key=2, style=dotted];
m31_113 -> m31_115  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_115 -> m31_117  [key=0, style=solid];
m31_115 -> m31_71  [key=2, style=dotted];
m31_116 -> m31_117  [key=0, style=solid];
m31_116 -> m31_72  [key=2, style=dotted];
m31_114 -> m31_115  [key=0, style=solid];
m31_114 -> m31_116  [key=0, style=solid];
m31_117 -> m31_107  [color=blue, key=0, style=bold];
m31_132 -> m31_133  [key=0, style=solid];
m31_132 -> m31_135  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopLimitOrder", style=bold];
m31_133 -> m31_134  [key=0, style=solid];
m31_133 -> m31_135  [key=2, style=dotted];
m31_134 -> m31_132  [color=blue, key=0, style=bold];
m31_225 -> m31_227  [key=0, style=solid];
m31_225 -> m31_228  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_230  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_233  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_235  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_236  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_237  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_238  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_240  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_244  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_246  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_251  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_253  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_255  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_261  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_263  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_264  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_267  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_268  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_272  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_273  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_225 -> m31_70  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m31_227 -> m31_228  [key=0, style=solid];
m31_228 -> m31_229  [key=0, style=solid];
m31_228 -> m31_230  [key=0, style=solid];
m31_228 -> m31_275  [key=2, style=dotted];
m31_228 -> m31_232  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_234  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_235  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_237  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_242  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_245  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_247  [color=red, key=1, label=security, style=dashed];
m31_228 -> m31_249  [color=red, key=1, label=security, style=dashed];
m31_228 -> m31_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_260  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_262  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_264  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_269  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_228 -> m31_271  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_229 -> m31_274  [key=0, style=solid];
m31_229 -> m31_205  [key=2, style=dotted];
m31_229 -> m31_276  [key=2, style=dotted];
m31_230 -> m31_231  [key=0, style=solid];
m31_230 -> m31_232  [key=0, style=solid];
m31_230 -> m31_12  [key=2, style=dotted];
m31_231 -> m31_274  [key=0, style=solid];
m31_231 -> m31_277  [key=2, style=dotted];
m31_233 -> m31_274  [key=0, style=solid];
m31_233 -> m31_205  [key=2, style=dotted];
m31_233 -> m31_276  [key=2, style=dotted];
m31_235 -> m31_236  [key=0, style=solid];
m31_235 -> m31_237  [key=0, style=solid];
m31_236 -> m31_274  [key=0, style=solid];
m31_236 -> m31_276  [key=2, style=dotted];
m31_237 -> m31_238  [key=0, style=solid];
m31_237 -> m31_239  [key=0, style=solid];
m31_238 -> m31_274  [key=0, style=solid];
m31_238 -> m31_276  [key=2, style=dotted];
m31_240 -> m31_274  [key=0, style=solid];
m31_240 -> m31_205  [key=2, style=dotted];
m31_240 -> m31_276  [key=2, style=dotted];
m31_244 -> m31_274  [key=0, style=solid];
m31_244 -> m31_276  [key=2, style=dotted];
m31_246 -> m31_274  [key=0, style=solid];
m31_246 -> m31_276  [key=2, style=dotted];
m31_251 -> m31_274  [key=0, style=solid];
m31_251 -> m31_276  [key=2, style=dotted];
m31_253 -> m31_274  [key=0, style=solid];
m31_253 -> m31_276  [key=2, style=dotted];
m31_255 -> m31_274  [key=0, style=solid];
m31_255 -> m31_276  [key=2, style=dotted];
m31_258 -> m31_274  [key=0, style=solid];
m31_258 -> m31_216  [key=2, style=dotted];
m31_258 -> m31_276  [key=2, style=dotted];
m31_259 -> m31_260  [key=0, style=solid];
m31_259 -> m31_268  [key=0, style=solid];
m31_261 -> m31_274  [key=0, style=solid];
m31_261 -> m31_205  [key=2, style=dotted];
m31_261 -> m31_276  [key=2, style=dotted];
m31_263 -> m31_274  [key=0, style=solid];
m31_263 -> m31_205  [key=2, style=dotted];
m31_263 -> m31_276  [key=2, style=dotted];
m31_264 -> m31_265  [key=0, style=solid];
m31_264 -> m31_266  [key=0, style=solid];
m31_265 -> m31_274  [key=0, style=solid];
m31_265 -> m31_205  [key=2, style=dotted];
m31_265 -> m31_276  [key=2, style=dotted];
m31_266 -> m31_267  [key=0, style=solid];
m31_266 -> m31_268  [key=0, style=solid];
m31_267 -> m31_268  [key=0, style=solid];
m31_267 -> m31_277  [key=2, style=dotted];
m31_268 -> m31_269  [key=0, style=solid];
m31_268 -> m31_273  [key=0, style=solid];
m31_272 -> m31_274  [key=0, style=solid];
m31_272 -> m31_276  [key=2, style=dotted];
m31_273 -> m31_274  [key=0, style=solid];
m31_273 -> m31_281  [key=2, style=dotted];
m31_232 -> m31_233  [key=0, style=solid];
m31_232 -> m31_234  [key=0, style=solid];
m31_234 -> m31_235  [key=0, style=solid];
m31_234 -> m31_239  [color=darkseagreen4, key=1, label=price, style=dashed];
m31_242 -> m31_243  [key=0, style=solid];
m31_242 -> m31_244  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m31_242 -> m31_246  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m31_242 -> m31_251  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m31_242 -> m31_253  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m31_245 -> m31_246  [key=0, style=solid];
m31_245 -> m31_247  [color=red, key=0, style=solid];
m31_247 -> m31_248  [color=red, key=0, style=solid];
m31_247 -> m31_254  [color=red, key=0, style=solid];
m31_249 -> m31_250  [color=red, key=0, style=solid];
m31_249 -> m31_251  [color=red, key=1, label=baseCurrency, style=dashed];
m31_249 -> m31_253  [color=red, key=1, label=baseCurrency, style=dashed];
m31_254 -> m31_255  [key=0, style=solid];
m31_254 -> m31_256  [key=0, style=solid];
m31_260 -> m31_261  [key=0, style=solid];
m31_260 -> m31_262  [key=0, style=solid];
m31_262 -> m31_263  [key=0, style=solid];
m31_262 -> m31_264  [key=0, style=solid];
m31_269 -> m31_270  [key=0, style=solid];
m31_269 -> m31_279  [key=2, style=dotted];
m31_271 -> m31_272  [key=0, style=solid];
m31_271 -> m31_273  [key=0, style=solid];
m31_239 -> m31_240  [key=0, style=solid];
m31_239 -> m31_241  [key=0, style=solid];
m31_241 -> m31_242  [key=0, style=solid];
m31_243 -> m31_244  [key=0, style=solid];
m31_243 -> m31_245  [key=0, style=solid];
m31_243 -> m31_278  [key=2, style=dotted];
m31_248 -> m31_249  [color=red, key=0, style=solid];
m31_250 -> m31_251  [key=0, style=solid];
m31_250 -> m31_252  [key=0, style=solid];
m31_250 -> m31_278  [key=2, style=dotted];
m31_252 -> m31_253  [key=0, style=solid];
m31_252 -> m31_254  [key=0, style=solid];
m31_256 -> m31_257  [key=0, style=solid];
m31_256 -> m31_259  [key=0, style=solid];
m31_257 -> m31_258  [key=0, style=solid];
m31_270 -> m31_271  [key=0, style=solid];
m31_270 -> m31_280  [key=2, style=dotted];
m31_274 -> m31_225  [color=blue, key=0, style=bold];
m31_395 -> m31_396  [key=0, style=solid];
m31_396 -> m31_397  [key=0, style=solid];
m31_396 -> m31_400  [key=2, style=dotted];
m31_396 -> m31_401  [key=2, style=dotted];
m31_396 -> m31_398  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m31_397 -> m31_398  [key=0, style=solid];
m31_397 -> m31_402  [key=2, style=dotted];
m31_398 -> m31_399  [key=0, style=solid];
m31_398 -> m31_403  [key=2, style=dotted];
m31_399 -> m31_395  [color=blue, key=0, style=bold];
m31_29 -> m31_30  [key=0, style=solid];
m31_29 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m31_30 -> m31_31  [key=0, style=solid];
m31_30 -> m31_4  [key=2, style=dotted];
m31_31 -> m31_29  [color=blue, key=0, style=bold];
m31_32 -> m31_33  [key=0, style=solid];
m31_32 -> m31_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_35  [key=2, style=dotted];
m31_34 -> m31_32  [color=blue, key=0, style=bold];
m31_77 -> m31_78  [key=0, style=solid];
m31_77 -> m31_65  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnOpenOrder", style=bold];
m31_78 -> m31_79  [key=0, style=solid];
m31_78 -> m31_65  [key=2, style=dotted];
m31_79 -> m31_77  [color=blue, key=0, style=bold];
m31_386 -> m31_387  [key=0, style=solid];
m31_386 -> m31_38  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m31_387 -> m31_388  [key=0, style=solid];
m31_387 -> m31_38  [key=2, style=dotted];
m31_388 -> m31_386  [color=blue, key=0, style=bold];
m31_70 -> m31_220  [key=0, style=solid];
m31_70 -> m31_54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m31_70 -> m31_84  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m31_70 -> m31_98  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m31_70 -> m31_112  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m31_70 -> m31_126  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m31_70 -> m31_140  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m31_70 -> m31_148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m31_220 -> m31_221  [key=0, style=solid];
m31_220 -> m31_225  [key=2, style=dotted];
m31_220 -> m31_222  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_220 -> m31_223  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_221 -> m31_222  [key=0, style=solid];
m31_221 -> m31_223  [key=0, style=solid];
m31_222 -> m31_223  [key=0, style=solid];
m31_222 -> m31_226  [key=2, style=dotted];
m31_223 -> m31_224  [key=0, style=solid];
m31_224 -> m31_70  [color=blue, key=0, style=bold];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_8  [key=2, style=dotted];
m31_21 -> m31_4  [key=2, style=dotted];
m31_22 -> m31_20  [color=blue, key=0, style=bold];
m31_118 -> m31_119  [key=0, style=solid];
m31_118 -> m31_121  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopMarketOrder", style=bold];
m31_119 -> m31_120  [key=0, style=solid];
m31_119 -> m31_121  [key=2, style=dotted];
m31_120 -> m31_118  [color=blue, key=0, style=bold];
m31_159 -> m31_160  [key=0, style=solid];
m31_159 -> m31_162  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Buy", style=bold];
m31_160 -> m31_161  [key=0, style=solid];
m31_160 -> m31_3  [key=2, style=dotted];
m31_160 -> m31_162  [key=2, style=dotted];
m31_161 -> m31_159  [color=blue, key=0, style=bold];
m31_44 -> m31_45  [key=0, style=solid];
m31_44 -> m31_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m31_45 -> m31_46  [key=0, style=solid];
m31_45 -> m31_35  [key=2, style=dotted];
m31_46 -> m31_44  [color=blue, key=0, style=bold];
m31_389 -> m31_390  [key=0, style=solid];
m31_389 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m31_390 -> m31_391  [key=0, style=solid];
m31_390 -> m31_4  [key=2, style=dotted];
m31_391 -> m31_389  [color=blue, key=0, style=bold];
m31_80 -> m31_81  [key=0, style=solid];
m31_80 -> m31_65  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnOpenOrder", style=bold];
m31_81 -> m31_82  [key=0, style=solid];
m31_81 -> m31_65  [key=2, style=dotted];
m31_82 -> m31_80  [color=blue, key=0, style=bold];
m31_135 -> m31_139  [key=0, style=solid];
m31_135 -> m31_140  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_135 -> m31_132  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_135 -> m31_136  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_139 -> m31_140  [key=0, style=solid];
m31_140 -> m31_141  [key=0, style=solid];
m31_140 -> m31_68  [key=2, style=dotted];
m31_140 -> m31_143  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_140 -> m31_144  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_141 -> m31_142  [key=0, style=solid];
m31_141 -> m31_70  [key=2, style=dotted];
m31_141 -> m31_143  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_143 -> m31_145  [key=0, style=solid];
m31_143 -> m31_71  [key=2, style=dotted];
m31_144 -> m31_145  [key=0, style=solid];
m31_144 -> m31_72  [key=2, style=dotted];
m31_142 -> m31_143  [key=0, style=solid];
m31_142 -> m31_144  [key=0, style=solid];
m31_145 -> m31_135  [color=blue, key=0, style=bold];
m31_104 -> m31_105  [key=0, style=solid];
m31_104 -> m31_107  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket LimitOrder", style=bold];
m31_104 -> m31_170  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_105 -> m31_106  [key=0, style=solid];
m31_105 -> m31_107  [key=2, style=dotted];
m31_106 -> m31_104  [color=blue, key=0, style=bold];
m31_9 -> m31_10  [key=0, style=solid];
m31_9 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m31_10 -> m31_11  [key=0, style=solid];
m31_10 -> m31_12  [key=2, style=dotted];
m31_10 -> m31_4  [key=2, style=dotted];
m31_11 -> m31_9  [color=blue, key=0, style=bold];
m31_68 -> m31_404  [key=0, style=solid];
m31_68 -> m31_54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m31_68 -> m31_84  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m31_68 -> m31_98  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m31_68 -> m31_112  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m31_68 -> m31_126  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m31_68 -> m31_140  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m31_68 -> m31_148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m31_68 -> m31_47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m31_68 -> m31_83  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m31_68 -> m31_97  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m31_68 -> m31_111  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m31_68 -> m31_125  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m31_68 -> m31_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m31_68 -> m31_147  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m31_68 -> m31_35  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_68 -> m31_65  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_68 -> m31_93  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_68 -> m31_107  [color=darkorchid, key=3, label="Parameter variable decimal limitPrice", style=bold];
m31_68 -> m31_121  [color=darkorchid, key=3, label="Parameter variable decimal stopPrice", style=bold];
m31_68 -> m31_135  [color=darkorchid, key=3, label="Parameter variable decimal stopPrice", style=bold];
m31_68 -> m31_146  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_404 -> m31_405  [key=0, style=solid];
m31_404 -> m31_406  [key=2, style=dotted];
m31_405 -> m31_68  [color=blue, key=0, style=bold];
m31_146 -> m31_147  [key=0, style=solid];
m31_146 -> m31_148  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_146 -> m31_155  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_146 -> m31_154  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket ExerciseOption", style=bold];
m31_147 -> m31_148  [key=0, style=solid];
m31_148 -> m31_149  [key=0, style=solid];
m31_148 -> m31_68  [key=2, style=dotted];
m31_148 -> m31_150  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_148 -> m31_151  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_148 -> m31_153  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_148 -> m31_154  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_155 -> m31_156  [key=0, style=solid];
m31_155 -> m31_157  [key=0, style=solid];
m31_149 -> m31_150  [key=0, style=solid];
m31_149 -> m31_151  [key=0, style=solid];
m31_150 -> m31_158  [key=0, style=solid];
m31_150 -> m31_69  [key=2, style=dotted];
m31_151 -> m31_152  [key=0, style=solid];
m31_151 -> m31_70  [key=2, style=dotted];
m31_151 -> m31_153  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m31_153 -> m31_158  [key=0, style=solid];
m31_153 -> m31_71  [key=2, style=dotted];
m31_154 -> m31_155  [key=0, style=solid];
m31_154 -> m31_72  [key=2, style=dotted];
m31_154 -> m31_156  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_154 -> m31_157  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_152 -> m31_153  [key=0, style=solid];
m31_152 -> m31_154  [key=0, style=solid];
m31_156 -> m31_157  [key=0, style=solid];
m31_156 -> m31_73  [key=2, style=dotted];
m31_157 -> m31_158  [key=0, style=solid];
m31_158 -> m31_146  [color=blue, key=0, style=bold];
m31_69 -> m31_70  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m31_310 -> m31_311  [key=0, style=solid];
m31_310 -> m31_312  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_311 -> m31_312  [key=0, style=solid];
m31_311 -> m31_313  [key=0, style=solid];
m31_312 -> m31_313  [key=0, style=solid];
m31_313 -> m31_310  [color=blue, key=0, style=bold];
m31_4 -> m31_36  [key=0, style=solid];
m31_4 -> m31_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_13  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_17  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_20  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_26  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_29  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m31_4 -> m31_285  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m31_4 -> m31_389  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m31_4 -> m31_392  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m31_4 -> m31_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m31_36 -> m31_37  [key=0, style=solid];
m31_36 -> m31_35  [key=2, style=dotted];
m31_37 -> m31_4  [color=blue, key=0, style=bold];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m31_41 -> m31_170  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_42 -> m31_43  [key=0, style=solid];
m31_42 -> m31_35  [key=2, style=dotted];
m31_43 -> m31_41  [color=blue, key=0, style=bold];
m31_93 -> m31_97  [key=0, style=solid];
m31_93 -> m31_98  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_93 -> m31_90  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_93 -> m31_94  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_97 -> m31_98  [key=0, style=solid];
m31_98 -> m31_99  [key=0, style=solid];
m31_98 -> m31_68  [key=2, style=dotted];
m31_98 -> m31_101  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_98 -> m31_102  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_99 -> m31_100  [key=0, style=solid];
m31_99 -> m31_70  [key=2, style=dotted];
m31_99 -> m31_101  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_101 -> m31_103  [key=0, style=solid];
m31_101 -> m31_71  [key=2, style=dotted];
m31_102 -> m31_103  [key=0, style=solid];
m31_102 -> m31_72  [key=2, style=dotted];
m31_100 -> m31_101  [key=0, style=solid];
m31_100 -> m31_102  [key=0, style=solid];
m31_103 -> m31_93  [color=blue, key=0, style=bold];
m31_339 -> m31_340  [key=0, style=solid];
m31_339 -> m31_338  [color=darkorchid, key=3, label="method methodReturn decimal CalculateOrderQuantity", style=bold];
m31_340 -> m31_341  [key=0, style=solid];
m31_340 -> m31_338  [key=2, style=dotted];
m31_341 -> m31_339  [color=blue, key=0, style=bold];
m31_35 -> m31_47  [key=0, style=solid];
m31_35 -> m31_49  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_35 -> m31_54  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_35 -> m31_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_35 -> m31_32  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m31_35 -> m31_4  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m31_35 -> m31_38  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_35 -> m31_41  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_35 -> m31_44  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_35 -> m31_317  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m31_35 -> m31_334  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m31_35 -> m31_336  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
m31_35 -> m31_60  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m31_47 -> m31_48  [key=0, style=solid];
m31_47 -> m31_49  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_47 -> m31_50  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_47 -> m31_54  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_49 -> m31_50  [key=0, style=solid];
m31_49 -> m31_65  [key=2, style=dotted];
m31_49 -> m31_51  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m31_49 -> m31_52  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m31_49 -> m31_53  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m31_54 -> m31_55  [key=0, style=solid];
m31_54 -> m31_68  [key=2, style=dotted];
m31_54 -> m31_56  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_54 -> m31_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_54 -> m31_59  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_54 -> m31_60  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_61 -> m31_62  [key=0, style=solid];
m31_61 -> m31_63  [key=0, style=solid];
m31_48 -> m31_49  [key=0, style=solid];
m31_48 -> m31_54  [key=0, style=solid];
m31_50 -> m31_51  [key=0, style=solid];
m31_50 -> m31_66  [key=2, style=dotted];
m31_50 -> m31_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_51 -> m31_52  [key=0, style=solid];
m31_51 -> m31_53  [key=0, style=solid];
m31_52 -> m31_53  [key=0, style=solid];
m31_52 -> m31_67  [key=2, style=dotted];
m31_53 -> m31_64  [key=0, style=solid];
m31_55 -> m31_56  [key=0, style=solid];
m31_55 -> m31_57  [key=0, style=solid];
m31_56 -> m31_64  [key=0, style=solid];
m31_56 -> m31_69  [key=2, style=dotted];
m31_57 -> m31_58  [key=0, style=solid];
m31_57 -> m31_70  [key=2, style=dotted];
m31_57 -> m31_59  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m31_59 -> m31_64  [key=0, style=solid];
m31_59 -> m31_71  [key=2, style=dotted];
m31_60 -> m31_61  [key=0, style=solid];
m31_60 -> m31_72  [key=2, style=dotted];
m31_60 -> m31_62  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_60 -> m31_63  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_58 -> m31_59  [key=0, style=solid];
m31_58 -> m31_60  [key=0, style=solid];
m31_62 -> m31_63  [key=0, style=solid];
m31_62 -> m31_73  [key=2, style=dotted];
m31_63 -> m31_64  [key=0, style=solid];
m31_64 -> m31_35  [color=blue, key=0, style=bold];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_16  [key=2, style=dotted];
m31_14 -> m31_4  [key=2, style=dotted];
m31_15 -> m31_13  [color=blue, key=0, style=bold];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_16  [key=2, style=dotted];
m31_24 -> m31_4  [key=2, style=dotted];
m31_25 -> m31_23  [color=blue, key=0, style=bold];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_8  [key=2, style=dotted];
m31_6 -> m31_4  [key=2, style=dotted];
m31_7 -> m31_5  [color=blue, key=0, style=bold];
m31_282 -> m31_283  [key=0, style=solid];
m31_282 -> m31_284  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_282 -> m31_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_283 -> m31_284  [key=0, style=solid];
m31_283 -> m31_201  [key=2, style=dotted];
m31_283 -> m31_300  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m31_283 -> m31_301  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m31_284 -> m31_285  [key=0, style=solid];
m31_284 -> m31_284  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_284 -> m31_286  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_296 -> m31_291  [key=0, style=solid];
m31_296 -> m31_306  [key=2, style=dotted];
m31_300 -> m31_285  [key=0, style=solid];
m31_300 -> m31_213  [key=2, style=dotted];
m31_301 -> m31_302  [key=0, style=solid];
m31_285 -> m31_286  [key=0, style=solid];
m31_285 -> m31_301  [key=0, style=solid];
m31_285 -> m31_303  [key=2, style=dotted];
m31_285 -> m31_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_285 -> m31_287  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_285 -> m31_288  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_285 -> m31_298  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_286 -> m31_287  [key=0, style=solid];
m31_286 -> m31_285  [key=0, style=solid];
m31_287 -> m31_288  [key=0, style=solid];
m31_287 -> m31_304  [key=2, style=dotted];
m31_287 -> m31_289  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_287 -> m31_291  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_288 -> m31_289  [key=0, style=solid];
m31_288 -> m31_297  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_288 -> m31_298  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_298 -> m31_299  [key=0, style=solid];
m31_298 -> m31_4  [key=2, style=dotted];
m31_298 -> m31_300  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_289 -> m31_290  [key=0, style=solid];
m31_289 -> m31_285  [key=0, style=solid];
m31_291 -> m31_292  [key=0, style=solid];
m31_291 -> m31_297  [key=0, style=solid];
m31_291 -> m31_293  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_291 -> m31_296  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_297 -> m31_298  [key=0, style=solid];
m31_297 -> m31_285  [key=0, style=solid];
m31_290 -> m31_291  [key=0, style=solid];
m31_290 -> m31_295  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m31_290 -> m31_298  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m31_290 -> m31_290  [color=darkorchid, key=3, label="Local variable decimal marketOrdersQuantity", style=bold];
m31_295 -> m31_291  [key=0, style=solid];
m31_295 -> m31_295  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m31_295 -> m31_298  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m31_292 -> m31_293  [key=0, style=solid];
m31_292 -> m31_296  [key=0, style=solid];
m31_293 -> m31_294  [key=0, style=solid];
m31_293 -> m31_305  [key=2, style=dotted];
m31_293 -> m31_295  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_294 -> m31_295  [key=0, style=solid];
m31_294 -> m31_291  [key=0, style=solid];
m31_299 -> m31_300  [key=0, style=solid];
m31_299 -> m31_285  [key=0, style=solid];
m31_302 -> m31_282  [color=blue, key=0, style=bold];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_12  [key=2, style=dotted];
m31_27 -> m31_4  [key=2, style=dotted];
m31_28 -> m31_26  [color=blue, key=0, style=bold];
m31_136 -> m31_137  [key=0, style=solid];
m31_136 -> m31_135  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopLimitOrder", style=bold];
m31_137 -> m31_138  [key=0, style=solid];
m31_137 -> m31_135  [key=2, style=dotted];
m31_138 -> m31_136  [color=blue, key=0, style=bold];
m31_407 -> m31_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_115  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_119  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_123  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_133  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_140  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_147  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_156  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_164  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_166  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_193  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_222  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_243  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_256  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_271  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_285  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_287  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_288  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_293  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_296  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_298  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_312  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_315  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_319  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_326  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_329  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_333  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_336  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_342  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_352  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_370  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_387  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_407 -> m31_404  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_408 -> m31_218  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_409 -> m31_218  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m32_11 -> m32_11  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m32_11 -> m32_81  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m32_26 -> m32_27  [key=0, style=solid];
m32_27 -> m32_26  [color=blue, key=0, style=bold];
m32_22 -> m32_23  [key=0, style=solid];
m32_23 -> m32_22  [color=blue, key=0, style=bold];
m32_32 -> m32_33  [key=0, style=solid];
m32_33 -> m32_32  [color=blue, key=0, style=bold];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_60  [key=0, style=solid];
m32_59 -> m32_61  [key=0, style=solid];
m32_59 -> m32_62  [key=2, style=dotted];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_56  [key=2, style=dotted];
m32_61 -> m32_57  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_11  [key=2, style=dotted];
m32_2 -> m32_3  [key=0, style=solid];
m32_2 -> m32_12  [key=2, style=dotted];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_13  [key=2, style=dotted];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_14  [key=2, style=dotted];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_15  [key=2, style=dotted];
m32_6 -> m32_7  [key=0, style=solid];
m32_7 -> m32_8  [key=0, style=solid];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_16  [key=2, style=dotted];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_17  [key=2, style=dotted];
m32_10 -> m32_0  [color=blue, key=0, style=bold];
m32_37 -> m32_38  [key=0, style=solid];
m32_38 -> m32_39  [key=0, style=solid];
m32_38 -> m32_40  [key=0, style=solid];
m32_39 -> m32_42  [key=0, style=solid];
m32_40 -> m32_41  [key=0, style=solid];
m32_40 -> m32_43  [key=2, style=dotted];
m32_41 -> m32_42  [key=0, style=solid];
m32_42 -> m32_37  [color=blue, key=0, style=bold];
m32_215 -> m32_216  [key=0, style=solid];
m32_216 -> m32_217  [key=0, style=solid];
m32_217 -> m32_215  [color=blue, key=0, style=bold];
m32_111 -> m32_112  [key=0, style=solid];
m32_112 -> m32_113  [key=0, style=solid];
m32_113 -> m32_111  [color=blue, key=0, style=bold];
m32_165 -> m32_196  [key=0, style=solid];
m32_165 -> m32_198  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_165 -> m32_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_196 -> m32_197  [key=0, style=solid];
m32_196 -> m32_198  [key=0, style=solid];
m32_198 -> m32_199  [key=0, style=solid];
m32_198 -> m32_190  [key=2, style=dotted];
m32_199 -> m32_200  [key=0, style=solid];
m32_197 -> m32_200  [key=0, style=solid];
m32_200 -> m32_165  [color=blue, key=0, style=bold];
m32_127 -> m32_128  [key=0, style=solid];
m32_127 -> m32_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_127 -> m32_131  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_127 -> m32_132  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m32_127 -> m32_137  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m32_127 -> m32_141  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_127 -> m32_149  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_127 -> m32_151  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_127 -> m32_124  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m32_127 -> m32_125  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m32_128 -> m32_129  [key=0, style=solid];
m32_128 -> m32_130  [key=0, style=solid];
m32_130 -> m32_131  [key=0, style=solid];
m32_130 -> m32_156  [key=2, style=dotted];
m32_130 -> m32_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_130 -> m32_137  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_130 -> m32_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_131 -> m32_132  [key=0, style=solid];
m32_131 -> m32_137  [key=0, style=solid];
m32_132 -> m32_133  [key=0, style=solid];
m32_132 -> m32_135  [key=0, style=solid];
m32_137 -> m32_138  [key=0, style=solid];
m32_137 -> m32_157  [key=2, style=dotted];
m32_137 -> m32_139  [color=darkseagreen4, key=1, label=config, style=dashed];
m32_137 -> m32_141  [color=darkseagreen4, key=1, label=config, style=dashed];
m32_137 -> m32_149  [color=darkseagreen4, key=1, label=config, style=dashed];
m32_137 -> m32_151  [color=darkseagreen4, key=1, label=config, style=dashed];
m32_137 -> m32_152  [color=darkseagreen4, key=1, label=config, style=dashed];
m32_141 -> m32_152  [key=0, style=solid];
m32_141 -> m32_158  [key=2, style=dotted];
m32_149 -> m32_152  [key=0, style=solid];
m32_149 -> m32_162  [key=2, style=dotted];
m32_151 -> m32_152  [key=0, style=solid];
m32_151 -> m32_163  [key=2, style=dotted];
m32_129 -> m32_155  [key=0, style=solid];
m32_129 -> m32_56  [key=2, style=dotted];
m32_144 -> m32_145  [key=0, style=solid];
m32_144 -> m32_159  [key=2, style=dotted];
m32_144 -> m32_146  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m32_144 -> m32_147  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m32_144 -> m32_148  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m32_144 -> m32_149  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m32_133 -> m32_134  [key=0, style=solid];
m32_135 -> m32_136  [key=0, style=solid];
m32_134 -> m32_137  [key=0, style=solid];
m32_136 -> m32_137  [key=0, style=solid];
m32_136 -> m32_141  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_136 -> m32_149  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_136 -> m32_151  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_138 -> m32_139  [key=0, style=solid];
m32_139 -> m32_140  [key=0, style=solid];
m32_139 -> m32_142  [key=0, style=solid];
m32_139 -> m32_150  [key=0, style=solid];
m32_152 -> m32_153  [key=0, style=solid];
m32_152 -> m32_155  [key=0, style=solid];
m32_152 -> m32_164  [key=2, style=dotted];
m32_140 -> m32_141  [key=0, style=solid];
m32_142 -> m32_143  [key=0, style=solid];
m32_150 -> m32_151  [key=0, style=solid];
m32_143 -> m32_144  [key=0, style=solid];
m32_145 -> m32_146  [key=0, style=solid];
m32_145 -> m32_147  [key=0, style=solid];
m32_145 -> m32_160  [key=2, style=dotted];
m32_146 -> m32_147  [key=0, style=solid];
m32_146 -> m32_161  [key=2, style=dotted];
m32_147 -> m32_148  [key=0, style=solid];
m32_147 -> m32_149  [key=0, style=solid];
m32_147 -> m32_160  [key=2, style=dotted];
m32_148 -> m32_149  [key=0, style=solid];
m32_148 -> m32_161  [key=2, style=dotted];
m32_153 -> m32_154  [key=0, style=solid];
m32_154 -> m32_155  [key=0, style=solid];
m32_154 -> m32_165  [key=2, style=dotted];
m32_155 -> m32_127  [color=blue, key=0, style=bold];
m32_81 -> m32_82  [key=0, style=solid];
m32_82 -> m32_83  [key=0, style=solid];
m32_83 -> m32_81  [color=blue, key=0, style=bold];
m32_166 -> m32_167  [key=0, style=solid];
m32_166 -> m32_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_167 -> m32_168  [key=0, style=solid];
m32_167 -> m32_169  [key=0, style=solid];
m32_169 -> m32_170  [key=0, style=solid];
m32_169 -> m32_171  [key=2, style=dotted];
m32_168 -> m32_170  [key=0, style=solid];
m32_170 -> m32_166  [color=blue, key=0, style=bold];
m32_171 -> m32_177  [key=0, style=solid];
m32_171 -> m32_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_171 -> m32_180  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m32_171 -> m32_181  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_171 -> m32_166  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m32_171 -> m32_172  [color=darkorchid, key=3, label="Parameter variable bool hasVolume", style=bold];
m32_171 -> m32_169  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m32_177 -> m32_178  [key=0, style=solid];
m32_177 -> m32_179  [key=0, style=solid];
m32_179 -> m32_180  [key=0, style=solid];
m32_179 -> m32_156  [key=2, style=dotted];
m32_179 -> m32_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_179 -> m32_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_180 -> m32_181  [key=0, style=solid];
m32_180 -> m32_184  [key=2, style=dotted];
m32_181 -> m32_182  [key=0, style=solid];
m32_181 -> m32_163  [key=2, style=dotted];
m32_178 -> m32_183  [key=0, style=solid];
m32_182 -> m32_183  [key=0, style=solid];
m32_182 -> m32_164  [key=2, style=dotted];
m32_183 -> m32_171  [color=blue, key=0, style=bold];
m32_162 -> m32_34  [color=darkorchid, key=3, label="Field variable System.DateTime _time", style=bold];
m32_28 -> m32_29  [key=0, style=solid];
m32_29 -> m32_28  [color=blue, key=0, style=bold];
m32_212 -> m32_213  [key=0, style=solid];
m32_213 -> m32_214  [key=0, style=solid];
m32_214 -> m32_212  [color=blue, key=0, style=bold];
m32_63 -> m32_64  [key=0, style=solid];
m32_64 -> m32_65  [key=0, style=solid];
m32_64 -> m32_16  [key=2, style=dotted];
m32_65 -> m32_66  [key=0, style=solid];
m32_65 -> m32_65  [color=darkseagreen4, key=1, label=start, style=dashed];
m32_66 -> m32_67  [key=0, style=solid];
m32_66 -> m32_69  [key=0, style=solid];
m32_66 -> m32_70  [key=2, style=dotted];
m32_67 -> m32_68  [key=0, style=solid];
m32_68 -> m32_69  [key=0, style=solid];
m32_68 -> m32_56  [key=2, style=dotted];
m32_69 -> m32_63  [color=blue, key=0, style=bold];
m32_172 -> m32_173  [key=0, style=solid];
m32_172 -> m32_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_173 -> m32_174  [key=0, style=solid];
m32_173 -> m32_175  [key=0, style=solid];
m32_175 -> m32_176  [key=0, style=solid];
m32_175 -> m32_171  [key=2, style=dotted];
m32_174 -> m32_176  [key=0, style=solid];
m32_176 -> m32_172  [color=blue, key=0, style=bold];
m32_43 -> m32_185  [key=0, style=solid];
m32_43 -> m32_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_43 -> m32_188  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_43 -> m32_40  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m32_185 -> m32_186  [key=0, style=solid];
m32_185 -> m32_187  [key=0, style=solid];
m32_187 -> m32_188  [key=0, style=solid];
m32_187 -> m32_190  [key=2, style=dotted];
m32_188 -> m32_189  [key=0, style=solid];
m32_186 -> m32_189  [key=0, style=solid];
m32_189 -> m32_43  [color=blue, key=0, style=bold];
m32_34 -> m32_35  [key=0, style=solid];
m32_35 -> m32_36  [key=0, style=solid];
m32_36 -> m32_34  [color=blue, key=0, style=bold];
m32_44 -> m32_45  [key=0, style=solid];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_47  [key=2, style=dotted];
m32_46 -> m32_44  [color=blue, key=0, style=bold];
m32_119 -> m32_120  [key=0, style=solid];
m32_119 -> m32_121  [color=darkseagreen4, key=1, label=int, style=dashed];
m32_120 -> m32_121  [key=0, style=solid];
m32_120 -> m32_122  [key=0, style=solid];
m32_121 -> m32_122  [key=0, style=solid];
m32_121 -> m32_123  [key=2, style=dotted];
m32_122 -> m32_119  [color=blue, key=0, style=bold];
m32_191 -> m32_192  [key=0, style=solid];
m32_191 -> m32_194  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_192 -> m32_193  [key=0, style=solid];
m32_192 -> m32_194  [key=0, style=solid];
m32_194 -> m32_195  [key=0, style=solid];
m32_194 -> m32_190  [key=2, style=dotted];
m32_193 -> m32_195  [key=0, style=solid];
m32_195 -> m32_191  [color=blue, key=0, style=bold];
m32_30 -> m32_31  [key=0, style=solid];
m32_31 -> m32_30  [color=blue, key=0, style=bold];
m32_71 -> m32_72  [key=0, style=solid];
m32_72 -> m32_73  [key=0, style=solid];
m32_72 -> m32_16  [key=2, style=dotted];
m32_73 -> m32_74  [key=0, style=solid];
m32_73 -> m32_17  [key=2, style=dotted];
m32_73 -> m32_78  [key=2, style=dotted];
m32_73 -> m32_79  [key=2, style=dotted];
m32_73 -> m32_73  [color=darkseagreen4, key=1, label=end, style=dashed];
m32_74 -> m32_75  [key=0, style=solid];
m32_74 -> m32_77  [key=0, style=solid];
m32_74 -> m32_80  [key=2, style=dotted];
m32_75 -> m32_76  [key=0, style=solid];
m32_76 -> m32_77  [key=0, style=solid];
m32_76 -> m32_56  [key=2, style=dotted];
m32_77 -> m32_71  [color=blue, key=0, style=bold];
m32_114 -> m32_115  [key=0, style=solid];
m32_114 -> m32_116  [color=darkseagreen4, key=1, label=bool, style=dashed];
m32_114 -> m32_117  [color=darkseagreen4, key=1, label=bool, style=dashed];
m32_115 -> m32_116  [key=0, style=solid];
m32_115 -> m32_118  [key=0, style=solid];
m32_116 -> m32_117  [key=0, style=solid];
m32_117 -> m32_118  [key=0, style=solid];
m32_117 -> m32_15  [key=2, style=dotted];
m32_118 -> m32_114  [color=blue, key=0, style=bold];
m32_70 -> m32_84  [key=0, style=solid];
m32_70 -> m32_87  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_70 -> m32_89  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_70 -> m32_64  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m32_84 -> m32_85  [key=0, style=solid];
m32_84 -> m32_86  [key=0, style=solid];
m32_84 -> m32_16  [key=2, style=dotted];
m32_87 -> m32_88  [key=0, style=solid];
m32_87 -> m32_89  [key=0, style=solid];
m32_89 -> m32_90  [key=0, style=solid];
m32_89 -> m32_95  [key=2, style=dotted];
m32_89 -> m32_96  [key=2, style=dotted];
m32_89 -> m32_89  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_89 -> m32_91  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_85 -> m32_93  [key=0, style=solid];
m32_85 -> m32_56  [key=2, style=dotted];
m32_86 -> m32_87  [key=0, style=solid];
m32_86 -> m32_89  [key=0, style=solid];
m32_86 -> m32_94  [key=2, style=dotted];
m32_88 -> m32_93  [key=0, style=solid];
m32_88 -> m32_56  [key=2, style=dotted];
m32_90 -> m32_91  [key=0, style=solid];
m32_90 -> m32_92  [key=0, style=solid];
m32_91 -> m32_93  [key=0, style=solid];
m32_92 -> m32_93  [key=0, style=solid];
m32_92 -> m32_56  [key=2, style=dotted];
m32_93 -> m32_70  [color=blue, key=0, style=bold];
m32_48 -> m32_49  [key=0, style=solid];
m32_49 -> m32_50  [key=0, style=solid];
m32_49 -> m32_47  [key=2, style=dotted];
m32_50 -> m32_48  [color=blue, key=0, style=bold];
m32_80 -> m32_97  [key=0, style=solid];
m32_80 -> m32_100  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_80 -> m32_102  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_80 -> m32_72  [color=darkorchid, key=3, label="Parameter variable System.DateTime end", style=bold];
m32_97 -> m32_98  [key=0, style=solid];
m32_97 -> m32_99  [key=0, style=solid];
m32_97 -> m32_17  [key=2, style=dotted];
m32_100 -> m32_101  [key=0, style=solid];
m32_100 -> m32_102  [key=0, style=solid];
m32_102 -> m32_103  [key=0, style=solid];
m32_102 -> m32_95  [key=2, style=dotted];
m32_102 -> m32_96  [key=2, style=dotted];
m32_102 -> m32_17  [key=2, style=dotted];
m32_102 -> m32_107  [key=2, style=dotted];
m32_102 -> m32_102  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_102 -> m32_104  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_98 -> m32_99  [key=0, style=solid];
m32_98 -> m32_17  [key=2, style=dotted];
m32_98 -> m32_100  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_98 -> m32_102  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_99 -> m32_100  [key=0, style=solid];
m32_99 -> m32_102  [key=0, style=solid];
m32_99 -> m32_94  [key=2, style=dotted];
m32_101 -> m32_106  [key=0, style=solid];
m32_101 -> m32_56  [key=2, style=dotted];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_105  [key=0, style=solid];
m32_104 -> m32_106  [key=0, style=solid];
m32_105 -> m32_106  [key=0, style=solid];
m32_105 -> m32_56  [key=2, style=dotted];
m32_106 -> m32_80  [color=blue, key=0, style=bold];
m32_18 -> m32_19  [key=0, style=solid];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_21  [key=2, style=dotted];
m32_20 -> m32_18  [color=blue, key=0, style=bold];
m32_201 -> m32_202  [key=0, style=solid];
m32_202 -> m32_203  [key=0, style=solid];
m32_202 -> m32_205  [color=darkseagreen4, key=1, label=message, style=dashed];
m32_202 -> m32_206  [color=darkseagreen4, key=1, label=message, style=dashed];
m32_203 -> m32_204  [key=0, style=solid];
m32_203 -> m32_205  [key=0, style=solid];
m32_205 -> m32_206  [key=0, style=solid];
m32_205 -> m32_190  [key=2, style=dotted];
m32_206 -> m32_207  [key=0, style=solid];
m32_204 -> m32_207  [key=0, style=solid];
m32_207 -> m32_201  [color=blue, key=0, style=bold];
m32_13 -> m32_11  [color=darkorchid, key=3, label="Field variable string _previousErrorMessage", style=bold];
m32_13 -> m32_165  [color=darkorchid, key=3, label="Field variable string _previousErrorMessage", style=bold];
m32_13 -> m32_202  [color=darkorchid, key=3, label="Field variable string _previousErrorMessage", style=bold];
m32_24 -> m32_25  [key=0, style=solid];
m32_25 -> m32_24  [color=blue, key=0, style=bold];
m32_47 -> m32_51  [key=0, style=solid];
m32_47 -> m32_52  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_47 -> m32_44  [color=darkorchid, key=3, label="Parameter variable decimal startingCash", style=bold];
m32_47 -> m32_48  [color=darkorchid, key=3, label="Parameter variable decimal startingCash", style=bold];
m32_51 -> m32_52  [key=0, style=solid];
m32_51 -> m32_53  [key=0, style=solid];
m32_52 -> m32_54  [key=0, style=solid];
m32_52 -> m32_55  [key=2, style=dotted];
m32_53 -> m32_54  [key=0, style=solid];
m32_53 -> m32_56  [key=2, style=dotted];
m32_54 -> m32_47  [color=blue, key=0, style=bold];
m32_124 -> m32_125  [key=0, style=solid];
m32_125 -> m32_126  [key=0, style=solid];
m32_125 -> m32_127  [key=2, style=dotted];
m32_126 -> m32_124  [color=blue, key=0, style=bold];
m32_208 -> m32_209  [key=0, style=solid];
m32_209 -> m32_210  [key=0, style=solid];
m32_209 -> m32_43  [key=2, style=dotted];
m32_210 -> m32_211  [key=0, style=solid];
m32_211 -> m32_208  [color=blue, key=0, style=bold];
m32_108 -> m32_109  [key=0, style=solid];
m32_109 -> m32_110  [key=0, style=solid];
m32_110 -> m32_108  [color=blue, key=0, style=bold];
m32_218 -> m32_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_58  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_66  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_74  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_90  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_115  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_121  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_147  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_169  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_175  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_177  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_182  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_185  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_187  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_194  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_199  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_203  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_206  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_209  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_210  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_213  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m32_218 -> m32_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_44 -> m33_45  [key=0, style=solid];
m33_45 -> m33_46  [key=0, style=solid];
m33_45 -> m33_47  [key=2, style=dotted];
m33_45 -> m33_48  [key=2, style=dotted];
m33_46 -> m33_44  [color=blue, key=0, style=bold];
m33_41 -> m33_49  [key=0, style=solid];
m33_41 -> m33_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m33_41 -> m33_51  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m33_49 -> m33_50  [key=0, style=solid];
m33_50 -> m33_51  [key=0, style=solid];
m33_51 -> m33_52  [key=0, style=solid];
m33_52 -> m33_41  [color=blue, key=0, style=bold];
m33_10 -> m33_11  [key=0, style=solid];
m33_31 -> m33_32  [color=green, key=0, style=solid];
m33_31 -> m33_39  [color=green, key=2, style=dotted];
m33_31 -> m33_37  [color=green, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m33_30 -> m33_31  [color=green, key=0, style=solid];
m33_30 -> m33_39  [key=2, style=dotted];
m33_30 -> m33_37  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m33_32 -> m33_33  [key=0, style=solid];
m33_32 -> m33_39  [key=2, style=dotted];
m33_32 -> m33_37  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m33_37 -> m33_38  [key=0, style=solid];
m33_37 -> m33_40  [key=2, style=dotted];
m33_37 -> m33_41  [key=2, style=dotted];
m33_37 -> m33_42  [key=2, style=dotted];
m33_37 -> m33_43  [key=2, style=dotted];
m33_37 -> m33_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_29 -> m33_30  [key=0, style=solid];
m33_29 -> m33_39  [key=2, style=dotted];
m33_29 -> m33_37  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m33_33 -> m33_39  [key=2, style=dotted];
m33_33 -> m33_37  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m33_33 -> m33_34  [key=0, style=solid];
m33_11 -> m33_39  [key=2, style=dotted];
m33_11 -> m33_37  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m33_11 -> m33_12  [key=0, style=solid];
m33_12 -> m33_39  [key=2, style=dotted];
m33_12 -> m33_37  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m33_12 -> m33_13  [key=0, style=solid];
m33_13 -> m33_39  [key=2, style=dotted];
m33_13 -> m33_37  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m33_13 -> m33_14  [key=0, style=solid];
m33_14 -> m33_39  [key=2, style=dotted];
m33_14 -> m33_37  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m33_14 -> m33_15  [key=0, style=solid];
m33_15 -> m33_39  [key=2, style=dotted];
m33_15 -> m33_37  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m33_15 -> m33_16  [key=0, style=solid];
m33_16 -> m33_39  [key=2, style=dotted];
m33_16 -> m33_37  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m33_16 -> m33_17  [key=0, style=solid];
m33_17 -> m33_39  [key=2, style=dotted];
m33_17 -> m33_37  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m33_17 -> m33_18  [key=0, style=solid];
m33_18 -> m33_39  [key=2, style=dotted];
m33_18 -> m33_37  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m33_18 -> m33_19  [key=0, style=solid];
m33_19 -> m33_39  [key=2, style=dotted];
m33_19 -> m33_37  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m33_19 -> m33_20  [key=0, style=solid];
m33_20 -> m33_39  [key=2, style=dotted];
m33_20 -> m33_37  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m33_20 -> m33_21  [key=0, style=solid];
m33_21 -> m33_39  [key=2, style=dotted];
m33_21 -> m33_37  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m33_21 -> m33_22  [key=0, style=solid];
m33_22 -> m33_39  [key=2, style=dotted];
m33_22 -> m33_37  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m33_22 -> m33_23  [key=0, style=solid];
m33_23 -> m33_39  [key=2, style=dotted];
m33_23 -> m33_37  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m33_23 -> m33_24  [key=0, style=solid];
m33_24 -> m33_39  [key=2, style=dotted];
m33_24 -> m33_37  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m33_24 -> m33_25  [key=0, style=solid];
m33_25 -> m33_39  [key=2, style=dotted];
m33_25 -> m33_37  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m33_25 -> m33_26  [key=0, style=solid];
m33_26 -> m33_39  [key=2, style=dotted];
m33_26 -> m33_37  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m33_26 -> m33_27  [key=0, style=solid];
m33_27 -> m33_39  [key=2, style=dotted];
m33_27 -> m33_37  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m33_27 -> m33_28  [key=0, style=solid];
m33_28 -> m33_39  [key=2, style=dotted];
m33_28 -> m33_37  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m33_28 -> m33_29  [key=0, style=solid];
m33_34 -> m33_39  [key=2, style=dotted];
m33_34 -> m33_37  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m33_34 -> m33_35  [key=0, style=solid];
m33_35 -> m33_39  [key=2, style=dotted];
m33_35 -> m33_37  [color=darkseagreen4, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m33_35 -> m33_36  [key=0, style=solid];
m33_36 -> m33_39  [key=2, style=dotted];
m33_36 -> m33_37  [key=0, style=solid];
m33_38 -> m33_10  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_4  [key=2, style=dotted];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_5  [key=2, style=dotted];
m33_3 -> m33_0  [color=blue, key=0, style=bold];
m33_53 -> m33_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m33_53 -> m33_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m33_53 -> m33_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_7  [key=2, style=dotted];
m34_2 -> m34_3  [key=0, style=solid];
m34_2 -> m34_8  [key=2, style=dotted];
m34_3 -> m34_4  [key=0, style=solid];
m34_3 -> m34_9  [key=2, style=dotted];
m34_4 -> m34_5  [key=0, style=solid];
m34_4 -> m34_10  [key=2, style=dotted];
m34_5 -> m34_6  [key=0, style=solid];
m34_5 -> m34_11  [key=2, style=dotted];
m34_6 -> m34_0  [color=blue, key=0, style=bold];
m34_11 -> m34_24  [key=0, style=solid];
m34_24 -> m34_25  [key=0, style=solid];
m34_25 -> m34_11  [color=blue, key=0, style=bold];
m34_26 -> m34_27  [key=0, style=solid];
m34_27 -> m34_28  [key=0, style=solid];
m34_27 -> m34_29  [color=darkseagreen4, key=1, label=tick, style=dashed];
m34_28 -> m34_29  [key=0, style=solid];
m34_28 -> m34_31  [key=0, style=solid];
m34_29 -> m34_30  [key=0, style=solid];
m34_29 -> m34_31  [key=0, style=solid];
m34_31 -> m34_32  [key=0, style=solid];
m34_30 -> m34_32  [key=0, style=solid];
m34_32 -> m34_26  [color=blue, key=0, style=bold];
m34_12 -> m34_13  [key=0, style=solid];
m34_12 -> m34_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Ticks", style=dashed];
m34_13 -> m34_14  [key=0, style=solid];
m34_13 -> m34_15  [key=0, style=solid];
m34_13 -> m34_21  [key=2, style=dotted];
m34_15 -> m34_16  [key=0, style=solid];
m34_14 -> m34_20  [key=0, style=solid];
m34_16 -> m34_17  [key=0, style=solid];
m34_16 -> m34_18  [key=0, style=solid];
m34_17 -> m34_16  [key=0, style=solid];
m34_17 -> m34_22  [key=2, style=dotted];
m34_18 -> m34_19  [key=0, style=solid];
m34_18 -> m34_20  [key=0, style=solid];
m34_19 -> m34_20  [key=0, style=solid];
m34_19 -> m34_23  [key=2, style=dotted];
m34_20 -> m34_12  [color=blue, key=0, style=bold];
m34_33 -> m34_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", style=dashed];
m34_33 -> m34_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", style=dashed];
m34_33 -> m34_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", style=dashed];
m34_33 -> m34_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", style=dashed];
m34_33 -> m34_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", style=dashed];
m34_33 -> m34_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", style=dashed];
m34_33 -> m34_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", style=dashed];
m34_33 -> m34_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.TickDataFilteringAlgorithm", style=dashed];
m34_34 -> m34_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.ExchangeDataFilter", style=dashed];
m35_55 -> m35_108  [key=0, style=solid];
m35_126 -> m35_127  [key=0, style=solid];
m35_126 -> m35_85  [key=2, style=dotted];
m35_126 -> m35_129  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_126 -> m35_130  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_126 -> m35_131  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_126 -> m35_132  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_126 -> m35_133  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_126 -> m35_134  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_126 -> m35_135  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_126 -> m35_136  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_114 -> m35_115  [key=0, style=solid];
m35_114 -> m35_86  [key=2, style=dotted];
m35_114 -> m35_116  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_114 -> m35_117  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_114 -> m35_118  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_114 -> m35_119  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_114 -> m35_120  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_114 -> m35_121  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_114 -> m35_122  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_124 -> m35_112  [color=blue, key=0, style=bold];
m35_19 -> m35_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_5  [key=2, style=dotted];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m35_5 -> m35_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m35_5 -> m35_15  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m35_6 -> m35_7  [key=0, style=solid];
m35_6 -> m35_9  [key=0, style=solid];
m35_6 -> m35_10  [key=2, style=dotted];
m35_6 -> m35_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_6 -> m35_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_6 -> m35_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_6 -> m35_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_6 -> m35_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_6 -> m35_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_6 -> m35_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_11  [key=2, style=dotted];
m35_7 -> m35_12  [key=2, style=dotted];
m35_8 -> m35_14  [key=2, style=dotted];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_13  [key=2, style=dotted];
m35_8 -> m35_19  [key=2, style=dotted];
m35_9 -> m35_5  [color=blue, key=0, style=bold];
m35_9 -> m35_10  [key=0, style=solid];
m35_53 -> m35_73  [key=0, style=solid];
m35_53 -> m35_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_53 -> m35_75  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_53 -> m35_76  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_53 -> m35_77  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_53 -> m35_78  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_53 -> m35_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_53 -> m35_80  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_53 -> m35_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_53 -> m35_54  [key=0, style=solid];
m35_53 -> m35_55  [key=2, style=dotted];
m35_73 -> m35_74  [color=green, key=0, style=solid];
m35_73 -> m35_85  [key=2, style=dotted];
m35_73 -> m35_76  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_73 -> m35_77  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_73 -> m35_78  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_73 -> m35_79  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_73 -> m35_80  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_73 -> m35_81  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_73 -> m35_82  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_73 -> m35_83  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_73 -> m35_118  [key=2, style=dotted];
m35_74 -> m35_75  [color=green, key=0, style=solid];
m35_74 -> m35_86  [key=2, style=dotted];
m35_74 -> m35_76  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_74 -> m35_77  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_74 -> m35_78  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_74 -> m35_79  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_74 -> m35_80  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_74 -> m35_81  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_74 -> m35_82  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_75 -> m35_76  [key=0, style=solid];
m35_75 -> m35_77  [key=0, style=solid];
m35_76 -> m35_78  [key=0, style=solid];
m35_76 -> m35_87  [key=2, style=dotted];
m35_76 -> m35_88  [key=2, style=dotted];
m35_76 -> m35_77  [key=0, style=solid];
m35_76 -> m35_119  [key=2, style=dotted];
m35_76 -> m35_79  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m35_76 -> m35_80  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m35_77 -> m35_78  [key=0, style=solid];
m35_77 -> m35_89  [key=2, style=dotted];
m35_77 -> m35_90  [key=2, style=dotted];
m35_77 -> m35_88  [key=2, style=dotted];
m35_77 -> m35_79  [key=0, style=solid];
m35_77 -> m35_117  [key=2, style=dotted];
m35_78 -> m35_79  [key=0, style=solid];
m35_78 -> m35_91  [key=2, style=dotted];
m35_78 -> m35_92  [key=2, style=dotted];
m35_78 -> m35_118  [key=2, style=dotted];
m35_79 -> m35_80  [key=0, style=solid];
m35_79 -> m35_91  [key=2, style=dotted];
m35_79 -> m35_92  [key=2, style=dotted];
m35_79 -> m35_81  [key=0, style=solid];
m35_79 -> m35_117  [key=2, style=dotted];
m35_80 -> m35_81  [key=0, style=solid];
m35_80 -> m35_91  [key=2, style=dotted];
m35_80 -> m35_92  [key=2, style=dotted];
m35_80 -> m35_118  [key=2, style=dotted];
m35_81 -> m35_82  [key=0, style=solid];
m35_81 -> m35_91  [key=2, style=dotted];
m35_81 -> m35_92  [key=2, style=dotted];
m35_81 -> m35_99  [color=green, key=1, label=quoteCash, style=dashed];
m35_81 -> m35_85  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m35_81 -> m35_95  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m35_81 -> m35_97  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m35_82 -> m35_83  [key=0, style=solid];
m35_82 -> m35_91  [key=2, style=dotted];
m35_83 -> m35_84  [key=0, style=solid];
m35_83 -> m35_98  [color=green, key=0, style=solid];
m35_83 -> m35_86  [key=0, style=solid];
m35_83 -> m35_91  [key=0, style=solid];
m35_83 -> m35_94  [key=0, style=solid];
m35_83 -> m35_96  [key=0, style=solid];
m35_84 -> m35_53  [color=blue, key=0, style=bold];
m35_84 -> m35_85  [key=0, style=solid];
m35_33 -> m35_34  [key=0, style=solid];
m35_33 -> m35_36  [color=darkseagreen4, key=1, label=bool, style=dashed];
m35_33 -> m35_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_33 -> m35_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_33 -> m35_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_33 -> m35_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_33 -> m35_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_33 -> m35_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_33 -> m35_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_33 -> m35_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_34 -> m35_35  [key=0, style=solid];
m35_34 -> m35_36  [key=0, style=solid];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_38  [key=0, style=solid];
m35_38 -> m35_39  [key=0, style=solid];
m35_38 -> m35_41  [key=0, style=solid];
m35_38 -> m35_43  [key=0, style=solid];
m35_38 -> m35_45  [key=0, style=solid];
m35_38 -> m35_47  [key=0, style=solid];
m35_38 -> m35_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m35_38 -> m35_40  [key=2, style=dotted];
m35_40 -> m35_52  [key=0, style=solid];
m35_40 -> m35_53  [key=2, style=dotted];
m35_40 -> m35_42  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_40 -> m35_41  [key=0, style=solid];
m35_40 -> m35_44  [color=darkorchid, key=3, label="method methodReturn bool Remove", style=bold];
m35_42 -> m35_52  [key=0, style=solid];
m35_42 -> m35_54  [key=2, style=dotted];
m35_42 -> m35_43  [key=0, style=solid];
m35_42 -> m35_45  [key=0, style=solid];
m35_42 -> m35_47  [key=2, style=dotted];
m35_44 -> m35_52  [key=0, style=solid];
m35_44 -> m35_55  [key=2, style=dotted];
m35_44 -> m35_46  [key=0, style=solid];
m35_46 -> m35_52  [key=0, style=solid];
m35_46 -> m35_56  [key=2, style=dotted];
m35_46 -> m35_40  [color=blue, key=0, style=bold];
m35_48 -> m35_52  [key=0, style=solid];
m35_48 -> m35_57  [key=2, style=dotted];
m35_48 -> m35_49  [key=0, style=solid];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_58  [key=2, style=dotted];
m35_50 -> m35_59  [key=2, style=dotted];
m35_50 -> m35_48  [color=blue, key=0, style=bold];
m35_51 -> m35_52  [key=0, style=solid];
m35_51 -> m35_0  [key=2, style=dotted];
m35_35 -> m35_52  [key=0, style=solid];
m35_35 -> m35_33  [color=blue, key=0, style=bold];
m35_37 -> m35_52  [key=0, style=solid];
m35_37 -> m35_0  [key=2, style=dotted];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_40  [color=darkorchid, key=3, label="method methodReturn bool Remove", style=bold];
m35_39 -> m35_40  [key=0, style=solid];
m35_39 -> m35_37  [color=blue, key=0, style=bold];
m35_41 -> m35_42  [key=0, style=solid];
m35_43 -> m35_44  [key=0, style=solid];
m35_43 -> m35_14  [key=2, style=dotted];
m35_43 -> m35_13  [key=2, style=dotted];
m35_45 -> m35_46  [key=0, style=solid];
m35_47 -> m35_48  [key=0, style=solid];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_51  [key=2, style=dotted];
m35_52 -> m35_33  [color=blue, key=0, style=bold];
m35_52 -> m35_53  [key=0, style=solid];
m35_127 -> m35_128  [key=0, style=solid];
m35_127 -> m35_86  [key=2, style=dotted];
m35_127 -> m35_129  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_127 -> m35_130  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_127 -> m35_131  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_127 -> m35_132  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_127 -> m35_133  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_127 -> m35_134  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_127 -> m35_135  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_108 -> m35_109  [key=0, style=solid];
m35_108 -> m35_54  [key=2, style=dotted];
m35_109 -> m35_55  [color=blue, key=0, style=bold];
m35_109 -> m35_64  [color=blue, key=0, style=bold];
m35_58 -> m35_56  [color=blue, key=0, style=bold];
m35_10 -> m35_11  [key=0, style=solid];
m35_152 -> m35_153  [color=red, key=0, style=solid];
m35_152 -> m35_155  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_152 -> m35_156  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_152 -> m35_157  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_54 -> m35_52  [color=blue, key=0, style=bold];
m35_54 -> m35_95  [key=0, style=solid];
m35_54 -> m35_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_54 -> m35_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_54 -> m35_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_54 -> m35_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_88 -> m35_89  [key=0, style=solid];
m35_88 -> m35_113  [key=2, style=dotted];
m35_14 -> m35_59  [key=0, style=solid];
m35_14 -> m35_61  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m35_14 -> m35_15  [key=0, style=solid];
m35_59 -> m35_113  [color=darkorchid, key=3, label="Local variable System.Collections.Specialized.NotifyCollectionChangedEventHandler handler", style=bold];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_61  [color=darkseagreen4, key=1, label=handler, style=dashed];
m35_60 -> m35_61  [key=0, style=solid];
m35_60 -> m35_62  [key=0, style=solid];
m35_60 -> m35_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_60 -> m35_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_60 -> m35_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_61 -> m35_62  [key=0, style=solid];
m35_61 -> m35_63  [key=2, style=dotted];
m35_61 -> m35_64  [key=0, style=solid];
m35_61 -> m35_66  [key=0, style=solid];
m35_62 -> m35_14  [color=blue, key=0, style=bold];
m35_62 -> m35_63  [key=0, style=solid];
m35_110 -> m35_111  [key=0, style=solid];
m35_110 -> m35_55  [key=2, style=dotted];
m35_32 -> m35_20  [color=blue, key=0, style=bold];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_6  [color=blue, key=0, style=bold];
m35_20 -> m35_18  [color=blue, key=0, style=bold];
m35_20 -> m35_21  [key=0, style=solid];
m35_20 -> m35_22  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_20 -> m35_23  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_20 -> m35_24  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_20 -> m35_25  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_20 -> m35_26  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_20 -> m35_27  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_20 -> m35_28  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_20 -> m35_29  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m35_130 -> m35_131  [key=0, style=solid];
m35_130 -> m35_89  [key=2, style=dotted];
m35_130 -> m35_90  [key=2, style=dotted];
m35_130 -> m35_88  [key=2, style=dotted];
m35_57 -> m35_140  [key=0, style=solid];
m35_57 -> m35_58  [key=0, style=solid];
m35_57 -> m35_55  [key=2, style=dotted];
m35_140 -> m35_141  [key=0, style=solid];
m35_140 -> m35_125  [key=2, style=dotted];
m35_140 -> m35_146  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m35_141 -> m35_57  [color=blue, key=0, style=bold];
m35_141 -> m35_142  [key=0, style=solid];
m35_141 -> m35_144  [color=darkseagreen4, key=1, label=defaultQuoteCurrency, style=dashed];
m35_72 -> m35_110  [key=0, style=solid];
m35_72 -> m35_74  [color=green, key=0, style=solid];
m35_72 -> m35_73  [key=0, style=solid];
m35_72 -> m35_117  [key=2, style=dotted];
m35_111 -> m35_72  [color=blue, key=0, style=bold];
m35_85 -> m35_100  [key=0, style=solid];
m35_85 -> m35_120  [key=2, style=dotted];
m35_71 -> m35_106  [key=0, style=solid];
m35_71 -> m35_72  [key=0, style=solid];
m35_71 -> m35_73  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m35_106 -> m35_107  [key=0, style=solid];
m35_106 -> m35_54  [key=2, style=dotted];
m35_106 -> m35_108  [key=0, style=solid];
m35_107 -> m35_71  [color=blue, key=0, style=bold];
m35_107 -> m35_108  [key=0, style=solid];
m35_107 -> m35_131  [key=2, style=dotted];
m35_136 -> m35_137  [key=0, style=solid];
m35_136 -> m35_118  [color=darkorchid, key=3, label="Local variable QuantConnect.Symbol symbol", style=bold];
m35_15 -> m35_16  [key=0, style=solid];
m35_16 -> m35_17  [key=0, style=solid];
m35_16 -> m35_5  [key=2, style=dotted];
m35_17 -> m35_15  [color=blue, key=0, style=bold];
m35_17 -> m35_18  [key=0, style=solid];
m35_63 -> m35_69  [key=0, style=solid];
m35_63 -> m35_70  [key=2, style=dotted];
m35_122 -> m35_123  [key=0, style=solid];
m35_122 -> m35_91  [key=2, style=dotted];
m35_135 -> m35_136  [key=0, style=solid];
m35_135 -> m35_91  [key=2, style=dotted];
m35_137 -> m35_125  [color=blue, key=0, style=bold];
m35_151 -> m35_168  [key=0, style=solid];
m35_151 -> m35_169  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_151 -> m35_170  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_151 -> m35_171  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_56 -> m35_138  [key=0, style=solid];
m35_56 -> m35_57  [key=0, style=solid];
m35_138 -> m35_139  [key=0, style=solid];
m35_138 -> m35_112  [key=2, style=dotted];
m35_138 -> m35_64  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security CreateSecurity", style=bold];
m35_138 -> m35_142  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_138 -> m35_143  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_138 -> m35_144  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolPropertiesDatabase", style=dashed];
m35_138 -> m35_145  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m35_138 -> m35_146  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_139 -> m35_56  [color=blue, key=0, style=bold];
m35_139 -> m35_146  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m35_139 -> m35_140  [key=0, style=solid];
m35_139 -> m35_148  [key=2, style=dotted];
m35_119 -> m35_120  [key=0, style=solid];
m35_119 -> m35_91  [key=2, style=dotted];
m35_119 -> m35_92  [key=2, style=dotted];
m35_132 -> m35_64  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security CreateSecurity", style=bold];
m35_132 -> m35_133  [key=0, style=solid];
m35_132 -> m35_91  [key=2, style=dotted];
m35_132 -> m35_92  [key=2, style=dotted];
m35_133 -> m35_64  [key=2, style=dotted];
m35_133 -> m35_134  [key=0, style=solid];
m35_133 -> m35_135  [key=2, style=dotted];
m35_133 -> m35_136  [key=2, style=dotted];
m35_133 -> m35_137  [key=2, style=dotted];
m35_133 -> m35_91  [key=2, style=dotted];
m35_133 -> m35_92  [key=2, style=dotted];
m35_134 -> m35_132  [color=blue, key=0, style=bold];
m35_134 -> m35_135  [key=0, style=solid];
m35_134 -> m35_91  [key=2, style=dotted];
m35_134 -> m35_92  [key=2, style=dotted];
m35_115 -> m35_116  [key=0, style=solid];
m35_115 -> m35_117  [key=0, style=solid];
m35_146 -> m35_64  [key=2, style=dotted];
m35_146 -> m35_147  [key=0, style=solid];
m35_146 -> m35_148  [key=0, style=solid];
m35_145 -> m35_146  [key=0, style=solid];
m35_145 -> m35_151  [key=2, style=dotted];
m35_145 -> m35_152  [key=2, style=dotted];
m35_142 -> m35_143  [key=0, style=solid];
m35_142 -> m35_144  [key=0, style=solid];
m35_142 -> m35_145  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_142 -> m35_146  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_142 -> m35_147  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_142 -> m35_148  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_142 -> m35_149  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_143 -> m35_144  [key=0, style=solid];
m35_143 -> m35_149  [key=2, style=dotted];
m35_143 -> m35_151  [key=2, style=dotted];
m35_144 -> m35_146  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m35_144 -> m35_145  [key=0, style=solid];
m35_144 -> m35_150  [key=2, style=dotted];
m35_147 -> m35_138  [color=blue, key=0, style=bold];
m35_147 -> m35_148  [key=0, style=solid];
m35_125 -> m35_126  [key=0, style=solid];
m35_125 -> m35_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_125 -> m35_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_125 -> m35_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_125 -> m35_130  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_125 -> m35_131  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_125 -> m35_132  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_125 -> m35_133  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_125 -> m35_134  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_125 -> m35_118  [color=darkorchid, key=3, label="Local variable QuantConnect.Symbol symbol", style=bold];
m35_131 -> m35_132  [key=0, style=solid];
m35_131 -> m35_91  [key=2, style=dotted];
m35_131 -> m35_92  [key=2, style=dotted];
m35_70 -> m35_93  [key=0, style=solid];
m35_70 -> m35_70  [color=darkseagreen4, key=1, label=subscriptionDataType, style=dashed];
m35_70 -> m35_71  [key=0, style=solid];
m35_70 -> m35_115  [key=2, style=dotted];
m35_70 -> m35_116  [key=2, style=dotted];
m35_93 -> m35_94  [key=0, style=solid];
m35_93 -> m35_53  [key=2, style=dotted];
m35_93 -> m35_100  [key=0, style=solid];
m35_93 -> m35_124  [key=2, style=dotted];
m35_94 -> m35_70  [color=blue, key=0, style=bold];
m35_94 -> m35_95  [key=0, style=solid];
m35_29 -> m35_30  [key=0, style=solid];
m35_29 -> m35_5  [key=2, style=dotted];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_32  [key=2, style=dotted];
m35_30 -> m35_22  [color=darkorchid, key=3, label="Local variable QuantConnect.Symbol subscribeSymbol", style=bold];
m35_31 -> m35_29  [color=blue, key=0, style=bold];
m35_31 -> m35_32  [key=0, style=solid];
m35_28 -> m35_29  [key=0, style=solid];
m35_148 -> m35_149  [key=0, style=solid];
m35_24 -> m35_25  [key=0, style=solid];
m35_21 -> m35_22  [key=0, style=solid];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_24  [key=2, style=dotted];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_21  [color=blue, key=0, style=bold];
m35_25 -> m35_26  [key=0, style=solid];
m35_26 -> m35_27  [key=0, style=solid];
m35_26 -> m35_28  [key=2, style=dotted];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_25  [color=blue, key=0, style=bold];
m35_112 -> m35_113  [key=0, style=solid];
m35_112 -> m35_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_112 -> m35_115  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_112 -> m35_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_112 -> m35_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_112 -> m35_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_112 -> m35_119  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_112 -> m35_120  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_112 -> m35_121  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m35_113 -> m35_114  [key=0, style=solid];
m35_113 -> m35_85  [key=2, style=dotted];
m35_113 -> m35_116  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_113 -> m35_117  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_113 -> m35_118  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_113 -> m35_119  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_113 -> m35_120  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_113 -> m35_121  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_113 -> m35_122  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_113 -> m35_123  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_116 -> m35_118  [key=0, style=solid];
m35_116 -> m35_87  [key=2, style=dotted];
m35_116 -> m35_88  [key=2, style=dotted];
m35_117 -> m35_118  [key=0, style=solid];
m35_117 -> m35_89  [key=2, style=dotted];
m35_117 -> m35_90  [key=2, style=dotted];
m35_117 -> m35_88  [key=2, style=dotted];
m35_118 -> m35_119  [key=0, style=solid];
m35_118 -> m35_91  [key=2, style=dotted];
m35_118 -> m35_92  [key=2, style=dotted];
m35_120 -> m35_121  [key=0, style=solid];
m35_120 -> m35_91  [key=2, style=dotted];
m35_120 -> m35_92  [key=2, style=dotted];
m35_121 -> m35_122  [key=0, style=solid];
m35_121 -> m35_91  [key=2, style=dotted];
m35_121 -> m35_92  [key=2, style=dotted];
m35_123 -> m35_124  [key=0, style=solid];
m35_65 -> m35_69  [key=0, style=solid];
m35_65 -> m35_71  [key=2, style=dotted];
m35_65 -> m35_66  [key=0, style=solid];
m35_65 -> m35_67  [key=0, style=solid];
m35_65 -> m35_110  [key=2, style=dotted];
m35_67 -> m35_69  [key=0, style=solid];
m35_67 -> m35_72  [key=2, style=dotted];
m35_67 -> m35_68  [key=0, style=solid];
m35_64 -> m35_65  [key=0, style=solid];
m35_64 -> m35_74  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m35_64 -> m35_99  [color=green, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m35_64 -> m35_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>", style=dashed];
m35_64 -> m35_67  [color=darkseagreen4, key=1, label=bool, style=dashed];
m35_64 -> m35_68  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_64 -> m35_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_64 -> m35_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>>", style=dashed];
m35_64 -> m35_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolProperties", style=dashed];
m35_64 -> m35_72  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_73  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_76  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_64 -> m35_77  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_80  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_81  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_85  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m35_64 -> m35_87  [color=darkseagreen4, key=1, label=bool, style=dashed];
m35_64 -> m35_88  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_64 -> m35_90  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_93  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m35_64 -> m35_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m35_64 -> m35_97  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m35_64 -> m35_103  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m35_64 -> m35_104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_64 -> m35_105  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_64 -> m35_106  [color=darkseagreen4, key=1, label=bool, style=dashed];
m35_64 -> m35_82  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security CreateSecurity", style=bold];
m35_64 -> m35_145  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<System.Tuple<System.Type, QuantConnect.TickType>> subscriptionDataTypes", style=bold];
m35_66 -> m35_67  [key=0, style=solid];
m35_66 -> m35_109  [key=0, style=solid];
m35_66 -> m35_111  [key=2, style=dotted];
m35_66 -> m35_112  [key=2, style=dotted];
m35_68 -> m35_69  [key=0, style=solid];
m35_68 -> m35_113  [key=2, style=dotted];
m35_69 -> m35_60  [color=blue, key=0, style=bold];
m35_69 -> m35_100  [color=darkseagreen4, key=1, label=configList, style=dashed];
m35_69 -> m35_102  [color=darkseagreen4, key=1, label=configList, style=dashed];
m35_69 -> m35_83  [color=darkseagreen4, key=1, label=configList, style=dashed];
m35_69 -> m35_70  [key=0, style=solid];
m35_69 -> m35_114  [key=2, style=dotted];
m35_69 -> m35_89  [color=darkseagreen4, key=1, label=configList, style=dashed];
m35_69 -> m35_92  [color=darkseagreen4, key=1, label=configList, style=dashed];
m35_128 -> m35_129  [key=0, style=solid];
m35_128 -> m35_130  [key=0, style=solid];
m35_129 -> m35_131  [key=0, style=solid];
m35_129 -> m35_87  [key=2, style=dotted];
m35_129 -> m35_88  [key=2, style=dotted];
m35_168 -> m35_169  [key=0, style=solid];
m35_168 -> m35_172  [key=0, style=solid];
m35_168 -> m35_173  [key=2, style=dotted];
m35_169 -> m35_170  [key=0, style=solid];
m35_170 -> m35_171  [key=0, style=solid];
m35_171 -> m35_172  [key=0, style=solid];
m35_172 -> m35_151  [color=blue, key=0, style=bold];
m35_150 -> m35_142  [color=blue, key=0, style=bold];
m35_4 -> m35_0  [color=blue, key=0, style=bold];
m35_12 -> m35_13  [key=0, style=solid];
m35_149 -> m35_150  [key=0, style=solid];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_4  [key=2, style=dotted];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_5  [key=2, style=dotted];
m35_3 -> m35_0  [color=blue, key=0, style=bold];
m35_13 -> m35_14  [key=0, style=solid];
m35_11 -> m35_12  [key=0, style=solid];
m35_95 -> m35_96  [key=0, style=solid];
m35_95 -> m35_85  [key=2, style=dotted];
m35_95 -> m35_98  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_95 -> m35_99  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_95 -> m35_100  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_95 -> m35_101  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_95 -> m35_102  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_95 -> m35_103  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_95 -> m35_104  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m35_95 -> m35_125  [key=2, style=dotted];
m35_96 -> m35_97  [key=0, style=solid];
m35_96 -> m35_86  [key=2, style=dotted];
m35_96 -> m35_98  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_96 -> m35_99  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_96 -> m35_100  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_96 -> m35_101  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_96 -> m35_102  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_96 -> m35_103  [color=darkseagreen4, key=1, label=csv, style=dashed];
m35_97 -> m35_98  [key=0, style=solid];
m35_97 -> m35_99  [key=0, style=solid];
m35_97 -> m35_100  [key=0, style=solid];
m35_97 -> m35_126  [key=2, style=dotted];
m35_98 -> m35_100  [key=0, style=solid];
m35_98 -> m35_87  [key=2, style=dotted];
m35_98 -> m35_88  [key=2, style=dotted];
m35_98 -> m35_99  [color=green, key=0, style=solid];
m35_99 -> m35_100  [color=green, key=0, style=solid];
m35_99 -> m35_89  [key=2, style=dotted];
m35_99 -> m35_90  [key=2, style=dotted];
m35_99 -> m35_88  [key=2, style=dotted];
m35_99 -> m35_127  [color=green, key=2, style=dotted];
m35_99 -> m35_101  [color=green, key=1, label=security, style=dashed];
m35_99 -> m35_102  [color=green, key=1, label=security, style=dashed];
m35_99 -> m35_103  [color=green, key=1, label=security, style=dashed];
m35_99 -> m35_105  [color=green, key=1, label=security, style=dashed];
m35_99 -> m35_106  [color=green, key=1, label=security, style=dashed];
m35_99 -> m35_107  [color=green, key=1, label=security, style=dashed];
m35_99 -> m35_108  [color=green, key=1, label=security, style=dashed];
m35_100 -> m35_101  [key=0, style=solid];
m35_100 -> m35_91  [key=2, style=dotted];
m35_100 -> m35_102  [key=0, style=solid];
m35_101 -> m35_102  [key=0, style=solid];
m35_101 -> m35_91  [key=2, style=dotted];
m35_102 -> m35_103  [key=0, style=solid];
m35_102 -> m35_91  [key=2, style=dotted];
m35_102 -> m35_128  [key=2, style=dotted];
m35_103 -> m35_104  [key=0, style=solid];
m35_103 -> m35_91  [key=2, style=dotted];
m35_103 -> m35_129  [key=2, style=dotted];
m35_104 -> m35_105  [key=0, style=solid];
m35_104 -> m35_106  [key=0, style=solid];
m35_105 -> m35_54  [color=blue, key=0, style=bold];
m35_105 -> m35_106  [key=0, style=solid];
m35_105 -> m35_130  [key=2, style=dotted];
m35_90 -> m35_100  [key=0, style=solid];
m35_90 -> m35_122  [key=2, style=dotted];
m35_90 -> m35_123  [key=2, style=dotted];
m35_89 -> m35_90  [key=0, style=solid];
m35_89 -> m35_121  [key=2, style=dotted];
m35_92 -> m35_93  [key=0, style=solid];
m35_92 -> m35_121  [key=2, style=dotted];
m35_87 -> m35_88  [key=0, style=solid];
m35_87 -> m35_89  [key=0, style=solid];
m35_86 -> m35_87  [key=0, style=solid];
m35_91 -> m35_92  [key=0, style=solid];
m35_157 -> m35_158  [key=0, style=solid];
m35_157 -> m35_162  [key=2, style=dotted];
m35_157 -> m35_157  [color=darkseagreen4, key=1, label=source, style=dashed];
m35_153 -> m35_154  [color=red, key=0, style=solid];
m35_153 -> m35_155  [color=red, key=0, style=solid];
m35_153 -> m35_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_153 -> m35_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_155 -> m35_156  [key=0, style=solid];
m35_155 -> m35_161  [key=2, style=dotted];
m35_155 -> m35_157  [color=darkseagreen4, key=1, label=source, style=dashed];
m35_155 -> m35_158  [color=darkseagreen4, key=1, label=source, style=dashed];
m35_156 -> m35_157  [key=0, style=solid];
m35_156 -> m35_158  [key=0, style=solid];
m35_154 -> m35_159  [key=0, style=solid];
m35_154 -> m35_160  [key=2, style=dotted];
m35_158 -> m35_159  [key=0, style=solid];
m35_158 -> m35_163  [key=2, style=dotted];
m35_159 -> m35_152  [color=blue, key=0, style=bold];
m35_164 -> m35_165  [key=0, style=solid];
m35_165 -> m35_166  [key=0, style=solid];
m35_165 -> m35_167  [key=2, style=dotted];
m35_166 -> m35_164  [color=blue, key=0, style=bold];
m35_174 -> m35_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_143  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_144  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_145  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_146  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_147  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_148  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_149  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_165  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_168  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_169  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_170  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m35_174 -> m35_171  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m36_43 -> m36_44  [key=0, style=solid];
m36_44 -> m36_45  [key=0, style=solid];
m36_44 -> m36_10  [key=2, style=dotted];
m36_44 -> m36_11  [key=2, style=dotted];
m36_45 -> m36_46  [key=0, style=solid];
m36_45 -> m36_12  [key=2, style=dotted];
m36_45 -> m36_47  [color=darkseagreen4, key=1, label=manager, style=dashed];
m36_45 -> m36_48  [color=darkseagreen4, key=1, label=manager, style=dashed];
m36_46 -> m36_47  [key=0, style=solid];
m36_46 -> m36_26  [key=2, style=dotted];
m36_46 -> m36_27  [key=2, style=dotted];
m36_46 -> m36_28  [key=2, style=dotted];
m36_46 -> m36_29  [key=2, style=dotted];
m36_46 -> m36_30  [key=2, style=dotted];
m36_46 -> m36_51  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_46 -> m36_48  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_47 -> m36_48  [key=0, style=solid];
m36_47 -> m36_51  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_47 -> m36_53  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_48 -> m36_49  [key=0, style=solid];
m36_49 -> m36_43  [color=blue, key=0, style=bold];
m36_28 -> m36_215  [key=0, style=solid];
m36_215 -> m36_216  [key=0, style=solid];
m36_215 -> m36_217  [key=2, style=dotted];
m36_216 -> m36_28  [color=blue, key=0, style=bold];
m36_187 -> m36_188  [key=0, style=solid];
m36_188 -> m36_189  [key=0, style=solid];
m36_188 -> m36_128  [key=2, style=dotted];
m36_188 -> m36_146  [key=2, style=dotted];
m36_189 -> m36_190  [key=0, style=solid];
m36_189 -> m36_196  [key=2, style=dotted];
m36_189 -> m36_200  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_189 -> m36_191  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_189 -> m36_204  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_189 -> m36_192  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_189 -> m36_207  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_189 -> m36_193  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_189 -> m36_210  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_189 -> m36_194  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_189 -> m36_213  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_190 -> m36_191  [key=0, style=solid];
m36_190 -> m36_197  [key=2, style=dotted];
m36_190 -> m36_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_191 -> m36_192  [key=0, style=solid];
m36_191 -> m36_198  [key=2, style=dotted];
m36_191 -> m36_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_192 -> m36_193  [key=0, style=solid];
m36_192 -> m36_198  [key=2, style=dotted];
m36_192 -> m36_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_193 -> m36_194  [key=0, style=solid];
m36_193 -> m36_198  [key=2, style=dotted];
m36_193 -> m36_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_194 -> m36_195  [key=0, style=solid];
m36_194 -> m36_198  [key=2, style=dotted];
m36_194 -> m36_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_195 -> m36_187  [color=blue, key=0, style=bold];
m36_212 -> m36_213  [key=0, style=solid];
m36_33 -> m36_34  [key=0, style=solid];
m36_33 -> m36_35  [key=0, style=solid];
m36_33 -> m36_38  [key=2, style=dotted];
m36_33 -> m36_39  [key=2, style=dotted];
m36_35 -> m36_36  [key=0, style=solid];
m36_35 -> m36_41  [key=2, style=dotted];
m36_32 -> m36_33  [key=0, style=solid];
m36_32 -> m36_35  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_34 -> m36_37  [key=0, style=solid];
m36_34 -> m36_40  [key=2, style=dotted];
m36_36 -> m36_37  [key=0, style=solid];
m36_36 -> m36_42  [key=2, style=dotted];
m36_37 -> m36_32  [color=blue, key=0, style=bold];
m36_51 -> m36_52  [key=0, style=solid];
m36_51 -> m36_53  [key=0, style=solid];
m36_51 -> m36_38  [key=2, style=dotted];
m36_51 -> m36_39  [key=2, style=dotted];
m36_53 -> m36_54  [key=0, style=solid];
m36_53 -> m36_41  [key=2, style=dotted];
m36_50 -> m36_51  [key=0, style=solid];
m36_50 -> m36_53  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_52 -> m36_55  [key=0, style=solid];
m36_52 -> m36_40  [key=2, style=dotted];
m36_54 -> m36_55  [key=0, style=solid];
m36_54 -> m36_42  [key=2, style=dotted];
m36_55 -> m36_50  [color=blue, key=0, style=bold];
m36_66 -> m36_67  [key=0, style=solid];
m36_66 -> m36_68  [key=0, style=solid];
m36_66 -> m36_38  [key=2, style=dotted];
m36_66 -> m36_39  [key=2, style=dotted];
m36_68 -> m36_69  [key=0, style=solid];
m36_68 -> m36_41  [key=2, style=dotted];
m36_65 -> m36_66  [key=0, style=solid];
m36_65 -> m36_68  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_67 -> m36_70  [key=0, style=solid];
m36_67 -> m36_40  [key=2, style=dotted];
m36_69 -> m36_70  [key=0, style=solid];
m36_69 -> m36_42  [key=2, style=dotted];
m36_70 -> m36_65  [color=blue, key=0, style=bold];
m36_155 -> m36_156  [key=0, style=solid];
m36_158 -> m36_159  [key=0, style=solid];
m36_161 -> m36_162  [key=0, style=solid];
m36_156 -> m36_157  [key=0, style=solid];
m36_157 -> m36_155  [color=blue, key=0, style=bold];
m36_159 -> m36_160  [key=0, style=solid];
m36_160 -> m36_158  [color=blue, key=0, style=bold];
m36_162 -> m36_163  [key=0, style=solid];
m36_163 -> m36_161  [color=blue, key=0, style=bold];
m36_178 -> m36_179  [key=0, style=solid];
m36_181 -> m36_182  [key=0, style=solid];
m36_184 -> m36_185  [key=0, style=solid];
m36_179 -> m36_180  [key=0, style=solid];
m36_180 -> m36_178  [color=blue, key=0, style=bold];
m36_182 -> m36_183  [key=0, style=solid];
m36_183 -> m36_181  [color=blue, key=0, style=bold];
m36_185 -> m36_186  [key=0, style=solid];
m36_186 -> m36_184  [color=blue, key=0, style=bold];
m36_200 -> m36_201  [key=0, style=solid];
m36_200 -> m36_202  [key=2, style=dotted];
m36_204 -> m36_205  [key=0, style=solid];
m36_204 -> m36_202  [key=2, style=dotted];
m36_207 -> m36_208  [key=0, style=solid];
m36_207 -> m36_202  [key=2, style=dotted];
m36_210 -> m36_211  [key=0, style=solid];
m36_210 -> m36_202  [key=2, style=dotted];
m36_213 -> m36_214  [key=0, style=solid];
m36_213 -> m36_202  [key=2, style=dotted];
m36_199 -> m36_200  [key=0, style=solid];
m36_203 -> m36_204  [key=0, style=solid];
m36_206 -> m36_207  [key=0, style=solid];
m36_209 -> m36_210  [key=0, style=solid];
m36_201 -> m36_199  [color=blue, key=0, style=bold];
m36_205 -> m36_203  [color=blue, key=0, style=bold];
m36_208 -> m36_206  [color=blue, key=0, style=bold];
m36_211 -> m36_209  [color=blue, key=0, style=bold];
m36_214 -> m36_212  [color=blue, key=0, style=bold];
m36_170 -> m36_171  [key=0, style=solid];
m36_170 -> m36_151  [key=2, style=dotted];
m36_170 -> m36_172  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m36_170 -> m36_173  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m36_170 -> m36_174  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m36_170 -> m36_175  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m36_164 -> m36_165  [key=0, style=solid];
m36_165 -> m36_166  [key=0, style=solid];
m36_165 -> m36_11  [key=2, style=dotted];
m36_165 -> m36_177  [key=2, style=dotted];
m36_166 -> m36_167  [key=0, style=solid];
m36_166 -> m36_147  [key=2, style=dotted];
m36_166 -> m36_168  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_166 -> m36_170  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_166 -> m36_171  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_167 -> m36_168  [key=0, style=solid];
m36_167 -> m36_130  [key=2, style=dotted];
m36_167 -> m36_170  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m36_168 -> m36_169  [key=0, style=solid];
m36_168 -> m36_148  [key=2, style=dotted];
m36_168 -> m36_170  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m36_171 -> m36_172  [key=0, style=solid];
m36_171 -> m36_152  [key=2, style=dotted];
m36_171 -> m36_153  [key=2, style=dotted];
m36_169 -> m36_170  [key=0, style=solid];
m36_169 -> m36_149  [key=2, style=dotted];
m36_169 -> m36_150  [key=2, style=dotted];
m36_172 -> m36_173  [key=0, style=solid];
m36_172 -> m36_86  [key=2, style=dotted];
m36_172 -> m36_87  [key=2, style=dotted];
m36_173 -> m36_174  [key=0, style=solid];
m36_173 -> m36_154  [key=2, style=dotted];
m36_173 -> m36_41  [key=2, style=dotted];
m36_173 -> m36_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_174 -> m36_175  [key=0, style=solid];
m36_174 -> m36_154  [key=2, style=dotted];
m36_174 -> m36_41  [key=2, style=dotted];
m36_174 -> m36_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_175 -> m36_176  [key=0, style=solid];
m36_175 -> m36_154  [key=2, style=dotted];
m36_175 -> m36_41  [key=2, style=dotted];
m36_175 -> m36_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_176 -> m36_164  [color=blue, key=0, style=bold];
m36_19 -> m36_20  [key=0, style=solid];
m36_20 -> m36_21  [key=0, style=solid];
m36_20 -> m36_10  [key=2, style=dotted];
m36_20 -> m36_11  [key=2, style=dotted];
m36_21 -> m36_22  [key=0, style=solid];
m36_21 -> m36_12  [key=2, style=dotted];
m36_21 -> m36_23  [color=darkseagreen4, key=1, label=manager, style=dashed];
m36_21 -> m36_24  [color=darkseagreen4, key=1, label=manager, style=dashed];
m36_22 -> m36_23  [key=0, style=solid];
m36_22 -> m36_26  [key=2, style=dotted];
m36_22 -> m36_27  [key=2, style=dotted];
m36_22 -> m36_28  [key=2, style=dotted];
m36_22 -> m36_29  [key=2, style=dotted];
m36_22 -> m36_30  [key=2, style=dotted];
m36_22 -> m36_33  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_22 -> m36_24  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_23 -> m36_24  [key=0, style=solid];
m36_23 -> m36_33  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_23 -> m36_35  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_24 -> m36_25  [key=0, style=solid];
m36_24 -> m36_31  [key=2, style=dotted];
m36_25 -> m36_19  [color=blue, key=0, style=bold];
m36_114 -> m36_115  [key=0, style=solid];
m36_114 -> m36_85  [key=2, style=dotted];
m36_114 -> m36_116  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m36_114 -> m36_117  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m36_109 -> m36_110  [key=0, style=solid];
m36_110 -> m36_111  [key=0, style=solid];
m36_110 -> m36_81  [key=2, style=dotted];
m36_110 -> m36_113  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_110 -> m36_114  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_111 -> m36_112  [key=0, style=solid];
m36_111 -> m36_82  [key=2, style=dotted];
m36_111 -> m36_114  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m36_113 -> m36_114  [key=0, style=solid];
m36_113 -> m36_84  [key=2, style=dotted];
m36_112 -> m36_113  [key=0, style=solid];
m36_115 -> m36_116  [key=0, style=solid];
m36_115 -> m36_86  [key=2, style=dotted];
m36_115 -> m36_87  [key=2, style=dotted];
m36_116 -> m36_117  [key=0, style=solid];
m36_116 -> m36_88  [key=2, style=dotted];
m36_116 -> m36_87  [key=2, style=dotted];
m36_117 -> m36_118  [key=0, style=solid];
m36_117 -> m36_88  [key=2, style=dotted];
m36_117 -> m36_87  [key=2, style=dotted];
m36_118 -> m36_109  [color=blue, key=0, style=bold];
m36_123 -> m36_124  [key=0, style=solid];
m36_123 -> m36_85  [key=2, style=dotted];
m36_123 -> m36_125  [color=darkseagreen4, key=1, label=equity, style=dashed];
m36_123 -> m36_126  [color=darkseagreen4, key=1, label=equity, style=dashed];
m36_119 -> m36_120  [key=0, style=solid];
m36_120 -> m36_121  [key=0, style=solid];
m36_120 -> m36_128  [key=2, style=dotted];
m36_120 -> m36_129  [key=2, style=dotted];
m36_120 -> m36_122  [color=darkseagreen4, key=1, label=equitySymbol, style=dashed];
m36_120 -> m36_123  [color=darkseagreen4, key=1, label=equitySymbol, style=dashed];
m36_121 -> m36_122  [key=0, style=solid];
m36_121 -> m36_130  [key=2, style=dotted];
m36_121 -> m36_123  [color=darkseagreen4, key=1, label=equityMarketHoursDbEntry, style=dashed];
m36_122 -> m36_123  [key=0, style=solid];
m36_122 -> m36_84  [key=2, style=dotted];
m36_124 -> m36_125  [key=0, style=solid];
m36_124 -> m36_86  [key=2, style=dotted];
m36_124 -> m36_87  [key=2, style=dotted];
m36_125 -> m36_126  [key=0, style=solid];
m36_125 -> m36_88  [key=2, style=dotted];
m36_125 -> m36_87  [key=2, style=dotted];
m36_126 -> m36_127  [key=0, style=solid];
m36_126 -> m36_88  [key=2, style=dotted];
m36_126 -> m36_87  [key=2, style=dotted];
m36_127 -> m36_119  [color=blue, key=0, style=bold];
m36_96 -> m36_97  [key=0, style=solid];
m36_96 -> m36_88  [key=2, style=dotted];
m36_96 -> m36_87  [key=2, style=dotted];
m36_89 -> m36_90  [key=0, style=solid];
m36_90 -> m36_91  [key=0, style=solid];
m36_90 -> m36_81  [key=2, style=dotted];
m36_90 -> m36_93  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m36_90 -> m36_94  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m36_91 -> m36_92  [key=0, style=solid];
m36_91 -> m36_82  [key=2, style=dotted];
m36_91 -> m36_94  [color=darkseagreen4, key=1, label=optionMarketHoursDbEntry, style=dashed];
m36_93 -> m36_94  [key=0, style=solid];
m36_93 -> m36_84  [key=2, style=dotted];
m36_94 -> m36_95  [key=0, style=solid];
m36_94 -> m36_85  [key=2, style=dotted];
m36_94 -> m36_96  [color=darkseagreen4, key=1, label=option, style=dashed];
m36_94 -> m36_97  [color=darkseagreen4, key=1, label=option, style=dashed];
m36_92 -> m36_93  [key=0, style=solid];
m36_95 -> m36_96  [key=0, style=solid];
m36_95 -> m36_86  [key=2, style=dotted];
m36_95 -> m36_87  [key=2, style=dotted];
m36_97 -> m36_98  [key=0, style=solid];
m36_97 -> m36_88  [key=2, style=dotted];
m36_97 -> m36_87  [key=2, style=dotted];
m36_98 -> m36_89  [color=blue, key=0, style=bold];
m36_104 -> m36_105  [key=0, style=solid];
m36_104 -> m36_85  [key=2, style=dotted];
m36_104 -> m36_106  [color=darkseagreen4, key=1, label=equity, style=dashed];
m36_104 -> m36_107  [color=darkseagreen4, key=1, label=equity, style=dashed];
m36_99 -> m36_100  [key=0, style=solid];
m36_100 -> m36_101  [key=0, style=solid];
m36_100 -> m36_81  [key=2, style=dotted];
m36_100 -> m36_103  [color=darkseagreen4, key=1, label=equitySymbol, style=dashed];
m36_100 -> m36_104  [color=darkseagreen4, key=1, label=equitySymbol, style=dashed];
m36_101 -> m36_102  [key=0, style=solid];
m36_101 -> m36_82  [key=2, style=dotted];
m36_101 -> m36_104  [color=darkseagreen4, key=1, label=equityMarketHoursDbEntry, style=dashed];
m36_103 -> m36_104  [key=0, style=solid];
m36_103 -> m36_84  [key=2, style=dotted];
m36_102 -> m36_103  [key=0, style=solid];
m36_105 -> m36_106  [key=0, style=solid];
m36_105 -> m36_86  [key=2, style=dotted];
m36_105 -> m36_87  [key=2, style=dotted];
m36_106 -> m36_107  [key=0, style=solid];
m36_106 -> m36_88  [key=2, style=dotted];
m36_106 -> m36_87  [key=2, style=dotted];
m36_107 -> m36_108  [key=0, style=solid];
m36_107 -> m36_88  [key=2, style=dotted];
m36_107 -> m36_87  [key=2, style=dotted];
m36_108 -> m36_99  [color=blue, key=0, style=bold];
m36_138 -> m36_139  [key=0, style=solid];
m36_138 -> m36_151  [key=2, style=dotted];
m36_138 -> m36_140  [color=darkseagreen4, key=1, label=optionSubscriptions, style=dashed];
m36_138 -> m36_141  [color=darkseagreen4, key=1, label=optionSubscriptions, style=dashed];
m36_138 -> m36_142  [color=darkseagreen4, key=1, label=optionSubscriptions, style=dashed];
m36_138 -> m36_143  [color=darkseagreen4, key=1, label=optionSubscriptions, style=dashed];
m36_131 -> m36_132  [key=0, style=solid];
m36_132 -> m36_133  [key=0, style=solid];
m36_132 -> m36_11  [key=2, style=dotted];
m36_132 -> m36_145  [key=2, style=dotted];
m36_133 -> m36_134  [key=0, style=solid];
m36_133 -> m36_11  [key=2, style=dotted];
m36_133 -> m36_146  [key=2, style=dotted];
m36_134 -> m36_135  [key=0, style=solid];
m36_134 -> m36_147  [key=2, style=dotted];
m36_134 -> m36_136  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m36_134 -> m36_138  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m36_134 -> m36_139  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m36_135 -> m36_136  [key=0, style=solid];
m36_135 -> m36_130  [key=2, style=dotted];
m36_135 -> m36_138  [color=darkseagreen4, key=1, label=optionMarketHoursDbEntry, style=dashed];
m36_136 -> m36_137  [key=0, style=solid];
m36_136 -> m36_148  [key=2, style=dotted];
m36_136 -> m36_138  [color=darkseagreen4, key=1, label=optionSymbolProperties, style=dashed];
m36_139 -> m36_140  [key=0, style=solid];
m36_139 -> m36_152  [key=2, style=dotted];
m36_139 -> m36_153  [key=2, style=dotted];
m36_137 -> m36_138  [key=0, style=solid];
m36_137 -> m36_149  [key=2, style=dotted];
m36_137 -> m36_150  [key=2, style=dotted];
m36_140 -> m36_141  [key=0, style=solid];
m36_140 -> m36_86  [key=2, style=dotted];
m36_140 -> m36_87  [key=2, style=dotted];
m36_141 -> m36_142  [key=0, style=solid];
m36_141 -> m36_154  [key=2, style=dotted];
m36_141 -> m36_41  [key=2, style=dotted];
m36_141 -> m36_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_142 -> m36_143  [key=0, style=solid];
m36_142 -> m36_154  [key=2, style=dotted];
m36_142 -> m36_41  [key=2, style=dotted];
m36_142 -> m36_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_143 -> m36_144  [key=0, style=solid];
m36_143 -> m36_154  [key=2, style=dotted];
m36_143 -> m36_41  [key=2, style=dotted];
m36_143 -> m36_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_144 -> m36_131  [color=blue, key=0, style=bold];
m36_56 -> m36_57  [key=0, style=solid];
m36_57 -> m36_58  [key=0, style=solid];
m36_57 -> m36_10  [key=2, style=dotted];
m36_57 -> m36_11  [key=2, style=dotted];
m36_58 -> m36_59  [key=0, style=solid];
m36_58 -> m36_12  [key=2, style=dotted];
m36_58 -> m36_60  [color=darkseagreen4, key=1, label=manager, style=dashed];
m36_58 -> m36_61  [color=darkseagreen4, key=1, label=manager, style=dashed];
m36_58 -> m36_62  [color=darkseagreen4, key=1, label=manager, style=dashed];
m36_59 -> m36_60  [key=0, style=solid];
m36_59 -> m36_26  [key=2, style=dotted];
m36_59 -> m36_27  [key=2, style=dotted];
m36_59 -> m36_28  [key=2, style=dotted];
m36_59 -> m36_29  [key=2, style=dotted];
m36_59 -> m36_30  [key=2, style=dotted];
m36_59 -> m36_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_59 -> m36_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_59 -> m36_62  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_60 -> m36_61  [key=0, style=solid];
m36_60 -> m36_31  [key=2, style=dotted];
m36_61 -> m36_62  [key=0, style=solid];
m36_61 -> m36_66  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_61 -> m36_68  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m36_62 -> m36_63  [key=0, style=solid];
m36_62 -> m36_64  [key=2, style=dotted];
m36_63 -> m36_56  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_10  [key=2, style=dotted];
m36_1 -> m36_11  [key=2, style=dotted];
m36_1 -> m36_5  [color=darkseagreen4, key=1, label=timeKeeper, style=dashed];
m36_2 -> m36_3  [key=0, style=solid];
m36_2 -> m36_12  [key=2, style=dotted];
m36_5 -> m36_6  [key=0, style=solid];
m36_5 -> m36_15  [key=2, style=dotted];
m36_5 -> m36_16  [key=2, style=dotted];
m36_3 -> m36_4  [key=0, style=solid];
m36_3 -> m36_13  [key=2, style=dotted];
m36_4 -> m36_5  [key=0, style=solid];
m36_4 -> m36_14  [key=2, style=dotted];
m36_6 -> m36_7  [key=0, style=solid];
m36_6 -> m36_17  [key=2, style=dotted];
m36_7 -> m36_8  [key=0, style=solid];
m36_7 -> m36_18  [key=2, style=dotted];
m36_8 -> m36_9  [key=0, style=solid];
m36_9 -> m36_0  [color=blue, key=0, style=bold];
m36_76 -> m36_77  [color=red, key=0, style=solid];
m36_76 -> m36_85  [color=red, key=2, style=dotted];
m36_76 -> m36_78  [color=red, key=1, label=forex, style=dashed];
m36_76 -> m36_79  [color=red, key=1, label=forex, style=dashed];
m36_71 -> m36_72  [color=red, key=0, style=solid];
m36_72 -> m36_73  [color=red, key=0, style=solid];
m36_72 -> m36_81  [color=red, key=2, style=dotted];
m36_72 -> m36_74  [color=red, key=1, label=forexSymbol, style=dashed];
m36_72 -> m36_75  [color=red, key=1, label=forexSymbol, style=dashed];
m36_72 -> m36_76  [color=red, key=1, label=forexSymbol, style=dashed];
m36_73 -> m36_74  [color=red, key=0, style=solid];
m36_73 -> m36_82  [color=red, key=2, style=dotted];
m36_73 -> m36_76  [color=red, key=1, label=forexMarketHoursDbEntry, style=dashed];
m36_74 -> m36_75  [color=red, key=0, style=solid];
m36_74 -> m36_83  [color=red, key=2, style=dotted];
m36_75 -> m36_76  [color=red, key=0, style=solid];
m36_75 -> m36_84  [color=red, key=2, style=dotted];
m36_77 -> m36_78  [color=red, key=0, style=solid];
m36_77 -> m36_86  [color=red, key=2, style=dotted];
m36_77 -> m36_87  [color=red, key=2, style=dotted];
m36_78 -> m36_79  [color=red, key=0, style=solid];
m36_78 -> m36_88  [color=red, key=2, style=dotted];
m36_78 -> m36_87  [color=red, key=2, style=dotted];
m36_79 -> m36_80  [color=red, key=0, style=solid];
m36_79 -> m36_88  [color=red, key=2, style=dotted];
m36_79 -> m36_87  [color=red, key=2, style=dotted];
m36_80 -> m36_71  [color=blue, key=0, style=bold];
m36_218 -> m36_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_22  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_46  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_59  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_73  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_75  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_76  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_91  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_93  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_94  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_101  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_103  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_104  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_111  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_113  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_114  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_121  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_123  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_135  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_136  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_138  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_167  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_168  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_218 -> m36_170  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m36_219 -> m36_33  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_220 -> m36_51  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_221 -> m36_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_222 -> m36_200  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_222 -> m36_204  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_222 -> m36_207  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_222 -> m36_210  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m36_222 -> m36_213  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m37_0 -> m37_1  [key=0, style=solid];
m37_0 -> m37_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_1 -> m37_2  [key=0, style=solid];
m37_1 -> m37_3  [key=0, style=solid];
m37_1 -> m37_4  [key=2, style=dotted];
m37_2 -> m37_3  [key=0, style=solid];
m37_2 -> m37_5  [key=2, style=dotted];
m37_3 -> m37_0  [color=blue, key=0, style=bold];
m37_6 -> m37_7  [key=0, style=solid];
m37_6 -> m37_8  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m37_6 -> m37_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_7 -> m37_8  [key=0, style=solid];
m37_7 -> m37_11  [key=2, style=dotted];
m37_7 -> m37_9  [color=darkseagreen4, key=1, label=e, style=dashed];
m37_8 -> m37_9  [key=0, style=solid];
m37_8 -> m37_11  [key=2, style=dotted];
m37_9 -> m37_10  [key=0, style=solid];
m37_9 -> m37_12  [key=2, style=dotted];
m37_9 -> m37_13  [key=2, style=dotted];
m37_10 -> m37_6  [color=blue, key=0, style=bold];
m38_317 -> m38_318  [key=0, style=solid];
m38_318 -> m38_319  [key=0, style=solid];
m38_318 -> m38_30  [key=2, style=dotted];
m38_318 -> m38_320  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_318 -> m38_322  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_318 -> m38_323  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_318 -> m38_327  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_319 -> m38_320  [key=0, style=solid];
m38_319 -> m38_37  [key=2, style=dotted];
m38_320 -> m38_321  [key=0, style=solid];
m38_320 -> m38_38  [key=2, style=dotted];
m38_320 -> m38_325  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_320 -> m38_326  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_322 -> m38_323  [key=0, style=solid];
m38_322 -> m38_31  [key=2, style=dotted];
m38_322 -> m38_200  [key=2, style=dotted];
m38_322 -> m38_33  [key=2, style=dotted];
m38_322 -> m38_34  [key=2, style=dotted];
m38_322 -> m38_36  [key=2, style=dotted];
m38_323 -> m38_324  [key=0, style=solid];
m38_323 -> m38_257  [key=2, style=dotted];
m38_327 -> m38_328  [key=0, style=solid];
m38_327 -> m38_28  [key=2, style=dotted];
m38_321 -> m38_322  [key=0, style=solid];
m38_321 -> m38_274  [key=2, style=dotted];
m38_325 -> m38_326  [key=0, style=solid];
m38_325 -> m38_209  [key=2, style=dotted];
m38_326 -> m38_327  [key=0, style=solid];
m38_326 -> m38_28  [key=2, style=dotted];
m38_324 -> m38_325  [key=0, style=solid];
m38_324 -> m38_275  [key=2, style=dotted];
m38_328 -> m38_317  [color=blue, key=0, style=bold];
m38_486 -> m38_487  [key=0, style=solid];
m38_487 -> m38_488  [key=0, style=solid];
m38_487 -> m38_513  [key=2, style=dotted];
m38_487 -> m38_492  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_487 -> m38_493  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_488 -> m38_489  [key=0, style=solid];
m38_488 -> m38_30  [key=2, style=dotted];
m38_488 -> m38_491  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_488 -> m38_492  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_488 -> m38_496  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_488 -> m38_497  [color=red, key=1, label=securities, style=dashed];
m38_488 -> m38_498  [color=red, key=1, label=securities, style=dashed];
m38_488 -> m38_499  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_488 -> m38_500  [color=red, key=1, label=securities, style=dashed];
m38_488 -> m38_501  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_488 -> m38_503  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_488 -> m38_507  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_488 -> m38_511  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_492 -> m38_493  [key=0, style=solid];
m38_493 -> m38_494  [key=0, style=solid];
m38_493 -> m38_515  [key=2, style=dotted];
m38_493 -> m38_516  [key=2, style=dotted];
m38_493 -> m38_517  [key=2, style=dotted];
m38_489 -> m38_490  [key=0, style=solid];
m38_489 -> m38_37  [key=2, style=dotted];
m38_489 -> m38_491  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_489 -> m38_494  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_489 -> m38_500  [color=red, key=1, label=transactions, style=dashed];
m38_489 -> m38_502  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_491 -> m38_492  [key=0, style=solid];
m38_491 -> m38_38  [key=2, style=dotted];
m38_491 -> m38_495  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_491 -> m38_506  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_491 -> m38_508  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_496 -> m38_497  [color=red, key=0, style=solid];
m38_496 -> m38_31  [key=2, style=dotted];
m38_496 -> m38_200  [key=2, style=dotted];
m38_496 -> m38_33  [key=2, style=dotted];
m38_496 -> m38_34  [key=2, style=dotted];
m38_496 -> m38_36  [key=2, style=dotted];
m38_497 -> m38_498  [color=red, key=0, style=solid];
m38_497 -> m38_518  [color=red, key=2, style=dotted];
m38_497 -> m38_200  [color=red, key=2, style=dotted];
m38_497 -> m38_33  [color=red, key=2, style=dotted];
m38_497 -> m38_519  [color=red, key=2, style=dotted];
m38_497 -> m38_36  [color=red, key=2, style=dotted];
m38_498 -> m38_499  [color=red, key=0, style=solid];
m38_498 -> m38_257  [color=red, key=2, style=dotted];
m38_499 -> m38_500  [color=red, key=0, style=solid];
m38_499 -> m38_520  [key=2, style=dotted];
m38_499 -> m38_44  [key=2, style=dotted];
m38_500 -> m38_501  [color=red, key=0, style=solid];
m38_500 -> m38_205  [color=red, key=2, style=dotted];
m38_500 -> m38_521  [color=red, key=2, style=dotted];
m38_501 -> m38_502  [key=0, style=solid];
m38_501 -> m38_503  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_501 -> m38_504  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_503 -> m38_504  [key=0, style=solid];
m38_507 -> m38_508  [key=0, style=solid];
m38_507 -> m38_509  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_507 -> m38_510  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_511 -> m38_512  [key=0, style=solid];
m38_511 -> m38_28  [key=2, style=dotted];
m38_490 -> m38_491  [key=0, style=solid];
m38_490 -> m38_514  [key=2, style=dotted];
m38_490 -> m38_493  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_490 -> m38_494  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_494 -> m38_495  [key=0, style=solid];
m38_494 -> m38_198  [key=2, style=dotted];
m38_502 -> m38_503  [key=0, style=solid];
m38_502 -> m38_522  [key=2, style=dotted];
m38_502 -> m38_523  [key=2, style=dotted];
m38_502 -> m38_525  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_502 -> m38_504  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_495 -> m38_496  [key=0, style=solid];
m38_495 -> m38_274  [key=2, style=dotted];
m38_506 -> m38_505  [key=0, style=solid];
m38_506 -> m38_209  [key=2, style=dotted];
m38_508 -> m38_509  [key=0, style=solid];
m38_508 -> m38_28  [key=2, style=dotted];
m38_504 -> m38_505  [key=0, style=solid];
m38_504 -> m38_524  [key=2, style=dotted];
m38_505 -> m38_506  [key=0, style=solid];
m38_505 -> m38_507  [key=0, style=solid];
m38_509 -> m38_510  [key=0, style=solid];
m38_509 -> m38_28  [key=2, style=dotted];
m38_510 -> m38_511  [key=0, style=solid];
m38_510 -> m38_28  [key=2, style=dotted];
m38_512 -> m38_486  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_3  [color=darkseagreen4, key=1, label=fillsFile, style=dashed];
m38_1 -> m38_1  [color=darkorchid, key=3, label="Local variable string fillsFile", style=bold];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_4  [color=darkseagreen4, key=1, label=equityFile, style=dashed];
m38_2 -> m38_2  [color=darkorchid, key=3, label="Local variable string equityFile", style=bold];
m38_3 -> m38_4  [key=0, style=solid];
m38_3 -> m38_24  [key=2, style=dotted];
m38_3 -> m38_25  [key=2, style=dotted];
m38_3 -> m38_26  [key=2, style=dotted];
m38_3 -> m38_27  [key=2, style=dotted];
m38_3 -> m38_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_3 -> m38_5  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_3 -> m38_15  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_3 -> m38_16  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_24  [key=2, style=dotted];
m38_4 -> m38_25  [key=2, style=dotted];
m38_4 -> m38_26  [key=2, style=dotted];
m38_4 -> m38_27  [key=2, style=dotted];
m38_4 -> m38_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_4 -> m38_13  [color=darkseagreen4, key=1, label=equity, style=dashed];
m38_4 -> m38_21  [color=darkseagreen4, key=1, label=equity, style=dashed];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_28  [key=2, style=dotted];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_23  [key=0, style=solid];
m38_15 -> m38_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m38_16 -> m38_17  [key=0, style=solid];
m38_16 -> m38_20  [color=darkseagreen4, key=1, label=fill, style=dashed];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_39  [key=2, style=dotted];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_28  [key=2, style=dotted];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_29  [key=2, style=dotted];
m38_6 -> m38_8  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_30  [key=2, style=dotted];
m38_7 -> m38_10  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_7 -> m38_11  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_7 -> m38_12  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_31  [key=2, style=dotted];
m38_8 -> m38_32  [key=2, style=dotted];
m38_8 -> m38_33  [key=2, style=dotted];
m38_8 -> m38_34  [key=2, style=dotted];
m38_8 -> m38_10  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_8 -> m38_19  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_10 -> m38_11  [key=0, style=solid];
m38_10 -> m38_36  [key=2, style=dotted];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_37  [key=2, style=dotted];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_38  [key=2, style=dotted];
m38_12 -> m38_20  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_12 -> m38_21  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_9 -> m38_10  [key=0, style=solid];
m38_9 -> m38_35  [key=2, style=dotted];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_43  [key=2, style=dotted];
m38_19 -> m38_44  [key=2, style=dotted];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_45  [key=2, style=dotted];
m38_14 -> m38_15  [key=0, style=solid];
m38_14 -> m38_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_14 -> m38_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_14 -> m38_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_14 -> m38_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_14 -> m38_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_17 -> m38_18  [key=0, style=solid];
m38_17 -> m38_40  [key=2, style=dotted];
m38_17 -> m38_19  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_22 -> m38_15  [key=0, style=solid];
m38_22 -> m38_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_18 -> m38_19  [key=0, style=solid];
m38_18 -> m38_41  [key=2, style=dotted];
m38_18 -> m38_42  [key=2, style=dotted];
m38_23 -> m38_0  [color=blue, key=0, style=bold];
m38_259 -> m38_260  [key=0, style=solid];
m38_260 -> m38_261  [key=0, style=solid];
m38_260 -> m38_30  [key=2, style=dotted];
m38_260 -> m38_262  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_260 -> m38_264  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_260 -> m38_268  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_260 -> m38_272  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_261 -> m38_262  [key=0, style=solid];
m38_261 -> m38_37  [key=2, style=dotted];
m38_262 -> m38_263  [key=0, style=solid];
m38_262 -> m38_38  [key=2, style=dotted];
m38_262 -> m38_266  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_262 -> m38_267  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_262 -> m38_270  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_262 -> m38_271  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_264 -> m38_265  [key=0, style=solid];
m38_264 -> m38_31  [key=2, style=dotted];
m38_264 -> m38_200  [key=2, style=dotted];
m38_264 -> m38_33  [key=2, style=dotted];
m38_264 -> m38_34  [key=2, style=dotted];
m38_264 -> m38_36  [key=2, style=dotted];
m38_268 -> m38_269  [key=0, style=solid];
m38_268 -> m38_28  [key=2, style=dotted];
m38_272 -> m38_273  [key=0, style=solid];
m38_272 -> m38_28  [key=2, style=dotted];
m38_263 -> m38_264  [key=0, style=solid];
m38_263 -> m38_274  [key=2, style=dotted];
m38_266 -> m38_267  [key=0, style=solid];
m38_266 -> m38_209  [key=2, style=dotted];
m38_267 -> m38_268  [key=0, style=solid];
m38_267 -> m38_28  [key=2, style=dotted];
m38_270 -> m38_271  [key=0, style=solid];
m38_270 -> m38_209  [key=2, style=dotted];
m38_271 -> m38_272  [key=0, style=solid];
m38_271 -> m38_28  [key=2, style=dotted];
m38_265 -> m38_266  [key=0, style=solid];
m38_265 -> m38_275  [key=2, style=dotted];
m38_269 -> m38_270  [key=0, style=solid];
m38_269 -> m38_275  [key=2, style=dotted];
m38_273 -> m38_259  [color=blue, key=0, style=bold];
m38_446 -> m38_447  [key=0, style=solid];
m38_447 -> m38_448  [key=0, style=solid];
m38_447 -> m38_449  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m38_447 -> m38_459  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m38_447 -> m38_180  [color=darkorchid, key=3, label="Local variable decimal leverage", style=bold];
m38_448 -> m38_449  [key=0, style=solid];
m38_448 -> m38_455  [color=darkseagreen4, key=1, label=amount, style=dashed];
m38_448 -> m38_133  [color=darkorchid, key=3, label="Local variable int amount", style=bold];
m38_449 -> m38_450  [key=0, style=solid];
m38_449 -> m38_463  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_449 -> m38_464  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_449 -> m38_473  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_449 -> m38_479  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_449 -> m38_482  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_449 -> m38_409  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m38_459 -> m38_460  [key=0, style=solid];
m38_459 -> m38_35  [key=2, style=dotted];
m38_455 -> m38_456  [key=0, style=solid];
m38_455 -> m38_199  [key=2, style=dotted];
m38_450 -> m38_451  [key=0, style=solid];
m38_450 -> m38_30  [key=2, style=dotted];
m38_450 -> m38_454  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_450 -> m38_457  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_450 -> m38_458  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_463 -> m38_464  [key=0, style=solid];
m38_463 -> m38_202  [key=2, style=dotted];
m38_463 -> m38_465  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_463 -> m38_466  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_464 -> m38_465  [key=0, style=solid];
m38_464 -> m38_203  [key=2, style=dotted];
m38_464 -> m38_469  [color=darkseagreen4, key=1, label=fill, style=dashed];
m38_473 -> m38_474  [key=0, style=solid];
m38_473 -> m38_202  [key=2, style=dotted];
m38_473 -> m38_210  [key=2, style=dotted];
m38_479 -> m38_480  [key=0, style=solid];
m38_479 -> m38_202  [key=2, style=dotted];
m38_479 -> m38_210  [key=2, style=dotted];
m38_482 -> m38_483  [key=0, style=solid];
m38_482 -> m38_202  [key=2, style=dotted];
m38_482 -> m38_210  [key=2, style=dotted];
m38_451 -> m38_452  [key=0, style=solid];
m38_451 -> m38_37  [key=2, style=dotted];
m38_451 -> m38_453  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_451 -> m38_454  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_451 -> m38_471  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_451 -> m38_474  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_451 -> m38_480  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_451 -> m38_483  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_454 -> m38_455  [key=0, style=solid];
m38_454 -> m38_38  [key=2, style=dotted];
m38_454 -> m38_469  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_454 -> m38_471  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_454 -> m38_474  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_454 -> m38_480  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_454 -> m38_483  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_457 -> m38_458  [key=0, style=solid];
m38_457 -> m38_31  [key=2, style=dotted];
m38_457 -> m38_33  [key=2, style=dotted];
m38_457 -> m38_34  [key=2, style=dotted];
m38_457 -> m38_111  [key=2, style=dotted];
m38_458 -> m38_459  [key=0, style=solid];
m38_458 -> m38_462  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_458 -> m38_466  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_458 -> m38_478  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_452 -> m38_453  [key=0, style=solid];
m38_452 -> m38_197  [key=2, style=dotted];
m38_452 -> m38_465  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_452 -> m38_468  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_453 -> m38_454  [key=0, style=solid];
m38_453 -> m38_198  [key=2, style=dotted];
m38_471 -> m38_472  [key=0, style=solid];
m38_471 -> m38_211  [key=2, style=dotted];
m38_474 -> m38_475  [key=0, style=solid];
m38_474 -> m38_211  [key=2, style=dotted];
m38_480 -> m38_481  [key=0, style=solid];
m38_480 -> m38_211  [key=2, style=dotted];
m38_483 -> m38_484  [key=0, style=solid];
m38_483 -> m38_211  [key=2, style=dotted];
m38_465 -> m38_466  [key=0, style=solid];
m38_465 -> m38_204  [key=2, style=dotted];
m38_468 -> m38_469  [key=0, style=solid];
m38_468 -> m38_207  [key=2, style=dotted];
m38_468 -> m38_208  [key=2, style=dotted];
m38_469 -> m38_470  [key=0, style=solid];
m38_469 -> m38_209  [key=2, style=dotted];
m38_456 -> m38_457  [key=0, style=solid];
m38_456 -> m38_200  [key=2, style=dotted];
m38_462 -> m38_463  [key=0, style=solid];
m38_462 -> m38_201  [key=2, style=dotted];
m38_462 -> m38_44  [key=2, style=dotted];
m38_466 -> m38_467  [key=0, style=solid];
m38_466 -> m38_205  [key=2, style=dotted];
m38_466 -> m38_468  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_478 -> m38_479  [key=0, style=solid];
m38_478 -> m38_201  [key=2, style=dotted];
m38_478 -> m38_44  [key=2, style=dotted];
m38_460 -> m38_461  [key=0, style=solid];
m38_460 -> m38_462  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_460 -> m38_463  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_460 -> m38_470  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_460 -> m38_473  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_460 -> m38_476  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_461 -> m38_462  [key=0, style=solid];
m38_461 -> m38_463  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m38_461 -> m38_464  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m38_461 -> m38_470  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m38_461 -> m38_473  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m38_461 -> m38_477  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m38_461 -> m38_132  [color=darkorchid, key=3, label="Local variable decimal sellPrice", style=bold];
m38_470 -> m38_471  [key=0, style=solid];
m38_470 -> m38_202  [key=2, style=dotted];
m38_470 -> m38_210  [key=2, style=dotted];
m38_476 -> m38_477  [key=0, style=solid];
m38_476 -> m38_40  [key=2, style=dotted];
m38_476 -> m38_476  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_476 -> m38_478  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_476 -> m38_479  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_476 -> m38_482  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_477 -> m38_478  [key=0, style=solid];
m38_477 -> m38_479  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m38_477 -> m38_482  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m38_477 -> m38_180  [color=darkorchid, key=3, label="Local variable decimal highPrice", style=bold];
m38_467 -> m38_468  [key=0, style=solid];
m38_467 -> m38_206  [key=2, style=dotted];
m38_472 -> m38_473  [key=0, style=solid];
m38_472 -> m38_212  [key=2, style=dotted];
m38_475 -> m38_476  [key=0, style=solid];
m38_475 -> m38_213  [key=2, style=dotted];
m38_481 -> m38_482  [key=0, style=solid];
m38_481 -> m38_213  [key=2, style=dotted];
m38_484 -> m38_485  [key=0, style=solid];
m38_484 -> m38_212  [key=2, style=dotted];
m38_485 -> m38_446  [color=blue, key=0, style=bold];
m38_680 -> m38_681  [key=0, style=solid];
m38_681 -> m38_682  [key=0, style=solid];
m38_681 -> m38_513  [key=2, style=dotted];
m38_681 -> m38_686  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_681 -> m38_687  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_682 -> m38_683  [key=0, style=solid];
m38_682 -> m38_30  [key=2, style=dotted];
m38_682 -> m38_685  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_682 -> m38_686  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_682 -> m38_690  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_682 -> m38_691  [color=red, key=1, label=securities, style=dashed];
m38_682 -> m38_692  [color=red, key=1, label=securities, style=dashed];
m38_682 -> m38_693  [color=red, key=1, label=securities, style=dashed];
m38_682 -> m38_694  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_682 -> m38_696  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_682 -> m38_701  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_682 -> m38_705  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_686 -> m38_687  [key=0, style=solid];
m38_687 -> m38_688  [key=0, style=solid];
m38_687 -> m38_515  [key=2, style=dotted];
m38_687 -> m38_516  [key=2, style=dotted];
m38_687 -> m38_517  [key=2, style=dotted];
m38_683 -> m38_684  [key=0, style=solid];
m38_683 -> m38_37  [key=2, style=dotted];
m38_683 -> m38_685  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_683 -> m38_688  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_683 -> m38_693  [color=red, key=1, label=transactions, style=dashed];
m38_683 -> m38_695  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_685 -> m38_686  [key=0, style=solid];
m38_685 -> m38_38  [key=2, style=dotted];
m38_685 -> m38_689  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_685 -> m38_700  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_685 -> m38_702  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_690 -> m38_691  [color=red, key=0, style=solid];
m38_690 -> m38_31  [key=2, style=dotted];
m38_690 -> m38_200  [key=2, style=dotted];
m38_690 -> m38_33  [key=2, style=dotted];
m38_690 -> m38_34  [key=2, style=dotted];
m38_690 -> m38_36  [key=2, style=dotted];
m38_691 -> m38_692  [color=red, key=0, style=solid];
m38_691 -> m38_518  [color=red, key=2, style=dotted];
m38_691 -> m38_200  [color=red, key=2, style=dotted];
m38_691 -> m38_33  [color=red, key=2, style=dotted];
m38_691 -> m38_519  [color=red, key=2, style=dotted];
m38_691 -> m38_36  [color=red, key=2, style=dotted];
m38_692 -> m38_693  [color=red, key=0, style=solid];
m38_692 -> m38_257  [color=red, key=2, style=dotted];
m38_693 -> m38_694  [color=red, key=0, style=solid];
m38_693 -> m38_205  [color=red, key=2, style=dotted];
m38_693 -> m38_521  [color=red, key=2, style=dotted];
m38_694 -> m38_695  [key=0, style=solid];
m38_694 -> m38_696  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_694 -> m38_697  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_694 -> m38_698  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_694 -> m38_700  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_696 -> m38_697  [key=0, style=solid];
m38_701 -> m38_702  [key=0, style=solid];
m38_701 -> m38_703  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_701 -> m38_704  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_705 -> m38_706  [key=0, style=solid];
m38_705 -> m38_28  [key=2, style=dotted];
m38_684 -> m38_685  [key=0, style=solid];
m38_684 -> m38_514  [key=2, style=dotted];
m38_684 -> m38_687  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_684 -> m38_688  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_688 -> m38_689  [key=0, style=solid];
m38_688 -> m38_198  [key=2, style=dotted];
m38_695 -> m38_696  [key=0, style=solid];
m38_695 -> m38_522  [key=2, style=dotted];
m38_695 -> m38_523  [key=2, style=dotted];
m38_695 -> m38_707  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_695 -> m38_697  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_689 -> m38_690  [key=0, style=solid];
m38_689 -> m38_274  [key=2, style=dotted];
m38_700 -> m38_699  [key=0, style=solid];
m38_700 -> m38_676  [key=2, style=dotted];
m38_702 -> m38_703  [key=0, style=solid];
m38_702 -> m38_28  [key=2, style=dotted];
m38_697 -> m38_698  [key=0, style=solid];
m38_697 -> m38_524  [key=2, style=dotted];
m38_697 -> m38_699  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_698 -> m38_699  [key=0, style=solid];
m38_698 -> m38_700  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m38_699 -> m38_700  [key=0, style=solid];
m38_699 -> m38_701  [key=0, style=solid];
m38_703 -> m38_704  [key=0, style=solid];
m38_703 -> m38_28  [key=2, style=dotted];
m38_704 -> m38_705  [key=0, style=solid];
m38_704 -> m38_28  [key=2, style=dotted];
m38_706 -> m38_680  [color=blue, key=0, style=bold];
m38_921 -> m38_922  [key=0, style=solid];
m38_922 -> m38_923  [key=0, style=solid];
m38_922 -> m38_513  [key=2, style=dotted];
m38_922 -> m38_927  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_922 -> m38_928  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_923 -> m38_924  [key=0, style=solid];
m38_923 -> m38_30  [key=2, style=dotted];
m38_923 -> m38_926  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_923 -> m38_927  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_923 -> m38_931  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_923 -> m38_932  [color=red, key=1, label=securities, style=dashed];
m38_923 -> m38_933  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_923 -> m38_934  [color=red, key=1, label=securities, style=dashed];
m38_923 -> m38_935  [color=red, key=1, label=securities, style=dashed];
m38_923 -> m38_936  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_923 -> m38_938  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_923 -> m38_944  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_923 -> m38_946  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_923 -> m38_947  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_927 -> m38_928  [key=0, style=solid];
m38_928 -> m38_929  [key=0, style=solid];
m38_928 -> m38_515  [key=2, style=dotted];
m38_928 -> m38_516  [key=2, style=dotted];
m38_928 -> m38_517  [key=2, style=dotted];
m38_924 -> m38_925  [key=0, style=solid];
m38_924 -> m38_37  [key=2, style=dotted];
m38_924 -> m38_926  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_924 -> m38_929  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_924 -> m38_935  [color=red, key=1, label=transactions, style=dashed];
m38_924 -> m38_937  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_926 -> m38_927  [key=0, style=solid];
m38_926 -> m38_38  [key=2, style=dotted];
m38_926 -> m38_930  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_926 -> m38_943  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_926 -> m38_945  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_931 -> m38_932  [color=red, key=0, style=solid];
m38_931 -> m38_31  [key=2, style=dotted];
m38_931 -> m38_200  [key=2, style=dotted];
m38_931 -> m38_33  [key=2, style=dotted];
m38_931 -> m38_34  [key=2, style=dotted];
m38_931 -> m38_36  [key=2, style=dotted];
m38_932 -> m38_933  [color=red, key=0, style=solid];
m38_932 -> m38_518  [color=red, key=2, style=dotted];
m38_932 -> m38_200  [color=red, key=2, style=dotted];
m38_932 -> m38_33  [color=red, key=2, style=dotted];
m38_932 -> m38_519  [color=red, key=2, style=dotted];
m38_932 -> m38_36  [color=red, key=2, style=dotted];
m38_933 -> m38_934  [color=red, key=0, style=solid];
m38_933 -> m38_258  [key=2, style=dotted];
m38_933 -> m38_44  [key=2, style=dotted];
m38_934 -> m38_935  [color=red, key=0, style=solid];
m38_934 -> m38_257  [color=red, key=2, style=dotted];
m38_935 -> m38_936  [color=red, key=0, style=solid];
m38_935 -> m38_205  [color=red, key=2, style=dotted];
m38_935 -> m38_521  [color=red, key=2, style=dotted];
m38_936 -> m38_937  [key=0, style=solid];
m38_936 -> m38_938  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_936 -> m38_939  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_936 -> m38_940  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_936 -> m38_941  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_936 -> m38_943  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_938 -> m38_939  [key=0, style=solid];
m38_944 -> m38_945  [key=0, style=solid];
m38_946 -> m38_947  [key=0, style=solid];
m38_946 -> m38_28  [key=2, style=dotted];
m38_947 -> m38_948  [key=0, style=solid];
m38_947 -> m38_28  [key=2, style=dotted];
m38_925 -> m38_926  [key=0, style=solid];
m38_925 -> m38_514  [key=2, style=dotted];
m38_925 -> m38_928  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_925 -> m38_929  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_929 -> m38_930  [key=0, style=solid];
m38_929 -> m38_198  [key=2, style=dotted];
m38_937 -> m38_938  [key=0, style=solid];
m38_937 -> m38_522  [key=2, style=dotted];
m38_937 -> m38_523  [key=2, style=dotted];
m38_937 -> m38_949  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_937 -> m38_940  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_930 -> m38_931  [key=0, style=solid];
m38_930 -> m38_274  [key=2, style=dotted];
m38_943 -> m38_942  [key=0, style=solid];
m38_943 -> m38_676  [key=2, style=dotted];
m38_945 -> m38_946  [key=0, style=solid];
m38_945 -> m38_28  [key=2, style=dotted];
m38_939 -> m38_940  [key=0, style=solid];
m38_940 -> m38_941  [key=0, style=solid];
m38_940 -> m38_524  [key=2, style=dotted];
m38_940 -> m38_942  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_941 -> m38_942  [key=0, style=solid];
m38_941 -> m38_943  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m38_942 -> m38_943  [key=0, style=solid];
m38_942 -> m38_944  [key=0, style=solid];
m38_948 -> m38_921  [color=blue, key=0, style=bold];
m38_1093 -> m38_1094  [key=0, style=solid];
m38_46 -> m38_47  [key=0, style=solid];
m38_51 -> m38_52  [key=0, style=solid];
m38_47 -> m38_48  [key=0, style=solid];
m38_47 -> m38_49  [key=2, style=dotted];
m38_47 -> m38_50  [key=2, style=dotted];
m38_48 -> m38_46  [color=blue, key=0, style=bold];
m38_52 -> m38_53  [key=0, style=solid];
m38_52 -> m38_54  [key=2, style=dotted];
m38_53 -> m38_51  [color=blue, key=0, style=bold];
m38_119 -> m38_120  [key=0, style=solid];
m38_122 -> m38_123  [key=0, style=solid];
m38_125 -> m38_126  [key=0, style=solid];
m38_128 -> m38_129  [key=0, style=solid];
m38_120 -> m38_121  [key=0, style=solid];
m38_120 -> m38_49  [key=2, style=dotted];
m38_120 -> m38_50  [key=2, style=dotted];
m38_121 -> m38_119  [color=blue, key=0, style=bold];
m38_123 -> m38_124  [key=0, style=solid];
m38_123 -> m38_54  [key=2, style=dotted];
m38_124 -> m38_122  [color=blue, key=0, style=bold];
m38_126 -> m38_127  [key=0, style=solid];
m38_126 -> m38_54  [key=2, style=dotted];
m38_127 -> m38_125  [color=blue, key=0, style=bold];
m38_129 -> m38_130  [key=0, style=solid];
m38_129 -> m38_54  [key=2, style=dotted];
m38_130 -> m38_128  [color=blue, key=0, style=bold];
m38_525 -> m38_526  [key=0, style=solid];
m38_526 -> m38_527  [key=0, style=solid];
m38_527 -> m38_525  [color=blue, key=0, style=bold];
m38_555 -> m38_556  [key=0, style=solid];
m38_556 -> m38_557  [key=0, style=solid];
m38_557 -> m38_555  [color=blue, key=0, style=bold];
m38_586 -> m38_587  [key=0, style=solid];
m38_587 -> m38_588  [key=0, style=solid];
m38_588 -> m38_586  [color=blue, key=0, style=bold];
m38_615 -> m38_616  [key=0, style=solid];
m38_616 -> m38_617  [key=0, style=solid];
m38_617 -> m38_615  [color=blue, key=0, style=bold];
m38_645 -> m38_646  [key=0, style=solid];
m38_646 -> m38_647  [key=0, style=solid];
m38_647 -> m38_645  [color=blue, key=0, style=bold];
m38_677 -> m38_678  [key=0, style=solid];
m38_678 -> m38_679  [key=0, style=solid];
m38_679 -> m38_677  [color=blue, key=0, style=bold];
m38_707 -> m38_708  [key=0, style=solid];
m38_708 -> m38_709  [key=0, style=solid];
m38_709 -> m38_707  [color=blue, key=0, style=bold];
m38_737 -> m38_738  [key=0, style=solid];
m38_738 -> m38_739  [key=0, style=solid];
m38_739 -> m38_737  [color=blue, key=0, style=bold];
m38_766 -> m38_767  [key=0, style=solid];
m38_767 -> m38_768  [key=0, style=solid];
m38_768 -> m38_766  [color=blue, key=0, style=bold];
m38_795 -> m38_796  [key=0, style=solid];
m38_796 -> m38_797  [key=0, style=solid];
m38_797 -> m38_795  [color=blue, key=0, style=bold];
m38_824 -> m38_825  [key=0, style=solid];
m38_825 -> m38_826  [key=0, style=solid];
m38_826 -> m38_824  [color=blue, key=0, style=bold];
m38_918 -> m38_919  [key=0, style=solid];
m38_919 -> m38_920  [key=0, style=solid];
m38_920 -> m38_918  [color=blue, key=0, style=bold];
m38_949 -> m38_950  [key=0, style=solid];
m38_950 -> m38_951  [key=0, style=solid];
m38_951 -> m38_949  [color=blue, key=0, style=bold];
m38_980 -> m38_981  [key=0, style=solid];
m38_981 -> m38_982  [key=0, style=solid];
m38_982 -> m38_980  [color=blue, key=0, style=bold];
m38_1011 -> m38_1012  [key=0, style=solid];
m38_1012 -> m38_1013  [key=0, style=solid];
m38_1013 -> m38_1011  [color=blue, key=0, style=bold];
m38_1042 -> m38_1043  [key=0, style=solid];
m38_1043 -> m38_1044  [key=0, style=solid];
m38_1044 -> m38_1042  [color=blue, key=0, style=bold];
m38_1075 -> m38_1076  [key=0, style=solid];
m38_1075 -> m38_1077  [key=2, style=dotted];
m38_1074 -> m38_1075  [key=0, style=solid];
m38_1076 -> m38_1074  [color=blue, key=0, style=bold];
m38_1082 -> m38_1083  [key=0, style=solid];
m38_1083 -> m38_1084  [key=0, style=solid];
m38_1084 -> m38_1082  [color=blue, key=0, style=bold];
m38_1094 -> m38_1095  [key=0, style=solid];
m38_1095 -> m38_1093  [color=blue, key=0, style=bold];
m38_329 -> m38_330  [key=0, style=solid];
m38_330 -> m38_331  [key=0, style=solid];
m38_330 -> m38_30  [key=2, style=dotted];
m38_330 -> m38_332  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_330 -> m38_334  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_330 -> m38_335  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_330 -> m38_337  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_330 -> m38_340  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_331 -> m38_332  [key=0, style=solid];
m38_331 -> m38_37  [key=2, style=dotted];
m38_332 -> m38_333  [key=0, style=solid];
m38_332 -> m38_38  [key=2, style=dotted];
m38_332 -> m38_338  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_332 -> m38_339  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_334 -> m38_335  [key=0, style=solid];
m38_334 -> m38_31  [key=2, style=dotted];
m38_334 -> m38_200  [key=2, style=dotted];
m38_334 -> m38_33  [key=2, style=dotted];
m38_334 -> m38_34  [key=2, style=dotted];
m38_334 -> m38_36  [key=2, style=dotted];
m38_335 -> m38_336  [key=0, style=solid];
m38_335 -> m38_257  [key=2, style=dotted];
m38_337 -> m38_338  [key=0, style=solid];
m38_337 -> m38_28  [key=2, style=dotted];
m38_340 -> m38_341  [key=0, style=solid];
m38_340 -> m38_28  [key=2, style=dotted];
m38_333 -> m38_334  [key=0, style=solid];
m38_333 -> m38_274  [key=2, style=dotted];
m38_338 -> m38_339  [key=0, style=solid];
m38_338 -> m38_209  [key=2, style=dotted];
m38_339 -> m38_340  [key=0, style=solid];
m38_339 -> m38_28  [key=2, style=dotted];
m38_336 -> m38_337  [key=0, style=solid];
m38_336 -> m38_275  [key=2, style=dotted];
m38_336 -> m38_338  [color=darkseagreen4, key=1, label=fill, style=dashed];
m38_341 -> m38_329  [color=blue, key=0, style=bold];
m38_589 -> m38_590  [key=0, style=solid];
m38_590 -> m38_591  [key=0, style=solid];
m38_590 -> m38_513  [key=2, style=dotted];
m38_590 -> m38_595  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_590 -> m38_596  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_591 -> m38_592  [key=0, style=solid];
m38_591 -> m38_30  [key=2, style=dotted];
m38_591 -> m38_594  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_591 -> m38_595  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_591 -> m38_599  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_591 -> m38_600  [color=red, key=1, label=securities, style=dashed];
m38_591 -> m38_601  [color=red, key=1, label=securities, style=dashed];
m38_591 -> m38_602  [color=red, key=1, label=securities, style=dashed];
m38_591 -> m38_603  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_591 -> m38_605  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_591 -> m38_609  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_591 -> m38_613  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_595 -> m38_596  [key=0, style=solid];
m38_596 -> m38_597  [key=0, style=solid];
m38_596 -> m38_515  [key=2, style=dotted];
m38_596 -> m38_516  [key=2, style=dotted];
m38_596 -> m38_517  [key=2, style=dotted];
m38_592 -> m38_593  [key=0, style=solid];
m38_592 -> m38_37  [key=2, style=dotted];
m38_592 -> m38_594  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_592 -> m38_597  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_592 -> m38_602  [color=red, key=1, label=transactions, style=dashed];
m38_592 -> m38_604  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_594 -> m38_595  [key=0, style=solid];
m38_594 -> m38_38  [key=2, style=dotted];
m38_594 -> m38_598  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_594 -> m38_608  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_594 -> m38_610  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_599 -> m38_600  [color=red, key=0, style=solid];
m38_599 -> m38_31  [key=2, style=dotted];
m38_599 -> m38_200  [key=2, style=dotted];
m38_599 -> m38_33  [key=2, style=dotted];
m38_599 -> m38_34  [key=2, style=dotted];
m38_599 -> m38_36  [key=2, style=dotted];
m38_600 -> m38_601  [color=red, key=0, style=solid];
m38_600 -> m38_518  [color=red, key=2, style=dotted];
m38_600 -> m38_200  [color=red, key=2, style=dotted];
m38_600 -> m38_33  [color=red, key=2, style=dotted];
m38_600 -> m38_519  [color=red, key=2, style=dotted];
m38_600 -> m38_36  [color=red, key=2, style=dotted];
m38_601 -> m38_602  [color=red, key=0, style=solid];
m38_601 -> m38_257  [color=red, key=2, style=dotted];
m38_602 -> m38_603  [color=red, key=0, style=solid];
m38_602 -> m38_205  [color=red, key=2, style=dotted];
m38_602 -> m38_521  [color=red, key=2, style=dotted];
m38_603 -> m38_604  [key=0, style=solid];
m38_603 -> m38_605  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_603 -> m38_606  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_605 -> m38_606  [key=0, style=solid];
m38_609 -> m38_610  [key=0, style=solid];
m38_609 -> m38_611  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_609 -> m38_612  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_613 -> m38_614  [key=0, style=solid];
m38_613 -> m38_28  [key=2, style=dotted];
m38_593 -> m38_594  [key=0, style=solid];
m38_593 -> m38_514  [key=2, style=dotted];
m38_593 -> m38_596  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_593 -> m38_597  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_597 -> m38_598  [key=0, style=solid];
m38_597 -> m38_198  [key=2, style=dotted];
m38_604 -> m38_605  [key=0, style=solid];
m38_604 -> m38_522  [key=2, style=dotted];
m38_604 -> m38_523  [key=2, style=dotted];
m38_604 -> m38_615  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_604 -> m38_606  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_598 -> m38_599  [key=0, style=solid];
m38_598 -> m38_274  [key=2, style=dotted];
m38_608 -> m38_607  [key=0, style=solid];
m38_608 -> m38_209  [key=2, style=dotted];
m38_610 -> m38_611  [key=0, style=solid];
m38_610 -> m38_28  [key=2, style=dotted];
m38_606 -> m38_607  [key=0, style=solid];
m38_606 -> m38_524  [key=2, style=dotted];
m38_607 -> m38_608  [key=0, style=solid];
m38_607 -> m38_609  [key=0, style=solid];
m38_611 -> m38_612  [key=0, style=solid];
m38_611 -> m38_28  [key=2, style=dotted];
m38_612 -> m38_613  [key=0, style=solid];
m38_612 -> m38_28  [key=2, style=dotted];
m38_614 -> m38_589  [color=blue, key=0, style=bold];
m38_1085 -> m38_1086  [key=0, style=solid];
m38_1085 -> m38_1087  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_1086 -> m38_1087  [key=0, style=solid];
m38_1087 -> m38_1088  [key=0, style=solid];
m38_1087 -> m38_1069  [key=2, style=dotted];
m38_1088 -> m38_1089  [key=0, style=solid];
m38_1089 -> m38_1085  [color=blue, key=0, style=bold];
m38_55 -> m38_56  [key=0, style=solid];
m38_56 -> m38_57  [key=0, style=solid];
m38_56 -> m38_60  [color=darkseagreen4, key=1, label=fillsFile, style=dashed];
m38_56 -> m38_56  [color=darkorchid, key=3, label="Local variable string fillsFile", style=bold];
m38_57 -> m38_58  [key=0, style=solid];
m38_57 -> m38_61  [color=darkseagreen4, key=1, label=equityFile, style=dashed];
m38_57 -> m38_57  [color=darkorchid, key=3, label="Local variable string equityFile", style=bold];
m38_60 -> m38_61  [key=0, style=solid];
m38_60 -> m38_24  [key=2, style=dotted];
m38_60 -> m38_25  [key=2, style=dotted];
m38_60 -> m38_26  [key=2, style=dotted];
m38_60 -> m38_27  [key=2, style=dotted];
m38_60 -> m38_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_60 -> m38_64  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_60 -> m38_89  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_60 -> m38_90  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_58 -> m38_59  [key=0, style=solid];
m38_58 -> m38_62  [color=darkseagreen4, key=1, label=mchQuantityFile, style=dashed];
m38_58 -> m38_58  [color=darkorchid, key=3, label="Local variable string mchQuantityFile", style=bold];
m38_61 -> m38_62  [key=0, style=solid];
m38_61 -> m38_24  [key=2, style=dotted];
m38_61 -> m38_25  [key=2, style=dotted];
m38_61 -> m38_26  [key=2, style=dotted];
m38_61 -> m38_27  [key=2, style=dotted];
m38_61 -> m38_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_61 -> m38_64  [color=darkseagreen4, key=1, label=equity, style=dashed];
m38_61 -> m38_69  [color=darkseagreen4, key=1, label=equity, style=dashed];
m38_59 -> m38_60  [key=0, style=solid];
m38_59 -> m38_63  [color=darkseagreen4, key=1, label=jwbQuantityFile, style=dashed];
m38_59 -> m38_59  [color=darkorchid, key=3, label="Local variable string jwbQuantityFile", style=bold];
m38_62 -> m38_63  [key=0, style=solid];
m38_62 -> m38_24  [key=2, style=dotted];
m38_62 -> m38_25  [key=2, style=dotted];
m38_62 -> m38_26  [key=2, style=dotted];
m38_62 -> m38_27  [key=2, style=dotted];
m38_62 -> m38_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_62 -> m38_70  [color=darkseagreen4, key=1, label=mchQuantity, style=dashed];
m38_62 -> m38_104  [color=darkseagreen4, key=1, label=mchQuantity, style=dashed];
m38_63 -> m38_64  [key=0, style=solid];
m38_63 -> m38_24  [key=2, style=dotted];
m38_63 -> m38_25  [key=2, style=dotted];
m38_63 -> m38_26  [key=2, style=dotted];
m38_63 -> m38_27  [key=2, style=dotted];
m38_63 -> m38_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_63 -> m38_71  [color=darkseagreen4, key=1, label=jwbQuantity, style=dashed];
m38_63 -> m38_105  [color=darkseagreen4, key=1, label=jwbQuantity, style=dashed];
m38_64 -> m38_65  [key=0, style=solid];
m38_64 -> m38_28  [key=2, style=dotted];
m38_89 -> m38_90  [key=0, style=solid];
m38_89 -> m38_107  [key=0, style=solid];
m38_89 -> m38_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m38_90 -> m38_91  [key=0, style=solid];
m38_90 -> m38_102  [color=darkseagreen4, key=1, label=fill, style=dashed];
m38_69 -> m38_70  [key=0, style=solid];
m38_69 -> m38_39  [key=2, style=dotted];
m38_70 -> m38_71  [key=0, style=solid];
m38_70 -> m38_108  [key=2, style=dotted];
m38_104 -> m38_105  [key=0, style=solid];
m38_104 -> m38_28  [key=2, style=dotted];
m38_71 -> m38_72  [key=0, style=solid];
m38_71 -> m38_108  [key=2, style=dotted];
m38_105 -> m38_106  [key=0, style=solid];
m38_105 -> m38_28  [key=2, style=dotted];
m38_65 -> m38_66  [key=0, style=solid];
m38_65 -> m38_29  [key=2, style=dotted];
m38_65 -> m38_75  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m38_65 -> m38_77  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m38_65 -> m38_79  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m38_65 -> m38_87  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m38_66 -> m38_67  [key=0, style=solid];
m38_66 -> m38_30  [key=2, style=dotted];
m38_66 -> m38_68  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_66 -> m38_84  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_66 -> m38_85  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_66 -> m38_86  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_66 -> m38_87  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_75 -> m38_76  [key=0, style=solid];
m38_75 -> m38_109  [key=2, style=dotted];
m38_75 -> m38_32  [key=2, style=dotted];
m38_75 -> m38_34  [key=2, style=dotted];
m38_75 -> m38_81  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m38_75 -> m38_84  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m38_75 -> m38_99  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m38_77 -> m38_78  [key=0, style=solid];
m38_77 -> m38_109  [key=2, style=dotted];
m38_77 -> m38_32  [key=2, style=dotted];
m38_77 -> m38_34  [key=2, style=dotted];
m38_77 -> m38_82  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m38_77 -> m38_86  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m38_77 -> m38_99  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m38_79 -> m38_80  [key=0, style=solid];
m38_79 -> m38_109  [key=2, style=dotted];
m38_79 -> m38_32  [key=2, style=dotted];
m38_79 -> m38_34  [key=2, style=dotted];
m38_79 -> m38_83  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m38_79 -> m38_85  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m38_79 -> m38_99  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m38_87 -> m38_88  [key=0, style=solid];
m38_87 -> m38_112  [key=2, style=dotted];
m38_87 -> m38_113  [key=2, style=dotted];
m38_87 -> m38_114  [key=2, style=dotted];
m38_67 -> m38_68  [key=0, style=solid];
m38_67 -> m38_37  [key=2, style=dotted];
m38_68 -> m38_69  [key=0, style=solid];
m38_68 -> m38_38  [key=2, style=dotted];
m38_68 -> m38_70  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_71  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_72  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_73  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_74  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_87  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_102  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_103  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_104  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_68 -> m38_105  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_84 -> m38_85  [key=0, style=solid];
m38_84 -> m38_111  [key=2, style=dotted];
m38_85 -> m38_86  [key=0, style=solid];
m38_85 -> m38_111  [key=2, style=dotted];
m38_86 -> m38_87  [key=0, style=solid];
m38_86 -> m38_111  [key=2, style=dotted];
m38_72 -> m38_73  [key=0, style=solid];
m38_72 -> m38_75  [color=darkseagreen4, key=1, label=jwbCash, style=dashed];
m38_72 -> m38_96  [color=darkseagreen4, key=1, label=jwbCash, style=dashed];
m38_73 -> m38_74  [key=0, style=solid];
m38_73 -> m38_79  [color=darkseagreen4, key=1, label=mchCash, style=dashed];
m38_73 -> m38_98  [color=darkseagreen4, key=1, label=mchCash, style=dashed];
m38_74 -> m38_75  [key=0, style=solid];
m38_74 -> m38_77  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m38_74 -> m38_97  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m38_102 -> m38_103  [key=0, style=solid];
m38_102 -> m38_45  [key=2, style=dotted];
m38_103 -> m38_104  [key=0, style=solid];
m38_103 -> m38_117  [key=2, style=dotted];
m38_103 -> m38_118  [key=2, style=dotted];
m38_96 -> m38_97  [key=0, style=solid];
m38_96 -> m38_43  [key=2, style=dotted];
m38_96 -> m38_115  [key=2, style=dotted];
m38_98 -> m38_99  [key=0, style=solid];
m38_98 -> m38_43  [key=2, style=dotted];
m38_98 -> m38_115  [key=2, style=dotted];
m38_97 -> m38_98  [key=0, style=solid];
m38_97 -> m38_43  [key=2, style=dotted];
m38_97 -> m38_115  [key=2, style=dotted];
m38_76 -> m38_77  [key=0, style=solid];
m38_76 -> m38_35  [key=2, style=dotted];
m38_81 -> m38_82  [key=0, style=solid];
m38_81 -> m38_110  [key=2, style=dotted];
m38_99 -> m38_100  [key=0, style=solid];
m38_99 -> m38_116  [key=2, style=dotted];
m38_99 -> m38_43  [key=2, style=dotted];
m38_78 -> m38_79  [key=0, style=solid];
m38_78 -> m38_35  [key=2, style=dotted];
m38_82 -> m38_83  [key=0, style=solid];
m38_82 -> m38_110  [key=2, style=dotted];
m38_80 -> m38_81  [key=0, style=solid];
m38_80 -> m38_35  [key=2, style=dotted];
m38_83 -> m38_84  [key=0, style=solid];
m38_83 -> m38_110  [key=2, style=dotted];
m38_88 -> m38_89  [key=0, style=solid];
m38_88 -> m38_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_88 -> m38_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_88 -> m38_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_88 -> m38_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_88 -> m38_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_88 -> m38_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_88 -> m38_104  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_88 -> m38_105  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_88 -> m38_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_91 -> m38_92  [key=0, style=solid];
m38_91 -> m38_40  [key=2, style=dotted];
m38_91 -> m38_96  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_91 -> m38_97  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_91 -> m38_98  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_91 -> m38_99  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_92 -> m38_93  [key=0, style=solid];
m38_92 -> m38_95  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m38_92 -> m38_96  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m38_92 -> m38_99  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m38_93 -> m38_94  [key=0, style=solid];
m38_93 -> m38_95  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m38_93 -> m38_97  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m38_93 -> m38_99  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m38_94 -> m38_95  [key=0, style=solid];
m38_94 -> m38_98  [color=darkseagreen4, key=1, label=usdJwb, style=dashed];
m38_94 -> m38_99  [color=darkseagreen4, key=1, label=usdJwb, style=dashed];
m38_106 -> m38_89  [key=0, style=solid];
m38_106 -> m38_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_95 -> m38_96  [key=0, style=solid];
m38_95 -> m38_28  [key=2, style=dotted];
m38_100 -> m38_101  [key=0, style=solid];
m38_100 -> m38_102  [key=0, style=solid];
m38_101 -> m38_100  [key=0, style=solid];
m38_101 -> m38_44  [key=2, style=dotted];
m38_101 -> m38_101  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m38_107 -> m38_55  [color=blue, key=0, style=bold];
m38_798 -> m38_799  [key=0, style=solid];
m38_799 -> m38_800  [key=0, style=solid];
m38_799 -> m38_513  [key=2, style=dotted];
m38_799 -> m38_804  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_799 -> m38_805  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_800 -> m38_801  [key=0, style=solid];
m38_800 -> m38_30  [key=2, style=dotted];
m38_800 -> m38_803  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_800 -> m38_804  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_800 -> m38_808  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_800 -> m38_809  [color=red, key=1, label=securities, style=dashed];
m38_800 -> m38_810  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_800 -> m38_811  [color=red, key=1, label=securities, style=dashed];
m38_800 -> m38_812  [color=red, key=1, label=securities, style=dashed];
m38_800 -> m38_813  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_800 -> m38_815  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_800 -> m38_821  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_800 -> m38_822  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_804 -> m38_805  [key=0, style=solid];
m38_805 -> m38_806  [key=0, style=solid];
m38_805 -> m38_515  [key=2, style=dotted];
m38_805 -> m38_516  [key=2, style=dotted];
m38_805 -> m38_517  [key=2, style=dotted];
m38_801 -> m38_802  [key=0, style=solid];
m38_801 -> m38_37  [key=2, style=dotted];
m38_801 -> m38_803  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_801 -> m38_806  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_801 -> m38_812  [color=red, key=1, label=transactions, style=dashed];
m38_801 -> m38_814  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_803 -> m38_804  [key=0, style=solid];
m38_803 -> m38_38  [key=2, style=dotted];
m38_803 -> m38_807  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_803 -> m38_819  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_803 -> m38_820  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_808 -> m38_809  [color=red, key=0, style=solid];
m38_808 -> m38_31  [key=2, style=dotted];
m38_808 -> m38_200  [key=2, style=dotted];
m38_808 -> m38_33  [key=2, style=dotted];
m38_808 -> m38_34  [key=2, style=dotted];
m38_808 -> m38_36  [key=2, style=dotted];
m38_809 -> m38_810  [color=red, key=0, style=solid];
m38_809 -> m38_518  [color=red, key=2, style=dotted];
m38_809 -> m38_200  [color=red, key=2, style=dotted];
m38_809 -> m38_33  [color=red, key=2, style=dotted];
m38_809 -> m38_519  [color=red, key=2, style=dotted];
m38_809 -> m38_36  [color=red, key=2, style=dotted];
m38_810 -> m38_811  [color=red, key=0, style=solid];
m38_810 -> m38_258  [key=2, style=dotted];
m38_810 -> m38_44  [key=2, style=dotted];
m38_811 -> m38_812  [color=red, key=0, style=solid];
m38_811 -> m38_257  [color=red, key=2, style=dotted];
m38_812 -> m38_813  [color=red, key=0, style=solid];
m38_812 -> m38_205  [color=red, key=2, style=dotted];
m38_812 -> m38_521  [color=red, key=2, style=dotted];
m38_813 -> m38_814  [key=0, style=solid];
m38_813 -> m38_815  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_813 -> m38_816  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_813 -> m38_817  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_815 -> m38_816  [key=0, style=solid];
m38_821 -> m38_822  [key=0, style=solid];
m38_821 -> m38_28  [key=2, style=dotted];
m38_822 -> m38_823  [key=0, style=solid];
m38_822 -> m38_28  [key=2, style=dotted];
m38_802 -> m38_803  [key=0, style=solid];
m38_802 -> m38_514  [key=2, style=dotted];
m38_802 -> m38_805  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_802 -> m38_806  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_806 -> m38_807  [key=0, style=solid];
m38_806 -> m38_198  [key=2, style=dotted];
m38_814 -> m38_815  [key=0, style=solid];
m38_814 -> m38_522  [key=2, style=dotted];
m38_814 -> m38_523  [key=2, style=dotted];
m38_814 -> m38_824  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_814 -> m38_817  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_807 -> m38_808  [key=0, style=solid];
m38_807 -> m38_274  [key=2, style=dotted];
m38_819 -> m38_818  [key=0, style=solid];
m38_819 -> m38_209  [key=2, style=dotted];
m38_820 -> m38_821  [key=0, style=solid];
m38_820 -> m38_28  [key=2, style=dotted];
m38_816 -> m38_817  [key=0, style=solid];
m38_817 -> m38_818  [key=0, style=solid];
m38_817 -> m38_524  [key=2, style=dotted];
m38_818 -> m38_819  [key=0, style=solid];
m38_818 -> m38_820  [key=0, style=solid];
m38_823 -> m38_798  [color=blue, key=0, style=bold];
m38_769 -> m38_770  [key=0, style=solid];
m38_770 -> m38_771  [key=0, style=solid];
m38_770 -> m38_513  [key=2, style=dotted];
m38_770 -> m38_775  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_770 -> m38_776  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_771 -> m38_772  [key=0, style=solid];
m38_771 -> m38_30  [key=2, style=dotted];
m38_771 -> m38_774  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_775  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_779  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_780  [color=red, key=1, label=securities, style=dashed];
m38_771 -> m38_781  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_782  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_783  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_784  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_786  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_792  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_771 -> m38_793  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_775 -> m38_776  [key=0, style=solid];
m38_776 -> m38_777  [key=0, style=solid];
m38_776 -> m38_515  [key=2, style=dotted];
m38_776 -> m38_516  [key=2, style=dotted];
m38_776 -> m38_517  [key=2, style=dotted];
m38_772 -> m38_773  [key=0, style=solid];
m38_772 -> m38_37  [key=2, style=dotted];
m38_772 -> m38_774  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_772 -> m38_777  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_772 -> m38_783  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_772 -> m38_785  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_774 -> m38_775  [key=0, style=solid];
m38_774 -> m38_38  [key=2, style=dotted];
m38_774 -> m38_778  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_774 -> m38_790  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_774 -> m38_791  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_779 -> m38_780  [color=red, key=0, style=solid];
m38_779 -> m38_31  [key=2, style=dotted];
m38_779 -> m38_200  [key=2, style=dotted];
m38_779 -> m38_33  [key=2, style=dotted];
m38_779 -> m38_34  [key=2, style=dotted];
m38_779 -> m38_36  [key=2, style=dotted];
m38_780 -> m38_781  [color=red, key=0, style=solid];
m38_780 -> m38_518  [color=red, key=2, style=dotted];
m38_780 -> m38_200  [color=red, key=2, style=dotted];
m38_780 -> m38_33  [color=red, key=2, style=dotted];
m38_780 -> m38_519  [color=red, key=2, style=dotted];
m38_780 -> m38_36  [color=red, key=2, style=dotted];
m38_781 -> m38_782  [key=0, style=solid];
m38_781 -> m38_258  [key=2, style=dotted];
m38_781 -> m38_44  [key=2, style=dotted];
m38_782 -> m38_783  [key=0, style=solid];
m38_782 -> m38_257  [key=2, style=dotted];
m38_783 -> m38_784  [key=0, style=solid];
m38_783 -> m38_205  [key=2, style=dotted];
m38_783 -> m38_521  [key=2, style=dotted];
m38_784 -> m38_785  [key=0, style=solid];
m38_784 -> m38_786  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_784 -> m38_787  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_784 -> m38_788  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_786 -> m38_787  [key=0, style=solid];
m38_792 -> m38_793  [key=0, style=solid];
m38_792 -> m38_28  [key=2, style=dotted];
m38_793 -> m38_794  [key=0, style=solid];
m38_793 -> m38_28  [key=2, style=dotted];
m38_773 -> m38_774  [key=0, style=solid];
m38_773 -> m38_514  [key=2, style=dotted];
m38_773 -> m38_776  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_773 -> m38_777  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_777 -> m38_778  [key=0, style=solid];
m38_777 -> m38_198  [key=2, style=dotted];
m38_785 -> m38_786  [key=0, style=solid];
m38_785 -> m38_522  [key=2, style=dotted];
m38_785 -> m38_523  [key=2, style=dotted];
m38_785 -> m38_795  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_785 -> m38_788  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_778 -> m38_779  [key=0, style=solid];
m38_778 -> m38_274  [key=2, style=dotted];
m38_790 -> m38_789  [key=0, style=solid];
m38_790 -> m38_209  [key=2, style=dotted];
m38_791 -> m38_792  [key=0, style=solid];
m38_791 -> m38_28  [key=2, style=dotted];
m38_787 -> m38_788  [key=0, style=solid];
m38_788 -> m38_789  [key=0, style=solid];
m38_788 -> m38_524  [key=2, style=dotted];
m38_789 -> m38_790  [key=0, style=solid];
m38_789 -> m38_791  [key=0, style=solid];
m38_794 -> m38_769  [color=blue, key=0, style=bold];
m38_983 -> m38_984  [key=0, style=solid];
m38_984 -> m38_985  [key=0, style=solid];
m38_984 -> m38_513  [key=2, style=dotted];
m38_984 -> m38_989  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_984 -> m38_990  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_985 -> m38_986  [key=0, style=solid];
m38_985 -> m38_30  [key=2, style=dotted];
m38_985 -> m38_988  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_985 -> m38_989  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_985 -> m38_993  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_985 -> m38_994  [color=red, key=1, label=securities, style=dashed];
m38_985 -> m38_995  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_985 -> m38_996  [color=red, key=1, label=securities, style=dashed];
m38_985 -> m38_997  [color=red, key=1, label=securities, style=dashed];
m38_985 -> m38_998  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_985 -> m38_1000  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_985 -> m38_1006  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_985 -> m38_1008  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_985 -> m38_1009  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_989 -> m38_990  [key=0, style=solid];
m38_990 -> m38_991  [key=0, style=solid];
m38_990 -> m38_515  [key=2, style=dotted];
m38_990 -> m38_516  [key=2, style=dotted];
m38_990 -> m38_517  [key=2, style=dotted];
m38_986 -> m38_987  [key=0, style=solid];
m38_986 -> m38_37  [key=2, style=dotted];
m38_986 -> m38_988  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_986 -> m38_991  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_986 -> m38_997  [color=red, key=1, label=transactions, style=dashed];
m38_986 -> m38_999  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_988 -> m38_989  [key=0, style=solid];
m38_988 -> m38_38  [key=2, style=dotted];
m38_988 -> m38_992  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_988 -> m38_1005  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_988 -> m38_1007  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_993 -> m38_994  [color=red, key=0, style=solid];
m38_993 -> m38_31  [key=2, style=dotted];
m38_993 -> m38_200  [key=2, style=dotted];
m38_993 -> m38_33  [key=2, style=dotted];
m38_993 -> m38_34  [key=2, style=dotted];
m38_993 -> m38_36  [key=2, style=dotted];
m38_994 -> m38_995  [color=red, key=0, style=solid];
m38_994 -> m38_518  [color=red, key=2, style=dotted];
m38_994 -> m38_200  [color=red, key=2, style=dotted];
m38_994 -> m38_33  [color=red, key=2, style=dotted];
m38_994 -> m38_519  [color=red, key=2, style=dotted];
m38_994 -> m38_36  [color=red, key=2, style=dotted];
m38_995 -> m38_996  [color=red, key=0, style=solid];
m38_995 -> m38_258  [key=2, style=dotted];
m38_995 -> m38_44  [key=2, style=dotted];
m38_996 -> m38_997  [color=red, key=0, style=solid];
m38_996 -> m38_257  [color=red, key=2, style=dotted];
m38_997 -> m38_998  [color=red, key=0, style=solid];
m38_997 -> m38_205  [color=red, key=2, style=dotted];
m38_997 -> m38_521  [color=red, key=2, style=dotted];
m38_998 -> m38_999  [key=0, style=solid];
m38_998 -> m38_1000  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_998 -> m38_1001  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_998 -> m38_1002  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_998 -> m38_1003  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_998 -> m38_1005  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_1000 -> m38_1001  [key=0, style=solid];
m38_1006 -> m38_1007  [key=0, style=solid];
m38_1008 -> m38_1009  [key=0, style=solid];
m38_1008 -> m38_28  [key=2, style=dotted];
m38_1009 -> m38_1010  [key=0, style=solid];
m38_1009 -> m38_28  [key=2, style=dotted];
m38_987 -> m38_988  [key=0, style=solid];
m38_987 -> m38_514  [key=2, style=dotted];
m38_987 -> m38_990  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_987 -> m38_991  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_991 -> m38_992  [key=0, style=solid];
m38_991 -> m38_198  [key=2, style=dotted];
m38_999 -> m38_1000  [key=0, style=solid];
m38_999 -> m38_522  [key=2, style=dotted];
m38_999 -> m38_523  [key=2, style=dotted];
m38_999 -> m38_1011  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_999 -> m38_1002  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_992 -> m38_993  [key=0, style=solid];
m38_992 -> m38_274  [key=2, style=dotted];
m38_1005 -> m38_1004  [key=0, style=solid];
m38_1005 -> m38_676  [key=2, style=dotted];
m38_1007 -> m38_1008  [key=0, style=solid];
m38_1007 -> m38_28  [key=2, style=dotted];
m38_1001 -> m38_1002  [key=0, style=solid];
m38_1002 -> m38_1003  [key=0, style=solid];
m38_1002 -> m38_524  [key=2, style=dotted];
m38_1002 -> m38_1004  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_1003 -> m38_1004  [key=0, style=solid];
m38_1003 -> m38_1005  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m38_1004 -> m38_1005  [key=0, style=solid];
m38_1004 -> m38_1006  [key=0, style=solid];
m38_1010 -> m38_983  [color=blue, key=0, style=bold];
m38_892 -> m38_893  [key=0, style=solid];
m38_893 -> m38_894  [key=0, style=solid];
m38_893 -> m38_513  [key=2, style=dotted];
m38_893 -> m38_898  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_893 -> m38_899  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_894 -> m38_895  [key=0, style=solid];
m38_894 -> m38_30  [key=2, style=dotted];
m38_894 -> m38_897  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_894 -> m38_898  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_894 -> m38_902  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_894 -> m38_903  [color=red, key=1, label=securities, style=dashed];
m38_894 -> m38_904  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_894 -> m38_905  [color=red, key=1, label=securities, style=dashed];
m38_894 -> m38_906  [color=red, key=1, label=securities, style=dashed];
m38_894 -> m38_907  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_894 -> m38_909  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_894 -> m38_915  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_894 -> m38_916  [color=red, key=1, label=securities, style=dashed];
m38_898 -> m38_899  [key=0, style=solid];
m38_899 -> m38_900  [key=0, style=solid];
m38_899 -> m38_515  [key=2, style=dotted];
m38_899 -> m38_516  [key=2, style=dotted];
m38_899 -> m38_517  [key=2, style=dotted];
m38_895 -> m38_896  [key=0, style=solid];
m38_895 -> m38_37  [key=2, style=dotted];
m38_895 -> m38_897  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_895 -> m38_900  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_895 -> m38_906  [color=red, key=1, label=transactions, style=dashed];
m38_895 -> m38_908  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_897 -> m38_898  [key=0, style=solid];
m38_897 -> m38_38  [key=2, style=dotted];
m38_897 -> m38_901  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_897 -> m38_913  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_897 -> m38_914  [color=red, key=1, label=portfolio, style=dashed];
m38_902 -> m38_903  [color=red, key=0, style=solid];
m38_902 -> m38_31  [key=2, style=dotted];
m38_902 -> m38_200  [key=2, style=dotted];
m38_902 -> m38_33  [key=2, style=dotted];
m38_902 -> m38_34  [key=2, style=dotted];
m38_902 -> m38_36  [key=2, style=dotted];
m38_903 -> m38_904  [color=red, key=0, style=solid];
m38_903 -> m38_518  [color=red, key=2, style=dotted];
m38_903 -> m38_200  [color=red, key=2, style=dotted];
m38_903 -> m38_33  [color=red, key=2, style=dotted];
m38_903 -> m38_519  [color=red, key=2, style=dotted];
m38_903 -> m38_36  [color=red, key=2, style=dotted];
m38_904 -> m38_905  [color=red, key=0, style=solid];
m38_904 -> m38_258  [key=2, style=dotted];
m38_904 -> m38_44  [key=2, style=dotted];
m38_905 -> m38_906  [color=red, key=0, style=solid];
m38_905 -> m38_257  [color=red, key=2, style=dotted];
m38_906 -> m38_907  [color=red, key=0, style=solid];
m38_906 -> m38_205  [color=red, key=2, style=dotted];
m38_906 -> m38_521  [color=red, key=2, style=dotted];
m38_907 -> m38_908  [key=0, style=solid];
m38_907 -> m38_909  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_907 -> m38_910  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_907 -> m38_911  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_909 -> m38_910  [key=0, style=solid];
m38_915 -> m38_916  [color=red, key=0, style=solid];
m38_915 -> m38_28  [key=2, style=dotted];
m38_916 -> m38_917  [color=red, key=0, style=solid];
m38_916 -> m38_28  [color=red, key=2, style=dotted];
m38_896 -> m38_897  [key=0, style=solid];
m38_896 -> m38_514  [key=2, style=dotted];
m38_896 -> m38_899  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_896 -> m38_900  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_900 -> m38_901  [key=0, style=solid];
m38_900 -> m38_198  [key=2, style=dotted];
m38_908 -> m38_909  [key=0, style=solid];
m38_908 -> m38_522  [key=2, style=dotted];
m38_908 -> m38_523  [key=2, style=dotted];
m38_908 -> m38_918  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_908 -> m38_911  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_901 -> m38_902  [key=0, style=solid];
m38_901 -> m38_274  [key=2, style=dotted];
m38_913 -> m38_912  [key=0, style=solid];
m38_913 -> m38_209  [key=2, style=dotted];
m38_914 -> m38_915  [color=red, key=0, style=solid];
m38_914 -> m38_28  [color=red, key=2, style=dotted];
m38_910 -> m38_911  [key=0, style=solid];
m38_911 -> m38_912  [key=0, style=solid];
m38_911 -> m38_524  [key=2, style=dotted];
m38_912 -> m38_913  [key=0, style=solid];
m38_912 -> m38_914  [color=red, key=0, style=solid];
m38_917 -> m38_892  [color=blue, key=0, style=bold];
m38_648 -> m38_649  [key=0, style=solid];
m38_649 -> m38_650  [key=0, style=solid];
m38_649 -> m38_513  [key=2, style=dotted];
m38_649 -> m38_654  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_649 -> m38_655  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_650 -> m38_651  [key=0, style=solid];
m38_650 -> m38_30  [key=2, style=dotted];
m38_650 -> m38_653  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_650 -> m38_654  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_650 -> m38_658  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_650 -> m38_659  [color=red, key=1, label=securities, style=dashed];
m38_650 -> m38_660  [color=red, key=1, label=securities, style=dashed];
m38_650 -> m38_661  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_650 -> m38_662  [color=red, key=1, label=securities, style=dashed];
m38_650 -> m38_663  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_650 -> m38_665  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_650 -> m38_670  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_650 -> m38_674  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_654 -> m38_655  [key=0, style=solid];
m38_655 -> m38_656  [key=0, style=solid];
m38_655 -> m38_515  [key=2, style=dotted];
m38_655 -> m38_516  [key=2, style=dotted];
m38_655 -> m38_517  [key=2, style=dotted];
m38_651 -> m38_652  [key=0, style=solid];
m38_651 -> m38_37  [key=2, style=dotted];
m38_651 -> m38_653  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_651 -> m38_656  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_651 -> m38_662  [color=red, key=1, label=transactions, style=dashed];
m38_651 -> m38_664  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_653 -> m38_654  [key=0, style=solid];
m38_653 -> m38_38  [key=2, style=dotted];
m38_653 -> m38_657  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_653 -> m38_669  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_653 -> m38_671  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_658 -> m38_659  [color=red, key=0, style=solid];
m38_658 -> m38_31  [key=2, style=dotted];
m38_658 -> m38_200  [key=2, style=dotted];
m38_658 -> m38_33  [key=2, style=dotted];
m38_658 -> m38_34  [key=2, style=dotted];
m38_658 -> m38_36  [key=2, style=dotted];
m38_659 -> m38_660  [color=red, key=0, style=solid];
m38_659 -> m38_518  [color=red, key=2, style=dotted];
m38_659 -> m38_200  [color=red, key=2, style=dotted];
m38_659 -> m38_33  [color=red, key=2, style=dotted];
m38_659 -> m38_519  [color=red, key=2, style=dotted];
m38_659 -> m38_36  [color=red, key=2, style=dotted];
m38_660 -> m38_661  [color=red, key=0, style=solid];
m38_660 -> m38_257  [color=red, key=2, style=dotted];
m38_661 -> m38_662  [color=red, key=0, style=solid];
m38_661 -> m38_520  [key=2, style=dotted];
m38_661 -> m38_44  [key=2, style=dotted];
m38_662 -> m38_663  [color=red, key=0, style=solid];
m38_662 -> m38_205  [color=red, key=2, style=dotted];
m38_662 -> m38_521  [color=red, key=2, style=dotted];
m38_663 -> m38_664  [key=0, style=solid];
m38_663 -> m38_665  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_663 -> m38_666  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_663 -> m38_667  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_663 -> m38_669  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_665 -> m38_666  [key=0, style=solid];
m38_670 -> m38_671  [key=0, style=solid];
m38_670 -> m38_672  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_670 -> m38_673  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_674 -> m38_675  [key=0, style=solid];
m38_674 -> m38_28  [key=2, style=dotted];
m38_652 -> m38_653  [key=0, style=solid];
m38_652 -> m38_514  [key=2, style=dotted];
m38_652 -> m38_655  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_652 -> m38_656  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_656 -> m38_657  [key=0, style=solid];
m38_656 -> m38_198  [key=2, style=dotted];
m38_664 -> m38_665  [key=0, style=solid];
m38_664 -> m38_522  [key=2, style=dotted];
m38_664 -> m38_523  [key=2, style=dotted];
m38_664 -> m38_677  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_664 -> m38_666  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_657 -> m38_658  [key=0, style=solid];
m38_657 -> m38_274  [key=2, style=dotted];
m38_669 -> m38_668  [key=0, style=solid];
m38_669 -> m38_676  [key=2, style=dotted];
m38_671 -> m38_672  [key=0, style=solid];
m38_671 -> m38_28  [key=2, style=dotted];
m38_666 -> m38_667  [key=0, style=solid];
m38_666 -> m38_524  [key=2, style=dotted];
m38_666 -> m38_668  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_667 -> m38_668  [key=0, style=solid];
m38_667 -> m38_669  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m38_668 -> m38_669  [key=0, style=solid];
m38_668 -> m38_670  [key=0, style=solid];
m38_672 -> m38_673  [key=0, style=solid];
m38_672 -> m38_28  [key=2, style=dotted];
m38_673 -> m38_674  [key=0, style=solid];
m38_673 -> m38_28  [key=2, style=dotted];
m38_675 -> m38_648  [color=blue, key=0, style=bold];
m38_208 -> m38_1062  [key=0, style=solid];
m38_1062 -> m38_1063  [key=0, style=solid];
m38_1063 -> m38_208  [color=blue, key=0, style=bold];
m38_1070 -> m38_1071  [key=0, style=solid];
m38_1070 -> m38_1075  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_1071 -> m38_1072  [key=0, style=solid];
m38_1071 -> m38_1073  [key=2, style=dotted];
m38_1071 -> m38_1074  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_1072 -> m38_1070  [color=blue, key=0, style=bold];
m38_558 -> m38_559  [key=0, style=solid];
m38_559 -> m38_560  [key=0, style=solid];
m38_559 -> m38_513  [key=2, style=dotted];
m38_559 -> m38_564  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_559 -> m38_565  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_560 -> m38_561  [key=0, style=solid];
m38_560 -> m38_30  [key=2, style=dotted];
m38_560 -> m38_563  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_564  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_568  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_569  [color=red, key=1, label=securities, style=dashed];
m38_560 -> m38_570  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_571  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_572  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_573  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_575  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_580  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_560 -> m38_584  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_564 -> m38_565  [key=0, style=solid];
m38_565 -> m38_566  [key=0, style=solid];
m38_565 -> m38_515  [key=2, style=dotted];
m38_565 -> m38_516  [key=2, style=dotted];
m38_565 -> m38_517  [key=2, style=dotted];
m38_561 -> m38_562  [key=0, style=solid];
m38_561 -> m38_37  [key=2, style=dotted];
m38_561 -> m38_563  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_561 -> m38_566  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_561 -> m38_572  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_561 -> m38_574  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_563 -> m38_564  [key=0, style=solid];
m38_563 -> m38_38  [key=2, style=dotted];
m38_563 -> m38_567  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_563 -> m38_579  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_563 -> m38_581  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_568 -> m38_569  [color=red, key=0, style=solid];
m38_568 -> m38_31  [key=2, style=dotted];
m38_568 -> m38_200  [key=2, style=dotted];
m38_568 -> m38_33  [key=2, style=dotted];
m38_568 -> m38_34  [key=2, style=dotted];
m38_568 -> m38_36  [key=2, style=dotted];
m38_569 -> m38_570  [color=red, key=0, style=solid];
m38_569 -> m38_518  [color=red, key=2, style=dotted];
m38_569 -> m38_200  [color=red, key=2, style=dotted];
m38_569 -> m38_33  [color=red, key=2, style=dotted];
m38_569 -> m38_519  [color=red, key=2, style=dotted];
m38_569 -> m38_36  [color=red, key=2, style=dotted];
m38_570 -> m38_571  [key=0, style=solid];
m38_570 -> m38_257  [key=2, style=dotted];
m38_571 -> m38_572  [key=0, style=solid];
m38_571 -> m38_520  [key=2, style=dotted];
m38_571 -> m38_44  [key=2, style=dotted];
m38_572 -> m38_573  [key=0, style=solid];
m38_572 -> m38_205  [key=2, style=dotted];
m38_572 -> m38_521  [key=2, style=dotted];
m38_573 -> m38_574  [key=0, style=solid];
m38_573 -> m38_575  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_573 -> m38_576  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_573 -> m38_577  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_575 -> m38_576  [key=0, style=solid];
m38_580 -> m38_581  [key=0, style=solid];
m38_580 -> m38_582  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_580 -> m38_583  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_584 -> m38_585  [key=0, style=solid];
m38_584 -> m38_28  [key=2, style=dotted];
m38_562 -> m38_563  [key=0, style=solid];
m38_562 -> m38_514  [key=2, style=dotted];
m38_562 -> m38_565  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_562 -> m38_566  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_566 -> m38_567  [key=0, style=solid];
m38_566 -> m38_198  [key=2, style=dotted];
m38_574 -> m38_575  [key=0, style=solid];
m38_574 -> m38_522  [key=2, style=dotted];
m38_574 -> m38_523  [key=2, style=dotted];
m38_574 -> m38_586  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_574 -> m38_577  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_567 -> m38_568  [key=0, style=solid];
m38_567 -> m38_274  [key=2, style=dotted];
m38_579 -> m38_578  [key=0, style=solid];
m38_579 -> m38_209  [key=2, style=dotted];
m38_581 -> m38_582  [key=0, style=solid];
m38_581 -> m38_28  [key=2, style=dotted];
m38_576 -> m38_577  [key=0, style=solid];
m38_577 -> m38_578  [key=0, style=solid];
m38_577 -> m38_524  [key=2, style=dotted];
m38_578 -> m38_579  [key=0, style=solid];
m38_578 -> m38_580  [key=0, style=solid];
m38_582 -> m38_583  [key=0, style=solid];
m38_582 -> m38_28  [key=2, style=dotted];
m38_583 -> m38_584  [key=0, style=solid];
m38_583 -> m38_28  [key=2, style=dotted];
m38_585 -> m38_558  [color=blue, key=0, style=bold];
m38_276 -> m38_277  [key=0, style=solid];
m38_277 -> m38_278  [key=0, style=solid];
m38_277 -> m38_30  [key=2, style=dotted];
m38_277 -> m38_279  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_277 -> m38_281  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_277 -> m38_285  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_277 -> m38_289  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_278 -> m38_279  [key=0, style=solid];
m38_278 -> m38_37  [key=2, style=dotted];
m38_279 -> m38_280  [key=0, style=solid];
m38_279 -> m38_38  [key=2, style=dotted];
m38_279 -> m38_283  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_279 -> m38_284  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_279 -> m38_287  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_279 -> m38_288  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_281 -> m38_282  [key=0, style=solid];
m38_281 -> m38_31  [key=2, style=dotted];
m38_281 -> m38_200  [key=2, style=dotted];
m38_281 -> m38_33  [key=2, style=dotted];
m38_281 -> m38_291  [key=2, style=dotted];
m38_281 -> m38_292  [key=2, style=dotted];
m38_281 -> m38_36  [key=2, style=dotted];
m38_285 -> m38_286  [key=0, style=solid];
m38_285 -> m38_28  [key=2, style=dotted];
m38_289 -> m38_290  [key=0, style=solid];
m38_289 -> m38_28  [key=2, style=dotted];
m38_280 -> m38_281  [key=0, style=solid];
m38_280 -> m38_274  [key=2, style=dotted];
m38_283 -> m38_284  [key=0, style=solid];
m38_283 -> m38_209  [key=2, style=dotted];
m38_284 -> m38_285  [key=0, style=solid];
m38_284 -> m38_28  [key=2, style=dotted];
m38_287 -> m38_288  [key=0, style=solid];
m38_287 -> m38_209  [key=2, style=dotted];
m38_288 -> m38_289  [key=0, style=solid];
m38_288 -> m38_28  [key=2, style=dotted];
m38_282 -> m38_283  [key=0, style=solid];
m38_282 -> m38_275  [key=2, style=dotted];
m38_286 -> m38_287  [key=0, style=solid];
m38_286 -> m38_275  [key=2, style=dotted];
m38_290 -> m38_276  [color=blue, key=0, style=bold];
m38_1096 -> m38_1097  [key=0, style=solid];
m38_1097 -> m38_1098  [key=0, style=solid];
m38_1097 -> m38_1099  [key=2, style=dotted];
m38_1098 -> m38_1096  [color=blue, key=0, style=bold];
m38_618 -> m38_619  [key=0, style=solid];
m38_619 -> m38_620  [key=0, style=solid];
m38_619 -> m38_513  [key=2, style=dotted];
m38_619 -> m38_624  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_619 -> m38_625  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_620 -> m38_621  [key=0, style=solid];
m38_620 -> m38_30  [key=2, style=dotted];
m38_620 -> m38_623  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_620 -> m38_624  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_620 -> m38_628  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_620 -> m38_629  [color=red, key=1, label=securities, style=dashed];
m38_620 -> m38_630  [color=red, key=1, label=securities, style=dashed];
m38_620 -> m38_631  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_620 -> m38_632  [color=red, key=1, label=securities, style=dashed];
m38_620 -> m38_633  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_620 -> m38_635  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_620 -> m38_639  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_620 -> m38_643  [color=red, key=1, label=securities, style=dashed];
m38_624 -> m38_625  [key=0, style=solid];
m38_625 -> m38_626  [key=0, style=solid];
m38_625 -> m38_515  [key=2, style=dotted];
m38_625 -> m38_516  [key=2, style=dotted];
m38_625 -> m38_517  [key=2, style=dotted];
m38_621 -> m38_622  [key=0, style=solid];
m38_621 -> m38_37  [key=2, style=dotted];
m38_621 -> m38_623  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_621 -> m38_626  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_621 -> m38_632  [color=red, key=1, label=transactions, style=dashed];
m38_621 -> m38_634  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_623 -> m38_624  [key=0, style=solid];
m38_623 -> m38_38  [key=2, style=dotted];
m38_623 -> m38_627  [color=red, key=1, label=portfolio, style=dashed];
m38_623 -> m38_638  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_623 -> m38_640  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_628 -> m38_629  [color=red, key=0, style=solid];
m38_628 -> m38_31  [key=2, style=dotted];
m38_628 -> m38_200  [key=2, style=dotted];
m38_628 -> m38_33  [key=2, style=dotted];
m38_628 -> m38_34  [key=2, style=dotted];
m38_628 -> m38_36  [key=2, style=dotted];
m38_629 -> m38_630  [color=red, key=0, style=solid];
m38_629 -> m38_518  [color=red, key=2, style=dotted];
m38_629 -> m38_200  [color=red, key=2, style=dotted];
m38_629 -> m38_33  [color=red, key=2, style=dotted];
m38_629 -> m38_519  [color=red, key=2, style=dotted];
m38_629 -> m38_36  [color=red, key=2, style=dotted];
m38_630 -> m38_631  [color=red, key=0, style=solid];
m38_630 -> m38_257  [color=red, key=2, style=dotted];
m38_631 -> m38_632  [color=red, key=0, style=solid];
m38_631 -> m38_520  [key=2, style=dotted];
m38_631 -> m38_44  [key=2, style=dotted];
m38_632 -> m38_633  [color=red, key=0, style=solid];
m38_632 -> m38_205  [color=red, key=2, style=dotted];
m38_632 -> m38_521  [color=red, key=2, style=dotted];
m38_633 -> m38_634  [key=0, style=solid];
m38_633 -> m38_635  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_633 -> m38_636  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_635 -> m38_636  [key=0, style=solid];
m38_639 -> m38_640  [key=0, style=solid];
m38_639 -> m38_641  [color=red, key=1, label=newUnderlyingHoldings, style=dashed];
m38_639 -> m38_642  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_643 -> m38_644  [color=red, key=0, style=solid];
m38_643 -> m38_28  [color=red, key=2, style=dotted];
m38_622 -> m38_623  [key=0, style=solid];
m38_622 -> m38_514  [key=2, style=dotted];
m38_622 -> m38_625  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_622 -> m38_626  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_626 -> m38_627  [color=red, key=0, style=solid];
m38_626 -> m38_198  [key=2, style=dotted];
m38_634 -> m38_635  [key=0, style=solid];
m38_634 -> m38_522  [key=2, style=dotted];
m38_634 -> m38_523  [key=2, style=dotted];
m38_634 -> m38_645  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_634 -> m38_636  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_627 -> m38_628  [color=red, key=0, style=solid];
m38_627 -> m38_274  [color=red, key=2, style=dotted];
m38_638 -> m38_637  [key=0, style=solid];
m38_638 -> m38_209  [key=2, style=dotted];
m38_640 -> m38_641  [color=red, key=0, style=solid];
m38_640 -> m38_28  [key=2, style=dotted];
m38_636 -> m38_637  [key=0, style=solid];
m38_636 -> m38_524  [key=2, style=dotted];
m38_637 -> m38_638  [key=0, style=solid];
m38_637 -> m38_639  [key=0, style=solid];
m38_641 -> m38_642  [color=red, key=0, style=solid];
m38_641 -> m38_28  [color=red, key=2, style=dotted];
m38_642 -> m38_643  [color=red, key=0, style=solid];
m38_642 -> m38_28  [key=2, style=dotted];
m38_644 -> m38_618  [color=blue, key=0, style=bold];
m38_1078 -> m38_1079  [key=0, style=solid];
m38_1079 -> m38_1080  [key=0, style=solid];
m38_1079 -> m38_1081  [key=2, style=dotted];
m38_1080 -> m38_1078  [color=blue, key=0, style=bold];
m38_740 -> m38_741  [key=0, style=solid];
m38_741 -> m38_742  [key=0, style=solid];
m38_741 -> m38_513  [key=2, style=dotted];
m38_741 -> m38_746  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_741 -> m38_747  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_742 -> m38_743  [key=0, style=solid];
m38_742 -> m38_30  [key=2, style=dotted];
m38_742 -> m38_745  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_742 -> m38_746  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_742 -> m38_750  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_742 -> m38_751  [color=red, key=1, label=securities, style=dashed];
m38_742 -> m38_752  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_742 -> m38_753  [color=red, key=1, label=securities, style=dashed];
m38_742 -> m38_754  [color=red, key=1, label=securities, style=dashed];
m38_742 -> m38_755  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_742 -> m38_757  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_742 -> m38_763  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_742 -> m38_764  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_746 -> m38_747  [key=0, style=solid];
m38_747 -> m38_748  [key=0, style=solid];
m38_747 -> m38_515  [key=2, style=dotted];
m38_747 -> m38_516  [key=2, style=dotted];
m38_747 -> m38_517  [key=2, style=dotted];
m38_743 -> m38_744  [key=0, style=solid];
m38_743 -> m38_37  [key=2, style=dotted];
m38_743 -> m38_745  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_743 -> m38_748  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_743 -> m38_754  [color=red, key=1, label=transactions, style=dashed];
m38_743 -> m38_756  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_745 -> m38_746  [key=0, style=solid];
m38_745 -> m38_38  [key=2, style=dotted];
m38_745 -> m38_749  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_745 -> m38_761  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_745 -> m38_762  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_750 -> m38_751  [color=red, key=0, style=solid];
m38_750 -> m38_31  [key=2, style=dotted];
m38_750 -> m38_200  [key=2, style=dotted];
m38_750 -> m38_33  [key=2, style=dotted];
m38_750 -> m38_34  [key=2, style=dotted];
m38_750 -> m38_36  [key=2, style=dotted];
m38_751 -> m38_752  [color=red, key=0, style=solid];
m38_751 -> m38_518  [color=red, key=2, style=dotted];
m38_751 -> m38_200  [color=red, key=2, style=dotted];
m38_751 -> m38_33  [color=red, key=2, style=dotted];
m38_751 -> m38_519  [color=red, key=2, style=dotted];
m38_751 -> m38_36  [color=red, key=2, style=dotted];
m38_752 -> m38_753  [color=red, key=0, style=solid];
m38_752 -> m38_258  [key=2, style=dotted];
m38_752 -> m38_44  [key=2, style=dotted];
m38_753 -> m38_754  [color=red, key=0, style=solid];
m38_753 -> m38_257  [color=red, key=2, style=dotted];
m38_754 -> m38_755  [color=red, key=0, style=solid];
m38_754 -> m38_205  [color=red, key=2, style=dotted];
m38_754 -> m38_521  [color=red, key=2, style=dotted];
m38_755 -> m38_756  [key=0, style=solid];
m38_755 -> m38_757  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_755 -> m38_758  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_755 -> m38_759  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_757 -> m38_758  [key=0, style=solid];
m38_763 -> m38_764  [key=0, style=solid];
m38_763 -> m38_28  [key=2, style=dotted];
m38_764 -> m38_765  [key=0, style=solid];
m38_764 -> m38_28  [key=2, style=dotted];
m38_744 -> m38_745  [key=0, style=solid];
m38_744 -> m38_514  [key=2, style=dotted];
m38_744 -> m38_747  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_744 -> m38_748  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_748 -> m38_749  [key=0, style=solid];
m38_748 -> m38_198  [key=2, style=dotted];
m38_756 -> m38_757  [key=0, style=solid];
m38_756 -> m38_522  [key=2, style=dotted];
m38_756 -> m38_523  [key=2, style=dotted];
m38_756 -> m38_766  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_756 -> m38_759  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_749 -> m38_750  [key=0, style=solid];
m38_749 -> m38_274  [key=2, style=dotted];
m38_761 -> m38_760  [key=0, style=solid];
m38_761 -> m38_209  [key=2, style=dotted];
m38_762 -> m38_763  [key=0, style=solid];
m38_762 -> m38_28  [key=2, style=dotted];
m38_758 -> m38_759  [key=0, style=solid];
m38_759 -> m38_760  [key=0, style=solid];
m38_759 -> m38_524  [key=2, style=dotted];
m38_760 -> m38_761  [key=0, style=solid];
m38_760 -> m38_762  [key=0, style=solid];
m38_765 -> m38_740  [color=blue, key=0, style=bold];
m38_131 -> m38_132  [key=0, style=solid];
m38_132 -> m38_133  [key=0, style=solid];
m38_132 -> m38_143  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m38_132 -> m38_180  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m38_132 -> m38_132  [color=darkorchid, key=3, label="Local variable decimal leverage", style=bold];
m38_133 -> m38_134  [key=0, style=solid];
m38_133 -> m38_139  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_147  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_148  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_156  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_157  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_164  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_165  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_166  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_173  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_174  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_175  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_187  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_188  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_133 -> m38_133  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m38_143 -> m38_144  [key=0, style=solid];
m38_143 -> m38_35  [key=2, style=dotted];
m38_180 -> m38_181  [key=0, style=solid];
m38_180 -> m38_35  [key=2, style=dotted];
m38_134 -> m38_135  [key=0, style=solid];
m38_134 -> m38_30  [key=2, style=dotted];
m38_134 -> m38_138  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_134 -> m38_141  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_134 -> m38_142  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_139 -> m38_140  [key=0, style=solid];
m38_139 -> m38_199  [key=2, style=dotted];
m38_147 -> m38_148  [key=0, style=solid];
m38_147 -> m38_202  [key=2, style=dotted];
m38_147 -> m38_149  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_147 -> m38_150  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_148 -> m38_149  [key=0, style=solid];
m38_148 -> m38_203  [key=2, style=dotted];
m38_148 -> m38_153  [color=darkseagreen4, key=1, label=fill, style=dashed];
m38_148 -> m38_154  [color=darkseagreen4, key=1, label=fill, style=dashed];
m38_156 -> m38_157  [key=0, style=solid];
m38_156 -> m38_28  [key=2, style=dotted];
m38_157 -> m38_158  [key=0, style=solid];
m38_157 -> m38_28  [key=2, style=dotted];
m38_164 -> m38_165  [key=0, style=solid];
m38_164 -> m38_28  [key=2, style=dotted];
m38_165 -> m38_166  [key=0, style=solid];
m38_165 -> m38_28  [key=2, style=dotted];
m38_166 -> m38_167  [key=0, style=solid];
m38_166 -> m38_28  [key=2, style=dotted];
m38_173 -> m38_174  [key=0, style=solid];
m38_173 -> m38_28  [key=2, style=dotted];
m38_174 -> m38_175  [key=0, style=solid];
m38_174 -> m38_28  [key=2, style=dotted];
m38_175 -> m38_176  [key=0, style=solid];
m38_175 -> m38_28  [key=2, style=dotted];
m38_187 -> m38_188  [key=0, style=solid];
m38_187 -> m38_202  [key=2, style=dotted];
m38_188 -> m38_189  [key=0, style=solid];
m38_188 -> m38_203  [key=2, style=dotted];
m38_135 -> m38_136  [key=0, style=solid];
m38_135 -> m38_37  [key=2, style=dotted];
m38_135 -> m38_137  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_135 -> m38_138  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_135 -> m38_159  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_135 -> m38_168  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_138 -> m38_139  [key=0, style=solid];
m38_138 -> m38_38  [key=2, style=dotted];
m38_138 -> m38_153  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_154  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_155  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_156  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_157  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_159  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_164  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_165  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_166  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_168  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_173  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_174  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_175  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_177  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_183  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_189  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_190  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_191  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_138 -> m38_195  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_141 -> m38_142  [key=0, style=solid];
m38_141 -> m38_31  [key=2, style=dotted];
m38_141 -> m38_33  [key=2, style=dotted];
m38_141 -> m38_34  [key=2, style=dotted];
m38_141 -> m38_111  [key=2, style=dotted];
m38_142 -> m38_143  [key=0, style=solid];
m38_142 -> m38_146  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_142 -> m38_150  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_142 -> m38_163  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_142 -> m38_172  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_142 -> m38_180  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_142 -> m38_182  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_142 -> m38_186  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_142 -> m38_194  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_142 -> m38_195  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_136 -> m38_137  [key=0, style=solid];
m38_136 -> m38_197  [key=2, style=dotted];
m38_136 -> m38_149  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_136 -> m38_152  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_137 -> m38_138  [key=0, style=solid];
m38_137 -> m38_198  [key=2, style=dotted];
m38_159 -> m38_160  [key=0, style=solid];
m38_159 -> m38_211  [key=2, style=dotted];
m38_168 -> m38_169  [key=0, style=solid];
m38_168 -> m38_211  [key=2, style=dotted];
m38_149 -> m38_150  [key=0, style=solid];
m38_149 -> m38_204  [key=2, style=dotted];
m38_152 -> m38_153  [key=0, style=solid];
m38_152 -> m38_207  [key=2, style=dotted];
m38_152 -> m38_208  [key=2, style=dotted];
m38_153 -> m38_154  [key=0, style=solid];
m38_153 -> m38_28  [key=2, style=dotted];
m38_154 -> m38_155  [key=0, style=solid];
m38_154 -> m38_209  [key=2, style=dotted];
m38_155 -> m38_156  [key=0, style=solid];
m38_155 -> m38_28  [key=2, style=dotted];
m38_177 -> m38_178  [key=0, style=solid];
m38_177 -> m38_214  [key=2, style=dotted];
m38_177 -> m38_179  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m38_183 -> m38_184  [key=0, style=solid];
m38_183 -> m38_214  [key=2, style=dotted];
m38_183 -> m38_185  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m38_189 -> m38_190  [key=0, style=solid];
m38_189 -> m38_209  [key=2, style=dotted];
m38_190 -> m38_191  [key=0, style=solid];
m38_190 -> m38_28  [key=2, style=dotted];
m38_191 -> m38_192  [key=0, style=solid];
m38_191 -> m38_214  [key=2, style=dotted];
m38_191 -> m38_193  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m38_191 -> m38_194  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m38_191 -> m38_195  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m38_195 -> m38_196  [key=0, style=solid];
m38_195 -> m38_216  [key=2, style=dotted];
m38_140 -> m38_141  [key=0, style=solid];
m38_140 -> m38_200  [key=2, style=dotted];
m38_146 -> m38_147  [key=0, style=solid];
m38_146 -> m38_201  [key=2, style=dotted];
m38_146 -> m38_44  [key=2, style=dotted];
m38_150 -> m38_151  [key=0, style=solid];
m38_150 -> m38_205  [key=2, style=dotted];
m38_150 -> m38_152  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_163 -> m38_164  [key=0, style=solid];
m38_163 -> m38_201  [key=2, style=dotted];
m38_163 -> m38_44  [key=2, style=dotted];
m38_172 -> m38_173  [key=0, style=solid];
m38_172 -> m38_201  [key=2, style=dotted];
m38_172 -> m38_44  [key=2, style=dotted];
m38_182 -> m38_183  [key=0, style=solid];
m38_182 -> m38_201  [key=2, style=dotted];
m38_182 -> m38_44  [key=2, style=dotted];
m38_186 -> m38_187  [key=0, style=solid];
m38_186 -> m38_201  [key=2, style=dotted];
m38_186 -> m38_44  [key=2, style=dotted];
m38_194 -> m38_195  [key=0, style=solid];
m38_194 -> m38_28  [key=2, style=dotted];
m38_144 -> m38_145  [key=0, style=solid];
m38_144 -> m38_146  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_144 -> m38_147  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_144 -> m38_158  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_144 -> m38_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_145 -> m38_146  [key=0, style=solid];
m38_145 -> m38_147  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_145 -> m38_148  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_145 -> m38_158  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_145 -> m38_162  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_145 -> m38_171  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_145 -> m38_187  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_145 -> m38_188  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_145 -> m38_132  [color=darkorchid, key=3, label="Local variable decimal buyPrice", style=bold];
m38_158 -> m38_159  [key=0, style=solid];
m38_158 -> m38_202  [key=2, style=dotted];
m38_158 -> m38_210  [key=2, style=dotted];
m38_161 -> m38_162  [key=0, style=solid];
m38_161 -> m38_40  [key=2, style=dotted];
m38_161 -> m38_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_161 -> m38_163  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_161 -> m38_167  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_161 -> m38_170  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_162 -> m38_163  [key=0, style=solid];
m38_162 -> m38_167  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m38_162 -> m38_180  [color=darkorchid, key=3, label="Local variable decimal highPrice", style=bold];
m38_171 -> m38_172  [key=0, style=solid];
m38_171 -> m38_181  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m38_171 -> m38_186  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m38_171 -> m38_171  [color=darkorchid, key=3, label="Local variable decimal lowPrice", style=bold];
m38_151 -> m38_152  [key=0, style=solid];
m38_151 -> m38_206  [key=2, style=dotted];
m38_160 -> m38_161  [key=0, style=solid];
m38_160 -> m38_212  [key=2, style=dotted];
m38_167 -> m38_168  [key=0, style=solid];
m38_167 -> m38_202  [key=2, style=dotted];
m38_167 -> m38_210  [key=2, style=dotted];
m38_170 -> m38_171  [key=0, style=solid];
m38_170 -> m38_40  [key=2, style=dotted];
m38_170 -> m38_170  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_170 -> m38_172  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_170 -> m38_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_170 -> m38_186  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_170 -> m38_187  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_169 -> m38_170  [key=0, style=solid];
m38_169 -> m38_213  [key=2, style=dotted];
m38_181 -> m38_182  [key=0, style=solid];
m38_181 -> m38_181  [color=darkorchid, key=3, label="Local variable decimal newPrice", style=bold];
m38_176 -> m38_177  [key=0, style=solid];
m38_178 -> m38_179  [key=0, style=solid];
m38_178 -> m38_212  [key=2, style=dotted];
m38_179 -> m38_180  [key=0, style=solid];
m38_179 -> m38_28  [key=2, style=dotted];
m38_184 -> m38_185  [key=0, style=solid];
m38_184 -> m38_213  [key=2, style=dotted];
m38_185 -> m38_186  [key=0, style=solid];
m38_185 -> m38_28  [key=2, style=dotted];
m38_192 -> m38_193  [key=0, style=solid];
m38_192 -> m38_213  [key=2, style=dotted];
m38_193 -> m38_194  [key=0, style=solid];
m38_193 -> m38_215  [key=2, style=dotted];
m38_196 -> m38_131  [color=blue, key=0, style=bold];
m38_200 -> m38_1045  [key=0, style=solid];
m38_200 -> m38_1046  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m38_200 -> m38_1047  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m38_200 -> m38_1048  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m38_200 -> m38_1049  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m38_200 -> m38_1050  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m38_200 -> m38_1051  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m38_200 -> m38_140  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType type", style=bold];
m38_200 -> m38_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType type", style=bold];
m38_200 -> m38_264  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType type", style=bold];
m38_1045 -> m38_1046  [key=0, style=solid];
m38_1045 -> m38_1047  [key=0, style=solid];
m38_1046 -> m38_1052  [key=0, style=solid];
m38_1046 -> m38_1053  [key=2, style=dotted];
m38_1047 -> m38_1048  [key=0, style=solid];
m38_1047 -> m38_1049  [key=0, style=solid];
m38_1048 -> m38_1052  [key=0, style=solid];
m38_1048 -> m38_1053  [key=2, style=dotted];
m38_1049 -> m38_1050  [key=0, style=solid];
m38_1049 -> m38_1051  [key=0, style=solid];
m38_1050 -> m38_1052  [key=0, style=solid];
m38_1050 -> m38_1053  [key=2, style=dotted];
m38_1051 -> m38_1052  [key=0, style=solid];
m38_1051 -> m38_1054  [key=2, style=dotted];
m38_1051 -> m38_1055  [key=2, style=dotted];
m38_1052 -> m38_200  [color=blue, key=0, style=bold];
m38_406 -> m38_407  [key=0, style=solid];
m38_407 -> m38_408  [key=0, style=solid];
m38_407 -> m38_409  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m38_407 -> m38_419  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m38_407 -> m38_180  [color=darkorchid, key=3, label="Local variable decimal leverage", style=bold];
m38_408 -> m38_409  [key=0, style=solid];
m38_408 -> m38_415  [color=darkseagreen4, key=1, label=amount, style=dashed];
m38_408 -> m38_133  [color=darkorchid, key=3, label="Local variable int amount", style=bold];
m38_409 -> m38_410  [key=0, style=solid];
m38_409 -> m38_423  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_409 -> m38_424  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_409 -> m38_433  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_409 -> m38_439  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_409 -> m38_442  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m38_409 -> m38_409  [color=darkorchid, key=3, label="Local variable int quantity", style=bold];
m38_419 -> m38_420  [key=0, style=solid];
m38_419 -> m38_35  [key=2, style=dotted];
m38_415 -> m38_416  [key=0, style=solid];
m38_415 -> m38_199  [key=2, style=dotted];
m38_410 -> m38_411  [key=0, style=solid];
m38_410 -> m38_30  [key=2, style=dotted];
m38_410 -> m38_414  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_410 -> m38_417  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_410 -> m38_418  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_423 -> m38_424  [key=0, style=solid];
m38_423 -> m38_202  [key=2, style=dotted];
m38_423 -> m38_425  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_423 -> m38_426  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_424 -> m38_425  [key=0, style=solid];
m38_424 -> m38_203  [key=2, style=dotted];
m38_424 -> m38_429  [color=darkseagreen4, key=1, label=fill, style=dashed];
m38_433 -> m38_434  [key=0, style=solid];
m38_433 -> m38_202  [key=2, style=dotted];
m38_433 -> m38_210  [key=2, style=dotted];
m38_439 -> m38_440  [key=0, style=solid];
m38_439 -> m38_202  [key=2, style=dotted];
m38_439 -> m38_210  [key=2, style=dotted];
m38_442 -> m38_443  [key=0, style=solid];
m38_442 -> m38_202  [key=2, style=dotted];
m38_442 -> m38_210  [key=2, style=dotted];
m38_411 -> m38_412  [key=0, style=solid];
m38_411 -> m38_37  [key=2, style=dotted];
m38_411 -> m38_413  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_411 -> m38_414  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_411 -> m38_431  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_411 -> m38_434  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_411 -> m38_440  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_411 -> m38_443  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_414 -> m38_415  [key=0, style=solid];
m38_414 -> m38_38  [key=2, style=dotted];
m38_414 -> m38_429  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_414 -> m38_431  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_414 -> m38_434  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_414 -> m38_440  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_414 -> m38_443  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_417 -> m38_418  [key=0, style=solid];
m38_417 -> m38_31  [key=2, style=dotted];
m38_417 -> m38_33  [key=2, style=dotted];
m38_417 -> m38_34  [key=2, style=dotted];
m38_417 -> m38_111  [key=2, style=dotted];
m38_418 -> m38_419  [key=0, style=solid];
m38_418 -> m38_422  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_418 -> m38_426  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_418 -> m38_438  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_412 -> m38_413  [key=0, style=solid];
m38_412 -> m38_197  [key=2, style=dotted];
m38_412 -> m38_425  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_412 -> m38_428  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_413 -> m38_414  [key=0, style=solid];
m38_413 -> m38_198  [key=2, style=dotted];
m38_431 -> m38_432  [key=0, style=solid];
m38_431 -> m38_211  [key=2, style=dotted];
m38_434 -> m38_435  [key=0, style=solid];
m38_434 -> m38_211  [key=2, style=dotted];
m38_440 -> m38_441  [key=0, style=solid];
m38_440 -> m38_211  [key=2, style=dotted];
m38_443 -> m38_444  [key=0, style=solid];
m38_443 -> m38_211  [key=2, style=dotted];
m38_425 -> m38_426  [key=0, style=solid];
m38_425 -> m38_204  [key=2, style=dotted];
m38_428 -> m38_429  [key=0, style=solid];
m38_428 -> m38_207  [key=2, style=dotted];
m38_428 -> m38_208  [key=2, style=dotted];
m38_429 -> m38_430  [key=0, style=solid];
m38_429 -> m38_209  [key=2, style=dotted];
m38_416 -> m38_417  [key=0, style=solid];
m38_416 -> m38_200  [key=2, style=dotted];
m38_422 -> m38_423  [key=0, style=solid];
m38_422 -> m38_201  [key=2, style=dotted];
m38_422 -> m38_44  [key=2, style=dotted];
m38_426 -> m38_427  [key=0, style=solid];
m38_426 -> m38_205  [key=2, style=dotted];
m38_426 -> m38_428  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_438 -> m38_439  [key=0, style=solid];
m38_438 -> m38_201  [key=2, style=dotted];
m38_438 -> m38_44  [key=2, style=dotted];
m38_420 -> m38_421  [key=0, style=solid];
m38_420 -> m38_422  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_420 -> m38_423  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_420 -> m38_430  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_420 -> m38_433  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_420 -> m38_436  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_421 -> m38_422  [key=0, style=solid];
m38_421 -> m38_423  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_421 -> m38_424  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_421 -> m38_430  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_421 -> m38_433  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_421 -> m38_437  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m38_421 -> m38_132  [color=darkorchid, key=3, label="Local variable decimal buyPrice", style=bold];
m38_430 -> m38_431  [key=0, style=solid];
m38_430 -> m38_202  [key=2, style=dotted];
m38_430 -> m38_210  [key=2, style=dotted];
m38_436 -> m38_437  [key=0, style=solid];
m38_436 -> m38_40  [key=2, style=dotted];
m38_436 -> m38_436  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_436 -> m38_438  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_436 -> m38_439  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_436 -> m38_442  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_437 -> m38_438  [key=0, style=solid];
m38_437 -> m38_439  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m38_437 -> m38_442  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m38_437 -> m38_171  [color=darkorchid, key=3, label="Local variable decimal lowPrice", style=bold];
m38_427 -> m38_428  [key=0, style=solid];
m38_427 -> m38_206  [key=2, style=dotted];
m38_432 -> m38_433  [key=0, style=solid];
m38_432 -> m38_212  [key=2, style=dotted];
m38_435 -> m38_436  [key=0, style=solid];
m38_435 -> m38_213  [key=2, style=dotted];
m38_441 -> m38_442  [key=0, style=solid];
m38_441 -> m38_213  [key=2, style=dotted];
m38_444 -> m38_445  [key=0, style=solid];
m38_444 -> m38_212  [key=2, style=dotted];
m38_445 -> m38_406  [color=blue, key=0, style=bold];
m38_519 -> m38_1056  [color=red, key=0, style=solid];
m38_1056 -> m38_1057  [color=red, key=0, style=solid];
m38_1056 -> m38_1058  [color=red, key=2, style=dotted];
m38_1056 -> m38_113  [color=red, key=2, style=dotted];
m38_1056 -> m38_1059  [color=red, key=2, style=dotted];
m38_1057 -> m38_519  [color=blue, key=0, style=bold];
m38_1014 -> m38_1015  [key=0, style=solid];
m38_1015 -> m38_1016  [key=0, style=solid];
m38_1015 -> m38_513  [key=2, style=dotted];
m38_1015 -> m38_1020  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_1015 -> m38_1021  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_1016 -> m38_1017  [key=0, style=solid];
m38_1016 -> m38_30  [key=2, style=dotted];
m38_1016 -> m38_1019  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_1016 -> m38_1020  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_1016 -> m38_1024  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_1016 -> m38_1025  [color=red, key=1, label=securities, style=dashed];
m38_1016 -> m38_1026  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_1016 -> m38_1027  [color=red, key=1, label=securities, style=dashed];
m38_1016 -> m38_1028  [color=red, key=1, label=securities, style=dashed];
m38_1016 -> m38_1029  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_1016 -> m38_1031  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_1016 -> m38_1037  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_1016 -> m38_1039  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_1016 -> m38_1040  [color=red, key=1, label=securities, style=dashed];
m38_1020 -> m38_1021  [key=0, style=solid];
m38_1021 -> m38_1022  [key=0, style=solid];
m38_1021 -> m38_515  [key=2, style=dotted];
m38_1021 -> m38_516  [key=2, style=dotted];
m38_1021 -> m38_517  [key=2, style=dotted];
m38_1017 -> m38_1018  [key=0, style=solid];
m38_1017 -> m38_37  [key=2, style=dotted];
m38_1017 -> m38_1019  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_1017 -> m38_1022  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_1017 -> m38_1028  [color=red, key=1, label=transactions, style=dashed];
m38_1017 -> m38_1030  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_1019 -> m38_1020  [key=0, style=solid];
m38_1019 -> m38_38  [key=2, style=dotted];
m38_1019 -> m38_1023  [color=red, key=1, label=portfolio, style=dashed];
m38_1019 -> m38_1036  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_1019 -> m38_1038  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_1024 -> m38_1025  [color=red, key=0, style=solid];
m38_1024 -> m38_31  [key=2, style=dotted];
m38_1024 -> m38_200  [key=2, style=dotted];
m38_1024 -> m38_33  [key=2, style=dotted];
m38_1024 -> m38_34  [key=2, style=dotted];
m38_1024 -> m38_36  [key=2, style=dotted];
m38_1025 -> m38_1026  [color=red, key=0, style=solid];
m38_1025 -> m38_518  [color=red, key=2, style=dotted];
m38_1025 -> m38_200  [color=red, key=2, style=dotted];
m38_1025 -> m38_33  [color=red, key=2, style=dotted];
m38_1025 -> m38_519  [color=red, key=2, style=dotted];
m38_1025 -> m38_36  [color=red, key=2, style=dotted];
m38_1026 -> m38_1027  [color=red, key=0, style=solid];
m38_1026 -> m38_258  [key=2, style=dotted];
m38_1026 -> m38_44  [key=2, style=dotted];
m38_1027 -> m38_1028  [color=red, key=0, style=solid];
m38_1027 -> m38_257  [color=red, key=2, style=dotted];
m38_1028 -> m38_1029  [color=red, key=0, style=solid];
m38_1028 -> m38_205  [color=red, key=2, style=dotted];
m38_1028 -> m38_521  [color=red, key=2, style=dotted];
m38_1029 -> m38_1030  [key=0, style=solid];
m38_1029 -> m38_1031  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_1029 -> m38_1032  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_1029 -> m38_1033  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_1029 -> m38_1034  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_1029 -> m38_1036  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_1031 -> m38_1032  [key=0, style=solid];
m38_1037 -> m38_1038  [key=0, style=solid];
m38_1039 -> m38_1040  [color=red, key=0, style=solid];
m38_1039 -> m38_28  [key=2, style=dotted];
m38_1040 -> m38_1041  [color=red, key=0, style=solid];
m38_1040 -> m38_28  [color=red, key=2, style=dotted];
m38_1018 -> m38_1019  [key=0, style=solid];
m38_1018 -> m38_514  [key=2, style=dotted];
m38_1018 -> m38_1021  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_1018 -> m38_1022  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_1022 -> m38_1023  [color=red, key=0, style=solid];
m38_1022 -> m38_198  [key=2, style=dotted];
m38_1030 -> m38_1031  [key=0, style=solid];
m38_1030 -> m38_522  [key=2, style=dotted];
m38_1030 -> m38_523  [key=2, style=dotted];
m38_1030 -> m38_1042  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_1030 -> m38_1033  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_1023 -> m38_1024  [color=red, key=0, style=solid];
m38_1023 -> m38_274  [color=red, key=2, style=dotted];
m38_1036 -> m38_1035  [key=0, style=solid];
m38_1036 -> m38_676  [key=2, style=dotted];
m38_1038 -> m38_1039  [key=0, style=solid];
m38_1038 -> m38_28  [key=2, style=dotted];
m38_1032 -> m38_1033  [key=0, style=solid];
m38_1033 -> m38_1034  [key=0, style=solid];
m38_1033 -> m38_524  [key=2, style=dotted];
m38_1033 -> m38_1035  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_1034 -> m38_1035  [key=0, style=solid];
m38_1034 -> m38_1036  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m38_1035 -> m38_1036  [key=0, style=solid];
m38_1035 -> m38_1037  [key=0, style=solid];
m38_1041 -> m38_1014  [color=blue, key=0, style=bold];
m38_361 -> m38_362  [key=0, style=solid];
m38_362 -> m38_363  [key=0, style=solid];
m38_362 -> m38_398  [key=2, style=dotted];
m38_362 -> m38_367  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m38_362 -> m38_391  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m38_362 -> m38_393  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m38_363 -> m38_364  [key=0, style=solid];
m38_363 -> m38_30  [key=2, style=dotted];
m38_363 -> m38_365  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_363 -> m38_367  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_363 -> m38_368  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_367 -> m38_368  [key=0, style=solid];
m38_367 -> m38_399  [key=2, style=dotted];
m38_367 -> m38_200  [key=2, style=dotted];
m38_367 -> m38_33  [key=2, style=dotted];
m38_367 -> m38_34  [key=2, style=dotted];
m38_367 -> m38_36  [key=2, style=dotted];
m38_391 -> m38_392  [key=0, style=solid];
m38_391 -> m38_404  [key=2, style=dotted];
m38_391 -> m38_393  [color=darkseagreen4, key=1, label=marketOpen, style=dashed];
m38_393 -> m38_394  [key=0, style=solid];
m38_393 -> m38_40  [key=2, style=dotted];
m38_393 -> m38_405  [key=2, style=dotted];
m38_393 -> m38_41  [key=2, style=dotted];
m38_393 -> m38_393  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_364 -> m38_365  [key=0, style=solid];
m38_364 -> m38_37  [key=2, style=dotted];
m38_365 -> m38_366  [key=0, style=solid];
m38_365 -> m38_38  [key=2, style=dotted];
m38_365 -> m38_371  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_372  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_376  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_378  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_379  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_383  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_385  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_386  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_388  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_389  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_390  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_394  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_395  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_365 -> m38_396  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_368 -> m38_369  [key=0, style=solid];
m38_368 -> m38_370  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_368 -> m38_374  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_368 -> m38_377  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_368 -> m38_381  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_368 -> m38_384  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_366 -> m38_367  [key=0, style=solid];
m38_366 -> m38_274  [key=2, style=dotted];
m38_371 -> m38_372  [key=0, style=solid];
m38_371 -> m38_28  [key=2, style=dotted];
m38_372 -> m38_373  [key=0, style=solid];
m38_372 -> m38_28  [key=2, style=dotted];
m38_376 -> m38_377  [key=0, style=solid];
m38_376 -> m38_209  [key=2, style=dotted];
m38_378 -> m38_379  [key=0, style=solid];
m38_378 -> m38_28  [key=2, style=dotted];
m38_379 -> m38_380  [key=0, style=solid];
m38_379 -> m38_28  [key=2, style=dotted];
m38_383 -> m38_384  [key=0, style=solid];
m38_383 -> m38_209  [key=2, style=dotted];
m38_385 -> m38_386  [key=0, style=solid];
m38_385 -> m38_28  [key=2, style=dotted];
m38_386 -> m38_387  [key=0, style=solid];
m38_386 -> m38_28  [key=2, style=dotted];
m38_388 -> m38_389  [key=0, style=solid];
m38_388 -> m38_403  [key=2, style=dotted];
m38_389 -> m38_390  [key=0, style=solid];
m38_389 -> m38_28  [key=2, style=dotted];
m38_390 -> m38_391  [key=0, style=solid];
m38_390 -> m38_28  [key=2, style=dotted];
m38_394 -> m38_395  [key=0, style=solid];
m38_394 -> m38_403  [key=2, style=dotted];
m38_395 -> m38_396  [key=0, style=solid];
m38_395 -> m38_28  [key=2, style=dotted];
m38_396 -> m38_397  [key=0, style=solid];
m38_396 -> m38_28  [key=2, style=dotted];
m38_369 -> m38_370  [key=0, style=solid];
m38_369 -> m38_400  [key=2, style=dotted];
m38_369 -> m38_401  [key=2, style=dotted];
m38_370 -> m38_371  [key=0, style=solid];
m38_370 -> m38_28  [key=2, style=dotted];
m38_374 -> m38_375  [key=0, style=solid];
m38_374 -> m38_202  [key=2, style=dotted];
m38_374 -> m38_360  [key=2, style=dotted];
m38_377 -> m38_378  [key=0, style=solid];
m38_377 -> m38_28  [key=2, style=dotted];
m38_381 -> m38_382  [key=0, style=solid];
m38_381 -> m38_202  [key=2, style=dotted];
m38_381 -> m38_360  [key=2, style=dotted];
m38_384 -> m38_385  [key=0, style=solid];
m38_384 -> m38_28  [key=2, style=dotted];
m38_373 -> m38_374  [key=0, style=solid];
m38_373 -> m38_402  [key=2, style=dotted];
m38_373 -> m38_375  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_373 -> m38_380  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_375 -> m38_376  [key=0, style=solid];
m38_375 -> m38_275  [key=2, style=dotted];
m38_380 -> m38_381  [key=0, style=solid];
m38_380 -> m38_40  [key=2, style=dotted];
m38_380 -> m38_380  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_380 -> m38_382  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_380 -> m38_387  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_382 -> m38_383  [key=0, style=solid];
m38_382 -> m38_275  [key=2, style=dotted];
m38_387 -> m38_388  [key=0, style=solid];
m38_387 -> m38_40  [key=2, style=dotted];
m38_387 -> m38_387  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_387 -> m38_391  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_387 -> m38_393  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m38_392 -> m38_393  [key=0, style=solid];
m38_392 -> m38_213  [key=2, style=dotted];
m38_397 -> m38_361  [color=blue, key=0, style=bold];
m38_293 -> m38_294  [key=0, style=solid];
m38_294 -> m38_295  [key=0, style=solid];
m38_294 -> m38_30  [key=2, style=dotted];
m38_294 -> m38_296  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_294 -> m38_298  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_294 -> m38_301  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_294 -> m38_304  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_295 -> m38_296  [key=0, style=solid];
m38_295 -> m38_37  [key=2, style=dotted];
m38_296 -> m38_297  [key=0, style=solid];
m38_296 -> m38_38  [key=2, style=dotted];
m38_296 -> m38_300  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_296 -> m38_303  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_298 -> m38_299  [key=0, style=solid];
m38_298 -> m38_31  [key=2, style=dotted];
m38_298 -> m38_200  [key=2, style=dotted];
m38_298 -> m38_33  [key=2, style=dotted];
m38_298 -> m38_291  [key=2, style=dotted];
m38_298 -> m38_292  [key=2, style=dotted];
m38_298 -> m38_36  [key=2, style=dotted];
m38_301 -> m38_302  [key=0, style=solid];
m38_301 -> m38_28  [key=2, style=dotted];
m38_304 -> m38_305  [key=0, style=solid];
m38_304 -> m38_28  [key=2, style=dotted];
m38_297 -> m38_298  [key=0, style=solid];
m38_297 -> m38_274  [key=2, style=dotted];
m38_300 -> m38_301  [key=0, style=solid];
m38_300 -> m38_209  [key=2, style=dotted];
m38_303 -> m38_304  [key=0, style=solid];
m38_303 -> m38_209  [key=2, style=dotted];
m38_299 -> m38_300  [key=0, style=solid];
m38_299 -> m38_275  [key=2, style=dotted];
m38_302 -> m38_303  [key=0, style=solid];
m38_302 -> m38_275  [key=2, style=dotted];
m38_305 -> m38_293  [color=blue, key=0, style=bold];
m38_1090 -> m38_1091  [key=0, style=solid];
m38_1091 -> m38_1092  [key=0, style=solid];
m38_1091 -> m38_1081  [key=2, style=dotted];
m38_1092 -> m38_1090  [color=blue, key=0, style=bold];
m38_306 -> m38_307  [key=0, style=solid];
m38_307 -> m38_308  [key=0, style=solid];
m38_307 -> m38_30  [key=2, style=dotted];
m38_307 -> m38_309  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_307 -> m38_311  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_307 -> m38_315  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_308 -> m38_309  [key=0, style=solid];
m38_308 -> m38_37  [key=2, style=dotted];
m38_309 -> m38_310  [key=0, style=solid];
m38_309 -> m38_38  [key=2, style=dotted];
m38_309 -> m38_313  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_309 -> m38_314  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_311 -> m38_312  [key=0, style=solid];
m38_311 -> m38_31  [key=2, style=dotted];
m38_311 -> m38_200  [key=2, style=dotted];
m38_311 -> m38_33  [key=2, style=dotted];
m38_311 -> m38_34  [key=2, style=dotted];
m38_311 -> m38_36  [key=2, style=dotted];
m38_315 -> m38_316  [key=0, style=solid];
m38_315 -> m38_28  [key=2, style=dotted];
m38_310 -> m38_311  [key=0, style=solid];
m38_310 -> m38_274  [key=2, style=dotted];
m38_313 -> m38_314  [key=0, style=solid];
m38_313 -> m38_209  [key=2, style=dotted];
m38_314 -> m38_315  [key=0, style=solid];
m38_314 -> m38_28  [key=2, style=dotted];
m38_312 -> m38_313  [key=0, style=solid];
m38_312 -> m38_275  [key=2, style=dotted];
m38_316 -> m38_306  [color=blue, key=0, style=bold];
m38_1064 -> m38_1065  [key=0, style=solid];
m38_1064 -> m38_1066  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_1065 -> m38_1066  [key=0, style=solid];
m38_1066 -> m38_1067  [key=0, style=solid];
m38_1066 -> m38_1069  [key=2, style=dotted];
m38_1067 -> m38_1068  [key=0, style=solid];
m38_1068 -> m38_1064  [color=blue, key=0, style=bold];
m38_204 -> m38_1060  [key=0, style=solid];
m38_204 -> m38_147  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m38_204 -> m38_245  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m38_204 -> m38_423  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m38_204 -> m38_463  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m38_204 -> m38_843  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m38_204 -> m38_876  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m38_1060 -> m38_1061  [key=0, style=solid];
m38_1061 -> m38_204  [color=blue, key=0, style=bold];
m38_528 -> m38_529  [key=0, style=solid];
m38_529 -> m38_530  [key=0, style=solid];
m38_529 -> m38_513  [key=2, style=dotted];
m38_529 -> m38_534  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_529 -> m38_535  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_530 -> m38_531  [key=0, style=solid];
m38_530 -> m38_30  [key=2, style=dotted];
m38_530 -> m38_533  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_534  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_538  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_539  [color=red, key=1, label=securities, style=dashed];
m38_530 -> m38_540  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_541  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_542  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_543  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_545  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_549  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_530 -> m38_553  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_534 -> m38_535  [key=0, style=solid];
m38_535 -> m38_536  [key=0, style=solid];
m38_535 -> m38_515  [key=2, style=dotted];
m38_535 -> m38_516  [key=2, style=dotted];
m38_535 -> m38_517  [key=2, style=dotted];
m38_531 -> m38_532  [key=0, style=solid];
m38_531 -> m38_37  [key=2, style=dotted];
m38_531 -> m38_533  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_531 -> m38_536  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_531 -> m38_542  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_531 -> m38_544  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_533 -> m38_534  [key=0, style=solid];
m38_533 -> m38_38  [key=2, style=dotted];
m38_533 -> m38_537  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_533 -> m38_548  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_533 -> m38_550  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_538 -> m38_539  [color=red, key=0, style=solid];
m38_538 -> m38_31  [key=2, style=dotted];
m38_538 -> m38_200  [key=2, style=dotted];
m38_538 -> m38_33  [key=2, style=dotted];
m38_538 -> m38_34  [key=2, style=dotted];
m38_538 -> m38_36  [key=2, style=dotted];
m38_539 -> m38_540  [color=red, key=0, style=solid];
m38_539 -> m38_518  [color=red, key=2, style=dotted];
m38_539 -> m38_200  [color=red, key=2, style=dotted];
m38_539 -> m38_33  [color=red, key=2, style=dotted];
m38_539 -> m38_519  [color=red, key=2, style=dotted];
m38_539 -> m38_36  [color=red, key=2, style=dotted];
m38_540 -> m38_541  [key=0, style=solid];
m38_540 -> m38_257  [key=2, style=dotted];
m38_541 -> m38_542  [key=0, style=solid];
m38_541 -> m38_520  [key=2, style=dotted];
m38_541 -> m38_44  [key=2, style=dotted];
m38_542 -> m38_543  [key=0, style=solid];
m38_542 -> m38_205  [key=2, style=dotted];
m38_542 -> m38_521  [key=2, style=dotted];
m38_543 -> m38_544  [key=0, style=solid];
m38_543 -> m38_545  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_543 -> m38_546  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_545 -> m38_546  [key=0, style=solid];
m38_549 -> m38_550  [key=0, style=solid];
m38_549 -> m38_551  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_549 -> m38_552  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_553 -> m38_554  [key=0, style=solid];
m38_553 -> m38_28  [key=2, style=dotted];
m38_532 -> m38_533  [key=0, style=solid];
m38_532 -> m38_514  [key=2, style=dotted];
m38_532 -> m38_535  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_532 -> m38_536  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_536 -> m38_537  [key=0, style=solid];
m38_536 -> m38_198  [key=2, style=dotted];
m38_544 -> m38_545  [key=0, style=solid];
m38_544 -> m38_522  [key=2, style=dotted];
m38_544 -> m38_523  [key=2, style=dotted];
m38_544 -> m38_555  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_544 -> m38_546  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_537 -> m38_538  [key=0, style=solid];
m38_537 -> m38_274  [key=2, style=dotted];
m38_548 -> m38_547  [key=0, style=solid];
m38_548 -> m38_209  [key=2, style=dotted];
m38_550 -> m38_551  [key=0, style=solid];
m38_550 -> m38_28  [key=2, style=dotted];
m38_546 -> m38_547  [key=0, style=solid];
m38_546 -> m38_524  [key=2, style=dotted];
m38_547 -> m38_548  [key=0, style=solid];
m38_547 -> m38_549  [key=0, style=solid];
m38_551 -> m38_552  [key=0, style=solid];
m38_551 -> m38_28  [key=2, style=dotted];
m38_552 -> m38_553  [key=0, style=solid];
m38_552 -> m38_28  [key=2, style=dotted];
m38_554 -> m38_528  [color=blue, key=0, style=bold];
m38_217 -> m38_218  [key=0, style=solid];
m38_218 -> m38_219  [key=0, style=solid];
m38_218 -> m38_30  [key=2, style=dotted];
m38_218 -> m38_222  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_231  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_232  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_233  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_234  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_236  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_237  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_238  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_239  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_241  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_242  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_243  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_218 -> m38_244  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_219 -> m38_220  [key=0, style=solid];
m38_219 -> m38_37  [key=2, style=dotted];
m38_219 -> m38_221  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_219 -> m38_222  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_219 -> m38_250  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_219 -> m38_253  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_222 -> m38_223  [key=0, style=solid];
m38_222 -> m38_38  [key=2, style=dotted];
m38_222 -> m38_224  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_222 -> m38_225  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_222 -> m38_226  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_222 -> m38_227  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_222 -> m38_228  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_222 -> m38_250  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_222 -> m38_253  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_231 -> m38_232  [key=0, style=solid];
m38_231 -> m38_31  [key=2, style=dotted];
m38_231 -> m38_33  [key=2, style=dotted];
m38_231 -> m38_34  [key=2, style=dotted];
m38_231 -> m38_111  [key=2, style=dotted];
m38_232 -> m38_233  [key=0, style=solid];
m38_232 -> m38_35  [key=2, style=dotted];
m38_233 -> m38_234  [key=0, style=solid];
m38_233 -> m38_257  [key=2, style=dotted];
m38_234 -> m38_235  [key=0, style=solid];
m38_234 -> m38_258  [key=2, style=dotted];
m38_234 -> m38_44  [key=2, style=dotted];
m38_236 -> m38_237  [key=0, style=solid];
m38_236 -> m38_109  [key=2, style=dotted];
m38_236 -> m38_34  [key=2, style=dotted];
m38_236 -> m38_111  [key=2, style=dotted];
m38_237 -> m38_238  [key=0, style=solid];
m38_237 -> m38_35  [key=2, style=dotted];
m38_238 -> m38_239  [key=0, style=solid];
m38_238 -> m38_257  [key=2, style=dotted];
m38_239 -> m38_240  [key=0, style=solid];
m38_239 -> m38_258  [key=2, style=dotted];
m38_239 -> m38_44  [key=2, style=dotted];
m38_241 -> m38_242  [key=0, style=solid];
m38_241 -> m38_109  [key=2, style=dotted];
m38_241 -> m38_34  [key=2, style=dotted];
m38_241 -> m38_111  [key=2, style=dotted];
m38_242 -> m38_243  [key=0, style=solid];
m38_242 -> m38_35  [key=2, style=dotted];
m38_243 -> m38_244  [key=0, style=solid];
m38_243 -> m38_257  [key=2, style=dotted];
m38_244 -> m38_245  [key=0, style=solid];
m38_244 -> m38_258  [key=2, style=dotted];
m38_244 -> m38_44  [key=2, style=dotted];
m38_220 -> m38_221  [key=0, style=solid];
m38_220 -> m38_197  [key=2, style=dotted];
m38_220 -> m38_246  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_220 -> m38_249  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_221 -> m38_222  [key=0, style=solid];
m38_221 -> m38_198  [key=2, style=dotted];
m38_250 -> m38_251  [key=0, style=solid];
m38_250 -> m38_211  [key=2, style=dotted];
m38_253 -> m38_254  [key=0, style=solid];
m38_253 -> m38_211  [key=2, style=dotted];
m38_246 -> m38_247  [key=0, style=solid];
m38_246 -> m38_204  [key=2, style=dotted];
m38_249 -> m38_250  [key=0, style=solid];
m38_249 -> m38_207  [key=2, style=dotted];
m38_249 -> m38_208  [key=2, style=dotted];
m38_223 -> m38_224  [key=0, style=solid];
m38_223 -> m38_199  [key=2, style=dotted];
m38_224 -> m38_225  [key=0, style=solid];
m38_224 -> m38_256  [key=2, style=dotted];
m38_225 -> m38_226  [key=0, style=solid];
m38_225 -> m38_256  [key=2, style=dotted];
m38_226 -> m38_227  [key=0, style=solid];
m38_227 -> m38_228  [key=0, style=solid];
m38_227 -> m38_241  [color=darkseagreen4, key=1, label=gbpCash, style=dashed];
m38_228 -> m38_229  [key=0, style=solid];
m38_228 -> m38_236  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m38_229 -> m38_230  [key=0, style=solid];
m38_229 -> m38_234  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_229 -> m38_239  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_229 -> m38_244  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_230 -> m38_231  [key=0, style=solid];
m38_230 -> m38_200  [key=2, style=dotted];
m38_235 -> m38_236  [key=0, style=solid];
m38_235 -> m38_200  [key=2, style=dotted];
m38_240 -> m38_241  [key=0, style=solid];
m38_240 -> m38_200  [key=2, style=dotted];
m38_245 -> m38_246  [key=0, style=solid];
m38_245 -> m38_202  [key=2, style=dotted];
m38_245 -> m38_247  [color=darkseagreen4, key=1, label=acceptedOrder, style=dashed];
m38_245 -> m38_250  [color=darkseagreen4, key=1, label=acceptedOrder, style=dashed];
m38_247 -> m38_248  [key=0, style=solid];
m38_247 -> m38_205  [key=2, style=dotted];
m38_247 -> m38_249  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_248 -> m38_249  [key=0, style=solid];
m38_248 -> m38_206  [key=2, style=dotted];
m38_251 -> m38_252  [key=0, style=solid];
m38_251 -> m38_213  [key=2, style=dotted];
m38_252 -> m38_253  [key=0, style=solid];
m38_252 -> m38_202  [key=2, style=dotted];
m38_254 -> m38_255  [key=0, style=solid];
m38_254 -> m38_212  [key=2, style=dotted];
m38_255 -> m38_217  [color=blue, key=0, style=bold];
m38_342 -> m38_343  [key=0, style=solid];
m38_343 -> m38_344  [key=0, style=solid];
m38_343 -> m38_30  [key=2, style=dotted];
m38_343 -> m38_345  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_343 -> m38_348  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_343 -> m38_349  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_344 -> m38_345  [key=0, style=solid];
m38_344 -> m38_37  [key=2, style=dotted];
m38_345 -> m38_346  [key=0, style=solid];
m38_345 -> m38_38  [key=2, style=dotted];
m38_345 -> m38_347  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_345 -> m38_348  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_345 -> m38_351  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_345 -> m38_354  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_345 -> m38_356  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_345 -> m38_357  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_345 -> m38_358  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_348 -> m38_349  [key=0, style=solid];
m38_348 -> m38_109  [key=2, style=dotted];
m38_348 -> m38_200  [key=2, style=dotted];
m38_348 -> m38_34  [key=2, style=dotted];
m38_348 -> m38_36  [key=2, style=dotted];
m38_349 -> m38_350  [key=0, style=solid];
m38_349 -> m38_352  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_349 -> m38_355  [color=darkseagreen4, key=1, label=security, style=dashed];
m38_346 -> m38_347  [key=0, style=solid];
m38_346 -> m38_274  [key=2, style=dotted];
m38_347 -> m38_348  [key=0, style=solid];
m38_347 -> m38_256  [key=2, style=dotted];
m38_351 -> m38_352  [key=0, style=solid];
m38_351 -> m38_28  [key=2, style=dotted];
m38_354 -> m38_355  [key=0, style=solid];
m38_354 -> m38_209  [key=2, style=dotted];
m38_356 -> m38_357  [key=0, style=solid];
m38_356 -> m38_28  [key=2, style=dotted];
m38_357 -> m38_358  [key=0, style=solid];
m38_357 -> m38_28  [key=2, style=dotted];
m38_358 -> m38_359  [key=0, style=solid];
m38_358 -> m38_28  [key=2, style=dotted];
m38_350 -> m38_351  [key=0, style=solid];
m38_350 -> m38_28  [key=2, style=dotted];
m38_352 -> m38_353  [key=0, style=solid];
m38_352 -> m38_202  [key=2, style=dotted];
m38_352 -> m38_360  [key=2, style=dotted];
m38_355 -> m38_356  [key=0, style=solid];
m38_355 -> m38_28  [key=2, style=dotted];
m38_353 -> m38_354  [key=0, style=solid];
m38_353 -> m38_275  [key=2, style=dotted];
m38_359 -> m38_342  [color=blue, key=0, style=bold];
m38_860 -> m38_861  [key=0, style=solid];
m38_861 -> m38_862  [key=0, style=solid];
m38_861 -> m38_513  [key=2, style=dotted];
m38_861 -> m38_867  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_862 -> m38_863  [key=0, style=solid];
m38_862 -> m38_30  [key=2, style=dotted];
m38_862 -> m38_865  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_862 -> m38_867  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_862 -> m38_870  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_862 -> m38_871  [color=red, key=1, label=securities, style=dashed];
m38_862 -> m38_872  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_862 -> m38_873  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_862 -> m38_874  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_862 -> m38_875  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_862 -> m38_883  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_867 -> m38_868  [key=0, style=solid];
m38_863 -> m38_864  [key=0, style=solid];
m38_863 -> m38_37  [key=2, style=dotted];
m38_863 -> m38_865  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_863 -> m38_868  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_863 -> m38_881  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_863 -> m38_889  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_865 -> m38_866  [key=0, style=solid];
m38_865 -> m38_38  [key=2, style=dotted];
m38_865 -> m38_869  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_865 -> m38_881  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_865 -> m38_889  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_870 -> m38_871  [color=red, key=0, style=solid];
m38_870 -> m38_31  [key=2, style=dotted];
m38_870 -> m38_200  [key=2, style=dotted];
m38_870 -> m38_33  [key=2, style=dotted];
m38_870 -> m38_34  [key=2, style=dotted];
m38_870 -> m38_36  [key=2, style=dotted];
m38_871 -> m38_872  [color=red, key=0, style=solid];
m38_871 -> m38_518  [color=red, key=2, style=dotted];
m38_871 -> m38_200  [color=red, key=2, style=dotted];
m38_871 -> m38_33  [color=red, key=2, style=dotted];
m38_871 -> m38_519  [color=red, key=2, style=dotted];
m38_871 -> m38_36  [color=red, key=2, style=dotted];
m38_872 -> m38_873  [key=0, style=solid];
m38_872 -> m38_258  [key=2, style=dotted];
m38_872 -> m38_44  [key=2, style=dotted];
m38_873 -> m38_874  [key=0, style=solid];
m38_873 -> m38_257  [key=2, style=dotted];
m38_874 -> m38_875  [key=0, style=solid];
m38_874 -> m38_878  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_874 -> m38_886  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_875 -> m38_876  [key=0, style=solid];
m38_883 -> m38_884  [key=0, style=solid];
m38_883 -> m38_258  [key=2, style=dotted];
m38_883 -> m38_44  [key=2, style=dotted];
m38_864 -> m38_865  [key=0, style=solid];
m38_864 -> m38_197  [key=2, style=dotted];
m38_864 -> m38_868  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_864 -> m38_877  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_864 -> m38_880  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_864 -> m38_885  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_864 -> m38_888  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_868 -> m38_869  [key=0, style=solid];
m38_868 -> m38_198  [key=2, style=dotted];
m38_881 -> m38_882  [key=0, style=solid];
m38_881 -> m38_211  [key=2, style=dotted];
m38_889 -> m38_890  [key=0, style=solid];
m38_889 -> m38_211  [key=2, style=dotted];
m38_877 -> m38_878  [key=0, style=solid];
m38_877 -> m38_204  [key=2, style=dotted];
m38_880 -> m38_881  [key=0, style=solid];
m38_880 -> m38_207  [key=2, style=dotted];
m38_880 -> m38_208  [key=2, style=dotted];
m38_885 -> m38_886  [key=0, style=solid];
m38_885 -> m38_204  [key=2, style=dotted];
m38_888 -> m38_889  [key=0, style=solid];
m38_888 -> m38_207  [key=2, style=dotted];
m38_888 -> m38_208  [key=2, style=dotted];
m38_866 -> m38_867  [key=0, style=solid];
m38_866 -> m38_876  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_866 -> m38_884  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_869 -> m38_870  [key=0, style=solid];
m38_869 -> m38_274  [key=2, style=dotted];
m38_876 -> m38_877  [key=0, style=solid];
m38_876 -> m38_859  [key=2, style=dotted];
m38_876 -> m38_210  [key=2, style=dotted];
m38_876 -> m38_878  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_876 -> m38_881  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_884 -> m38_885  [key=0, style=solid];
m38_884 -> m38_859  [key=2, style=dotted];
m38_884 -> m38_210  [key=2, style=dotted];
m38_884 -> m38_886  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_884 -> m38_889  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_878 -> m38_879  [key=0, style=solid];
m38_878 -> m38_205  [key=2, style=dotted];
m38_878 -> m38_880  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_886 -> m38_887  [key=0, style=solid];
m38_886 -> m38_205  [key=2, style=dotted];
m38_886 -> m38_888  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_879 -> m38_880  [key=0, style=solid];
m38_879 -> m38_206  [key=2, style=dotted];
m38_882 -> m38_883  [key=0, style=solid];
m38_882 -> m38_212  [key=2, style=dotted];
m38_887 -> m38_888  [key=0, style=solid];
m38_887 -> m38_206  [key=2, style=dotted];
m38_890 -> m38_891  [key=0, style=solid];
m38_890 -> m38_213  [key=2, style=dotted];
m38_891 -> m38_860  [color=blue, key=0, style=bold];
m38_827 -> m38_828  [key=0, style=solid];
m38_828 -> m38_829  [key=0, style=solid];
m38_828 -> m38_513  [key=2, style=dotted];
m38_828 -> m38_834  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_829 -> m38_830  [key=0, style=solid];
m38_829 -> m38_30  [key=2, style=dotted];
m38_829 -> m38_832  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_829 -> m38_834  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_829 -> m38_837  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_829 -> m38_838  [color=red, key=1, label=securities, style=dashed];
m38_829 -> m38_839  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_829 -> m38_840  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_829 -> m38_841  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_829 -> m38_842  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_829 -> m38_850  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_834 -> m38_835  [key=0, style=solid];
m38_830 -> m38_831  [key=0, style=solid];
m38_830 -> m38_37  [key=2, style=dotted];
m38_830 -> m38_832  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_830 -> m38_835  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_830 -> m38_848  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_830 -> m38_856  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_832 -> m38_833  [key=0, style=solid];
m38_832 -> m38_38  [key=2, style=dotted];
m38_832 -> m38_836  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_832 -> m38_848  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_832 -> m38_856  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_837 -> m38_838  [color=red, key=0, style=solid];
m38_837 -> m38_31  [key=2, style=dotted];
m38_837 -> m38_200  [key=2, style=dotted];
m38_837 -> m38_33  [key=2, style=dotted];
m38_837 -> m38_34  [key=2, style=dotted];
m38_837 -> m38_36  [key=2, style=dotted];
m38_838 -> m38_839  [color=red, key=0, style=solid];
m38_838 -> m38_518  [color=red, key=2, style=dotted];
m38_838 -> m38_200  [color=red, key=2, style=dotted];
m38_838 -> m38_33  [color=red, key=2, style=dotted];
m38_838 -> m38_519  [color=red, key=2, style=dotted];
m38_838 -> m38_36  [color=red, key=2, style=dotted];
m38_839 -> m38_840  [key=0, style=solid];
m38_839 -> m38_258  [key=2, style=dotted];
m38_839 -> m38_44  [key=2, style=dotted];
m38_840 -> m38_841  [key=0, style=solid];
m38_840 -> m38_257  [key=2, style=dotted];
m38_841 -> m38_842  [key=0, style=solid];
m38_841 -> m38_845  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_841 -> m38_853  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_842 -> m38_843  [key=0, style=solid];
m38_850 -> m38_851  [key=0, style=solid];
m38_850 -> m38_258  [key=2, style=dotted];
m38_850 -> m38_44  [key=2, style=dotted];
m38_831 -> m38_832  [key=0, style=solid];
m38_831 -> m38_197  [key=2, style=dotted];
m38_831 -> m38_835  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_831 -> m38_844  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_831 -> m38_847  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_831 -> m38_852  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_831 -> m38_855  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m38_835 -> m38_836  [key=0, style=solid];
m38_835 -> m38_198  [key=2, style=dotted];
m38_848 -> m38_849  [key=0, style=solid];
m38_848 -> m38_211  [key=2, style=dotted];
m38_856 -> m38_857  [key=0, style=solid];
m38_856 -> m38_211  [key=2, style=dotted];
m38_844 -> m38_845  [key=0, style=solid];
m38_844 -> m38_204  [key=2, style=dotted];
m38_847 -> m38_848  [key=0, style=solid];
m38_847 -> m38_207  [key=2, style=dotted];
m38_847 -> m38_208  [key=2, style=dotted];
m38_852 -> m38_853  [key=0, style=solid];
m38_852 -> m38_204  [key=2, style=dotted];
m38_855 -> m38_856  [key=0, style=solid];
m38_855 -> m38_207  [key=2, style=dotted];
m38_855 -> m38_208  [key=2, style=dotted];
m38_833 -> m38_834  [key=0, style=solid];
m38_833 -> m38_843  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_833 -> m38_851  [color=darkseagreen4, key=1, label=time, style=dashed];
m38_836 -> m38_837  [key=0, style=solid];
m38_836 -> m38_274  [key=2, style=dotted];
m38_843 -> m38_844  [key=0, style=solid];
m38_843 -> m38_859  [key=2, style=dotted];
m38_843 -> m38_210  [key=2, style=dotted];
m38_843 -> m38_845  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_843 -> m38_848  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_851 -> m38_852  [key=0, style=solid];
m38_851 -> m38_859  [key=2, style=dotted];
m38_851 -> m38_210  [key=2, style=dotted];
m38_851 -> m38_853  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_851 -> m38_856  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_845 -> m38_846  [key=0, style=solid];
m38_845 -> m38_205  [key=2, style=dotted];
m38_845 -> m38_847  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_853 -> m38_854  [key=0, style=solid];
m38_853 -> m38_205  [key=2, style=dotted];
m38_853 -> m38_855  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_846 -> m38_847  [key=0, style=solid];
m38_846 -> m38_206  [key=2, style=dotted];
m38_849 -> m38_850  [key=0, style=solid];
m38_849 -> m38_212  [key=2, style=dotted];
m38_854 -> m38_855  [key=0, style=solid];
m38_854 -> m38_206  [key=2, style=dotted];
m38_857 -> m38_858  [key=0, style=solid];
m38_857 -> m38_213  [key=2, style=dotted];
m38_858 -> m38_827  [color=blue, key=0, style=bold];
m38_952 -> m38_953  [key=0, style=solid];
m38_953 -> m38_954  [key=0, style=solid];
m38_953 -> m38_513  [key=2, style=dotted];
m38_953 -> m38_958  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_953 -> m38_959  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_954 -> m38_955  [key=0, style=solid];
m38_954 -> m38_30  [key=2, style=dotted];
m38_954 -> m38_957  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_958  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_962  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_963  [color=red, key=1, label=securities, style=dashed];
m38_954 -> m38_964  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_965  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_966  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_967  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_969  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_975  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_977  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_954 -> m38_978  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_958 -> m38_959  [key=0, style=solid];
m38_959 -> m38_960  [key=0, style=solid];
m38_959 -> m38_515  [key=2, style=dotted];
m38_959 -> m38_516  [key=2, style=dotted];
m38_959 -> m38_517  [key=2, style=dotted];
m38_955 -> m38_956  [key=0, style=solid];
m38_955 -> m38_37  [key=2, style=dotted];
m38_955 -> m38_957  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_955 -> m38_960  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_955 -> m38_966  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_955 -> m38_968  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_957 -> m38_958  [key=0, style=solid];
m38_957 -> m38_38  [key=2, style=dotted];
m38_957 -> m38_961  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_957 -> m38_974  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_957 -> m38_976  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_962 -> m38_963  [color=red, key=0, style=solid];
m38_962 -> m38_31  [key=2, style=dotted];
m38_962 -> m38_200  [key=2, style=dotted];
m38_962 -> m38_33  [key=2, style=dotted];
m38_962 -> m38_34  [key=2, style=dotted];
m38_962 -> m38_36  [key=2, style=dotted];
m38_963 -> m38_964  [color=red, key=0, style=solid];
m38_963 -> m38_518  [color=red, key=2, style=dotted];
m38_963 -> m38_200  [color=red, key=2, style=dotted];
m38_963 -> m38_33  [color=red, key=2, style=dotted];
m38_963 -> m38_519  [color=red, key=2, style=dotted];
m38_963 -> m38_36  [color=red, key=2, style=dotted];
m38_964 -> m38_965  [key=0, style=solid];
m38_964 -> m38_258  [key=2, style=dotted];
m38_964 -> m38_44  [key=2, style=dotted];
m38_965 -> m38_966  [key=0, style=solid];
m38_965 -> m38_257  [key=2, style=dotted];
m38_966 -> m38_967  [key=0, style=solid];
m38_966 -> m38_205  [key=2, style=dotted];
m38_966 -> m38_521  [key=2, style=dotted];
m38_967 -> m38_968  [key=0, style=solid];
m38_967 -> m38_969  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_967 -> m38_970  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_967 -> m38_971  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_967 -> m38_972  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_967 -> m38_974  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_969 -> m38_970  [key=0, style=solid];
m38_975 -> m38_976  [key=0, style=solid];
m38_977 -> m38_978  [key=0, style=solid];
m38_977 -> m38_28  [key=2, style=dotted];
m38_978 -> m38_979  [key=0, style=solid];
m38_978 -> m38_28  [key=2, style=dotted];
m38_956 -> m38_957  [key=0, style=solid];
m38_956 -> m38_514  [key=2, style=dotted];
m38_956 -> m38_959  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_956 -> m38_960  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_960 -> m38_961  [key=0, style=solid];
m38_960 -> m38_198  [key=2, style=dotted];
m38_968 -> m38_969  [key=0, style=solid];
m38_968 -> m38_522  [key=2, style=dotted];
m38_968 -> m38_523  [key=2, style=dotted];
m38_968 -> m38_980  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_968 -> m38_971  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_961 -> m38_962  [key=0, style=solid];
m38_961 -> m38_274  [key=2, style=dotted];
m38_974 -> m38_973  [key=0, style=solid];
m38_974 -> m38_676  [key=2, style=dotted];
m38_976 -> m38_977  [key=0, style=solid];
m38_976 -> m38_28  [key=2, style=dotted];
m38_970 -> m38_971  [key=0, style=solid];
m38_971 -> m38_972  [key=0, style=solid];
m38_971 -> m38_524  [key=2, style=dotted];
m38_971 -> m38_973  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_972 -> m38_973  [key=0, style=solid];
m38_972 -> m38_974  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m38_973 -> m38_974  [key=0, style=solid];
m38_973 -> m38_975  [key=0, style=solid];
m38_979 -> m38_952  [color=blue, key=0, style=bold];
m38_710 -> m38_711  [key=0, style=solid];
m38_711 -> m38_712  [key=0, style=solid];
m38_711 -> m38_513  [key=2, style=dotted];
m38_711 -> m38_716  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_711 -> m38_717  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m38_712 -> m38_713  [key=0, style=solid];
m38_712 -> m38_30  [key=2, style=dotted];
m38_712 -> m38_715  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_712 -> m38_716  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_712 -> m38_720  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_712 -> m38_721  [color=red, key=1, label=securities, style=dashed];
m38_712 -> m38_722  [color=red, key=1, label=securities, style=dashed];
m38_712 -> m38_723  [color=red, key=1, label=securities, style=dashed];
m38_712 -> m38_724  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_712 -> m38_726  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_712 -> m38_731  [color=darkseagreen4, key=1, label=securities, style=dashed];
m38_712 -> m38_735  [color=red, key=1, label=securities, style=dashed];
m38_716 -> m38_717  [key=0, style=solid];
m38_717 -> m38_718  [key=0, style=solid];
m38_717 -> m38_515  [key=2, style=dotted];
m38_717 -> m38_516  [key=2, style=dotted];
m38_717 -> m38_517  [key=2, style=dotted];
m38_713 -> m38_714  [key=0, style=solid];
m38_713 -> m38_37  [key=2, style=dotted];
m38_713 -> m38_715  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_713 -> m38_718  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_713 -> m38_723  [color=red, key=1, label=transactions, style=dashed];
m38_713 -> m38_725  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m38_715 -> m38_716  [key=0, style=solid];
m38_715 -> m38_38  [key=2, style=dotted];
m38_715 -> m38_719  [color=red, key=1, label=portfolio, style=dashed];
m38_715 -> m38_730  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_715 -> m38_732  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m38_720 -> m38_721  [color=red, key=0, style=solid];
m38_720 -> m38_31  [key=2, style=dotted];
m38_720 -> m38_200  [key=2, style=dotted];
m38_720 -> m38_33  [key=2, style=dotted];
m38_720 -> m38_34  [key=2, style=dotted];
m38_720 -> m38_36  [key=2, style=dotted];
m38_721 -> m38_722  [color=red, key=0, style=solid];
m38_721 -> m38_518  [color=red, key=2, style=dotted];
m38_721 -> m38_200  [color=red, key=2, style=dotted];
m38_721 -> m38_33  [color=red, key=2, style=dotted];
m38_721 -> m38_519  [color=red, key=2, style=dotted];
m38_721 -> m38_36  [color=red, key=2, style=dotted];
m38_722 -> m38_723  [color=red, key=0, style=solid];
m38_722 -> m38_257  [color=red, key=2, style=dotted];
m38_723 -> m38_724  [color=red, key=0, style=solid];
m38_723 -> m38_205  [color=red, key=2, style=dotted];
m38_723 -> m38_521  [color=red, key=2, style=dotted];
m38_724 -> m38_725  [key=0, style=solid];
m38_724 -> m38_726  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_724 -> m38_727  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_724 -> m38_728  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_724 -> m38_730  [color=darkseagreen4, key=1, label=option, style=dashed];
m38_726 -> m38_727  [key=0, style=solid];
m38_731 -> m38_732  [key=0, style=solid];
m38_731 -> m38_733  [color=red, key=1, label=newUnderlyingHoldings, style=dashed];
m38_731 -> m38_734  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m38_735 -> m38_736  [color=red, key=0, style=solid];
m38_735 -> m38_28  [color=red, key=2, style=dotted];
m38_714 -> m38_715  [key=0, style=solid];
m38_714 -> m38_514  [key=2, style=dotted];
m38_714 -> m38_717  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_714 -> m38_718  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m38_718 -> m38_719  [color=red, key=0, style=solid];
m38_718 -> m38_198  [key=2, style=dotted];
m38_725 -> m38_726  [key=0, style=solid];
m38_725 -> m38_522  [key=2, style=dotted];
m38_725 -> m38_523  [key=2, style=dotted];
m38_725 -> m38_737  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_725 -> m38_727  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_719 -> m38_720  [color=red, key=0, style=solid];
m38_719 -> m38_274  [color=red, key=2, style=dotted];
m38_730 -> m38_729  [key=0, style=solid];
m38_730 -> m38_676  [key=2, style=dotted];
m38_732 -> m38_733  [color=red, key=0, style=solid];
m38_732 -> m38_28  [key=2, style=dotted];
m38_727 -> m38_728  [key=0, style=solid];
m38_727 -> m38_524  [key=2, style=dotted];
m38_727 -> m38_729  [color=darkseagreen4, key=1, label=fills, style=dashed];
m38_728 -> m38_729  [key=0, style=solid];
m38_728 -> m38_730  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m38_729 -> m38_730  [key=0, style=solid];
m38_729 -> m38_731  [key=0, style=solid];
m38_733 -> m38_734  [color=red, key=0, style=solid];
m38_733 -> m38_28  [color=red, key=2, style=dotted];
m38_734 -> m38_735  [color=red, key=0, style=solid];
m38_734 -> m38_28  [key=2, style=dotted];
m38_736 -> m38_710  [color=blue, key=0, style=bold];
m38_1100 -> m38_140  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_230  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_235  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_264  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_281  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_298  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_311  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_322  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_334  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_348  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_367  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_416  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_456  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_496  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_497  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_538  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_539  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_568  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_569  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_599  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_600  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_628  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_629  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_658  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_659  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_690  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_691  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_720  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_721  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_750  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_751  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_779  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_780  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_808  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_809  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_837  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_838  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_870  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_871  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_902  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_903  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_931  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_932  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_962  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_963  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_993  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_994  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_1024  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1100 -> m38_1025  [color=red, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m38_1101 -> m38_1060  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m38_1101 -> m38_1062  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m38_1101 -> m38_1066  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m38_1101 -> m38_1071  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m38_1101 -> m38_1079  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m38_1101 -> m38_1087  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m38_1101 -> m38_1091  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m38_1102 -> m38_1075  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_49 -> m40_50  [key=0, style=solid];
m40_49 -> m40_52  [color=darkseagreen4, key=1, label=double, style=dashed];
m40_49 -> m40_53  [color=darkseagreen4, key=1, label=double, style=dashed];
m40_50 -> m40_51  [key=0, style=solid];
m40_50 -> m40_52  [key=0, style=solid];
m40_52 -> m40_53  [key=0, style=solid];
m40_52 -> m40_55  [key=2, style=dotted];
m40_52 -> m40_56  [key=2, style=dotted];
m40_52 -> m40_57  [key=2, style=dotted];
m40_52 -> m40_58  [key=2, style=dotted];
m40_53 -> m40_54  [key=0, style=solid];
m40_53 -> m40_59  [key=2, style=dotted];
m40_51 -> m40_54  [key=0, style=solid];
m40_54 -> m40_49  [color=blue, key=0, style=bold];
m40_21 -> m40_22  [key=0, style=solid];
m40_21 -> m40_23  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m40_21 -> m40_34  [key=0, style=solid];
m40_21 -> m40_37  [key=2, style=dotted];
m40_22 -> m40_23  [key=0, style=solid];
m40_22 -> m40_24  [color=darkseagreen4, key=1, label=chars, style=dashed];
m40_22 -> m40_31  [color=darkseagreen4, key=1, label=market, style=dashed];
m40_22 -> m40_32  [color=darkseagreen4, key=1, label=market, style=dashed];
m40_22 -> m40_33  [color=darkseagreen4, key=1, label=market, style=dashed];
m40_23 -> m40_24  [key=0, style=solid];
m40_23 -> m40_15  [key=2, style=dotted];
m40_23 -> m40_33  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m40_23 -> m40_39  [key=2, style=dotted];
m40_24 -> m40_25  [key=0, style=solid];
m40_24 -> m40_26  [key=2, style=dotted];
m40_24 -> m40_32  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m40_24 -> m40_40  [key=2, style=dotted];
m40_24 -> m40_31  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m40_25 -> m40_21  [color=blue, key=0, style=bold];
m40_25 -> m40_33  [color=darkseagreen4, key=1, label=date, style=dashed];
m40_25 -> m40_26  [key=0, style=solid];
m40_25 -> m40_41  [key=2, style=dotted];
m40_25 -> m40_42  [key=2, style=dotted];
m40_25 -> m40_43  [key=2, style=dotted];
m40_20 -> m40_22  [key=0, style=solid];
m40_20 -> m40_38  [key=2, style=dotted];
m40_20 -> m40_27  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m40_20 -> m40_32  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m40_20 -> m40_33  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m40_20 -> m40_21  [key=0, style=solid];
m40_44 -> m40_42  [color=blue, key=0, style=bold];
m40_9 -> m40_10  [key=0, style=solid];
m40_9 -> m40_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_9 -> m40_35  [key=2, style=dotted];
m40_10 -> m40_11  [key=0, style=solid];
m40_10 -> m40_12  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m40_10 -> m40_33  [color=darkseagreen4, key=1, label=filename, style=dashed];
m40_10 -> m40_25  [color=darkseagreen4, key=1, label=filename, style=dashed];
m40_10 -> m40_28  [color=darkseagreen4, key=1, label=filename, style=dashed];
m40_11 -> m40_12  [key=0, style=solid];
m40_11 -> m40_14  [key=2, style=dotted];
m40_11 -> m40_15  [key=2, style=dotted];
m40_11 -> m40_16  [color=darkseagreen4, key=1, label=parts, style=dashed];
m40_11 -> m40_22  [color=darkseagreen4, key=1, label=parts, style=dashed];
m40_11 -> m40_36  [key=2, style=dotted];
m40_11 -> m40_19  [color=darkseagreen4, key=1, label=parts, style=dashed];
m40_11 -> m40_23  [color=darkseagreen4, key=1, label=parts, style=dashed];
m40_11 -> m40_24  [color=darkseagreen4, key=1, label=parts, style=dashed];
m40_12 -> m40_13  [key=0, style=solid];
m40_12 -> m40_14  [key=0, style=solid];
m40_13 -> m40_9  [color=blue, key=0, style=bold];
m40_13 -> m40_34  [key=0, style=solid];
m40_13 -> m40_37  [key=2, style=dotted];
m40_131 -> m40_132  [key=0, style=solid];
m40_131 -> m40_133  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m40_131 -> m40_134  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m40_131 -> m40_131  [color=darkorchid, key=3, label="method methodReturn System.DateTime RoundUp", style=bold];
m40_132 -> m40_133  [key=0, style=solid];
m40_132 -> m40_134  [key=0, style=solid];
m40_133 -> m40_135  [key=0, style=solid];
m40_134 -> m40_135  [key=0, style=solid];
m40_134 -> m40_129  [key=2, style=dotted];
m40_134 -> m40_134  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m40_135 -> m40_131  [color=blue, key=0, style=bold];
m40_14 -> m40_16  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_14 -> m40_18  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_14 -> m40_22  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_14 -> m40_15  [key=0, style=solid];
m40_14 -> m40_23  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_14 -> m40_24  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_14 -> m40_25  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_166 -> m40_167  [key=0, style=solid];
m40_47 -> m40_48  [key=0, style=solid];
m40_46 -> m40_47  [key=0, style=solid];
m40_48 -> m40_46  [color=blue, key=0, style=bold];
m40_48 -> m40_1  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataPathComponents", style=dashed];
m40_48 -> m40_2  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataPathComponents", style=dashed];
m40_48 -> m40_3  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataPathComponents", style=dashed];
m40_48 -> m40_4  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataPathComponents", style=dashed];
m40_48 -> m40_5  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataPathComponents", style=dashed];
m40_48 -> m40_6  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataPathComponents", style=dashed];
m40_160 -> m40_161  [key=0, style=solid];
m40_160 -> m40_162  [key=2, style=dotted];
m40_164 -> m40_165  [key=0, style=solid];
m40_164 -> m40_162  [key=2, style=dotted];
m40_167 -> m40_168  [key=0, style=solid];
m40_167 -> m40_162  [key=2, style=dotted];
m40_159 -> m40_160  [key=0, style=solid];
m40_163 -> m40_164  [key=0, style=solid];
m40_161 -> m40_159  [color=blue, key=0, style=bold];
m40_165 -> m40_163  [color=blue, key=0, style=bold];
m40_168 -> m40_166  [color=blue, key=0, style=bold];
m40_42 -> m40_43  [key=0, style=solid];
m40_42 -> m40_47  [color=darkseagreen4, key=1, label=V, style=dashed];
m40_26 -> m40_27  [key=0, style=solid];
m40_0 -> m40_1  [key=0, style=solid];
m40_0 -> m40_2  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m40_0 -> m40_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_0 -> m40_4  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m40_0 -> m40_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_0 -> m40_6  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_5  [color=darkseagreen4, key=1, label=oItem, style=dashed];
m40_2 -> m40_3  [key=0, style=solid];
m40_2 -> m40_7  [key=2, style=dotted];
m40_3 -> m40_4  [key=0, style=solid];
m40_3 -> m40_5  [key=0, style=solid];
m40_4 -> m40_5  [key=0, style=solid];
m40_4 -> m40_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m40_5 -> m40_6  [key=0, style=solid];
m40_5 -> m40_8  [key=2, style=dotted];
m40_6 -> m40_0  [color=blue, key=0, style=bold];
m40_6 -> m40_7  [key=0, style=solid];
m40_97 -> m40_98  [key=0, style=solid];
m40_97 -> m40_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_98 -> m40_99  [key=0, style=solid];
m40_98 -> m40_105  [key=2, style=dotted];
m40_98 -> m40_102  [color=darkseagreen4, key=1, label=stream, style=dashed];
m40_98 -> m40_103  [color=darkseagreen4, key=1, label=stream, style=dashed];
m40_100 -> m40_101  [key=0, style=solid];
m40_100 -> m40_107  [key=2, style=dotted];
m40_99 -> m40_100  [key=0, style=solid];
m40_99 -> m40_106  [key=2, style=dotted];
m40_99 -> m40_101  [color=darkseagreen4, key=1, label=writer, style=dashed];
m40_102 -> m40_103  [key=0, style=solid];
m40_103 -> m40_104  [key=0, style=solid];
m40_101 -> m40_102  [key=0, style=solid];
m40_101 -> m40_108  [key=2, style=dotted];
m40_104 -> m40_97  [color=blue, key=0, style=bold];
m40_120 -> m40_121  [key=0, style=solid];
m40_120 -> m40_122  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m40_120 -> m40_123  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m40_120 -> m40_120  [color=darkorchid, key=3, label="method methodReturn System.DateTime RoundDown", style=bold];
m40_121 -> m40_122  [key=0, style=solid];
m40_121 -> m40_123  [key=0, style=solid];
m40_122 -> m40_124  [key=0, style=solid];
m40_123 -> m40_124  [key=0, style=solid];
m40_123 -> m40_125  [key=2, style=dotted];
m40_123 -> m40_123  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m40_124 -> m40_120  [color=blue, key=0, style=bold];
m40_142 -> m40_143  [key=0, style=solid];
m40_142 -> m40_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_142 -> m40_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_142 -> m40_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_142 -> m40_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_142 -> m40_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_142 -> m40_167  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_142 -> m40_152  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_143 -> m40_144  [key=0, style=solid];
m40_143 -> m40_155  [key=2, style=dotted];
m40_143 -> m40_156  [key=2, style=dotted];
m40_143 -> m40_147  [color=darkseagreen4, key=1, label=values, style=dashed];
m40_143 -> m40_150  [color=darkseagreen4, key=1, label=values, style=dashed];
m40_144 -> m40_145  [key=0, style=solid];
m40_144 -> m40_157  [key=2, style=dotted];
m40_144 -> m40_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_144 -> m40_146  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_147 -> m40_148  [key=0, style=solid];
m40_147 -> m40_157  [key=2, style=dotted];
m40_147 -> m40_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_147 -> m40_149  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_150 -> m40_151  [key=0, style=solid];
m40_150 -> m40_157  [key=2, style=dotted];
m40_150 -> m40_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_150 -> m40_153  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_152 -> m40_154  [key=0, style=solid];
m40_152 -> m40_158  [key=2, style=dotted];
m40_145 -> m40_146  [key=0, style=solid];
m40_145 -> m40_147  [key=0, style=solid];
m40_146 -> m40_154  [key=0, style=solid];
m40_148 -> m40_149  [key=0, style=solid];
m40_148 -> m40_150  [key=0, style=solid];
m40_149 -> m40_154  [key=0, style=solid];
m40_151 -> m40_152  [key=0, style=solid];
m40_151 -> m40_153  [key=0, style=solid];
m40_153 -> m40_154  [key=0, style=solid];
m40_154 -> m40_142  [color=blue, key=0, style=bold];
m40_43 -> m40_44  [key=0, style=solid];
m40_43 -> m40_45  [key=2, style=dotted];
m40_43 -> m40_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_8 -> m40_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_8 -> m40_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_8 -> m40_9  [key=0, style=solid];
m40_8 -> m40_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_8 -> m40_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_27 -> m40_28  [key=0, style=solid];
m40_27 -> m40_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_27 -> m40_32  [key=0, style=solid];
m40_28 -> m40_29  [key=0, style=solid];
m40_28 -> m40_35  [key=2, style=dotted];
m40_28 -> m40_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m40_28 -> m40_33  [color=darkseagreen4, key=1, label=builder, style=dashed];
m40_28 -> m40_40  [key=2, style=dotted];
m40_30 -> m40_31  [key=0, style=solid];
m40_30 -> m40_37  [key=2, style=dotted];
m40_30 -> m40_38  [key=2, style=dotted];
m40_30 -> m40_39  [key=2, style=dotted];
m40_29 -> m40_30  [key=0, style=solid];
m40_29 -> m40_36  [key=2, style=dotted];
m40_29 -> m40_44  [key=2, style=dotted];
m40_29 -> m40_45  [key=2, style=dotted];
m40_32 -> m40_31  [key=0, style=solid];
m40_32 -> m40_39  [key=2, style=dotted];
m40_32 -> m40_40  [key=2, style=dotted];
m40_32 -> m40_33  [key=0, style=solid];
m40_32 -> m40_47  [key=2, style=dotted];
m40_33 -> m40_34  [key=0, style=solid];
m40_33 -> m40_41  [key=2, style=dotted];
m40_33 -> m40_0  [key=2, style=dotted];
m40_31 -> m40_32  [key=0, style=solid];
m40_31 -> m40_33  [key=0, style=solid];
m40_31 -> m40_46  [key=2, style=dotted];
m40_34 -> m40_27  [color=blue, key=0, style=bold];
m40_34 -> m40_8  [color=blue, key=0, style=bold];
m40_15 -> m40_16  [key=0, style=solid];
m40_117 -> m40_118  [key=0, style=solid];
m40_117 -> m40_109  [color=darkorchid, key=3, label="method methodReturn System.TimeSpan Round", style=bold];
m40_117 -> m40_126  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan roundingInterval", style=bold];
m40_118 -> m40_119  [key=0, style=solid];
m40_118 -> m40_109  [key=2, style=dotted];
m40_119 -> m40_117  [color=blue, key=0, style=bold];
m40_17 -> m40_18  [color=green, key=0, style=solid];
m40_17 -> m40_22  [color=green, key=0, style=solid];
m40_17 -> m40_38  [color=green, key=2, style=dotted];
m40_17 -> m40_27  [color=green, key=1, label=securityType, style=dashed];
m40_17 -> m40_32  [color=green, key=1, label=securityType, style=dashed];
m40_17 -> m40_33  [color=green, key=1, label=securityType, style=dashed];
m40_16 -> m40_17  [color=green, key=0, style=solid];
m40_16 -> m40_18  [color=darkseagreen4, key=1, label="System.Collections.Concurrent.ConcurrentQueue<T>", style=dashed];
m40_18 -> m40_18  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_18 -> m40_19  [key=0, style=solid];
m40_18 -> m40_22  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_18 -> m40_23  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_18 -> m40_24  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_18 -> m40_25  [color=darkseagreen4, key=1, label=offset, style=dashed];
m40_18 -> m40_20  [key=2, style=dotted];
m40_19 -> m40_20  [key=0, style=solid];
m40_19 -> m40_16  [color=blue, key=0, style=bold];
m40_7 -> m40_0  [color=blue, key=0, style=bold];
m40_60 -> m40_61  [key=0, style=solid];
m40_60 -> m40_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_60 -> m40_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_61 -> m40_62  [key=0, style=solid];
m40_61 -> m40_69  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_61 -> m40_70  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_61 -> m40_72  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_61 -> m40_83  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_61 -> m40_84  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_61 -> m40_50  [color=darkorchid, key=3, label="Local variable long value", style=bold];
m40_66 -> m40_67  [key=0, style=solid];
m40_66 -> m40_77  [key=0, style=solid];
m40_66 -> m40_50  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m40_67 -> m40_68  [key=0, style=solid];
m40_67 -> m40_72  [color=darkseagreen4, key=1, label=ch, style=dashed];
m40_67 -> m40_74  [color=darkseagreen4, key=1, label=ch, style=dashed];
m40_62 -> m40_63  [key=0, style=solid];
m40_62 -> m40_71  [color=darkseagreen4, key=1, label=exp, style=dashed];
m40_62 -> m40_50  [color=darkorchid, key=3, label="Local variable int exp", style=bold];
m40_69 -> m40_70  [key=0, style=solid];
m40_69 -> m40_72  [key=0, style=solid];
m40_70 -> m40_71  [key=0, style=solid];
m40_70 -> m40_70  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_70 -> m40_72  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_72 -> m40_73  [key=0, style=solid];
m40_72 -> m40_72  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_72 -> m40_83  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_72 -> m40_84  [color=darkseagreen4, key=1, label=value, style=dashed];
m40_83 -> m40_85  [key=0, style=solid];
m40_84 -> m40_85  [key=0, style=solid];
m40_63 -> m40_64  [key=0, style=solid];
m40_63 -> m40_73  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m40_63 -> m40_77  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m40_63 -> m40_80  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m40_63 -> m40_63  [color=darkorchid, key=3, label="Local variable int decimalPlaces", style=bold];
m40_71 -> m40_69  [key=0, style=solid];
m40_71 -> m40_71  [color=darkseagreen4, key=1, label=exp, style=dashed];
m40_64 -> m40_65  [key=0, style=solid];
m40_64 -> m40_69  [color=darkseagreen4, key=1, label=maxValueDivideTen, style=dashed];
m40_64 -> m40_64  [color=darkorchid, key=3, label="Local variable long maxValueDivideTen", style=bold];
m40_73 -> m40_76  [key=0, style=solid];
m40_73 -> m40_73  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m40_73 -> m40_77  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m40_73 -> m40_80  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m40_77 -> m40_78  [key=0, style=solid];
m40_77 -> m40_84  [key=0, style=solid];
m40_80 -> m40_81  [key=0, style=solid];
m40_80 -> m40_83  [key=0, style=solid];
m40_80 -> m40_80  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m40_65 -> m40_66  [key=0, style=solid];
m40_65 -> m40_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_65 -> m40_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_76 -> m40_66  [key=0, style=solid];
m40_76 -> m40_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_68 -> m40_69  [key=0, style=solid];
m40_68 -> m40_74  [key=0, style=solid];
m40_74 -> m40_75  [key=0, style=solid];
m40_74 -> m40_77  [key=0, style=solid];
m40_75 -> m40_76  [key=0, style=solid];
m40_75 -> m40_77  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m40_75 -> m40_80  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m40_78 -> m40_79  [key=0, style=solid];
m40_78 -> m40_81  [color=darkseagreen4, key=1, label=divider, style=dashed];
m40_78 -> m40_83  [color=darkseagreen4, key=1, label=divider, style=dashed];
m40_78 -> m40_78  [color=darkorchid, key=3, label="Local variable int divider", style=bold];
m40_79 -> m40_80  [key=0, style=solid];
m40_79 -> m40_82  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_81 -> m40_82  [key=0, style=solid];
m40_81 -> m40_81  [color=darkseagreen4, key=1, label=divider, style=dashed];
m40_81 -> m40_83  [color=darkseagreen4, key=1, label=divider, style=dashed];
m40_82 -> m40_80  [key=0, style=solid];
m40_82 -> m40_82  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_85 -> m40_60  [color=blue, key=0, style=bold];
m40_136 -> m40_137  [key=0, style=solid];
m40_136 -> m40_138  [color=darkseagreen4, key=1, label="System.Timers.Timer", style=dashed];
m40_137 -> m40_138  [key=0, style=solid];
m40_137 -> m40_140  [key=2, style=dotted];
m40_138 -> m40_139  [key=0, style=solid];
m40_138 -> m40_141  [key=2, style=dotted];
m40_139 -> m40_136  [color=blue, key=0, style=bold];
m40_109 -> m40_110  [key=0, style=solid];
m40_109 -> m40_111  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m40_109 -> m40_112  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m40_109 -> m40_109  [color=darkorchid, key=3, label="method methodReturn System.TimeSpan Round", style=bold];
m40_109 -> m40_117  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan roundingInterval", style=bold];
m40_109 -> m40_50  [color=darkorchid, key=3, label="Parameter variable System.MidpointRounding roundingType", style=bold];
m40_110 -> m40_111  [key=0, style=solid];
m40_110 -> m40_112  [key=0, style=solid];
m40_111 -> m40_113  [key=0, style=solid];
m40_112 -> m40_113  [key=0, style=solid];
m40_112 -> m40_114  [key=2, style=dotted];
m40_112 -> m40_115  [key=2, style=dotted];
m40_112 -> m40_116  [key=2, style=dotted];
m40_112 -> m40_112  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m40_113 -> m40_109  [color=blue, key=0, style=bold];
m40_126 -> m40_127  [key=0, style=solid];
m40_127 -> m40_128  [key=0, style=solid];
m40_127 -> m40_129  [key=2, style=dotted];
m40_127 -> m40_130  [key=2, style=dotted];
m40_128 -> m40_126  [color=blue, key=0, style=bold];
m40_86 -> m40_87  [key=0, style=solid];
m40_87 -> m40_88  [key=0, style=solid];
m40_87 -> m40_93  [key=2, style=dotted];
m40_87 -> m40_94  [key=2, style=dotted];
m40_87 -> m40_89  [color=darkseagreen4, key=1, label=ext, style=dashed];
m40_87 -> m40_91  [color=darkseagreen4, key=1, label=ext, style=dashed];
m40_88 -> m40_89  [key=0, style=solid];
m40_88 -> m40_95  [key=2, style=dotted];
m40_89 -> m40_90  [key=0, style=solid];
m40_89 -> m40_91  [key=0, style=solid];
m40_89 -> m40_96  [key=2, style=dotted];
m40_91 -> m40_92  [key=0, style=solid];
m40_90 -> m40_91  [key=0, style=solid];
m40_92 -> m40_86  [color=blue, key=0, style=bold];
m40_169 -> m40_47  [color=darkseagreen4, key=1, label=V, style=dashed];
m40_170 -> m40_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_170 -> m40_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_170 -> m40_167  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_5 -> m41_0  [color=blue, key=0, style=bold];
m41_56 -> m41_55  [key=0, style=solid];
m41_56 -> m41_57  [key=0, style=solid];
m41_56 -> m41_63  [key=2, style=dotted];
m41_90 -> m41_91  [key=0, style=solid];
m41_91 -> m41_90  [color=blue, key=0, style=bold];
m41_91 -> m41_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_91 -> m41_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m41_96 -> m41_97  [key=0, style=solid];
m41_97 -> m41_96  [color=blue, key=0, style=bold];
m41_38 -> m41_36  [color=blue, key=0, style=bold];
m41_25 -> m41_26  [key=0, style=solid];
m41_25 -> m41_37  [key=2, style=dotted];
m41_26 -> m41_27  [key=0, style=solid];
m41_26 -> m41_28  [key=2, style=dotted];
m41_26 -> m41_29  [key=2, style=dotted];
m41_26 -> m41_38  [key=2, style=dotted];
m41_26 -> m41_39  [key=2, style=dotted];
m41_26 -> m41_40  [key=2, style=dotted];
m41_26 -> m41_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_26 -> m41_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_27 -> m41_25  [color=blue, key=0, style=bold];
m41_27 -> m41_28  [key=0, style=solid];
m41_27 -> m41_29  [key=0, style=solid];
m41_44 -> m41_45  [key=0, style=solid];
m41_45 -> m41_46  [key=0, style=solid];
m41_45 -> m41_47  [key=2, style=dotted];
m41_45 -> m41_29  [key=2, style=dotted];
m41_46 -> m41_44  [color=blue, key=0, style=bold];
m41_17 -> m41_18  [key=0, style=solid];
m41_17 -> m41_19  [key=0, style=solid];
m41_28 -> m41_32  [key=0, style=solid];
m41_28 -> m41_41  [key=2, style=dotted];
m41_28 -> m41_42  [key=2, style=dotted];
m41_34 -> m41_35  [key=0, style=solid];
m41_35 -> m41_34  [color=blue, key=0, style=bold];
m41_58 -> m41_60  [key=0, style=solid];
m41_8 -> m41_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m41_8 -> m41_9  [key=0, style=solid];
m41_8 -> m41_10  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m41_8 -> m41_12  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m41_8 -> m41_16  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.SubscriptionDataConfig Add", style=bold];
m41_8 -> m41_7  [color=blue, key=0, style=bold];
m41_13 -> m41_14  [key=0, style=solid];
m41_13 -> m41_16  [key=2, style=dotted];
m41_13 -> m41_15  [key=0, style=solid];
m41_13 -> m41_17  [key=2, style=dotted];
m41_9 -> m41_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_12  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m41_12 -> m41_13  [key=0, style=solid];
m41_12 -> m41_15  [key=2, style=dotted];
m41_11 -> m41_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m41_11 -> m41_12  [key=0, style=solid];
m41_11 -> m41_16  [key=0, style=solid];
m41_10 -> m41_12  [key=0, style=solid];
m41_10 -> m41_11  [key=0, style=solid];
m41_14 -> m41_8  [color=blue, key=0, style=bold];
m41_14 -> m41_15  [key=0, style=solid];
m41_14 -> m41_18  [key=2, style=dotted];
m41_63 -> m41_64  [key=0, style=solid];
m41_20 -> m41_21  [key=0, style=solid];
m41_20 -> m41_32  [key=0, style=solid];
m41_20 -> m41_33  [key=2, style=dotted];
m41_21 -> m41_22  [key=0, style=solid];
m41_21 -> m41_25  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m41_21 -> m41_34  [key=2, style=dotted];
m41_21 -> m41_23  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m41_21 -> m41_24  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m41_21 -> m41_31  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m41_22 -> m41_20  [color=blue, key=0, style=bold];
m41_22 -> m41_23  [key=0, style=solid];
m41_22 -> m41_25  [key=0, style=solid];
m41_22 -> m41_35  [key=2, style=dotted];
m41_59 -> m41_60  [key=0, style=solid];
m41_59 -> m41_62  [key=2, style=dotted];
m41_59 -> m41_65  [key=2, style=dotted];
m41_59 -> m41_66  [key=2, style=dotted];
m41_59 -> m41_67  [key=2, style=dotted];
m41_59 -> m41_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_77 -> m41_78  [key=0, style=solid];
m41_77 -> m41_79  [key=0, style=solid];
m41_77 -> m41_55  [key=2, style=dotted];
m41_15 -> m41_11  [key=0, style=solid];
m41_15 -> m41_19  [key=2, style=dotted];
m41_36 -> m41_37  [key=0, style=solid];
m41_37 -> m41_38  [key=0, style=solid];
m41_37 -> m41_39  [key=2, style=dotted];
m41_37 -> m41_29  [key=2, style=dotted];
m41_104 -> m41_105  [key=0, style=solid];
m41_105 -> m41_106  [key=0, style=solid];
m41_105 -> m41_107  [key=2, style=dotted];
m41_106 -> m41_104  [color=blue, key=0, style=bold];
m41_71 -> m41_72  [key=0, style=solid];
m41_71 -> m41_69  [color=blue, key=0, style=bold];
m41_7 -> m41_8  [color=red, key=0, style=solid];
m41_7 -> m41_74  [color=green, key=0, style=solid];
m41_16 -> m41_9  [color=blue, key=0, style=bold];
m41_16 -> m41_29  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m41_16 -> m41_30  [color=darkseagreen4, key=1, label=bool, style=dashed];
m41_16 -> m41_8  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m41_16 -> m41_12  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m41_16 -> m41_17  [key=0, style=solid];
m41_16 -> m41_19  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m41_16 -> m41_21  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m41_88 -> m41_86  [key=2, style=dotted];
m41_88 -> m41_89  [key=0, style=solid];
m41_88 -> m41_90  [key=2, style=dotted];
m41_48 -> m41_49  [key=0, style=solid];
m41_48 -> m41_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_48 -> m41_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_48 -> m41_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_48 -> m41_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_48 -> m41_64  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SeriesType seriesType", style=bold];
m41_48 -> m41_70  [color=darkorchid, key=3, label="Parameter variable string seriesName", style=bold];
m41_48 -> m41_67  [color=darkorchid, key=3, label="Parameter variable string unit", style=bold];
m41_48 -> m41_63  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m41_48 -> m41_66  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m41_48 -> m41_69  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m41_48 -> m41_72  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m41_68 -> m41_69  [key=0, style=solid];
m41_68 -> m41_66  [color=blue, key=0, style=bold];
m41_87 -> m41_88  [key=0, style=solid];
m41_87 -> m41_86  [color=blue, key=0, style=bold];
m41_89 -> m41_87  [color=blue, key=0, style=bold];
m41_89 -> m41_88  [color=blue, key=0, style=bold];
m41_50 -> m41_48  [color=blue, key=0, style=bold];
m41_50 -> m41_51  [key=0, style=solid];
m41_50 -> m41_56  [key=2, style=dotted];
m41_50 -> m41_57  [key=2, style=dotted];
m41_49 -> m41_50  [key=0, style=solid];
m41_49 -> m41_51  [key=0, style=solid];
m41_49 -> m41_55  [key=2, style=dotted];
m41_69 -> m41_70  [key=0, style=solid];
m41_70 -> m41_68  [color=blue, key=0, style=bold];
m41_70 -> m41_71  [key=0, style=solid];
m41_70 -> m41_48  [key=2, style=dotted];
m41_72 -> m41_73  [key=0, style=solid];
m41_73 -> m41_71  [color=blue, key=0, style=bold];
m41_73 -> m41_74  [key=0, style=solid];
m41_73 -> m41_48  [key=2, style=dotted];
m41_75 -> m41_76  [key=0, style=solid];
m41_75 -> m41_7  [color=blue, key=0, style=bold];
m41_76 -> m41_77  [key=0, style=solid];
m41_76 -> m41_83  [key=0, style=solid];
m41_76 -> m41_78  [color=darkseagreen4, key=1, label=update, style=dashed];
m41_76 -> m41_79  [color=darkseagreen4, key=1, label=update, style=dashed];
m41_76 -> m41_80  [color=darkseagreen4, key=1, label=update, style=dashed];
m41_76 -> m41_81  [color=darkseagreen4, key=1, label=update, style=dashed];
m41_76 -> m41_82  [color=darkseagreen4, key=1, label=update, style=dashed];
m41_78 -> m41_79  [key=0, style=solid];
m41_78 -> m41_84  [key=2, style=dotted];
m41_78 -> m41_57  [key=2, style=dotted];
m41_79 -> m41_80  [key=0, style=solid];
m41_79 -> m41_76  [key=0, style=solid];
m41_79 -> m41_81  [color=darkseagreen4, key=1, label=series, style=dashed];
m41_79 -> m41_82  [color=darkseagreen4, key=1, label=series, style=dashed];
m41_80 -> m41_81  [key=0, style=solid];
m41_80 -> m41_82  [key=0, style=solid];
m41_80 -> m41_58  [key=2, style=dotted];
m41_80 -> m41_78  [color=blue, key=0, style=bold];
m41_81 -> m41_82  [key=0, style=solid];
m41_81 -> m41_59  [key=2, style=dotted];
m41_81 -> m41_60  [key=2, style=dotted];
m41_81 -> m41_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m41_81 -> m41_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m41_82 -> m41_79  [key=0, style=solid];
m41_82 -> m41_85  [key=2, style=dotted];
m41_82 -> m41_83  [key=0, style=solid];
m41_82 -> m41_84  [key=0, style=solid];
m41_83 -> m41_75  [color=blue, key=0, style=bold];
m41_83 -> m41_77  [key=2, style=dotted];
m41_83 -> m41_85  [key=0, style=solid];
m41_83 -> m41_86  [key=2, style=dotted];
m41_40 -> m41_41  [key=0, style=solid];
m41_41 -> m41_42  [key=0, style=solid];
m41_41 -> m41_43  [key=2, style=dotted];
m41_41 -> m41_29  [key=2, style=dotted];
m41_42 -> m41_40  [color=blue, key=0, style=bold];
m41_60 -> m41_51  [color=blue, key=0, style=bold];
m41_29 -> m41_30  [key=0, style=solid];
m41_29 -> m41_43  [key=2, style=dotted];
m41_30 -> m41_31  [key=0, style=solid];
m41_23 -> m41_24  [key=0, style=solid];
m41_23 -> m41_36  [key=2, style=dotted];
m41_31 -> m41_32  [key=0, style=solid];
m41_31 -> m41_33  [key=2, style=dotted];
m41_31 -> m41_29  [key=2, style=dotted];
m41_19 -> m41_21  [key=0, style=solid];
m41_19 -> m41_20  [key=0, style=solid];
m41_24 -> m41_32  [key=0, style=solid];
m41_24 -> m41_23  [color=blue, key=0, style=bold];
m41_18 -> m41_32  [key=0, style=solid];
m41_18 -> m41_33  [key=2, style=dotted];
m41_32 -> m41_16  [color=blue, key=0, style=bold];
m41_32 -> m41_30  [color=blue, key=0, style=bold];
m41_92 -> m41_93  [key=0, style=solid];
m41_92 -> m41_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m41_93 -> m41_92  [color=blue, key=0, style=bold];
m41_93 -> m41_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m41_0 -> m41_1  [key=0, style=solid];
m41_0 -> m41_2  [color=darkseagreen4, key=1, label="QuantConnect.TimeKeeper", style=dashed];
m41_1 -> m41_2  [key=0, style=solid];
m41_2 -> m41_3  [key=0, style=solid];
m41_2 -> m41_5  [key=2, style=dotted];
m41_3 -> m41_4  [key=0, style=solid];
m41_3 -> m41_6  [key=2, style=dotted];
m41_3 -> m41_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_4 -> m41_0  [color=blue, key=0, style=bold];
m41_4 -> m41_7  [key=2, style=dotted];
m41_4 -> m41_5  [key=0, style=solid];
m41_74 -> m41_75  [color=green, key=0, style=solid];
m41_74 -> m41_76  [color=green, key=2, style=dotted];
m41_74 -> m41_77  [color=green, key=2, style=dotted];
m41_74 -> m41_72  [color=blue, key=0, style=bold];
m41_64 -> m41_65  [key=0, style=solid];
m41_64 -> m41_48  [key=2, style=dotted];
m41_108 -> m41_109  [key=0, style=solid];
m41_109 -> m41_108  [color=blue, key=0, style=bold];
m41_84 -> m41_85  [key=0, style=solid];
m41_84 -> m41_65  [key=2, style=dotted];
m41_84 -> m41_61  [key=2, style=dotted];
m41_84 -> m41_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_85 -> m41_81  [color=blue, key=0, style=bold];
m41_65 -> m41_63  [color=blue, key=0, style=bold];
m41_100 -> m41_101  [key=0, style=solid];
m41_101 -> m41_102  [key=0, style=solid];
m41_101 -> m41_103  [key=2, style=dotted];
m41_102 -> m41_100  [color=blue, key=0, style=bold];
m41_51 -> m41_52  [key=0, style=solid];
m41_51 -> m41_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m41_51 -> m41_54  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m41_51 -> m41_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m41_51 -> m41_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m41_51 -> m41_59  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m41_51 -> m41_53  [key=0, style=solid];
m41_51 -> m41_58  [key=2, style=dotted];
m41_52 -> m41_53  [key=0, style=solid];
m41_52 -> m41_38  [key=2, style=dotted];
m41_52 -> m41_61  [key=2, style=dotted];
m41_52 -> m41_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_52 -> m41_55  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m41_52 -> m41_59  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m41_52 -> m41_60  [key=2, style=dotted];
m41_53 -> m41_54  [key=0, style=solid];
m41_53 -> m41_55  [key=0, style=solid];
m41_53 -> m41_61  [key=2, style=dotted];
m41_53 -> m41_62  [key=2, style=dotted];
m41_55 -> m41_56  [key=0, style=solid];
m41_55 -> m41_59  [key=0, style=solid];
m41_55 -> m41_57  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m41_54 -> m41_60  [key=0, style=solid];
m41_54 -> m41_62  [key=2, style=dotted];
m41_54 -> m41_48  [color=blue, key=0, style=bold];
m41_57 -> m41_58  [key=0, style=solid];
m41_57 -> m41_64  [key=2, style=dotted];
m41_66 -> m41_67  [key=0, style=solid];
m41_67 -> m41_68  [key=0, style=solid];
m41_67 -> m41_48  [key=2, style=dotted];
m41_98 -> m41_99  [key=0, style=solid];
m41_99 -> m41_98  [color=blue, key=0, style=bold];
m41_94 -> m41_95  [key=0, style=solid];
m41_95 -> m41_94  [color=blue, key=0, style=bold];
m41_86 -> m41_87  [key=0, style=solid];
m41_110 -> m41_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_52  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_53  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_77  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_82  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_101  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m41_110 -> m41_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m42_24 -> m42_25  [key=0, style=solid];
m42_25 -> m42_26  [key=0, style=solid];
m42_25 -> m42_6  [key=2, style=dotted];
m42_25 -> m42_27  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_25 -> m42_28  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_25 -> m42_29  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_25 -> m42_30  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_25 -> m42_31  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_25 -> m42_32  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_26 -> m42_27  [key=0, style=solid];
m42_26 -> m42_7  [key=2, style=dotted];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_7  [key=2, style=dotted];
m42_28 -> m42_29  [key=0, style=solid];
m42_28 -> m42_7  [key=2, style=dotted];
m42_29 -> m42_30  [key=0, style=solid];
m42_29 -> m42_7  [key=2, style=dotted];
m42_30 -> m42_31  [key=0, style=solid];
m42_30 -> m42_7  [key=2, style=dotted];
m42_31 -> m42_32  [key=0, style=solid];
m42_31 -> m42_7  [key=2, style=dotted];
m42_32 -> m42_33  [key=0, style=solid];
m42_32 -> m42_7  [key=2, style=dotted];
m42_33 -> m42_24  [color=blue, key=0, style=bold];
m42_14 -> m42_15  [key=0, style=solid];
m42_15 -> m42_16  [key=0, style=solid];
m42_15 -> m42_6  [key=2, style=dotted];
m42_15 -> m42_17  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_15 -> m42_18  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_15 -> m42_19  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_15 -> m42_20  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_15 -> m42_21  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_15 -> m42_22  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_16 -> m42_17  [key=0, style=solid];
m42_16 -> m42_7  [key=2, style=dotted];
m42_17 -> m42_18  [key=0, style=solid];
m42_17 -> m42_7  [key=2, style=dotted];
m42_18 -> m42_19  [key=0, style=solid];
m42_18 -> m42_7  [key=2, style=dotted];
m42_19 -> m42_20  [key=0, style=solid];
m42_19 -> m42_7  [key=2, style=dotted];
m42_20 -> m42_21  [key=0, style=solid];
m42_20 -> m42_7  [key=2, style=dotted];
m42_21 -> m42_22  [key=0, style=solid];
m42_21 -> m42_7  [key=2, style=dotted];
m42_22 -> m42_23  [key=0, style=solid];
m42_22 -> m42_7  [key=2, style=dotted];
m42_23 -> m42_14  [color=blue, key=0, style=bold];
m42_8 -> m42_9  [key=0, style=solid];
m42_8 -> m42_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_8 -> m42_12  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m42_9 -> m42_10  [key=0, style=solid];
m42_9 -> m42_6  [key=2, style=dotted];
m42_9 -> m42_11  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_9 -> m42_12  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_11 -> m42_12  [key=0, style=solid];
m42_11 -> m42_7  [key=2, style=dotted];
m42_12 -> m42_13  [key=0, style=solid];
m42_12 -> m42_7  [key=2, style=dotted];
m42_10 -> m42_11  [key=0, style=solid];
m42_10 -> m42_7  [key=2, style=dotted];
m42_13 -> m42_8  [color=blue, key=0, style=bold];
m42_6 -> m42_34  [key=0, style=solid];
m42_6 -> m42_36  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_6 -> m42_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m42_6 -> m42_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m42_6 -> m42_14  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m42_6 -> m42_24  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m42_6 -> m42_9  [color=darkorchid, key=3, label="Parameter variable bool isCanonical", style=bold];
m42_34 -> m42_35  [key=0, style=solid];
m42_34 -> m42_38  [key=2, style=dotted];
m42_36 -> m42_37  [key=0, style=solid];
m42_36 -> m42_41  [key=2, style=dotted];
m42_35 -> m42_36  [key=0, style=solid];
m42_35 -> m42_39  [key=2, style=dotted];
m42_35 -> m42_40  [key=2, style=dotted];
m42_37 -> m42_6  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_0 -> m42_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_0 -> m42_4  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_6  [key=2, style=dotted];
m42_1 -> m42_3  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_1 -> m42_4  [color=darkseagreen4, key=1, label=types, style=dashed];
m42_3 -> m42_4  [key=0, style=solid];
m42_3 -> m42_7  [key=2, style=dotted];
m42_4 -> m42_5  [key=0, style=solid];
m42_4 -> m42_7  [key=2, style=dotted];
m42_2 -> m42_3  [key=0, style=solid];
m42_2 -> m42_7  [key=2, style=dotted];
m42_5 -> m42_0  [color=blue, key=0, style=bold];
m43_57 -> m43_58  [key=0, style=solid];
m43_58 -> m43_59  [key=0, style=solid];
m43_58 -> m43_60  [key=2, style=dotted];
m43_59 -> m43_57  [color=blue, key=0, style=bold];
m43_131 -> m43_133  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m43_131 -> m43_145  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m43_131 -> m43_132  [key=0, style=solid];
m43_131 -> m43_136  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m43_131 -> m43_140  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m43_131 -> m43_141  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m43_133 -> m43_134  [key=0, style=solid];
m43_133 -> m43_148  [key=2, style=dotted];
m43_133 -> m43_137  [color=darkseagreen4, key=1, label=pyRequests, style=dashed];
m43_139 -> m43_140  [key=0, style=solid];
m43_139 -> m43_137  [key=0, style=solid];
m43_139 -> m43_152  [key=2, style=dotted];
m43_145 -> m43_147  [key=0, style=solid];
m43_145 -> m43_155  [key=2, style=dotted];
m43_132 -> m43_133  [key=0, style=solid];
m43_132 -> m43_19  [key=2, style=dotted];
m43_134 -> m43_135  [key=0, style=solid];
m43_134 -> m43_136  [key=0, style=solid];
m43_134 -> m43_149  [key=2, style=dotted];
m43_137 -> m43_139  [color=darkseagreen4, key=1, label=pyRequest, style=dashed];
m43_137 -> m43_138  [key=0, style=solid];
m43_137 -> m43_141  [key=0, style=solid];
m43_138 -> m43_139  [key=0, style=solid];
m43_140 -> m43_137  [key=0, style=solid];
m43_140 -> m43_153  [key=2, style=dotted];
m43_144 -> m43_145  [key=0, style=solid];
m43_144 -> m43_146  [key=0, style=solid];
m43_144 -> m43_154  [key=2, style=dotted];
m43_136 -> m43_137  [key=0, style=solid];
m43_136 -> m43_151  [key=2, style=dotted];
m43_141 -> m43_147  [key=0, style=solid];
m43_141 -> m43_142  [key=0, style=solid];
m43_141 -> m43_143  [key=0, style=solid];
m43_135 -> m43_147  [key=0, style=solid];
m43_135 -> m43_150  [key=2, style=dotted];
m43_143 -> m43_144  [key=0, style=solid];
m43_146 -> m43_147  [key=0, style=solid];
m43_142 -> m43_147  [key=0, style=solid];
m43_142 -> m43_150  [key=2, style=dotted];
m43_147 -> m43_131  [color=blue, key=0, style=bold];
m43_152 -> m43_137  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m43_152 -> m43_138  [color=darkorchid, key=3, label="Parameter variable T result", style=bold];
m43_152 -> m43_241  [key=0, style=solid];
m43_152 -> m43_242  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m43_152 -> m43_244  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m43_241 -> m43_246  [color=darkseagreen4, key=1, label="out T", style=dashed];
m43_241 -> m43_242  [key=0, style=solid];
m43_242 -> m43_243  [key=0, style=solid];
m43_242 -> m43_247  [key=2, style=dotted];
m43_242 -> m43_248  [key=2, style=dotted];
m43_242 -> m43_245  [color=darkseagreen4, key=1, label=type, style=dashed];
m43_244 -> m43_246  [color=darkseagreen4, key=1, label="out T", style=dashed];
m43_244 -> m43_245  [key=0, style=solid];
m43_244 -> m43_248  [key=2, style=dotted];
m43_245 -> m43_246  [key=0, style=solid];
m43_243 -> m43_244  [key=0, style=solid];
m43_243 -> m43_245  [key=0, style=solid];
m43_246 -> m43_152  [color=blue, key=0, style=bold];
m43_45 -> m43_46  [key=0, style=solid];
m43_46 -> m43_47  [key=0, style=solid];
m43_46 -> m43_48  [key=2, style=dotted];
m43_47 -> m43_45  [color=blue, key=0, style=bold];
m43_208 -> m43_209  [key=0, style=solid];
m43_209 -> m43_210  [key=0, style=solid];
m43_209 -> m43_211  [key=2, style=dotted];
m43_210 -> m43_208  [color=blue, key=0, style=bold];
m43_188 -> m43_189  [key=0, style=solid];
m43_189 -> m43_190  [key=0, style=solid];
m43_189 -> m43_191  [key=2, style=dotted];
m43_190 -> m43_188  [color=blue, key=0, style=bold];
m43_228 -> m43_229  [key=0, style=solid];
m43_229 -> m43_230  [key=0, style=solid];
m43_229 -> m43_231  [key=2, style=dotted];
m43_230 -> m43_228  [color=blue, key=0, style=bold];
m43_176 -> m43_177  [key=0, style=solid];
m43_177 -> m43_178  [key=0, style=solid];
m43_177 -> m43_179  [key=2, style=dotted];
m43_178 -> m43_176  [color=blue, key=0, style=bold];
m43_104 -> m43_105  [key=0, style=solid];
m43_106 -> m43_107  [key=0, style=solid];
m43_106 -> m43_108  [key=2, style=dotted];
m43_105 -> m43_106  [key=0, style=solid];
m43_105 -> m43_19  [key=2, style=dotted];
m43_107 -> m43_104  [color=blue, key=0, style=bold];
m43_41 -> m43_42  [key=0, style=solid];
m43_42 -> m43_43  [key=0, style=solid];
m43_42 -> m43_44  [key=2, style=dotted];
m43_43 -> m43_41  [color=blue, key=0, style=bold];
m43_200 -> m43_201  [key=0, style=solid];
m43_201 -> m43_202  [key=0, style=solid];
m43_201 -> m43_203  [key=2, style=dotted];
m43_202 -> m43_200  [color=blue, key=0, style=bold];
m43_99 -> m43_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m43_99 -> m43_100  [key=0, style=solid];
m43_101 -> m43_102  [key=0, style=solid];
m43_101 -> m43_103  [key=2, style=dotted];
m43_100 -> m43_101  [key=0, style=solid];
m43_100 -> m43_19  [key=2, style=dotted];
m43_102 -> m43_99  [color=blue, key=0, style=bold];
m43_6 -> m43_7  [key=0, style=solid];
m43_6 -> m43_22  [key=2, style=dotted];
m43_212 -> m43_213  [key=0, style=solid];
m43_213 -> m43_214  [key=0, style=solid];
m43_213 -> m43_215  [key=2, style=dotted];
m43_214 -> m43_212  [color=blue, key=0, style=bold];
m43_49 -> m43_50  [key=0, style=solid];
m43_50 -> m43_51  [key=0, style=solid];
m43_50 -> m43_52  [key=2, style=dotted];
m43_51 -> m43_49  [color=blue, key=0, style=bold];
m43_61 -> m43_62  [key=0, style=solid];
m43_62 -> m43_63  [key=0, style=solid];
m43_62 -> m43_64  [key=2, style=dotted];
m43_63 -> m43_61  [color=blue, key=0, style=bold];
m43_90 -> m43_91  [key=0, style=solid];
m43_91 -> m43_92  [key=0, style=solid];
m43_91 -> m43_93  [key=2, style=dotted];
m43_92 -> m43_90  [color=blue, key=0, style=bold];
m43_81 -> m43_82  [key=0, style=solid];
m43_83 -> m43_84  [key=0, style=solid];
m43_83 -> m43_85  [key=2, style=dotted];
m43_82 -> m43_83  [key=0, style=solid];
m43_82 -> m43_19  [key=2, style=dotted];
m43_84 -> m43_81  [color=blue, key=0, style=bold];
m43_0 -> m43_5  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m43_0 -> m43_7  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m43_0 -> m43_9  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m43_0 -> m43_8  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_3  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m43_10 -> m43_11  [color=green, key=0, style=solid];
m43_10 -> m43_8  [color=green, key=0, style=solid];
m43_10 -> m43_27  [color=green, key=2, style=dotted];
m43_10 -> m43_23  [color=green, key=2, style=dotted];
m43_10 -> m43_28  [color=green, key=2, style=dotted];
m43_5 -> m43_10  [color=green, key=1, label=baseClass, style=dashed];
m43_5 -> m43_6  [key=0, style=solid];
m43_5 -> m43_21  [key=2, style=dotted];
m43_7 -> m43_10  [color=green, key=1, label=moduleName, style=dashed];
m43_7 -> m43_8  [key=0, style=solid];
m43_7 -> m43_23  [key=2, style=dotted];
m43_7 -> m43_24  [key=2, style=dotted];
m43_9 -> m43_10  [color=green, key=0, style=solid];
m43_9 -> m43_11  [color=green, key=1, label=attr, style=dashed];
m43_9 -> m43_26  [key=2, style=dotted];
m43_9 -> m43_21  [key=2, style=dotted];
m43_9 -> m43_12  [color=darkseagreen4, key=1, label=attr, style=dashed];
m43_9 -> m43_7  [color=blue, key=0, style=bold];
m43_11 -> m43_12  [color=green, key=0, style=solid];
m43_11 -> m43_21  [color=green, key=2, style=dotted];
m43_11 -> m43_29  [color=green, key=2, style=dotted];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_16  [key=0, style=solid];
m43_8 -> m43_18  [key=0, style=solid];
m43_8 -> m43_25  [key=2, style=dotted];
m43_8 -> m43_10  [key=2, style=dotted];
m43_12 -> m43_13  [key=0, style=solid];
m43_12 -> m43_30  [key=2, style=dotted];
m43_12 -> m43_5  [key=2, style=dotted];
m43_12 -> m43_14  [color=darkseagreen4, key=1, label=adxIndicator, style=dashed];
m43_12 -> m43_15  [color=darkseagreen4, key=1, label=adxIndicator, style=dashed];
m43_12 -> m43_16  [color=darkseagreen4, key=1, label=adxIndicator, style=dashed];
m43_3 -> m43_5  [key=0, style=solid];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_20  [key=2, style=dotted];
m43_3 -> m43_6  [key=2, style=dotted];
m43_3 -> m43_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_16 -> m43_17  [key=0, style=solid];
m43_16 -> m43_21  [key=2, style=dotted];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_5  [key=2, style=dotted];
m43_1 -> m43_3  [color=darkseagreen4, key=1, label=adx, style=dashed];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_15  [key=0, style=solid];
m43_13 -> m43_18  [key=2, style=dotted];
m43_14 -> m43_15  [key=0, style=solid];
m43_14 -> m43_31  [key=2, style=dotted];
m43_14 -> m43_13  [key=0, style=solid];
m43_14 -> m43_19  [key=2, style=dotted];
m43_2 -> m43_3  [key=0, style=solid];
m43_2 -> m43_19  [key=2, style=dotted];
m43_2 -> m43_8  [color=darkseagreen4, key=1, label=epsilon, style=dashed];
m43_4 -> m43_18  [key=0, style=solid];
m43_4 -> m43_0  [color=blue, key=0, style=bold];
m43_17 -> m43_18  [key=0, style=solid];
m43_17 -> m43_32  [key=2, style=dotted];
m43_17 -> m43_11  [color=blue, key=0, style=bold];
m43_15 -> m43_18  [key=0, style=solid];
m43_15 -> m43_16  [key=0, style=solid];
m43_15 -> m43_20  [key=2, style=dotted];
m43_18 -> m43_0  [color=blue, key=0, style=bold];
m43_161 -> m43_163  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m43_161 -> m43_162  [key=0, style=solid];
m43_163 -> m43_164  [key=0, style=solid];
m43_163 -> m43_165  [key=2, style=dotted];
m43_162 -> m43_163  [key=0, style=solid];
m43_162 -> m43_19  [key=2, style=dotted];
m43_164 -> m43_161  [color=blue, key=0, style=bold];
m43_117 -> m43_118  [key=0, style=solid];
m43_119 -> m43_120  [key=0, style=solid];
m43_119 -> m43_121  [key=2, style=dotted];
m43_118 -> m43_119  [key=0, style=solid];
m43_118 -> m43_19  [key=2, style=dotted];
m43_120 -> m43_117  [color=blue, key=0, style=bold];
m43_77 -> m43_78  [key=0, style=solid];
m43_78 -> m43_79  [key=0, style=solid];
m43_78 -> m43_80  [key=2, style=dotted];
m43_79 -> m43_77  [color=blue, key=0, style=bold];
m43_220 -> m43_221  [key=0, style=solid];
m43_221 -> m43_222  [key=0, style=solid];
m43_221 -> m43_223  [key=2, style=dotted];
m43_222 -> m43_220  [color=blue, key=0, style=bold];
m43_122 -> m43_123  [key=0, style=solid];
m43_124 -> m43_125  [key=0, style=solid];
m43_124 -> m43_126  [key=2, style=dotted];
m43_123 -> m43_124  [key=0, style=solid];
m43_123 -> m43_19  [key=2, style=dotted];
m43_125 -> m43_122  [color=blue, key=0, style=bold];
m43_192 -> m43_193  [key=0, style=solid];
m43_193 -> m43_194  [key=0, style=solid];
m43_193 -> m43_195  [key=2, style=dotted];
m43_194 -> m43_192  [color=blue, key=0, style=bold];
m43_94 -> m43_95  [key=0, style=solid];
m43_96 -> m43_97  [key=0, style=solid];
m43_96 -> m43_98  [key=2, style=dotted];
m43_95 -> m43_96  [key=0, style=solid];
m43_95 -> m43_19  [key=2, style=dotted];
m43_97 -> m43_94  [color=blue, key=0, style=bold];
m43_232 -> m43_233  [key=0, style=solid];
m43_233 -> m43_234  [key=0, style=solid];
m43_233 -> m43_235  [key=2, style=dotted];
m43_234 -> m43_232  [color=blue, key=0, style=bold];
m43_86 -> m43_87  [key=0, style=solid];
m43_87 -> m43_88  [key=0, style=solid];
m43_87 -> m43_89  [key=2, style=dotted];
m43_88 -> m43_86  [color=blue, key=0, style=bold];
m43_180 -> m43_181  [key=0, style=solid];
m43_181 -> m43_182  [key=0, style=solid];
m43_181 -> m43_183  [key=2, style=dotted];
m43_182 -> m43_180  [color=blue, key=0, style=bold];
m43_53 -> m43_54  [key=0, style=solid];
m43_54 -> m43_55  [key=0, style=solid];
m43_54 -> m43_56  [key=2, style=dotted];
m43_55 -> m43_53  [color=blue, key=0, style=bold];
m43_109 -> m43_112  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m43_109 -> m43_113  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m43_109 -> m43_110  [key=0, style=solid];
m43_111 -> m43_112  [key=0, style=solid];
m43_111 -> m43_113  [key=0, style=solid];
m43_112 -> m43_114  [key=0, style=solid];
m43_112 -> m43_115  [key=2, style=dotted];
m43_113 -> m43_114  [key=0, style=solid];
m43_113 -> m43_116  [key=2, style=dotted];
m43_110 -> m43_111  [key=0, style=solid];
m43_110 -> m43_19  [key=2, style=dotted];
m43_114 -> m43_109  [color=blue, key=0, style=bold];
m43_249 -> m43_250  [key=0, style=solid];
m43_250 -> m43_23  [key=2, style=dotted];
m43_250 -> m43_251  [key=0, style=solid];
m43_250 -> m43_252  [key=2, style=dotted];
m43_251 -> m43_249  [color=blue, key=0, style=bold];
m43_73 -> m43_74  [key=0, style=solid];
m43_74 -> m43_75  [key=0, style=solid];
m43_74 -> m43_76  [key=2, style=dotted];
m43_75 -> m43_73  [color=blue, key=0, style=bold];
m43_166 -> m43_168  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m43_166 -> m43_167  [key=0, style=solid];
m43_168 -> m43_169  [key=0, style=solid];
m43_168 -> m43_170  [key=2, style=dotted];
m43_167 -> m43_168  [key=0, style=solid];
m43_167 -> m43_19  [key=2, style=dotted];
m43_169 -> m43_166  [color=blue, key=0, style=bold];
m43_127 -> m43_129  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_127 -> m43_128  [key=0, style=solid];
m43_129 -> m43_130  [key=0, style=solid];
m43_129 -> m43_126  [key=2, style=dotted];
m43_128 -> m43_129  [key=0, style=solid];
m43_128 -> m43_19  [key=2, style=dotted];
m43_130 -> m43_127  [color=blue, key=0, style=bold];
m43_156 -> m43_157  [key=0, style=solid];
m43_158 -> m43_159  [key=0, style=solid];
m43_158 -> m43_160  [key=2, style=dotted];
m43_157 -> m43_158  [key=0, style=solid];
m43_157 -> m43_19  [key=2, style=dotted];
m43_159 -> m43_156  [color=blue, key=0, style=bold];
m43_37 -> m43_38  [key=0, style=solid];
m43_38 -> m43_39  [key=0, style=solid];
m43_38 -> m43_40  [key=2, style=dotted];
m43_39 -> m43_37  [color=blue, key=0, style=bold];
m43_196 -> m43_197  [key=0, style=solid];
m43_197 -> m43_198  [key=0, style=solid];
m43_197 -> m43_199  [key=2, style=dotted];
m43_198 -> m43_196  [color=blue, key=0, style=bold];
m43_216 -> m43_217  [key=0, style=solid];
m43_217 -> m43_218  [key=0, style=solid];
m43_217 -> m43_219  [key=2, style=dotted];
m43_218 -> m43_216  [color=blue, key=0, style=bold];
m43_224 -> m43_225  [key=0, style=solid];
m43_225 -> m43_226  [key=0, style=solid];
m43_225 -> m43_227  [key=2, style=dotted];
m43_226 -> m43_224  [color=blue, key=0, style=bold];
m43_65 -> m43_66  [key=0, style=solid];
m43_66 -> m43_67  [key=0, style=solid];
m43_66 -> m43_68  [key=2, style=dotted];
m43_67 -> m43_65  [color=blue, key=0, style=bold];
m43_204 -> m43_205  [key=0, style=solid];
m43_205 -> m43_206  [key=0, style=solid];
m43_205 -> m43_207  [key=2, style=dotted];
m43_206 -> m43_204  [color=blue, key=0, style=bold];
m43_171 -> m43_173  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m43_171 -> m43_172  [key=0, style=solid];
m43_173 -> m43_174  [key=0, style=solid];
m43_173 -> m43_175  [key=2, style=dotted];
m43_172 -> m43_173  [key=0, style=solid];
m43_172 -> m43_19  [key=2, style=dotted];
m43_174 -> m43_171  [color=blue, key=0, style=bold];
m43_33 -> m43_34  [key=0, style=solid];
m43_34 -> m43_35  [key=0, style=solid];
m43_34 -> m43_36  [key=2, style=dotted];
m43_35 -> m43_33  [color=blue, key=0, style=bold];
m43_22 -> m43_236  [key=0, style=solid];
m43_22 -> m43_8  [color=darkseagreen4, key=1, label=epsilon, style=dashed];
m43_236 -> m43_236  [color=darkorchid, key=3, label="Local variable string code", style=bold];
m43_236 -> m43_237  [key=0, style=solid];
m43_236 -> m43_238  [color=darkseagreen4, key=1, label=code, style=dashed];
m43_237 -> m43_19  [key=2, style=dotted];
m43_237 -> m43_238  [key=0, style=solid];
m43_238 -> m43_239  [key=0, style=solid];
m43_238 -> m43_240  [key=2, style=dotted];
m43_239 -> m43_22  [color=blue, key=0, style=bold];
m43_184 -> m43_185  [key=0, style=solid];
m43_185 -> m43_186  [key=0, style=solid];
m43_185 -> m43_187  [key=2, style=dotted];
m43_186 -> m43_184  [color=blue, key=0, style=bold];
m43_69 -> m43_70  [key=0, style=solid];
m43_70 -> m43_71  [key=0, style=solid];
m43_70 -> m43_72  [key=2, style=dotted];
m43_71 -> m43_69  [color=blue, key=0, style=bold];
m43_253 -> m43_11  [color=green, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_1  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_6  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_12  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_13  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_14  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_34  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_38  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_42  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_46  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_50  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_54  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_58  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_62  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_66  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_70  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_74  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_78  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_83  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_87  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_91  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_96  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_101  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_106  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_111  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_112  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_113  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_119  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_124  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_129  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_133  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_139  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_145  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_158  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_163  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_168  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_173  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_177  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_181  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_185  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_189  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_193  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_197  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_201  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_205  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_209  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_213  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_217  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_221  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_225  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_229  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_233  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m43_253 -> m43_250  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m45_90 -> m45_91  [key=0, style=solid];
m45_91 -> m45_90  [color=blue, key=0, style=bold];
m45_96 -> m45_97  [key=0, style=solid];
m45_97 -> m45_96  [color=blue, key=0, style=bold];
m45_25 -> m45_26  [key=0, style=solid];
m45_26 -> m45_27  [key=0, style=solid];
m45_26 -> m45_28  [key=2, style=dotted];
m45_26 -> m45_29  [key=2, style=dotted];
m45_27 -> m45_25  [color=blue, key=0, style=bold];
m45_44 -> m45_45  [key=0, style=solid];
m45_45 -> m45_46  [key=0, style=solid];
m45_45 -> m45_47  [key=2, style=dotted];
m45_45 -> m45_29  [key=2, style=dotted];
m45_46 -> m45_44  [color=blue, key=0, style=bold];
m45_34 -> m45_35  [key=0, style=solid];
m45_35 -> m45_34  [color=blue, key=0, style=bold];
m45_20 -> m45_21  [key=0, style=solid];
m45_21 -> m45_22  [key=0, style=solid];
m45_22 -> m45_20  [color=blue, key=0, style=bold];
m45_36 -> m45_37  [key=0, style=solid];
m45_37 -> m45_38  [key=0, style=solid];
m45_37 -> m45_39  [key=2, style=dotted];
m45_37 -> m45_29  [key=2, style=dotted];
m45_38 -> m45_36  [color=blue, key=0, style=bold];
m45_104 -> m45_105  [key=0, style=solid];
m45_105 -> m45_106  [key=0, style=solid];
m45_105 -> m45_107  [key=2, style=dotted];
m45_106 -> m45_104  [color=blue, key=0, style=bold];
m45_7 -> m45_8  [color=red, key=0, style=solid];
m45_9 -> m45_10  [key=0, style=solid];
m45_8 -> m45_7  [color=blue, key=0, style=bold];
m45_10 -> m45_11  [key=0, style=solid];
m45_11 -> m45_12  [key=0, style=solid];
m45_11 -> m45_16  [key=0, style=solid];
m45_12 -> m45_13  [key=0, style=solid];
m45_13 -> m45_14  [key=0, style=solid];
m45_13 -> m45_15  [key=0, style=solid];
m45_13 -> m45_17  [key=2, style=dotted];
m45_14 -> m45_15  [key=0, style=solid];
m45_14 -> m45_18  [key=2, style=dotted];
m45_15 -> m45_11  [key=0, style=solid];
m45_15 -> m45_19  [key=2, style=dotted];
m45_16 -> m45_9  [color=blue, key=0, style=bold];
m45_75 -> m45_76  [key=0, style=solid];
m45_76 -> m45_77  [key=0, style=solid];
m45_76 -> m45_83  [key=0, style=solid];
m45_76 -> m45_78  [color=darkseagreen4, key=1, label=update, style=dashed];
m45_76 -> m45_79  [color=darkseagreen4, key=1, label=update, style=dashed];
m45_76 -> m45_80  [color=darkseagreen4, key=1, label=update, style=dashed];
m45_76 -> m45_81  [color=darkseagreen4, key=1, label=update, style=dashed];
m45_76 -> m45_82  [color=darkseagreen4, key=1, label=update, style=dashed];
m45_77 -> m45_78  [key=0, style=solid];
m45_77 -> m45_79  [key=0, style=solid];
m45_77 -> m45_55  [key=2, style=dotted];
m45_78 -> m45_79  [key=0, style=solid];
m45_78 -> m45_84  [key=2, style=dotted];
m45_78 -> m45_57  [key=2, style=dotted];
m45_79 -> m45_80  [key=0, style=solid];
m45_79 -> m45_76  [key=0, style=solid];
m45_79 -> m45_81  [color=darkseagreen4, key=1, label=series, style=dashed];
m45_79 -> m45_82  [color=darkseagreen4, key=1, label=series, style=dashed];
m45_80 -> m45_81  [key=0, style=solid];
m45_80 -> m45_82  [key=0, style=solid];
m45_80 -> m45_58  [key=2, style=dotted];
m45_81 -> m45_82  [key=0, style=solid];
m45_81 -> m45_59  [key=2, style=dotted];
m45_81 -> m45_60  [key=2, style=dotted];
m45_82 -> m45_79  [key=0, style=solid];
m45_82 -> m45_85  [key=2, style=dotted];
m45_83 -> m45_75  [color=blue, key=0, style=bold];
m45_40 -> m45_41  [key=0, style=solid];
m45_41 -> m45_42  [key=0, style=solid];
m45_41 -> m45_43  [key=2, style=dotted];
m45_41 -> m45_29  [key=2, style=dotted];
m45_42 -> m45_40  [color=blue, key=0, style=bold];
m45_88 -> m45_89  [key=0, style=solid];
m45_89 -> m45_88  [color=blue, key=0, style=bold];
m45_92 -> m45_93  [key=0, style=solid];
m45_93 -> m45_92  [color=blue, key=0, style=bold];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_2 -> m45_3  [key=0, style=solid];
m45_2 -> m45_5  [key=2, style=dotted];
m45_3 -> m45_4  [key=0, style=solid];
m45_3 -> m45_6  [key=2, style=dotted];
m45_3 -> m45_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_4 -> m45_0  [color=blue, key=0, style=bold];
m45_72 -> m45_73  [key=0, style=solid];
m45_73 -> m45_74  [key=0, style=solid];
m45_73 -> m45_48  [key=2, style=dotted];
m45_74 -> m45_72  [color=blue, key=0, style=bold];
m45_23 -> m45_24  [key=0, style=solid];
m45_24 -> m45_23  [color=blue, key=0, style=bold];
m45_108 -> m45_109  [key=0, style=solid];
m45_109 -> m45_108  [color=blue, key=0, style=bold];
m45_63 -> m45_64  [key=0, style=solid];
m45_64 -> m45_65  [key=0, style=solid];
m45_64 -> m45_48  [key=2, style=dotted];
m45_65 -> m45_63  [color=blue, key=0, style=bold];
m45_100 -> m45_101  [key=0, style=solid];
m45_101 -> m45_102  [key=0, style=solid];
m45_101 -> m45_103  [key=2, style=dotted];
m45_102 -> m45_100  [color=blue, key=0, style=bold];
m45_69 -> m45_70  [key=0, style=solid];
m45_70 -> m45_71  [key=0, style=solid];
m45_70 -> m45_48  [key=2, style=dotted];
m45_71 -> m45_69  [color=blue, key=0, style=bold];
m45_30 -> m45_31  [key=0, style=solid];
m45_31 -> m45_32  [key=0, style=solid];
m45_31 -> m45_33  [key=2, style=dotted];
m45_31 -> m45_29  [key=2, style=dotted];
m45_32 -> m45_30  [color=blue, key=0, style=bold];
m45_48 -> m45_49  [key=0, style=solid];
m45_48 -> m45_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_48 -> m45_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_48 -> m45_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_48 -> m45_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_48 -> m45_64  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SeriesType seriesType", style=bold];
m45_48 -> m45_70  [color=darkorchid, key=3, label="Parameter variable string seriesName", style=bold];
m45_48 -> m45_67  [color=darkorchid, key=3, label="Parameter variable string unit", style=bold];
m45_48 -> m45_63  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m45_48 -> m45_66  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m45_48 -> m45_69  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m45_48 -> m45_72  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m45_49 -> m45_50  [key=0, style=solid];
m45_49 -> m45_51  [key=0, style=solid];
m45_49 -> m45_55  [key=2, style=dotted];
m45_50 -> m45_51  [key=0, style=solid];
m45_50 -> m45_56  [key=2, style=dotted];
m45_50 -> m45_57  [key=2, style=dotted];
m45_51 -> m45_52  [key=0, style=solid];
m45_51 -> m45_53  [key=0, style=solid];
m45_51 -> m45_58  [key=2, style=dotted];
m45_52 -> m45_53  [key=0, style=solid];
m45_52 -> m45_59  [key=2, style=dotted];
m45_52 -> m45_60  [key=2, style=dotted];
m45_53 -> m45_54  [key=0, style=solid];
m45_53 -> m45_61  [key=2, style=dotted];
m45_53 -> m45_62  [key=2, style=dotted];
m45_54 -> m45_48  [color=blue, key=0, style=bold];
m45_66 -> m45_67  [key=0, style=solid];
m45_67 -> m45_68  [key=0, style=solid];
m45_67 -> m45_48  [key=2, style=dotted];
m45_68 -> m45_66  [color=blue, key=0, style=bold];
m45_98 -> m45_99  [key=0, style=solid];
m45_99 -> m45_98  [color=blue, key=0, style=bold];
m45_94 -> m45_95  [key=0, style=solid];
m45_95 -> m45_94  [color=blue, key=0, style=bold];
m45_86 -> m45_87  [key=0, style=solid];
m45_87 -> m45_86  [color=blue, key=0, style=bold];
m45_110 -> m45_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_52  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_53  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_77  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_82  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_101  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m45_110 -> m45_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m46_48 -> m46_49  [key=0, style=solid];
m46_48 -> m46_51  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_49 -> m46_50  [key=0, style=solid];
m46_49 -> m46_58  [key=2, style=dotted];
m46_49 -> m46_52  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_49 -> m46_55  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_49 -> m46_56  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_51 -> m46_52  [key=0, style=solid];
m46_50 -> m46_51  [key=0, style=solid];
m46_52 -> m46_53  [key=0, style=solid];
m46_52 -> m46_59  [key=2, style=dotted];
m46_55 -> m46_56  [key=0, style=solid];
m46_55 -> m46_60  [key=2, style=dotted];
m46_56 -> m46_57  [key=0, style=solid];
m46_56 -> m46_60  [key=2, style=dotted];
m46_53 -> m46_54  [key=0, style=solid];
m46_54 -> m46_55  [key=0, style=solid];
m46_57 -> m46_48  [color=blue, key=0, style=bold];
m46_14 -> m46_15  [key=0, style=solid];
m46_14 -> m46_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_14 -> m46_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_15 -> m46_16  [key=0, style=solid];
m46_16 -> m46_17  [key=0, style=solid];
m46_16 -> m46_29  [key=2, style=dotted];
m46_17 -> m46_18  [key=0, style=solid];
m46_18 -> m46_19  [key=0, style=solid];
m46_19 -> m46_20  [key=0, style=solid];
m46_20 -> m46_21  [key=0, style=solid];
m46_21 -> m46_22  [key=0, style=solid];
m46_22 -> m46_23  [key=0, style=solid];
m46_23 -> m46_24  [key=0, style=solid];
m46_25 -> m46_26  [key=0, style=solid];
m46_26 -> m46_27  [key=0, style=solid];
m46_27 -> m46_28  [key=0, style=solid];
m46_24 -> m46_25  [key=0, style=solid];
m46_28 -> m46_14  [color=blue, key=0, style=bold];
m46_153 -> m46_153  [color=darkorchid, key=3, label="Field variable decimal BidPrice", style=bold];
m46_153 -> m46_30  [color=darkorchid, key=3, label="Field variable decimal BidPrice", style=bold];
m46_153 -> m46_39  [color=darkorchid, key=3, label="Field variable decimal BidPrice", style=bold];
m46_153 -> m46_154  [color=darkorchid, key=3, label="Field variable decimal BidPrice", style=bold];
m46_154 -> m46_155  [key=0, style=solid];
m46_154 -> m46_156  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_154 -> m46_157  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_154 -> m46_158  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_154 -> m46_159  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_154 -> m46_160  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_155 -> m46_156  [key=0, style=solid];
m46_156 -> m46_157  [key=0, style=solid];
m46_157 -> m46_158  [key=0, style=solid];
m46_158 -> m46_159  [key=0, style=solid];
m46_159 -> m46_160  [key=0, style=solid];
m46_160 -> m46_161  [key=0, style=solid];
m46_160 -> m46_162  [key=2, style=dotted];
m46_161 -> m46_154  [color=blue, key=0, style=bold];
m46_147 -> m46_148  [key=0, style=solid];
m46_147 -> m46_152  [key=2, style=dotted];
m46_147 -> m46_147  [color=darkseagreen4, key=1, label=source, style=dashed];
m46_142 -> m46_143  [key=0, style=solid];
m46_142 -> m46_145  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_142 -> m46_146  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_142 -> m46_147  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_143 -> m46_144  [key=0, style=solid];
m46_143 -> m46_145  [key=0, style=solid];
m46_145 -> m46_146  [key=0, style=solid];
m46_145 -> m46_151  [key=2, style=dotted];
m46_145 -> m46_147  [color=darkseagreen4, key=1, label=source, style=dashed];
m46_145 -> m46_148  [color=darkseagreen4, key=1, label=source, style=dashed];
m46_146 -> m46_147  [key=0, style=solid];
m46_146 -> m46_148  [key=0, style=solid];
m46_144 -> m46_149  [key=0, style=solid];
m46_144 -> m46_150  [key=2, style=dotted];
m46_148 -> m46_149  [key=0, style=solid];
m46_148 -> m46_153  [key=2, style=dotted];
m46_149 -> m46_142  [color=blue, key=0, style=bold];
m46_39 -> m46_40  [key=0, style=solid];
m46_39 -> m46_41  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m46_39 -> m46_42  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_39 -> m46_43  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_39 -> m46_45  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_39 -> m46_46  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_40 -> m46_41  [key=0, style=solid];
m46_41 -> m46_42  [key=0, style=solid];
m46_42 -> m46_43  [key=0, style=solid];
m46_43 -> m46_44  [key=0, style=solid];
m46_45 -> m46_46  [key=0, style=solid];
m46_46 -> m46_47  [key=0, style=solid];
m46_44 -> m46_45  [key=0, style=solid];
m46_47 -> m46_39  [color=blue, key=0, style=bold];
m46_61 -> m46_62  [key=0, style=solid];
m46_61 -> m46_64  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_61 -> m46_65  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m46_61 -> m46_66  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_62 -> m46_63  [key=0, style=solid];
m46_62 -> m46_58  [key=2, style=dotted];
m46_62 -> m46_65  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_62 -> m46_66  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_62 -> m46_68  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_62 -> m46_69  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_62 -> m46_70  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_62 -> m46_71  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_64 -> m46_65  [key=0, style=solid];
m46_65 -> m46_66  [key=0, style=solid];
m46_65 -> m46_73  [key=2, style=dotted];
m46_65 -> m46_74  [key=2, style=dotted];
m46_66 -> m46_67  [key=0, style=solid];
m46_66 -> m46_75  [key=2, style=dotted];
m46_66 -> m46_76  [key=2, style=dotted];
m46_63 -> m46_64  [key=0, style=solid];
m46_68 -> m46_69  [key=0, style=solid];
m46_68 -> m46_75  [key=2, style=dotted];
m46_69 -> m46_70  [key=0, style=solid];
m46_69 -> m46_77  [key=2, style=dotted];
m46_70 -> m46_71  [key=0, style=solid];
m46_71 -> m46_72  [key=0, style=solid];
m46_71 -> m46_73  [key=2, style=dotted];
m46_67 -> m46_68  [key=0, style=solid];
m46_72 -> m46_61  [color=blue, key=0, style=bold];
m46_137 -> m46_138  [key=0, style=solid];
m46_137 -> m46_140  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_138 -> m46_139  [key=0, style=solid];
m46_138 -> m46_140  [key=0, style=solid];
m46_140 -> m46_141  [key=0, style=solid];
m46_140 -> m46_78  [key=2, style=dotted];
m46_139 -> m46_141  [key=0, style=solid];
m46_139 -> m46_0  [key=2, style=dotted];
m46_141 -> m46_137  [color=blue, key=0, style=bold];
m46_78 -> m46_79  [key=0, style=solid];
m46_78 -> m46_80  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_78 -> m46_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_78 -> m46_96  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_78 -> m46_105  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_106  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_107  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_78 -> m46_120  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m46_79 -> m46_80  [key=0, style=solid];
m46_80 -> m46_81  [key=0, style=solid];
m46_80 -> m46_76  [key=2, style=dotted];
m46_80 -> m46_86  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m46_80 -> m46_109  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m46_80 -> m46_117  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m46_80 -> m46_120  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m46_81 -> m46_82  [key=0, style=solid];
m46_81 -> m46_93  [key=0, style=solid];
m46_81 -> m46_102  [key=0, style=solid];
m46_83 -> m46_84  [key=0, style=solid];
m46_83 -> m46_132  [key=2, style=dotted];
m46_83 -> m46_85  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_83 -> m46_86  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_83 -> m46_88  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_83 -> m46_89  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_83 -> m46_90  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_83 -> m46_91  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_83 -> m46_92  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_84 -> m46_85  [key=0, style=solid];
m46_85 -> m46_86  [key=0, style=solid];
m46_85 -> m46_133  [key=2, style=dotted];
m46_85 -> m46_74  [key=2, style=dotted];
m46_85 -> m46_134  [key=2, style=dotted];
m46_86 -> m46_87  [key=0, style=solid];
m46_86 -> m46_75  [key=2, style=dotted];
m46_86 -> m46_135  [key=2, style=dotted];
m46_95 -> m46_96  [key=0, style=solid];
m46_95 -> m46_132  [key=2, style=dotted];
m46_95 -> m46_98  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_95 -> m46_99  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_95 -> m46_100  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_96 -> m46_97  [key=0, style=solid];
m46_98 -> m46_99  [key=0, style=solid];
m46_98 -> m46_133  [key=2, style=dotted];
m46_98 -> m46_74  [key=2, style=dotted];
m46_98 -> m46_134  [key=2, style=dotted];
m46_104 -> m46_105  [key=0, style=solid];
m46_104 -> m46_132  [key=2, style=dotted];
m46_104 -> m46_106  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_109  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_110  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_111  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_112  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_113  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_115  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_116  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_117  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_118  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_119  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_120  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_121  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_122  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_104 -> m46_123  [color=darkseagreen4, key=1, label=csv, style=dashed];
m46_105 -> m46_106  [key=0, style=solid];
m46_106 -> m46_107  [key=0, style=solid];
m46_106 -> m46_133  [key=2, style=dotted];
m46_106 -> m46_74  [key=2, style=dotted];
m46_106 -> m46_134  [key=2, style=dotted];
m46_107 -> m46_108  [key=0, style=solid];
m46_109 -> m46_110  [key=0, style=solid];
m46_109 -> m46_75  [key=2, style=dotted];
m46_109 -> m46_135  [key=2, style=dotted];
m46_117 -> m46_118  [key=0, style=solid];
m46_117 -> m46_75  [key=2, style=dotted];
m46_117 -> m46_135  [key=2, style=dotted];
m46_120 -> m46_121  [key=0, style=solid];
m46_120 -> m46_75  [key=2, style=dotted];
m46_120 -> m46_135  [key=2, style=dotted];
m46_82 -> m46_83  [key=0, style=solid];
m46_93 -> m46_94  [key=0, style=solid];
m46_102 -> m46_103  [key=0, style=solid];
m46_88 -> m46_89  [key=0, style=solid];
m46_88 -> m46_75  [key=2, style=dotted];
m46_89 -> m46_90  [key=0, style=solid];
m46_89 -> m46_129  [key=0, style=solid];
m46_89 -> m46_131  [key=0, style=solid];
m46_90 -> m46_91  [key=0, style=solid];
m46_91 -> m46_92  [key=0, style=solid];
m46_92 -> m46_129  [key=0, style=solid];
m46_92 -> m46_131  [key=0, style=solid];
m46_87 -> m46_88  [key=0, style=solid];
m46_129 -> m46_130  [key=0, style=solid];
m46_94 -> m46_95  [key=0, style=solid];
m46_99 -> m46_100  [key=0, style=solid];
m46_99 -> m46_75  [key=2, style=dotted];
m46_100 -> m46_101  [key=0, style=solid];
m46_100 -> m46_75  [key=2, style=dotted];
m46_97 -> m46_98  [key=0, style=solid];
m46_101 -> m46_129  [key=0, style=solid];
m46_101 -> m46_131  [key=0, style=solid];
m46_103 -> m46_104  [key=0, style=solid];
m46_110 -> m46_111  [key=0, style=solid];
m46_110 -> m46_75  [key=2, style=dotted];
m46_111 -> m46_112  [key=0, style=solid];
m46_112 -> m46_113  [key=0, style=solid];
m46_113 -> m46_129  [key=0, style=solid];
m46_113 -> m46_131  [key=0, style=solid];
m46_115 -> m46_129  [key=0, style=solid];
m46_115 -> m46_131  [key=0, style=solid];
m46_115 -> m46_75  [key=2, style=dotted];
m46_116 -> m46_117  [key=0, style=solid];
m46_116 -> m46_119  [key=0, style=solid];
m46_118 -> m46_119  [key=0, style=solid];
m46_118 -> m46_75  [key=2, style=dotted];
m46_119 -> m46_120  [key=0, style=solid];
m46_119 -> m46_122  [key=0, style=solid];
m46_121 -> m46_122  [key=0, style=solid];
m46_121 -> m46_75  [key=2, style=dotted];
m46_122 -> m46_123  [key=0, style=solid];
m46_123 -> m46_124  [key=0, style=solid];
m46_108 -> m46_109  [key=0, style=solid];
m46_108 -> m46_114  [key=0, style=solid];
m46_114 -> m46_115  [key=0, style=solid];
m46_114 -> m46_116  [key=0, style=solid];
m46_124 -> m46_125  [key=0, style=solid];
m46_124 -> m46_128  [key=0, style=solid];
m46_125 -> m46_126  [key=0, style=solid];
m46_125 -> m46_127  [key=0, style=solid];
m46_128 -> m46_129  [key=0, style=solid];
m46_128 -> m46_131  [key=0, style=solid];
m46_126 -> m46_129  [key=0, style=solid];
m46_126 -> m46_131  [key=0, style=solid];
m46_127 -> m46_129  [key=0, style=solid];
m46_127 -> m46_131  [key=0, style=solid];
m46_130 -> m46_131  [key=0, style=solid];
m46_130 -> m46_136  [key=2, style=dotted];
m46_131 -> m46_78  [color=blue, key=0, style=bold];
m46_163 -> m46_164  [key=0, style=solid];
m46_164 -> m46_165  [key=0, style=solid];
m46_165 -> m46_163  [color=blue, key=0, style=bold];
m46_30 -> m46_31  [key=0, style=solid];
m46_30 -> m46_32  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m46_30 -> m46_33  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_30 -> m46_34  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_30 -> m46_36  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_30 -> m46_37  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_31 -> m46_32  [key=0, style=solid];
m46_32 -> m46_33  [key=0, style=solid];
m46_33 -> m46_34  [key=0, style=solid];
m46_34 -> m46_35  [key=0, style=solid];
m46_36 -> m46_37  [key=0, style=solid];
m46_37 -> m46_38  [key=0, style=solid];
m46_35 -> m46_36  [key=0, style=solid];
m46_38 -> m46_30  [color=blue, key=0, style=bold];
m46_76 -> m46_169  [key=0, style=solid];
m46_169 -> m46_170  [key=0, style=solid];
m46_170 -> m46_76  [color=blue, key=0, style=bold];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_3  [key=0, style=solid];
m46_2 -> m46_13  [key=2, style=dotted];
m46_3 -> m46_4  [key=0, style=solid];
m46_4 -> m46_5  [key=0, style=solid];
m46_5 -> m46_6  [key=0, style=solid];
m46_6 -> m46_7  [key=0, style=solid];
m46_7 -> m46_8  [key=0, style=solid];
m46_8 -> m46_9  [key=0, style=solid];
m46_9 -> m46_10  [key=0, style=solid];
m46_10 -> m46_11  [key=0, style=solid];
m46_11 -> m46_12  [key=0, style=solid];
m46_12 -> m46_0  [color=blue, key=0, style=bold];
m46_166 -> m46_167  [key=0, style=solid];
m46_167 -> m46_168  [key=0, style=solid];
m46_167 -> m46_14  [key=2, style=dotted];
m46_168 -> m46_166  [color=blue, key=0, style=bold];
m46_171 -> m46_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_45  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_54  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_55  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_68  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_70  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_71  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_87  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_90  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_91  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_92  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_96  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_100  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_105  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_106  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_107  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_108  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_111  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_112  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_113  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_114  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_115  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_120  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_121  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_122  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_123  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_126  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_127  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_155  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_156  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_157  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_158  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_159  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_160  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_164  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_171 -> m46_167  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m47_112 -> m47_113  [key=0, style=solid];
m47_112 -> m47_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_112 -> m47_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_112 -> m47_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_112 -> m47_115  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_112 -> m47_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_112 -> m47_119  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_112 -> m47_120  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_112 -> m47_121  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_113 -> m47_85  [key=2, style=dotted];
m47_113 -> m47_114  [key=0, style=solid];
m47_113 -> m47_116  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_113 -> m47_117  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_113 -> m47_118  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_113 -> m47_119  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_113 -> m47_120  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_113 -> m47_121  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_113 -> m47_122  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_113 -> m47_123  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_114 -> m47_86  [key=2, style=dotted];
m47_114 -> m47_115  [key=0, style=solid];
m47_114 -> m47_116  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_114 -> m47_117  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_114 -> m47_118  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_114 -> m47_119  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_114 -> m47_120  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_114 -> m47_121  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_114 -> m47_122  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_116 -> m47_87  [key=2, style=dotted];
m47_116 -> m47_88  [key=2, style=dotted];
m47_116 -> m47_118  [key=0, style=solid];
m47_117 -> m47_88  [key=2, style=dotted];
m47_117 -> m47_89  [key=2, style=dotted];
m47_117 -> m47_90  [key=2, style=dotted];
m47_117 -> m47_118  [key=0, style=solid];
m47_118 -> m47_91  [key=2, style=dotted];
m47_118 -> m47_92  [key=2, style=dotted];
m47_118 -> m47_119  [key=0, style=solid];
m47_119 -> m47_91  [key=2, style=dotted];
m47_119 -> m47_92  [key=2, style=dotted];
m47_119 -> m47_120  [key=0, style=solid];
m47_120 -> m47_91  [key=2, style=dotted];
m47_120 -> m47_92  [key=2, style=dotted];
m47_120 -> m47_121  [key=0, style=solid];
m47_121 -> m47_91  [key=2, style=dotted];
m47_121 -> m47_92  [key=2, style=dotted];
m47_121 -> m47_122  [key=0, style=solid];
m47_122 -> m47_91  [key=2, style=dotted];
m47_122 -> m47_123  [key=0, style=solid];
m47_123 -> m47_124  [key=0, style=solid];
m47_115 -> m47_116  [key=0, style=solid];
m47_115 -> m47_117  [key=0, style=solid];
m47_124 -> m47_112  [color=blue, key=0, style=bold];
m47_164 -> m47_165  [key=0, style=solid];
m47_165 -> m47_166  [key=0, style=solid];
m47_165 -> m47_167  [key=2, style=dotted];
m47_166 -> m47_164  [color=blue, key=0, style=bold];
m47_54 -> m47_95  [key=0, style=solid];
m47_54 -> m47_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_54 -> m47_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_54 -> m47_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_54 -> m47_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_95 -> m47_96  [key=0, style=solid];
m47_95 -> m47_85  [key=2, style=dotted];
m47_95 -> m47_98  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_95 -> m47_99  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_95 -> m47_100  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_95 -> m47_101  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_95 -> m47_102  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_95 -> m47_103  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_95 -> m47_104  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_96 -> m47_97  [key=0, style=solid];
m47_96 -> m47_86  [key=2, style=dotted];
m47_96 -> m47_98  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_96 -> m47_99  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_96 -> m47_100  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_96 -> m47_101  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_96 -> m47_102  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_96 -> m47_103  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_97 -> m47_98  [key=0, style=solid];
m47_97 -> m47_99  [key=0, style=solid];
m47_98 -> m47_100  [key=0, style=solid];
m47_98 -> m47_87  [key=2, style=dotted];
m47_98 -> m47_88  [key=2, style=dotted];
m47_99 -> m47_100  [key=0, style=solid];
m47_99 -> m47_89  [key=2, style=dotted];
m47_99 -> m47_90  [key=2, style=dotted];
m47_99 -> m47_88  [key=2, style=dotted];
m47_104 -> m47_105  [key=0, style=solid];
m47_100 -> m47_101  [key=0, style=solid];
m47_100 -> m47_91  [key=2, style=dotted];
m47_101 -> m47_102  [key=0, style=solid];
m47_101 -> m47_91  [key=2, style=dotted];
m47_102 -> m47_103  [key=0, style=solid];
m47_102 -> m47_91  [key=2, style=dotted];
m47_103 -> m47_104  [key=0, style=solid];
m47_103 -> m47_91  [key=2, style=dotted];
m47_105 -> m47_54  [color=blue, key=0, style=bold];
m47_60 -> m47_61  [key=0, style=solid];
m47_60 -> m47_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_60 -> m47_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_60 -> m47_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_66 -> m47_67  [color=green, key=0, style=solid];
m47_61 -> m47_66  [color=green, key=0, style=solid];
m47_61 -> m47_62  [key=0, style=solid];
m47_61 -> m47_64  [key=0, style=solid];
m47_67 -> m47_69  [key=0, style=solid];
m47_67 -> m47_72  [key=2, style=dotted];
m47_62 -> m47_63  [key=0, style=solid];
m47_64 -> m47_65  [key=0, style=solid];
m47_63 -> m47_69  [key=0, style=solid];
m47_63 -> m47_70  [key=2, style=dotted];
m47_65 -> m47_69  [key=0, style=solid];
m47_65 -> m47_71  [key=2, style=dotted];
m47_68 -> m47_69  [key=0, style=solid];
m47_69 -> m47_60  [color=blue, key=0, style=bold];
m47_14 -> m47_36  [key=0, style=solid];
m47_14 -> m47_37  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m47_14 -> m47_38  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m47_14 -> m47_39  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m47_14 -> m47_15  [key=0, style=solid];
m47_36 -> m47_37  [key=0, style=solid];
m47_36 -> m47_39  [key=0, style=solid];
m47_36 -> m47_38  [key=0, style=solid];
m47_37 -> m47_38  [key=0, style=solid];
m47_37 -> m47_39  [key=0, style=solid];
m47_37 -> m47_41  [key=2, style=dotted];
m47_37 -> m47_42  [key=2, style=dotted];
m47_37 -> m47_52  [key=0, style=solid];
m47_37 -> m47_0  [key=2, style=dotted];
m47_38 -> m47_39  [key=0, style=solid];
m47_38 -> m47_43  [key=2, style=dotted];
m47_38 -> m47_44  [key=2, style=dotted];
m47_38 -> m47_38  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m47_38 -> m47_41  [key=0, style=solid];
m47_38 -> m47_45  [key=0, style=solid];
m47_38 -> m47_47  [key=0, style=solid];
m47_39 -> m47_40  [key=0, style=solid];
m47_40 -> m47_14  [color=blue, key=0, style=bold];
m47_40 -> m47_52  [key=0, style=solid];
m47_40 -> m47_53  [key=2, style=dotted];
m47_125 -> m47_126  [key=0, style=solid];
m47_125 -> m47_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_125 -> m47_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_125 -> m47_130  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_125 -> m47_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_125 -> m47_131  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_125 -> m47_132  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_125 -> m47_133  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_125 -> m47_134  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_126 -> m47_85  [key=2, style=dotted];
m47_126 -> m47_127  [key=0, style=solid];
m47_126 -> m47_129  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_126 -> m47_130  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_126 -> m47_131  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_126 -> m47_132  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_126 -> m47_133  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_126 -> m47_134  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_126 -> m47_135  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_126 -> m47_136  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_127 -> m47_86  [key=2, style=dotted];
m47_127 -> m47_128  [key=0, style=solid];
m47_127 -> m47_129  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_127 -> m47_130  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_127 -> m47_131  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_127 -> m47_132  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_127 -> m47_133  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_127 -> m47_134  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_127 -> m47_135  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_129 -> m47_87  [key=2, style=dotted];
m47_129 -> m47_88  [key=2, style=dotted];
m47_129 -> m47_131  [key=0, style=solid];
m47_130 -> m47_88  [key=2, style=dotted];
m47_130 -> m47_89  [key=2, style=dotted];
m47_130 -> m47_90  [key=2, style=dotted];
m47_130 -> m47_131  [key=0, style=solid];
m47_131 -> m47_91  [key=2, style=dotted];
m47_131 -> m47_92  [key=2, style=dotted];
m47_131 -> m47_132  [key=0, style=solid];
m47_132 -> m47_91  [key=2, style=dotted];
m47_132 -> m47_92  [key=2, style=dotted];
m47_132 -> m47_133  [key=0, style=solid];
m47_133 -> m47_91  [key=2, style=dotted];
m47_133 -> m47_92  [key=2, style=dotted];
m47_133 -> m47_134  [key=0, style=solid];
m47_134 -> m47_91  [key=2, style=dotted];
m47_134 -> m47_92  [key=2, style=dotted];
m47_134 -> m47_135  [key=0, style=solid];
m47_135 -> m47_91  [key=2, style=dotted];
m47_135 -> m47_136  [key=0, style=solid];
m47_136 -> m47_137  [key=0, style=solid];
m47_128 -> m47_129  [key=0, style=solid];
m47_128 -> m47_130  [key=0, style=solid];
m47_137 -> m47_125  [color=blue, key=0, style=bold];
m47_20 -> m47_21  [key=0, style=solid];
m47_20 -> m47_22  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m47_20 -> m47_23  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_20 -> m47_24  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_20 -> m47_25  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_20 -> m47_26  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_20 -> m47_27  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_20 -> m47_28  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_20 -> m47_29  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m47_21 -> m47_22  [key=0, style=solid];
m47_21 -> m47_23  [key=2, style=dotted];
m47_22 -> m47_20  [color=blue, key=0, style=bold];
m47_22 -> m47_23  [key=0, style=solid];
m47_56 -> m47_138  [key=0, style=solid];
m47_138 -> m47_139  [key=0, style=solid];
m47_138 -> m47_112  [key=2, style=dotted];
m47_139 -> m47_56  [color=blue, key=0, style=bold];
m47_18 -> m47_6  [color=blue, key=0, style=bold];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_15  [key=2, style=dotted];
m47_53 -> m47_73  [key=0, style=solid];
m47_53 -> m47_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_53 -> m47_75  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_53 -> m47_76  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_53 -> m47_77  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_53 -> m47_78  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_53 -> m47_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_53 -> m47_80  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_53 -> m47_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_73 -> m47_85  [key=2, style=dotted];
m47_73 -> m47_74  [key=0, style=solid];
m47_73 -> m47_76  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_73 -> m47_77  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_73 -> m47_78  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_73 -> m47_79  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_73 -> m47_80  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_73 -> m47_81  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_73 -> m47_82  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_73 -> m47_83  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m47_74 -> m47_86  [key=2, style=dotted];
m47_74 -> m47_75  [key=0, style=solid];
m47_74 -> m47_76  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_74 -> m47_77  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_74 -> m47_78  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_74 -> m47_79  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_74 -> m47_80  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_74 -> m47_81  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_74 -> m47_82  [color=darkseagreen4, key=1, label=csv, style=dashed];
m47_75 -> m47_76  [key=0, style=solid];
m47_75 -> m47_77  [key=0, style=solid];
m47_76 -> m47_87  [key=2, style=dotted];
m47_76 -> m47_88  [key=2, style=dotted];
m47_76 -> m47_78  [key=0, style=solid];
m47_77 -> m47_88  [key=2, style=dotted];
m47_77 -> m47_89  [key=2, style=dotted];
m47_77 -> m47_90  [key=2, style=dotted];
m47_77 -> m47_78  [key=0, style=solid];
m47_78 -> m47_79  [key=0, style=solid];
m47_78 -> m47_91  [key=2, style=dotted];
m47_78 -> m47_92  [key=2, style=dotted];
m47_79 -> m47_80  [key=0, style=solid];
m47_79 -> m47_91  [key=2, style=dotted];
m47_79 -> m47_92  [key=2, style=dotted];
m47_80 -> m47_81  [key=0, style=solid];
m47_80 -> m47_91  [key=2, style=dotted];
m47_80 -> m47_92  [key=2, style=dotted];
m47_81 -> m47_82  [key=0, style=solid];
m47_81 -> m47_91  [key=2, style=dotted];
m47_81 -> m47_92  [key=2, style=dotted];
m47_83 -> m47_84  [key=0, style=solid];
m47_82 -> m47_91  [key=2, style=dotted];
m47_82 -> m47_83  [key=0, style=solid];
m47_84 -> m47_53  [color=blue, key=0, style=bold];
m47_33 -> m47_42  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_33 -> m47_34  [key=0, style=solid];
m47_33 -> m47_36  [color=darkseagreen4, key=1, label=bool, style=dashed];
m47_33 -> m47_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_33 -> m47_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_33 -> m47_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_33 -> m47_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_33 -> m47_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_33 -> m47_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_33 -> m47_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m47_33 -> m47_23  [key=2, style=dotted];
m47_42 -> m47_52  [color=green, key=0, style=solid];
m47_42 -> m47_54  [color=green, key=2, style=dotted];
m47_41 -> m47_42  [color=green, key=0, style=solid];
m47_34 -> m47_35  [key=0, style=solid];
m47_34 -> m47_36  [key=0, style=solid];
m47_34 -> m47_30  [color=blue, key=0, style=bold];
m47_44 -> m47_52  [key=0, style=solid];
m47_44 -> m47_55  [key=2, style=dotted];
m47_46 -> m47_52  [key=0, style=solid];
m47_46 -> m47_56  [key=2, style=dotted];
m47_46 -> m47_45  [key=0, style=solid];
m47_46 -> m47_49  [key=2, style=dotted];
m47_46 -> m47_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_46 -> m47_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_48 -> m47_52  [key=0, style=solid];
m47_48 -> m47_57  [key=2, style=dotted];
m47_48 -> m47_43  [color=blue, key=0, style=bold];
m47_50 -> m47_51  [key=0, style=solid];
m47_50 -> m47_58  [key=2, style=dotted];
m47_50 -> m47_59  [key=2, style=dotted];
m47_50 -> m47_1  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_2  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_3  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_4  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_5  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_6  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_7  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_11  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_12  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_21  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_25  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_27  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_31  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_32  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_50 -> m47_33  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor", style=dashed];
m47_51 -> m47_52  [key=0, style=solid];
m47_51 -> m47_0  [key=2, style=dotted];
m47_35 -> m47_52  [key=0, style=solid];
m47_43 -> m47_44  [key=0, style=solid];
m47_43 -> m47_45  [key=0, style=solid];
m47_43 -> m47_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_43 -> m47_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_45 -> m47_46  [key=0, style=solid];
m47_45 -> m47_47  [key=0, style=solid];
m47_47 -> m47_48  [key=0, style=solid];
m47_49 -> m47_50  [key=0, style=solid];
m47_52 -> m47_33  [color=blue, key=0, style=bold];
m47_55 -> m47_108  [key=0, style=solid];
m47_108 -> m47_54  [key=2, style=dotted];
m47_108 -> m47_109  [key=0, style=solid];
m47_109 -> m47_55  [color=blue, key=0, style=bold];
m47_151 -> m47_168  [key=0, style=solid];
m47_151 -> m47_169  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_151 -> m47_170  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_151 -> m47_171  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_168 -> m47_169  [key=0, style=solid];
m47_168 -> m47_172  [key=0, style=solid];
m47_168 -> m47_173  [key=2, style=dotted];
m47_169 -> m47_170  [key=0, style=solid];
m47_170 -> m47_171  [key=0, style=solid];
m47_171 -> m47_172  [key=0, style=solid];
m47_172 -> m47_151  [color=blue, key=0, style=bold];
m47_0 -> m47_1  [key=0, style=solid];
m47_0 -> m47_2  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m47_0 -> m47_3  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m47_0 -> m47_4  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m47_0 -> m47_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_0 -> m47_7  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m47_0 -> m47_8  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m47_0 -> m47_10  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m47_0 -> m47_11  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_14  [key=2, style=dotted];
m47_2 -> m47_3  [key=0, style=solid];
m47_3 -> m47_4  [key=0, style=solid];
m47_3 -> m47_5  [key=2, style=dotted];
m47_4 -> m47_5  [key=0, style=solid];
m47_4 -> m47_0  [color=blue, key=0, style=bold];
m47_6 -> m47_7  [key=0, style=solid];
m47_6 -> m47_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_6 -> m47_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_6 -> m47_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_6 -> m47_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_6 -> m47_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_6 -> m47_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_6 -> m47_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_6 -> m47_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_6 -> m47_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_7 -> m47_8  [key=0, style=solid];
m47_7 -> m47_16  [key=2, style=dotted];
m47_7 -> m47_17  [key=2, style=dotted];
m47_8 -> m47_9  [key=0, style=solid];
m47_8 -> m47_10  [key=0, style=solid];
m47_8 -> m47_19  [key=2, style=dotted];
m47_10 -> m47_11  [key=0, style=solid];
m47_10 -> m47_12  [key=0, style=solid];
m47_11 -> m47_12  [key=0, style=solid];
m47_11 -> m47_19  [key=2, style=dotted];
m47_11 -> m47_17  [key=2, style=dotted];
m47_9 -> m47_13  [key=0, style=solid];
m47_9 -> m47_18  [key=2, style=dotted];
m47_9 -> m47_10  [key=0, style=solid];
m47_12 -> m47_13  [key=0, style=solid];
m47_12 -> m47_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m47_13 -> m47_0  [color=blue, key=0, style=bold];
m47_13 -> m47_14  [key=0, style=solid];
m47_24 -> m47_25  [key=0, style=solid];
m47_24 -> m47_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m47_25 -> m47_26  [key=0, style=solid];
m47_25 -> m47_27  [key=0, style=solid];
m47_27 -> m47_28  [key=0, style=solid];
m47_27 -> m47_29  [key=2, style=dotted];
m47_26 -> m47_28  [key=0, style=solid];
m47_26 -> m47_27  [key=0, style=solid];
m47_28 -> m47_24  [color=blue, key=0, style=bold];
m47_28 -> m47_29  [key=0, style=solid];
m47_142 -> m47_143  [key=0, style=solid];
m47_142 -> m47_144  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_142 -> m47_145  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_142 -> m47_146  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_142 -> m47_147  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_142 -> m47_148  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_142 -> m47_149  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m47_143 -> m47_144  [key=0, style=solid];
m47_143 -> m47_151  [key=2, style=dotted];
m47_144 -> m47_145  [key=0, style=solid];
m47_144 -> m47_146  [key=0, style=solid];
m47_145 -> m47_146  [key=0, style=solid];
m47_146 -> m47_147  [key=0, style=solid];
m47_146 -> m47_148  [key=0, style=solid];
m47_147 -> m47_148  [key=0, style=solid];
m47_148 -> m47_149  [key=0, style=solid];
m47_149 -> m47_150  [key=0, style=solid];
m47_150 -> m47_142  [color=blue, key=0, style=bold];
m47_70 -> m47_93  [key=0, style=solid];
m47_93 -> m47_53  [key=2, style=dotted];
m47_93 -> m47_94  [key=0, style=solid];
m47_94 -> m47_70  [color=blue, key=0, style=bold];
m47_30 -> m47_31  [key=0, style=solid];
m47_30 -> m47_32  [color=darkseagreen4, key=1, label=bool, style=dashed];
m47_31 -> m47_32  [key=0, style=solid];
m47_31 -> m47_35  [key=2, style=dotted];
m47_32 -> m47_33  [key=0, style=solid];
m47_32 -> m47_34  [key=0, style=solid];
m47_32 -> m47_20  [color=blue, key=0, style=bold];
m47_29 -> m47_5  [key=2, style=dotted];
m47_29 -> m47_30  [key=0, style=solid];
m47_15 -> m47_16  [key=0, style=solid];
m47_72 -> m47_110  [key=0, style=solid];
m47_110 -> m47_55  [key=2, style=dotted];
m47_110 -> m47_111  [key=0, style=solid];
m47_111 -> m47_72  [color=blue, key=0, style=bold];
m47_57 -> m47_140  [key=0, style=solid];
m47_140 -> m47_141  [key=0, style=solid];
m47_140 -> m47_125  [key=2, style=dotted];
m47_141 -> m47_57  [color=blue, key=0, style=bold];
m47_23 -> m47_24  [key=0, style=solid];
m47_71 -> m47_106  [key=0, style=solid];
m47_106 -> m47_54  [key=2, style=dotted];
m47_106 -> m47_107  [key=0, style=solid];
m47_107 -> m47_71  [color=blue, key=0, style=bold];
m47_17 -> m47_18  [key=0, style=solid];
m47_16 -> m47_16  [color=darkorchid, key=3, label="Field variable decimal _scaleFactor", style=bold];
m47_16 -> m47_17  [key=0, style=solid];
m47_174 -> m47_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_143  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_144  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_145  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_146  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_147  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_148  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_149  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_165  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_168  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_169  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_170  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m47_174 -> m47_171  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m48_26 -> m48_27  [key=0, style=solid];
m48_27 -> m48_28  [key=0, style=solid];
m48_27 -> m48_29  [key=0, style=solid];
m48_28 -> m48_29  [key=0, style=solid];
m48_28 -> m48_30  [key=2, style=dotted];
m48_29 -> m48_26  [color=blue, key=0, style=bold];
m48_0 -> m48_1  [key=0, style=solid];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_14  [key=2, style=dotted];
m48_2 -> m48_3  [key=0, style=solid];
m48_2 -> m48_15  [key=2, style=dotted];
m48_3 -> m48_4  [key=0, style=solid];
m48_3 -> m48_16  [key=2, style=dotted];
m48_4 -> m48_5  [key=0, style=solid];
m48_4 -> m48_17  [key=2, style=dotted];
m48_5 -> m48_6  [key=0, style=solid];
m48_5 -> m48_18  [key=2, style=dotted];
m48_5 -> m48_7  [color=darkseagreen4, key=1, label=engine, style=dashed];
m48_5 -> m48_8  [color=darkseagreen4, key=1, label=engine, style=dashed];
m48_5 -> m48_9  [color=darkseagreen4, key=1, label=engine, style=dashed];
m48_5 -> m48_10  [color=darkseagreen4, key=1, label=engine, style=dashed];
m48_5 -> m48_12  [color=darkseagreen4, key=1, label=engine, style=dashed];
m48_6 -> m48_7  [key=0, style=solid];
m48_6 -> m48_19  [key=2, style=dotted];
m48_7 -> m48_8  [key=0, style=solid];
m48_7 -> m48_20  [key=2, style=dotted];
m48_8 -> m48_9  [key=0, style=solid];
m48_8 -> m48_21  [key=2, style=dotted];
m48_9 -> m48_10  [key=0, style=solid];
m48_9 -> m48_19  [key=2, style=dotted];
m48_9 -> m48_22  [key=2, style=dotted];
m48_10 -> m48_11  [key=0, style=solid];
m48_10 -> m48_19  [key=2, style=dotted];
m48_10 -> m48_23  [key=2, style=dotted];
m48_12 -> m48_13  [key=0, style=solid];
m48_12 -> m48_25  [key=2, style=dotted];
m48_11 -> m48_12  [key=0, style=solid];
m48_11 -> m48_22  [key=2, style=dotted];
m48_11 -> m48_24  [key=2, style=dotted];
m48_13 -> m48_0  [color=blue, key=0, style=bold];
m48_31 -> m48_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CallingRFromCSharp", style=dashed];
m48_31 -> m48_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CallingRFromCSharp", style=dashed];
m48_31 -> m48_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CallingRFromCSharp", style=dashed];
m48_31 -> m48_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CallingRFromCSharp", style=dashed];
m48_31 -> m48_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CallingRFromCSharp", style=dashed];
m48_31 -> m48_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CallingRFromCSharp", style=dashed];
}
