digraph  {
n190 [label="QuantConnect.Python.PandasConverter", span=""];
n191 [label=getVolume, span=""];
n192 [label=toQuoteBar, span=""];
n193 [label=value, span=""];
n194 [label="QuantConnect.Symbol", span=""];
n0 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
n1 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="pandas == null", span="40-40"];
n4 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="_pandas = pandas", span="48-48"];
n2 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="Py.GIL()", span="42-42"];
n3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="pandas = Py.Import(''pandas'')", span="44-44"];
n8 [cluster="Unk.GIL", label="Entry Unk.GIL", span=""];
n9 [cluster="Unk.Import", label="Entry Unk.Import", span=""];
n5 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label=PythonException, span="50-50"];
n7 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="Exit QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
n6 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="Logging.Log.Error($''PandasConverter: Failed to import pandas module: {pythonException}'')", span="52-52"];
n10 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n11 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
n25 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
n26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", span="0-0"];
n27 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n36 [cluster="lambda expression", label="Entry lambda expression", span="63-63"];
n39 [cluster="lambda expression", label="Entry lambda expression", span="63-63"];
n28 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n42 [cluster="lambda expression", label="Entry lambda expression", span="68-68"];
n29 [cluster="Unk.Count", label="Entry Unk.Count", span=""];
n30 [cluster="Unk.First", label="Entry Unk.First", span=""];
n31 [cluster="Unk.DataFrame", label="Entry Unk.DataFrame", span=""];
n32 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
n33 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104"];
n34 [cluster="PyList.cstr", label="Entry PyList.cstr", span=""];
n35 [cluster="Unk.concat", label="Entry Unk.concat", span=""];
n24 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
n38 [cluster="lambda expression", label="Exit lambda expression", span="63-63"];
n41 [cluster="lambda expression", label="Exit lambda expression", span="63-63"];
n44 [cluster="lambda expression", label="Exit lambda expression", span="68-68"];
n71 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
n49 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", label="var pyDict = new PyDict()", span="116-116"];
n72 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n73 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n74 [cluster="Unk.CreateIndex", label="Entry Unk.CreateIndex", span=""];
n79 [cluster="lambda expression", label="Entry lambda expression", span="114-114"];
n75 [cluster="PyDict.cstr", label="Entry PyDict.cstr", span=""];
n76 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n77 [cluster="Unk.Series", label="Entry Unk.Series", span=""];
n78 [cluster="Unk.SetItem", label="Entry Unk.SetItem", span=""];
n82 [cluster="lambda expression", label="Entry lambda expression", span="118-118"];
n85 [cluster="lambda expression", label="Entry lambda expression", span="119-119"];
n88 [cluster="lambda expression", label="Entry lambda expression", span="120-120"];
n91 [cluster="lambda expression", label="Entry lambda expression", span="121-121"];
n98 [cluster="lambda expression", label="Entry lambda expression", span="126-126"];
n105 [cluster="lambda expression", label="Entry lambda expression", span="132-132"];
n108 [cluster="lambda expression", label="Entry lambda expression", span="133-133"];
n111 [cluster="lambda expression", label="Entry lambda expression", span="134-134"];
n114 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
n117 [cluster="lambda expression", label="Entry lambda expression", span="136-136"];
n120 [cluster="lambda expression", label="Entry lambda expression", span="137-137"];
n123 [cluster="lambda expression", label="Entry lambda expression", span="138-138"];
n126 [cluster="lambda expression", label="Entry lambda expression", span="139-139"];
n129 [cluster="lambda expression", label="Entry lambda expression", span="140-140"];
n132 [cluster="lambda expression", label="Entry lambda expression", span="141-141"];
n70 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104"];
n81 [cluster="lambda expression", label="Exit lambda expression", span="114-114"];
n84 [cluster="lambda expression", label="Exit lambda expression", span="118-118"];
n87 [cluster="lambda expression", label="Exit lambda expression", span="119-119"];
n90 [cluster="lambda expression", label="Exit lambda expression", span="120-120"];
n93 [cluster="lambda expression", label="Exit lambda expression", span="121-121"];
n94 [cluster="lambda expression", label="Entry lambda expression", span="125-125"];
n97 [cluster="lambda expression", label="Exit lambda expression", span="125-125"];
n100 [cluster="lambda expression", label="Exit lambda expression", span="126-126"];
n101 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n102 [cluster="lambda expression", label="Entry lambda expression", span="131-131"];
n104 [cluster="lambda expression", label="Exit lambda expression", span="131-131"];
n107 [cluster="lambda expression", label="Exit lambda expression", span="132-132"];
n110 [cluster="lambda expression", label="Exit lambda expression", span="133-133"];
n113 [cluster="lambda expression", label="Exit lambda expression", span="134-134"];
n116 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
n119 [cluster="lambda expression", label="Exit lambda expression", span="136-136"];
n122 [cluster="lambda expression", label="Exit lambda expression", span="137-137"];
n125 [cluster="lambda expression", label="Exit lambda expression", span="138-138"];
n128 [cluster="lambda expression", label="Exit lambda expression", span="139-139"];
n131 [cluster="lambda expression", label="Exit lambda expression", span="140-140"];
n134 [cluster="lambda expression", label="Exit lambda expression", span="141-141"];
n135 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", label="Entry QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", span="154-154"];
n147 [cluster="QuantConnect.Symbol.ToString()", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
n148 [cluster="Unk.ToPython", label="Entry Unk.ToPython", span=""];
n152 [cluster="lambda expression", label="Entry lambda expression", span="157-157"];
n156 [cluster="lambda expression", label="Entry lambda expression", span="162-162"];
n159 [cluster="lambda expression", label="Entry lambda expression", span="168-168"];
n146 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", label="Exit QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", span="154-154"];
n149 [cluster="Unk.ToArray", label="Entry Unk.ToArray", span=""];
n150 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n151 [cluster="Unk.from_tuples", label="Entry Unk.from_tuples", span=""];
n154 [cluster="lambda expression", label="Exit lambda expression", span="157-157"];
n155 [cluster="PyTuple.cstr", label="Entry PyTuple.cstr", span=""];
n158 [cluster="lambda expression", label="Exit lambda expression", span="162-162"];
n161 [cluster="lambda expression", label="Exit lambda expression", span="168-168"];
n162 [cluster="System.Enum.ToString()", label="Entry System.Enum.ToString()", span="0-0"];
n163 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", label="Entry QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="180-180"];
n164 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", label="Py.GIL()", span="182-182"];
n165 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", label="var pyDict = new PyDict()", span="184-184"];
n174 [cluster="lambda expression", label="Entry lambda expression", span="188-188"];
n177 [cluster="lambda expression", label="Entry lambda expression", span="189-189"];
n172 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
n171 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", label="Exit QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="180-180"];
n173 [cluster="Unk.OrderBy", label="Entry Unk.OrderBy", span=""];
n180 [cluster="lambda expression", label="Entry lambda expression", span="193-193"];
n183 [cluster="lambda expression", label="Entry lambda expression", span="193-193"];
n176 [cluster="lambda expression", label="Exit lambda expression", span="188-188"];
n179 [cluster="lambda expression", label="Exit lambda expression", span="189-189"];
n182 [cluster="lambda expression", label="Exit lambda expression", span="193-193"];
n185 [cluster="lambda expression", label="Exit lambda expression", span="193-193"];
n186 [cluster="QuantConnect.Python.PandasConverter.ToString()", label="Entry QuantConnect.Python.PandasConverter.ToString()", span="201-201"];
n188 [cluster="QuantConnect.Python.PandasConverter.ToString()", label="Exit QuantConnect.Python.PandasConverter.ToString()", span="201-201"];
n189 [cluster="Unk.Repr", label="Entry Unk.Repr", span=""];
d1 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0, label="SettlementType = SettlementType.Cash", prediction=0, span="64-64"];
d12 [label="QuantConnect.Securities.Future.Future", span=""];
d0 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47"];
d2 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", label="ContractFilter = new ExpiryFutureFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="65-65"];
d3 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0, label="Holdings = new FutureHolding(this)", prediction=1, span="66-66"];
d4 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", label="_symbolProperties = symbolProperties", span="67-67"];
d8 [cluster="QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", span="29-29"];
d10 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", color=green, community=0, label="ContractFilter = new ExpiryFutureFilter(minExpiry, maxExpiry)", prediction=2, span="116-116"];
d9 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="114-114"];
d11 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="114-114"];
d6 [cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", label="Entry QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", span="38-38"];
d5 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47"];
d7 [cluster="System.TimeSpan.FromDays(double)", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m0_161 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m0_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="235-235"];
m0_151 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverterTests.cs", label="var subscriptionDataConfig = GetSubscriptionDataConfig<T>(symbol, resolution)", prediction=3, span="238-238"];
m0_152 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverterTests.cs", label="var security = GetSecurity(subscriptionDataConfig)", prediction=3, span="239-239"];
m0_153 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=1, file="PandasConverterTests.cs", label="return data.Select(t => TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())).Slice);", prediction=3, span="241-246"];
m0_154 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="235-235"];
m0_160 [cluster="System.Collections.Generic.List<T>.List()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_162 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m0_102 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", span="169-169"];
m0_117 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="i < count", prediction=6, span="200-200"];
m0_133 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="i < count", prediction=7, span="224-224"];
m0_103 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var converter = new PandasConverter()", prediction=8, span="171-171"];
m0_104 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var symbol = Symbols.LTCUSD", prediction=9, span="172-172"];
m0_109 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", prediction=10, span="188-188"];
m0_125 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", prediction=11, span="212-212"];
m0_105 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var config = GetSubscriptionDataConfig<Quandl>(symbol, Resolution.Daily)", prediction=12, span="174-174"];
m0_112 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", prediction=13, span="194-194"];
m0_124 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var history = GetHistory(symbol, Resolution.Daily, rawBars)", prediction=14, span="211-211"];
m0_128 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", prediction=15, span="218-218"];
m0_108 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=1, file="PandasConverterTests.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i =>\r\n                {\r\n                    var line = $''{DateTime.UtcNow.AddDays(i).ToString(''yyyy-MM-dd'')},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}'';\r\n                    return quandl.Reader(config, line, DateTime.UtcNow.AddDays(i), false);\r\n                })\r\n                .ToArray()", prediction=16, span="178-185"];
m0_110 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Py.GIL()", prediction=17, span="190-190"];
m0_111 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", prediction=10, span="192-192"];
m0_126 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Py.GIL()", prediction=19, span="214-214"];
m0_127 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", prediction=11, span="216-216"];
m0_106 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var quandl = new Quandl()", prediction=12, span="175-175"];
m0_107 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="quandl.Reader(config, ''date,open,high,low,close,settle'', DateTime.UtcNow, false)", prediction=12, span="176-176"];
m0_113 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", prediction=23, span="195-195"];
m0_114 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", prediction=6, span="197-197"];
m0_118 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", prediction=25, span="202-202"];
m0_119 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", prediction=26, span="203-203"];
m0_121 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var settle = subDataFrame.loc[index].settle.AsManagedObject(typeof(decimal))", prediction=27, span="205-205"];
m0_129 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", prediction=28, span="219-219"];
m0_130 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", prediction=7, span="221-221"];
m0_134 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", prediction=30, span="226-226"];
m0_135 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", prediction=31, span="227-227"];
m0_137 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var settle = subDataFrame.loc[index].settle.AsManagedObject(typeof(decimal))", prediction=32, span="229-229"];
m0_120 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Value, value)", prediction=16, span="204-204"];
m0_122 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(((DynamicData)rawBars[i]).GetProperty(''settle''), settle)", prediction=16, span="206-206"];
m0_136 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Value, value)", prediction=16, span="228-228"];
m0_138 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(((DynamicData)rawBars[i]).GetProperty(''settle''), settle)", prediction=16, span="230-230"];
m0_116 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var i = 0", prediction=16, span="200-200"];
m0_123 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="i++", prediction=16, span="200-200"];
m0_132 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="var i = 0", prediction=16, span="224-224"];
m0_139 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="i++", prediction=16, span="224-224"];
m0_115 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", prediction=41, span="198-198"];
m0_131 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", prediction=42, span="222-222"];
m0_140 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", span="169-169"];
m0_156 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="241-246"];
m0_61 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m)", prediction=43, span="66-66"];
m0_60 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="66-66"];
m0_62 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="66-66"];
m0_98 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m)", prediction=44, span="121-121"];
m0_97 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="121-121"];
m0_99 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="121-121"];
m0_147 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="return quandl.Reader(config, line, DateTime.UtcNow.AddDays(i), false);", prediction=12, span="183-183"];
m0_145 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="180-184"];
m0_146 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="var line = $''{DateTime.UtcNow.AddDays(i).ToString(''yyyy-MM-dd'')},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}''", prediction=46, span="182-182"];
m0_148 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="180-184"];
m0_157 [cluster="lambda expression", color=green, community=1, file="PandasConverterTests.cs", label="TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())).Slice", prediction=3, span="241-246"];
m0_158 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="241-246"];
m0_56 [cluster="Unk.IsFalse", file="PandasConverterTests.cs", label="Entry Unk.IsFalse", span=""];
m0_101 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m0_166 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m0_159 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m0_11 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m0_100 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m0_17 [cluster="Unk.IsTrue", file="PandasConverterTests.cs", label="Entry Unk.IsTrue", span=""];
m0_150 [cluster="System.DateTime.ToString(string)", file="PandasConverterTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_163 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PandasConverterTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m0_142 [cluster="QuantConnect.Data.Custom.Quandl.Quandl()", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Custom.Quandl.Quandl()", span="62-62"];
m0_14 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="91-91"];
m0_149 [cluster="System.DateTime.AddDays(double)", file="PandasConverterTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m0_170 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m0_58 [cluster="Unk.AreEqual", file="PandasConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m0_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_59 [cluster="Unk.GetHistory", file="PandasConverterTests.cs", label="Entry Unk.GetHistory", span=""];
m0_65 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114"];
m0_77 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="i < count", prediction=48, span="137-137"];
m0_91 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="i < count", prediction=49, span="159-159"];
m0_66 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var converter = new PandasConverter()", prediction=50, span="116-116"];
m0_67 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var symbol = Symbols.EURUSD", prediction=44, span="117-117"];
m0_69 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", prediction=52, span="125-125"];
m0_83 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", prediction=53, span="147-147"];
m0_68 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=1, file="PandasConverterTests.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m))\r\n                .ToArray()", prediction=54, span="119-122"];
m0_72 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", prediction=55, span="131-131"];
m0_82 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var history = GetHistory(symbol, Resolution.Minute, rawBars)", prediction=56, span="146-146"];
m0_86 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", prediction=57, span="153-153"];
m0_70 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Py.GIL()", prediction=58, span="127-127"];
m0_71 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", prediction=52, span="129-129"];
m0_84 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Py.GIL()", prediction=60, span="149-149"];
m0_85 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", prediction=53, span="151-151"];
m0_80 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Close, close)", prediction=54, span="141-141"];
m0_94 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Ask.Close, close)", prediction=54, span="163-163"];
m0_73 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", prediction=64, span="132-132"];
m0_74 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", prediction=48, span="134-134"];
m0_78 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", prediction=66, span="139-139"];
m0_79 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", prediction=67, span="140-140"];
m0_87 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", prediction=68, span="154-154"];
m0_88 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", prediction=49, span="156-156"];
m0_92 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", prediction=70, span="161-161"];
m0_93 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var close = subDataFrame.loc[index].askclose.AsManagedObject(typeof(decimal))", prediction=71, span="162-162"];
m0_76 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var i = 0", prediction=54, span="137-137"];
m0_81 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="i++", prediction=54, span="137-137"];
m0_90 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="var i = 0", prediction=54, span="159-159"];
m0_95 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="i++", prediction=54, span="159-159"];
m0_75 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", prediction=76, span="135-135"];
m0_89 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", prediction=77, span="157-157"];
m0_96 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114"];
m0_12 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PandasConverterTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_52 [cluster="System.Linq.Enumerable.Range(int, int)", file="PandasConverterTests.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m0_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35"];
m0_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="var converter = new PandasConverter()", prediction=78, span="37-37"];
m0_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="var rawBars = Enumerable.Empty<TradeBar>().ToArray()", prediction=79, span="38-38"];
m0_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", prediction=80, span="41-41"];
m0_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", prediction=81, span="50-50"];
m0_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="var history = GetHistory(Symbols.SPY, Resolution.Minute, rawBars)", prediction=82, span="49-49"];
m0_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="Py.GIL()", prediction=83, span="43-43"];
m0_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", prediction=80, span="45-45"];
m0_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="Py.GIL()", prediction=85, span="52-52"];
m0_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", prediction=81, span="54-54"];
m0_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35"];
m0_169 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317"];
m0_15 [cluster="Unk.GIL", file="PandasConverterTests.cs", label="Entry Unk.GIL", span=""];
m0_57 [cluster="Unk.__len__", file="PandasConverterTests.cs", label="Entry Unk.__len__", span=""];
m0_144 [cluster="QuantConnect.Data.DynamicData.GetProperty(string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.DynamicData.GetProperty(string)", span="83-83"];
m0_172 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m0_55 [cluster="Unk.GetDataFrame", file="PandasConverterTests.cs", label="Entry Unk.GetDataFrame", span=""];
m0_155 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="262-262"];
m0_167 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", color=green, community=1, file="PandasConverterTests.cs", label="return new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc),\r\n                subscriptionDataConfig,\r\n                new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency));", prediction=87, span="264-268"];
m0_168 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="262-262"];
m0_143 [cluster="QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="83-83"];
m0_64 [cluster="System.DateTime.AddMinutes(double)", file="PandasConverterTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m0_19 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m0_141 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="249-249"];
m0_164 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=1, file="PandasConverterTests.cs", label="return new SubscriptionDataConfig(\r\n                typeof(T),\r\n                symbol,\r\n                resolution,\r\n                TimeZones.Utc,\r\n                TimeZones.Utc,\r\n                true,\r\n                true,\r\n                false);", prediction=88, span="251-259"];
m0_165 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="249-249"];
m0_171 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m0_16 [cluster="Unk.AsManagedObject", file="PandasConverterTests.cs", label="Entry Unk.AsManagedObject", span=""];
m0_53 [cluster="Unk.Select", file="PandasConverterTests.cs", label="Entry Unk.Select", span=""];
m0_63 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m0_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59"];
m0_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var converter = new PandasConverter()", prediction=89, span="61-61"];
m0_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var symbol = Symbols.SPY", prediction=43, span="62-62"];
m0_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", prediction=91, span="70-70"];
m0_38 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", prediction=92, span="92-92"];
m0_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=1, file="PandasConverterTests.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m))\r\n                .ToArray()", prediction=93, span="64-67"];
m0_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", prediction=94, span="76-76"];
m0_37 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var history = GetHistory(symbol, Resolution.Minute, rawBars)", prediction=95, span="91-91"];
m0_41 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", prediction=96, span="98-98"];
m0_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Py.GIL()", prediction=97, span="72-72"];
m0_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", prediction=91, span="74-74"];
m0_39 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Py.GIL()", prediction=99, span="94-94"];
m0_40 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", prediction=92, span="96-96"];
m0_35 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Close, close)", prediction=93, span="86-86"];
m0_49 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Close, close)", prediction=93, span="108-108"];
m0_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", prediction=103, span="77-77"];
m0_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", prediction=104, span="79-79"];
m0_33 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", prediction=105, span="84-84"];
m0_34 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", prediction=106, span="85-85"];
m0_32 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="i < count", prediction=104, span="82-82"];
m0_42 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", prediction=108, span="99-99"];
m0_43 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", prediction=109, span="101-101"];
m0_47 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", prediction=110, span="106-106"];
m0_48 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", prediction=111, span="107-107"];
m0_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var i = 0", prediction=93, span="82-82"];
m0_36 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="i++", prediction=93, span="82-82"];
m0_45 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="var i = 0", prediction=93, span="104-104"];
m0_50 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="i++", prediction=93, span="104-104"];
m0_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", prediction=116, span="80-80"];
m0_46 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="i < count", prediction=109, span="104-104"];
m0_44 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", prediction=118, span="102-102"];
m0_51 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59"];
m0_173 [file="PandasConverterTests.cs", label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", span=""];
m0_174 [file="PandasConverterTests.cs", label=symbol, span=""];
m0_175 [file="PandasConverterTests.cs", label=symbol, span=""];
m0_176 [file="PandasConverterTests.cs", label=config, span=""];
m0_177 [file="PandasConverterTests.cs", label=quandl, span=""];
m0_178 [file="PandasConverterTests.cs", label=subscriptionDataConfig, span=""];
m0_179 [file="PandasConverterTests.cs", label=security, span=""];
m0_18 -> m0_153  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m0_151 -> m0_153  [color=green, key=1, label=subscriptionDataConfig, style=dashed];
m0_151 -> m0_157  [color=green, key=1, label=subscriptionDataConfig, style=dashed];
m0_152 -> m0_157  [color=green, key=1, label=security, style=dashed];
m0_153 -> m0_156  [color=green, key=1, label="lambda expression", style=dashed];
m0_109 -> m0_111  [color=green, key=1, label=dataFrame, style=dashed];
m0_125 -> m0_127  [color=green, key=1, label=dataFrame, style=dashed];
m0_105 -> m0_107  [color=green, key=1, label=config, style=dashed];
m0_105 -> m0_147  [color=green, key=1, label=config, style=dashed];
m0_108 -> m0_145  [color=green, key=1, label="lambda expression", style=dashed];
m0_108 -> m0_120  [color=green, key=1, label=rawBars, style=dashed];
m0_108 -> m0_122  [color=green, key=1, label=rawBars, style=dashed];
m0_108 -> m0_136  [color=green, key=1, label=rawBars, style=dashed];
m0_108 -> m0_138  [color=green, key=1, label=rawBars, style=dashed];
m0_106 -> m0_147  [color=green, key=1, label=quandl, style=dashed];
m0_114 -> m0_117  [color=green, key=1, label=count, style=dashed];
m0_130 -> m0_133  [color=green, key=1, label=count, style=dashed];
m0_116 -> m0_120  [color=green, key=1, label=i, style=dashed];
m0_116 -> m0_122  [color=green, key=1, label=i, style=dashed];
m0_116 -> m0_123  [color=green, key=1, label=i, style=dashed];
m0_123 -> m0_123  [color=green, key=1, label=i, style=dashed];
m0_132 -> m0_136  [color=green, key=1, label=i, style=dashed];
m0_132 -> m0_138  [color=green, key=1, label=i, style=dashed];
m0_132 -> m0_139  [color=green, key=1, label=i, style=dashed];
m0_139 -> m0_139  [color=green, key=1, label=i, style=dashed];
m0_145 -> m0_147  [color=green, key=1, label=int, style=dashed];
m0_67 -> m0_98  [color=green, key=1, label=symbol, style=dashed];
m0_69 -> m0_71  [color=green, key=1, label=dataFrame, style=dashed];
m0_83 -> m0_85  [color=green, key=1, label=dataFrame, style=dashed];
m0_68 -> m0_97  [color=green, key=1, label="lambda expression", style=dashed];
m0_68 -> m0_80  [color=green, key=1, label=rawBars, style=dashed];
m0_68 -> m0_94  [color=green, key=1, label=rawBars, style=dashed];
m0_74 -> m0_77  [color=green, key=1, label=count, style=dashed];
m0_88 -> m0_91  [color=green, key=1, label=count, style=dashed];
m0_76 -> m0_80  [color=green, key=1, label=i, style=dashed];
m0_76 -> m0_81  [color=green, key=1, label=i, style=dashed];
m0_81 -> m0_81  [color=green, key=1, label=i, style=dashed];
m0_90 -> m0_94  [color=green, key=1, label=i, style=dashed];
m0_90 -> m0_95  [color=green, key=1, label=i, style=dashed];
m0_95 -> m0_95  [color=green, key=1, label=i, style=dashed];
m0_3 -> m0_5  [color=green, key=1, label=dataFrame, style=dashed];
m0_7 -> m0_9  [color=green, key=1, label=dataFrame, style=dashed];
m0_22 -> m0_61  [color=green, key=1, label=symbol, style=dashed];
m0_24 -> m0_26  [color=green, key=1, label=dataFrame, style=dashed];
m0_38 -> m0_40  [color=green, key=1, label=dataFrame, style=dashed];
m0_23 -> m0_60  [color=green, key=1, label="lambda expression", style=dashed];
m0_23 -> m0_35  [color=green, key=1, label=rawBars, style=dashed];
m0_23 -> m0_49  [color=green, key=1, label=rawBars, style=dashed];
m0_29 -> m0_32  [color=green, key=1, label=count, style=dashed];
m0_43 -> m0_46  [color=green, key=1, label=count, style=dashed];
m0_31 -> m0_35  [color=green, key=1, label=i, style=dashed];
m0_31 -> m0_36  [color=green, key=1, label=i, style=dashed];
m0_36 -> m0_36  [color=green, key=1, label=i, style=dashed];
m0_45 -> m0_49  [color=green, key=1, label=i, style=dashed];
m0_45 -> m0_50  [color=green, key=1, label=i, style=dashed];
m0_50 -> m0_50  [color=green, key=1, label=i, style=dashed];
m0_174 -> m0_61  [color=green, key=1, label=symbol, style=dashed];
m0_175 -> m0_98  [color=green, key=1, label=symbol, style=dashed];
m0_176 -> m0_147  [color=green, key=1, label=config, style=dashed];
m0_177 -> m0_147  [color=green, key=1, label=quandl, style=dashed];
m0_178 -> m0_157  [color=green, key=1, label=subscriptionDataConfig, style=dashed];
m0_179 -> m0_157  [color=green, key=1, label=security, style=dashed];
}
