digraph  {
n199 [label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
n0 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)"];
n1 [label="Algorithm = algorithm", span="52-52", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)"];
n2 [label="_pending = new ConcurrentDictionary<int, Order>()", span="53-53", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)"];
n3 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)"];
n4 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()"];
n5 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="61-61", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)"];
n6 [label="Algorithm = algorithm", span="64-64", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)"];
n7 [label="_pending = new ConcurrentDictionary<int, Order>()", span="65-65", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)"];
n8 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="61-61", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)"];
n9 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)"];
n10 [label="Algorithm = algorithm", span="76-76", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)"];
n11 [label="MarketSimulation = marketSimulation", span="77-77", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)"];
n12 [label="_pending = new ConcurrentDictionary<int, Order>()", span="78-78", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)"];
n13 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)"];
n14 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="95-95", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()"];
n15 [label="return Algorithm.Transactions.GetOpenOrders();", span="97-97", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()"];
n16 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="95-95", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()"];
n17 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="244-244", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()"];
n18 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="104-104", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()"];
n19 [label="return (from security in Algorithm.Portfolio.Securities.Values.OrderBy(x => x.Symbol)\r\n                    where security.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(security)).ToList();", span="107-109", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()"];
n20 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="104-104", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()"];
n21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)"];
n22 [label="Entry Holding.cstr", span="", cluster="Holding.cstr"];
n23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n24 [label="Entry lambda expression", span="107-107", cluster="lambda expression"];
n25 [label="x.Symbol", span="107-107", cluster="lambda expression"];
n26 [label="Exit lambda expression", span="107-107", cluster="lambda expression"];
n27 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="116-116", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()"];
n28 [label="return Algorithm.Portfolio.CashBook.Values.ToList();", span="118-118", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()"];
n29 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="116-116", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()"];
n30 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()"];
n31 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="126-126", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n32 [label="Log.Trace(''BacktestingBrokerage.PlaceOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="128-128", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n33 [label="order.Status == OrderStatus.New", span="130-130", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n36 [label="SetPendingOrder(order)", span="135-135", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n37 [label="var orderId = order.Id.ToString()", span="138-138", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n38 [label="!order.BrokerId.Contains(orderId)", span="139-139", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n39 [label="order.BrokerId.Add(orderId)", span="139-139", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n41 [label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="143-143", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n46 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n34 [label=_needsScanLock, span="132-132", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n44 [label="return false;", span="148-148", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n35 [label="_needsScan = true", span="134-134", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n47 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="435-435", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)"];
n48 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()"];
n40 [label="int orderFee = 0", span="142-142", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n49 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
n50 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n42 [label="OnOrderEvent(submitted)", span="144-144", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n51 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)"];
n43 [label="return true;", span="146-146", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n52 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
n45 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="126-126", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
n53 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="156-156", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n54 [label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="158-158", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n57 [label="!_pending.TryGetValue(order.Id, out pending)", span="163-163", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n60 [label="SetPendingOrder(order)", span="170-170", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n61 [label="var orderId = order.Id.ToString()", span="173-173", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n62 [label="!order.BrokerId.Contains(orderId)", span="174-174", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n63 [label="order.BrokerId.Add(orderId)", span="174-174", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n65 [label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="178-178", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n55 [label=_needsScanLock, span="160-160", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n56 [label="Order pending", span="162-162", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n58 [label="return false;", span="166-166", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n59 [label="_needsScan = true", span="169-169", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n69 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
n64 [label="int orderFee = 0", span="177-177", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n66 [label="OnOrderEvent(updated)", span="179-179", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n67 [label="return true;", span="181-181", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n68 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="156-156", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
n70 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="189-189", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n71 [label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="191-191", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n74 [label="!_pending.TryRemove(order.Id, out pending)", span="196-196", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n76 [label="var orderId = order.Id.ToString()", span="203-203", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n77 [label="!order.BrokerId.Contains(orderId)", span="204-204", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n78 [label="order.BrokerId.Add(order.Id.ToString())", span="204-204", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n80 [label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="208-208", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n72 [label=_needsScanLock, span="193-193", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n73 [label="Order pending", span="195-195", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n75 [label="return false;", span="199-199", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n84 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)"];
n79 [label="int orderFee = 0", span="207-207", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n81 [label="OnOrderEvent(canceled)", span="209-209", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n82 [label="return true;", span="211-211", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n83 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="189-189", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
n85 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="222-222", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n86 [label=_needsScanLock, span="224-224", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n87 [label="!_needsScan", span="227-227", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n88 [label="return;", span="229-229", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n89 [label="var stillNeedsScan = false", span="232-232", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n90 [label="_pending.OrderBy(x => x.Key)", span="235-235", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n146 [label="_needsScan = stillNeedsScan", span="378-378", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n91 [label="var order = kvp.Value", span="237-237", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n169 [label="Entry lambda expression", span="235-235", cluster="lambda expression"];
n92 [label="order == null", span="238-238", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n93 [label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="240-240", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n95 [label="order.Status.IsClosed()", span="245-245", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n96 [label="_pending.TryRemove(order.Id, out order)", span="248-248", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n97 [label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="253-253", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n99 [label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="259-259", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n101 [label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="262-262", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n102 [label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="264-264", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n103 [label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="266-266", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n104 [label="_pending.TryRemove(order.Id, out order)", span="267-267", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n105 [label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="272-272", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n107 [label="sufficientBuyingPower = Algorithm.Transactions.GetSufficientCapitalForOrder(Algorithm.Portfolio, order)", span="281-281", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n110 [label="_pending.TryRemove(order.Id, out pending)", span="287-287", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n111 [label="order.Status = OrderStatus.Invalid", span="288-288", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n112 [label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0, ''Error in GetSufficientCapitalForOrder''))", span="289-289", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n114 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="292-292", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n117 [label="order.Type", span="305-305", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n119 [label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="308-308", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n121 [label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="312-312", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n123 [label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="316-316", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n125 [label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="320-320", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n127 [label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="324-324", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n129 [label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="328-328", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n132 [label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="333-333", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n135 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="340-341", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n136 [label="order.Status = OrderStatus.Invalid", span="347-347", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n137 [label="Algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id,\r\n                            order.GetValue(security).SmartRounding()))", span="348-349", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n139 [label="order.Status != fill.Status || fill.FillQuantity != 0", span="355-355", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n141 [label="order.Type == OrderType.OptionExercise", span="361-361", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n144 [label="_pending.TryRemove(order.Id, out order)", span="369-369", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n94 [label="_pending.TryRemove(kvp.Key, out order)", span="241-241", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n148 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
n149 [label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27", cluster="QuantConnect.Orders.OrderStatus.IsClosed()"];
n98 [label="stillNeedsScan = true", span="255-255", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n100 [label="Security security", span="261-261", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n138 [label=fills, span="352-352", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n143 [label="fills.All(x => x.Status.IsClosed())", span="367-367", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n150 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)"];
n116 [label="var model = security.FillModel", span="300-300", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n131 [label="var option = (Option)security", span="332-332", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n106 [label="bool sufficientBuyingPower", span="278-278", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n151 [label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78", cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)"];
n108 [label=Exception, span="283-283", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n115 [label=sufficientBuyingPower, span="297-297", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n152 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)"];
n109 [label="Order pending", span="286-286", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n113 [label="Log.Error(err)", span="291-291", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n153 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)"];
n118 [label="OrderType.Limit", span="307-307", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n120 [label="OrderType.StopMarket", span="311-311", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n122 [label="OrderType.Market", span="315-315", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n124 [label="OrderType.StopLimit", span="319-319", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n126 [label="OrderType.MarketOnOpen", span="323-323", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n128 [label="OrderType.MarketOnClose", span="327-327", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n130 [label="OrderType.OptionExercise", span="331-331", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n133 [label=Exception, span="337-337", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n158 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30", cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)"];
n162 [label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33", cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)"];
n163 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
n160 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62", cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)"];
n159 [label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46", cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)"];
n156 [label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54", cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)"];
n161 [label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70", cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)"];
n157 [label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38", cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)"];
n134 [label="Log.Error(err)", span="339-339", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n165 [label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191", cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)"];
n166 [label="Entry decimal.SmartRounding()", span="206-206", cluster="decimal.SmartRounding()"];
n154 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n155 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="387-387", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)"];
n164 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)"];
n140 [label="OnOrderEvent(fill)", span="358-358", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n142 [label="OnOptionPositionAssigned(fill)", span="363-363", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n167 [label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132", cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)"];
n145 [label="stillNeedsScan = true", span="373-373", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n168 [label="Entry Unk.All", span="", cluster="Unk.All"];
n172 [label="Entry lambda expression", span="367-367", cluster="lambda expression"];
n147 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="222-222", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()"];
n170 [label="x.Key", span="235-235", cluster="lambda expression"];
n171 [label="Exit lambda expression", span="235-235", cluster="lambda expression"];
n173 [label="x.Status.IsClosed()", span="367-367", cluster="lambda expression"];
n174 [label="Exit lambda expression", span="367-367", cluster="lambda expression"];
n175 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="385-385", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()"];
n176 [label="MarketSimulation != null", span="388-388", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()"];
n177 [label="MarketSimulation.SimulateMarketConditions(this, Algorithm)", span="389-389", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()"];
n178 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="385-385", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()"];
n179 [label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31", cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)"];
n180 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="397-397", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n181 [label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0.0m, 0.0m, Algorithm.UtcTime, ''Simulated option assignment'')", span="399-399", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n183 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="401-401", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n184 [label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="402-402", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n186 [label="portfolioModel.ProcessFill(Algorithm.Portfolio, option, fill)", span="407-407", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n182 [label="var order = (OptionExerciseOrder)Order.CreateOrder(request)", span="400-400", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n189 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)"];
n190 [label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="268-268", cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)"];
n185 [label=fills, span="404-404", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n188 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="397-397", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n187 [label="OnOptionPositionAssigned(fill)", span="410-410", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n191 [label="Entry QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33", cluster="QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)"];
n192 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="417-417", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()"];
n193 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="417-417", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()"];
n194 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="425-425", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()"];
n195 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="425-425", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()"];
n196 [label="_pending[order.Id] = order.Clone()", span="438-438", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)"];
n197 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="435-435", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)"];
n198 [label="Entry QuantConnect.Orders.Order.Clone()", span="241-241", cluster="QuantConnect.Orders.Order.Clone()"];
m0_23 [label="Entry QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="97-97", cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m0_24 [label="var orderFees = security.TransactionModel.GetOrderFee(order.Quantity, order.Price)", span="101-101", cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m0_25 [label="return order.Price*order.AbsoluteQuantity*InitialMarginRequirement + orderFees;", span="103-103", cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m0_26 [label="Exit QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="97-97", cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m0_31 [label="Entry QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="123-123", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_32 [label="var holdings = security.Holdings", span="125-125", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_33 [label="direction == OrderDirection.Hold", span="127-127", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_34 [label="return portfolio.MarginRemaining;", span="129-129", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_36 [label=direction, span="136-136", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_38 [label="return portfolio.MarginRemaining;", span="139-139", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_40 [label="return (holdings.UnrealizedProfit + holdings.UnleveredAbsoluteHoldingsCost) * 2 + portfolio.MarginRemaining;", span="141-141", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_42 [label=direction, span="146-146", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_44 [label="return (holdings.UnrealizedProfit + holdings.UnleveredAbsoluteHoldingsCost) * 2 + portfolio.MarginRemaining;", span="149-149", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_46 [label="return portfolio.MarginRemaining;", span="151-151", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_47 [label="return portfolio.MarginRemaining;", span="156-156", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_35 [label="holdings.IsLong", span="134-134", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_41 [label="holdings.IsShort", span="144-144", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_37 [label="OrderDirection.Buy", span="138-138", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_39 [label="OrderDirection.Sell", span="140-140", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_43 [label="OrderDirection.Buy", span="148-148", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_45 [label="OrderDirection.Sell", span="150-150", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_48 [label="Exit QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="123-123", cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m0_63 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="BacktestingResultHandler.cs"];
m0_18 [label="Entry QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84", cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs"];
m0_19 [label="decimal margin = 1/leverage", span="86-86", cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs"];
m0_20 [label="InitialMarginRequirement = margin", span="87-87", cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs"];
m0_21 [label="MaintenanceMarginRequirement = margin", span="88-88", cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs"];
m0_22 [label="Exit QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84", cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs"];
m0_27 [label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="95-95", cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_0 [label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_1 [label="initialMarginRequirement < 0 || initialMarginRequirement > 1", span="37-37", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_3 [label="maintenanceMarginRequirement < 0 || maintenanceMarginRequirement > 1", span="42-42", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_5 [label="InitialMarginRequirement = initialMarginRequirement", span="47-47", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_6 [label="MaintenanceMarginRequirement = maintenanceMarginRequirement", span="48-48", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_2 [label="throw new ArgumentException(''Initial margin requirement must be between 0 and 1'');", span="39-39", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_4 [label="throw new ArgumentException(''Maintenance margin requirement must be between 0 and 1'');", span="44-44", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_7 [label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_64 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="BacktestingResultHandler.cs"];
m0_49 [label="Entry QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="167-167", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_50 [label="decimal marginBuffer = 0.10m", span="170-170", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_51 [label="totalMargin <= netLiquidationValue*(1 + marginBuffer)", span="172-172", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_53 [label="!security.Holdings.Invested", span="177-177", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_55 [label="decimal delta = totalMargin - netLiquidationValue", span="183-183", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_56 [label="int quantity = (int) (Math.Round(delta/security.Price, MidpointRounding.AwayFromZero) / MaintenanceMarginRequirement)", span="186-186", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_57 [label="quantity = Math.Max(1, Math.Min((int)security.Holdings.AbsoluteQuantity, quantity))", span="189-189", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_58 [label="security.Holdings.IsLong", span="190-190", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_60 [label="return new MarketOrder(security.Symbol, quantity, security.Time, ''Margin Call'', security.Type);", span="196-196", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_52 [label="return null;", span="174-174", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_54 [label="return null;", span="179-179", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_59 [label="quantity *= -1", span="193-193", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_61 [label="Exit QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="167-167", cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs"];
m0_65 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="57-57", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="BacktestingResultHandler.cs"];
m0_28 [label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="111-111", cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs"];
m0_29 [label="return security.Holdings.AbsoluteHoldingsCost*MaintenanceMarginRequirement;", span="113-113", cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs"];
m0_30 [label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="111-111", cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs"];
m0_62 [label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0", cluster="System.Math.Round(decimal, System.MidpointRounding)", file="BacktestingResultHandler.cs"];
m0_15 [label="Entry QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="71-71", cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs"];
m0_16 [label="return 1/MaintenanceMarginRequirement;", span="73-73", cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs"];
m0_17 [label="Exit QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="71-71", cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs"];
m0_9 [label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="55-55", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs"];
m0_10 [label="leverage < 1", span="57-57", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs"];
m0_12 [label="InitialMarginRequirement = 1/leverage", span="62-62", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs"];
m0_13 [label="MaintenanceMarginRequirement = 1/leverage", span="63-63", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs"];
m0_11 [label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="59-59", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs"];
m0_14 [label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="55-55", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs"];
m0_8 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BacktestingResultHandler.cs"];
m0_66 [label="QuantConnect.Securities.SecurityMarginModel", span="", file="BacktestingResultHandler.cs"];
m1_47 [label="Entry QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", span="224-224", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_48 [label="Charts = charts", span="226-226", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_49 [label="Orders = orders", span="227-227", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_50 [label="ProfitLoss = profitLoss", span="228-228", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_51 [label="Statistics = statistics", span="229-229", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_52 [label="RuntimeStatistics = runtimeStatistics", span="230-230", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_53 [label="RollingWindow = rollingWindow", span="231-231", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_54 [label="TotalPerformance = totalPerformance", span="232-232", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_55 [label="Exit QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", span="224-224", cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs"];
m1_23 [label="Entry JsonSerializerSettings.cstr", span="", cluster="JsonSerializerSettings.cstr", file="BacktestResultPacket.cs"];
m1_26 [label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_27 [label="Progress = Math.Round(progress, 3)", span="176-176", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_28 [label="SessionId = job.SessionId", span="177-177", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_29 [label="PeriodFinish = job.PeriodFinish", span="178-178", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_30 [label="PeriodStart = job.PeriodStart", span="179-179", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_31 [label="CompileId = job.CompileId", span="180-180", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_32 [label="Channel = job.Channel", span="181-181", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_33 [label="BacktestId = job.BacktestId", span="182-182", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_34 [label="Results = results", span="183-183", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_35 [label="Name = job.Name", span="184-184", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_36 [label="UserId = job.UserId", span="185-185", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_37 [label="ProjectId = job.ProjectId", span="186-186", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_38 [label="SessionId = job.SessionId", span="187-187", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_39 [label="TradeableDates = job.TradeableDates", span="188-188", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_40 [label=Exception, span="190-190", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_41 [label="Log.Error(err)", span="191-191", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_42 [label="Exit QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs"];
m1_0 [label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket()", span="125-125", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket()", file="BacktestResultPacket.cs"];
m1_1 [label="Exit QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket()", span="125-125", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket()", file="BacktestResultPacket.cs"];
m1_45 [label="Entry QuantConnect.Packets.BacktestResult.BacktestResult()", span="216-216", cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", file="BacktestResultPacket.cs"];
m1_46 [label="Exit QuantConnect.Packets.BacktestResult.BacktestResult()", span="216-216", cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", file="BacktestResultPacket.cs"];
m1_25 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestResultPacket.cs"];
m1_43 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="BacktestResultPacket.cs"];
m1_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="BacktestResultPacket.cs"];
m1_2 [label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", span="132-132", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs"];
m1_3 [label="var packet = JsonConvert.DeserializeObject<BacktestResultPacket>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto\r\n                })", span="137-140", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs"];
m1_4 [label="CompileId          = packet.CompileId", span="141-141", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_5 [label="Channel            = packet.Channel", span="142-142", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_6 [label="PeriodFinish       = packet.PeriodFinish", span="143-143", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_7 [label="PeriodStart        = packet.PeriodStart", span="144-144", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_8 [label="Progress           = packet.Progress", span="145-145", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_9 [label="SessionId          = packet.SessionId", span="146-146", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_10 [label="BacktestId         = packet.BacktestId", span="147-147", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_11 [label="Type               = packet.Type", span="148-148", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_12 [label="UserId             = packet.UserId", span="149-149", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_13 [label="DateFinished       = packet.DateFinished", span="150-150", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_14 [label="DateRequested      = packet.DateRequested", span="151-151", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_15 [label="Name               = packet.Name", span="152-152", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_16 [label="ProjectId          = packet.ProjectId", span="153-153", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_17 [label="Results            = packet.Results", span="154-154", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_18 [label="ProcessingTime     = packet.ProcessingTime", span="155-155", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_19 [label="TradeableDates     = packet.TradeableDates", span="156-156", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", color=red, community=0, file="BacktestResultPacket.cs"];
m1_20 [label=Exception, span="158-158", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs"];
m1_21 [label="Log.Trace(''BacktestResultPacket(): Error converting json: '' + err)", span="160-160", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs"];
m1_22 [label="Exit QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", span="132-132", cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs"];
m1_56 [label="QuantConnect.Packets.BacktestResultPacket", span="", file="BacktestResultPacket.cs"];
m1_57 [label="QuantConnect.Packets.BacktestResult", span="", file="BacktestResultPacket.cs"];
m4_13 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="188-188", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_0 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="FundamentalPortfolioSelectionModel.cs"];
m4_1 [label="_brokerage = brokerage", span="36-36", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="FundamentalPortfolioSelectionModel.cs"];
m4_2 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="FundamentalPortfolioSelectionModel.cs"];
m4_3 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", span="42-42", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_4 [label="base.ProcessSynchronousEvents()", span="44-44", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_5 [label="_brokerage.Scan()", span="46-46", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_6 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", span="42-42", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_9 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", span="52-52", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_10 [label="base.ProcessAsynchronousEvents()", span="54-54", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_11 [label="_brokerage.Scan()", span="56-56", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_12 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", span="52-52", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_7 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="196-196", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs"];
m4_14 [label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", span="", file="FundamentalPortfolioSelectionModel.cs"];
m5_23 [label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="413-413", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="IAlgorithm.cs"];
m5_54 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="503-503", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="IAlgorithm.cs"];
m5_55 [label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="503-503", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="IAlgorithm.cs"];
m5_38 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="458-458", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="IAlgorithm.cs"];
m5_39 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="458-458", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="IAlgorithm.cs"];
m5_14 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="389-389", cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs"];
m5_15 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="389-389", cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs"];
m5_78 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="596-596", cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="IAlgorithm.cs"];
m5_79 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="596-596", cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="IAlgorithm.cs"];
m5_34 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="446-446", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs"];
m5_35 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="446-446", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs"];
m5_60 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="535-535", cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs"];
m5_61 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="535-535", cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs"];
m5_80 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="602-602", cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="IAlgorithm.cs"];
m5_81 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="602-602", cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="IAlgorithm.cs"];
m5_30 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="434-434", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="IAlgorithm.cs"];
m5_31 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="434-434", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="IAlgorithm.cs"];
m5_40 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="463-463", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="IAlgorithm.cs"];
m5_41 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="463-463", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="IAlgorithm.cs"];
m5_58 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="525-525", cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs"];
m5_59 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="525-525", cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs"];
m5_12 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="383-383", cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="IAlgorithm.cs"];
m5_13 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="383-383", cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="IAlgorithm.cs"];
m5_68 [label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="564-564", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="IAlgorithm.cs"];
m5_69 [label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="564-564", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="IAlgorithm.cs"];
m5_70 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="570-570", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs"];
m5_71 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="570-570", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs"];
m5_2 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="331-331", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="IAlgorithm.cs"];
m5_3 [label="Exit QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="331-331", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="IAlgorithm.cs"];
m5_90 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="632-632", cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="IAlgorithm.cs"];
m5_91 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="632-632", cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="IAlgorithm.cs"];
m5_52 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="496-496", cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs"];
m5_53 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="496-496", cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs"];
m5_20 [label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="407-407", cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs"];
m5_21 [label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="407-407", cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs"];
m5_72 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="575-575", cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="IAlgorithm.cs"];
m5_73 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="575-575", cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="IAlgorithm.cs"];
m5_48 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="485-485", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs"];
m5_49 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="485-485", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs"];
m5_56 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="515-515", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="IAlgorithm.cs"];
m5_57 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="515-515", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="IAlgorithm.cs"];
m5_86 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="620-620", cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="IAlgorithm.cs"];
m5_87 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="620-620", cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="IAlgorithm.cs"];
m5_6 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="345-345", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs"];
m5_7 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="345-345", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs"];
m5_76 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="587-587", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs"];
m5_77 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="587-587", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs"];
m5_26 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="424-424", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="IAlgorithm.cs"];
m5_27 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="424-424", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="IAlgorithm.cs"];
m5_66 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="556-556", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs"];
m5_67 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="556-556", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs"];
m5_4 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="339-339", cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="IAlgorithm.cs"];
m5_5 [label="Exit QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="339-339", cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="IAlgorithm.cs"];
m5_32 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="439-439", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs"];
m5_33 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="439-439", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs"];
m5_24 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="419-419", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="IAlgorithm.cs"];
m5_25 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="419-419", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="IAlgorithm.cs"];
m5_8 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="353-353", cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="IAlgorithm.cs"];
m5_9 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="353-353", cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="IAlgorithm.cs"];
m5_44 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="474-474", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs"];
m5_45 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="474-474", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs"];
m5_84 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="614-614", cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="IAlgorithm.cs"];
m5_85 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="614-614", cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="IAlgorithm.cs"];
m5_10 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="377-377", cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="IAlgorithm.cs"];
m5_11 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="377-377", cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="IAlgorithm.cs"];
m5_46 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="480-480", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs"];
m5_47 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="480-480", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs"];
m5_18 [label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="401-401", cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs"];
m5_19 [label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="401-401", cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs"];
m5_42 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="468-468", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="IAlgorithm.cs"];
m5_43 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="468-468", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="IAlgorithm.cs"];
m5_28 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="429-429", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs"];
m5_29 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="429-429", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs"];
m5_50 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="490-490", cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="IAlgorithm.cs"];
m5_51 [label="Exit QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="490-490", cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="IAlgorithm.cs"];
m5_62 [label="Entry QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="542-542", cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="IAlgorithm.cs"];
m5_63 [label="Exit QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="542-542", cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="IAlgorithm.cs"];
m5_36 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="453-453", cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs"];
m5_37 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="453-453", cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs"];
m5_74 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="581-581", cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="IAlgorithm.cs"];
m5_75 [label="Exit QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="581-581", cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="IAlgorithm.cs"];
m5_88 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="626-626", cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="IAlgorithm.cs"];
m5_89 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="626-626", cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="IAlgorithm.cs"];
m5_82 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="608-608", cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="IAlgorithm.cs"];
m5_83 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="608-608", cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="IAlgorithm.cs"];
m5_16 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="395-395", cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs"];
m5_17 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="395-395", cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs"];
m5_0 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="325-325", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs"];
m5_1 [label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="325-325", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs"];
m5_64 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="548-548", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs"];
m5_65 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="548-548", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs"];
m6_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="IPortfolioConstructionModel.cs"];
m6_1 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="IPortfolioConstructionModel.cs"];
m7_6 [label="Entry QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="50-50", cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="ManualPortfolioSelectionModel.cs"];
m7_7 [label="Exit QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="50-50", cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="ManualPortfolioSelectionModel.cs"];
m7_14 [label="Entry QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="85-85", cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="ManualPortfolioSelectionModel.cs"];
m7_15 [label="Exit QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="85-85", cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="ManualPortfolioSelectionModel.cs"];
m7_2 [label="Entry QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="38-38", cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="ManualPortfolioSelectionModel.cs"];
m7_3 [label="Exit QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="38-38", cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="ManualPortfolioSelectionModel.cs"];
m7_10 [label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="73-73", cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="ManualPortfolioSelectionModel.cs"];
m7_11 [label="Exit QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="73-73", cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="ManualPortfolioSelectionModel.cs"];
m7_12 [label="Entry QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", span="80-80", cluster="QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", file="ManualPortfolioSelectionModel.cs"];
m7_13 [label="Exit QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", span="80-80", cluster="QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", file="ManualPortfolioSelectionModel.cs"];
m7_4 [label="Entry QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="43-43", cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="ManualPortfolioSelectionModel.cs"];
m7_5 [label="Exit QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="43-43", cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="ManualPortfolioSelectionModel.cs"];
m7_0 [label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="33-33", cluster="QuantConnect.Interfaces.IApi.Initialize()", file="ManualPortfolioSelectionModel.cs"];
m7_1 [label="Exit QuantConnect.Interfaces.IApi.Initialize()", span="33-33", cluster="QuantConnect.Interfaces.IApi.Initialize()", file="ManualPortfolioSelectionModel.cs"];
m7_8 [label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="58-58", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="ManualPortfolioSelectionModel.cs"];
m7_9 [label="Exit QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="58-58", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="ManualPortfolioSelectionModel.cs"];
m8_6 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="NotifiedSecurityChanges.cs"];
m8_0 [label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs"];
m8_1 [label="changes.AddedSecurities", span="33-33", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs"];
m8_2 [label="securities.Add(added)", span="35-35", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="NotifiedSecurityChanges.cs"];
m8_3 [label="changes.RemovedSecurities", span="37-37", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs"];
m8_4 [label="securities.Remove(removed)", span="39-39", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="NotifiedSecurityChanges.cs"];
m8_5 [label="Exit QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs"];
m8_7 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="NotifiedSecurityChanges.cs"];
m9_4 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_5 [label="var security = algorithm.Securities[symbol]", span="56-56", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_7 [label="return new PortfolioTarget(symbol, 0);", span="59-59", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_8 [label="var quantity = percent * algorithm.Portfolio.TotalPortfolioValue / security.Price", span="62-62", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_11 [label="return new PortfolioTarget(symbol, quantity);", span="68-68", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_6 [label="security.Price == 0", span="57-57", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_9 [label="var remainder = quantity % security.SymbolProperties.LotSize", span="65-65", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_10 [label="quantity = quantity - remainder", span="66-66", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_12 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_1 [label="Symbol = symbol", span="42-42", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_2 [label="Quantity = quantity", span="43-43", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_3 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m9_13 [label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget", span="", file="PortfolioTarget.cs"];
m10_28 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1699-1699", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithmFramework.cs"];
m10_21 [label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", span="26-26", cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", file="QCAlgorithmFramework.cs"];
m10_19 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="QCAlgorithmFramework.cs"];
m10_23 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="62-62", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs"];
m10_24 [label="orderEvent.Status.IsFill()", span="64-64", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs"];
m10_25 [label="Debug($''Purchased Stock: {orderEvent.Symbol}'')", span="66-66", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs"];
m10_26 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="62-62", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs"];
m10_22 [label="Entry QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", span="10-10", cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", file="QCAlgorithmFramework.cs"];
m10_0 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", span="38-38", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_1 [label="UniverseSettings.Resolution = Resolution.Minute", span="41-41", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_2 [label="SetStartDate(2016, 10, 7)", span="43-43", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_3 [label="SetEndDate(2016, 10, 7)", span="44-44", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_4 [label="SetCash(100000)", span="45-45", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_5 [label="SetBrokerageModel(BrokerageName.GDAX, AccountType.Cash)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_6 [label="UniverseSelection = new ManualUniverseSelectionModel(QuantConnect.Symbol.Create(''BTCUSD'', SecurityType.Crypto, Market.GDAX))", span="55-55", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_7 [label="Alpha = new ConstantAlphaModel(InsightType.Price, InsightDirection.Up, TimeSpan.FromMinutes(20), 0.025, null)", span="56-56", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_8 [label="PortfolioConstruction = new EqualWeightingPortfolioConstructionModel()", span="57-57", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_9 [label="Execution = new ImmediateExecutionModel()", span="58-58", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_10 [label="RiskManagement = new Algorithm.Framework.Risk.NullRiskManagementModel()", span="59-59", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_11 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", span="38-38", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs"];
m10_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1151-1151", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithmFramework.cs"];
m10_16 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(params QuantConnect.Symbol[])", span="53-53", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(params QuantConnect.Symbol[])", file="QCAlgorithmFramework.cs"];
m10_20 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", span="29-29", cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", file="QCAlgorithmFramework.cs"];
m10_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="939-939", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithmFramework.cs"];
m10_17 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithmFramework.cs"];
m10_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1126-1126", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithmFramework.cs"];
m10_18 [label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="60-60", cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithmFramework.cs"];
m10_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1075-1075", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithmFramework.cs"];
m10_27 [label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50", cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="QCAlgorithmFramework.cs"];
m10_29 [label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm", span="", file="QCAlgorithmFramework.cs"];
m12_21 [label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="103-103", cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="SimplePortfolioConstructionModel.cs"];
m12_0 [label="Entry QuantConnect.Queues.JobQueue.Initialize()", span="50-50", cluster="QuantConnect.Queues.JobQueue.Initialize()", file="SimplePortfolioConstructionModel.cs"];
m12_1 [label="Exit QuantConnect.Queues.JobQueue.Initialize()", span="50-50", cluster="QuantConnect.Queues.JobQueue.Initialize()", file="SimplePortfolioConstructionModel.cs"];
m12_29 [label="Entry System.Type.MatchesTypeName(string)", span="317-317", cluster="System.Type.MatchesTypeName(string)", file="SimplePortfolioConstructionModel.cs"];
m12_22 [label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="55-55", cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="SimplePortfolioConstructionModel.cs"];
m12_2 [label="Entry QuantConnect.Queues.JobQueue.NextJob(out string)", span="59-59", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_3 [label="location = AlgorithmLocation", span="61-61", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_4 [label="Log.Trace(''JobQueue.NextJob(): Selected '' + location)", span="62-62", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_5 [label=_liveMode, span="65-65", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_6 [label="var liveJob = new LiveNodePacket\r\n                {\r\n                    Type = PacketType.LiveNode,\r\n                    DataEndpoint = DataFeedEndpoint.LiveTrading,\r\n                    RealTimeEndpoint = RealTimeEndpoint.LiveTrading,\r\n                    TransactionEndpoint = TransactionHandlerEndpoint.Brokerage,\r\n                    Algorithm = File.ReadAllBytes(AlgorithmLocation),\r\n                    Brokerage = Config.Get(''live-mode-brokerage'', PaperBrokerageTypeName),\r\n                    Channel = Config.Get(''job-channel''),\r\n                    UserId = Config.GetInt(''job-user-id''),\r\n                    Version = Constants.Version,\r\n                    DeployId = Config.Get(''algorithm-type-name'')\r\n                }", span="67-79", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_14 [label="var backtestJob = new BacktestNodePacket(0, 0, '''', new byte[] {}, 10000, ''local'')\r\n            {\r\n                Type = PacketType.BacktestNode,\r\n                DataEndpoint = DataFeedEndpoint.FileSystem,\r\n                RealTimeEndpoint = RealTimeEndpoint.Backtesting,\r\n                TransactionEndpoint = TransactionHandlerEndpoint.Backtesting,\r\n                Algorithm = File.ReadAllBytes(AlgorithmLocation),\r\n                Version = Constants.Version,\r\n                BacktestId = Config.Get(''algorithm-type-name'')\r\n            }", span="102-111", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_7 [label="var brokerageFactory = Composer.Instance.Single<IBrokerageFactory>(factory => factory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="84-84", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_8 [label="liveJob.BrokerageData = brokerageFactory.BrokerageData", span="85-85", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_9 [label="liveJob.Brokerage == ''PaperBrokerage''", span="88-88", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_10 [label="liveJob.TransactionEndpoint = TransactionHandlerEndpoint.Backtesting", span="90-90", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_12 [label="Log.Error(string.Format(''JobQueue.NextJob(): Error resoliving BrokerageData for live job for brokerage {0}. {1}'', liveJob.Brokerage, err.Message))", span="95-95", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_13 [label="return liveJob;", span="98-98", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_11 [label=Exception, span="93-93", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_15 [label="return backtestJob;", span="113-113", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_16 [label="Exit QuantConnect.Queues.JobQueue.NextJob(out string)", span="59-59", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs"];
m12_23 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SimplePortfolioConstructionModel.cs"];
m12_19 [label="Entry System.IO.File.ReadAllBytes(string)", span="0-0", cluster="System.IO.File.ReadAllBytes(string)", file="SimplePortfolioConstructionModel.cs"];
m12_25 [label="Entry QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", span="75-75", cluster="QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", file="SimplePortfolioConstructionModel.cs"];
m12_18 [label="Entry QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="48-48", cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="SimplePortfolioConstructionModel.cs"];
m12_30 [label="Entry QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="120-120", cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="SimplePortfolioConstructionModel.cs"];
m12_31 [label="Exit QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="120-120", cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="SimplePortfolioConstructionModel.cs"];
m12_17 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SimplePortfolioConstructionModel.cs"];
m12_20 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="65-65", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SimplePortfolioConstructionModel.cs"];
m12_26 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m12_27 [label="factory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="84-84", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m12_28 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m12_32 [label="QuantConnect.Queues.JobQueue", span="", file="SimplePortfolioConstructionModel.cs"];
m12_33 [label=liveJob, span="", file="SimplePortfolioConstructionModel.cs"];
n199 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n199 -> n196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n4  [key=2, style=dotted];
n8 -> n5  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation"];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n4  [key=2, style=dotted];
n13 -> n9  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=2, style=dotted];
n16 -> n14  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n19 -> n22  [key=2, style=dotted];
n19 -> n23  [key=2, style=dotted];
n19 -> n24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n19 -> n19  [key=1, style=dashed, color=darkseagreen4, label=security];
n20 -> n18  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n26 -> n24  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=2, style=dotted];
n29 -> n27  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n31 -> n36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n31 -> n37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n31 -> n38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n31 -> n39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n31 -> n41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n32 -> n33  [key=0, style=solid];
n32 -> n46  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n44  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n47  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n48  [key=2, style=dotted];
n37 -> n39  [key=1, style=dashed, color=darkseagreen4, label=orderId];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=0, style=solid];
n38 -> n49  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n50  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n51  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n47 -> n196  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n52  [key=2, style=dotted];
n43 -> n45  [key=0, style=solid];
n45 -> n31  [key=0, style=bold, color=blue];
n53 -> n54  [key=0, style=solid];
n53 -> n57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n53 -> n60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n53 -> n61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n53 -> n62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n53 -> n63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n53 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n54 -> n55  [key=0, style=solid];
n54 -> n46  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=0, style=solid];
n57 -> n69  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n47  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n48  [key=2, style=dotted];
n61 -> n63  [key=1, style=dashed, color=darkseagreen4, label=orderId];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=0, style=solid];
n62 -> n49  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n50  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n51  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n58 -> n68  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n52  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n68 -> n53  [key=0, style=bold, color=blue];
n70 -> n71  [key=0, style=solid];
n70 -> n74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n70 -> n76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n70 -> n77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n70 -> n78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n70 -> n80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
n71 -> n72  [key=0, style=solid];
n71 -> n46  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=0, style=solid];
n74 -> n84  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n48  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n79  [key=0, style=solid];
n77 -> n49  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n48  [key=2, style=dotted];
n78 -> n50  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n51  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n75 -> n83  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n52  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n83 -> n70  [key=0, style=bold, color=blue];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n89  [key=0, style=solid];
n88 -> n147  [key=0, style=solid];
n89 -> n90  [key=0, style=solid];
n89 -> n146  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
n90 -> n91  [key=0, style=solid];
n90 -> n146  [key=0, style=solid];
n90 -> n21  [key=2, style=dotted];
n90 -> n169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n146 -> n147  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n91 -> n91  [key=1, style=dashed, color=darkseagreen4, label=kvp];
n91 -> n93  [key=1, style=dashed, color=darkseagreen4, label=kvp];
n91 -> n95  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n96  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n97  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n99  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n101  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n102  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n103  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n104  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n105  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n107  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n110  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n111  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n112  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n114  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n117  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n119  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n121  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n123  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n125  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n127  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n129  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n132  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n135  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n136  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n137  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n139  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n141  [key=1, style=dashed, color=darkseagreen4, label=order];
n91 -> n144  [key=1, style=dashed, color=darkseagreen4, label=order];
n169 -> n170  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n92 -> n95  [key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n93 -> n148  [key=2, style=dotted];
n93 -> n93  [key=1, style=dashed, color=darkseagreen4, label=kvp];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=0, style=solid];
n95 -> n149  [key=2, style=dotted];
n96 -> n90  [key=0, style=solid];
n96 -> n84  [key=2, style=dotted];
n96 -> n96  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n97  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n99  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n101  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n102  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n103  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n104  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n105  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n107  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n110  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n111  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n112  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n114  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n117  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n119  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n121  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n123  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n125  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n127  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n129  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n132  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n135  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n136  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n137  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n139  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n141  [key=1, style=dashed, color=darkseagreen4, label=order];
n96 -> n144  [key=1, style=dashed, color=darkseagreen4, label=order];
n97 -> n98  [key=0, style=solid];
n97 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n51  [key=2, style=dotted];
n99 -> n138  [key=1, style=dashed, color=darkseagreen4, label=fills];
n99 -> n143  [key=1, style=dashed, color=darkseagreen4, label=fills];
n101 -> n102  [key=0, style=solid];
n101 -> n105  [key=0, style=solid];
n101 -> n150  [key=2, style=dotted];
n101 -> n116  [key=1, style=dashed, color=darkseagreen4, label=security];
n101 -> n119  [key=1, style=dashed, color=darkseagreen4, label=security];
n101 -> n121  [key=1, style=dashed, color=darkseagreen4, label=security];
n101 -> n123  [key=1, style=dashed, color=darkseagreen4, label=security];
n101 -> n125  [key=1, style=dashed, color=darkseagreen4, label=security];
n101 -> n127  [key=1, style=dashed, color=darkseagreen4, label=security];
n101 -> n129  [key=1, style=dashed, color=darkseagreen4, label=security];
n101 -> n131  [key=1, style=dashed, color=darkseagreen4, label=security];
n101 -> n137  [key=1, style=dashed, color=darkseagreen4, label=security];
n102 -> n103  [key=0, style=solid];
n102 -> n148  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n51  [key=2, style=dotted];
n103 -> n52  [key=2, style=dotted];
n104 -> n90  [key=0, style=solid];
n104 -> n84  [key=2, style=dotted];
n104 -> n104  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n105  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n107  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n110  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n111  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n112  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n114  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n117  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n119  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n121  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n123  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n125  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n127  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n129  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n132  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n135  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n136  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n137  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n139  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n141  [key=1, style=dashed, color=darkseagreen4, label=order];
n104 -> n144  [key=1, style=dashed, color=darkseagreen4, label=order];
n105 -> n106  [key=0, style=solid];
n105 -> n90  [key=0, style=solid];
n105 -> n151  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n115  [key=0, style=solid];
n107 -> n152  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n84  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n51  [key=2, style=dotted];
n112 -> n52  [key=2, style=dotted];
n114 -> n90  [key=0, style=solid];
n114 -> n154  [key=2, style=dotted];
n114 -> n155  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n120  [key=0, style=solid];
n117 -> n122  [key=0, style=solid];
n117 -> n124  [key=0, style=solid];
n117 -> n126  [key=0, style=solid];
n117 -> n128  [key=0, style=solid];
n117 -> n130  [key=0, style=solid];
n119 -> n133  [key=0, style=solid];
n119 -> n138  [key=0, style=solid];
n119 -> n156  [key=2, style=dotted];
n121 -> n133  [key=0, style=solid];
n121 -> n138  [key=0, style=solid];
n121 -> n157  [key=2, style=dotted];
n123 -> n133  [key=0, style=solid];
n123 -> n138  [key=0, style=solid];
n123 -> n158  [key=2, style=dotted];
n125 -> n133  [key=0, style=solid];
n125 -> n138  [key=0, style=solid];
n125 -> n159  [key=2, style=dotted];
n127 -> n133  [key=0, style=solid];
n127 -> n138  [key=0, style=solid];
n127 -> n160  [key=2, style=dotted];
n129 -> n133  [key=0, style=solid];
n129 -> n138  [key=0, style=solid];
n129 -> n161  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n138  [key=0, style=solid];
n132 -> n162  [key=2, style=dotted];
n132 -> n163  [key=2, style=dotted];
n132 -> n143  [key=1, style=dashed, color=darkseagreen4, label=fills];
n135 -> n138  [key=0, style=solid];
n135 -> n164  [key=2, style=dotted];
n135 -> n155  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n165  [key=2, style=dotted];
n137 -> n166  [key=2, style=dotted];
n137 -> n154  [key=2, style=dotted];
n137 -> n155  [key=2, style=dotted];
n139 -> n140  [key=0, style=solid];
n139 -> n141  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n141 -> n138  [key=0, style=solid];
n144 -> n90  [key=0, style=solid];
n144 -> n84  [key=2, style=dotted];
n144 -> n144  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n90  [key=0, style=solid];
n94 -> n84  [key=2, style=dotted];
n94 -> n94  [key=1, style=dashed, color=darkseagreen4, label=kvp];
n94 -> n95  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n96  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n97  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n99  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n101  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n102  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n103  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n104  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n105  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n107  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n110  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n111  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n112  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n114  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n117  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n119  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n121  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n123  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n125  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n127  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n129  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n132  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n135  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n136  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n137  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n139  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n141  [key=1, style=dashed, color=darkseagreen4, label=order];
n94 -> n144  [key=1, style=dashed, color=darkseagreen4, label=order];
n98 -> n90  [key=0, style=solid];
n98 -> n146  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
n100 -> n101  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n143  [key=0, style=solid];
n138 -> n140  [key=1, style=dashed, color=darkseagreen4, label=fill];
n138 -> n142  [key=1, style=dashed, color=darkseagreen4, label=fill];
n143 -> n144  [key=0, style=solid];
n143 -> n145  [key=0, style=solid];
n143 -> n168  [key=2, style=dotted];
n143 -> n172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n116 -> n117  [key=0, style=solid];
n116 -> n119  [key=1, style=dashed, color=darkseagreen4, label=model];
n116 -> n121  [key=1, style=dashed, color=darkseagreen4, label=model];
n116 -> n123  [key=1, style=dashed, color=darkseagreen4, label=model];
n116 -> n125  [key=1, style=dashed, color=darkseagreen4, label=model];
n116 -> n127  [key=1, style=dashed, color=darkseagreen4, label=model];
n116 -> n129  [key=1, style=dashed, color=darkseagreen4, label=model];
n131 -> n132  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n115 -> n136  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n153  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n130 -> n131  [key=0, style=solid];
n133 -> n134  [key=0, style=solid];
n134 -> n135  [key=0, style=solid];
n134 -> n153  [key=2, style=dotted];
n140 -> n141  [key=0, style=solid];
n140 -> n52  [key=2, style=dotted];
n142 -> n138  [key=0, style=solid];
n142 -> n167  [key=2, style=dotted];
n145 -> n90  [key=0, style=solid];
n145 -> n146  [key=1, style=dashed, color=darkseagreen4, label=stillNeedsScan];
n172 -> n173  [key=0, style=solid];
n147 -> n85  [key=0, style=bold, color=blue];
n170 -> n171  [key=0, style=solid];
n170 -> n170  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
n171 -> n169  [key=0, style=bold, color=blue];
n173 -> n174  [key=0, style=solid];
n173 -> n149  [key=2, style=dotted];
n174 -> n172  [key=0, style=bold, color=blue];
n175 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n176 -> n178  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n177 -> n179  [key=2, style=dotted];
n178 -> n175  [key=0, style=bold, color=blue];
n180 -> n181  [key=0, style=solid];
n180 -> n183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n180 -> n184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n180 -> n186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n181 -> n182  [key=0, style=solid];
n181 -> n189  [key=2, style=dotted];
n183 -> n184  [key=0, style=solid];
n183 -> n162  [key=2, style=dotted];
n183 -> n185  [key=1, style=dashed, color=darkseagreen4, label=fills];
n184 -> n185  [key=0, style=solid];
n184 -> n186  [key=1, style=dashed, color=darkseagreen4, label=portfolioModel];
n186 -> n187  [key=0, style=solid];
n186 -> n191  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n182 -> n190  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n188  [key=0, style=solid];
n185 -> n187  [key=1, style=dashed, color=darkseagreen4, label=fill];
n188 -> n180  [key=0, style=bold, color=blue];
n187 -> n185  [key=0, style=solid];
n187 -> n167  [key=2, style=dotted];
n192 -> n193  [key=0, style=solid];
n193 -> n192  [key=0, style=bold, color=blue];
n194 -> n195  [key=0, style=solid];
n195 -> n194  [key=0, style=bold, color=blue];
n196 -> n197  [key=0, style=solid];
n196 -> n198  [key=2, style=dotted];
n197 -> n47  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_27  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_23  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m0_31 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m0_31 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m0_31 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m0_31 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m0_31 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m0_31 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m0_31 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m0_31 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m0_32 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m0_32 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m0_32 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=0, style=solid];
m0_34 -> m0_48  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_39  [key=0, style=solid];
m0_38 -> m0_48  [key=0, style=solid];
m0_40 -> m0_48  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_45  [key=0, style=solid];
m0_42 -> m0_15  [key=3, color=darkorchid, style=bold, label="Property variable System.TimeSpan ResamplePeriod"];
m0_44 -> m0_48  [key=0, style=solid];
m0_46 -> m0_48  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_47  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_48 -> m0_31  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=margin];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_18  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_2 -> m0_7  [key=0, style=solid];
m0_2 -> m0_8  [key=2, style=dotted];
m0_4 -> m0_7  [key=0, style=solid];
m0_4 -> m0_8  [key=2, style=dotted];
m0_4 -> m0_4  [key=3, color=darkorchid, style=bold, label="Field variable string _compileId"];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_49 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m0_49 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_49 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m0_49 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m0_49 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m0_49 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_62  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_63  [key=2, style=dotted];
m0_57 -> m0_64  [key=2, style=dotted];
m0_57 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m0_57 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m0_57 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_65  [key=2, style=dotted];
m0_52 -> m0_61  [key=0, style=solid];
m0_54 -> m0_61  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m0_61 -> m0_49  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_9 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_9 -> m0_9  [key=3, color=darkorchid, style=bold, label="Field variable bool _isActive"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_11 -> m0_14  [key=0, style=solid];
m0_11 -> m0_8  [key=2, style=dotted];
m0_14 -> m0_9  [key=0, style=bold, color=blue];
m0_66 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m0_66 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityMarginModel"];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>"];
m1_47 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<System.DateTime, decimal>"];
m1_47 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_47 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_47 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>"];
m1_47 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Statistics.AlgorithmPerformance"];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_55 -> m1_47  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResult"];
m1_26 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_26 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_43  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_42  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> n153  [key=2, style=dotted];
m1_42 -> m1_26  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_45  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid, color=red];
m1_3 -> m1_23  [key=2, style=dotted];
m1_3 -> m1_24  [key=2, style=dotted];
m1_3 -> m1_5  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_6  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_7  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_8  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_9  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_10  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_11  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_12  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_13  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_14  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_15  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_16  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_17  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_18  [key=1, style=dashed, color=red, label=packet];
m1_3 -> m1_19  [key=1, style=dashed, color=red, label=packet];
m1_4 -> m1_5  [key=0, style=solid, color=red];
m1_5 -> m1_6  [key=0, style=solid, color=red];
m1_6 -> m1_7  [key=0, style=solid, color=red];
m1_7 -> m1_8  [key=0, style=solid, color=red];
m1_8 -> m1_9  [key=0, style=solid, color=red];
m1_9 -> m1_10  [key=0, style=solid, color=red];
m1_10 -> m1_11  [key=0, style=solid, color=red];
m1_11 -> m1_12  [key=0, style=solid, color=red];
m1_12 -> m1_13  [key=0, style=solid, color=red];
m1_13 -> m1_14  [key=0, style=solid, color=red];
m1_14 -> m1_15  [key=0, style=solid, color=red];
m1_15 -> m1_16  [key=0, style=solid, color=red];
m1_16 -> m1_17  [key=0, style=solid, color=red];
m1_17 -> m1_18  [key=0, style=solid, color=red];
m1_18 -> m1_19  [key=0, style=solid, color=red];
m1_19 -> m1_20  [key=0, style=solid, color=red];
m1_19 -> m1_22  [key=0, style=solid, color=red];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_25  [key=2, style=dotted];
m1_22 -> m1_2  [key=0, style=bold, color=blue];
m1_56 -> m1_4  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_5  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_6  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_7  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_8  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_9  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_10  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_11  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_12  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_13  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_14  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_15  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_16  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_17  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_18  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_19  [key=1, style=dashed, color=red, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_56 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResultPacket"];
m1_57 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResult"];
m1_57 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResult"];
m1_57 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResult"];
m1_57 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResult"];
m1_57 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResult"];
m1_57 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResult"];
m1_57 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestResult"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> n85  [key=2, style=dotted];
m4_6 -> m4_3  [key=0, style=bold, color=blue];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> n85  [key=2, style=dotted];
m4_12 -> m4_9  [key=0, style=bold, color=blue];
m4_14 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"];
m4_14 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"];
m4_14 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"];
m4_14 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"];
m4_14 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"];
m5_23 -> n155  [key=0, style=bold, color=blue];
m5_54 -> m5_55  [key=0, style=solid];
m5_55 -> m5_54  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_39 -> m5_38  [key=0, style=bold, color=blue];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_14  [key=0, style=bold, color=blue];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_78  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_34  [key=0, style=bold, color=blue];
m5_60 -> m5_61  [key=0, style=solid];
m5_61 -> m5_60  [key=0, style=bold, color=blue];
m5_80 -> m5_81  [key=0, style=solid];
m5_81 -> m5_80  [key=0, style=bold, color=blue];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_30  [key=0, style=bold, color=blue];
m5_40 -> m5_41  [key=0, style=solid];
m5_41 -> m5_40  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_58  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_12  [key=0, style=bold, color=blue];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_68  [key=0, style=bold, color=blue];
m5_70 -> m5_71  [key=0, style=solid];
m5_71 -> m5_70  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [key=0, style=bold, color=blue];
m5_90 -> m5_91  [key=0, style=solid];
m5_91 -> m5_90  [key=0, style=bold, color=blue];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_52  [key=0, style=bold, color=blue];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_20  [key=0, style=bold, color=blue];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_72  [key=0, style=bold, color=blue];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_48  [key=0, style=bold, color=blue];
m5_56 -> m5_57  [key=0, style=solid];
m5_57 -> m5_56  [key=0, style=bold, color=blue];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_86  [key=0, style=bold, color=blue];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_6  [key=0, style=bold, color=blue];
m5_76 -> m5_77  [key=0, style=solid];
m5_77 -> m5_76  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_26  [key=0, style=bold, color=blue];
m5_66 -> m5_67  [key=0, style=solid];
m5_67 -> m5_66  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_4  [key=0, style=bold, color=blue];
m5_32 -> m5_33  [key=0, style=solid];
m5_33 -> m5_32  [key=0, style=bold, color=blue];
m5_24 -> m5_25  [key=0, style=solid];
m5_25 -> m5_24  [key=0, style=bold, color=blue];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_8  [key=0, style=bold, color=blue];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_44  [key=0, style=bold, color=blue];
m5_84 -> m5_85  [key=0, style=solid];
m5_85 -> m5_84  [key=0, style=bold, color=blue];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_10  [key=0, style=bold, color=blue];
m5_46 -> m5_47  [key=0, style=solid];
m5_47 -> m5_46  [key=0, style=bold, color=blue];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_18  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_43 -> m5_42  [key=0, style=bold, color=blue];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_28  [key=0, style=bold, color=blue];
m5_50 -> m5_51  [key=0, style=solid];
m5_51 -> m5_50  [key=0, style=bold, color=blue];
m5_62 -> m5_63  [key=0, style=solid];
m5_63 -> m5_62  [key=0, style=bold, color=blue];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> m5_36  [key=0, style=bold, color=blue];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_74  [key=0, style=bold, color=blue];
m5_88 -> m5_89  [key=0, style=solid];
m5_89 -> m5_88  [key=0, style=bold, color=blue];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_82  [key=0, style=bold, color=blue];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_16  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_64 -> m5_65  [key=0, style=solid];
m5_65 -> m5_64  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_6  [key=0, style=bold, color=blue];
m7_14 -> m7_15  [key=0, style=solid];
m7_15 -> m7_14  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_2  [key=0, style=bold, color=blue];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_10  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_12  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_4  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_8  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=red, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>"];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m8_0 -> m8_4  [key=1, style=dashed, color=red, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>"];
m8_1 -> m8_2  [key=0, style=solid, color=red];
m8_1 -> m8_3  [key=0, style=solid];
m8_2 -> m8_1  [key=0, style=solid, color=red];
m8_2 -> m8_6  [key=2, style=dotted, color=red];
m8_3 -> m8_4  [key=0, style=solid, color=red];
m8_3 -> m8_5  [key=0, style=solid];
m8_4 -> m8_3  [key=0, style=solid, color=red];
m8_4 -> m8_7  [key=2, style=dotted, color=red];
m8_5 -> m8_0  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m9_4 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m9_4 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=security];
m9_5 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label=security];
m9_7 -> m9_12  [key=0, style=solid];
m9_7 -> m9_0  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_0  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m9_12 -> m9_4  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_13 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget"];
m9_13 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget"];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_26  [key=0, style=solid];
m10_24 -> m10_27  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_28  [key=2, style=dotted];
m10_26 -> m10_23  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_12  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_13  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_14  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_15  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_16  [key=2, style=dotted];
m10_6 -> m10_17  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_18  [key=2, style=dotted];
m10_7 -> m10_19  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_20  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_21  [key=2, style=dotted];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_22  [key=2, style=dotted];
m10_11 -> m10_0  [key=0, style=bold, color=blue];
m10_29 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m10_29 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm"];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_17  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_14  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_18  [key=2, style=dotted];
m12_6 -> m12_19  [key=2, style=dotted];
m12_6 -> m12_20  [key=2, style=dotted];
m12_6 -> m12_21  [key=2, style=dotted];
m12_6 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m12_6 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m12_6 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m12_6 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m12_6 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m12_6 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_25  [key=2, style=dotted];
m12_14 -> m12_19  [key=2, style=dotted];
m12_14 -> m12_20  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_22  [key=2, style=dotted];
m12_7 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_11  [key=0, style=solid];
m12_9 -> m12_13  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_13  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_23  [key=2, style=dotted];
m12_12 -> n148  [key=2, style=dotted];
m12_13 -> m12_16  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_2  [key=0, style=bold, color=blue];
m12_30 -> m12_31  [key=0, style=solid];
m12_31 -> m12_30  [key=0, style=bold, color=blue];
m12_26 -> m12_27  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_29  [key=2, style=dotted];
m12_28 -> m12_26  [key=0, style=bold, color=blue];
m12_32 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.JobQueue"];
m12_32 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.JobQueue"];
m12_32 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.JobQueue"];
m12_32 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.JobQueue"];
m12_33 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
}
