digraph  {
n199 [label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
n0 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49"];
n1 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", label="Algorithm = algorithm", span="52-52"];
n2 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", label="_pending = new ConcurrentDictionary<int, Order>()", span="53-53"];
n3 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49"];
n4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
n5 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="61-61"];
n6 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", label="Algorithm = algorithm", span="64-64"];
n7 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", label="_pending = new ConcurrentDictionary<int, Order>()", span="65-65"];
n8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="61-61"];
n9 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73"];
n10 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", label="Algorithm = algorithm", span="76-76"];
n11 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", label="MarketSimulation = marketSimulation", span="77-77"];
n12 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", label="_pending = new ConcurrentDictionary<int, Order>()", span="78-78"];
n13 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73"];
n14 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="95-95"];
n15 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", label="return Algorithm.Transactions.GetOpenOrders();", span="97-97"];
n16 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="95-95"];
n17 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="244-244"];
n18 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="104-104"];
n19 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", label="return (from security in Algorithm.Portfolio.Securities.Values.OrderBy(x => x.Symbol)\r\n                    where security.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(security)).ToList();", span="107-109"];
n20 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="104-104"];
n21 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n22 [cluster="Holding.cstr", label="Entry Holding.cstr", span=""];
n23 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n24 [cluster="lambda expression", label="Entry lambda expression", span="107-107"];
n25 [cluster="lambda expression", label="x.Symbol", span="107-107"];
n26 [cluster="lambda expression", label="Exit lambda expression", span="107-107"];
n27 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="116-116"];
n28 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", label="return Algorithm.Portfolio.CashBook.Values.ToList();", span="118-118"];
n29 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="116-116"];
n30 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n31 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="126-126"];
n32 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="Log.Trace(''BacktestingBrokerage.PlaceOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="128-128"];
n33 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="order.Status == OrderStatus.New", span="130-130"];
n36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="SetPendingOrder(order)", span="135-135"];
n37 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="var orderId = order.Id.ToString()", span="138-138"];
n38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="!order.BrokerId.Contains(orderId)", span="139-139"];
n39 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="order.BrokerId.Add(orderId)", span="139-139"];
n41 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="143-143"];
n46 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
n34 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label=_needsScanLock, span="132-132"];
n44 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="return false;", span="148-148"];
n35 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="_needsScan = true", span="134-134"];
n47 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="435-435"];
n48 [cluster="int.ToString()", label="Entry int.ToString()", span="0-0"];
n40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="int orderFee = 0", span="142-142"];
n49 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n50 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n42 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="OnOrderEvent(submitted)", span="144-144"];
n51 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
n43 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="return true;", span="146-146"];
n52 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
n45 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="126-126"];
n53 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="156-156"];
n54 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="158-158"];
n57 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="!_pending.TryGetValue(order.Id, out pending)", span="163-163"];
n60 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="SetPendingOrder(order)", span="170-170"];
n61 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="var orderId = order.Id.ToString()", span="173-173"];
n62 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="!order.BrokerId.Contains(orderId)", span="174-174"];
n63 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="order.BrokerId.Add(orderId)", span="174-174"];
n65 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="178-178"];
n55 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label=_needsScanLock, span="160-160"];
n56 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="Order pending", span="162-162"];
n58 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="return false;", span="166-166"];
n59 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="_needsScan = true", span="169-169"];
n69 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n64 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="int orderFee = 0", span="177-177"];
n66 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="OnOrderEvent(updated)", span="179-179"];
n67 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="return true;", span="181-181"];
n68 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="156-156"];
n70 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="189-189"];
n71 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="191-191"];
n74 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="!_pending.TryRemove(order.Id, out pending)", span="196-196"];
n76 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="var orderId = order.Id.ToString()", span="203-203"];
n77 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="!order.BrokerId.Contains(orderId)", span="204-204"];
n78 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="order.BrokerId.Add(order.Id.ToString())", span="204-204"];
n80 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="208-208"];
n72 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label=_needsScanLock, span="193-193"];
n73 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="Order pending", span="195-195"];
n75 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="return false;", span="199-199"];
n84 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
n79 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="int orderFee = 0", span="207-207"];
n81 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="OnOrderEvent(canceled)", span="209-209"];
n82 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="return true;", span="211-211"];
n83 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="189-189"];
n85 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="222-222"];
n86 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label=_needsScanLock, span="224-224"];
n87 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="!_needsScan", span="227-227"];
n88 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="return;", span="229-229"];
n89 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="var stillNeedsScan = false", span="232-232"];
n90 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="_pending.OrderBy(x => x.Key)", span="235-235"];
n146 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="_needsScan = stillNeedsScan", span="378-378"];
n91 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="var order = kvp.Value", span="237-237"];
n169 [cluster="lambda expression", label="Entry lambda expression", span="235-235"];
n92 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="order == null", span="238-238"];
n93 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="240-240"];
n95 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="order.Status.IsClosed()", span="245-245"];
n96 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="_pending.TryRemove(order.Id, out order)", span="248-248"];
n97 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="253-253"];
n99 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="259-259"];
n101 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="262-262"];
n102 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="264-264"];
n103 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="266-266"];
n104 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="_pending.TryRemove(order.Id, out order)", span="267-267"];
n105 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="272-272"];
n107 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="sufficientBuyingPower = Algorithm.Transactions.GetSufficientCapitalForOrder(Algorithm.Portfolio, order)", span="281-281"];
n110 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="_pending.TryRemove(order.Id, out pending)", span="287-287"];
n111 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="order.Status = OrderStatus.Invalid", span="288-288"];
n112 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0, ''Error in GetSufficientCapitalForOrder''))", span="289-289"];
n114 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="292-292"];
n117 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="order.Type", span="305-305"];
n119 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="308-308"];
n121 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="312-312"];
n123 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="316-316"];
n125 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="320-320"];
n127 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="324-324"];
n129 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="328-328"];
n132 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="333-333"];
n135 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="340-341"];
n136 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="order.Status = OrderStatus.Invalid", span="347-347"];
n137 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id,\r\n                            order.GetValue(security).SmartRounding()))", span="348-349"];
n139 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="order.Status != fill.Status || fill.FillQuantity != 0", span="355-355"];
n141 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="order.Type == OrderType.OptionExercise", span="361-361"];
n144 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="_pending.TryRemove(order.Id, out order)", span="369-369"];
n94 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="_pending.TryRemove(kvp.Key, out order)", span="241-241"];
n148 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n149 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
n98 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="stillNeedsScan = true", span="255-255"];
n100 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Security security", span="261-261"];
n138 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label=fills, span="352-352"];
n143 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="fills.All(x => x.Status.IsClosed())", span="367-367"];
n150 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
n116 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="var model = security.FillModel", span="300-300"];
n131 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="var option = (Option)security", span="332-332"];
n106 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="bool sufficientBuyingPower", span="278-278"];
n151 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
n108 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label=Exception, span="283-283"];
n115 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label=sufficientBuyingPower, span="297-297"];
n152 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
n109 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Order pending", span="286-286"];
n113 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Log.Error(err)", span="291-291"];
n153 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
n118 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OrderType.Limit", span="307-307"];
n120 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OrderType.StopMarket", span="311-311"];
n122 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OrderType.Market", span="315-315"];
n124 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OrderType.StopLimit", span="319-319"];
n126 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OrderType.MarketOnOpen", span="323-323"];
n128 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OrderType.MarketOnClose", span="327-327"];
n130 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OrderType.OptionExercise", span="331-331"];
n133 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label=Exception, span="337-337"];
n158 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30"];
n162 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
n163 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
n160 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62"];
n159 [cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46"];
n156 [cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54"];
n161 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70"];
n157 [cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38"];
n134 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Log.Error(err)", span="339-339"];
n165 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
n166 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="206-206"];
n154 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n155 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="387-387"];
n164 [cluster="string.Format(string, object, object, object)", label="Entry string.Format(string, object, object, object)", span="0-0"];
n140 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OnOrderEvent(fill)", span="358-358"];
n142 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="OnOptionPositionAssigned(fill)", span="363-363"];
n167 [cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132"];
n145 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="stillNeedsScan = true", span="373-373"];
n168 [cluster="Unk.All", label="Entry Unk.All", span=""];
n172 [cluster="lambda expression", label="Entry lambda expression", span="367-367"];
n147 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="222-222"];
n170 [cluster="lambda expression", label="x.Key", span="235-235"];
n171 [cluster="lambda expression", label="Exit lambda expression", span="235-235"];
n173 [cluster="lambda expression", label="x.Status.IsClosed()", span="367-367"];
n174 [cluster="lambda expression", label="Exit lambda expression", span="367-367"];
n175 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="385-385"];
n176 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", label="MarketSimulation != null", span="388-388"];
n177 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", label="MarketSimulation.SimulateMarketConditions(this, Algorithm)", span="389-389"];
n178 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="385-385"];
n179 [cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31"];
n180 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="397-397"];
n181 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0.0m, 0.0m, Algorithm.UtcTime, ''Simulated option assignment'')", span="399-399"];
n183 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="401-401"];
n184 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="402-402"];
n186 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label="portfolioModel.ProcessFill(Algorithm.Portfolio, option, fill)", span="407-407"];
n182 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label="var order = (OptionExerciseOrder)Order.CreateOrder(request)", span="400-400"];
n189 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
n190 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="268-268"];
n185 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label=fills, span="404-404"];
n188 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="397-397"];
n187 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", label="OnOptionPositionAssigned(fill)", span="410-410"];
n191 [cluster="QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33"];
n192 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="417-417"];
n193 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="417-417"];
n194 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="425-425"];
n195 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="425-425"];
n196 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", label="_pending[order.Id] = order.Clone()", span="438-438"];
n197 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="435-435"];
n198 [cluster="QuantConnect.Orders.Order.Clone()", label="Entry QuantConnect.Orders.Order.Clone()", span="241-241"];
m0_23 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="97-97"];
m0_24 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs", label="var orderFees = security.TransactionModel.GetOrderFee(order.Quantity, order.Price)", span="101-101"];
m0_25 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs", label="return order.Price*order.AbsoluteQuantity*InitialMarginRequirement + orderFees;", span="103-103"];
m0_26 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="97-97"];
m0_31 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="123-123"];
m0_32 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="var holdings = security.Holdings", span="125-125"];
m0_33 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="direction == OrderDirection.Hold", span="127-127"];
m0_34 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="return portfolio.MarginRemaining;", span="129-129"];
m0_36 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label=direction, span="136-136"];
m0_38 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="return portfolio.MarginRemaining;", span="139-139"];
m0_40 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="return (holdings.UnrealizedProfit + holdings.UnleveredAbsoluteHoldingsCost) * 2 + portfolio.MarginRemaining;", span="141-141"];
m0_42 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label=direction, span="146-146"];
m0_44 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="return (holdings.UnrealizedProfit + holdings.UnleveredAbsoluteHoldingsCost) * 2 + portfolio.MarginRemaining;", span="149-149"];
m0_46 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="return portfolio.MarginRemaining;", span="151-151"];
m0_47 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="return portfolio.MarginRemaining;", span="156-156"];
m0_35 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="holdings.IsLong", span="134-134"];
m0_41 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="holdings.IsShort", span="144-144"];
m0_37 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="OrderDirection.Buy", span="138-138"];
m0_39 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="OrderDirection.Sell", span="140-140"];
m0_43 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="OrderDirection.Buy", span="148-148"];
m0_45 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="OrderDirection.Sell", span="150-150"];
m0_48 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="123-123"];
m0_63 [cluster="System.Math.Min(int, int)", file="BacktestingResultHandler.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m0_18 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84"];
m0_19 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs", label="decimal margin = 1/leverage", span="86-86"];
m0_20 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs", label="InitialMarginRequirement = margin", span="87-87"];
m0_21 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs", label="MaintenanceMarginRequirement = margin", span="88-88"];
m0_22 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84"];
m0_27 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="95-95"];
m0_0 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m0_1 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs", label="initialMarginRequirement < 0 || initialMarginRequirement > 1", span="37-37"];
m0_3 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs", label="maintenanceMarginRequirement < 0 || maintenanceMarginRequirement > 1", span="42-42"];
m0_5 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs", label="InitialMarginRequirement = initialMarginRequirement", span="47-47"];
m0_6 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs", label="MaintenanceMarginRequirement = maintenanceMarginRequirement", span="48-48"];
m0_2 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs", label="throw new ArgumentException(''Initial margin requirement must be between 0 and 1'');", span="39-39"];
m0_4 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs", label="throw new ArgumentException(''Maintenance margin requirement must be between 0 and 1'');", span="44-44"];
m0_7 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m0_64 [cluster="System.Math.Max(int, int)", file="BacktestingResultHandler.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m0_49 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="167-167"];
m0_50 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="decimal marginBuffer = 0.10m", span="170-170"];
m0_51 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="totalMargin <= netLiquidationValue*(1 + marginBuffer)", span="172-172"];
m0_53 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="!security.Holdings.Invested", span="177-177"];
m0_55 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="decimal delta = totalMargin - netLiquidationValue", span="183-183"];
m0_56 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="int quantity = (int) (Math.Round(delta/security.Price, MidpointRounding.AwayFromZero) / MaintenanceMarginRequirement)", span="186-186"];
m0_57 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="quantity = Math.Max(1, Math.Min((int)security.Holdings.AbsoluteQuantity, quantity))", span="189-189"];
m0_58 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="security.Holdings.IsLong", span="190-190"];
m0_60 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="return new MarketOrder(security.Symbol, quantity, security.Time, ''Margin Call'', security.Type);", span="196-196"];
m0_52 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="return null;", span="174-174"];
m0_54 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="return null;", span="179-179"];
m0_59 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="quantity *= -1", span="193-193"];
m0_61 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="167-167"];
m0_65 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="57-57"];
m0_28 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="111-111"];
m0_29 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs", label="return security.Holdings.AbsoluteHoldingsCost*MaintenanceMarginRequirement;", span="113-113"];
m0_30 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="111-111"];
m0_62 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="BacktestingResultHandler.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m0_15 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="71-71"];
m0_16 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs", label="return 1/MaintenanceMarginRequirement;", span="73-73"];
m0_17 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="71-71"];
m0_9 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="55-55"];
m0_10 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs", label="leverage < 1", span="57-57"];
m0_12 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs", label="InitialMarginRequirement = 1/leverage", span="62-62"];
m0_13 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs", label="MaintenanceMarginRequirement = 1/leverage", span="63-63"];
m0_11 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs", label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="59-59"];
m0_14 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="55-55"];
m0_8 [cluster="System.ArgumentException.ArgumentException(string)", file="BacktestingResultHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m0_66 [file="BacktestingResultHandler.cs", label="QuantConnect.Securities.SecurityMarginModel", span=""];
m1_47 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", span="224-224"];
m1_48 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="Charts = charts", span="226-226"];
m1_49 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="Orders = orders", span="227-227"];
m1_50 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="ProfitLoss = profitLoss", span="228-228"];
m1_51 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="Statistics = statistics", span="229-229"];
m1_52 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="RuntimeStatistics = runtimeStatistics", span="230-230"];
m1_53 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="RollingWindow = rollingWindow", span="231-231"];
m1_54 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="TotalPerformance = totalPerformance", span="232-232"];
m1_55 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", span="224-224"];
m1_23 [cluster="JsonSerializerSettings.cstr", file="BacktestResultPacket.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m1_26 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171"];
m1_27 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="Progress = Math.Round(progress, 3)", span="176-176"];
m1_28 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="SessionId = job.SessionId", span="177-177"];
m1_29 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="PeriodFinish = job.PeriodFinish", span="178-178"];
m1_30 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="PeriodStart = job.PeriodStart", span="179-179"];
m1_31 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="CompileId = job.CompileId", span="180-180"];
m1_32 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="Channel = job.Channel", span="181-181"];
m1_33 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="BacktestId = job.BacktestId", span="182-182"];
m1_34 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="Results = results", span="183-183"];
m1_35 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="Name = job.Name", span="184-184"];
m1_36 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="UserId = job.UserId", span="185-185"];
m1_37 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="ProjectId = job.ProjectId", span="186-186"];
m1_38 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="SessionId = job.SessionId", span="187-187"];
m1_39 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="TradeableDates = job.TradeableDates", span="188-188"];
m1_40 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label=Exception, span="190-190"];
m1_41 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="Log.Error(err)", span="191-191"];
m1_42 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171"];
m1_0 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket()", span="125-125"];
m1_1 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket()", span="125-125"];
m1_45 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult()", span="216-216"];
m1_46 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Packets.BacktestResult.BacktestResult()", span="216-216"];
m1_25 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_43 [cluster="System.Math.Round(decimal, int)", file="BacktestResultPacket.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m1_24 [cluster="Unk.>", file="BacktestResultPacket.cs", label="Entry Unk.>", span=""];
m1_2 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", span="132-132"];
m1_3 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs", label="var packet = JsonConvert.DeserializeObject<BacktestResultPacket>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto\r\n                })", span="137-140"];
m1_20 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs", label=Exception, span="158-158"];
m1_21 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs", label="Log.Trace(''BacktestResultPacket(): Error converting json: '' + err)", span="160-160"];
m1_22 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(string)", span="132-132"];
m1_56 [file="BacktestResultPacket.cs", label="QuantConnect.Packets.BacktestResultPacket", span=""];
m1_57 [file="BacktestResultPacket.cs", label="QuantConnect.Packets.BacktestResult", span=""];
m4_13 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="188-188"];
m4_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m4_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="FundamentalPortfolioSelectionModel.cs", label="_brokerage = brokerage", span="36-36"];
m4_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m4_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", span="42-42"];
m4_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="base.ProcessSynchronousEvents()", span="44-44"];
m4_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="_brokerage.Scan()", span="46-46"];
m4_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", span="42-42"];
m4_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", span="52-52"];
m4_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="base.ProcessAsynchronousEvents()", span="54-54"];
m4_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="_brokerage.Scan()", span="56-56"];
m4_12 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", span="52-52"];
m4_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="196-196"];
m4_14 [file="FundamentalPortfolioSelectionModel.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", span=""];
m5_23 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="413-413"];
m5_54 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="503-503"];
m5_55 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="503-503"];
m5_38 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="458-458"];
m5_39 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="458-458"];
m5_14 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="389-389"];
m5_15 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="389-389"];
m5_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="596-596"];
m5_79 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="596-596"];
m5_34 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="446-446"];
m5_35 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="446-446"];
m5_60 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="535-535"];
m5_61 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="535-535"];
m5_80 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="602-602"];
m5_81 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="602-602"];
m5_30 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="434-434"];
m5_31 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="434-434"];
m5_40 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="463-463"];
m5_41 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="463-463"];
m5_58 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="525-525"];
m5_59 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="525-525"];
m5_12 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="383-383"];
m5_13 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="383-383"];
m5_68 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="564-564"];
m5_69 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="564-564"];
m5_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="570-570"];
m5_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="570-570"];
m5_2 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="331-331"];
m5_3 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="331-331"];
m5_90 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="632-632"];
m5_91 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="632-632"];
m5_52 [cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="496-496"];
m5_53 [cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="496-496"];
m5_20 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="407-407"];
m5_21 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="407-407"];
m5_72 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="575-575"];
m5_73 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="575-575"];
m5_48 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="485-485"];
m5_49 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="485-485"];
m5_56 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="515-515"];
m5_57 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="515-515"];
m5_86 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="620-620"];
m5_87 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="620-620"];
m5_6 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="345-345"];
m5_7 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="345-345"];
m5_76 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="587-587"];
m5_77 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="587-587"];
m5_26 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="424-424"];
m5_27 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="424-424"];
m5_66 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="556-556"];
m5_67 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="556-556"];
m5_4 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="339-339"];
m5_5 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="339-339"];
m5_32 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="439-439"];
m5_33 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="439-439"];
m5_24 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="419-419"];
m5_25 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="419-419"];
m5_8 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="353-353"];
m5_9 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="353-353"];
m5_44 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="474-474"];
m5_45 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="474-474"];
m5_84 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="614-614"];
m5_85 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="614-614"];
m5_10 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="377-377"];
m5_11 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="377-377"];
m5_46 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="480-480"];
m5_47 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="480-480"];
m5_18 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="401-401"];
m5_19 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="401-401"];
m5_42 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="468-468"];
m5_43 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="468-468"];
m5_28 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="429-429"];
m5_29 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="429-429"];
m5_50 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="490-490"];
m5_51 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="490-490"];
m5_62 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="542-542"];
m5_63 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="542-542"];
m5_36 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="453-453"];
m5_37 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="453-453"];
m5_74 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="581-581"];
m5_75 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="581-581"];
m5_88 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="626-626"];
m5_89 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="626-626"];
m5_82 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="608-608"];
m5_83 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="608-608"];
m5_16 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="395-395"];
m5_17 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="395-395"];
m5_0 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="325-325"];
m5_1 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="325-325"];
m5_64 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="548-548"];
m5_65 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="548-548"];
m6_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="IPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="31-31"];
m6_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="IPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="31-31"];
m7_6 [cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="50-50"];
m7_7 [cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="50-50"];
m7_14 [cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="85-85"];
m7_15 [cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="85-85"];
m7_2 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="38-38"];
m7_3 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="38-38"];
m7_10 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="73-73"];
m7_11 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="73-73"];
m7_12 [cluster="QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", span="80-80"];
m7_13 [cluster="QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", span="80-80"];
m7_4 [cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="43-43"];
m7_5 [cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="43-43"];
m7_0 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="33-33"];
m7_1 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Interfaces.IApi.Initialize()", span="33-33"];
m7_8 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="58-58"];
m7_9 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="58-58"];
m8_6 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="NotifiedSecurityChanges.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m8_0 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31"];
m8_1 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs", label="changes.AddedSecurities", span="33-33"];
m8_3 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs", label="changes.RemovedSecurities", span="37-37"];
m8_5 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs", label="Exit QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31"];
m8_7 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="NotifiedSecurityChanges.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m9_4 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", span="54-54"];
m9_5 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="var security = algorithm.Securities[symbol]", span="56-56"];
m9_7 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="return new PortfolioTarget(symbol, 0);", span="59-59"];
m9_8 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="var quantity = percent * algorithm.Portfolio.TotalPortfolioValue / security.Price", span="62-62"];
m9_11 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="return new PortfolioTarget(symbol, quantity);", span="68-68"];
m9_6 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="security.Price == 0", span="57-57"];
m9_9 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="var remainder = quantity % security.SymbolProperties.LotSize", span="65-65"];
m9_10 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="quantity = quantity - remainder", span="66-66"];
m9_12 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", span="54-54"];
m9_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40"];
m9_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Symbol = symbol", span="42-42"];
m9_2 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Quantity = quantity", span="43-43"];
m9_3 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40"];
m9_13 [file="PortfolioTarget.cs", label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget", span=""];
m10_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1699-1699"];
m10_21 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", span="26-26"];
m10_19 [cluster="System.TimeSpan.FromMinutes(double)", file="QCAlgorithmFramework.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m10_23 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="62-62"];
m10_24 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs", label="orderEvent.Status.IsFill()", span="64-64"];
m10_25 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs", label="Debug($''Purchased Stock: {orderEvent.Symbol}'')", span="66-66"];
m10_26 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="62-62"];
m10_22 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", span="10-10"];
m10_0 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", span="38-38"];
m10_1 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="UniverseSettings.Resolution = Resolution.Minute", span="41-41"];
m10_2 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="SetStartDate(2016, 10, 7)", span="43-43"];
m10_3 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="SetEndDate(2016, 10, 7)", span="44-44"];
m10_4 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="SetCash(100000)", span="45-45"];
m10_5 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="SetBrokerageModel(BrokerageName.GDAX, AccountType.Cash)", span="52-52"];
m10_6 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="UniverseSelection = new ManualUniverseSelectionModel(QuantConnect.Symbol.Create(''BTCUSD'', SecurityType.Crypto, Market.GDAX))", span="55-55"];
m10_7 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="Alpha = new ConstantAlphaModel(InsightType.Price, InsightDirection.Up, TimeSpan.FromMinutes(20), 0.025, null)", span="56-56"];
m10_8 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="PortfolioConstruction = new EqualWeightingPortfolioConstructionModel()", span="57-57"];
m10_9 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="Execution = new ImmediateExecutionModel()", span="58-58"];
m10_10 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="RiskManagement = new Algorithm.Framework.Risk.NullRiskManagementModel()", span="59-59"];
m10_11 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm.Initialize()", span="38-38"];
m10_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1151-1151"];
m10_16 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(params QuantConnect.Symbol[])", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(params QuantConnect.Symbol[])", span="53-53"];
m10_20 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", span="29-29"];
m10_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="939-939"];
m10_17 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m10_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1126-1126"];
m10_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="60-60"];
m10_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1075-1075"];
m10_27 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m10_29 [file="QCAlgorithmFramework.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm", span=""];
m12_21 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="103-103"];
m12_0 [cluster="QuantConnect.Queues.JobQueue.Initialize()", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Queues.JobQueue.Initialize()", span="50-50"];
m12_1 [cluster="QuantConnect.Queues.JobQueue.Initialize()", file="SimplePortfolioConstructionModel.cs", label="Exit QuantConnect.Queues.JobQueue.Initialize()", span="50-50"];
m12_29 [cluster="System.Type.MatchesTypeName(string)", file="SimplePortfolioConstructionModel.cs", label="Entry System.Type.MatchesTypeName(string)", span="317-317"];
m12_22 [cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="55-55"];
m12_2 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Queues.JobQueue.NextJob(out string)", span="59-59"];
m12_3 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="location = AlgorithmLocation", span="61-61"];
m12_4 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="Log.Trace(''JobQueue.NextJob(): Selected '' + location)", span="62-62"];
m12_5 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label=_liveMode, span="65-65"];
m12_6 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="var liveJob = new LiveNodePacket\r\n                {\r\n                    Type = PacketType.LiveNode,\r\n                    DataEndpoint = DataFeedEndpoint.LiveTrading,\r\n                    RealTimeEndpoint = RealTimeEndpoint.LiveTrading,\r\n                    TransactionEndpoint = TransactionHandlerEndpoint.Brokerage,\r\n                    Algorithm = File.ReadAllBytes(AlgorithmLocation),\r\n                    Brokerage = Config.Get(''live-mode-brokerage'', PaperBrokerageTypeName),\r\n                    Channel = Config.Get(''job-channel''),\r\n                    UserId = Config.GetInt(''job-user-id''),\r\n                    Version = Constants.Version,\r\n                    DeployId = Config.Get(''algorithm-type-name'')\r\n                }", span="67-79"];
m12_14 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="var backtestJob = new BacktestNodePacket(0, 0, '''', new byte[] {}, 10000, ''local'')\r\n            {\r\n                Type = PacketType.BacktestNode,\r\n                DataEndpoint = DataFeedEndpoint.FileSystem,\r\n                RealTimeEndpoint = RealTimeEndpoint.Backtesting,\r\n                TransactionEndpoint = TransactionHandlerEndpoint.Backtesting,\r\n                Algorithm = File.ReadAllBytes(AlgorithmLocation),\r\n                Version = Constants.Version,\r\n                BacktestId = Config.Get(''algorithm-type-name'')\r\n            }", span="102-111"];
m12_7 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="var brokerageFactory = Composer.Instance.Single<IBrokerageFactory>(factory => factory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="84-84"];
m12_8 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="liveJob.BrokerageData = brokerageFactory.BrokerageData", span="85-85"];
m12_9 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="liveJob.Brokerage == ''PaperBrokerage''", span="88-88"];
m12_10 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="liveJob.TransactionEndpoint = TransactionHandlerEndpoint.Backtesting", span="90-90"];
m12_12 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="Log.Error(string.Format(''JobQueue.NextJob(): Error resoliving BrokerageData for live job for brokerage {0}. {1}'', liveJob.Brokerage, err.Message))", span="95-95"];
m12_13 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="return liveJob;", span="98-98"];
m12_11 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label=Exception, span="93-93"];
m12_15 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="return backtestJob;", span="113-113"];
m12_16 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="SimplePortfolioConstructionModel.cs", label="Exit QuantConnect.Queues.JobQueue.NextJob(out string)", span="59-59"];
m12_23 [cluster="string.Format(string, object, object)", file="SimplePortfolioConstructionModel.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m12_19 [cluster="System.IO.File.ReadAllBytes(string)", file="SimplePortfolioConstructionModel.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m12_25 [cluster="QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", span="75-75"];
m12_18 [cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="48-48"];
m12_30 [cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="120-120"];
m12_31 [cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="SimplePortfolioConstructionModel.cs", label="Exit QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="120-120"];
m12_17 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m12_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="65-65"];
m12_26 [cluster="lambda expression", file="SimplePortfolioConstructionModel.cs", label="Entry lambda expression", span="84-84"];
m12_27 [cluster="lambda expression", file="SimplePortfolioConstructionModel.cs", label="factory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="84-84"];
m12_28 [cluster="lambda expression", file="SimplePortfolioConstructionModel.cs", label="Exit lambda expression", span="84-84"];
m12_32 [file="SimplePortfolioConstructionModel.cs", label="QuantConnect.Queues.JobQueue", span=""];
m12_33 [file="SimplePortfolioConstructionModel.cs", label=liveJob, span=""];
n199 -> n15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n36  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n57  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n74  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n81  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n87  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n90  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n94  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n96  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n97  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n104  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n105  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n112  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n114  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n135  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n140  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n199 -> n187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
n19 -> n24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n19 -> n19  [color=darkseagreen4, key=1, label=security, style=dashed];
n31 -> n33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n31 -> n36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n31 -> n38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n31 -> n39  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n37 -> n39  [color=darkseagreen4, key=1, label=orderId, style=dashed];
n53 -> n57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n53 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n53 -> n62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n53 -> n63  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n61 -> n63  [color=darkseagreen4, key=1, label=orderId, style=dashed];
n70 -> n74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n70 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n70 -> n78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n90 -> n169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n91 -> n93  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n91 -> n95  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n96  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n97  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n101  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n102  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n104  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n105  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n110  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n112  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n114  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n117  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n135  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n137  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n139  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n141  [color=darkseagreen4, key=1, label=order, style=dashed];
n91 -> n144  [color=darkseagreen4, key=1, label=order, style=dashed];
n93 -> n93  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n96 -> n96  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n97  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n101  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n102  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n104  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n105  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n110  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n112  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n114  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n117  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n135  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n137  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n139  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n141  [color=darkseagreen4, key=1, label=order, style=dashed];
n96 -> n144  [color=darkseagreen4, key=1, label=order, style=dashed];
n99 -> n138  [color=darkseagreen4, key=1, label=fills, style=dashed];
n99 -> n143  [color=darkseagreen4, key=1, label=fills, style=dashed];
n101 -> n137  [color=darkseagreen4, key=1, label=security, style=dashed];
n104 -> n104  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n105  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n110  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n112  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n114  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n117  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n135  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n137  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n139  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n141  [color=darkseagreen4, key=1, label=order, style=dashed];
n104 -> n144  [color=darkseagreen4, key=1, label=order, style=dashed];
n132 -> n143  [color=darkseagreen4, key=1, label=fills, style=dashed];
n144 -> n144  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n94  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n94 -> n95  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n96  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n97  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n101  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n102  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n104  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n105  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n110  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n112  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n114  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n117  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n135  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n137  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n139  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n141  [color=darkseagreen4, key=1, label=order, style=dashed];
n94 -> n144  [color=darkseagreen4, key=1, label=order, style=dashed];
n138 -> n140  [color=darkseagreen4, key=1, label=fill, style=dashed];
n138 -> n142  [color=darkseagreen4, key=1, label=fill, style=dashed];
n143 -> n172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n170 -> n170  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
n180 -> n186  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
n183 -> n185  [color=darkseagreen4, key=1, label=fills, style=dashed];
n184 -> n186  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
n185 -> n187  [color=darkseagreen4, key=1, label=fill, style=dashed];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_31 -> m0_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m0_31 -> m0_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m0_31 -> m0_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m0_31 -> m0_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m0_31 -> m0_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m0_31 -> m0_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m0_31 -> m0_44  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m0_31 -> m0_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m0_31 -> m0_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m0_32 -> m0_35  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m0_32 -> m0_40  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m0_32 -> m0_41  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m0_32 -> m0_44  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m0_49 -> m0_51  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m0_49 -> m0_53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m0_49 -> m0_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m0_49 -> m0_60  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m0_57 -> m0_60  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m0_66 -> m0_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m0_66 -> m0_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m0_66 -> m0_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m4_14 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m4_14 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m4_14 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m4_14 -> m4_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m9_4 -> m9_7  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m9_4 -> m9_11  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_23 -> m10_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m10_29 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm", style=dashed];
m10_29 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm", style=dashed];
m10_29 -> m10_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm", style=dashed];
m10_29 -> m10_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm", style=dashed];
m10_29 -> m10_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkCryptoAlgorithm", style=dashed];
m12_3 -> m12_16  [color=darkseagreen4, key=1, label="out string", style=dashed];
m12_6 -> m12_27  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m12_6 -> m12_9  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m12_6 -> m12_12  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m12_6 -> m12_13  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m12_7 -> m12_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_32 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Queues.JobQueue", style=dashed];
m12_33 -> m12_27  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
}
