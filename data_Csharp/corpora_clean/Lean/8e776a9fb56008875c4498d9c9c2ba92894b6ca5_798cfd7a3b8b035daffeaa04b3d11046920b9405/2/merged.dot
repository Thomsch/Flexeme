digraph  {
d79 [label="OnOrderEvent(new OrderEvent(order, LastHeartbeatUtcTime, 0, order.Tag))", span="149-149", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0];
d179 [label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
d71 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="137-137", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d78 [label="response.StatusCode == HttpStatusCode.OK", span="147-147", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=1];
d73 [label="order.BrokerId", span="141-141", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d59 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)"];
d60 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
d77 [label="success.Add(response.StatusCode == HttpStatusCode.OK)", span="146-146", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0];
d72 [label="var success = new List<bool>()", span="139-139", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d76 [label="var response = RestClient.Execute(req)", span="145-145", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d83 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
d1 [label="LockStream()", span="43-43", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d9 [label="_algorithm.BrokerageModel.AccountType == AccountType.Margin", span="55-55", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d16 [label="GetAuthenticationToken(req)", span="71-71", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d17 [label="var response = RestClient.Execute(req)", span="72-72", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d21 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GDAXBrokerage.PlaceOrder: Error parsing response from place order: '' + response.Content))", span="80-80", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d22 [label="UnlockStream()", span="81-81", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d25 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid, Message = ''Reject reason: '' + raw.RejectReason })", span="87-87", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d26 [label="UnlockStream()", span="88-88", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d29 [label="CachedOrderIDs.ContainsKey(order.Id)", span="93-93", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d30 [label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="95-95", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d32 [label="CachedOrderIDs.TryAdd(order.Id, order)", span="100-100", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d33 [label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="104-104", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d34 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="107-107", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d35 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.PlaceOrder: Order completed successfully orderid:'' + order.Id.ToString()))", span="109-109", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d36 [label="UnlockStream()", span="110-110", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d38 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="114-114", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d40 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, message))", span="117-117", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d41 [label="UnlockStream()", span="118-118", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d75 [label="GetAuthenticationToken(req)", span="144-144", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d89 [label="base.Disconnect()", span="161-161", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()"];
d90 [label="WebSocket.Close()", span="163-163", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()"];
d97 [label="GetAuthenticationToken(req)", span="175-175", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d98 [label="var response = RestClient.Execute(req)", span="176-176", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d110 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode,\r\n                        ''GDAXBrokerage.GetOpenOrders: Unsupported order type returned from brokerage: '' + item.Type))", span="201-202", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d113 [label="order.Symbol = ConvertProductId(item.ProductId)", span="208-208", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d115 [label="order.Status = ConvertOrderStatus(item)", span="210-210", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d120 [label="var cached = CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="219-219", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d122 [label="CachedOrderIDs[cached.First().Key] = item", span="222-222", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d146 [label="GetAuthenticationToken(request)", span="254-254", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d147 [label="var response = RestClient.Execute(request)", span="255-255", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d155 [label="var rate = GetConversionRate(item.Currency)", span="272-272", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d157 [label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="277-277", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d171 [label="GetAuthenticationToken(req)", span="300-300", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d172 [label="var response = RestClient.Execute(req)", span="301-301", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d81 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="137-137", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d74 [label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="143-143", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d80 [label="return success.All(a => a);", span="153-153", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d82 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
d54 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
d117 [label="list.Add(order)", span="212-212", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d153 [label="list.Add(new Cash(item.Currency, item.Balance, 1))", span="268-268", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d156 [label="list.Add(new Cash(item.Currency.ToUpper(), item.Balance, rate))", span="273-273", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d158 [label="list.Add(new Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="279-279", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d0 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="41-41", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d2 [label="var req = new RestRequest(''/orders'', Method.POST)", span="45-45", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d44 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="92-92", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()"];
d8 [label="payload.product_id = ConvertSymbol(order.Symbol)", span="53-53", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d10 [label="payload.overdraft_enabled = true", span="57-57", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d11 [label="var orderProperties = order.Properties as GDAXOrderProperties", span="60-60", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d15 [label="req.AddJsonBody(payload)", span="69-69", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d53 [label="Entry Unk.GetAuthenticationToken", span="", cluster="Unk.GetAuthenticationToken"];
d18 [label="response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="74-74", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d19 [label="var raw = JsonConvert.DeserializeObject<Messages.Order>(response.Content)", span="76-76", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d39 [label="var message = $''GDAXBrokerage.PlaceOrder: Order failed Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity} content: {response.Content}''", span="116-116", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d20 [label="raw?.Id == null", span="78-78", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d56 [label="Entry BrokerageMessageEvent.cstr", span="", cluster="BrokerageMessageEvent.cstr"];
d57 [label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170", cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)"];
d23 [label="return false;", span="82-82", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d58 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="101-101", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()"];
d24 [label="raw.Status == ''rejected''", span="85-85", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d27 [label="return false;", span="89-89", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d28 [label="var brokerId = raw.Id", span="92-92", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d31 [label="order.BrokerId.Add(brokerId)", span="99-99", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d61 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)"];
d62 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
d63 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)"];
d64 [label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)"];
d65 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)"];
d66 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()"];
d37 [label="return true;", span="111-111", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d42 [label="return false;", span="119-119", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d88 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="159-159", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()"];
d92 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Disconnect()", span="219-219", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Disconnect()"];
d91 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="159-159", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()"];
d93 [label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="45-45", cluster="QuantConnect.Brokerages.IWebSocket.Close()"];
d96 [label="var req = new RestRequest(''/orders?status=open&status=pending'', Method.GET)", span="174-174", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d99 [label="response.StatusCode != System.Net.HttpStatusCode.OK", span="178-178", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d100 [label="throw new Exception($''GDAXBrokerage.GetOpenOrders: request failed: [{(int) response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="180-180", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d101 [label="var orders = JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="183-183", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d102 [label=orders, span="184-184", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d108 [label="item.Type == ''stop''", span="195-195", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d103 [label="Order order", span="186-186", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d105 [label="order = new MarketOrder { Price = item.Price }", span="189-189", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d107 [label="order = new LimitOrder { LimitPrice = item.Price }", span="193-193", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d109 [label="order = new StopMarketOrder { StopPrice = item.Price }", span="197-197", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d112 [label="order.BrokerId = new List<string> { item.Id }", span="207-207", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d114 [label="order.Time = DateTime.UtcNow", span="209-209", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d129 [label="Entry Unk.ConvertProductId", span="", cluster="Unk.ConvertProductId"];
d116 [label="order.Price = item.Price", span="211-211", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d130 [label="Entry Unk.ConvertOrderStatus", span="", cluster="Unk.ConvertOrderStatus"];
d118 [label=list, span="215-215", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d119 [label="item.Status.IsOpen()", span="217-217", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d121 [label="cached.Any()", span="220-220", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d132 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
d135 [label="Entry lambda expression", span="219-219", cluster="lambda expression"];
d134 [label="Entry Unk.First", span="", cluster="Unk.First"];
d145 [label="var request = new RestRequest(''/accounts'', Method.GET)", span="253-253", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d148 [label="response.StatusCode != System.Net.HttpStatusCode.OK", span="257-257", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d149 [label="throw new Exception($''GDAXBrokerage.GetCashBalance: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="259-259", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d150 [label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="262-262", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d154 [label="new[] {''GBP'', ''EUR''}.Contains(item.Currency)", span="270-270", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d163 [label="Entry Unk.GetConversionRate", span="", cluster="Unk.GetConversionRate"];
d165 [label="Entry Unk.Create", span="", cluster="Unk.Create"];
d166 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="428-428", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)"];
d170 [label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="299-299", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d173 [label="response.StatusCode != System.Net.HttpStatusCode.OK", span="303-303", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d174 [label="throw new Exception($''GDAXBrokerage.GetFee: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="305-305", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d175 [label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="308-308", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d45 [label="Entry RestRequest.cstr", span="", cluster="RestRequest.cstr"];
d84 [label="Entry Unk.All", span="", cluster="Unk.All"];
d85 [label="Entry lambda expression", span="153-153", cluster="lambda expression"];
d95 [label="var list = new List<Order>()", span="172-172", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d141 [label="return new List<Holding>();", span="242-242", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()"];
d144 [label="var list = new List<Cash>()", span="251-251", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d152 [label="item.Currency == ''USD''", span="266-266", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d161 [label="Entry Cash.cstr", span="", cluster="Cash.cstr"];
d164 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper"];
d43 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="41-41", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d4 [label="payload.size = Math.Abs(order.Quantity)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d5 [label="payload.side = order.Direction.ToString().ToLower()", span="50-50", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d6 [label="payload.type = ConvertOrderType(order.Type)", span="51-51", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d7 [label="payload.price = (order as LimitOrder)?.LimitPrice ?? ((order as StopMarketOrder)?.StopPrice ?? 0)", span="52-52", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d13 [label="order.Type == OrderType.Limit", span="63-63", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d3 [label="dynamic payload = new ExpandoObject()", span="47-47", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d51 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="127-127", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)"];
d12 [label="orderProperties != null", span="61-61", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d14 [label="payload.post_only = orderProperties.PostOnly", span="65-65", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d52 [label="Entry Unk.AddJsonBody", span="", cluster="Unk.AddJsonBody"];
d55 [label="Entry Unk.>", span="", cluster="Unk.>"];
d124 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="170-170", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d125 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
d104 [label="item.Type == ''market''", span="187-187", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d106 [label="item.Type == ''limit''", span="191-191", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d111 [label="order.Quantity = item.Side == ''sell'' ? -item.Size : item.Size", span="206-206", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d126 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29", cluster="QuantConnect.Orders.MarketOrder.MarketOrder()"];
d127 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()"];
d128 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()"];
d123 [label="return list;", span="227-227", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d136 [label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="219-219", cluster="lambda expression"];
d131 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()"];
d133 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
d137 [label="Exit lambda expression", span="219-219", cluster="lambda expression"];
d160 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="249-249", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d151 [label="item.Balance > 0", span="264-264", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d159 [label="return list;", span="284-284", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d162 [label="Entry Unk.Contains", span="", cluster="Unk.Contains"];
d169 [label="order.BrokerId", span="297-297", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d178 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="293-293", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d176 [label="totalFee += (decimal)fill.fill_fees", span="310-310", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d87 [label="Exit lambda expression", span="153-153", cluster="lambda expression"];
d86 [label=a, span="153-153", cluster="lambda expression"];
d94 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="170-170", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()"];
d140 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="235-235", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()"];
d142 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="235-235", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()"];
d143 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="249-249", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()"];
d47 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)"];
d48 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()"];
d49 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()"];
d50 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="98-98", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)"];
d46 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()"];
d180 [label=item, span=""];
d138 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
d139 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
d167 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="293-293", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d168 [label="var totalFee = 0m", span="295-295", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d177 [label="return totalFee;", span="313-313", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)"];
d79 -> d73  [key=0, style=solid, color=green];
d79 -> d59  [key=2, style=dotted, color=green];
d79 -> d60  [key=2, style=dotted, color=green];
d179 -> d79  [key=1, style=dashed, color=green, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d179 -> d172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
d71 -> d79  [key=1, style=dashed, color=green, label="QuantConnect.Orders.Order"];
d71 -> d72  [key=0, style=solid];
d71 -> d73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d78 -> d79  [key=0, style=solid, color=green];
d78 -> d73  [key=0, style=solid, color=green];
d73 -> d74  [key=0, style=solid];
d73 -> d80  [key=0, style=solid];
d77 -> d78  [key=0, style=solid, color=green];
d77 -> d83  [key=2, style=dotted, color=green];
d72 -> d77  [key=1, style=dashed, color=green, label=success];
d72 -> d73  [key=0, style=solid];
d72 -> d82  [key=2, style=dotted];
d72 -> d80  [key=1, style=dashed, color=darkseagreen4, label=success];
d76 -> d77  [key=0, style=solid, color=green];
d76 -> d78  [key=1, style=dashed, color=green, label=response];
d76 -> d54  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> d44  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d9 -> d11  [key=0, style=solid];
d16 -> d17  [key=0, style=solid];
d16 -> d53  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d54  [key=2, style=dotted];
d17 -> d19  [key=1, style=dashed, color=darkseagreen4, label=response];
d17 -> d21  [key=1, style=dashed, color=darkseagreen4, label=response];
d17 -> d39  [key=1, style=dashed, color=darkseagreen4, label=response];
d21 -> d22  [key=0, style=solid];
d21 -> d56  [key=2, style=dotted];
d21 -> d57  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d58  [key=2, style=dotted];
d25 -> d59  [key=2, style=dotted];
d25 -> d60  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d26 -> d27  [key=0, style=solid];
d26 -> d58  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d29 -> d31  [key=0, style=solid];
d29 -> d61  [key=2, style=dotted];
d30 -> d33  [key=0, style=solid];
d30 -> d62  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d63  [key=2, style=dotted];
d33 -> d34  [key=0, style=solid];
d33 -> d64  [key=2, style=dotted];
d33 -> d63  [key=2, style=dotted];
d34 -> d59  [key=2, style=dotted];
d34 -> d60  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d35 -> d65  [key=2, style=dotted];
d35 -> d66  [key=2, style=dotted];
d35 -> d57  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d58  [key=2, style=dotted];
d38 -> d59  [key=2, style=dotted];
d38 -> d60  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d40 -> d41  [key=0, style=solid];
d40 -> d65  [key=2, style=dotted];
d40 -> d57  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d58  [key=2, style=dotted];
d75 -> d76  [key=0, style=solid];
d75 -> d53  [key=2, style=dotted];
d89 -> d90  [key=0, style=solid];
d89 -> d92  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d90 -> d93  [key=2, style=dotted];
d97 -> d98  [key=0, style=solid];
d97 -> d53  [key=2, style=dotted];
d98 -> d99  [key=0, style=solid];
d98 -> d54  [key=2, style=dotted];
d98 -> d100  [key=1, style=dashed, color=darkseagreen4, label=response];
d98 -> d101  [key=1, style=dashed, color=darkseagreen4, label=response];
d98 -> d110  [key=1, style=dashed, color=darkseagreen4, label=response];
d110 -> d102  [key=0, style=solid];
d110 -> d56  [key=2, style=dotted];
d110 -> d57  [key=2, style=dotted];
d113 -> d114  [key=0, style=solid];
d113 -> d129  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d115 -> d130  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid];
d120 -> d132  [key=2, style=dotted];
d120 -> d135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d120 -> d122  [key=1, style=dashed, color=darkseagreen4, label=cached];
d122 -> d118  [key=0, style=solid];
d122 -> d134  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d146 -> d53  [key=2, style=dotted];
d147 -> d148  [key=0, style=solid];
d147 -> d54  [key=2, style=dotted];
d147 -> d149  [key=1, style=dashed, color=darkseagreen4, label=response];
d147 -> d150  [key=1, style=dashed, color=darkseagreen4, label=response];
d155 -> d156  [key=0, style=solid];
d155 -> d163  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d157 -> d165  [key=2, style=dotted];
d157 -> d166  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d171 -> d53  [key=2, style=dotted];
d172 -> d173  [key=0, style=solid];
d172 -> d54  [key=2, style=dotted];
d172 -> d174  [key=1, style=dashed, color=darkseagreen4, label=response];
d172 -> d175  [key=1, style=dashed, color=darkseagreen4, label=response];
d81 -> d71  [key=0, style=bold, color=blue];
d74 -> d76  [key=1, style=dashed, color=darkseagreen4, label=req];
d74 -> d75  [key=0, style=solid];
d74 -> d45  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d80 -> d84  [key=2, style=dotted];
d80 -> d85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d117 -> d83  [key=2, style=dotted];
d117 -> d102  [key=0, style=solid];
d153 -> d83  [key=2, style=dotted];
d153 -> d150  [key=0, style=solid];
d153 -> d161  [key=2, style=dotted];
d156 -> d83  [key=2, style=dotted];
d156 -> d150  [key=0, style=solid];
d156 -> d161  [key=2, style=dotted];
d156 -> d164  [key=2, style=dotted];
d158 -> d83  [key=2, style=dotted];
d158 -> d150  [key=0, style=solid];
d158 -> d161  [key=2, style=dotted];
d158 -> d164  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d0 -> d25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d0 -> d23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PlaceOrder"];
d0 -> d37  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PlaceOrder"];
d2 -> d16  [key=1, style=dashed, color=darkseagreen4, label=req];
d2 -> d17  [key=1, style=dashed, color=darkseagreen4, label=req];
d2 -> d3  [key=0, style=solid];
d2 -> d45  [key=2, style=dotted];
d2 -> d15  [key=1, style=dashed, color=darkseagreen4, label=req];
d8 -> d9  [key=0, style=solid];
d8 -> d51  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d11 -> d14  [key=1, style=dashed, color=darkseagreen4, label=orderProperties];
d15 -> d16  [key=0, style=solid];
d15 -> d52  [key=2, style=dotted];
d18 -> d38  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d19 -> d25  [key=1, style=dashed, color=darkseagreen4, label=raw];
d19 -> d20  [key=0, style=solid];
d19 -> d55  [key=2, style=dotted];
d19 -> d24  [key=1, style=dashed, color=darkseagreen4, label=raw];
d19 -> d28  [key=1, style=dashed, color=darkseagreen4, label=raw];
d39 -> d40  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d20 -> d24  [key=0, style=solid];
d57 -> d95  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<QuantConnect.Orders.Order> GetOpenOrders"];
d23 -> d43  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d24 -> d28  [key=0, style=solid];
d27 -> d43  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d28 -> d30  [key=1, style=dashed, color=darkseagreen4, label=brokerId];
d28 -> d31  [key=1, style=dashed, color=darkseagreen4, label=brokerId];
d31 -> d32  [key=0, style=solid];
d31 -> d62  [key=2, style=dotted];
d37 -> d43  [key=0, style=solid];
d42 -> d43  [key=0, style=solid];
d88 -> d89  [key=0, style=solid];
d91 -> d88  [key=0, style=bold, color=blue];
d96 -> d97  [key=0, style=solid];
d96 -> d98  [key=1, style=dashed, color=darkseagreen4, label=req];
d96 -> d45  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d99 -> d101  [key=0, style=solid];
d100 -> d124  [key=0, style=solid];
d100 -> d125  [key=2, style=dotted];
d101 -> d102  [key=0, style=solid];
d101 -> d55  [key=2, style=dotted];
d102 -> d110  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d113  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d115  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d103  [key=0, style=solid];
d102 -> d118  [key=0, style=solid];
d102 -> d104  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d105  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d106  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d107  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d108  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d109  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d111  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d112  [key=1, style=dashed, color=darkseagreen4, label=item];
d102 -> d116  [key=1, style=dashed, color=darkseagreen4, label=item];
d108 -> d110  [key=0, style=solid];
d108 -> d109  [key=0, style=solid];
d103 -> d113  [key=1, style=dashed, color=darkseagreen4, label=order];
d103 -> d115  [key=1, style=dashed, color=darkseagreen4, label=order];
d103 -> d117  [key=1, style=dashed, color=darkseagreen4, label=order];
d103 -> d104  [key=0, style=solid];
d103 -> d111  [key=1, style=dashed, color=darkseagreen4, label=order];
d103 -> d112  [key=1, style=dashed, color=darkseagreen4, label=order];
d103 -> d114  [key=1, style=dashed, color=darkseagreen4, label=order];
d103 -> d116  [key=1, style=dashed, color=darkseagreen4, label=order];
d105 -> d113  [key=1, style=dashed, color=darkseagreen4, label=order];
d105 -> d115  [key=1, style=dashed, color=darkseagreen4, label=order];
d105 -> d117  [key=1, style=dashed, color=darkseagreen4, label=order];
d105 -> d111  [key=0, style=solid];
d105 -> d126  [key=2, style=dotted];
d105 -> d112  [key=1, style=dashed, color=darkseagreen4, label=order];
d105 -> d114  [key=1, style=dashed, color=darkseagreen4, label=order];
d105 -> d116  [key=1, style=dashed, color=darkseagreen4, label=order];
d107 -> d113  [key=1, style=dashed, color=darkseagreen4, label=order];
d107 -> d115  [key=1, style=dashed, color=darkseagreen4, label=order];
d107 -> d117  [key=1, style=dashed, color=darkseagreen4, label=order];
d107 -> d111  [key=0, style=solid];
d107 -> d127  [key=2, style=dotted];
d107 -> d112  [key=1, style=dashed, color=darkseagreen4, label=order];
d107 -> d114  [key=1, style=dashed, color=darkseagreen4, label=order];
d107 -> d116  [key=1, style=dashed, color=darkseagreen4, label=order];
d109 -> d113  [key=1, style=dashed, color=darkseagreen4, label=order];
d109 -> d115  [key=1, style=dashed, color=darkseagreen4, label=order];
d109 -> d117  [key=1, style=dashed, color=darkseagreen4, label=order];
d109 -> d111  [key=0, style=solid];
d109 -> d128  [key=2, style=dotted];
d109 -> d112  [key=1, style=dashed, color=darkseagreen4, label=order];
d109 -> d114  [key=1, style=dashed, color=darkseagreen4, label=order];
d109 -> d116  [key=1, style=dashed, color=darkseagreen4, label=order];
d112 -> d113  [key=0, style=solid];
d112 -> d82  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d116 -> d117  [key=0, style=solid];
d118 -> d120  [key=1, style=dashed, color=darkseagreen4, label=item];
d118 -> d122  [key=1, style=dashed, color=darkseagreen4, label=item];
d118 -> d119  [key=0, style=solid];
d118 -> d123  [key=0, style=solid];
d118 -> d136  [key=1, style=dashed, color=darkseagreen4, label=item];
d119 -> d120  [key=0, style=solid];
d119 -> d118  [key=0, style=solid];
d119 -> d131  [key=2, style=dotted];
d121 -> d122  [key=0, style=solid];
d121 -> d118  [key=0, style=solid];
d121 -> d133  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d145 -> d146  [key=0, style=solid];
d145 -> d147  [key=1, style=dashed, color=darkseagreen4, label=request];
d145 -> d45  [key=2, style=dotted];
d148 -> d149  [key=0, style=solid];
d148 -> d150  [key=0, style=solid];
d149 -> d160  [key=0, style=solid];
d149 -> d125  [key=2, style=dotted];
d150 -> d155  [key=1, style=dashed, color=darkseagreen4, label=item];
d150 -> d157  [key=1, style=dashed, color=darkseagreen4, label=item];
d150 -> d153  [key=1, style=dashed, color=darkseagreen4, label=item];
d150 -> d156  [key=1, style=dashed, color=darkseagreen4, label=item];
d150 -> d158  [key=1, style=dashed, color=darkseagreen4, label=item];
d150 -> d151  [key=0, style=solid];
d150 -> d159  [key=0, style=solid];
d150 -> d55  [key=2, style=dotted];
d150 -> d152  [key=1, style=dashed, color=darkseagreen4, label=item];
d150 -> d154  [key=1, style=dashed, color=darkseagreen4, label=item];
d154 -> d155  [key=0, style=solid];
d154 -> d157  [key=0, style=solid];
d154 -> d162  [key=2, style=dotted];
d170 -> d171  [key=0, style=solid];
d170 -> d172  [key=1, style=dashed, color=darkseagreen4, label=req];
d170 -> d45  [key=2, style=dotted];
d173 -> d174  [key=0, style=solid];
d173 -> d175  [key=0, style=solid];
d174 -> d178  [key=0, style=solid];
d174 -> d125  [key=2, style=dotted];
d175 -> d176  [key=0, style=solid];
d175 -> d55  [key=2, style=dotted];
d85 -> d86  [key=0, style=solid];
d95 -> d82  [key=2, style=dotted];
d95 -> d117  [key=1, style=dashed, color=darkseagreen4, label=list];
d95 -> d96  [key=0, style=solid];
d95 -> d118  [key=1, style=dashed, color=darkseagreen4, label=list];
d95 -> d123  [key=1, style=dashed, color=darkseagreen4, label=list];
d141 -> d82  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d144 -> d82  [key=2, style=dotted];
d144 -> d153  [key=1, style=dashed, color=darkseagreen4, label=list];
d144 -> d156  [key=1, style=dashed, color=darkseagreen4, label=list];
d144 -> d158  [key=1, style=dashed, color=darkseagreen4, label=list];
d144 -> d145  [key=0, style=solid];
d144 -> d159  [key=1, style=dashed, color=darkseagreen4, label=list];
d152 -> d153  [key=0, style=solid];
d152 -> d154  [key=0, style=solid];
d43 -> d0  [key=0, style=bold, color=blue];
d4 -> d5  [key=0, style=solid];
d4 -> d47  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d5 -> d48  [key=2, style=dotted];
d5 -> d49  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d50  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d13 -> d15  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d3 -> d8  [key=1, style=dashed, color=darkseagreen4, label=payload];
d3 -> d10  [key=1, style=dashed, color=darkseagreen4, label=payload];
d3 -> d15  [key=1, style=dashed, color=darkseagreen4, label=payload];
d3 -> d4  [key=0, style=solid];
d3 -> d5  [key=1, style=dashed, color=darkseagreen4, label=payload];
d3 -> d6  [key=1, style=dashed, color=darkseagreen4, label=payload];
d3 -> d7  [key=1, style=dashed, color=darkseagreen4, label=payload];
d3 -> d46  [key=2, style=dotted];
d3 -> d14  [key=1, style=dashed, color=darkseagreen4, label=payload];
d12 -> d15  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d124 -> d94  [key=0, style=bold, color=blue];
d104 -> d105  [key=0, style=solid];
d104 -> d106  [key=0, style=solid];
d106 -> d108  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d111 -> d112  [key=0, style=solid];
d123 -> d124  [key=0, style=solid];
d136 -> d136  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
d136 -> d137  [key=0, style=solid];
d136 -> d138  [key=2, style=dotted];
d136 -> d139  [key=2, style=dotted];
d137 -> d135  [key=0, style=bold, color=blue];
d160 -> d143  [key=0, style=bold, color=blue];
d151 -> d150  [key=0, style=solid];
d151 -> d152  [key=0, style=solid];
d159 -> d160  [key=0, style=solid];
d169 -> d170  [key=0, style=solid];
d169 -> d177  [key=0, style=solid];
d178 -> d167  [key=0, style=bold, color=blue];
d176 -> d169  [key=0, style=solid];
d176 -> d176  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
d176 -> d177  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
d87 -> d85  [key=0, style=bold, color=blue];
d86 -> d87  [key=0, style=solid];
d94 -> d95  [key=0, style=solid];
d140 -> d141  [key=0, style=solid];
d142 -> d140  [key=0, style=bold, color=blue];
d143 -> d144  [key=0, style=solid];
d180 -> d136  [key=1, style=dashed, color=darkseagreen4, label=item];
d167 -> d169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d167 -> d168  [key=0, style=solid];
d168 -> d169  [key=0, style=solid];
d168 -> d176  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
d168 -> d168  [key=3, color=darkorchid, style=bold, label="Local variable decimal totalFee"];
d168 -> d177  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
d177 -> d178  [key=0, style=solid];
}
