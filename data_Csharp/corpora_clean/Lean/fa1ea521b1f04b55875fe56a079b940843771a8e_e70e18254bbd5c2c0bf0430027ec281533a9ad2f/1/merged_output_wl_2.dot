digraph  {
n13 [label="QuantConnect.Orders.MarketOrder", span=""];
n0 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
n1 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
n2 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
n3 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
n4 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", label="Entry QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
n5 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", label="return Quantity*security.Price;", span="58-58"];
n6 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", label="Exit QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
n7 [cluster="QuantConnect.Orders.MarketOrder.Clone()", label="Entry QuantConnect.Orders.MarketOrder.Clone()", span="65-65"];
n8 [cluster="QuantConnect.Orders.MarketOrder.Clone()", label="var order = new MarketOrder()", span="67-67"];
n9 [cluster="QuantConnect.Orders.MarketOrder.Clone()", label="CopyTo(order)", span="68-68"];
n10 [cluster="QuantConnect.Orders.MarketOrder.Clone()", label="return order;", span="69-69"];
n12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
n11 [cluster="QuantConnect.Orders.MarketOrder.Clone()", label="Exit QuantConnect.Orders.MarketOrder.Clone()", span="65-65"];
d70 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", color=green, community=0, label="0: return (from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                    where type.IsAssignableFrom(sub.Type)\r\n                    select sub).FirstOrDefault();", span="106-108"];
d20 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="103-103"];
d71 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="103-103"];
d72 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d52 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d48 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
d73 [cluster="lambda expression", label="Entry lambda expression", span="106-106"];
d74 [cluster="lambda expression", color=green, community=0, label="1: s.Resolution", span="106-106"];
d75 [cluster="lambda expression", label="Exit lambda expression", span="106-106"];
d5 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(forexTrade, typeof(QuoteBar)) != null)", span="29-29"];
d13 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(forexQuote, typeof(TradeBar)) != null)", span="44-44"];
d29 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(forex, typeof(QuoteBar)) != null)", span="56-56"];
d32 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(equity, typeof(TradeBar)) != null)", span="61-61"];
d35 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(option, typeof(ZipEntryName)) != null)", span="66-66"];
d38 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(cfd, typeof(QuoteBar)) != null)", span="71-71"];
d44 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(crypto, typeof(QuoteBar)) != null)", span="81-81"];
d45 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(crypto, typeof(TradeBar)) != null)", span="82-82"];
d3 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="var forexTrade = algo.AddForex(''EURUSD'')", span="27-27"];
d11 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="var forexQuote = algo.AddForex(''EURUSD'')", span="42-42"];
d27 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var forex = algo.AddSecurity(SecurityType.Forex, ''eurusd'')", span="54-54"];
d30 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var equity = algo.AddSecurity(SecurityType.Equity, ''goog'')", span="59-59"];
d33 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var option = algo.AddSecurity(SecurityType.Option, ''goog'')", span="64-64"];
d36 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var cfd = algo.AddSecurity(SecurityType.Cfd, ''abc'')", span="69-69"];
d42 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var crypto = algo.AddSecurity(SecurityType.Crypto, ''btcusd'', Resolution.Daily)", span="79-79"];
d50 [cluster="lambda expression", label="typeof(ZipEntryName).IsAssignableFrom(x.Type)", span="76-76"];
d41 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(future.Subscriptions.FirstOrDefault(x => typeof(ZipEntryName).IsAssignableFrom(x.Type)) != null)", span="76-76"];
d56 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="var bitcoinSubscription = qcAlgorithm.SubscriptionManager.Subscriptions.FirstOrDefault(x => x.Type == typeof(Bitcoin))", span="93-93"];
d59 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="var quandlSubscription = qcAlgorithm.SubscriptionManager.Subscriptions.FirstOrDefault(x => x.Type == typeof(Quandl))", span="98-98"];
d4 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Assert.IsTrue(forexTrade.Subscriptions.Count() == 1)", span="28-28"];
d6 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="32-32"];
d19 [cluster="Unk.IsTrue", label="Entry Unk.IsTrue", span=""];
d12 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Assert.IsTrue(forexQuote.Subscriptions.Count() == 1)", span="43-43"];
d14 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", span="21-21"];
d28 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(forex.Subscriptions.Count() == 1)", span="55-55"];
d31 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(equity.Subscriptions.Count() == 1)", span="60-60"];
d34 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(option.Subscriptions.Count() == 1)", span="65-65"];
d37 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(cfd.Subscriptions.Count() == 1)", span="70-70"];
d39 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var future = algo.AddSecurity(SecurityType.Future, ''ES'')", span="74-74"];
d43 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(crypto.Subscriptions.Count() == 2)", span="80-80"];
d46 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", span="49-49"];
d2 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="var algo = new QCAlgorithm()", span="24-24"];
d17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1585-1585"];
d10 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="algo.SetAvailableDataTypes(dataFeeds)", span="39-39"];
d26 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var algo = new QCAlgorithm()", span="51-51"];
d47 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1346-1346"];
d49 [cluster="lambda expression", label="Entry lambda expression", span="76-76"];
d51 [cluster="lambda expression", label="Exit lambda expression", span="76-76"];
d40 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(future.Subscriptions.Count() == 1)", span="75-75"];
d54 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="var qcAlgorithm = new QCAlgorithm()", span="89-89"];
d55 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="qcAlgorithm.AddData<Bitcoin>(''BTC'')", span="92-92"];
d57 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="Assert.AreEqual(bitcoinSubscription.Type, typeof(Bitcoin))", span="94-94"];
d64 [cluster="lambda expression", label="Entry lambda expression", span="93-93"];
d58 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="qcAlgorithm.AddData<Quandl>(''EURCAD'')", span="97-97"];
d60 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="Assert.AreEqual(quandlSubscription.Type, typeof(Quandl))", span="99-99"];
d67 [cluster="lambda expression", label="Entry lambda expression", span="98-98"];
d18 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
d7 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="33-33"];
d21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
d8 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="dataFeedsConfigString != string.Empty", span="34-34"];
d9 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="36-36"];
d0 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", span="21-21"];
d25 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", span="49-49"];
d1 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Config.Set(''security-data-feeds'', ''{ Forex: [\''Trade\''] }'')", span="23-23"];
d16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="96-96"];
d24 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="607-607"];
d53 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", span="87-87"];
d62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1667-1667"];
d63 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
d66 [cluster="lambda expression", label="Exit lambda expression", span="93-93"];
d65 [cluster="lambda expression", label="x.Type == typeof(Bitcoin)", span="93-93"];
d61 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", span="87-87"];
d69 [cluster="lambda expression", label="Exit lambda expression", span="98-98"];
d68 [cluster="lambda expression", label="x.Type == typeof(Quandl)", span="98-98"];
d22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d23 [cluster="Unk.>", label="Entry Unk.>", span=""];
d15 [cluster="QuantConnect.Configuration.Config.Set(string, string)", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m0_29 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.LimitOrder.Clone()", span="115-115"];
m0_30 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="var order = new LimitOrder {LimitPrice = LimitPrice}", span="117-117"];
m0_31 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="CopyTo(order)", span="118-118"];
m0_32 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="return order;", span="119-119"];
m0_33 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Exit QuantConnect.Orders.LimitOrder.Clone()", span="115-115"];
m0_15 [cluster="System.Math.Max(decimal, decimal)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m0_26 [cluster="QuantConnect.Orders.Order.ToString()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="215-215"];
m0_16 [cluster="System.Math.Min(decimal, decimal)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m0_28 [cluster="string.Format(string, object, object)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_22 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m0_2 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m0_3 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", color=green, community=0, file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="0: LimitPrice = limitPrice", span="56-56"];
m0_4 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", color=green, community=0, file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="2: tag == ''''", span="58-58"];
m0_5 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", color=green, community=0, file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="0: Tag = ''Limit Price: '' + limitPrice.ToString(''C'')", span="61-61"];
m0_6 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Exit QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m0_8 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="69-69"];
m0_9 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Quantity < 0", span="72-72"];
m0_10 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="return Quantity*Math.Max(LimitPrice, security.Price);", span="74-74"];
m0_11 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Quantity > 0", span="78-78"];
m0_12 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="return Quantity*Math.Min(LimitPrice, security.Price);", span="80-80"];
m0_13 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="return 0m;", span="83-83"];
m0_14 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Exit QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="69-69"];
m0_17 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m0_18 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="base.ApplyUpdateOrderRequest(request)", span="92-92"];
m0_20 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="LimitPrice = request.LimitPrice.Value", span="95-95"];
m0_19 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="request.LimitPrice.HasValue", span="93-93"];
m0_21 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Exit QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m0_0 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m0_1 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Exit QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m0_23 [cluster="QuantConnect.Orders.LimitOrder.ToString()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.LimitOrder.ToString()", span="106-106"];
m0_24 [cluster="QuantConnect.Orders.LimitOrder.ToString()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="return string.Format(''{0} at limit {1}'', base.ToString(), LimitPrice.SmartRounding());", span="108-108"];
m0_25 [cluster="QuantConnect.Orders.LimitOrder.ToString()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Exit QuantConnect.Orders.LimitOrder.ToString()", span="106-106"];
m0_7 [cluster="decimal.ToString(string)", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry decimal.ToString(string)", span="0-0"];
m0_27 [cluster="decimal.SmartRounding()", file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m0_35 [file="BasicTemplateCryptoFrameworkAlgorithm.cs", label="QuantConnect.Orders.LimitOrder", span=""];
m1_47 [cluster="System.Math.Abs(decimal)", file="CashBuyingPowerModel.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m1_155 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_94 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="247-247"];
m1_95 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs", label="return 0;", span="250-250"];
m1_96 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="247-247"];
m1_90 [cluster="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult.GetMaximumOrderQuantityForTargetValueResult(decimal, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult.GetMaximumOrderQuantityForTargetValueResult(decimal, string)", span="42-42"];
m1_44 [cluster="decimal.Normalize()", file="CashBuyingPowerModel.cs", label="Entry decimal.Normalize()", span="235-235"];
m1_41 [cluster="QuantConnect.Securities.HasSufficientBuyingPowerForOrderResult.HasSufficientBuyingPowerForOrderResult(bool, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.HasSufficientBuyingPowerForOrderResult.HasSufficientBuyingPowerForOrderResult(bool, string)", span="37-37"];
m1_43 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="306-306"];
m1_144 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="quantityInTargetCurrency *= GetOrderPrice(security, openOrder)", span="359-359"];
m1_142 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var quantityInTargetCurrency = openOrder.AbsoluteQuantity", span="356-356"];
m1_138 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label=openOrders, span="348-348"];
m1_124 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var baseCurrency = security as IBaseCurrencySymbol", span="308-308"];
m1_127 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var targetCurrency = order.Direction == OrderDirection.Buy\r\n                ? security.QuoteCurrency.Symbol\r\n                : baseCurrency.BaseCurrencySymbol", span="312-314"];
m1_129 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="portfolio.Securities.Values", span="317-317"];
m1_136 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var openOrders = portfolio.Transactions.GetOpenOrders(x =>\r\n                {\r\n                    OrderDirection dir;\r\n                    return symbolDirectionPairs.TryGetValue(x.Symbol, out dir) &&\r\n                           // same direction of our order\r\n                           dir == x.Direction &&\r\n                           // don't count our current order\r\n                           x.Id != order.Id &&\r\n                           // only count working orders\r\n                           (x.Type == OrderType.Limit || x.Type == OrderType.StopMarket);\r\n                }\r\n            )", span="333-344"];
m1_139 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var orderSecurity = portfolio.Securities[openOrder.Symbol]", span="350-350"];
m1_137 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var openOrdersReservedQuantity = 0m", span="347-347"];
m1_143 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderSecurity.QuoteCurrency.Symbol == targetCurrency", span="357-357"];
m1_145 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="openOrdersReservedQuantity += quantityInTargetCurrency", span="362-362"];
m1_141 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderBaseCurrency != null", span="353-353"];
m1_146 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="return openOrdersReservedQuantity;", span="366-366"];
m1_126 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="return 0;", span="309-309"];
m1_125 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="baseCurrency == null", span="309-309"];
m1_128 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var symbolDirectionPairs = new Dictionary<Symbol, OrderDirection>()", span="316-316"];
m1_132 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="basePortfolioSecurity.BaseCurrencySymbol == targetCurrency", span="322-322"];
m1_134 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="portfolioSecurity.QuoteCurrency.Symbol == targetCurrency", span="326-326"];
m1_133 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="symbolDirectionPairs.Add(portfolioSecurity.Symbol, OrderDirection.Sell)", span="324-324"];
m1_135 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="symbolDirectionPairs.Add(portfolioSecurity.Symbol, OrderDirection.Buy)", span="328-328"];
m1_131 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="basePortfolioSecurity == null", span="320-320"];
m1_130 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var basePortfolioSecurity = portfolioSecurity as IBaseCurrencySymbol", span="319-319"];
m1_140 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var orderBaseCurrency = orderSecurity as IBaseCurrencySymbol", span="351-351"];
m1_147 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="306-306"];
m1_151 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="333-343"];
m1_153 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="return symbolDirectionPairs.TryGetValue(x.Symbol, out dir) &&\r\n                           // same direction of our order\r\n                           dir == x.Direction &&\r\n                           // don't count our current order\r\n                           x.Id != order.Id &&\r\n                           // only count working orders\r\n                           (x.Type == OrderType.Limit || x.Type == OrderType.StopMarket);", span="336-342"];
m1_152 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="OrderDirection dir", span="335-335"];
m1_154 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="333-343"];
m1_42 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="281-281"];
m1_112 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var orderPrice = 0m", span="283-283"];
m1_113 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="order.Type", span="284-284"];
m1_115 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderPrice = security.Price", span="287-287"];
m1_117 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderPrice = ((LimitOrder)order).LimitPrice", span="291-291"];
m1_119 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderPrice = ((StopMarketOrder)order).StopPrice", span="295-295"];
m1_121 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderPrice = ((StopLimitOrder)order).LimitPrice", span="299-299"];
m1_122 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="return orderPrice;", span="303-303"];
m1_114 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="OrderType.Market", span="286-286"];
m1_116 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="OrderType.Limit", span="290-290"];
m1_118 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="OrderType.StopMarket", span="294-294"];
m1_120 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="OrderType.StopLimit", span="298-298"];
m1_123 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="281-281"];
m1_149 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_93 [cluster="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult.GetMaximumOrderQuantityForTargetValueResult(decimal, string, bool)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult.GetMaximumOrderQuantityForTargetValueResult(decimal, string, bool)", span="55-55"];
m1_46 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="145-145"];
m1_50 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="targetPortfolioValue < 0", span="148-148"];
m1_52 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var baseCurrency = security as IBaseCurrencySymbol", span="153-153"];
m1_55 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="targetPortfolioValue == 0", span="160-160"];
m1_56 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="return new GetMaximumOrderQuantityForTargetValueResult(-portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount);", span="162-162"];
m1_57 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var baseCurrencyPosition = portfolio.CashBook.ConvertToAccountCurrency(\r\n                portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount,\r\n                baseCurrency.BaseCurrencySymbol)", span="166-168"];
m1_58 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var quoteCurrencyPosition = portfolio.CashBook.ConvertToAccountCurrency(\r\n                portfolio.CashBook[security.QuoteCurrency.Symbol].Amount,\r\n                security.QuoteCurrency.Symbol)", span="171-173"];
m1_59 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var unitPrice = new MarketOrder(security.Symbol, 1, DateTime.UtcNow).GetValue(security)", span="176-176"];
m1_61 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The price of the {security.Symbol.Value} security is zero because it does not have any market data yet. When the security price is set this security will be ready for trading.'');", span="179-179"];
m1_62 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - baseCurrencyPosition)", span="183-183"];
m1_63 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var direction = targetPortfolioValue > baseCurrencyPosition ? OrderDirection.Buy : OrderDirection.Sell", span="184-184"];
m1_65 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var currency = direction == OrderDirection.Buy ? security.QuoteCurrency.Symbol : baseCurrency.BaseCurrencySymbol", span="188-188"];
m1_73 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="orderQuantity -= orderQuantity % security.SymbolProperties.LotSize", span="204-204"];
m1_75 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The order quantity is less than the lot size of {security.SymbolProperties.LotSize} and has been rounded to zero.'', false);", span="207-207"];
m1_79 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var order = new MarketOrder(security.Symbol, orderQuantity, DateTime.UtcNow)", span="221-221"];
m1_80 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="orderValue = order.GetValue(security)", span="222-222"];
m1_81 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="223-223"];
m1_83 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="feeToPriceRatio -= feeToPriceRatio % security.SymbolProperties.LotSize", span="227-227"];
m1_84 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="feeToPriceRatio < security.SymbolProperties.LotSize", span="228-228"];
m1_85 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="feeToPriceRatio = security.SymbolProperties.LotSize", span="230-230"];
m1_71 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var feeToPriceRatio = 0m", span="198-198"];
m1_51 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="return new GetMaximumOrderQuantityForTargetValueResult(0, ''The cash model does not allow shorting.'');", span="150-150"];
m1_54 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="return new GetMaximumOrderQuantityForTargetValueResult(0, ''The security type must be SecurityType.Crypto or SecurityType.Forex.'');", span="156-156"];
m1_88 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="return new GetMaximumOrderQuantityForTargetValueResult((direction == OrderDirection.Sell ? -1 : 1) * orderQuantity);", span="239-239"];
m1_67 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The portfolio does not hold any {currency} for the order.'');", span="191-191"];
m1_78 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The portfolio does not hold enough {currency} including the order fees.'');", span="217-217"];
m1_53 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="baseCurrency == null", span="154-154"];
m1_64 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var cashRemaining = direction == OrderDirection.Buy ? quoteCurrencyPosition : baseCurrencyPosition", span="187-187"];
m1_60 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="unitPrice == 0", span="177-177"];
m1_72 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="var orderQuantity = targetOrderValue / unitPrice", span="201-201"];
m1_82 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="feeToPriceRatio = orderFees / unitPrice", span="226-226"];
m1_87 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="cashRequired > cashRemaining || orderValue + orderFees > targetOrderValue", span="236-236"];
m1_66 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="cashRemaining <= 0", span="189-189"];
m1_74 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="orderQuantity == 0", span="205-205"];
m1_76 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="orderQuantity -= feeToPriceRatio", span="214-214"];
m1_77 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="orderQuantity <= 0", span="215-215"];
m1_86 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="cashRequired = orderValue", span="234-234"];
m1_70 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="decimal orderFees", span="197-197"];
m1_68 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="decimal cashRequired", span="195-195"];
m1_69 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="decimal orderValue", span="196-196"];
m1_89 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="145-145"];
m1_150 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="278-278"];
m1_92 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m1_97 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="260-260"];
m1_103 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="var unitPrice = new MarketOrder(security.Symbol, 1, DateTime.UtcNow).GetValue(security) / security.QuoteCurrency.ConversionRate", span="269-269"];
m1_98 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="var baseCurrency = security as IBaseCurrencySymbol", span="262-262"];
m1_101 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="var baseCurrencyPosition = portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount", span="265-265"];
m1_102 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="var quoteCurrencyPosition = portfolio.CashBook[security.QuoteCurrency.Symbol].Amount", span="266-266"];
m1_106 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="direction == OrderDirection.Buy", span="272-272"];
m1_108 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="direction == OrderDirection.Sell", span="275-275"];
m1_104 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="unitPrice == 0", span="270-270"];
m1_107 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="return quoteCurrencyPosition / unitPrice;", span="273-273"];
m1_100 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="return 0;", span="263-263"];
m1_109 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="return baseCurrencyPosition;", span="276-276"];
m1_105 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="return 0;", span="270-270"];
m1_110 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="return 0;", span="278-278"];
m1_99 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="baseCurrency == null", span="263-263"];
m1_111 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="260-260"];
m1_91 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m1_5 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57"];
m1_25 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="CashBuyingPowerModel.cs", label="0: var targetValue =\r\n                    portfolio.CashBook.ConvertToAccountCurrency(totalQuantity - openOrdersReservedQuantity,\r\n                        security.QuoteCurrency.Symbol)", span="100-102"];
m1_12 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="totalQuantity = portfolio.CashBook[security.QuoteCurrency.Symbol].Amount", span="70-70"];
m1_14 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="totalQuantity = portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount", span="76-76"];
m1_16 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var openOrdersReservedQuantity = GetOpenOrdersReservedQuantity(portfolio, security, order)", span="81-81"];
m1_24 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="order.Type == OrderType.Market", span="97-97"];
m1_26 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var maximumQuantity =\r\n                    GetMaximumOrderQuantityForTargetValue(portfolio, security, targetValue).Quantity * GetOrderPrice(security, order)", span="104-105"];
m1_27 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="CashBuyingPowerModel.cs", label="0: var holdingsValue =\r\n                    portfolio.CashBook.ConvertToAccountCurrency(\r\n                        portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount, baseCurrency.BaseCurrencySymbol)", span="108-110"];
m1_6 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var baseCurrency = security as IBaseCurrencySymbol", span="59-59"];
m1_28 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="isSufficient = orderQuantity <= Math.Abs(maximumQuantity) + holdingsValue", span="112-112"];
m1_30 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="reason = $''Your portfolio holds {totalQuantity.Normalize()} {security.QuoteCurrency.Symbol}, {openOrdersReservedQuantity.Normalize()} {security.QuoteCurrency.Symbol} of which are reserved for open orders, but your Buy order is for {order.AbsoluteQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol}. Your order requires a total value of {orderQuantity.Normalize()} {security.QuoteCurrency.Symbol}, but only a total value of {(Math.Abs(maximumQuantity) + holdingsValue).Normalize()} {security.QuoteCurrency.Symbol} is available.''", span="115-115"];
m1_29 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="CashBuyingPowerModel.cs", label="0: !isSufficient", span="113-113"];
m1_31 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="return new HasSufficientBuyingPowerForOrderResult(isSufficient, reason);", span="118-118"];
m1_8 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="return new HasSufficientBuyingPowerForOrderResult(false, $''The '{security.Symbol.Value}' security is not supported by this cash model. Currently only SecurityType.Crypto and SecurityType.Forex are supported.'');", span="62-62"];
m1_11 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="order.Direction == OrderDirection.Buy", span="67-67"];
m1_13 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderQuantity = order.AbsoluteQuantity * GetOrderPrice(security, order)", span="71-71"];
m1_15 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderQuantity = order.AbsoluteQuantity", span="77-77"];
m1_19 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="order.Direction == OrderDirection.Sell", span="85-85"];
m1_33 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="order.Type == OrderType.Limit", span="123-123"];
m1_34 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderFee = security.FeeModel.GetOrderFee(security, order)", span="125-125"];
m1_35 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="orderFee = portfolio.CashBook.Convert(orderFee, CashBook.AccountCurrency, security.QuoteCurrency.Symbol)", span="126-126"];
m1_38 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="reason = $''Your portfolio holds {totalQuantity.Normalize()} {security.QuoteCurrency.Symbol}, {openOrdersReservedQuantity.Normalize()} {security.QuoteCurrency.Symbol} of which are reserved for open orders, but your Buy order is for {order.AbsoluteQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol}. Your order requires a total value of {orderQuantity.Normalize()} {security.QuoteCurrency.Symbol}, but only a total value of {(totalQuantity - openOrdersReservedQuantity - orderFee).Normalize()} {security.QuoteCurrency.Symbol} is available.''", span="132-132"];
m1_20 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="isSufficient = orderQuantity <= totalQuantity - openOrdersReservedQuantity", span="88-88"];
m1_22 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="reason = $''Your portfolio holds {totalQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol}, {openOrdersReservedQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol} of which are reserved for open orders, but your Sell order is for {orderQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol}. Cash Modeling trading does not permit short holdings so ensure you only sell what you have, including any additional open orders.''", span="91-91"];
m1_36 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="isSufficient = orderQuantity <= totalQuantity - openOrdersReservedQuantity - orderFee", span="129-129"];
m1_17 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="bool isSufficient", span="83-83"];
m1_32 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var orderFee = 0m", span="122-122"];
m1_7 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="baseCurrency == null", span="60-60"];
m1_39 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="return new HasSufficientBuyingPowerForOrderResult(isSufficient, reason);", span="135-135"];
m1_18 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="var reason = string.Empty", span="84-84"];
m1_23 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="return new HasSufficientBuyingPowerForOrderResult(isSufficient, reason);", span="94-94"];
m1_10 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="decimal orderQuantity", span="66-66"];
m1_37 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="!isSufficient", span="130-130"];
m1_21 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="!isSufficient", span="89-89"];
m1_9 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="decimal totalQuantity", span="65-65"];
m1_40 [cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57"];
m1_45 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="115-115"];
m1_48 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m1_49 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Securities.CashBook.Convert(decimal, string, string)", span="101-101"];
m1_156 [file="CashBuyingPowerModel.cs", label="QuantConnect.Securities.CashBuyingPowerModel", span=""];
m1_157 [file="CashBuyingPowerModel.cs", label="QuantConnect.Orders.Order", span=""];
m1_158 [file="CashBuyingPowerModel.cs", label=symbolDirectionPairs, span=""];
m2_66 [cluster="System.DateTime.ToShortDateString()", file="CashBuyingPowerModelTests.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m2_99 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m2_97 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", span="362-362"];
m2_54 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_orderTickets.TryAdd(ticket.OrderId, ticket)", span="185-185"];
m2_301 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="CashBuyingPowerModelTests.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m2_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="!_today.ContainsKey(security.Type)", span="244-244"];
m2_100 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="CashBuyingPowerModelTests.cs", label="var i = 0", span="304-304"];
m2_30 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="CashBuyingPowerModelTests.cs", label="SetupEndOfDayEvent()", span="172-172"];
m2_478 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="CashBuyingPowerModelTests.cs", label="var delta = _algorithm.Portfolio.CashBook[account.CurrencySymbol].Amount - account.CashBalance", span="960-960"];
m2_481 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="CashBuyingPowerModelTests.cs", label="_brokerage.AccountInstantlyUpdated", span="967-967"];
m2_482 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Portfolio.CashBook[account.CurrencySymbol].SetAmount(account.CashBalance)", span="970-970"];
m2_479 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="CashBuyingPowerModelTests.cs", label="delta != 0", span="961-961"];
m2_480 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="CashBuyingPowerModelTests.cs", label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleAccountChanged(): {0} Cash Delta: {1}'', account.CurrencySymbol, delta))", span="963-963"];
m2_483 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="957-957"];
m2_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_today.Add(security.Type, new MarketToday())", span="247-247"];
m2_96 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", span="336-336"];
m2_279 [cluster="Unk.ToString", file="CashBuyingPowerModelTests.cs", label="Entry Unk.ToString", span=""];
m2_417 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m2_51 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var response = !_algorithm.IsWarmingUp\r\n                ? OrderResponse.Success(request) \r\n                : OrderResponse.WarmingUp(request)", span="179-181"];
m2_70 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_feed.Subscriptions", span="239-239"];
m2_380 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m2_378 [cluster="decimal.SmartRounding()", file="CashBuyingPowerModelTests.cs", label="Entry decimal.SmartRounding()", span="205-205"];
m2_34 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", span="334-334"];
m2_487 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_algorithm.OnAssignmentOrderEvent(fill)", span="983-983"];
m2_486 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="fill.Message = string.Format(''Option Assignment: {0}'', fill.Symbol.Value)", span="982-982"];
m2_485 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="fill.IsAssignment", span="980-980"];
m2_488 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandlePositionAssigned(QuantConnect.Orders.OrderEvent)", span="977-977"];
m2_489 [cluster="string.Format(string, object)", file="CashBuyingPowerModelTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_52 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.SetResponse(response)", span="183-183"];
m2_23 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="CashBuyingPowerModelTests.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="300-300"];
m2_151 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="CashBuyingPowerModelTests.cs", label="Order order = GetOrderByIdInternal(orderId)", span="358-358"];
m2_152 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="CashBuyingPowerModelTests.cs", label="return order != null ? order.Clone() : null;", span="359-359"];
m2_153 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="356-356"];
m2_179 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="CashBuyingPowerModelTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_202 [cluster="QuantConnect.Util.BusyBlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Util.BusyBlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", span="139-139"];
m2_116 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="294-294"];
m2_117 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status.IsClosed()", span="296-296"];
m2_68 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
m2_313 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", span="638-638"];
m2_318 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var security = _algorithm.Securities[order.Symbol]", span="644-644"];
m2_320 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Quantity = RoundOffOrder(order, security)", span="648-648"];
m2_321 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!_orders.TryAdd(order.Id, order)", span="650-650"];
m2_324 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!_orderTickets.TryGetValue(order.Id, out ticket)", span="655-655"];
m2_327 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="RoundOrderPrices(order, security)", span="662-662"];
m2_332 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(response.ErrorMessage)", span="671-671"];
m2_333 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Unable to add order for zero quantity''))", span="672-672"];
m2_336 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="sufficientCapitalForOrder = _algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="680-680"];
m2_339 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="685-685"];
m2_340 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Error executing margin models''))", span="686-686"];
m2_345 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(response.ErrorMessage)", span="694-694"];
m2_346 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Insufficient buying power to complete order''))", span="695-695"];
m2_349 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!_algorithm.BrokerageModel.CanSubmitOrder(security, order, out message)", span="701-701"];
m2_354 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(response.ErrorMessage)", span="707-707"];
m2_355 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''BrokerageModel declared unable to submit order''))", span="708-708"];
m2_358 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="orderPlaced = _brokerage.PlaceOrder(order)", span="716-716"];
m2_366 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(response.ErrorMessage)", span="730-730"];
m2_367 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to place order''))", span="731-731"];
m2_322 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleSubmitOrderRequest(): Unable to add new order, order not processed.'')", span="652-652"];
m2_325 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleSubmitOrderRequest(): Unable to retrieve order ticket, order not processed.'')", span="657-657"];
m2_317 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var order = Order.CreateOrder(request)", span="641-641"];
m2_319 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.PriceCurrency = security.SymbolProperties.QuoteCurrency", span="645-645"];
m2_344 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.InsufficientBuyingPower, string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.GetValue(security).SmartRounding()))", span="693-693"];
m2_328 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="ticket.SetOrder(order)", span="665-665"];
m2_331 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var response = OrderResponse.ZeroQuantity(request)", span="670-670"];
m2_334 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return response;", span="673-673"];
m2_335 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="bool sufficientCapitalForOrder", span="677-677"];
m2_337 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label=Exception, span="682-682"];
m2_342 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!sufficientCapitalForOrder", span="690-690"];
m2_338 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(err)", span="684-684"];
m2_341 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, ''Error in GetSufficientCapitalForOrder'');", span="687-687"];
m2_347 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return response;", span="696-696"];
m2_348 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="BrokerageMessageEvent message", span="700-700"];
m2_350 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status = OrderStatus.Invalid", span="704-704"];
m2_357 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="bool orderPlaced", span="713-713"];
m2_351 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="message == null", span="705-705"];
m2_353 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageModelRefusedToSubmitOrder, ''OrderID: '' + order.Id + '' '' + message)", span="706-706"];
m2_356 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return response;", span="709-709"];
m2_359 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label=Exception, span="718-718"];
m2_362 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!orderPlaced", span="724-724"];
m2_365 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToSubmitOrder, errorMessage)", span="729-729"];
m2_368 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return response;", span="732-732"];
m2_323 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.OrderAlreadyExists, ''Cannot process submit request because order with id {0} already exists'');", span="653-653"];
m2_326 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.UnableToFindOrder(request);", span="658-658"];
m2_370 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.Success(request);", span="736-736"];
m2_316 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="OrderTicket ticket", span="640-640"];
m2_329 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Quantity == 0", span="667-667"];
m2_330 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status = OrderStatus.Invalid", span="669-669"];
m2_343 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status = OrderStatus.Invalid", span="692-692"];
m2_352 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to submit order: '' + order.Id)", span="705-705"];
m2_363 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status = OrderStatus.Invalid", span="727-727"];
m2_364 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var errorMessage = ''Brokerage failed to place order: '' + order.Id", span="728-728"];
m2_369 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status = OrderStatus.Submitted", span="735-735"];
m2_360 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(err)", span="720-720"];
m2_361 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="orderPlaced = false", span="721-721"];
m2_371 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", span="638-638"];
m2_233 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Threading.CancellationToken)", file="CashBuyingPowerModelTests.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Threading.CancellationToken)", span="763-763"];
m2_533 [cluster="System.Math.Round(decimal)", file="CashBuyingPowerModelTests.cs", label="Entry System.Math.Round(decimal)", span="0-0"];
m2_108 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!ticket.TrySetCancelRequest(request)", span="278-278"];
m2_135 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="332-332"];
m2_136 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="CashBuyingPowerModelTests.cs", label="return _orderTickets.Select(x => x.Value).Where(filter ?? (x => true));", span="334-334"];
m2_137 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="332-332"];
m2_101 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="CashBuyingPowerModelTests.cs", label="i < _events.Count", span="304-304"];
m2_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m2_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="CashBuyingPowerModelTests.cs", label="_today = new Dictionary<SecurityType, MarketToday>()", span="111-111"];
m2_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="CashBuyingPowerModelTests.cs", label="_feed = feed", span="112-112"];
m2_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="CashBuyingPowerModelTests.cs", label="_results = results", span="113-113"];
m2_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m2_7 [cluster="System.Collections.Generic.List<T>.List()", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_9 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="123-123"];
m2_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="_isActive = true", span="126-126"];
m2_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="_time = DateTime.Now", span="127-127"];
m2_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="CashBuyingPowerModelTests.cs", label="_algorithm = algorithm", span="109-109"];
m2_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="CashBuyingPowerModelTests.cs", label="_events = new List<RealTimeEvent>()", span="110-110"];
m2_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="SetupEvents(DateTime.Now.Date)", span="130-130"];
m2_102 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="CashBuyingPowerModelTests.cs", label="_events[i].Scan(_time)", span="306-306"];
m2_278 [cluster="System.Math.Abs(decimal)", file="CashBuyingPowerModelTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m2_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="var security = _algorithm.Securities[sub.Symbol]", span="241-241"];
m2_139 [cluster="Unk.Where", file="CashBuyingPowerModelTests.cs", label="Entry Unk.Where", span=""];
m2_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", span="265-265"];
m2_375 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
m2_415 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="810-810"];
m2_419 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="CashBuyingPowerModelTests.cs", label="return order.Status != OrderStatus.Filled\r\n                && order.Status != OrderStatus.Canceled\r\n                && order.Status != OrderStatus.PartiallyFilled\r\n                && order.Status != OrderStatus.Invalid;", span="812-815"];
m2_420 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="810-810"];
m2_474 [cluster="QuantConnect.Interfaces.ITradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent, decimal, decimal)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent, decimal, decimal)", span="57-57"];
m2_272 [cluster="System.Collections.Generic.List<T>.List()", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_534 [cluster="decimal.Equals(decimal)", file="CashBuyingPowerModelTests.cs", label="Entry decimal.Equals(decimal)", span="0-0"];
m2_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="AddEvent(new RealTimeEvent(endOfDayEventTime.Value, () =>\r\n                    {\r\n                        try\r\n                        {\r\n                            _algorithm.OnEndOfDay();\r\n                            _algorithm.OnEndOfDay(symbol);\r\n                            Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()));\r\n                        }\r\n                        catch (Exception err)\r\n                        {\r\n                            Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                            Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message);\r\n                        }\r\n                    }, true))", span="212-225"];
m2_53 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="122-122"];
m2_56 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="212-225"];
m2_58 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="_algorithm.OnEndOfDay(symbol)", span="217-217"];
m2_63 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="212-225"];
m2_55 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="314-314"];
m2_62 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message)", span="223-223"];
m2_64 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="251-251"];
m2_57 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="_algorithm.OnEndOfDay()", span="216-216"];
m2_59 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()))", span="218-218"];
m2_61 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace)", span="222-222"];
m2_60 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label=Exception, span="220-220"];
m2_65 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="256-256"];
m2_284 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="548-548"];
m2_17 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="SetTime(DateTime.Now)", span="141-141"];
m2_21 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", span="161-161"];
m2_28 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="CashBuyingPowerModelTests.cs", label="ClearEvents()", span="166-166"];
m2_32 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents(): '' + err.Message)", span="176-176"];
m2_288 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="TimeSinceLastFill <= TimeSpan.FromSeconds(20)", span="580-580"];
m2_289 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="_syncedLiveBrokerageCashToday = false", span="584-584"];
m2_291 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="_lastSyncTimeTicks = DateTime.UtcNow.Ticks", span="589-589"];
m2_20 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="123-123"];
m2_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="var nextSecond = DateTime.Now.RoundUp(TimeSpan.FromSeconds(1))", span="136-136"];
m2_16 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="Thread.Sleep(delay < 0 ? 1 : delay)", span="138-138"];
m2_18 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="ScanEvents()", span="144-144"];
m2_19 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="_isActive = false", span="147-147"];
m2_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="var delay = Convert.ToInt32((nextSecond - DateTime.Now).TotalMilliseconds)", span="137-137"];
m2_22 [cluster="System.TimeSpan.FromSeconds(double)", file="CashBuyingPowerModelTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_27 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", span="302-302"];
m2_29 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="CashBuyingPowerModelTests.cs", label="RefreshMarketHoursToday()", span="169-169"];
m2_31 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="CashBuyingPowerModelTests.cs", label=Exception, span="174-174"];
m2_33 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", span="161-161"];
m2_140 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="334-334"];
m2_168 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="381-381"];
m2_180 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="402-402"];
m2_183 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="402-402"];
m2_186 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="404-404"];
m2_189 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="404-404"];
m2_240 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="491-491"];
m2_243 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="493-493"];
m2_285 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="balance.Symbol == cash.Symbol", span="548-548"];
m2_287 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Entry lambda expression", span="577-592"];
m2_290 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'')", span="585-585"];
m2_292 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'')", span="590-590"];
m2_142 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="334-334"];
m2_141 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="x.Value", span="334-334"];
m2_169 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="x.Value.BrokerId.Contains(brokerageId)", span="381-381"];
m2_170 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="381-381"];
m2_182 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="402-402"];
m2_181 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="x.Value", span="402-402"];
m2_185 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="402-402"];
m2_184 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="x.Clone()", span="402-402"];
m2_188 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="404-404"];
m2_187 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="x.Value", span="404-404"];
m2_191 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="404-404"];
m2_190 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="x.Clone()", span="404-404"];
m2_244 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="x.Key <= lowestOrderIdToKeep", span="493-493"];
m2_242 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="491-491"];
m2_241 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="x.Key", span="491-491"];
m2_245 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="493-493"];
m2_286 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="548-548"];
m2_293 [cluster="lambda expression", file="CashBuyingPowerModelTests.cs", label="Exit lambda expression", span="577-592"];
m2_109 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.InvalidRequest, ''Cancellation is already in progress.''))", span="281-281"];
m2_110 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return ticket;", span="282-282"];
m2_111 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var order = GetOrderByIdInternal(request.OrderId)", span="286-286"];
m2_112 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order != null && request.Tag != null", span="287-287"];
m2_113 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Tag = request.Tag", span="289-289"];
m2_114 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order == null", span="291-291"];
m2_238 [cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0"];
m2_192 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="410-410"];
m2_193 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="_orderRequestQueue.GetConsumingEnumerable(_cancellationTokenSource.Token)", span="414-414"];
m2_194 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="HandleOrderRequest(request)", span="416-416"];
m2_195 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="ProcessAsynchronousEvents()", span="417-417"];
m2_198 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="_algorithm.RunTimeError = err", span="425-425"];
m2_200 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="IsActive = false", span="429-429"];
m2_196 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label=Exception, span="420-420"];
m2_199 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="428-428"];
m2_197 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="Log.Error(err)", span="423-423"];
m2_201 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="410-410"];
m2_35 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", span="234-234"];
m2_36 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", span="185-185"];
m2_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="!security.IsDynamicallyLoadedData", span="192-192"];
m2_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="endOfDayEventTime = _today[security.Type].Open.End.Subtract(_endOfDayDelta)", span="197-197"];
m2_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="endOfDayEventTime.HasValue", span="207-207"];
m2_37 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="104-104"];
m2_38 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities.Values", span="188-188"];
m2_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="DateTime? endOfDayEventTime = null", span="190-190"];
m2_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="_today[security.Type].Status == ''open''", span="195-195"];
m2_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="endOfDayEventTime = DateTime.Now.Date + security.Exchange.MarketClose.Subtract(_endOfDayDelta)", span="203-203"];
m2_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.SetupEvents(): Setup EOD Event for {0}'', endOfDayEventTime.Value.ToString(''u'')))", span="209-209"];
m2_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="CashBuyingPowerModelTests.cs", label="var symbol = security.Symbol", span="211-211"];
m2_416 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="66-66"];
m2_24 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="CashBuyingPowerModelTests.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m2_273 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m2_206 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="443-443"];
m2_207 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", color=green, community=0, file="CashBuyingPowerModelTests.cs", label="0: !_algorithm.LiveMode", span="448-448"];
m2_208 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", color=green, community=0, file="CashBuyingPowerModelTests.cs", label="0: _orderRequestQueue.IsBusy && !_orderRequestQueue.WaitHandle.WaitOne(Time.OneSecond, _cancellationTokenSource.Token)", span="450-450"];
m2_211 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", color=green, community=0, file="CashBuyingPowerModelTests.cs", label="0: Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Enter'')", span="457-457"];
m2_209 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", color=green, community=0, file="CashBuyingPowerModelTests.cs", label="0: Log.Error(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Timed out waiting for request queue to finish processing.'')", span="452-452"];
m2_210 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", color=green, community=0, file="CashBuyingPowerModelTests.cs", label="0: return;", span="454-454"];
m2_212 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", color=green, community=0, file="CashBuyingPowerModelTests.cs", label="1: var currentTimeNewYork = DateTime.UtcNow.ConvertFromUtc(TimeZones.NewYork)", span="460-460"];
m2_232 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="443-443"];
m2_213 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", color=green, community=0, file="CashBuyingPowerModelTests.cs", label="1: _syncedLiveBrokerageCashToday && currentTimeNewYork.Date != LastSyncDate", span="461-461"];
m2_215 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="_algorithm.LiveMode && !_syncedLiveBrokerageCashToday && currentTimeNewYork.TimeOfDay >= LiveBrokerageCashSyncTime", span="467-467"];
m2_214 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", color=green, community=0, file="CashBuyingPowerModelTests.cs", label="1: _syncedLiveBrokerageCashToday = false", span="463-463"];
m2_216 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="TimeSinceLastFill > TimeSpan.FromSeconds(10)", span="472-472"];
m2_217 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="PerformCashSync()", span="474-474"];
m2_221 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="_orders.Count < maxOrdersToKeep + 1", span="485-485"];
m2_224 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="int max = _orders.Max(x => x.Key)", span="491-491"];
m2_226 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="_orders.Where(x => x.Key <= lowestOrderIdToKeep)", span="493-493"];
m2_229 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="_orders.TryRemove(item.Key, out value)", span="497-497"];
m2_230 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="_orderTickets.TryRemove(item.Key, out ticket)", span="498-498"];
m2_222 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Exit'')", span="487-487"];
m2_223 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="return;", span="488-488"];
m2_220 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="int maxOrdersToKeep = 10000", span="484-484"];
m2_218 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label=Exception, span="477-477"];
m2_225 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="int lowestOrderIdToKeep = max - maxOrdersToKeep", span="492-492"];
m2_227 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="Order value", span="495-495"];
m2_228 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="OrderTicket ticket", span="496-496"];
m2_219 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="Log.Error(err, ''Updating cash balances'')", span="479-479"];
m2_231 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Exit'')", span="501-501"];
m2_381 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="84-84"];
m2_103 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m2_104 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="OrderTicket ticket", span="267-267"];
m2_105 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!_orderTickets.TryGetValue(request.OrderId, out ticket)", span="268-268"];
m2_204 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="435-435"];
m2_205 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="435-435"];
m2_473 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="529-529"];
m2_300 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="CashBuyingPowerModelTests.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m2_476 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="238-238"];
m2_315 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", span="821-821"];
m2_423 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!_orders.TryGetValue(request.OrderId, out order) || !_orderTickets.TryGetValue(request.OrderId, out ticket)", span="825-825"];
m2_430 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="orderCanceled = _brokerage.CancelOrder(order)", span="841-841"];
m2_436 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(message)", span="853-853"];
m2_437 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to cancel order''))", span="854-854"];
m2_424 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelOrderRequest(): Unable to cancel order with ID '' + request.OrderId + ''.'')", span="827-827"];
m2_422 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="OrderTicket ticket", span="824-824"];
m2_426 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status.IsClosed()", span="831-831"];
m2_427 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.InvalidStatus(request, order);", span="833-833"];
m2_428 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="ticket.SetOrder(order)", span="836-836"];
m2_435 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var message = ''Brokerage failed to cancel order with id '' + order.Id", span="852-852"];
m2_439 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status = OrderStatus.Canceled", span="859-859"];
m2_441 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Tag = request.Tag", span="864-864"];
m2_429 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="bool orderCanceled", span="838-838"];
m2_431 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label=Exception, span="843-843"];
m2_434 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!orderCanceled", span="849-849"];
m2_438 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToCancelOrder, message);", span="855-855"];
m2_425 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.UnableToFindOrder(request);", span="828-828"];
m2_442 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.Success(request);", span="867-867"];
m2_421 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Order order", span="823-823"];
m2_440 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.Tag != null", span="861-861"];
m2_432 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(err)", span="845-845"];
m2_433 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="orderCanceled = false", span="846-846"];
m2_443 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", span="821-821"];
m2_535 [cluster="string.Format(string, object, object, object)", file="CashBuyingPowerModelTests.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m2_98 [cluster="QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", span="145-145"];
m2_25 [cluster="System.Threading.Thread.Sleep(int)", file="CashBuyingPowerModelTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m2_69 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_today.Clear()", span="236-236"];
m2_138 [cluster="Unk.Select", file="CashBuyingPowerModelTests.cs", label="Entry Unk.Select", span=""];
m2_155 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="CashBuyingPowerModelTests.cs", label="_orders == null", span="365-365"];
m2_158 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="CashBuyingPowerModelTests.cs", label="return _orders.TryGetValue(orderId, out order) ? order : null;", span="368-368"];
m2_156 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="CashBuyingPowerModelTests.cs", label="return null;", span="365-365"];
m2_157 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="CashBuyingPowerModelTests.cs", label="Order order", span="367-367"];
m2_159 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", span="362-362"];
m2_418 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="91-91"];
m2_235 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="CashBuyingPowerModelTests.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="559-559"];
m2_283 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="CashBuyingPowerModelTests.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m2_280 [cluster="Unk.Trace", file="CashBuyingPowerModelTests.cs", label="Entry Unk.Trace", span=""];
m2_118 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Order already '' + order.Status)", span="298-298"];
m2_237 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="507-507"];
m2_246 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="!Monitor.TryEnter(_performCashSyncReentranceGuard)", span="512-512"];
m2_250 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="balances = _brokerage.GetCashBalance()", span="522-522"];
m2_257 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="!_algorithm.Portfolio.CashBook.TryGetValue(balance.Symbol, out cash)", span="538-538"];
m2_259 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Portfolio.SetCash(balance.Symbol, balance.Amount, balance.ConversionRate)", span="541-541"];
m2_260 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Portfolio.CashBook.Values", span="546-546"];
m2_264 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Math.Abs(_algorithm.Portfolio.CashBook.ConvertToAccountCurrency(delta, cash.Symbol)) > 5", span="554-554"];
m2_266 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Portfolio.SetCash(balanceCash.Symbol, balanceCash.Amount, balanceCash.ConversionRate)", span="560-560"];
m2_267 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Portfolio.SetCash(cash.Symbol, 0, cash.ConversionRate)", span="565-565"];
m2_268 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="_syncedLiveBrokerageCashToday = true", span="568-568"];
m2_269 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Task.Delay(TimeSpan.FromSeconds(10)).ContinueWith(_ =>\r\n            {\r\n                // we want to make sure this is a good value, so check for any recent fills\r\n                if (TimeSinceLastFill <= TimeSpan.FromSeconds(20))\r\n                {\r\n                    // this will cause us to come back in and reset cash again until we \r\n                    // haven't processed a fill for +- 10 seconds of the set cash time\r\n                    _syncedLiveBrokerageCashToday = false;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'');\r\n                }\r\n                else\r\n                {\r\n                    _lastSyncTimeTicks = DateTime.UtcNow.Ticks;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'');\r\n                }\r\n            })", span="577-592"];
m2_247 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="return;", span="514-514"];
m2_248 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Sync cash balance'')", span="517-517"];
m2_249 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="var balances = new List<Cash>()", span="519-519"];
m2_251 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label=Exception, span="524-524"];
m2_253 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="balances.Count == 0", span="529-529"];
m2_255 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label=balances, span="535-535"];
m2_261 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="var balanceCash = balances.FirstOrDefault(balance => balance.Symbol == cash.Symbol)", span="548-548"];
m2_256 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Cash cash", span="537-537"];
m2_258 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unexpected cash found {0} {1}'', balance.Amount, balance.Symbol)", span="540-540"];
m2_263 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="var delta = cash.Amount - balanceCash.Amount", span="553-553"];
m2_265 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): {0} Delta: {1}'', balanceCash.Symbol,\r\n                                delta.ToString(''0.00''))", span="557-558"];
m2_262 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="balanceCash != null", span="550-550"];
m2_254 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="return;", span="531-531"];
m2_252 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Log.Error(err)", span="526-526"];
m2_270 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="507-507"];
m2_274 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m2_154 [cluster="QuantConnect.Orders.Order.Clone()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="224-224"];
m2_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="214-214"];
m2_276 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m2_294 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="598-598"];
m2_296 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="CashBuyingPowerModelTests.cs", label="!_orderRequestQueue.WaitHandle.WaitOne(timeout)", span="601-601"];
m2_298 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="CashBuyingPowerModelTests.cs", label="_cancellationTokenSource.Cancel()", span="605-605"];
m2_297 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.Exit(): Exceed timeout: '' + (int)(timeout.TotalSeconds) + '' seconds.'')", span="603-603"];
m2_295 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="CashBuyingPowerModelTests.cs", label="var timeout = TimeSpan.FromSeconds(60)", span="600-600"];
m2_299 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="598-598"];
m2_475 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", span="296-296"];
m2_277 [cluster="Unk.ConvertToAccountCurrency", file="CashBuyingPowerModelTests.cs", label="Entry Unk.ConvertToAccountCurrency", span=""];
m2_281 [cluster="Unk.SetCash", file="CashBuyingPowerModelTests.cs", label="Entry Unk.SetCash", span=""];
m2_377 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m2_171 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m2_67 [cluster="string.Format(string, object, object)", file="CashBuyingPowerModelTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_115 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Cannot find this id.'')", span="293-293"];
m2_379 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m2_271 [cluster="System.Threading.Monitor.TryEnter(object)", file="CashBuyingPowerModelTests.cs", label="Entry System.Threading.Monitor.TryEnter(object)", span="0-0"];
m2_95 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Packets.MarketToday.MarketToday()", span="84-84"];
m2_93 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="214-214"];
m2_373 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1036-1036"];
m2_528 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(string.Format(format, ''Limit'', limitRound, limitPrice))", span="1082-1082"];
m2_530 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(string.Format(format, ''Stop'', stopRound, stopPrice))", span="1086-1086"];
m2_520 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="limitPrice = ((StopLimitOrder)order).LimitPrice", span="1067-1067"];
m2_521 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="limitRound = Math.Round(limitPrice / increment) * increment", span="1068-1068"];
m2_526 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="var format = ''Warning: To meet brokerage precision requirements, order {0}Price was rounded to {1} from {2}''", span="1078-1078"];
m2_527 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="!limitPrice.Equals(limitRound)", span="1080-1080"];
m2_529 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="!stopPrice.Equals(stopRound)", span="1084-1084"];
m2_523 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="stopPrice = ((StopLimitOrder)order).StopPrice", span="1070-1070"];
m2_524 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="stopRound = Math.Round(stopPrice / increment) * increment", span="1071-1071"];
m2_501 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="order.Type == OrderType.Market ||\r\n                order.Type == OrderType.MarketOnOpen ||\r\n                order.Type == OrderType.MarketOnClose", span="1039-1041"];
m2_503 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="var increment = security.PriceVariationModel.GetMinimumPriceVariation(security)", span="1046-1046"];
m2_510 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="order.Type", span="1054-1054"];
m2_512 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="limitPrice = ((LimitOrder)order).LimitPrice", span="1057-1057"];
m2_514 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="((LimitOrder)order).LimitPrice = limitRound", span="1059-1059"];
m2_516 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="stopPrice = ((StopMarketOrder)order).StopPrice", span="1062-1062"];
m2_518 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="((StopMarketOrder)order).StopPrice = stopRound", span="1064-1064"];
m2_522 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="((StopLimitOrder)order).LimitPrice = limitRound", span="1069-1069"];
m2_525 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="((StopLimitOrder)order).StopPrice = stopRound", span="1072-1072"];
m2_519 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="OrderType.StopLimit", span="1066-1066"];
m2_502 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="return;", span="1043-1043"];
m2_505 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="return;", span="1047-1047"];
m2_504 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="increment == 0", span="1047-1047"];
m2_513 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="limitRound = Math.Round(limitPrice / increment) * increment", span="1058-1058"];
m2_517 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="stopRound = Math.Round(stopPrice / increment) * increment", span="1063-1063"];
m2_509 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="var stopRound = 0m", span="1052-1052"];
m2_511 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="OrderType.Limit", span="1056-1056"];
m2_515 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="OrderType.StopMarket", span="1061-1061"];
m2_506 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="var limitPrice = 0m", span="1049-1049"];
m2_508 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="var stopPrice = 0m", span="1051-1051"];
m2_507 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="var limitRound = 0m", span="1050-1050"];
m2_531 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOrderPrices(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1036-1036"];
m2_50 [cluster="System.TimeSpan.Subtract(System.TimeSpan)", file="CashBuyingPowerModelTests.cs", label="Entry System.TimeSpan.Subtract(System.TimeSpan)", span="0-0"];
m2_26 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="870-870"];
m2_119 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.SetResponse(OrderResponse.InvalidStatus(request, order))", span="299-299"];
m2_120 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.IsWarmingUp", span="301-301"];
m2_121 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.SetResponse(OrderResponse.WarmingUp(request))", span="303-303"];
m2_122 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status = OrderStatus.CancelPending", span="308-308"];
m2_490 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="410-410"];
m2_376 [cluster="string.Format(string, object, object)", file="CashBuyingPowerModelTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_532 [cluster="QuantConnect.Securities.IPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Securities.IPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)", span="28-28"];
m2_445 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="var order = GetOrderByIdInternal(fill.OrderId)", span="873-873"];
m2_451 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Interlocked.Exchange(ref _lastFillTimeTicks, DateTime.UtcNow.Ticks)", span="891-891"];
m2_452 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="var security = _algorithm.Securities[fill.Symbol]", span="894-894"];
m2_453 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Portfolio.ProcessFill(fill)", span="907-907"];
m2_456 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_algorithm.TradeBuilder.ProcessFill(fill, conversionRate, multiplier)", span="912-912"];
m2_459 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Error in Portfolio.ProcessFill: {1}'', order.Id, err.Message))", span="917-917"];
m2_461 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_orderTickets.TryGetValue(fill.OrderId, out ticket)", span="923-923"];
m2_466 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_resultHandler.OrderEvent(fill)", span="937-937"];
m2_467 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_algorithm.OnOrderEvent(fill)", span="941-941"];
m2_469 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="945-945"];
m2_470 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="_algorithm.RunTimeError = err", span="947-947"];
m2_447 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvent(): Unable to locate Order with id '' + fill.OrderId)", span="876-876"];
m2_464 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvent(): Unable to resolve ticket: '' + fill.OrderId)", span="930-930"];
m2_446 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="order == null", span="874-874"];
m2_449 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="order.Status = fill.Status", span="881-881"];
m2_463 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="order.Price = ticket.AverageFillPrice", span="926-926"];
m2_450 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="889-889"];
m2_454 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="var conversionRate = security.QuoteCurrency.ConversionRate", span="909-909"];
m2_455 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="var multiplier = security.SymbolProperties.ContractMultiplier", span="910-910"];
m2_457 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label=Exception, span="914-914"];
m2_460 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="OrderTicket ticket", span="922-922"];
m2_458 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Log.Error(err)", span="916-916"];
m2_462 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="ticket.AddOrderEvent(fill)", span="925-925"];
m2_465 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="fill.Status != OrderStatus.None", span="934-934"];
m2_468 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label=Exception, span="943-943"];
m2_448 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="return;", span="877-877"];
m2_471 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="870-870"];
m2_236 [cluster="System.TimeSpan.FromSeconds(double)", file="CashBuyingPowerModelTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_134 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m2_167 [cluster="Unk.Clone", file="CashBuyingPowerModelTests.cs", label="Entry Unk.Clone", span=""];
m2_477 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="403-403"];
m2_94 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_203 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", span="613-613"];
m2_305 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="response = HandleSubmitOrderRequest((SubmitOrderRequest)request)", span="619-619"];
m2_307 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="response = HandleUpdateOrderRequest((UpdateOrderRequest)request)", span="622-622"];
m2_309 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="response = HandleCancelOrderRequest((CancelOrderRequest)request)", span="625-625"];
m2_304 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="OrderRequestType.Submit", span="618-618"];
m2_311 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.SetResponse(response, OrderRequestStatus.Processed)", span="632-632"];
m2_306 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="OrderRequestType.Update", span="621-621"];
m2_308 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="OrderRequestType.Cancel", span="624-624"];
m2_302 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="OrderResponse response", span="615-615"];
m2_303 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.OrderRequestType", span="616-616"];
m2_310 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="throw new ArgumentOutOfRangeException();", span="628-628"];
m2_312 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", span="613-613"];
m2_282 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="CashBuyingPowerModelTests.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m2_131 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m2_75 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="Log.Trace(\r\n                        string.Format(\r\n                            ''LiveTradingRealTimeHandler.SetupEvents(): Daily Market Hours Setup for Security Type: {0} Start: {1} Stop: {2}'',\r\n                            security.Type, _today[security.Type].Open.Start, _today[security.Type].Open.End))", span="250-253"];
m2_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="security.Type", span="257-257"];
m2_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_today[SecurityType.Equity].Status != ''open''", span="261-261"];
m2_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].Open.Start.TimeOfDay", span="278-278"];
m2_88 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="SecurityType.Forex", span="287-287"];
m2_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_today[security.Type] = Engine.Api.MarketToday(security.Type)", span="249-249"];
m2_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="SecurityType.Equity", span="259-259"];
m2_92 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", span="234-234"];
m2_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = TimeSpan.FromHours(0)", span="263-263"];
m2_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="sub.ExtendedMarketHours", span="266-266"];
m2_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].PreMarket.Start.TimeOfDay", span="268-268"];
m2_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].PostMarket.End.TimeOfDay", span="269-269"];
m2_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].Open.End.TimeOfDay", span="279-279"];
m2_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].Open.Start, _today[SecurityType.Equity].Open.End))", span="280-283"];
m2_89 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Forex].Open.Start.TimeOfDay", span="288-288"];
m2_80 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = TimeSpan.FromHours(0)", span="264-264"];
m2_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Extended market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].PreMarket.Start,\r\n                                    _today[SecurityType.Equity].PostMarket.End))", span="270-274"];
m2_91 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="Log.Trace(\r\n                            string.Format(\r\n                                ''LiveTradingRealTimeHandler.SetupEvents(Forex): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                sub.Symbol, _today[SecurityType.Forex].Open.Start, _today[SecurityType.Forex].Open.End))", span="290-293"];
m2_90 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="CashBuyingPowerModelTests.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Forex].Open.End.TimeOfDay", span="289-289"];
m2_123 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m))", span="311-311"];
m2_124 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.SetResponse(OrderResponse.Success(request), OrderRequestStatus.Processing)", span="314-314"];
m2_125 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_orderRequestQueue.Add(request)", span="315-315"];
m2_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="CashBuyingPowerModelTests.cs", label="!_exitTriggered", span="133-133"];
m2_239 [cluster="Unk.TryRemove", file="CashBuyingPowerModelTests.cs", label="Entry Unk.TryRemove", span=""];
m2_472 [cluster="System.Threading.Interlocked.Exchange(ref long, long)", file="CashBuyingPowerModelTests.cs", label="Entry System.Threading.Interlocked.Exchange(ref long, long)", span="0-0"];
m2_374 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="370-370"];
m2_106 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Unable to locate ticket for order.'')", span="270-270"];
m2_107 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderTicket.InvalidCancelOrderId(_algorithm.Transactions, request);", span="271-271"];
m2_484 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m2_172 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="390-390"];
m2_173 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModelTests.cs", label="_orders == null", span="392-392"];
m2_176 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModelTests.cs", label="return _orders.Select(x => x.Value).Where(filter).Select(x => x.Clone());", span="402-402"];
m2_177 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModelTests.cs", label="return _orders.Select(x => x.Value).Select(x => x.Clone());", span="404-404"];
m2_174 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModelTests.cs", label="return Enumerable.Empty<Order>();", span="396-396"];
m2_175 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModelTests.cs", label="filter != null", span="399-399"];
m2_178 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="390-390"];
m2_314 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="742-742"];
m2_384 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!_orders.TryGetValue(request.OrderId, out order) || !_orderTickets.TryGetValue(request.OrderId, out ticket)", span="746-746"];
m2_387 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!CanUpdateOrder(order)", span="752-752"];
m2_389 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var security = _algorithm.Securities[order.Symbol]", span="758-758"];
m2_390 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Quantity = RoundOffOrder(order, security)", span="759-759"];
m2_392 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!_algorithm.LiveMode && !_algorithm.BrokerageModel.CanUpdateOrder(_algorithm.Securities[order.Symbol], order, request, out message)", span="763-763"];
m2_397 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(response.ErrorMessage)", span="769-769"];
m2_398 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''BrokerageModel declared unable to update order''))", span="770-770"];
m2_401 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="RoundOrderPrices(order, security)", span="778-778"];
m2_404 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="orderUpdated = _brokerage.UpdateOrder(order)", span="785-785"];
m2_410 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(errorMessage)", span="797-797"];
m2_411 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to update order''))", span="798-798"];
m2_385 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdateOrderRequest(): Unable to update order with ID '' + request.OrderId)", span="748-748"];
m2_383 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="OrderTicket ticket", span="745-745"];
m2_388 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.InvalidStatus(request, order);", span="754-754"];
m2_393 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.Status = OrderStatus.Invalid", span="766-766"];
m2_395 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to update order: '' + order.Id)", span="767-767"];
m2_396 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageModelRefusedToUpdateOrder, ''OrderID: '' + order.Id + '' '' + message)", span="768-768"];
m2_400 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="order.ApplyUpdateOrderRequest(request)", span="775-775"];
m2_402 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="ticket.SetOrder(order)", span="780-780"];
m2_391 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="BrokerageMessageEvent message", span="762-762"];
m2_394 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="message == null", span="767-767"];
m2_399 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return response;", span="771-771"];
m2_403 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="bool orderUpdated", span="782-782"];
m2_405 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label=Exception, span="787-787"];
m2_408 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="!orderUpdated", span="793-793"];
m2_409 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="var errorMessage = ''Brokerage failed to update order with id '' + request.OrderId", span="796-796"];
m2_412 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToUpdateOrder, errorMessage);", span="799-799"];
m2_386 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.UnableToFindOrder(request);", span="749-749"];
m2_413 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return OrderResponse.Success(request);", span="802-802"];
m2_382 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Order order", span="744-744"];
m2_406 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Log.Error(err)", span="789-789"];
m2_407 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="orderUpdated = false", span="790-790"];
m2_414 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="742-742"];
m2_234 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m2_133 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", span="357-357"];
m2_275 [cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62"];
m2_500 [cluster="System.Convert.ToInt32(decimal)", file="CashBuyingPowerModelTests.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m2_132 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", span="377-377"];
m2_444 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="98-98"];
m2_372 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1006-1006"];
m2_494 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="!_firstRoundOffMessage", span="1014-1014"];
m2_495 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="_algorithm.Error(\r\n                        string.Format(\r\n                            ''Warning: Due to brokerage limitations, orders will be rounded to the nearest lot size of {0}'',\r\n                            Convert.ToInt32(security.SymbolProperties.LotSize)))", span="1016-1019"];
m2_496 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="_firstRoundOffMessage = true", span="1020-1020"];
m2_493 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="order.Quantity = order.Quantity - orderLotMod", span="1012-1012"];
m2_497 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="return order.Quantity;", span="1022-1022"];
m2_491 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="var orderLotMod = order.Quantity%Convert.ToInt32(security.SymbolProperties.LotSize)", span="1008-1008"];
m2_498 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="return order.Quantity;", span="1026-1026"];
m2_492 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="orderLotMod != 0", span="1010-1010"];
m2_499 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1006-1006"];
m2_160 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", span="376-376"];
m2_161 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="CashBuyingPowerModelTests.cs", label="_orders == null", span="379-379"];
m2_163 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="CashBuyingPowerModelTests.cs", label="var order = _orders.FirstOrDefault(x => x.Value.BrokerId.Contains(brokerageId)).Value", span="381-381"];
m2_162 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="CashBuyingPowerModelTests.cs", label="return null;", span="379-379"];
m2_164 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="CashBuyingPowerModelTests.cs", label="return order != null ? order.Clone() : null;", span="382-382"];
m2_165 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", span="376-376"];
m2_146 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", span="342-342"];
m2_148 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="CashBuyingPowerModelTests.cs", label="_orderTickets.TryGetValue(orderId, out ticket)", span="345-345"];
m2_147 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="CashBuyingPowerModelTests.cs", label="OrderTicket ticket", span="344-344"];
m2_149 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="CashBuyingPowerModelTests.cs", label="return ticket;", span="346-346"];
m2_150 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", span="342-342"];
m2_129 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="return ticket;", span="324-324"];
m2_126 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m2_128 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, err.Message))", span="321-321"];
m2_127 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label=symbol, span=""];
m2_130 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", span="265-265"];
m2_536 [file="CashBuyingPowerModelTests.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m2_537 [file="CashBuyingPowerModelTests.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m2_540 [file="CashBuyingPowerModelTests.cs", label=cash, span=""];
m2_538 [file="CashBuyingPowerModelTests.cs", label=string, span=""];
m2_539 [file="CashBuyingPowerModelTests.cs", label=lowestOrderIdToKeep, span=""];
m4_20 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="BrokerageName.Default", span="140-140"];
m4_21 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="return new DefaultBrokerageModel(accountType);", span="141-141"];
m4_22 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="BrokerageName.InteractiveBrokersBrokerage", span="143-143"];
m4_14 [cluster="object.ToString()", file="FakeExceptionInterpreter.cs", label="Entry object.ToString()", span="0-0"];
m4_15 [cluster="Unk.Debug", file="FakeExceptionInterpreter.cs", label="Entry Unk.Debug", span=""];
m4_12 [cluster="QuantConnect.TestLiveAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FakeExceptionInterpreter.cs", label="Exit QuantConnect.TestLiveAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="43-43"];
m4_13 [cluster="decimal.ToString(string)", file="FakeExceptionInterpreter.cs", label="Entry decimal.ToString(string)", span="0-0"];
m4_37 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="FakeExceptionInterpreter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m4_4 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m4_5 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="FakeExceptionInterpreter.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m4_2 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="66-66"];
m4_3 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="FakeExceptionInterpreter.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="66-66"];
m4_16 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121"];
m4_17 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", color=green, community=0, file="FakeExceptionInterpreter.cs", label="0: Exit QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121"];
m4_18 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m4_19 [cluster="Unk.ToLongTimeString", file="FakeExceptionInterpreter.cs", label="Entry Unk.ToLongTimeString", span=""];
m4_23 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="return new InteractiveBrokersBrokerageModel(accountType);", span="144-144"];
m4_25 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="return new TradierBrokerageModel(accountType);", span="147-147"];
m4_27 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="return new OandaBrokerageModel(accountType);", span="150-150"];
m4_29 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="return new FxcmBrokerageModel(accountType);", span="153-153"];
m4_30 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="throw new ArgumentOutOfRangeException(''brokerage'', brokerage, null);", span="156-156"];
m4_24 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="BrokerageName.TradierBrokerage", span="146-146"];
m4_26 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="BrokerageName.OandaBrokerage", span="149-149"];
m4_28 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="BrokerageName.FxcmBrokerage", span="152-152"];
m4_31 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="Exit QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m4_7 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="FakeExceptionInterpreter.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m4_8 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", color=green, community=0, file="FakeExceptionInterpreter.cs", label="1: Entry QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92"];
m4_9 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", color=green, community=0, file="FakeExceptionInterpreter.cs", label="1: Exit QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92"];
m4_10 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99"];
m4_11 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="FakeExceptionInterpreter.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99"];
m4_36 [cluster="QuantConnect.Brokerages.FxcmBrokerageModel.FxcmBrokerageModel(QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.FxcmBrokerageModel.FxcmBrokerageModel(QuantConnect.AccountType)", span="55-55"];
m4_0 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m4_1 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="FakeExceptionInterpreter.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m4_34 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", span="39-39"];
m4_6 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m4_35 [cluster="QuantConnect.Brokerages.OandaBrokerageModel.OandaBrokerageModel(QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.OandaBrokerageModel.OandaBrokerageModel(QuantConnect.AccountType)", span="56-56"];
m4_33 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", span="33-33"];
m4_32 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="FakeExceptionInterpreter.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="70-70"];
m5_106 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", span="130-130"];
m5_107 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="string json = _matchData", span="132-132"];
m5_109 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="expectedQuantity == 99", span="135-135"];
m5_116 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="_unit.OrderStatusChanged += (s, e) =>\r\n            {\r\n                Assert.AreEqual(''BTCUSD'', e.Symbol.Value);\r\n                actualFee += e.OrderFee;\r\n                actualQuantity += e.AbsoluteFillQuantity;\r\n\r\n                Assert.AreEqual(actualQuantity != orderQuantity ? Orders.OrderStatus.PartiallyFilled : Orders.OrderStatus.Filled, e.Status);\r\n                Assert.AreEqual(expectedQuantity, e.FillQuantity);\r\n                // order fees are pro-rated for partial fills\r\n                // total order fee = 0.01\r\n                // partial order fee = (0.01 * 5.23512 / 6.1) = 0.0085821639344262295081967213\r\n                Assert.AreEqual(0.00858216m, Math.Round(actualFee, 8));\r\n                raised.Set();\r\n            }", span="147-160"];
m5_118 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(raised.WaitOne(1000), expectedQuantity != 99)", span="165-165"];
m5_108 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="string id = ''132fb6ae-456b-4654-b4e0-d681ac05cea1''", span="133-133"];
m5_110 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="json = json.Replace(id, Guid.NewGuid().ToString())", span="137-137"];
m5_117 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="_unit.OnMessage(_unit, GDAXTestsHelpers.GetArgs(json))", span="162-162"];
m5_112 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="GDAXTestsHelpers.AddOrder(_unit, 1, id, orderQuantity)", span="141-141"];
m5_111 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="decimal orderQuantity = 6.1m", span="140-140"];
m5_113 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="ManualResetEvent raised = new ManualResetEvent(false)", span="142-142"];
m5_114 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="decimal actualFee = 0", span="144-144"];
m5_115 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="decimal actualQuantity = 0", span="145-145"];
m5_119 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageFillTest(decimal)", span="130-130"];
m5_230 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", span="275-275"];
m5_231 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="SetupResponse(_holdingData)", span="277-277"];
m5_232 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="_unit.CachedOrderIDs.TryAdd(1, new Orders.MarketOrder { BrokerId = new List<string> { ''1'' }, Price = 123 })", span="279-279"];
m5_233 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetAccountHoldings()", span="281-281"];
m5_234 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0, actual.Count())", span="283-283"];
m5_235 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAccountHoldingsTest()", span="275-275"];
m5_82 [cluster="Unk.Connect", file="GDAXBrokerageTests.cs", label="Entry Unk.Connect", span=""];
m5_164 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="55-55"];
m5_69 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", span="111-111"];
m5_70 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(m => m.Connect()).Callback(() => { _wss.Setup(m => m.IsOpen).Returns(true); }).Verifiable()", span="113-113"];
m5_71 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(m => m.IsOpen).Returns(false)", span="114-114"];
m5_72 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs", label="_unit.Connect()", span="115-115"];
m5_73 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Verify()", span="116-116"];
m5_74 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ConnectTest()", span="111-111"];
m5_276 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="496-496"];
m5_285 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", span="331-331"];
m5_286 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="string actual = null", span="333-333"];
m5_287 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(w => w.IsOpen).Returns(true)", span="334-334"];
m5_288 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(w => w.Send(It.IsAny<string>())).Callback<string>(c => actual = c)", span="335-335"];
m5_289 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="_unit.Unsubscribe(new List<Symbol> { Symbol.Create(''BTCUSD'', SecurityType.Crypto, Market.GDAX) })", span="336-336"];
m5_290 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="StringAssert.Contains(''user'', actual)", span="337-337"];
m5_291 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="StringAssert.Contains(''heartbeat'', actual)", span="338-338"];
m5_292 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="StringAssert.Contains(''matches'', actual)", span="339-339"];
m5_293 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UnsubscribeTest()", span="331-331"];
m5_200 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="175-175"];
m5_123 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="26-26"];
m5_199 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m5_265 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", span="312-312"];
m5_266 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="string actual = null", span="314-314"];
m5_267 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="string expected = ''[\''BTC-USD\'',\''BTC-ETH\'']''", span="315-315"];
m5_268 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(w => w.Send(It.IsAny<string>())).Callback<string>(c => actual = c)", span="316-316"];
m5_271 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="StringAssert.Contains(expected, actual)", span="323-323"];
m5_269 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="_unit.Ticks.Clear()", span="318-318"];
m5_270 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="_unit.Subscribe(new[] { Symbol.Create(''BTCUSD'', SecurityType.Crypto, Market.GDAX), Symbol.Create(''GBPUSD'', SecurityType.Crypto, Market.GDAX),\r\n                Symbol.Create(''BTCETH'', SecurityType.Crypto, Market.GDAX)})", span="320-321"];
m5_272 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(1, _unit.Ticks.Count)", span="326-326"];
m5_273 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", color=green, community=0, file="GDAXBrokerageTests.cs", label="0: Assert.AreEqual(''GBPUSD'', _unit.Ticks[0].Symbol.Value)", span="327-327"];
m5_274 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SubscribeTest()", span="312-312"];
m5_236 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="240-240"];
m5_211 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", span="257-257"];
m5_212 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="SetupResponse(_accountsData)", span="259-259"];
m5_213 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetCashBalance()", span="261-261"];
m5_214 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(2, actual.Count())", span="263-263"];
m5_215 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="var usd = actual.Single(a => a.Symbol == ''USD'')", span="265-265"];
m5_216 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="var btc = actual.Single(a => a.Symbol == ''BTC'')", span="266-266"];
m5_217 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(80.2301373066930000m, usd.Amount)", span="268-268"];
m5_218 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(1, usd.ConversionRate)", span="269-269"];
m5_219 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(1.1, btc.Amount)", span="270-270"];
m5_220 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(333.985m, btc.ConversionRate)", span="271-271"];
m5_221 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetCashBalanceTest()", span="257-257"];
m5_177 [cluster="Unk.Any", file="GDAXBrokerageTests.cs", label="Entry Unk.Any", span=""];
m5_29 [cluster="Unk.Execute", file="GDAXBrokerageTests.cs", label="Entry Unk.Execute", span=""];
m5_222 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="254-254"];
m5_176 [cluster="Unk.SelectMany", file="GDAXBrokerageTests.cs", label="Entry Unk.SelectMany", span=""];
m5_202 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_127 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="GDAXBrokerageTests.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m5_322 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="556-556"];
m5_181 [cluster="Unk.Where", file="GDAXBrokerageTests.cs", label="Entry Unk.Where", span=""];
m5_76 [cluster="Unk.Verifiable", file="GDAXBrokerageTests.cs", label="Entry Unk.Verifiable", span=""];
m5_237 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", span="288-288"];
m5_238 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''1'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                StatusCode = code\r\n            })", span="290-293"];
m5_239 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''2'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                StatusCode = code2\r\n            })", span="295-298"];
m5_241 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(expected, actual)", span="302-302"];
m5_240 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="var actual = _unit.CancelOrder(new Orders.LimitOrder { BrokerId = new List<string> { ''1'', ''2'' } })", span="300-300"];
m5_242 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.CancelOrderTest(System.Net.HttpStatusCode, System.Net.HttpStatusCode, bool)", span="288-288"];
m5_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAuthenticationToken(string, string, string)", span="75-75"];
m5_198 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_243 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
m5_342 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="387-387"];
m5_25 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="67-67"];
m5_34 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="73-73"];
m5_40 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="80-80"];
m5_43 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="83-83"];
m5_26 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/products/'')))", span="67-67"];
m5_27 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="67-67"];
m5_30 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="67-67"];
m5_31 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="r.Resource.StartsWith(''/products/'')", span="67-67"];
m5_32 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="67-67"];
m5_35 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/orders/'' + _brokerId) || r.Resource.StartsWith(''/orders/'' + _matchBrokerId)))", span="73-73"];
m5_36 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="73-73"];
m5_37 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="73-73"];
m5_38 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="r.Resource.StartsWith(''/orders/'' + _brokerId) || r.Resource.StartsWith(''/orders/'' + _matchBrokerId)", span="73-73"];
m5_39 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="73-73"];
m5_41 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="a.BrokerageModel.AccountType", span="80-80"];
m5_42 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="80-80"];
m5_44 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="r.Execute(It.IsAny<IRestRequest>())", span="83-83"];
m5_45 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="83-83"];
m5_49 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="93-93"];
m5_50 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)))", span="93-93"];
m5_51 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="93-93"];
m5_52 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="93-93"];
m5_53 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="!r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId)", span="93-93"];
m5_54 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="93-93"];
m5_63 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="104-104"];
m5_66 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="106-106"];
m5_64 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="w.IsOpen", span="104-104"];
m5_65 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="104-104"];
m5_67 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="w.IsOpen", span="106-106"];
m5_68 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="106-106"];
m5_79 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="113-113"];
m5_83 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="113-113"];
m5_89 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="114-114"];
m5_80 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Connect()", span="113-113"];
m5_81 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="113-113"];
m5_84 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="_wss.Setup(m => m.IsOpen).Returns(true)", span="113-113"];
m5_85 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="113-113"];
m5_86 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="113-113"];
m5_87 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.IsOpen", span="113-113"];
m5_88 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="113-113"];
m5_90 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.IsOpen", span="114-114"];
m5_91 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="114-114"];
m5_99 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="122-122"];
m5_103 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="123-123"];
m5_100 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Close()", span="122-122"];
m5_101 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="122-122"];
m5_104 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.IsOpen", span="123-123"];
m5_105 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="123-123"];
m5_134 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(expectedQuantity, e.FillQuantity)", span="154-154"];
m5_133 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(actualQuantity != orderQuantity ? Orders.OrderStatus.PartiallyFilled : Orders.OrderStatus.Filled, e.Status)", span="153-153"];
m5_136 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="raised.Set()", span="159-159"];
m5_130 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''BTCUSD'', e.Symbol.Value)", span="149-149"];
m5_131 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="actualFee += e.OrderFee", span="150-150"];
m5_132 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="actualQuantity += e.AbsoluteFillQuantity", span="151-151"];
m5_129 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="147-160"];
m5_135 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.00858216m, Math.Round(actualFee, 8))", span="158-158"];
m5_137 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="147-160"];
m5_169 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(status, e.Status)", span="199-199"];
m5_170 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="orderId != null", span="200-200"];
m5_172 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.That((quantity > 0 && e.Direction == Orders.OrderDirection.Buy) || (quantity < 0 && e.Direction == Orders.OrderDirection.Sell))", span="203-203"];
m5_173 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.IsTrue(orderId == null || _unit.CachedOrderIDs.SelectMany(c => c.Value.BrokerId.Where(b => b == _brokerId)).Any())", span="204-204"];
m5_171 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''BTCUSD'', e.Symbol.Value)", span="202-202"];
m5_168 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="197-206"];
m5_174 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="197-206"];
m5_178 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="204-204"];
m5_179 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="c.Value.BrokerId.Where(b => b == _brokerId)", span="204-204"];
m5_180 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="204-204"];
m5_182 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="204-204"];
m5_183 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="b == _brokerId", span="204-204"];
m5_184 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="204-204"];
m5_224 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="265-265"];
m5_227 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="266-266"];
m5_225 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="a.Symbol == ''USD''", span="265-265"];
m5_226 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="265-265"];
m5_228 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="a.Symbol == ''BTC''", span="266-266"];
m5_229 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="266-266"];
m5_245 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="290-290"];
m5_252 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="295-295"];
m5_246 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''1'')))", span="290-290"];
m5_247 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="290-290"];
m5_248 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="290-290"];
m5_249 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="!r.Resource.EndsWith(''1'')", span="290-290"];
m5_250 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="290-290"];
m5_253 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="m.Execute(It.Is<IRestRequest>(r => !r.Resource.EndsWith(''2'')))", span="295-295"];
m5_254 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="295-295"];
m5_255 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="295-295"];
m5_256 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="!r.Resource.EndsWith(''2'')", span="295-295"];
m5_257 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="295-295"];
m5_261 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="308-308"];
m5_262 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="_unit.UpdateOrder(new LimitOrder())", span="308-308"];
m5_263 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="308-308"];
m5_278 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="316-316"];
m5_282 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="316-316"];
m5_279 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="w.Send(It.IsAny<string>())", span="316-316"];
m5_280 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="316-316"];
m5_283 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="actual = c", span="316-316"];
m5_284 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="316-316"];
m5_295 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="334-334"];
m5_298 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="335-335"];
m5_301 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="335-335"];
m5_296 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="w.IsOpen", span="334-334"];
m5_297 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="334-334"];
m5_299 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="w.Send(It.IsAny<string>())", span="335-335"];
m5_300 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="335-335"];
m5_302 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="actual = c", span="335-335"];
m5_303 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="335-335"];
m5_336 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="380-380"];
m5_339 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Entry lambda expression", span="380-380"];
m5_343 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="messageType = e.Type", span="387-387"];
m5_337 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="w.Send(It.IsAny<string>())", span="380-380"];
m5_338 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="380-380"];
m5_340 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="actual = c", span="380-380"];
m5_341 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="380-380"];
m5_344 [cluster="lambda expression", file="GDAXBrokerageTests.cs", label="Exit lambda expression", span="387-387"];
m5_0 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", span="54-54"];
m5_1 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_unit = new GDAXBrokerage(''wss://localhost'', _wss.Object, _rest.Object, ''abc'', ''MTIz'', ''pass'', _algo.Object)", span="56-56"];
m5_2 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_orderData = File.ReadAllText(''TestData//gdax_order.txt'')", span="57-57"];
m5_3 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_matchData = File.ReadAllText(''TestData//gdax_match.txt'')", span="58-58"];
m5_4 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_openOrderData = File.ReadAllText(''TestData//gdax_openOrders.txt'')", span="59-59"];
m5_5 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_accountsData = File.ReadAllText(''TestData//gdax_accounts.txt'')", span="60-60"];
m5_6 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_holdingData = File.ReadAllText(''TestData//gdax_holding.txt'')", span="61-61"];
m5_7 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_orderByIdData = File.ReadAllText(''TestData//gdax_orderById.txt'')", span="62-62"];
m5_8 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_tickerData = File.ReadAllText(''TestData//gdax_ticker.txt'')", span="63-63"];
m5_9 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_symbol = Symbol.Create(''BTCUSD'', SecurityType.Crypto, Market.GDAX)", span="65-65"];
m5_10 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/products/'')))).Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = File.ReadAllText(''TestData//gdax_tick.txt''),\r\n                StatusCode = HttpStatusCode.OK\r\n            })", span="67-71"];
m5_11 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => r.Resource.StartsWith(''/orders/'' + _brokerId) || r.Resource.StartsWith(''/orders/'' + _matchBrokerId))))\r\n            .Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = File.ReadAllText(''TestData//gdax_orderById.txt''),\r\n                StatusCode = HttpStatusCode.OK\r\n            })", span="73-78"];
m5_12 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_algo.Setup(a => a.BrokerageModel.AccountType).Returns(_accountType)", span="80-80"];
m5_13 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="var rateMock = new Mock<IRestClient>()", span="81-81"];
m5_14 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="_unit.RateClient = rateMock.Object", span="82-82"];
m5_15 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="rateMock.Setup(r => r.Execute(It.IsAny<IRestRequest>())).Returns(new RestResponse\r\n            {\r\n                Content = @''{''''base'''':''''USD'''',''''date'''':''''2001-01-01'''',''''rates'''':{''''GBP'''':1.234 }}'',\r\n                StatusCode = HttpStatusCode.OK\r\n            })", span="83-87"];
m5_16 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.Setup()", span="54-54"];
m5_124 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="GDAXBrokerageTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m5_77 [cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Connect()", span="115-115"];
m5_244 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="142-142"];
m5_197 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m5_258 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", span="306-306"];
m5_259 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs", label="Assert.Throws<NotSupportedException>(() => _unit.UpdateOrder(new LimitOrder()))", span="308-308"];
m5_260 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.UpdateOrderTest()", span="306-306"];
m5_125 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="33-33"];
m5_324 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", span="374-374"];
m5_325 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="string actual = null", span="376-376"];
m5_326 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="string expected = ''[\''BTC-LTC\'']''", span="379-379"];
m5_327 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(w => w.Send(It.IsAny<string>())).Callback<string>(c => actual = c)", span="380-380"];
m5_329 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="StringAssert.Contains(expected, actual)", span="384-384"];
m5_328 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="_unit.Subscribe(new[] { Symbol.Create(''BTCLTC'', SecurityType.Crypto, Market.GDAX)})", span="382-382"];
m5_330 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="BrokerageMessageType messageType = 0", span="386-386"];
m5_331 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="_unit.Message += (sender, e) => { messageType = e.Type; }", span="387-387"];
m5_332 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="string json = ''{\''type\'':\''error\'',\''message\'':\''Failed to subscribe\'',\''reason\'':\''Invalid product ID provided\''}''", span="388-388"];
m5_333 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="_unit.OnMessage(_unit, GDAXTestsHelpers.GetArgs(json))", span="389-389"];
m5_334 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(BrokerageMessageType.Warning, messageType)", span="391-391"];
m5_335 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.ErrorTest()", span="374-374"];
m5_281 [cluster="Unk.Send", file="GDAXBrokerageTests.cs", label="Entry Unk.Send", span=""];
m5_120 [cluster="System.Guid.NewGuid()", file="GDAXBrokerageTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m5_251 [cluster="Unk.EndsWith", file="GDAXBrokerageTests.cs", label="Entry Unk.EndsWith", span=""];
m5_139 [cluster="System.Threading.EventWaitHandle.Set()", file="GDAXBrokerageTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m5_78 [cluster="Unk.Verify", file="GDAXBrokerageTests.cs", label="Entry Unk.Verify", span=""];
m5_275 [cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m5_210 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="434-434"];
m5_264 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="132-132"];
m5_46 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", span="91-91"];
m5_47 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs", label="_rest.Setup(m => m.Execute(It.Is<IRestRequest>(r => !r.Resource.StartsWith(''/products/'') && !r.Resource.StartsWith(''/orders/'' + _brokerId))))\r\n            .Returns(new RestSharp.RestResponse\r\n            {\r\n                Content = body,\r\n                StatusCode = httpStatus\r\n            })", span="93-98"];
m5_48 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.SetupResponse(string, System.Net.HttpStatusCode)", span="91-91"];
m5_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="40-40"];
m5_121 [cluster="System.Guid.ToString()", file="GDAXBrokerageTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m5_204 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", span="248-248"];
m5_205 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetTick(_symbol)", span="250-250"];
m5_206 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(333.98m, actual.BidPrice)", span="251-251"];
m5_207 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(333.99m, actual.AskPrice)", span="252-252"];
m5_208 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(5957.11914015, actual.Quantity)", span="253-253"];
m5_209 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetTickTest()", span="248-248"];
m5_22 [cluster="Unk.Returns", file="GDAXBrokerageTests.cs", label="Entry Unk.Returns", span=""];
m5_55 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", span="102-102"];
m5_56 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(w => w.IsOpen).Returns(true)", span="104-104"];
m5_57 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="Assert.IsTrue(_unit.IsConnected)", span="105-105"];
m5_58 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(w => w.IsOpen).Returns(false)", span="106-106"];
m5_59 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="Assert.IsFalse(_unit.IsConnected)", span="107-107"];
m5_60 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.IsConnectedTest()", span="102-102"];
m5_128 [cluster="Unk.AreEqual", file="GDAXBrokerageTests.cs", label="Entry Unk.AreEqual", span=""];
m5_165 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m5_75 [cluster="Unk.Callback", file="GDAXBrokerageTests.cs", label="Entry Unk.Callback", span=""];
m5_138 [cluster="System.Math.Round(decimal, int)", file="GDAXBrokerageTests.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m5_175 [cluster="Unk.That", file="GDAXBrokerageTests.cs", label="Entry Unk.That", span=""];
m5_17 [cluster="GDAXBrokerage.cstr", file="GDAXBrokerageTests.cs", label="Entry GDAXBrokerage.cstr", span=""];
m5_92 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", span="120-120"];
m5_93 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(m => m.Close()).Verifiable()", span="122-122"];
m5_94 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Setup(m => m.IsOpen).Returns(true)", span="123-123"];
m5_95 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_unit.Disconnect()", span="124-124"];
m5_96 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="_wss.Verify()", span="125-125"];
m5_97 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.DisconnectTest()", span="120-120"];
m5_140 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", span="169-169"];
m5_141 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetAuthenticationToken('''', ''POST'', ''http://localhost'')", span="171-171"];
m5_142 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Assert.IsFalse(string.IsNullOrEmpty(actual.Signature))", span="173-173"];
m5_143 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Assert.IsFalse(string.IsNullOrEmpty(actual.Timestamp))", span="174-174"];
m5_144 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''pass'', actual.Passphrase)", span="175-175"];
m5_145 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''abc'', actual.Key)", span="176-176"];
m5_146 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetAuthenticationTokenTest()", span="169-169"];
m5_201 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m5_223 [cluster="Unk.Single", file="GDAXBrokerageTests.cs", label="Entry Unk.Single", span=""];
m5_149 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", span="188-188"];
m5_150 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="var response = new\r\n            {\r\n                id = _brokerId,\r\n                fill_fees = ''0.11''\r\n            }", span="190-194"];
m5_151 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="SetupResponse(JsonConvert.SerializeObject(response), httpStatus)", span="195-195"];
m5_152 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="_unit.OrderStatusChanged += (s, e) =>\r\n            {\r\n                Assert.AreEqual(status, e.Status);\r\n                if (orderId != null)\r\n                {\r\n                    Assert.AreEqual(''BTCUSD'', e.Symbol.Value);\r\n                    Assert.That((quantity > 0 && e.Direction == Orders.OrderDirection.Buy) || (quantity < 0 && e.Direction == Orders.OrderDirection.Sell));\r\n                    Assert.IsTrue(orderId == null || _unit.CachedOrderIDs.SelectMany(c => c.Value.BrokerId.Where(b => b == _brokerId)).Any());\r\n                }\r\n            }", span="197-206"];
m5_154 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="orderType == OrderType.Limit", span="209-209"];
m5_155 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="order = new Orders.LimitOrder(_symbol, quantity, price, DateTime.UtcNow)", span="211-211"];
m5_156 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="orderType == OrderType.Market", span="213-213"];
m5_157 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="order = new Orders.MarketOrder(_symbol, quantity, DateTime.UtcNow)", span="215-215"];
m5_158 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="order = new Orders.StopMarketOrder(_symbol, quantity, price, DateTime.UtcNow)", span="219-219"];
m5_160 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="Assert.IsTrue(actual || (orderId == null && !actual))", span="224-224"];
m5_153 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="Order order = null", span="208-208"];
m5_159 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="bool actual = _unit.PlaceOrder(order)", span="222-222"];
m5_161 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PlaceOrderTest(string, System.Net.HttpStatusCode, QuantConnect.Orders.OrderStatus, decimal, decimal, QuantConnect.Orders.OrderType)", span="188-188"];
m5_18 [cluster="System.IO.File.ReadAllText(string)", file="GDAXBrokerageTests.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m5_163 [cluster="Unk.SetupResponse", file="GDAXBrokerageTests.cs", label="Entry Unk.SetupResponse", span=""];
m5_166 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="55-55"];
m5_21 [cluster="RestSharp.RestResponse.cstr", file="GDAXBrokerageTests.cs", label="Entry RestSharp.RestResponse.cstr", span=""];
m5_126 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="126-126"];
m5_162 [cluster="Unk.SerializeObject", file="GDAXBrokerageTests.cs", label="Entry Unk.SerializeObject", span=""];
m5_203 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="GDAXBrokerageTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m5_62 [cluster="Unk.IsFalse", file="GDAXBrokerageTests.cs", label="Entry Unk.IsFalse", span=""];
m5_20 [cluster="Unk.Setup", file="GDAXBrokerageTests.cs", label="Entry Unk.Setup", span=""];
m5_317 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PollTickTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PollTickTest()", span="364-364"];
m5_318 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PollTickTest()", file="GDAXBrokerageTests.cs", label="_unit.PollTick(Symbol.Create(''GBPUSD'', SecurityType.Crypto, Market.GDAX))", span="366-366"];
m5_319 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PollTickTest()", file="GDAXBrokerageTests.cs", label="Thread.Sleep(1000)", span="367-367"];
m5_320 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PollTickTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.8103727714748784440842787682m, _unit.Ticks.First().Price)", span="370-370"];
m5_321 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PollTickTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.PollTickTest()", span="364-364"];
m5_19 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m5_28 [cluster="Unk.>", file="GDAXBrokerageTests.cs", label="Entry Unk.>", span=""];
m5_24 [cluster="RestResponse.cstr", file="GDAXBrokerageTests.cs", label="Entry RestResponse.cstr", span=""];
m5_23 [cluster="Mock<IRestClient>.cstr", file="GDAXBrokerageTests.cs", label="Entry Mock<IRestClient>.cstr", span=""];
m5_122 [cluster="string.Replace(string, string)", file="GDAXBrokerageTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m5_102 [cluster="Unk.Close", file="GDAXBrokerageTests.cs", label="Entry Unk.Close", span=""];
m5_323 [cluster="System.Threading.Thread.Sleep(int)", file="GDAXBrokerageTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m5_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="164-164"];
m5_185 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", span="228-228"];
m5_186 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="SetupResponse(_openOrderData)", span="230-230"];
m5_187 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="_unit.CachedOrderIDs.TryAdd(1, new Orders.MarketOrder { BrokerId = new List<string> { ''1'' }, Price = 123 })", span="232-232"];
m5_188 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.GetOpenOrders()", span="234-234"];
m5_189 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(2, actual.Count())", span="236-236"];
m5_190 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.01, actual.First().Quantity)", span="237-237"];
m5_191 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(OrderDirection.Buy, actual.First().Direction)", span="238-238"];
m5_192 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.1, actual.First().Price)", span="239-239"];
m5_193 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(-1, actual.Last().Quantity)", span="241-241"];
m5_194 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(OrderDirection.Sell, actual.Last().Direction)", span="242-242"];
m5_195 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(1, actual.Last().Price)", span="243-243"];
m5_196 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.GetOpenOrdersTest()", span="228-228"];
m5_294 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="614-614"];
m5_277 [cluster="Unk.Contains", file="GDAXBrokerageTests.cs", label="Entry Unk.Contains", span=""];
m5_148 [cluster="string.IsNullOrEmpty(string)", file="GDAXBrokerageTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_304 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", span="343-343"];
m5_305 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="string json = _tickerData", span="345-345"];
m5_306 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="_unit.OnMessage(_unit, GDAXTestsHelpers.GetArgs(json))", span="347-347"];
m5_307 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="var actual = _unit.Ticks.First()", span="349-349"];
m5_308 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''BTCUSD'', actual.Symbol.Value)", span="351-351"];
m5_309 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(4388.005m, actual.Price)", span="352-352"];
m5_310 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(4388m, actual.BidPrice)", span="353-353"];
m5_311 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(4388.01m, actual.AskPrice)", span="354-354"];
m5_312 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="actual = _unit.Ticks.Last()", span="356-356"];
m5_313 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(''BTCUSD'', actual.Symbol.Value)", span="358-358"];
m5_314 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(4388.01m, actual.Price)", span="359-359"];
m5_315 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Assert.AreEqual(0.03m, actual.Quantity)", span="360-360"];
m5_316 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests.OnMessageTickerTest()", span="343-343"];
m5_33 [cluster="Unk.StartsWith", file="GDAXBrokerageTests.cs", label="Entry Unk.StartsWith", span=""];
m5_345 [file="GDAXBrokerageTests.cs", label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", span=""];
m5_346 [file="GDAXBrokerageTests.cs", label=actualFee, span=""];
m5_347 [file="GDAXBrokerageTests.cs", label=actualQuantity, span=""];
m5_348 [file="GDAXBrokerageTests.cs", label=orderQuantity, span=""];
m5_349 [file="GDAXBrokerageTests.cs", label=decimal, span=""];
m5_350 [file="GDAXBrokerageTests.cs", label=raised, span=""];
m5_351 [file="GDAXBrokerageTests.cs", label="QuantConnect.Orders.OrderStatus", span=""];
m5_352 [file="GDAXBrokerageTests.cs", label=string, span=""];
m5_353 [file="GDAXBrokerageTests.cs", label=decimal, span=""];
m6_2 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m6_3 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m6_0 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", file="IExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", span="30-30"];
m6_1 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", file="IExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", span="30-30"];
m7_3 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.Evaluate(System.DateTime)", file="Loader.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.Evaluate(System.DateTime)", span="41-41"];
m7_4 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.Evaluate(System.DateTime)", file="Loader.cs", label="return _security.Close;", span="43-43"];
m7_5 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.Evaluate(System.DateTime)", file="Loader.cs", label="Exit QuantConnect.Benchmarks.SecurityBenchmark.Evaluate(System.DateTime)", span="41-41"];
m7_0 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="Loader.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m7_1 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="Loader.cs", label="_security = security", span="33-33"];
m7_2 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="Loader.cs", label="Exit QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m7_6 [file="Loader.cs", label="QuantConnect.Benchmarks.SecurityBenchmark", span=""];
m11_192 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="370-370"];
m11_194 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="373-373"];
m11_195 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="375-375"];
m11_196 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="377-377"];
m11_197 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="378-378"];
m11_193 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="372-372"];
m11_198 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="380-380"];
m11_199 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(2000, actual)", span="381-381"];
m11_200 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="370-370"];
m11_376 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="726-726"];
m11_378 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="729-729"];
m11_379 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="731-731"];
m11_382 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="737-737"];
m11_380 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="733-733"];
m11_381 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="734-734"];
m11_377 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="728-728"];
m11_383 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="741-741"];
m11_384 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(250, actual)", span="744-744"];
m11_385 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="726-726"];
m11_447 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="883-883"];
m11_449 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="886-886"];
m11_450 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="888-888"];
m11_453 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50m)", span="894-894"];
m11_451 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="890-890"];
m11_452 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="891-891"];
m11_448 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="885-885"];
m11_454 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="899-899"];
m11_455 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="902-902"];
m11_456 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(2500, actual)", span="905-905"];
m11_457 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="883-883"];
m11_228 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="442-442"];
m11_230 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="445-445"];
m11_231 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="447-447"];
m11_232 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="449-449"];
m11_233 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="450-450"];
m11_229 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="444-444"];
m11_234 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="458-458"];
m11_235 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-600, actual)", span="459-459"];
m11_236 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="442-442"];
m11_483 [cluster="QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", span="31-31"];
m11_319 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="604-604"];
m11_321 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="607-607"];
m11_322 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="609-609"];
m11_323 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="611-611"];
m11_324 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="612-612"];
m11_320 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="606-606"];
m11_325 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="615-615"];
m11_326 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-10000, actual)", span="616-616"];
m11_327 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="604-604"];
m11_386 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="748-748"];
m11_388 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="751-751"];
m11_389 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="753-753"];
m11_392 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="759-759"];
m11_390 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="755-755"];
m11_391 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="756-756"];
m11_387 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="750-750"];
m11_393 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="763-763"];
m11_394 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(249, actual)", span="766-766"];
m11_395 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="748-748"];
m11_437 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="862-862"];
m11_439 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="865-865"];
m11_440 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="867-867"];
m11_443 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50m)", span="873-873"];
m11_441 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="869-869"];
m11_442 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="870-870"];
m11_438 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="864-864"];
m11_444 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="876-876"];
m11_445 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(2500, actual)", span="879-879"];
m11_446 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="862-862"];
m11_346 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="657-657"];
m11_348 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="660-660"];
m11_349 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="662-662"];
m11_352 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="669-669"];
m11_350 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="665-665"];
m11_351 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="666-666"];
m11_347 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="659-659"];
m11_353 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="673-673"];
m11_354 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-500, actual)", span="676-676"];
m11_355 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="657-657"];
m11_426 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="836-836"];
m11_428 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="839-839"];
m11_429 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="841-841"];
m11_432 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="847-847"];
m11_430 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="843-843"];
m11_431 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="844-844"];
m11_427 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="838-838"];
m11_433 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="852-852"];
m11_434 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="855-855"];
m11_435 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(1250, actual)", span="858-858"];
m11_436 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="836-836"];
m11_111 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="229-229"];
m11_113 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="232-232"];
m11_114 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="234-234"];
m11_115 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="236-236"];
m11_116 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="237-237"];
m11_112 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="231-231"];
m11_117 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="239-239"];
m11_118 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-2000, actual)", span="240-240"];
m11_119 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="229-229"];
m11_22 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="85-85"];
m11_23 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(1600, actual)", span="87-87"];
m11_24 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="79-79"];
m11_25 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="91-91"];
m11_26 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="93-93"];
m11_210 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="400-400"];
m11_212 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="403-403"];
m11_213 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="405-405"];
m11_214 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="407-407"];
m11_215 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="408-408"];
m11_211 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="402-402"];
m11_216 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="416-416"];
m11_217 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-1000, actual)", span="417-417"];
m11_218 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="400-400"];
m11_264 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="508-508"];
m11_266 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="511-511"];
m11_267 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="513-513"];
m11_268 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="515-515"];
m11_269 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="516-516"];
m11_265 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="510-510"];
m11_270 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="519-519"];
m11_271 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-4000, actual)", span="520-520"];
m11_272 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="508-508"];
m11_201 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="385-385"];
m11_203 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="388-388"];
m11_204 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="390-390"];
m11_205 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="392-392"];
m11_206 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="393-393"];
m11_202 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="387-387"];
m11_207 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="395-395"];
m11_208 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(2000, actual)", span="396-396"];
m11_209 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="385-385"];
m11_46 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="124-124"];
m11_48 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="127-127"];
m11_49 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="129-129"];
m11_50 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="131-131"];
m11_51 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="132-132"];
m11_47 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="126-126"];
m11_52 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="134-134"];
m11_53 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(1000, actual)", span="135-135"];
m11_54 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="124-124"];
m11_237 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="463-463"];
m11_239 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="466-466"];
m11_240 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="468-468"];
m11_241 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="470-470"];
m11_242 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="471-471"];
m11_238 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="465-465"];
m11_243 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="473-473"];
m11_244 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(4000, actual)", span="474-474"];
m11_245 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="463-463"];
m11_310 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="588-588"];
m11_312 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="591-591"];
m11_313 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="593-593"];
m11_314 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="595-595"];
m11_315 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="596-596"];
m11_311 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="590-590"];
m11_316 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="599-599"];
m11_317 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-5600, actual)", span="600-600"];
m11_318 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="588-588"];
m11_366 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="703-703"];
m11_368 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="706-706"];
m11_369 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="708-708"];
m11_372 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="715-715"];
m11_370 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="711-711"];
m11_371 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="712-712"];
m11_367 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="705-705"];
m11_373 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="719-719"];
m11_374 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-300, actual)", span="722-722"];
m11_375 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="703-703"];
m11_337 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="636-636"];
m11_339 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="639-639"];
m11_340 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="641-641"];
m11_341 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="643-643"];
m11_342 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="644-644"];
m11_338 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="638-638"];
m11_343 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="647-647"];
m11_344 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-9200, actual)", span="648-648"];
m11_345 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="636-636"];
m11_468 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="943-943"];
m11_475 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="Update(eurusd, 26)", span="952-952"];
m11_474 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="950-950"];
m11_476 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="954-954"];
m11_469 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="var algo = new QCAlgorithm()", span="945-945"];
m11_473 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="949-949"];
m11_477 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(3000m, actual)", span="955-955"];
m11_470 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="946-946"];
m11_471 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.SetCash(100000)", span="947-947"];
m11_472 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="948-948"];
m11_478 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="943-943"];
m11_147 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="291-291"];
m11_149 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="294-294"];
m11_150 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="296-296"];
m11_151 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="298-298"];
m11_152 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="299-299"];
m11_148 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="293-293"];
m11_153 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="302-302"];
m11_154 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-3600, actual)", span="303-303"];
m11_155 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="291-291"];
m11_0 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="56-56"];
m11_1 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="58-58"];
m11_93 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="199-199"];
m11_95 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="202-202"];
m11_96 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="204-204"];
m11_97 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(25000)", span="206-206"];
m11_98 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="207-207"];
m11_94 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="201-201"];
m11_99 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="209-209"];
m11_100 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-600, actual)", span="210-210"];
m11_101 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="199-199"];
m11_120 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="244-244"];
m11_122 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="247-247"];
m11_123 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="249-249"];
m11_124 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="251-251"];
m11_125 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="252-252"];
m11_121 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="246-246"];
m11_126 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="254-254"];
m11_127 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-2000, actual)", span="255-255"];
m11_128 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="244-244"];
m11_138 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="275-275"];
m11_140 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="278-278"];
m11_141 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="280-280"];
m11_142 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="282-282"];
m11_143 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="283-283"];
m11_139 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="277-277"];
m11_144 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="286-286"];
m11_145 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-3999, actual)", span="287-287"];
m11_146 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="275-275"];
m11_527 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610"];
m11_2 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="59-59"];
m11_3 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="61-61"];
m11_4 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="62-62"];
m11_5 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(2000, actual)", span="63-63"];
m11_6 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="56-56"];
m11_183 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="355-355"];
m11_185 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="358-358"];
m11_186 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="360-360"];
m11_187 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="362-362"];
m11_188 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="363-363"];
m11_184 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="357-357"];
m11_189 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="365-365"];
m11_190 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(2000, actual)", span="366-366"];
m11_191 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="355-355"];
m11_75 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="169-169"];
m11_77 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="172-172"];
m11_78 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="174-174"];
m11_79 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(25000)", span="176-176"];
m11_80 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="177-177"];
m11_76 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="171-171"];
m11_81 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="179-179"];
m11_82 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-1000, actual)", span="180-180"];
m11_83 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="169-169"];
m11_66 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="154-154"];
m11_68 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="157-157"];
m11_69 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="159-159"];
m11_70 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="161-161"];
m11_71 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="162-162"];
m11_67 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="156-156"];
m11_72 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="164-164"];
m11_73 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(600, actual)", span="165-165"];
m11_74 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="154-154"];
m11_27 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="94-94"];
m11_39 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="113-113"];
m11_41 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="116-116"];
m11_42 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="118-118"];
m11_40 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="115-115"];
m11_43 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="119-119"];
m11_44 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-1600, actual)", span="120-120"];
m11_45 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="113-113"];
m11_495 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="976-976"];
m11_502 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="Update(eurusd, 25)", span="985-985"];
m11_501 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="983-983"];
m11_503 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="987-987"];
m11_496 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="var algo = new QCAlgorithm()", span="978-978"];
m11_500 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="982-982"];
m11_504 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(0m, actual)", span="988-988"];
m11_497 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="979-979"];
m11_498 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.SetCash(10000)", span="980-980"];
m11_499 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="981-981"];
m11_505 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="976-976"];
m11_458 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="915-915"];
m11_459 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: Security msft", span="917-917"];
m11_460 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: var algo = GetAlgorithm(out msft, leverage, 0)", span="918-918"];
m11_461 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", color=green, community=0, file="QCAlgorithm.Python.cs", label="2: Update(msft, 25)", span="920-920"];
m11_462 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: algo.Portfolio.SetCash(150000)", span="922-922"];
m11_463 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", color=green, community=0, file="QCAlgorithm.Python.cs", label="0: algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="923-923"];
m11_464 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", color=green, community=0, file="QCAlgorithm.Python.cs", label="2: Update(msft, 12.5m)", span="925-925"];
m11_465 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="934-934"];
m11_466 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-3000, actual)", span="935-935"];
m11_467 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="915-915"];
m11_129 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="259-259"];
m11_131 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="262-262"];
m11_132 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="264-264"];
m11_133 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="266-266"];
m11_134 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="267-267"];
m11_130 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="261-261"];
m11_135 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="270-270"];
m11_136 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-4000, actual)", span="271-271"];
m11_137 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="259-259"];
m11_416 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="815-815"];
m11_418 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="818-818"];
m11_419 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="820-820"];
m11_422 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="826-826"];
m11_420 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="822-822"];
m11_421 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="823-823"];
m11_417 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="817-817"];
m11_423 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="829-829"];
m11_424 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-3500, actual)", span="832-832"];
m11_425 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="815-815"];
m11_84 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="184-184"];
m11_86 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="187-187"];
m11_87 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="189-189"];
m11_88 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(25000)", span="191-191"];
m11_89 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="192-192"];
m11_85 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="186-186"];
m11_90 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="194-194"];
m11_91 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-999, actual)", span="195-195"];
m11_92 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="184-184"];
m11_18 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="QCAlgorithm.Python.cs", label="var rs = AverageGain / AverageLoss", span="96-96"];
m11_20 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Indicators.RelativeStrengthIndex.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="76-76"];
m11_21 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33"];
m11_19 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="QCAlgorithm.Python.cs", label="return 100m - (100m / (1 + rs));", span="97-97"];
m11_165 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="323-323"];
m11_167 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="326-326"];
m11_168 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="328-328"];
m11_169 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="330-330"];
m11_170 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="331-331"];
m11_166 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="325-325"];
m11_171 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="334-334"];
m11_172 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-5999, actual)", span="335-335"];
m11_173 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="323-323"];
m11_102 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="214-214"];
m11_104 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="217-217"];
m11_105 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="219-219"];
m11_106 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="221-221"];
m11_107 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="222-222"];
m11_103 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="216-216"];
m11_108 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="224-224"];
m11_109 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-2000, actual)", span="225-225"];
m11_110 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="214-214"];
m11_156 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="307-307"];
m11_158 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="310-310"];
m11_159 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="312-312"];
m11_160 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="314-314"];
m11_161 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="315-315"];
m11_157 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="309-309"];
m11_162 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="318-318"];
m11_163 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-6000, actual)", span="319-319"];
m11_164 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="307-307"];
m11_28 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="QCAlgorithm.Python.cs", label="QuantConnect.Indicators.RelativeStrengthIndex", span=""];
m11_29 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="97-97"];
m11_30 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-2000, actual)", span="98-98"];
m11_31 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="91-91"];
m11_219 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="421-421"];
m11_221 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="424-424"];
m11_222 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="426-426"];
m11_223 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="428-428"];
m11_224 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="429-429"];
m11_220 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="423-423"];
m11_225 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="437-437"];
m11_226 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-999, actual)", span="438-438"];
m11_227 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="421-421"];
m11_356 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="680-680"];
m11_358 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="683-683"];
m11_359 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="685-685"];
m11_362 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="692-692"];
m11_360 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="688-688"];
m11_361 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="689-689"];
m11_357 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="682-682"];
m11_363 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="696-696"];
m11_364 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-499, actual)", span="699-699"];
m11_365 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="680-680"];
m11_10 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="QCAlgorithm.Python.cs", label="AverageGain.Update(input.Time, input.Value - previousInput.Value)", span="80-80"];
m11_174 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="339-339"];
m11_176 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="342-342"];
m11_177 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="344-344"];
m11_178 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="346-346"];
m11_179 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="347-347"];
m11_175 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="341-341"];
m11_180 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="350-350"];
m11_181 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-5600, actual)", span="351-351"];
m11_182 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="339-339"];
m11_523 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m11_9 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="QCAlgorithm.Python.cs", label="previousInput != null && input.Value >= previousInput.Value", span="78-78"];
m11_484 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="960-960"];
m11_491 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="Update(eurusd, 26)", span="969-969"];
m11_490 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="967-967"];
m11_492 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, -1m)", span="971-971"];
m11_485 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="var algo = new QCAlgorithm()", span="962-962"];
m11_489 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="966-966"];
m11_493 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-3000m, actual)", span="972-972"];
m11_486 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="963-963"];
m11_487 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.SetCash(100000)", span="964-964"];
m11_488 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="965-965"];
m11_494 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="960-960"];
m11_482 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="867-867"];
m11_57 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="139-139"];
m11_59 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="142-142"];
m11_60 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="144-144"];
m11_61 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="146-146"];
m11_62 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="147-147"];
m11_58 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="141-141"];
m11_63 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="149-149"];
m11_64 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(999, actual)", span="150-150"];
m11_65 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="139-139"];
m11_396 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="770-770"];
m11_398 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="773-773"];
m11_399 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="775-775"];
m11_402 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="781-781"];
m11_400 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="777-777"];
m11_401 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="778-778"];
m11_397 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="772-772"];
m11_403 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="785-785"];
m11_404 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(50, actual)", span="788-788"];
m11_405 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="770-770"];
m11_406 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="792-792"];
m11_408 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="795-795"];
m11_409 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="797-797"];
m11_412 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 50)", span="804-804"];
m11_410 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(25000)", span="800-800"];
m11_411 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="801-801"];
m11_407 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="794-794"];
m11_413 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="808-808"];
m11_414 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-1250, actual)", span="811-811"];
m11_415 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="792-792"];
m11_8 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1121-1121"];
m11_11 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="67-67"];
m11_12 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="69-69"];
m11_13 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="70-70"];
m11_14 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="72-72"];
m11_15 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="73-73"];
m11_16 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(1999, actual)", span="75-75"];
m11_17 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="67-67"];
m11_481 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="998-998"];
m11_328 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="620-620"];
m11_330 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="623-623"];
m11_331 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="625-625"];
m11_332 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="627-627"];
m11_333 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="628-628"];
m11_329 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="622-622"];
m11_334 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="631-631"];
m11_335 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-9999, actual)", span="632-632"];
m11_336 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="620-620"];
m11_7 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1097-1097"];
m11_301 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="572-572"];
m11_303 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="575-575"];
m11_304 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="577-577"];
m11_305 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="579-579"];
m11_306 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="580-580"];
m11_302 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="574-574"];
m11_307 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="583-583"];
m11_308 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-5999, actual)", span="584-584"];
m11_309 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="572-572"];
m11_255 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="493-493"];
m11_257 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="496-496"];
m11_258 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="498-498"];
m11_259 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="500-500"];
m11_260 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="501-501"];
m11_256 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="495-495"];
m11_261 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="503-503"];
m11_262 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(3600, actual)", span="504-504"];
m11_263 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="493-493"];
m11_274 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="524-524"];
m11_276 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="527-527"];
m11_277 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="529-529"];
m11_278 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="531-531"];
m11_279 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="532-532"];
m11_275 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="526-526"];
m11_280 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="535-535"];
m11_281 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-3999, actual)", span="536-536"];
m11_282 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="524-524"];
m11_55 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m11_514 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="639-639"];
m11_246 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="478-478"];
m11_248 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="481-481"];
m11_249 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="483-483"];
m11_250 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(150000)", span="485-485"];
m11_251 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="486-486"];
m11_247 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="480-480"];
m11_252 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="488-488"];
m11_253 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(3999, actual)", span="489-489"];
m11_254 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="478-478"];
m11_524 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="QCAlgorithm.Python.cs", label="security.SetMarketPrice(new TradeBar\r\n            {\r\n                Time = DateTime.Now,\r\n                Symbol = security.Symbol,\r\n                Open = close,\r\n                High = close,\r\n                Low = close,\r\n                Close = close\r\n            })", span="1123-1131"];
m11_525 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1121-1121"];
m11_56 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m11_273 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1109-1109"];
m11_515 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = new QCAlgorithm()", span="1112-1112"];
m11_518 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1115-1115"];
m11_520 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="msft.MarginModel = new SecurityMarginModel(initialMarginRequirement, maintenanceMarginRequirement)", span="1117-1117"];
m11_519 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="msft = algo.Securities[Symbols.MSFT]", span="1116-1116"];
m11_521 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="return algo;", span="1118-1118"];
m11_516 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1113-1113"];
m11_517 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.SetCash(100000)", span="1114-1114"];
m11_522 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1109-1109"];
m11_526 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="121-121"];
m11_32 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="102-102"];
m11_34 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="105-105"];
m11_35 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="107-107"];
m11_33 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="104-104"];
m11_36 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="108-108"];
m11_37 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-1999, actual)", span="109-109"];
m11_38 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="102-102"];
m11_480 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1241-1241"];
m11_283 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="540-540"];
m11_285 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="543-543"];
m11_286 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="545-545"];
m11_287 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="547-547"];
m11_288 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="548-548"];
m11_284 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="542-542"];
m11_289 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="551-551"];
m11_290 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-3600, actual)", span="552-552"];
m11_291 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="540-540"];
m11_506 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = new QCAlgorithm()", span="1100-1100"];
m11_509 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1103-1103"];
m11_511 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="msft.SetLeverage(leverage)", span="1105-1105"];
m11_510 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="msft = algo.Securities[Symbols.MSFT]", span="1104-1104"];
m11_512 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="return algo;", span="1106-1106"];
m11_507 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1101-1101"];
m11_508 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.SetCash(100000)", span="1102-1102"];
m11_513 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1097-1097"];
m11_292 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="556-556"];
m11_294 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="559-559"];
m11_295 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Update(msft, 25)", span="561-561"];
m11_296 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio.SetCash(50000)", span="563-563"];
m11_297 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="564-564"];
m11_293 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Security msft", span="558-558"];
m11_298 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="567-567"];
m11_299 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Assert.AreEqual(-6000, actual)", span="568-568"];
m11_300 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="556-556"];
m11_528 [file="QCAlgorithm.Python.cs", label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", span=""];
m12_176 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", span="295-295"];
m12_177 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="var expiry1 = new DateTime(2016, 12, 02)", span="297-297"];
m12_178 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="var expiry2 = new DateTime(2016, 12, 09)", span="298-298"];
m12_185 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry1),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry1),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry1),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry1),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry2),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry2), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry3), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry3), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry4), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry4), // 9\r\n            }", span="310-322"];
m12_179 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="var expiry3 = new DateTime(2016, 12, 16)", span="299-299"];
m12_180 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="var expiry4 = new DateTime(2016, 12, 23)", span="300-300"];
m12_181 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = new DateTime(2016, 02, 26) }", span="302-302"];
m12_182 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe.FrontMonth()", span="304-304"];
m12_186 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="var filtered = filter.Filter(new OptionFilterUniverse(symbols, underlying)).ToList()", span="324-324"];
m12_183 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse)", span="306-307"];
m12_184 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="309-309"];
m12_187 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="Assert.AreEqual(4, filtered.Count)", span="325-325"];
m12_188 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersFrontMonth()", span="295-295"];
m12_134 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", span="226-226"];
m12_135 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="var expiry1 = new DateTime(2016, 12, 02)", span="228-228"];
m12_136 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="var expiry2 = new DateTime(2016, 12, 09)", span="229-229"];
m12_143 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry1),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry1),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry1),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry1),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry2),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry2), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry3), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry3), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry4), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry4), // 9\r\n            }", span="241-253"];
m12_137 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="var expiry3 = new DateTime(2016, 12, 16)", span="230-230"];
m12_138 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="var expiry4 = new DateTime(2016, 12, 23)", span="231-231"];
m12_139 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = new DateTime(2016, 02, 26) }", span="233-233"];
m12_140 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe.WeeklysOnly()", span="235-235"];
m12_144 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="var filtered = filter.Filter(new OptionFilterUniverse(symbols, underlying)).ToList()", span="255-255"];
m12_141 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse).ApplyOptionTypesFilter()", span="237-238"];
m12_142 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="240-240"];
m12_145 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="Assert.AreEqual(8, filtered.Count)", span="256-256"];
m12_146 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutStandardContracts()", span="226-226"];
m12_218 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", span="365-365"];
m12_219 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var expiry1 = new DateTime(2016, 12, 02)", span="367-367"];
m12_220 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var expiry2 = new DateTime(2016, 12, 09)", span="368-368"];
m12_227 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry1),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry1),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry1),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry1),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry2),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry2), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry2), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry3), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry4), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry4), // 9\r\n            }", span="382-394"];
m12_221 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var expiry3 = new DateTime(2016, 12, 16)", span="369-369"];
m12_222 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var expiry4 = new DateTime(2016, 12, 23)", span="370-370"];
m12_223 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = new DateTime(2016, 02, 26) }", span="372-372"];
m12_224 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => from x in universe\r\n                                                                                        where x.ID.Date > new DateTime(2016, 12, 15)\r\n                                                                                        select x", span="374-376"];
m12_228 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var u = new OptionFilterUniverse(symbols, underlying)", span="396-396"];
m12_225 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse)", span="378-379"];
m12_226 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="381-381"];
m12_229 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="var filtered = filter.Filter(u).ToList()", span="397-397"];
m12_231 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="Assert.AreEqual(true, u.IsDynamic)", span="399-399"];
m12_230 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="Assert.AreEqual(3, filtered.Count)", span="398-398"];
m12_232 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.LinqExpressionsImmediatelyMakeUniverseDynamic()", span="365-365"];
m12_19 [cluster="QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", file="RegressionTests.cs", label="Entry QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", span="33-33"];
m12_150 [cluster="QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly()", span="108-108"];
m12_0 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", span="28-28"];
m12_1 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="var expiry = new DateTime(2016, 03, 04)", span="30-30"];
m12_2 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = new DateTime(2016, 02, 26) }", span="31-31"];
m12_6 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry), // 9\r\n            }", span="41-53"];
m12_3 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe\r\n                                .Strikes(-2, 3)\r\n                                .Expiration(TimeSpan.Zero, TimeSpan.MaxValue)", span="33-35"];
m12_7 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="var filterUniverse = new OptionFilterUniverse(symbols, underlying)", span="55-55"];
m12_4 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse)", span="37-38"];
m12_5 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="40-40"];
m12_8 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="var filtered = filter.Filter(filterUniverse).ToList()", span="56-56"];
m12_10 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[3], filtered[0])", span="58-58"];
m12_11 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[4], filtered[1])", span="59-59"];
m12_12 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[5], filtered[2])", span="60-60"];
m12_13 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[6], filtered[3])", span="61-61"];
m12_14 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[7], filtered[4])", span="62-62"];
m12_15 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Assert.AreEqual(true, filterUniverse.IsDynamic)", span="63-63"];
m12_9 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Assert.AreEqual(5, filtered.Count)", span="57-57"];
m12_16 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRange()", span="28-28"];
m12_236 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="379-379"];
m12_26 [cluster="lambda expression", file="RegressionTests.cs", label="universe\r\n                                .Strikes(-2, 3)\r\n                                .Expiration(TimeSpan.Zero, TimeSpan.MaxValue)", span="33-35"];
m12_31 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse)", span="38-38"];
m12_25 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="33-35"];
m12_27 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="33-35"];
m12_30 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="38-38"];
m12_32 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="38-38"];
m12_51 [cluster="lambda expression", file="RegressionTests.cs", label="universe\r\n                                .Strikes(-2, 2)\r\n                                .Expiration(TimeSpan.Zero, TimeSpan.MaxValue)", span="72-74"];
m12_54 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse)", span="77-77"];
m12_50 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="72-74"];
m12_52 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="72-74"];
m12_53 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="77-77"];
m12_55 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="77-77"];
m12_75 [cluster="lambda expression", file="RegressionTests.cs", label="universe\r\n                    .Strikes(-10, 10)\r\n                    .Expiration(TimeSpan.FromDays(3), TimeSpan.FromDays(7))", span="110-112"];
m12_79 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse)", span="115-115"];
m12_74 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="110-112"];
m12_76 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="110-112"];
m12_78 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="115-115"];
m12_80 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="115-115"];
m12_102 [cluster="lambda expression", file="RegressionTests.cs", label=universe, span="157-157"];
m12_105 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse).ApplyOptionTypesFilter()", span="160-160"];
m12_101 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="157-157"];
m12_103 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="157-157"];
m12_104 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="160-160"];
m12_106 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="160-160"];
m12_129 [cluster="lambda expression", file="RegressionTests.cs", label=universe, span="198-198"];
m12_132 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse).ApplyOptionTypesFilter()", span="201-201"];
m12_128 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="198-198"];
m12_130 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="198-198"];
m12_131 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="201-201"];
m12_133 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="201-201"];
m12_148 [cluster="lambda expression", file="RegressionTests.cs", label="universe.WeeklysOnly()", span="235-235"];
m12_152 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse).ApplyOptionTypesFilter()", span="238-238"];
m12_147 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="235-235"];
m12_149 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="235-235"];
m12_151 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="238-238"];
m12_153 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="238-238"];
m12_170 [cluster="lambda expression", file="RegressionTests.cs", label="universe.IncludeWeeklys()", span="269-269"];
m12_174 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse).ApplyOptionTypesFilter()", span="272-272"];
m12_169 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="269-269"];
m12_171 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="269-269"];
m12_173 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="272-272"];
m12_175 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="272-272"];
m12_190 [cluster="lambda expression", file="RegressionTests.cs", label="universe.FrontMonth()", span="304-304"];
m12_194 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse)", span="307-307"];
m12_189 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="304-304"];
m12_191 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="304-304"];
m12_193 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="307-307"];
m12_195 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="307-307"];
m12_212 [cluster="lambda expression", file="RegressionTests.cs", label="universe.BackMonth()", span="338-338"];
m12_216 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse)", span="341-341"];
m12_211 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="338-338"];
m12_213 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="338-338"];
m12_215 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="341-341"];
m12_217 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="341-341"];
m12_234 [cluster="lambda expression", file="RegressionTests.cs", label="from x in universe\r\n                                                                                        where x.ID.Date > new DateTime(2016, 12, 15)\r\n                                                                                        select x", span="374-376"];
m12_237 [cluster="lambda expression", file="RegressionTests.cs", label="universeFunc(universe as OptionFilterUniverse)", span="379-379"];
m12_233 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="374-376"];
m12_235 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="374-376"];
m12_238 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="379-379"];
m12_107 [cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", span="119-119"];
m12_17 [cluster="System.DateTime.DateTime(int, int, int)", file="RegressionTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m12_196 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", span="329-329"];
m12_197 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var expiry1 = new DateTime(2016, 12, 02)", span="331-331"];
m12_198 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var expiry2 = new DateTime(2016, 12, 09)", span="332-332"];
m12_205 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry1),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry1),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry1),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry1),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry2),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry2), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry2), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry3), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry4), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry4), // 9\r\n            }", span="344-356"];
m12_199 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var expiry3 = new DateTime(2016, 12, 16)", span="333-333"];
m12_200 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var expiry4 = new DateTime(2016, 12, 23)", span="334-334"];
m12_201 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = new DateTime(2016, 02, 26) }", span="336-336"];
m12_202 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe.BackMonth()", span="338-338"];
m12_206 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var filterUniverse = new OptionFilterUniverse(symbols, underlying)", span="358-358"];
m12_203 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse)", span="340-341"];
m12_204 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="343-343"];
m12_207 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="var filtered = filter.Filter(filterUniverse).ToList()", span="359-359"];
m12_209 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="Assert.AreEqual(false, filterUniverse.IsDynamic)", span="361-361"];
m12_208 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="Assert.AreEqual(3, filtered.Count)", span="360-360"];
m12_210 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersBackMonth()", span="329-329"];
m12_21 [cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="RegressionTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", span="86-86"];
m12_214 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonth()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.BackMonth()", span="188-188"];
m12_29 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="RegressionTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271"];
m12_154 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", span="260-260"];
m12_155 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var expiry1 = new DateTime(2016, 12, 02)", span="262-262"];
m12_156 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var expiry2 = new DateTime(2016, 12, 09)", span="263-263"];
m12_163 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry1),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry1),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry1),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry1),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry2),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry2), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry3), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry3), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry4), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry4), // 9\r\n            }", span="275-287"];
m12_157 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var expiry3 = new DateTime(2016, 12, 16)", span="264-264"];
m12_158 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var expiry4 = new DateTime(2016, 12, 23)", span="265-265"];
m12_159 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = new DateTime(2016, 02, 26) }", span="267-267"];
m12_160 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe.IncludeWeeklys()", span="269-269"];
m12_164 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var filterUniverse = new OptionFilterUniverse(symbols, underlying)", span="288-288"];
m12_161 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse).ApplyOptionTypesFilter()", span="271-272"];
m12_162 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="274-274"];
m12_165 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="var filtered = filter.Filter(filterUniverse).ToList()", span="289-289"];
m12_167 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="Assert.AreEqual(false, filterUniverse.IsDynamic)", span="291-291"];
m12_166 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="Assert.AreEqual(10, filtered.Count)", span="290-290"];
m12_168 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutNothingAfterFilteringByType()", span="260-260"];
m12_28 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="RegressionTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199"];
m12_192 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", span="159-159"];
m12_56 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", span="105-105"];
m12_57 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="var time = new DateTime(2016, 02, 26)", span="107-107"];
m12_58 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = time }", span="108-108"];
m12_62 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(0)), // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(1)), // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(2)), // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(3)), // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(4)), // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(5)), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(6)), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(7)), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(8)), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, time.AddDays(9)), // 9\r\n            }", span="118-130"];
m12_59 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe\r\n                    .Strikes(-10, 10)\r\n                    .Expiration(TimeSpan.FromDays(3), TimeSpan.FromDays(7))", span="110-112"];
m12_63 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="var filterUniverse = new OptionFilterUniverse(symbols, underlying)", span="131-131"];
m12_60 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse)", span="114-115"];
m12_61 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="117-117"];
m12_64 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="var filtered = filter.Filter(filterUniverse).ToList()", span="132-132"];
m12_66 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[3], filtered[0])", span="134-134"];
m12_67 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[4], filtered[1])", span="135-135"];
m12_68 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[5], filtered[2])", span="136-136"];
m12_69 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[6], filtered[3])", span="137-137"];
m12_70 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[7], filtered[4])", span="138-138"];
m12_71 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Assert.AreEqual(true, filterUniverse.IsDynamic)", span="139-139"];
m12_65 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Assert.AreEqual(5, filtered.Count)", span="133-133"];
m12_72 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersExpiryRange()", span="105-105"];
m12_77 [cluster="System.TimeSpan.FromDays(double)", file="RegressionTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m12_22 [cluster="QuantConnect.Securities.FuncSecurityDerivativeFilter.Filter(QuantConnect.Securities.IDerivativeSecurityFilterUniverse)", file="RegressionTests.cs", label="Entry QuantConnect.Securities.FuncSecurityDerivativeFilter.Filter(QuantConnect.Securities.IDerivativeSecurityFilterUniverse)", span="43-43"];
m12_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RegressionTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m12_20 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", span="99-99"];
m12_34 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", span="67-67"];
m12_35 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="var expiry = new DateTime(2016, 03, 04)", span="69-69"];
m12_36 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 7.5m, Time = new DateTime(2016, 02, 26) }", span="70-70"];
m12_40 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry), // 9\r\n            }", span="80-92"];
m12_37 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe\r\n                                .Strikes(-2, 2)\r\n                                .Expiration(TimeSpan.Zero, TimeSpan.MaxValue)", span="72-74"];
m12_41 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="var filterUniverse = new OptionFilterUniverse(symbols, underlying)", span="94-94"];
m12_38 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse)", span="76-77"];
m12_39 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="79-79"];
m12_42 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="var filtered = filter.Filter(filterUniverse).ToList()", span="95-95"];
m12_44 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[1], filtered[0])", span="97-97"];
m12_45 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[2], filtered[1])", span="98-98"];
m12_46 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[3], filtered[2])", span="99-99"];
m12_47 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[4], filtered[3])", span="100-100"];
m12_48 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Assert.AreEqual(true, filterUniverse.IsDynamic)", span="101-101"];
m12_43 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Assert.AreEqual(4, filtered.Count)", span="96-96"];
m12_49 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersStrikeRangeWithVaryingDistance()", span="67-67"];
m12_108 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", span="185-185"];
m12_109 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var expiry1 = new DateTime(2017, 01, 04)", span="187-187"];
m12_110 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var expiry2 = new DateTime(2017, 01, 06)", span="188-188"];
m12_121 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry1),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry2),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry3),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry4),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry5),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry6), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry6), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry6), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry7), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry8), // 9\r\n            }", span="204-216"];
m12_111 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var expiry3 = new DateTime(2017, 01, 11)", span="189-189"];
m12_112 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var expiry4 = new DateTime(2017, 01, 13)", span="190-190"];
m12_113 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var expiry5 = new DateTime(2017, 01, 18)", span="191-191"];
m12_114 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var expiry6 = new DateTime(2017, 01, 19)", span="192-192"];
m12_115 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var expiry7 = new DateTime(2017, 01, 25)", span="193-193"];
m12_116 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var expiry8 = new DateTime(2017, 01, 27)", span="194-194"];
m12_117 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = new DateTime(2016, 12, 29) }", span="196-196"];
m12_118 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe", span="198-198"];
m12_122 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var filtered = filter.Filter(new OptionFilterUniverse(symbols, underlying)).ToList()", span="218-218"];
m12_119 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse).ApplyOptionTypesFilter()", span="200-201"];
m12_120 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="203-203"];
m12_124 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[5], filtered[0])", span="220-220"];
m12_125 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[6], filtered[1])", span="221-221"];
m12_126 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[7], filtered[2])", span="222-222"];
m12_123 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="Assert.AreEqual(3, filtered.Count)", span="219-219"];
m12_127 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklysIfFridayHoliday()", span="185-185"];
m12_33 [cluster="System.Func<T, TResult>.Invoke(T)", file="RegressionTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m12_81 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", span="144-144"];
m12_82 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var expiry1 = new DateTime(2017, 01, 04)", span="146-146"];
m12_83 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var expiry2 = new DateTime(2017, 01, 06)", span="147-147"];
m12_94 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var symbols = new[]\r\n            {\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 2, expiry1),  // 0\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 5, expiry2),  // 1\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 7, expiry3),  // 2\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 8, expiry4),  // 3\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 9, expiry5),  // 4\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 10, expiry6), // 5\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 11, expiry6), // 6\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 12, expiry6), // 7\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 15, expiry7), // 8\r\n                Symbol.CreateOption(''SPY'', Market.USA, OptionStyle.American, OptionRight.Put, 20, expiry8), // 9\r\n            }", span="163-175"];
m12_84 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var expiry3 = new DateTime(2017, 01, 11)", span="148-148"];
m12_85 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var expiry4 = new DateTime(2017, 01, 13)", span="149-149"];
m12_86 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var expiry5 = new DateTime(2017, 01, 18)", span="150-150"];
m12_87 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var expiry6 = new DateTime(2017, 01, 20)", span="151-151"];
m12_88 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var expiry7 = new DateTime(2017, 01, 25)", span="152-152"];
m12_89 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var expiry8 = new DateTime(2017, 01, 27)", span="153-153"];
m12_90 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var underlying = new Tick { Value = 10m, Time = new DateTime(2016, 12, 29) }", span="155-155"];
m12_91 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="Func<OptionFilterUniverse, OptionFilterUniverse> universeFunc = universe => universe", span="157-157"];
m12_95 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var filtered = filter.Filter(new OptionFilterUniverse(symbols, underlying)).ToList()", span="177-177"];
m12_92 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func =\r\n                universe => universeFunc(universe as OptionFilterUniverse).ApplyOptionTypesFilter()", span="159-160"];
m12_93 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="var filter = new FuncSecurityDerivativeFilter(func)", span="162-162"];
m12_97 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[5], filtered[0])", span="179-179"];
m12_98 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[6], filtered[1])", span="180-180"];
m12_99 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="Assert.AreEqual(symbols[7], filtered[2])", span="181-181"];
m12_96 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="Assert.AreEqual(3, filtered.Count)", span="178-178"];
m12_100 [cluster="QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Securities.OptionFilterTests.FiltersOutWeeklys()", span="144-144"];
m12_18 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="RegressionTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m12_73 [cluster="System.DateTime.AddDays(double)", file="RegressionTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m12_172 [cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98"];
m12_239 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_240 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_241 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_242 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_243 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_244 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_245 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_246 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_247 [file="RegressionTests.cs", label=universeFunc, span=""];
m12_248 [file="RegressionTests.cs", label=universeFunc, span=""];
m13_46 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ScheduledEventExceptionInterpreter.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m13_47 [cluster="System.Math.Max(decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m13_48 [cluster="System.Math.Min(decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m13_26 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", span="184-184"];
m13_27 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Type == RenkoType.Wicked", span="186-186"];
m13_32 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Start = time", span="191-191"];
m13_33 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="EndTime = time", span="192-192"];
m13_36 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Close = Math.Min(highClose, Math.Max(lowClose, currentValue))", span="198-198"];
m13_37 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Volume += volumeSinceLastUpdate", span="199-199"];
m13_38 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="currentValue <= lowClose  || currentValue >= highClose", span="202-202"];
m13_28 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="throw new InvalidOperationException(''A \''Wicked\'' RenkoBar cannot be updated!'');", span="187-187"];
m13_29 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label=IsClosed, span="190-190"];
m13_30 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="return true;", span="190-190"];
m13_31 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Start == DateTime.MinValue", span="191-191"];
m13_34 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="decimal lowClose = Open - BrickSize", span="195-195"];
m13_35 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="decimal highClose = Open + BrickSize", span="196-196"];
m13_39 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="IsClosed = true", span="204-204"];
m13_40 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Close > High", span="207-207"];
m13_41 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="High = Close", span="207-207"];
m13_42 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Close < Low", span="208-208"];
m13_43 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Low = Close", span="208-208"];
m13_44 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="return IsClosed;", span="210-210"];
m13_45 [cluster="QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Data.Market.RenkoBar.Update(System.DateTime, decimal, long)", span="184-184"];
m13_53 [cluster="QuantConnect.Data.Market.RenkoBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Data.Market.RenkoBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="235-235"];
m13_54 [cluster="QuantConnect.Data.Market.RenkoBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventExceptionInterpreter.cs", label="throw new NotSupportedException(''RenkoBar does not support the GetSource function. This function should never be called on this type.'');", span="237-237"];
m13_55 [cluster="QuantConnect.Data.Market.RenkoBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Data.Market.RenkoBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="235-235"];
m13_0 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar()", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Data.Market.RenkoBar.RenkoBar()", span="122-122"];
m13_1 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar()", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Data.Market.RenkoBar.RenkoBar()", span="122-122"];
m13_52 [cluster="System.NotSupportedException.NotSupportedException(string)", file="ScheduledEventExceptionInterpreter.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m13_2 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", span="134-134"];
m13_3 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Type = RenkoType.Classic", span="137-137"];
m13_4 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Symbol = symbol", span="139-139"];
m13_5 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Start = time", span="140-140"];
m13_6 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="EndTime = time", span="141-141"];
m13_7 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="BrickSize = brickSize", span="142-142"];
m13_8 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Open = open", span="143-143"];
m13_9 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Close = open", span="144-144"];
m13_10 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Volume = volume", span="145-145"];
m13_11 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="High = open", span="146-146"];
m13_12 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Low = open", span="147-147"];
m13_13 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, decimal, decimal, long)", span="134-134"];
m13_49 [cluster="QuantConnect.Data.Market.RenkoBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Data.Market.RenkoBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="223-223"];
m13_50 [cluster="QuantConnect.Data.Market.RenkoBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="ScheduledEventExceptionInterpreter.cs", label="throw new NotSupportedException(''RenkoBar does not support the Reader function. This function should never be called on this type.'');", span="225-225"];
m13_51 [cluster="QuantConnect.Data.Market.RenkoBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Data.Market.RenkoBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="223-223"];
m13_14 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", span="161-161"];
m13_15 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Type = RenkoType.Wicked", span="164-164"];
m13_16 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Symbol = symbol", span="166-166"];
m13_17 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Start = start", span="167-167"];
m13_18 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="EndTime = endTime", span="168-168"];
m13_19 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="BrickSize = brickSize", span="169-169"];
m13_20 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Open = open", span="170-170"];
m13_21 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Close = close", span="171-171"];
m13_23 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="High = high", span="173-173"];
m13_24 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Low = low", span="174-174"];
m13_22 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Volume = 0", span="172-172"];
m13_25 [cluster="QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Data.Market.RenkoBar.RenkoBar(QuantConnect.Symbol, System.DateTime, System.DateTime, decimal, decimal, decimal, decimal, decimal)", span="161-161"];
m13_56 [cluster="QuantConnect.Data.Market.RenkoBar.Clone()", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Data.Market.RenkoBar.Clone()", span="247-247"];
m13_57 [cluster="QuantConnect.Data.Market.RenkoBar.Clone()", file="ScheduledEventExceptionInterpreter.cs", label="return new RenkoBar\r\n            {\r\n                Type = Type,\r\n                BrickSize = BrickSize,\r\n                Open = Open,\r\n                Volume = Volume,\r\n                Close = Close,\r\n                EndTime = EndTime,\r\n                High = High,\r\n                IsClosed = IsClosed,\r\n                Low = Low,\r\n                Time = Time,\r\n                Value = Value,\r\n                Symbol = Symbol,\r\n                DataType = DataType\r\n            };", span="249-264"];
m13_58 [cluster="QuantConnect.Data.Market.RenkoBar.Clone()", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Data.Market.RenkoBar.Clone()", span="247-247"];
m13_59 [file="ScheduledEventExceptionInterpreter.cs", label="QuantConnect.Data.Market.RenkoBar", span=""];
n13 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
n13 -> n9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n4  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n0  [key=2, style=dotted];
n8 -> n10  [color=darkseagreen4, key=1, label=order, style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n11 -> n7  [color=blue, key=0, style=bold];
d70 -> d70  [color=green, key=1, label=sub, style=dashed];
d70 -> d71  [color=green, key=0, style=solid];
d70 -> d72  [color=green, key=2, style=dotted];
d70 -> d52  [color=green, key=2, style=dotted];
d70 -> d48  [color=green, key=2, style=dotted];
d70 -> d73  [color=green, key=1, label="lambda expression", style=dashed];
d20 -> d70  [color=green, key=0, style=solid];
d20 -> d3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d11  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d27  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d33  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d36  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d42  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d71 -> d20  [color=blue, key=0, style=bold];
d73 -> d74  [color=green, key=0, style=solid];
d74 -> d75  [color=green, key=0, style=solid];
d75 -> d73  [color=blue, key=0, style=bold];
d5 -> d20  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d5 -> d19  [key=2, style=dotted];
d13 -> d20  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d19  [key=2, style=dotted];
d29 -> d20  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d29 -> d19  [key=2, style=dotted];
d32 -> d20  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d19  [key=2, style=dotted];
d35 -> d20  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d19  [key=2, style=dotted];
d38 -> d20  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d19  [key=2, style=dotted];
d44 -> d20  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d19  [key=2, style=dotted];
d45 -> d20  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d45 -> d19  [key=2, style=dotted];
d3 -> d5  [color=darkseagreen4, key=1, label=forexTrade, style=dashed];
d3 -> d4  [key=0, style=solid];
d3 -> d17  [key=2, style=dotted];
d11 -> d13  [color=darkseagreen4, key=1, label=forexQuote, style=dashed];
d11 -> d12  [key=0, style=solid];
d11 -> d17  [key=2, style=dotted];
d27 -> d29  [color=darkseagreen4, key=1, label=forex, style=dashed];
d27 -> d28  [key=0, style=solid];
d27 -> d47  [key=2, style=dotted];
d30 -> d32  [color=darkseagreen4, key=1, label=equity, style=dashed];
d30 -> d31  [key=0, style=solid];
d30 -> d47  [key=2, style=dotted];
d33 -> d35  [color=darkseagreen4, key=1, label=option, style=dashed];
d33 -> d34  [key=0, style=solid];
d33 -> d47  [key=2, style=dotted];
d36 -> d38  [color=darkseagreen4, key=1, label=cfd, style=dashed];
d36 -> d37  [key=0, style=solid];
d36 -> d47  [key=2, style=dotted];
d42 -> d44  [color=darkseagreen4, key=1, label=crypto, style=dashed];
d42 -> d45  [color=darkseagreen4, key=1, label=crypto, style=dashed];
d42 -> d43  [key=0, style=solid];
d42 -> d47  [key=2, style=dotted];
d50 -> d52  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d41 -> d48  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d19  [key=2, style=dotted];
d41 -> d49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d56 -> d48  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d56 -> d64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d59 -> d48  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d59 -> d67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d4 -> d5  [key=0, style=solid];
d4 -> d18  [key=2, style=dotted];
d4 -> d19  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d21  [key=2, style=dotted];
d6 -> d8  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
d6 -> d9  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
d12 -> d13  [key=0, style=solid];
d12 -> d19  [key=2, style=dotted];
d12 -> d18  [key=2, style=dotted];
d14 -> d0  [color=blue, key=0, style=bold];
d28 -> d29  [key=0, style=solid];
d28 -> d19  [key=2, style=dotted];
d28 -> d18  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d31 -> d19  [key=2, style=dotted];
d31 -> d18  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d19  [key=2, style=dotted];
d34 -> d18  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d19  [key=2, style=dotted];
d37 -> d18  [key=2, style=dotted];
d39 -> d41  [color=darkseagreen4, key=1, label=future, style=dashed];
d39 -> d40  [key=0, style=solid];
d39 -> d47  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d43 -> d19  [key=2, style=dotted];
d43 -> d18  [key=2, style=dotted];
d46 -> d25  [color=blue, key=0, style=bold];
d2 -> d3  [key=0, style=solid];
d2 -> d11  [color=darkseagreen4, key=1, label=algo, style=dashed];
d2 -> d16  [key=2, style=dotted];
d2 -> d10  [color=darkseagreen4, key=1, label=algo, style=dashed];
d10 -> d11  [key=0, style=solid];
d10 -> d24  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d26 -> d30  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d33  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d36  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d42  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d39  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d16  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d51 -> d49  [color=blue, key=0, style=bold];
d40 -> d41  [key=0, style=solid];
d40 -> d19  [key=2, style=dotted];
d40 -> d18  [key=2, style=dotted];
d54 -> d56  [color=darkseagreen4, key=1, label=qcAlgorithm, style=dashed];
d54 -> d59  [color=darkseagreen4, key=1, label=qcAlgorithm, style=dashed];
d54 -> d55  [key=0, style=solid];
d54 -> d16  [key=2, style=dotted];
d54 -> d58  [color=darkseagreen4, key=1, label=qcAlgorithm, style=dashed];
d55 -> d56  [key=0, style=solid];
d55 -> d62  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d57 -> d63  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d58 -> d62  [key=2, style=dotted];
d60 -> d61  [key=0, style=solid];
d60 -> d63  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d7 -> d10  [color=darkseagreen4, key=1, label=dataFeeds, style=dashed];
d7 -> d8  [key=0, style=solid];
d7 -> d22  [key=2, style=dotted];
d8 -> d10  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d9 -> d23  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d1 -> d15  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d66 -> d64  [color=blue, key=0, style=bold];
d65 -> d66  [key=0, style=solid];
d61 -> d53  [color=blue, key=0, style=bold];
d69 -> d67  [color=blue, key=0, style=bold];
d68 -> d69  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_0  [key=2, style=dotted];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> n12  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_29  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_4  [color=green, key=1, label=string, style=dashed];
m0_2 -> m0_5  [color=green, key=1, label=decimal, style=dashed];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_7  [color=green, key=2, style=dotted];
m0_6 -> m0_2  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m0_8 -> m0_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m0_8 -> m0_13  [color=darkorchid, key=3, label="method methodReturn decimal GetValueImpl", style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_10 -> m0_14  [key=0, style=solid];
m0_10 -> m0_15  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=0, style=solid];
m0_12 -> m0_16  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_8  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_21 -> m0_17  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_24 -> m0_27  [key=2, style=dotted];
m0_24 -> m0_28  [key=2, style=dotted];
m0_25 -> m0_23  [color=blue, key=0, style=bold];
m0_35 -> m0_3  [color=green, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_5  [color=green, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m0_35 -> m0_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m1_94 -> m1_95  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_96 -> m1_94  [color=blue, key=0, style=bold];
m1_43 -> m1_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_43 -> m1_124  [key=0, style=solid];
m1_43 -> m1_127  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_43 -> m1_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_43 -> m1_136  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_43 -> m1_153  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_43 -> m1_139  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_43 -> m1_144  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_43 -> m1_95  [color=darkorchid, key=3, label="method methodReturn decimal GetOpenOrdersReservedQuantity", style=bold];
m1_43 -> m1_137  [color=darkorchid, key=3, label="method methodReturn decimal GetOpenOrdersReservedQuantity", style=bold];
m1_144 -> m1_42  [key=2, style=dotted];
m1_144 -> m1_144  [color=darkseagreen4, key=1, label=quantityInTargetCurrency, style=dashed];
m1_144 -> m1_145  [key=0, style=solid];
m1_142 -> m1_42  [color=darkorchid, key=3, label="Local variable decimal quantityInTargetCurrency", style=bold];
m1_142 -> m1_144  [color=darkseagreen4, key=1, label=quantityInTargetCurrency, style=dashed];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_145  [color=darkseagreen4, key=1, label=quantityInTargetCurrency, style=dashed];
m1_138 -> m1_144  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m1_138 -> m1_142  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_146  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_127  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_132  [color=darkseagreen4, key=1, label=targetCurrency, style=dashed];
m1_127 -> m1_134  [color=darkseagreen4, key=1, label=targetCurrency, style=dashed];
m1_127 -> m1_143  [color=darkseagreen4, key=1, label=targetCurrency, style=dashed];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_136  [key=0, style=solid];
m1_129 -> m1_133  [color=darkseagreen4, key=1, label=portfolioSecurity, style=dashed];
m1_129 -> m1_134  [color=darkseagreen4, key=1, label=portfolioSecurity, style=dashed];
m1_129 -> m1_135  [color=darkseagreen4, key=1, label=portfolioSecurity, style=dashed];
m1_136 -> m1_138  [color=darkseagreen4, key=1, label=openOrders, style=dashed];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_150  [key=2, style=dotted];
m1_136 -> m1_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_143  [color=darkseagreen4, key=1, label=orderSecurity, style=dashed];
m1_137 -> m1_32  [color=darkorchid, key=3, label="Local variable decimal openOrdersReservedQuantity", style=bold];
m1_137 -> m1_142  [color=darkorchid, key=3, label="Local variable decimal openOrdersReservedQuantity", style=bold];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_145  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_137 -> m1_146  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=0, style=solid];
m1_145 -> m1_138  [key=0, style=solid];
m1_145 -> m1_145  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_145 -> m1_146  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_138  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_126 -> m1_147  [key=0, style=solid];
m1_125 -> m1_127  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_136  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m1_128 -> m1_153  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m1_128 -> d22  [key=2, style=dotted];
m1_128 -> m1_133  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m1_128 -> m1_135  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_134  [key=0, style=solid];
m1_134 -> m1_129  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_133 -> m1_129  [key=0, style=solid];
m1_133 -> m1_149  [key=2, style=dotted];
m1_135 -> m1_129  [key=0, style=solid];
m1_135 -> m1_149  [key=2, style=dotted];
m1_131 -> m1_129  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_130 -> m1_132  [color=darkseagreen4, key=1, label=basePortfolioSecurity, style=dashed];
m1_130 -> m1_131  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_147 -> m1_43  [color=blue, key=0, style=bold];
m1_151 -> m1_153  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_151 -> m1_152  [key=0, style=solid];
m1_153 -> m1_153  [color=darkseagreen4, key=1, label=dir, style=dashed];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_155  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_154 -> m1_151  [color=blue, key=0, style=bold];
m1_42 -> m1_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_42 -> m1_112  [key=0, style=solid];
m1_42 -> m1_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_42 -> m1_115  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_42 -> m1_117  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_42 -> m1_119  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_42 -> m1_121  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_42 -> m1_43  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m1_42 -> m1_138  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_112 -> m1_32  [color=darkorchid, key=3, label="Local variable decimal orderPrice", style=bold];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_116  [key=0, style=solid];
m1_113 -> m1_118  [key=0, style=solid];
m1_113 -> m1_120  [key=0, style=solid];
m1_115 -> m1_122  [key=0, style=solid];
m1_117 -> m1_122  [key=0, style=solid];
m1_119 -> m1_122  [key=0, style=solid];
m1_121 -> m1_122  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_123 -> m1_42  [color=blue, key=0, style=bold];
m1_46 -> m1_25  [color=green, key=3, label="Parameter variable decimal targetPortfolioValue", style=bold];
m1_46 -> m1_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m1_46 -> m1_50  [key=0, style=solid];
m1_46 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_55  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m1_46 -> m1_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_46 -> m1_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_46 -> m1_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_46 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_62  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m1_46 -> m1_63  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m1_46 -> m1_65  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_73  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_75  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_80  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_81  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_83  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_84  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_46 -> m1_85  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_52 -> m1_57  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_52 -> m1_65  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_57  [key=0, style=solid];
m1_56 -> m1_89  [key=0, style=solid];
m1_56 -> m1_90  [key=2, style=dotted];
m1_57 -> m1_45  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_62  [color=darkseagreen4, key=1, label=baseCurrencyPosition, style=dashed];
m1_57 -> m1_63  [color=darkseagreen4, key=1, label=baseCurrencyPosition, style=dashed];
m1_57 -> m1_64  [color=darkseagreen4, key=1, label=baseCurrencyPosition, style=dashed];
m1_58 -> m1_45  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_64  [color=darkseagreen4, key=1, label=quoteCurrencyPosition, style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_91  [key=2, style=dotted];
m1_59 -> m1_92  [key=2, style=dotted];
m1_59 -> m1_72  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m1_59 -> m1_82  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m1_61 -> m1_89  [key=0, style=solid];
m1_61 -> m1_90  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_47  [key=2, style=dotted];
m1_62 -> m1_72  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m1_62 -> m1_87  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [color=darkseagreen4, key=1, label=direction, style=dashed];
m1_63 -> m1_88  [color=darkseagreen4, key=1, label=direction, style=dashed];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_67  [color=darkseagreen4, key=1, label=currency, style=dashed];
m1_65 -> m1_78  [color=darkseagreen4, key=1, label=currency, style=dashed];
m1_73 -> m1_73  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_76  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_75 -> m1_89  [key=0, style=solid];
m1_75 -> m1_93  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_91  [key=2, style=dotted];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_92  [key=2, style=dotted];
m1_80 -> m1_86  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m1_80 -> m1_87  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_48  [key=2, style=dotted];
m1_81 -> m1_87  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m1_83 -> m1_83  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_71 -> m1_32  [color=darkorchid, key=3, label="Local variable decimal feeToPriceRatio", style=bold];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_76  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m1_51 -> m1_89  [key=0, style=solid];
m1_51 -> m1_90  [key=2, style=dotted];
m1_54 -> m1_89  [key=0, style=solid];
m1_54 -> m1_90  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=2, style=dotted];
m1_67 -> m1_89  [key=0, style=solid];
m1_67 -> m1_90  [key=2, style=dotted];
m1_78 -> m1_89  [key=0, style=solid];
m1_78 -> m1_90  [key=2, style=dotted];
m1_53 -> m1_55  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [color=darkseagreen4, key=1, label=cashRemaining, style=dashed];
m1_64 -> m1_87  [color=darkseagreen4, key=1, label=cashRemaining, style=dashed];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_71  [color=darkorchid, key=3, label="Local variable decimal orderQuantity", style=bold];
m1_82 -> m1_83  [key=0, style=solid];
m1_87 -> m1_75  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=0, style=solid];
m1_76 -> m1_79  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_76 -> m1_88  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_76 -> m1_76  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_76 -> m1_77  [key=0, style=solid];
m1_77 -> m1_79  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_89 -> m1_46  [color=blue, key=0, style=bold];
m1_97 -> m1_95  [color=darkorchid, key=3, label="method methodReturn decimal GetBuyingPower", style=bold];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_101  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_97 -> m1_102  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_97 -> m1_103  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_97 -> m1_106  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m1_97 -> m1_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m1_103 -> m1_91  [key=2, style=dotted];
m1_103 -> m1_92  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_107  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_101  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_109  [color=darkseagreen4, key=1, label=baseCurrencyPosition, style=dashed];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_107  [color=darkseagreen4, key=1, label=quoteCurrencyPosition, style=dashed];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_110  [key=0, style=solid];
m1_104 -> m1_106  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_107 -> m1_111  [key=0, style=solid];
m1_100 -> m1_111  [key=0, style=solid];
m1_109 -> m1_111  [key=0, style=solid];
m1_105 -> m1_111  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_99 -> m1_101  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_111 -> m1_97  [color=blue, key=0, style=bold];
m1_5 -> m1_25  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_5 -> m1_27  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_5 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_5 -> m1_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_5 -> m1_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_5 -> m1_14  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_5 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_5 -> m1_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_5 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_5 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_5 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_5 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_5 -> m1_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_5 -> m1_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_5 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_5 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_25 -> m1_26  [color=green, key=0, style=solid];
m1_25 -> m1_45  [color=green, key=2, style=dotted];
m1_12 -> m1_25  [color=green, key=1, label=totalQuantity, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_20  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_12 -> m1_22  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_12 -> m1_30  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_12 -> m1_36  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_12 -> m1_38  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_14 -> m1_25  [color=green, key=1, label=totalQuantity, style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_20  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_14 -> m1_22  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_14 -> m1_30  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_14 -> m1_36  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_14 -> m1_38  [color=darkseagreen4, key=1, label=totalQuantity, style=dashed];
m1_16 -> m1_25  [color=green, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_43  [key=2, style=dotted];
m1_16 -> m1_20  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_16 -> m1_22  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_16 -> m1_30  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_16 -> m1_36  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_16 -> m1_38  [color=darkseagreen4, key=1, label=openOrdersReservedQuantity, style=dashed];
m1_24 -> m1_25  [color=green, key=0, style=solid];
m1_24 -> m1_32  [key=0, style=solid];
m1_26 -> m1_27  [color=green, key=0, style=solid];
m1_26 -> m1_46  [key=2, style=dotted];
m1_26 -> m1_42  [key=2, style=dotted];
m1_26 -> m1_28  [color=darkseagreen4, key=1, label=maximumQuantity, style=dashed];
m1_26 -> m1_30  [color=darkseagreen4, key=1, label=maximumQuantity, style=dashed];
m1_27 -> m1_28  [color=green, key=0, style=solid];
m1_27 -> m1_45  [color=green, key=2, style=dotted];
m1_27 -> m1_30  [color=green, key=1, label=holdingsValue, style=dashed];
m1_6 -> m1_27  [color=green, key=1, label=baseCurrency, style=dashed];
m1_6 -> m1_14  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_22  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_6 -> m1_30  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_6 -> m1_38  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_28 -> m1_29  [color=green, key=0, style=solid];
m1_28 -> m1_47  [key=2, style=dotted];
m1_28 -> m1_31  [color=darkseagreen4, key=1, label=isSufficient, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_44  [key=2, style=dotted];
m1_30 -> m1_47  [key=2, style=dotted];
m1_30 -> m1_39  [color=darkseagreen4, key=1, label=reason, style=dashed];
m1_29 -> m1_30  [color=green, key=0, style=solid];
m1_29 -> m1_31  [color=green, key=0, style=solid];
m1_31 -> m1_40  [key=0, style=solid];
m1_31 -> m1_41  [key=2, style=dotted];
m1_8 -> m1_40  [key=0, style=solid];
m1_8 -> m1_41  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=0, style=solid];
m1_13 -> m1_16  [key=0, style=solid];
m1_13 -> m1_28  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_13 -> m1_30  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_13 -> m1_42  [key=2, style=dotted];
m1_13 -> m1_20  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_13 -> m1_22  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_13 -> m1_36  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_13 -> m1_38  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_28  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_15 -> m1_30  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_15 -> m1_20  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_15 -> m1_22  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_15 -> m1_36  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_15 -> m1_38  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_19 -> m1_24  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_36  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_48  [key=2, style=dotted];
m1_35 -> m1_35  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_49  [key=2, style=dotted];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_44  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [color=darkseagreen4, key=1, label=isSufficient, style=dashed];
m1_22 -> m1_31  [color=darkseagreen4, key=1, label=reason, style=dashed];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_44  [key=2, style=dotted];
m1_22 -> m1_39  [color=darkseagreen4, key=1, label=reason, style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [color=darkseagreen4, key=1, label=isSufficient, style=dashed];
m1_17 -> m1_18  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_38  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m1_32 -> m1_36  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m1_32 -> m1_32  [color=darkorchid, key=3, label="Local variable decimal orderFee", style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=2, style=dotted];
m1_18 -> m1_31  [color=darkseagreen4, key=1, label=reason, style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_39  [color=darkseagreen4, key=1, label=reason, style=dashed];
m1_18 -> m1_23  [color=darkseagreen4, key=1, label=reason, style=dashed];
m1_23 -> m1_40  [key=0, style=solid];
m1_23 -> m1_41  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_40 -> m1_5  [color=blue, key=0, style=bold];
m1_156 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBuyingPowerModel", style=dashed];
m1_157 -> m1_153  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_158 -> m1_153  [color=darkseagreen4, key=1, label=symbolDirectionPairs, style=dashed];
m2_97 -> m2_155  [key=0, style=solid];
m2_97 -> m2_158  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_97 -> m2_23  [color=darkorchid, key=3, label="Parameter variable int orderId", style=bold];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_70  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_76  [key=0, style=solid];
m2_72 -> m2_94  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_100 -> m2_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_30 -> m2_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.AccountEvent account", style=bold];
m2_30 -> m2_478  [key=0, style=solid];
m2_30 -> m2_482  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m2_30 -> m2_480  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_36  [key=2, style=dotted];
m2_478 -> m2_479  [key=0, style=solid];
m2_478 -> m2_480  [color=darkseagreen4, key=1, label=delta, style=dashed];
m2_481 -> m2_482  [key=0, style=solid];
m2_481 -> m2_483  [key=0, style=solid];
m2_482 -> m2_483  [key=0, style=solid];
m2_482 -> m2_484  [key=2, style=dotted];
m2_479 -> m2_481  [key=0, style=solid];
m2_479 -> m2_480  [key=0, style=solid];
m2_480 -> m2_481  [key=0, style=solid];
m2_480 -> m2_376  [key=2, style=dotted];
m2_480 -> m2_25  [key=2, style=dotted];
m2_483 -> m2_30  [color=blue, key=0, style=bold];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_95  [key=2, style=dotted];
m2_73 -> m2_96  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_66  [key=2, style=dotted];
m2_51 -> m2_67  [key=2, style=dotted];
m2_51 -> m2_55  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_92  [key=0, style=solid];
m2_70 -> m2_79  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_80  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_81  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_82  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_83  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_84  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_85  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_86  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_87  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_89  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_90  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_70 -> m2_91  [color=darkseagreen4, key=1, label=sub, style=dashed];
m2_34 -> m2_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
m2_34 -> m2_487  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_34 -> m2_485  [key=0, style=solid];
m2_34 -> m2_486  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_34 -> m2_116  [key=0, style=solid];
m2_487 -> m2_488  [key=0, style=solid];
m2_487 -> m2_490  [key=2, style=dotted];
m2_486 -> m2_487  [key=0, style=solid];
m2_486 -> m2_489  [key=2, style=dotted];
m2_485 -> m2_486  [key=0, style=solid];
m2_485 -> m2_488  [key=0, style=solid];
m2_488 -> m2_34  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_68  [key=2, style=dotted];
m2_23 -> m2_151  [key=0, style=solid];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_97  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_154  [key=2, style=dotted];
m2_153 -> m2_23  [color=blue, key=0, style=bold];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_118  [key=2, style=dotted];
m2_116 -> m2_129  [key=0, style=solid];
m2_116 -> m2_126  [key=0, style=solid];
m2_116 -> m2_98  [key=2, style=dotted];
m2_116 -> m2_68  [key=2, style=dotted];
m2_117 -> m2_34  [color=blue, key=0, style=bold];
m2_117 -> m2_120  [key=0, style=solid];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_99  [key=2, style=dotted];
m2_313 -> m2_203  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m2_313 -> m2_316  [key=0, style=solid];
m2_313 -> m2_317  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_313 -> m2_323  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_313 -> m2_326  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_313 -> m2_331  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_313 -> m2_341  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_313 -> m2_344  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_313 -> m2_353  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_313 -> m2_365  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_313 -> m2_370  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_320  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_318 -> m2_327  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_318 -> m2_344  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_318 -> m2_349  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_372  [key=2, style=dotted];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_324  [key=0, style=solid];
m2_321 -> m2_70  [key=2, style=dotted];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_327  [key=0, style=solid];
m2_324 -> m2_94  [key=2, style=dotted];
m2_324 -> m2_328  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_373  [key=2, style=dotted];
m2_332 -> m2_333  [key=0, style=solid];
m2_332 -> m2_374  [key=2, style=dotted];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_134  [key=2, style=dotted];
m2_333 -> m2_26  [key=2, style=dotted];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_342  [key=0, style=solid];
m2_336 -> m2_375  [key=2, style=dotted];
m2_339 -> m2_340  [key=0, style=solid];
m2_339 -> m2_376  [key=2, style=dotted];
m2_339 -> m2_374  [key=2, style=dotted];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_134  [key=2, style=dotted];
m2_340 -> m2_26  [key=2, style=dotted];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_374  [key=2, style=dotted];
m2_346 -> m2_347  [key=0, style=solid];
m2_346 -> m2_134  [key=2, style=dotted];
m2_346 -> m2_26  [key=2, style=dotted];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_357  [key=0, style=solid];
m2_349 -> m2_379  [key=2, style=dotted];
m2_349 -> m2_351  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_349 -> m2_353  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_374  [key=2, style=dotted];
m2_355 -> m2_356  [key=0, style=solid];
m2_355 -> m2_134  [key=2, style=dotted];
m2_355 -> m2_26  [key=2, style=dotted];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_362  [key=0, style=solid];
m2_358 -> m2_381  [key=2, style=dotted];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_374  [key=2, style=dotted];
m2_367 -> m2_368  [key=0, style=solid];
m2_367 -> m2_134  [key=2, style=dotted];
m2_367 -> m2_26  [key=2, style=dotted];
m2_322 -> m2_131  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_325 -> m2_131  [key=2, style=dotted];
m2_325 -> m2_326  [key=0, style=solid];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_320  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_321  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_324  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_327  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_333  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_336  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_339  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_340  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_346  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_349  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_355  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_358  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_367  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_72  [key=2, style=dotted];
m2_317 -> m2_319  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_328  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_329  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_330  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_343  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_344  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_350  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_352  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_353  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_363  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_364  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_317 -> m2_369  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_319 -> m2_320  [key=0, style=solid];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_377  [key=2, style=dotted];
m2_344 -> m2_378  [key=2, style=dotted];
m2_344 -> m2_376  [key=2, style=dotted];
m2_344 -> m2_103  [key=2, style=dotted];
m2_344 -> m2_347  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_73  [key=2, style=dotted];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_101  [key=2, style=dotted];
m2_331 -> m2_334  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_334 -> m2_371  [key=0, style=solid];
m2_335 -> m2_336  [key=0, style=solid];
m2_337 -> m2_338  [key=0, style=solid];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_348  [key=0, style=solid];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_102  [key=2, style=dotted];
m2_341 -> m2_371  [key=0, style=solid];
m2_341 -> m2_103  [key=2, style=dotted];
m2_347 -> m2_371  [key=0, style=solid];
m2_348 -> m2_349  [key=0, style=solid];
m2_350 -> m2_351  [key=0, style=solid];
m2_357 -> m2_358  [key=0, style=solid];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_353  [key=0, style=solid];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_103  [key=2, style=dotted];
m2_353 -> m2_356  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_356 -> m2_371  [key=0, style=solid];
m2_359 -> m2_360  [key=0, style=solid];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_369  [key=0, style=solid];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_103  [key=2, style=dotted];
m2_365 -> m2_368  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_368 -> m2_371  [key=0, style=solid];
m2_323 -> m2_371  [key=0, style=solid];
m2_323 -> m2_103  [key=2, style=dotted];
m2_326 -> m2_371  [key=0, style=solid];
m2_326 -> m2_98  [key=2, style=dotted];
m2_370 -> m2_66  [key=2, style=dotted];
m2_370 -> m2_371  [key=0, style=solid];
m2_316 -> m2_317  [key=0, style=solid];
m2_329 -> m2_335  [key=0, style=solid];
m2_329 -> m2_330  [key=0, style=solid];
m2_330 -> m2_331  [key=0, style=solid];
m2_343 -> m2_344  [key=0, style=solid];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_380  [key=2, style=dotted];
m2_363 -> m2_364  [key=0, style=solid];
m2_364 -> m2_365  [key=0, style=solid];
m2_369 -> m2_370  [key=0, style=solid];
m2_360 -> m2_102  [key=2, style=dotted];
m2_360 -> m2_361  [key=0, style=solid];
m2_361 -> m2_362  [key=0, style=solid];
m2_371 -> m2_313  [color=blue, key=0, style=bold];
m2_108 -> m2_111  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_133  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_138  [key=2, style=dotted];
m2_136 -> m2_139  [key=2, style=dotted];
m2_136 -> m2_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_137 -> m2_135  [color=blue, key=0, style=bold];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_104  [key=0, style=solid];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_0 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_0 -> m2_0  [color=darkorchid, key=3, label="Property variable QuantConnect.Algorithm.Framework.Alphas.InsightScore Score", style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_7 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_7 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_7 -> m2_23  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.Order order", style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_12  [key=0, style=solid];
m2_2 -> m2_13  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_12 -> m2_0  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_21  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_105  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_73  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_71 -> m2_74  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_71 -> m2_75  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_71 -> m2_76  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_49 -> m2_105  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_107  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_125  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.CancelOrderRequest request", style=bold];
m2_49 -> m2_104  [key=0, style=solid];
m2_49 -> m2_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_109  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_112  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_116  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_119  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_121  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_124  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_49 -> m2_128  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_415 -> m2_419  [key=0, style=solid];
m2_415 -> m2_382  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_419 -> m2_420  [key=0, style=solid];
m2_420 -> m2_415  [color=blue, key=0, style=bold];
m2_47 -> m2_51  [key=0, style=solid];
m2_47 -> m2_53  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_47 -> m2_56  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_47 -> m2_63  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_47 -> m2_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m2_47 -> m2_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_47 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_47 -> m2_38  [key=0, style=solid];
m2_47 -> m2_54  [key=2, style=dotted];
m2_47 -> m2_55  [key=2, style=dotted];
m2_47 -> m2_61  [color=darkseagreen4, key=1, label=err, style=dashed];
m2_47 -> m2_62  [color=darkseagreen4, key=1, label=err, style=dashed];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_69  [key=2, style=dotted];
m2_53 -> m2_62  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_53 -> m2_64  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_56 -> m2_64  [key=0, style=solid];
m2_56 -> m2_71  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_65  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_70  [key=2, style=dotted];
m2_63 -> m2_56  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_57  [key=0, style=solid];
m2_55 -> m2_106  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_73  [key=2, style=dotted];
m2_62 -> m2_37  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_63  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_57 -> m2_62  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_57 -> m2_72  [key=2, style=dotted];
m2_57 -> m2_59  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_57 -> m2_60  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_57 -> m2_61  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_57 -> m2_64  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_63  [key=0, style=solid];
m2_59 -> m2_66  [key=2, style=dotted];
m2_59 -> m2_67  [key=2, style=dotted];
m2_59 -> m2_53  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_68  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_65 -> m2_47  [color=blue, key=0, style=bold];
m2_284 -> m2_285  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_23  [key=2, style=dotted];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_17 -> m2_26  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_26  [key=2, style=dotted];
m2_21 -> m2_28  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_28 -> m2_34  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [key=2, style=dotted];
m2_32 -> m2_37  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_291  [key=0, style=solid];
m2_288 -> m2_236  [key=2, style=dotted];
m2_289 -> m2_290  [key=0, style=solid];
m2_291 -> m2_292  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_25  [key=2, style=dotted];
m2_20 -> m2_9  [color=blue, key=0, style=bold];
m2_14 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_14 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_14 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_22  [key=2, style=dotted];
m2_14 -> m2_23  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_20  [color=darkseagreen4, key=1, label=brokerIds, style=dashed];
m2_16 -> m2_25  [key=2, style=dotted];
m2_18 -> m2_20  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_13  [key=0, style=solid];
m2_18 -> m2_27  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_24  [key=2, style=dotted];
m2_15 -> m2_21  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_24  [key=2, style=dotted];
m2_22 -> m2_14  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_100  [key=0, style=solid];
m2_29 -> m2_27  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_35  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_33 -> m2_31  [color=blue, key=0, style=bold];
m2_33 -> m2_21  [color=blue, key=0, style=bold];
m2_140 -> m2_141  [key=0, style=solid];
m2_168 -> m2_169  [key=0, style=solid];
m2_180 -> m2_181  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_186 -> m2_187  [key=0, style=solid];
m2_189 -> m2_190  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid];
m2_243 -> m2_244  [key=0, style=solid];
m2_285 -> m2_286  [key=0, style=solid];
m2_287 -> m2_288  [key=0, style=solid];
m2_290 -> m2_293  [key=0, style=solid];
m2_290 -> m2_25  [key=2, style=dotted];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_25  [key=2, style=dotted];
m2_142 -> m2_140  [color=blue, key=0, style=bold];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_141  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.OrderTicket>", style=dashed];
m2_169 -> m2_169  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_171  [key=2, style=dotted];
m2_170 -> m2_168  [color=blue, key=0, style=bold];
m2_182 -> m2_180  [color=blue, key=0, style=bold];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_185 -> m2_183  [color=blue, key=0, style=bold];
m2_184 -> m2_167  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_188 -> m2_186  [color=blue, key=0, style=bold];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_187  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_191 -> m2_189  [color=blue, key=0, style=bold];
m2_190 -> m2_167  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_244 -> m2_244  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_244 -> m2_245  [key=0, style=solid];
m2_242 -> m2_240  [color=blue, key=0, style=bold];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_241  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_245 -> m2_243  [color=blue, key=0, style=bold];
m2_286 -> m2_284  [color=blue, key=0, style=bold];
m2_293 -> m2_287  [color=blue, key=0, style=bold];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_103  [key=2, style=dotted];
m2_109 -> m2_68  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_110 -> m2_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_110 -> m2_130  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_114  [key=0, style=solid];
m2_111 -> m2_97  [key=2, style=dotted];
m2_111 -> m2_113  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_111 -> m2_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_111 -> m2_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_111 -> m2_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_111 -> m2_122  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_111 -> m2_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_115  [key=2, style=dotted];
m2_112 -> m2_114  [key=0, style=solid];
m2_113 -> m2_111  [key=0, style=solid];
m2_113 -> m2_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_113 -> m2_114  [key=0, style=solid];
m2_114 -> m2_109  [color=blue, key=0, style=bold];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_117  [key=0, style=solid];
m2_192 -> m2_193  [key=0, style=solid];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_196  [key=0, style=solid];
m2_193 -> m2_199  [key=0, style=solid];
m2_193 -> m2_202  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_203  [key=2, style=dotted];
m2_195 -> m2_193  [key=0, style=solid];
m2_195 -> m2_204  [key=2, style=dotted];
m2_198 -> m2_199  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_196 -> m2_197  [key=0, style=solid];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_25  [key=2, style=dotted];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_102  [key=2, style=dotted];
m2_201 -> m2_192  [color=blue, key=0, style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_35 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_35 -> m2_44  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_35 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_35 -> m2_47  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m2_35 -> m2_48  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m2_35 -> m2_49  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m2_35 -> m2_69  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=0, style=solid];
m2_40 -> m2_46  [key=0, style=solid];
m2_40 -> m2_47  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_43  [key=0, style=solid];
m2_42 -> m2_46  [key=0, style=solid];
m2_42 -> m2_48  [key=2, style=dotted];
m2_42 -> m2_44  [key=0, style=solid];
m2_42 -> m2_49  [key=2, style=dotted];
m2_42 -> m2_45  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m2_42 -> m2_47  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m2_44 -> m2_46  [key=0, style=solid];
m2_44 -> m2_49  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_38  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_25  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_41  [key=0, style=solid];
m2_38 -> m2_43  [key=0, style=solid];
m2_38 -> m2_45  [key=0, style=solid];
m2_38 -> m2_48  [key=0, style=solid];
m2_38 -> m2_40  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_38 -> m2_42  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_38 -> m2_46  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_44  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m2_39 -> m2_45  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m2_39 -> m2_47  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_44  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_50  [key=2, style=dotted];
m2_43 -> m2_45  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m2_43 -> m2_47  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_50  [key=2, style=dotted];
m2_45 -> m2_51  [key=2, style=dotted];
m2_45 -> m2_52  [key=2, style=dotted];
m2_45 -> m2_53  [key=2, style=dotted];
m2_46 -> m2_35  [color=blue, key=0, style=bold];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_58  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_46 -> m2_59  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_206 -> m2_207  [color=green, key=0, style=solid];
m2_207 -> m2_208  [color=green, key=0, style=solid];
m2_207 -> m2_211  [color=green, key=0, style=solid];
m2_208 -> m2_209  [color=green, key=0, style=solid];
m2_208 -> m2_210  [color=green, key=0, style=solid];
m2_208 -> m2_233  [color=green, key=2, style=dotted];
m2_211 -> m2_212  [color=green, key=0, style=solid];
m2_211 -> m2_234  [color=green, key=2, style=dotted];
m2_209 -> m2_210  [color=green, key=0, style=solid];
m2_209 -> m2_131  [color=green, key=2, style=dotted];
m2_210 -> m2_232  [color=green, key=0, style=solid];
m2_212 -> m2_213  [color=green, key=0, style=solid];
m2_212 -> m2_235  [color=green, key=2, style=dotted];
m2_212 -> m2_215  [color=green, key=1, label=currentTimeNewYork, style=dashed];
m2_232 -> m2_206  [color=blue, key=0, style=bold];
m2_213 -> m2_214  [color=green, key=0, style=solid];
m2_213 -> m2_215  [color=green, key=0, style=solid];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_220  [key=0, style=solid];
m2_214 -> m2_215  [color=green, key=0, style=solid];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_218  [key=0, style=solid];
m2_216 -> m2_220  [key=0, style=solid];
m2_216 -> m2_236  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_220  [key=0, style=solid];
m2_217 -> m2_237  [key=2, style=dotted];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_224  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_238  [key=2, style=dotted];
m2_224 -> m2_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_231  [key=0, style=solid];
m2_226 -> m2_139  [key=2, style=dotted];
m2_226 -> m2_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_226 -> m2_229  [color=darkseagreen4, key=1, label=item, style=dashed];
m2_226 -> m2_230  [color=darkseagreen4, key=1, label=item, style=dashed];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_239  [key=2, style=dotted];
m2_230 -> m2_226  [key=0, style=solid];
m2_230 -> m2_239  [key=2, style=dotted];
m2_222 -> m2_234  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_223 -> m2_232  [key=0, style=solid];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_220  [color=darkorchid, key=3, label="Local variable int maxOrdersToKeep", style=bold];
m2_220 -> m2_225  [color=darkseagreen4, key=1, label=maxOrdersToKeep, style=dashed];
m2_218 -> m2_219  [key=0, style=solid];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_244  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m2_227 -> m2_228  [key=0, style=solid];
m2_228 -> m2_229  [key=0, style=solid];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_102  [key=2, style=dotted];
m2_231 -> m2_234  [key=2, style=dotted];
m2_231 -> m2_232  [key=0, style=solid];
m2_103 -> m2_101  [key=0, style=solid];
m2_103 -> m2_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_104 -> m2_27  [color=blue, key=0, style=bold];
m2_104 -> m2_105  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_108  [key=0, style=solid];
m2_105 -> m2_94  [key=2, style=dotted];
m2_105 -> m2_110  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_105 -> m2_129  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_204 -> m2_205  [key=0, style=solid];
m2_205 -> m2_204  [color=blue, key=0, style=bold];
m2_315 -> m2_423  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_315 -> m2_424  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_315 -> m2_203  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.CancelOrderRequest request", style=bold];
m2_315 -> m2_421  [key=0, style=solid];
m2_315 -> m2_425  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_315 -> m2_427  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_315 -> m2_438  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_315 -> m2_440  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_315 -> m2_441  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_315 -> m2_442  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_426  [key=0, style=solid];
m2_423 -> m2_94  [key=2, style=dotted];
m2_423 -> m2_427  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_423 -> m2_428  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_423 -> m2_430  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_423 -> m2_435  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_423 -> m2_437  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_423 -> m2_439  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_423 -> m2_441  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_434  [key=0, style=solid];
m2_430 -> m2_444  [key=2, style=dotted];
m2_436 -> m2_437  [key=0, style=solid];
m2_436 -> m2_374  [key=2, style=dotted];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_134  [key=2, style=dotted];
m2_437 -> m2_26  [key=2, style=dotted];
m2_424 -> m2_131  [key=2, style=dotted];
m2_424 -> m2_425  [key=0, style=solid];
m2_422 -> m2_423  [key=0, style=solid];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_428  [key=0, style=solid];
m2_426 -> m2_99  [key=2, style=dotted];
m2_427 -> m2_443  [key=0, style=solid];
m2_427 -> m2_100  [key=2, style=dotted];
m2_428 -> m2_429  [key=0, style=solid];
m2_428 -> m2_73  [key=2, style=dotted];
m2_435 -> m2_436  [key=0, style=solid];
m2_435 -> m2_438  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_439 -> m2_440  [key=0, style=solid];
m2_441 -> m2_442  [key=0, style=solid];
m2_429 -> m2_430  [key=0, style=solid];
m2_431 -> m2_432  [key=0, style=solid];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_439  [key=0, style=solid];
m2_438 -> m2_443  [key=0, style=solid];
m2_438 -> m2_103  [key=2, style=dotted];
m2_425 -> m2_443  [key=0, style=solid];
m2_425 -> m2_98  [key=2, style=dotted];
m2_442 -> m2_66  [key=2, style=dotted];
m2_442 -> m2_443  [key=0, style=solid];
m2_421 -> m2_422  [key=0, style=solid];
m2_440 -> m2_441  [key=0, style=solid];
m2_440 -> m2_442  [key=0, style=solid];
m2_432 -> m2_102  [key=2, style=dotted];
m2_432 -> m2_433  [key=0, style=solid];
m2_433 -> m2_434  [key=0, style=solid];
m2_443 -> m2_315  [color=blue, key=0, style=bold];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_93  [key=2, style=dotted];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_157  [key=0, style=solid];
m2_158 -> m2_158  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_94  [key=2, style=dotted];
m2_156 -> m2_159  [key=0, style=solid];
m2_157 -> m2_158  [key=0, style=solid];
m2_159 -> m2_97  [color=blue, key=0, style=bold];
m2_118 -> m2_131  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_237 -> m2_246  [key=0, style=solid];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_248  [key=0, style=solid];
m2_246 -> m2_271  [key=2, style=dotted];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_253  [key=0, style=solid];
m2_250 -> m2_273  [key=2, style=dotted];
m2_250 -> m2_255  [color=darkseagreen4, key=1, label=balances, style=dashed];
m2_250 -> m2_261  [color=darkseagreen4, key=1, label=balances, style=dashed];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_255  [key=0, style=solid];
m2_257 -> m2_274  [key=2, style=dotted];
m2_259 -> m2_255  [key=0, style=solid];
m2_259 -> m2_276  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_268  [key=0, style=solid];
m2_260 -> m2_285  [color=darkseagreen4, key=1, label=cash, style=dashed];
m2_260 -> m2_263  [color=darkseagreen4, key=1, label=cash, style=dashed];
m2_260 -> m2_264  [color=darkseagreen4, key=1, label=cash, style=dashed];
m2_260 -> m2_267  [color=darkseagreen4, key=1, label=cash, style=dashed];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_266  [key=0, style=solid];
m2_264 -> m2_277  [key=2, style=dotted];
m2_264 -> m2_278  [key=2, style=dotted];
m2_266 -> m2_260  [key=0, style=solid];
m2_266 -> m2_281  [key=2, style=dotted];
m2_267 -> m2_260  [key=0, style=solid];
m2_267 -> m2_276  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_236  [key=2, style=dotted];
m2_269 -> m2_282  [key=2, style=dotted];
m2_269 -> m2_283  [key=2, style=dotted];
m2_269 -> m2_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_247 -> m2_269  [key=0, style=solid];
m2_247 -> m2_270  [key=0, style=solid];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_25  [key=2, style=dotted];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_272  [key=2, style=dotted];
m2_251 -> m2_252  [key=0, style=solid];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_255  [key=0, style=solid];
m2_255 -> m2_257  [color=darkseagreen4, key=1, label=balance, style=dashed];
m2_255 -> m2_259  [color=darkseagreen4, key=1, label=balance, style=dashed];
m2_255 -> m2_260  [key=0, style=solid];
m2_255 -> m2_256  [key=0, style=solid];
m2_255 -> m2_258  [color=darkseagreen4, key=1, label=balance, style=dashed];
m2_261 -> m2_266  [color=darkseagreen4, key=1, label=balanceCash, style=dashed];
m2_261 -> d48  [key=2, style=dotted];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_261 -> m2_263  [color=darkseagreen4, key=1, label=balanceCash, style=dashed];
m2_261 -> m2_265  [color=darkseagreen4, key=1, label=balanceCash, style=dashed];
m2_256 -> m2_257  [key=0, style=solid];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_275  [key=2, style=dotted];
m2_263 -> m2_264  [key=0, style=solid];
m2_263 -> m2_265  [color=darkseagreen4, key=1, label=delta, style=dashed];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_279  [key=2, style=dotted];
m2_265 -> m2_280  [key=2, style=dotted];
m2_262 -> m2_267  [key=0, style=solid];
m2_262 -> m2_263  [key=0, style=solid];
m2_254 -> m2_269  [key=0, style=solid];
m2_254 -> m2_270  [key=0, style=solid];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_102  [key=2, style=dotted];
m2_270 -> m2_237  [color=blue, key=0, style=bold];
m2_48 -> m2_36  [color=blue, key=0, style=bold];
m2_48 -> m2_75  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_76  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_88  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.UpdateOrderRequest request", style=bold];
m2_48 -> m2_74  [key=0, style=solid];
m2_48 -> m2_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_82  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_87  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_48 -> m2_91  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_294 -> m2_295  [key=0, style=solid];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_298  [key=0, style=solid];
m2_296 -> m2_300  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_301  [key=2, style=dotted];
m2_297 -> m2_131  [key=2, style=dotted];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_297  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_297  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m2_295 -> m2_236  [key=2, style=dotted];
m2_299 -> m2_294  [color=blue, key=0, style=bold];
m2_115 -> m2_131  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_93 -> m2_48  [color=blue, key=0, style=bold];
m2_373 -> m2_318  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m2_373 -> m2_389  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m2_373 -> m2_317  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_373 -> m2_501  [key=0, style=solid];
m2_373 -> m2_503  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_373 -> m2_510  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_512  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_514  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_516  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_518  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_520  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_522  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_523  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_525  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_373 -> m2_382  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_528 -> m2_529  [key=0, style=solid];
m2_528 -> m2_535  [key=2, style=dotted];
m2_528 -> m2_374  [key=2, style=dotted];
m2_530 -> m2_531  [key=0, style=solid];
m2_530 -> m2_535  [key=2, style=dotted];
m2_530 -> m2_374  [key=2, style=dotted];
m2_520 -> m2_528  [color=darkseagreen4, key=1, label=limitPrice, style=dashed];
m2_520 -> m2_521  [key=0, style=solid];
m2_520 -> m2_527  [color=darkseagreen4, key=1, label=limitPrice, style=dashed];
m2_521 -> m2_528  [color=darkseagreen4, key=1, label=limitRound, style=dashed];
m2_521 -> m2_522  [key=0, style=solid];
m2_521 -> m2_533  [key=2, style=dotted];
m2_521 -> m2_527  [color=darkseagreen4, key=1, label=limitRound, style=dashed];
m2_526 -> m2_528  [color=darkseagreen4, key=1, label=format, style=dashed];
m2_526 -> m2_530  [color=darkseagreen4, key=1, label=format, style=dashed];
m2_526 -> m2_526  [color=darkorchid, key=3, label="Local variable string format", style=bold];
m2_526 -> m2_527  [key=0, style=solid];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_529  [key=0, style=solid];
m2_527 -> m2_534  [key=2, style=dotted];
m2_529 -> m2_530  [key=0, style=solid];
m2_529 -> m2_531  [key=0, style=solid];
m2_529 -> m2_534  [key=2, style=dotted];
m2_523 -> m2_530  [color=darkseagreen4, key=1, label=stopPrice, style=dashed];
m2_523 -> m2_529  [color=darkseagreen4, key=1, label=stopPrice, style=dashed];
m2_523 -> m2_524  [key=0, style=solid];
m2_524 -> m2_530  [color=darkseagreen4, key=1, label=stopRound, style=dashed];
m2_524 -> m2_529  [color=darkseagreen4, key=1, label=stopRound, style=dashed];
m2_524 -> m2_525  [key=0, style=solid];
m2_524 -> m2_533  [key=2, style=dotted];
m2_501 -> m2_502  [key=0, style=solid];
m2_501 -> m2_503  [key=0, style=solid];
m2_503 -> m2_521  [color=darkseagreen4, key=1, label=increment, style=dashed];
m2_503 -> m2_524  [color=darkseagreen4, key=1, label=increment, style=dashed];
m2_503 -> m2_504  [key=0, style=solid];
m2_503 -> m2_532  [key=2, style=dotted];
m2_503 -> m2_513  [color=darkseagreen4, key=1, label=increment, style=dashed];
m2_503 -> m2_517  [color=darkseagreen4, key=1, label=increment, style=dashed];
m2_510 -> m2_526  [key=0, style=solid];
m2_510 -> m2_511  [key=0, style=solid];
m2_510 -> m2_515  [key=0, style=solid];
m2_510 -> m2_519  [key=0, style=solid];
m2_512 -> m2_513  [key=0, style=solid];
m2_514 -> m2_526  [key=0, style=solid];
m2_516 -> m2_517  [key=0, style=solid];
m2_518 -> m2_526  [key=0, style=solid];
m2_522 -> m2_523  [key=0, style=solid];
m2_525 -> m2_526  [key=0, style=solid];
m2_519 -> m2_520  [key=0, style=solid];
m2_502 -> m2_531  [key=0, style=solid];
m2_505 -> m2_531  [key=0, style=solid];
m2_504 -> m2_505  [key=0, style=solid];
m2_504 -> m2_506  [key=0, style=solid];
m2_513 -> m2_514  [key=0, style=solid];
m2_513 -> m2_533  [key=2, style=dotted];
m2_517 -> m2_518  [key=0, style=solid];
m2_517 -> m2_533  [key=2, style=dotted];
m2_509 -> m2_510  [key=0, style=solid];
m2_509 -> m2_506  [color=darkorchid, key=3, label="Local variable decimal stopRound", style=bold];
m2_511 -> m2_512  [key=0, style=solid];
m2_515 -> m2_516  [key=0, style=solid];
m2_506 -> m2_506  [color=darkorchid, key=3, label="Local variable decimal limitPrice", style=bold];
m2_506 -> m2_507  [key=0, style=solid];
m2_508 -> m2_509  [key=0, style=solid];
m2_508 -> m2_506  [color=darkorchid, key=3, label="Local variable decimal stopPrice", style=bold];
m2_507 -> m2_506  [color=darkorchid, key=3, label="Local variable decimal limitRound", style=bold];
m2_507 -> m2_508  [key=0, style=solid];
m2_531 -> m2_373  [color=blue, key=0, style=bold];
m2_26 -> m2_119  [key=0, style=solid];
m2_26 -> m2_120  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_26 -> m2_121  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_26 -> m2_7  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
m2_26 -> m2_445  [key=0, style=solid];
m2_26 -> m2_452  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_453  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_456  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_461  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_466  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_467  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_447  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_464  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_449  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_450  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_462  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_26 -> m2_465  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_121  [key=0, style=solid];
m2_119 -> m2_129  [key=0, style=solid];
m2_119 -> m2_126  [key=0, style=solid];
m2_119 -> m2_100  [key=2, style=dotted];
m2_119 -> m2_68  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_21  [key=2, style=dotted];
m2_120 -> m2_122  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_67  [key=2, style=dotted];
m2_121 -> m2_129  [key=0, style=solid];
m2_121 -> m2_126  [key=0, style=solid];
m2_121 -> m2_68  [key=2, style=dotted];
m2_122 -> m2_26  [color=blue, key=0, style=bold];
m2_122 -> m2_123  [key=0, style=solid];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_97  [key=2, style=dotted];
m2_445 -> m2_449  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_445 -> m2_459  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_445 -> m2_463  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_451 -> m2_452  [key=0, style=solid];
m2_451 -> m2_472  [key=2, style=dotted];
m2_452 -> m2_453  [key=0, style=solid];
m2_452 -> m2_454  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_452 -> m2_455  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_473  [key=2, style=dotted];
m2_456 -> m2_457  [key=0, style=solid];
m2_456 -> m2_460  [key=0, style=solid];
m2_456 -> m2_474  [key=2, style=dotted];
m2_459 -> m2_460  [key=0, style=solid];
m2_459 -> m2_376  [key=2, style=dotted];
m2_459 -> m2_374  [key=2, style=dotted];
m2_461 -> m2_462  [key=0, style=solid];
m2_461 -> m2_464  [key=0, style=solid];
m2_461 -> m2_94  [key=2, style=dotted];
m2_461 -> m2_463  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_466 -> m2_467  [key=0, style=solid];
m2_466 -> m2_476  [key=2, style=dotted];
m2_467 -> m2_468  [key=0, style=solid];
m2_467 -> m2_471  [key=0, style=solid];
m2_467 -> m2_477  [key=2, style=dotted];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_374  [key=2, style=dotted];
m2_470 -> m2_471  [key=0, style=solid];
m2_447 -> m2_131  [key=2, style=dotted];
m2_447 -> m2_448  [key=0, style=solid];
m2_464 -> m2_131  [key=2, style=dotted];
m2_464 -> m2_465  [key=0, style=solid];
m2_446 -> m2_447  [key=0, style=solid];
m2_446 -> m2_449  [key=0, style=solid];
m2_449 -> m2_450  [key=0, style=solid];
m2_463 -> m2_465  [key=0, style=solid];
m2_450 -> m2_451  [key=0, style=solid];
m2_450 -> m2_460  [key=0, style=solid];
m2_454 -> m2_456  [color=darkseagreen4, key=1, label=conversionRate, style=dashed];
m2_454 -> m2_455  [key=0, style=solid];
m2_455 -> m2_456  [key=0, style=solid];
m2_457 -> m2_458  [key=0, style=solid];
m2_460 -> m2_461  [key=0, style=solid];
m2_458 -> m2_459  [key=0, style=solid];
m2_458 -> m2_102  [key=2, style=dotted];
m2_462 -> m2_463  [key=0, style=solid];
m2_462 -> m2_475  [key=2, style=dotted];
m2_465 -> m2_466  [key=0, style=solid];
m2_465 -> m2_471  [key=0, style=solid];
m2_468 -> m2_469  [key=0, style=solid];
m2_448 -> m2_471  [key=0, style=solid];
m2_471 -> m2_26  [color=blue, key=0, style=bold];
m2_203 -> m2_193  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderRequest request", style=bold];
m2_203 -> m2_305  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_203 -> m2_307  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_203 -> m2_309  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_203 -> m2_302  [key=0, style=solid];
m2_203 -> m2_303  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_203 -> m2_311  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_305 -> m2_311  [key=0, style=solid];
m2_305 -> m2_313  [key=2, style=dotted];
m2_307 -> m2_311  [key=0, style=solid];
m2_307 -> m2_314  [key=2, style=dotted];
m2_309 -> m2_311  [key=0, style=solid];
m2_309 -> m2_315  [key=2, style=dotted];
m2_304 -> m2_305  [key=0, style=solid];
m2_311 -> m2_312  [key=0, style=solid];
m2_311 -> m2_68  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_308 -> m2_309  [key=0, style=solid];
m2_302 -> m2_313  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m2_302 -> m2_314  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m2_302 -> m2_315  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m2_302 -> m2_303  [key=0, style=solid];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_306  [key=0, style=solid];
m2_303 -> m2_308  [key=0, style=solid];
m2_303 -> m2_310  [key=0, style=solid];
m2_310 -> m2_312  [key=0, style=solid];
m2_310 -> m2_50  [key=2, style=dotted];
m2_312 -> m2_203  [color=blue, key=0, style=bold];
m2_131 -> m2_8  [color=darkorchid, key=3, label="Property variable QuantConnect.Algorithm.Framework.Alphas.InsightType Type", style=bold];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_77  [key=0, style=solid];
m2_75 -> m2_94  [key=2, style=dotted];
m2_75 -> m2_92  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_75 -> m2_98  [key=2, style=dotted];
m2_75 -> m2_53  [key=2, style=dotted];
m2_76 -> m2_93  [key=0, style=solid];
m2_76 -> m2_95  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_88  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_97  [key=2, style=dotted];
m2_78 -> m2_81  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_78 -> m2_82  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_87  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_92  [key=0, style=solid];
m2_88 -> m2_71  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_97  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_96  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_35  [color=blue, key=0, style=bold];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=0, style=solid];
m2_79 -> m2_99  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [key=0, style=solid];
m2_81 -> m2_99  [key=2, style=dotted];
m2_81 -> m2_85  [key=0, style=solid];
m2_82 -> m2_92  [key=0, style=solid];
m2_82 -> m2_89  [key=0, style=solid];
m2_82 -> m2_100  [key=2, style=dotted];
m2_82 -> m2_68  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_85  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_86 -> m2_67  [key=2, style=dotted];
m2_86 -> m2_92  [key=0, style=solid];
m2_86 -> m2_89  [key=0, style=solid];
m2_86 -> m2_68  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_66  [key=2, style=dotted];
m2_87 -> m2_68  [key=2, style=dotted];
m2_87 -> m2_70  [key=0, style=solid];
m2_87 -> m2_98  [key=2, style=dotted];
m2_87 -> m2_53  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_80 -> m2_92  [key=0, style=solid];
m2_80 -> m2_89  [key=0, style=solid];
m2_80 -> m2_98  [key=2, style=dotted];
m2_80 -> m2_68  [key=2, style=dotted];
m2_80 -> m2_70  [key=0, style=solid];
m2_80 -> m2_99  [key=2, style=dotted];
m2_84 -> m2_92  [key=0, style=solid];
m2_84 -> m2_89  [key=0, style=solid];
m2_84 -> m2_101  [key=2, style=dotted];
m2_84 -> m2_68  [key=2, style=dotted];
m2_84 -> m2_70  [key=0, style=solid];
m2_84 -> m2_98  [key=2, style=dotted];
m2_84 -> m2_53  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_103  [key=2, style=dotted];
m2_91 -> m2_68  [key=2, style=dotted];
m2_91 -> m2_70  [key=0, style=solid];
m2_91 -> m2_98  [key=2, style=dotted];
m2_91 -> m2_53  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_102  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_134  [key=2, style=dotted];
m2_123 -> m2_26  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_66  [key=2, style=dotted];
m2_124 -> m2_68  [key=2, style=dotted];
m2_125 -> m2_123  [color=blue, key=0, style=bold];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_129  [key=0, style=solid];
m2_125 -> m2_71  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_19  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=2, style=dotted];
m2_106 -> m2_131  [key=2, style=dotted];
m2_107 -> m2_55  [color=blue, key=0, style=bold];
m2_107 -> m2_130  [key=0, style=solid];
m2_107 -> m2_132  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_176  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Orders.Order, bool>", style=dashed];
m2_172 -> m2_175  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Orders.Order, bool>", style=dashed];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_175  [key=0, style=solid];
m2_176 -> m2_178  [key=0, style=solid];
m2_176 -> m2_138  [key=2, style=dotted];
m2_176 -> m2_139  [key=2, style=dotted];
m2_176 -> m2_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_176 -> m2_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_138  [key=2, style=dotted];
m2_177 -> m2_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_177 -> m2_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_174 -> m2_178  [key=0, style=solid];
m2_174 -> m2_179  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_177  [key=0, style=solid];
m2_178 -> m2_172  [color=blue, key=0, style=bold];
m2_314 -> m2_384  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_392  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_385  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_203  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.UpdateOrderRequest request", style=bold];
m2_314 -> m2_382  [key=0, style=solid];
m2_314 -> m2_386  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_388  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_396  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_400  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_409  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_412  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_314 -> m2_413  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_387  [key=0, style=solid];
m2_384 -> m2_94  [key=2, style=dotted];
m2_384 -> m2_388  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_389  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_390  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_392  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_393  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_396  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_398  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_400  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_401  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_402  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_404  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_384 -> m2_411  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_387 -> m2_388  [key=0, style=solid];
m2_387 -> m2_389  [key=0, style=solid];
m2_387 -> m2_415  [key=2, style=dotted];
m2_389 -> m2_390  [key=0, style=solid];
m2_389 -> m2_401  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_390 -> m2_391  [key=0, style=solid];
m2_390 -> m2_372  [key=2, style=dotted];
m2_392 -> m2_393  [key=0, style=solid];
m2_392 -> m2_400  [key=0, style=solid];
m2_392 -> m2_416  [key=2, style=dotted];
m2_392 -> m2_394  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_392 -> m2_396  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_374  [key=2, style=dotted];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_134  [key=2, style=dotted];
m2_398 -> m2_26  [key=2, style=dotted];
m2_401 -> m2_402  [key=0, style=solid];
m2_401 -> m2_373  [key=2, style=dotted];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_408  [key=0, style=solid];
m2_404 -> m2_418  [key=2, style=dotted];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_374  [key=2, style=dotted];
m2_411 -> m2_412  [key=0, style=solid];
m2_411 -> m2_134  [key=2, style=dotted];
m2_411 -> m2_26  [key=2, style=dotted];
m2_385 -> m2_131  [key=2, style=dotted];
m2_385 -> m2_386  [key=0, style=solid];
m2_383 -> m2_384  [key=0, style=solid];
m2_388 -> m2_414  [key=0, style=solid];
m2_388 -> m2_100  [key=2, style=dotted];
m2_393 -> m2_394  [key=0, style=solid];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_380  [key=2, style=dotted];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_103  [key=2, style=dotted];
m2_396 -> m2_399  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_417  [key=2, style=dotted];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_73  [key=2, style=dotted];
m2_391 -> m2_392  [key=0, style=solid];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_396  [key=0, style=solid];
m2_399 -> m2_414  [key=0, style=solid];
m2_403 -> m2_404  [key=0, style=solid];
m2_405 -> m2_406  [key=0, style=solid];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_413  [key=0, style=solid];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_412  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m2_412 -> m2_414  [key=0, style=solid];
m2_412 -> m2_103  [key=2, style=dotted];
m2_386 -> m2_414  [key=0, style=solid];
m2_386 -> m2_98  [key=2, style=dotted];
m2_413 -> m2_66  [key=2, style=dotted];
m2_413 -> m2_414  [key=0, style=solid];
m2_382 -> m2_383  [key=0, style=solid];
m2_406 -> m2_102  [key=2, style=dotted];
m2_406 -> m2_407  [key=0, style=solid];
m2_407 -> m2_408  [key=0, style=solid];
m2_414 -> m2_314  [color=blue, key=0, style=bold];
m2_372 -> m2_318  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m2_372 -> m2_389  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m2_372 -> m2_495  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_372 -> m2_317  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_372 -> m2_491  [key=0, style=solid];
m2_372 -> m2_493  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_372 -> m2_497  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_372 -> m2_498  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_372 -> m2_382  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_497  [key=0, style=solid];
m2_495 -> m2_496  [key=0, style=solid];
m2_495 -> m2_500  [key=2, style=dotted];
m2_495 -> m2_489  [key=2, style=dotted];
m2_495 -> m2_374  [key=2, style=dotted];
m2_496 -> m2_497  [key=0, style=solid];
m2_493 -> m2_494  [key=0, style=solid];
m2_497 -> m2_499  [key=0, style=solid];
m2_491 -> m2_493  [color=darkseagreen4, key=1, label=orderLotMod, style=dashed];
m2_491 -> m2_500  [key=2, style=dotted];
m2_491 -> m2_492  [key=0, style=solid];
m2_498 -> m2_499  [key=0, style=solid];
m2_492 -> m2_493  [key=0, style=solid];
m2_492 -> m2_498  [key=0, style=solid];
m2_499 -> m2_372  [color=blue, key=0, style=bold];
m2_160 -> m2_155  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order GetOrderByBrokerageId", style=bold];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_160 -> m2_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_163  [key=0, style=solid];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> d48  [key=2, style=dotted];
m2_163 -> m2_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_162 -> m2_165  [key=0, style=solid];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_167  [key=2, style=dotted];
m2_165 -> m2_160  [color=blue, key=0, style=bold];
m2_146 -> m2_148  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_146 -> m2_147  [key=0, style=solid];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_94  [key=2, style=dotted];
m2_147 -> m2_148  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_150 -> m2_146  [color=blue, key=0, style=bold];
m2_129 -> m2_130  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_106  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_112  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_126 -> m2_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_103  [key=2, style=dotted];
m2_128 -> m2_68  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_102  [key=2, style=dotted];
m2_127 -> m2_58  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_127 -> m2_59  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_130 -> m2_49  [color=blue, key=0, style=bold];
m2_536 -> m2_207  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_208  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_213  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_214  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_136  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_151  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_158  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_161  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_173  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_176  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_177  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_193  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_194  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_195  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_198  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_200  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_250  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_257  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_259  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_260  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_264  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_266  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_267  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_268  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_269  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_288  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_289  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_291  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_296  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_298  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_305  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_307  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_309  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_318  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_320  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_321  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_324  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_332  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_336  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_339  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_340  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_345  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_346  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_349  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_354  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_355  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_358  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_366  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_367  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_384  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_387  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_389  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_390  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_392  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_397  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_398  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_401  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_404  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_410  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_411  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_423  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_430  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_436  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_437  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_445  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_451  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_452  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_453  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_456  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_459  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_461  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_466  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_467  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_469  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_470  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_478  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_481  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_482  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_487  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_494  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_495  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_496  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_528  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_536 -> m2_530  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_537 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_540 -> m2_285  [color=darkseagreen4, key=1, label=cash, style=dashed];
m2_538 -> m2_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_539 -> m2_244  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_15  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_31  [key=0, style=solid];
m4_21 -> m4_32  [key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_14  [color=blue, key=0, style=bold];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_7  [color=blue, key=0, style=bold];
m4_13 -> m4_12  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_4  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [color=blue, key=0, style=bold];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_17 -> m4_18  [color=green, key=0, style=solid];
m4_17 -> m4_19  [color=green, key=2, style=dotted];
m4_17 -> m4_15  [color=green, key=2, style=dotted];
m4_17 -> m4_16  [color=blue, key=0, style=bold];
m4_18 -> m4_16  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_21  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m4_18 -> m4_23  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m4_18 -> m4_25  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m4_18 -> m4_27  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m4_18 -> m4_29  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m4_18 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageName", style=dashed];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_22  [key=0, style=solid];
m4_19 -> m4_24  [key=0, style=solid];
m4_19 -> m4_26  [key=0, style=solid];
m4_19 -> m4_28  [key=0, style=solid];
m4_19 -> m4_30  [key=0, style=solid];
m4_23 -> m4_31  [key=0, style=solid];
m4_23 -> m4_33  [key=2, style=dotted];
m4_25 -> m4_31  [key=0, style=solid];
m4_25 -> m4_34  [key=2, style=dotted];
m4_27 -> m4_31  [key=0, style=solid];
m4_27 -> m4_35  [key=2, style=dotted];
m4_29 -> m4_31  [key=0, style=solid];
m4_29 -> m4_36  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_37  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_31 -> m4_18  [color=blue, key=0, style=bold];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_9  [color=green, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m4_7 -> m4_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m4_7 -> m4_6  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [color=green, key=0, style=solid];
m4_8 -> m4_10  [color=green, key=1, label=display, style=dashed];
m4_8 -> m4_11  [color=green, key=1, label=display, style=dashed];
m4_9 -> m4_10  [color=green, key=0, style=solid];
m4_9 -> m4_11  [color=green, key=0, style=solid];
m4_9 -> m4_8  [color=blue, key=0, style=bold];
m4_10 -> m4_9  [color=green, key=0, style=solid];
m4_10 -> m4_10  [color=darkseagreen4, key=1, label=display, style=dashed];
m4_10 -> m4_13  [key=2, style=dotted];
m4_10 -> m4_11  [color=darkseagreen4, key=1, label=display, style=dashed];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [key=2, style=dotted];
m4_11 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_10  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_109  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_106 -> m5_116  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_106 -> m5_134  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_106 -> m5_118  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_110  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_107 -> m5_117  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_111  [key=0, style=solid];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_116  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m5_116 -> m5_130  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_116 -> m5_131  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m5_116 -> m5_132  [color=darkseagreen4, key=1, label=actualQuantity, style=dashed];
m5_116 -> m5_133  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_116 -> m5_134  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_127  [key=2, style=dotted];
m5_118 -> m5_128  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_110  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_108 -> m5_112  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_108 -> m5_165  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_120  [key=2, style=dotted];
m5_110 -> m5_121  [key=2, style=dotted];
m5_110 -> m5_122  [key=2, style=dotted];
m5_110 -> m5_110  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_110 -> m5_117  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_125  [key=2, style=dotted];
m5_117 -> m5_126  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_123  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_116  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m5_111 -> m5_133  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m5_111 -> m5_111  [color=darkorchid, key=3, label="Local variable decimal orderQuantity", style=bold];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_124  [key=2, style=dotted];
m5_113 -> m5_116  [color=darkseagreen4, key=1, label=raised, style=dashed];
m5_113 -> m5_136  [color=darkseagreen4, key=1, label=raised, style=dashed];
m5_113 -> m5_118  [color=darkseagreen4, key=1, label=raised, style=dashed];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_116  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m5_114 -> m5_114  [color=darkorchid, key=3, label="Local variable decimal actualFee", style=bold];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_114  [color=darkorchid, key=3, label="Local variable decimal actualQuantity", style=bold];
m5_119 -> m5_106  [color=blue, key=0, style=bold];
m5_230 -> m5_231  [key=0, style=solid];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_46  [key=2, style=dotted];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_197  [key=2, style=dotted];
m5_232 -> m5_198  [key=2, style=dotted];
m5_232 -> m5_199  [key=2, style=dotted];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_236  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_201  [key=2, style=dotted];
m5_234 -> m5_128  [key=2, style=dotted];
m5_235 -> m5_230  [color=blue, key=0, style=bold];
m5_69 -> m5_70  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_20  [key=2, style=dotted];
m5_70 -> m5_75  [key=2, style=dotted];
m5_70 -> m5_76  [key=2, style=dotted];
m5_70 -> m5_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_70 -> m5_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_20  [key=2, style=dotted];
m5_71 -> m5_22  [key=2, style=dotted];
m5_71 -> m5_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_77  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_78  [key=2, style=dotted];
m5_74 -> m5_69  [color=blue, key=0, style=bold];
m5_285 -> m5_286  [key=0, style=solid];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_153  [color=darkorchid, key=3, label="Local variable string actual", style=bold];
m5_286 -> m5_288  [color=darkorchid, key=3, label="Local variable string actual", style=bold];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_20  [key=2, style=dotted];
m5_287 -> m5_22  [key=2, style=dotted];
m5_287 -> m5_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_288 -> m5_289  [key=0, style=solid];
m5_288 -> m5_20  [key=2, style=dotted];
m5_288 -> m5_28  [key=2, style=dotted];
m5_288 -> m5_298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_288 -> m5_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_288 -> m5_290  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_288 -> m5_291  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_288 -> m5_292  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_289 -> m5_290  [key=0, style=solid];
m5_289 -> m5_198  [key=2, style=dotted];
m5_289 -> m5_19  [key=2, style=dotted];
m5_289 -> m5_294  [key=2, style=dotted];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_277  [key=2, style=dotted];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_277  [key=2, style=dotted];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_277  [key=2, style=dotted];
m5_293 -> m5_285  [color=blue, key=0, style=bold];
m5_265 -> m5_266  [key=0, style=solid];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_153  [color=darkorchid, key=3, label="Local variable string actual", style=bold];
m5_266 -> m5_268  [color=darkorchid, key=3, label="Local variable string actual", style=bold];
m5_267 -> m5_268  [key=0, style=solid];
m5_267 -> m5_271  [color=darkseagreen4, key=1, label=expected, style=dashed];
m5_267 -> m5_267  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m5_268 -> m5_269  [key=0, style=solid];
m5_268 -> m5_20  [key=2, style=dotted];
m5_268 -> m5_28  [key=2, style=dotted];
m5_268 -> m5_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_268 -> m5_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_268 -> m5_271  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_271 -> m5_272  [color=green, key=0, style=solid];
m5_271 -> m5_277  [key=2, style=dotted];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_275  [key=2, style=dotted];
m5_270 -> m5_271  [key=0, style=solid];
m5_270 -> m5_19  [key=2, style=dotted];
m5_270 -> m5_276  [key=2, style=dotted];
m5_272 -> m5_273  [color=green, key=0, style=solid];
m5_272 -> m5_128  [color=green, key=2, style=dotted];
m5_273 -> m5_274  [color=green, key=0, style=solid];
m5_273 -> m5_128  [color=green, key=2, style=dotted];
m5_274 -> m5_265  [color=blue, key=0, style=bold];
m5_211 -> m5_212  [key=0, style=solid];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_46  [key=2, style=dotted];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_222  [key=2, style=dotted];
m5_213 -> m5_215  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_213 -> m5_216  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_201  [key=2, style=dotted];
m5_214 -> m5_128  [key=2, style=dotted];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_223  [key=2, style=dotted];
m5_215 -> m5_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_215 -> m5_217  [color=darkseagreen4, key=1, label=usd, style=dashed];
m5_215 -> m5_218  [color=darkseagreen4, key=1, label=usd, style=dashed];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_223  [key=2, style=dotted];
m5_216 -> m5_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_216 -> m5_219  [color=darkseagreen4, key=1, label=btc, style=dashed];
m5_216 -> m5_220  [color=darkseagreen4, key=1, label=btc, style=dashed];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_128  [key=2, style=dotted];
m5_218 -> m5_219  [key=0, style=solid];
m5_218 -> m5_128  [key=2, style=dotted];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_128  [key=2, style=dotted];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_128  [key=2, style=dotted];
m5_221 -> m5_211  [color=blue, key=0, style=bold];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_239  [color=darkseagreen4, key=1, label="System.Net.HttpStatusCode", style=dashed];
m5_237 -> m5_241  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_20  [key=2, style=dotted];
m5_238 -> m5_21  [key=2, style=dotted];
m5_238 -> m5_22  [key=2, style=dotted];
m5_238 -> m5_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_239 -> m5_240  [key=0, style=solid];
m5_239 -> m5_20  [key=2, style=dotted];
m5_239 -> m5_21  [key=2, style=dotted];
m5_239 -> m5_22  [key=2, style=dotted];
m5_239 -> m5_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_241 -> m5_242  [key=0, style=solid];
m5_241 -> m5_128  [key=2, style=dotted];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_243  [key=2, style=dotted];
m5_240 -> m5_198  [key=2, style=dotted];
m5_240 -> m5_244  [key=2, style=dotted];
m5_242 -> m5_237  [color=blue, key=0, style=bold];
m5_342 -> m5_343  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=2, style=dotted];
m5_26 -> m5_29  [key=2, style=dotted];
m5_26 -> m5_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_27 -> m5_25  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_33  [key=2, style=dotted];
m5_32 -> m5_30  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_28  [key=2, style=dotted];
m5_35 -> m5_29  [key=2, style=dotted];
m5_35 -> m5_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_36 -> m5_34  [color=blue, key=0, style=bold];
m5_37 -> m5_38  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_33  [key=2, style=dotted];
m5_39 -> m5_37  [color=blue, key=0, style=bold];
m5_41 -> m5_42  [key=0, style=solid];
m5_42 -> m5_40  [color=blue, key=0, style=bold];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_28  [key=2, style=dotted];
m5_44 -> m5_29  [key=2, style=dotted];
m5_45 -> m5_43  [color=blue, key=0, style=bold];
m5_49 -> m5_50  [key=0, style=solid];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_28  [key=2, style=dotted];
m5_50 -> m5_29  [key=2, style=dotted];
m5_50 -> m5_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_51 -> m5_49  [color=blue, key=0, style=bold];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_33  [key=2, style=dotted];
m5_54 -> m5_52  [color=blue, key=0, style=bold];
m5_63 -> m5_64  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_65 -> m5_63  [color=blue, key=0, style=bold];
m5_67 -> m5_68  [key=0, style=solid];
m5_68 -> m5_66  [color=blue, key=0, style=bold];
m5_79 -> m5_80  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_82  [key=2, style=dotted];
m5_81 -> m5_79  [color=blue, key=0, style=bold];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_20  [key=2, style=dotted];
m5_84 -> m5_22  [key=2, style=dotted];
m5_84 -> m5_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_85 -> m5_83  [color=blue, key=0, style=bold];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_88 -> m5_86  [color=blue, key=0, style=bold];
m5_90 -> m5_91  [key=0, style=solid];
m5_91 -> m5_89  [color=blue, key=0, style=bold];
m5_99 -> m5_100  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_102  [key=2, style=dotted];
m5_101 -> m5_99  [color=blue, key=0, style=bold];
m5_104 -> m5_105  [key=0, style=solid];
m5_105 -> m5_103  [color=blue, key=0, style=bold];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_128  [key=2, style=dotted];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_128  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_139  [key=2, style=dotted];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_128  [key=2, style=dotted];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_131  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m5_131 -> m5_135  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_132  [color=darkseagreen4, key=1, label=actualQuantity, style=dashed];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_131  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_129 -> m5_132  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_129 -> m5_133  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_129 -> m5_134  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_138  [key=2, style=dotted];
m5_135 -> m5_128  [key=2, style=dotted];
m5_137 -> m5_129  [color=blue, key=0, style=bold];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_128  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_174  [key=0, style=solid];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_175  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_176  [key=2, style=dotted];
m5_173 -> m5_177  [key=2, style=dotted];
m5_173 -> d19  [key=2, style=dotted];
m5_173 -> m5_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_128  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_171  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_168 -> m5_172  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_174 -> m5_168  [color=blue, key=0, style=bold];
m5_178 -> m5_179  [key=0, style=solid];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_181  [key=2, style=dotted];
m5_179 -> m5_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m5_179 -> m5_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_180 -> m5_178  [color=blue, key=0, style=bold];
m5_182 -> m5_183  [key=0, style=solid];
m5_183 -> m5_184  [key=0, style=solid];
m5_184 -> m5_182  [color=blue, key=0, style=bold];
m5_224 -> m5_225  [key=0, style=solid];
m5_227 -> m5_228  [key=0, style=solid];
m5_225 -> m5_226  [key=0, style=solid];
m5_226 -> m5_224  [color=blue, key=0, style=bold];
m5_228 -> m5_229  [key=0, style=solid];
m5_229 -> m5_227  [color=blue, key=0, style=bold];
m5_245 -> m5_246  [key=0, style=solid];
m5_252 -> m5_253  [key=0, style=solid];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_28  [key=2, style=dotted];
m5_246 -> m5_29  [key=2, style=dotted];
m5_246 -> m5_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_247 -> m5_245  [color=blue, key=0, style=bold];
m5_248 -> m5_249  [key=0, style=solid];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_251  [key=2, style=dotted];
m5_250 -> m5_248  [color=blue, key=0, style=bold];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_28  [key=2, style=dotted];
m5_253 -> m5_29  [key=2, style=dotted];
m5_253 -> m5_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_254 -> m5_252  [color=blue, key=0, style=bold];
m5_255 -> m5_256  [key=0, style=solid];
m5_256 -> m5_257  [key=0, style=solid];
m5_256 -> m5_251  [key=2, style=dotted];
m5_257 -> m5_255  [color=blue, key=0, style=bold];
m5_261 -> m5_262  [key=0, style=solid];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_243  [key=2, style=dotted];
m5_262 -> m5_264  [key=2, style=dotted];
m5_263 -> m5_261  [color=blue, key=0, style=bold];
m5_278 -> m5_279  [key=0, style=solid];
m5_282 -> m5_283  [key=0, style=solid];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_28  [key=2, style=dotted];
m5_279 -> m5_281  [key=2, style=dotted];
m5_280 -> m5_278  [color=blue, key=0, style=bold];
m5_283 -> m5_284  [key=0, style=solid];
m5_284 -> m5_282  [color=blue, key=0, style=bold];
m5_295 -> m5_296  [key=0, style=solid];
m5_298 -> m5_299  [key=0, style=solid];
m5_301 -> m5_302  [key=0, style=solid];
m5_296 -> m5_297  [key=0, style=solid];
m5_297 -> m5_295  [color=blue, key=0, style=bold];
m5_299 -> m5_300  [key=0, style=solid];
m5_299 -> m5_28  [key=2, style=dotted];
m5_299 -> m5_281  [key=2, style=dotted];
m5_300 -> m5_298  [color=blue, key=0, style=bold];
m5_302 -> m5_303  [key=0, style=solid];
m5_303 -> m5_301  [color=blue, key=0, style=bold];
m5_336 -> m5_337  [key=0, style=solid];
m5_339 -> m5_340  [key=0, style=solid];
m5_343 -> m5_344  [key=0, style=solid];
m5_343 -> m5_334  [color=darkseagreen4, key=1, label=messageType, style=dashed];
m5_337 -> m5_338  [key=0, style=solid];
m5_337 -> m5_28  [key=2, style=dotted];
m5_337 -> m5_281  [key=2, style=dotted];
m5_338 -> m5_336  [color=blue, key=0, style=bold];
m5_340 -> m5_341  [key=0, style=solid];
m5_341 -> m5_339  [color=blue, key=0, style=bold];
m5_344 -> m5_342  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_17  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_18  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_18  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_18  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_18  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_18  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_18  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_18  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_19  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_20  [key=2, style=dotted];
m5_10 -> m5_21  [key=2, style=dotted];
m5_10 -> m5_18  [key=2, style=dotted];
m5_10 -> m5_22  [key=2, style=dotted];
m5_10 -> m5_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_20  [key=2, style=dotted];
m5_11 -> m5_21  [key=2, style=dotted];
m5_11 -> m5_18  [key=2, style=dotted];
m5_11 -> m5_22  [key=2, style=dotted];
m5_11 -> m5_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_20  [key=2, style=dotted];
m5_12 -> m5_22  [key=2, style=dotted];
m5_12 -> m5_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_23  [key=2, style=dotted];
m5_13 -> m5_15  [color=darkseagreen4, key=1, label=rateMock, style=dashed];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_20  [key=2, style=dotted];
m5_15 -> m5_24  [key=2, style=dotted];
m5_15 -> m5_22  [key=2, style=dotted];
m5_15 -> m5_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_16 -> m5_0  [color=blue, key=0, style=bold];
m5_258 -> m5_259  [key=0, style=solid];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_28  [key=2, style=dotted];
m5_259 -> m5_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_260 -> m5_258  [color=blue, key=0, style=bold];
m5_324 -> m5_325  [key=0, style=solid];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_153  [color=darkorchid, key=3, label="Local variable string actual", style=bold];
m5_325 -> m5_327  [color=darkorchid, key=3, label="Local variable string actual", style=bold];
m5_326 -> m5_327  [key=0, style=solid];
m5_326 -> m5_329  [color=darkseagreen4, key=1, label=expected, style=dashed];
m5_326 -> m5_326  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_20  [key=2, style=dotted];
m5_327 -> m5_28  [key=2, style=dotted];
m5_327 -> m5_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_327 -> m5_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_327 -> m5_329  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_277  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_19  [key=2, style=dotted];
m5_328 -> m5_276  [key=2, style=dotted];
m5_330 -> m5_331  [key=0, style=solid];
m5_330 -> m5_114  [color=darkorchid, key=3, label="Local variable QuantConnect.Brokerages.BrokerageMessageType messageType", style=bold];
m5_331 -> m5_332  [key=0, style=solid];
m5_331 -> m5_343  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m5_332 -> m5_333  [key=0, style=solid];
m5_332 -> m5_332  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m5_333 -> m5_334  [key=0, style=solid];
m5_333 -> m5_125  [key=2, style=dotted];
m5_333 -> m5_126  [key=2, style=dotted];
m5_334 -> m5_335  [key=0, style=solid];
m5_334 -> m5_128  [key=2, style=dotted];
m5_335 -> m5_324  [color=blue, key=0, style=bold];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_243  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m5_46 -> m5_19  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_20  [key=2, style=dotted];
m5_47 -> m5_21  [key=2, style=dotted];
m5_47 -> m5_22  [key=2, style=dotted];
m5_47 -> m5_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_48 -> m5_46  [color=blue, key=0, style=bold];
m5_204 -> m5_205  [key=0, style=solid];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_210  [key=2, style=dotted];
m5_205 -> m5_207  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_205 -> m5_208  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_206 -> m5_207  [key=0, style=solid];
m5_206 -> m5_128  [key=2, style=dotted];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_128  [key=2, style=dotted];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_128  [key=2, style=dotted];
m5_209 -> m5_204  [color=blue, key=0, style=bold];
m5_55 -> m5_56  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_20  [key=2, style=dotted];
m5_56 -> m5_22  [key=2, style=dotted];
m5_56 -> m5_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> d19  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_20  [key=2, style=dotted];
m5_58 -> m5_22  [key=2, style=dotted];
m5_58 -> m5_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_62  [key=2, style=dotted];
m5_60 -> m5_55  [color=blue, key=0, style=bold];
m5_165 -> m5_165  [color=darkorchid, key=3, label="Field variable string _matchBrokerId", style=bold];
m5_92 -> m5_93  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_20  [key=2, style=dotted];
m5_93 -> m5_76  [key=2, style=dotted];
m5_93 -> m5_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_20  [key=2, style=dotted];
m5_94 -> m5_22  [key=2, style=dotted];
m5_94 -> m5_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_98  [key=2, style=dotted];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_78  [key=2, style=dotted];
m5_97 -> m5_92  [color=blue, key=0, style=bold];
m5_140 -> m5_141  [key=0, style=solid];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_147  [key=2, style=dotted];
m5_141 -> m5_143  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_141 -> m5_144  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_141 -> m5_145  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_148  [key=2, style=dotted];
m5_142 -> m5_62  [key=2, style=dotted];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_148  [key=2, style=dotted];
m5_143 -> m5_62  [key=2, style=dotted];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_128  [key=2, style=dotted];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_128  [key=2, style=dotted];
m5_146 -> m5_140  [color=blue, key=0, style=bold];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_151  [color=darkseagreen4, key=1, label="System.Net.HttpStatusCode", style=dashed];
m5_149 -> m5_152  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_149 -> m5_169  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m5_149 -> m5_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_149 -> m5_172  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_149 -> m5_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_149 -> m5_154  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m5_149 -> m5_155  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_149 -> m5_156  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m5_149 -> m5_157  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_149 -> m5_158  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_149 -> m5_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_150 -> m5_151  [key=0, style=solid];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_162  [key=2, style=dotted];
m5_151 -> m5_163  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_169  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_152 -> m5_171  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_152 -> m5_172  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_156  [key=0, style=solid];
m5_155 -> m5_159  [key=0, style=solid];
m5_155 -> m5_164  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_158  [key=0, style=solid];
m5_157 -> m5_159  [key=0, style=solid];
m5_157 -> m5_165  [key=2, style=dotted];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_166  [key=2, style=dotted];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> d19  [key=2, style=dotted];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_153  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.Order order", style=bold];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_167  [key=2, style=dotted];
m5_161 -> m5_149  [color=blue, key=0, style=bold];
m5_317 -> m5_318  [key=0, style=solid];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_19  [key=2, style=dotted];
m5_318 -> m5_322  [key=2, style=dotted];
m5_319 -> m5_320  [key=0, style=solid];
m5_319 -> m5_323  [key=2, style=dotted];
m5_320 -> m5_321  [key=0, style=solid];
m5_320 -> m5_202  [key=2, style=dotted];
m5_320 -> m5_128  [key=2, style=dotted];
m5_321 -> m5_317  [color=blue, key=0, style=bold];
m5_185 -> m5_186  [key=0, style=solid];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_46  [key=2, style=dotted];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_197  [key=2, style=dotted];
m5_187 -> m5_198  [key=2, style=dotted];
m5_187 -> m5_199  [key=2, style=dotted];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_200  [key=2, style=dotted];
m5_188 -> m5_190  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_188 -> m5_191  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_188 -> m5_192  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_188 -> m5_193  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_188 -> m5_194  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_188 -> m5_195  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_189 -> m5_190  [key=0, style=solid];
m5_189 -> m5_201  [key=2, style=dotted];
m5_189 -> m5_128  [key=2, style=dotted];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_202  [key=2, style=dotted];
m5_190 -> m5_128  [key=2, style=dotted];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_202  [key=2, style=dotted];
m5_191 -> m5_128  [key=2, style=dotted];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_202  [key=2, style=dotted];
m5_192 -> m5_128  [key=2, style=dotted];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_203  [key=2, style=dotted];
m5_193 -> m5_128  [key=2, style=dotted];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_203  [key=2, style=dotted];
m5_194 -> m5_128  [key=2, style=dotted];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_203  [key=2, style=dotted];
m5_195 -> m5_128  [key=2, style=dotted];
m5_196 -> m5_185  [color=blue, key=0, style=bold];
m5_304 -> m5_305  [key=0, style=solid];
m5_305 -> m5_306  [key=0, style=solid];
m5_306 -> m5_307  [key=0, style=solid];
m5_306 -> m5_125  [key=2, style=dotted];
m5_306 -> m5_126  [key=2, style=dotted];
m5_307 -> m5_308  [key=0, style=solid];
m5_307 -> m5_202  [key=2, style=dotted];
m5_307 -> m5_309  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_307 -> m5_310  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_307 -> m5_311  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_308 -> m5_309  [key=0, style=solid];
m5_308 -> m5_128  [key=2, style=dotted];
m5_309 -> m5_310  [key=0, style=solid];
m5_309 -> m5_128  [key=2, style=dotted];
m5_310 -> m5_311  [key=0, style=solid];
m5_310 -> m5_128  [key=2, style=dotted];
m5_311 -> m5_312  [key=0, style=solid];
m5_311 -> m5_128  [key=2, style=dotted];
m5_312 -> m5_313  [key=0, style=solid];
m5_312 -> m5_203  [key=2, style=dotted];
m5_312 -> m5_314  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_312 -> m5_315  [color=darkseagreen4, key=1, label=actual, style=dashed];
m5_313 -> m5_314  [key=0, style=solid];
m5_313 -> m5_128  [key=2, style=dotted];
m5_314 -> m5_315  [key=0, style=solid];
m5_314 -> m5_128  [key=2, style=dotted];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_128  [key=2, style=dotted];
m5_316 -> m5_304  [color=blue, key=0, style=bold];
m5_345 -> m5_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_9  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_12  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_47  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_56  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_57  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_58  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_59  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_84  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_71  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_72  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_93  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_94  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_95  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_107  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_112  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_116  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_117  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_151  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_152  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_173  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_157  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_158  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_159  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_186  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_187  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_188  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_205  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_212  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_213  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_231  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_232  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_233  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_238  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_239  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_259  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_262  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_268  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_269  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_270  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_272  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_273  [color=green, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_287  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_288  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_289  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_305  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_306  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_307  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_312  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_318  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_320  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_327  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_328  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_331  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_345 -> m5_333  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.GDAX.GDAXBrokerageTests", style=dashed];
m5_346 -> m5_131  [color=darkseagreen4, key=1, label=actualFee, style=dashed];
m5_347 -> m5_132  [color=darkseagreen4, key=1, label=actualQuantity, style=dashed];
m5_348 -> m5_133  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m5_349 -> m5_134  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_350 -> m5_136  [color=darkseagreen4, key=1, label=raised, style=dashed];
m5_351 -> m5_169  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m5_352 -> m5_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_352 -> m5_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_353 -> m5_172  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_3  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_6 -> m7_1  [color=darkseagreen4, key=1, label="QuantConnect.Benchmarks.SecurityBenchmark", style=dashed];
m7_6 -> m7_4  [color=darkseagreen4, key=1, label="QuantConnect.Benchmarks.SecurityBenchmark", style=dashed];
m11_192 -> m11_194  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_192 -> m11_193  [key=0, style=solid];
m11_194 -> m11_7  [key=2, style=dotted];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_196  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_194 -> m11_197  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_194 -> m11_198  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_195 -> m11_8  [key=2, style=dotted];
m11_195 -> m11_196  [key=0, style=solid];
m11_196 -> m11_55  [key=2, style=dotted];
m11_196 -> m11_197  [key=0, style=solid];
m11_197 -> m11_56  [key=2, style=dotted];
m11_197 -> m11_198  [key=0, style=solid];
m11_193 -> m11_194  [key=0, style=solid];
m11_198 -> m11_9  [key=2, style=dotted];
m11_198 -> m11_199  [key=0, style=solid];
m11_199 -> m11_10  [key=2, style=dotted];
m11_199 -> m11_200  [key=0, style=solid];
m11_200 -> m11_192  [color=blue, key=0, style=bold];
m11_376 -> m11_378  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_376 -> m11_377  [key=0, style=solid];
m11_378 -> m11_7  [key=2, style=dotted];
m11_378 -> m11_379  [key=0, style=solid];
m11_378 -> m11_380  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_378 -> m11_381  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_378 -> m11_382  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_378 -> m11_383  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_379 -> m11_8  [key=2, style=dotted];
m11_379 -> m11_380  [key=0, style=solid];
m11_382 -> m11_8  [key=2, style=dotted];
m11_382 -> m11_383  [key=0, style=solid];
m11_380 -> m11_55  [key=2, style=dotted];
m11_380 -> m11_381  [key=0, style=solid];
m11_381 -> m11_56  [key=2, style=dotted];
m11_381 -> m11_382  [key=0, style=solid];
m11_377 -> m11_378  [key=0, style=solid];
m11_383 -> m11_9  [key=2, style=dotted];
m11_383 -> m11_384  [key=0, style=solid];
m11_384 -> m11_10  [key=2, style=dotted];
m11_384 -> m11_385  [key=0, style=solid];
m11_385 -> m11_376  [color=blue, key=0, style=bold];
m11_447 -> m11_449  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_447 -> m11_448  [key=0, style=solid];
m11_449 -> m11_7  [key=2, style=dotted];
m11_449 -> m11_450  [key=0, style=solid];
m11_449 -> m11_451  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_449 -> m11_452  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_449 -> m11_453  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_449 -> m11_454  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_449 -> m11_455  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_450 -> m11_8  [key=2, style=dotted];
m11_450 -> m11_451  [key=0, style=solid];
m11_453 -> m11_8  [key=2, style=dotted];
m11_453 -> m11_454  [key=0, style=solid];
m11_451 -> m11_55  [key=2, style=dotted];
m11_451 -> m11_452  [key=0, style=solid];
m11_452 -> m11_56  [key=2, style=dotted];
m11_452 -> m11_453  [key=0, style=solid];
m11_448 -> m11_449  [key=0, style=solid];
m11_454 -> m11_455  [key=0, style=solid];
m11_454 -> m11_10  [key=2, style=dotted];
m11_455 -> m11_9  [key=2, style=dotted];
m11_455 -> m11_456  [key=0, style=solid];
m11_456 -> m11_10  [key=2, style=dotted];
m11_456 -> m11_457  [key=0, style=solid];
m11_457 -> m11_447  [color=blue, key=0, style=bold];
m11_228 -> m11_230  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_228 -> m11_229  [key=0, style=solid];
m11_230 -> m11_7  [key=2, style=dotted];
m11_230 -> m11_231  [key=0, style=solid];
m11_230 -> m11_232  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_230 -> m11_233  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_230 -> m11_234  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_231 -> m11_8  [key=2, style=dotted];
m11_231 -> m11_232  [key=0, style=solid];
m11_232 -> m11_55  [key=2, style=dotted];
m11_232 -> m11_233  [key=0, style=solid];
m11_233 -> m11_56  [key=2, style=dotted];
m11_233 -> m11_234  [key=0, style=solid];
m11_229 -> m11_230  [key=0, style=solid];
m11_234 -> m11_9  [key=2, style=dotted];
m11_234 -> m11_235  [key=0, style=solid];
m11_235 -> m11_10  [key=2, style=dotted];
m11_235 -> m11_236  [key=0, style=solid];
m11_236 -> m11_228  [color=blue, key=0, style=bold];
m11_319 -> m11_321  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_319 -> m11_320  [key=0, style=solid];
m11_321 -> m11_322  [key=0, style=solid];
m11_321 -> m11_273  [key=2, style=dotted];
m11_321 -> m11_323  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_321 -> m11_324  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_321 -> m11_325  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_322 -> m11_8  [key=2, style=dotted];
m11_322 -> m11_323  [key=0, style=solid];
m11_323 -> m11_55  [key=2, style=dotted];
m11_323 -> m11_324  [key=0, style=solid];
m11_324 -> m11_56  [key=2, style=dotted];
m11_324 -> m11_325  [key=0, style=solid];
m11_320 -> m11_321  [key=0, style=solid];
m11_325 -> m11_9  [key=2, style=dotted];
m11_325 -> m11_326  [key=0, style=solid];
m11_326 -> m11_10  [key=2, style=dotted];
m11_326 -> m11_327  [key=0, style=solid];
m11_327 -> m11_319  [color=blue, key=0, style=bold];
m11_386 -> m11_388  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_386 -> m11_387  [key=0, style=solid];
m11_388 -> m11_7  [key=2, style=dotted];
m11_388 -> m11_389  [key=0, style=solid];
m11_388 -> m11_390  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_388 -> m11_391  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_388 -> m11_392  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_388 -> m11_393  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_389 -> m11_8  [key=2, style=dotted];
m11_389 -> m11_390  [key=0, style=solid];
m11_392 -> m11_8  [key=2, style=dotted];
m11_392 -> m11_393  [key=0, style=solid];
m11_390 -> m11_55  [key=2, style=dotted];
m11_390 -> m11_391  [key=0, style=solid];
m11_391 -> m11_56  [key=2, style=dotted];
m11_391 -> m11_392  [key=0, style=solid];
m11_387 -> m11_388  [key=0, style=solid];
m11_393 -> m11_9  [key=2, style=dotted];
m11_393 -> m11_394  [key=0, style=solid];
m11_394 -> m11_10  [key=2, style=dotted];
m11_394 -> m11_395  [key=0, style=solid];
m11_395 -> m11_386  [color=blue, key=0, style=bold];
m11_437 -> m11_439  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_437 -> m11_438  [key=0, style=solid];
m11_439 -> m11_7  [key=2, style=dotted];
m11_439 -> m11_440  [key=0, style=solid];
m11_439 -> m11_441  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_439 -> m11_442  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_439 -> m11_443  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_439 -> m11_444  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_440 -> m11_8  [key=2, style=dotted];
m11_440 -> m11_441  [key=0, style=solid];
m11_443 -> m11_8  [key=2, style=dotted];
m11_443 -> m11_444  [key=0, style=solid];
m11_441 -> m11_55  [key=2, style=dotted];
m11_441 -> m11_442  [key=0, style=solid];
m11_442 -> m11_56  [key=2, style=dotted];
m11_442 -> m11_443  [key=0, style=solid];
m11_438 -> m11_439  [key=0, style=solid];
m11_444 -> m11_9  [key=2, style=dotted];
m11_444 -> m11_445  [key=0, style=solid];
m11_445 -> m11_10  [key=2, style=dotted];
m11_445 -> m11_446  [key=0, style=solid];
m11_446 -> m11_437  [color=blue, key=0, style=bold];
m11_346 -> m11_348  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_346 -> m11_347  [key=0, style=solid];
m11_348 -> m11_7  [key=2, style=dotted];
m11_348 -> m11_349  [key=0, style=solid];
m11_348 -> m11_350  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_348 -> m11_351  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_348 -> m11_352  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_348 -> m11_353  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_349 -> m11_8  [key=2, style=dotted];
m11_349 -> m11_350  [key=0, style=solid];
m11_352 -> m11_8  [key=2, style=dotted];
m11_352 -> m11_353  [key=0, style=solid];
m11_350 -> m11_55  [key=2, style=dotted];
m11_350 -> m11_351  [key=0, style=solid];
m11_351 -> m11_56  [key=2, style=dotted];
m11_351 -> m11_352  [key=0, style=solid];
m11_347 -> m11_348  [key=0, style=solid];
m11_353 -> m11_9  [key=2, style=dotted];
m11_353 -> m11_354  [key=0, style=solid];
m11_354 -> m11_10  [key=2, style=dotted];
m11_354 -> m11_355  [key=0, style=solid];
m11_355 -> m11_346  [color=blue, key=0, style=bold];
m11_426 -> m11_428  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_426 -> m11_427  [key=0, style=solid];
m11_428 -> m11_7  [key=2, style=dotted];
m11_428 -> m11_429  [key=0, style=solid];
m11_428 -> m11_430  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_428 -> m11_431  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_428 -> m11_432  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_428 -> m11_433  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_428 -> m11_434  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_429 -> m11_8  [key=2, style=dotted];
m11_429 -> m11_430  [key=0, style=solid];
m11_432 -> m11_8  [key=2, style=dotted];
m11_432 -> m11_433  [key=0, style=solid];
m11_430 -> m11_55  [key=2, style=dotted];
m11_430 -> m11_431  [key=0, style=solid];
m11_431 -> m11_56  [key=2, style=dotted];
m11_431 -> m11_432  [key=0, style=solid];
m11_427 -> m11_428  [key=0, style=solid];
m11_433 -> m11_434  [key=0, style=solid];
m11_433 -> m11_10  [key=2, style=dotted];
m11_434 -> m11_9  [key=2, style=dotted];
m11_434 -> m11_435  [key=0, style=solid];
m11_435 -> m11_10  [key=2, style=dotted];
m11_435 -> m11_436  [key=0, style=solid];
m11_436 -> m11_426  [color=blue, key=0, style=bold];
m11_111 -> m11_113  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_111 -> m11_112  [key=0, style=solid];
m11_113 -> m11_7  [key=2, style=dotted];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_115  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_113 -> m11_116  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_113 -> m11_117  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_114 -> m11_8  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_115 -> m11_55  [key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_116 -> m11_56  [key=2, style=dotted];
m11_116 -> m11_117  [key=0, style=solid];
m11_112 -> m11_113  [key=0, style=solid];
m11_117 -> m11_9  [key=2, style=dotted];
m11_117 -> m11_118  [key=0, style=solid];
m11_118 -> m11_10  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_119 -> m11_111  [color=blue, key=0, style=bold];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_9  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_27  [key=2, style=dotted];
m11_23 -> m11_10  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_27  [key=2, style=dotted];
m11_24 -> m11_18  [color=blue, key=0, style=bold];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_27  [key=2, style=dotted];
m11_26 -> m11_22  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_210 -> m11_212  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_210 -> m11_211  [key=0, style=solid];
m11_212 -> m11_7  [key=2, style=dotted];
m11_212 -> m11_213  [key=0, style=solid];
m11_212 -> m11_214  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_212 -> m11_215  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_212 -> m11_216  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_213 -> m11_8  [key=2, style=dotted];
m11_213 -> m11_214  [key=0, style=solid];
m11_214 -> m11_55  [key=2, style=dotted];
m11_214 -> m11_215  [key=0, style=solid];
m11_215 -> m11_56  [key=2, style=dotted];
m11_215 -> m11_216  [key=0, style=solid];
m11_211 -> m11_212  [key=0, style=solid];
m11_216 -> m11_9  [key=2, style=dotted];
m11_216 -> m11_217  [key=0, style=solid];
m11_217 -> m11_10  [key=2, style=dotted];
m11_217 -> m11_218  [key=0, style=solid];
m11_218 -> m11_210  [color=blue, key=0, style=bold];
m11_264 -> m11_266  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_264 -> m11_265  [key=0, style=solid];
m11_266 -> m11_267  [key=0, style=solid];
m11_266 -> m11_273  [key=2, style=dotted];
m11_266 -> m11_268  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_266 -> m11_269  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_266 -> m11_270  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_267 -> m11_8  [key=2, style=dotted];
m11_267 -> m11_268  [key=0, style=solid];
m11_268 -> m11_55  [key=2, style=dotted];
m11_268 -> m11_269  [key=0, style=solid];
m11_269 -> m11_56  [key=2, style=dotted];
m11_269 -> m11_270  [key=0, style=solid];
m11_265 -> m11_266  [key=0, style=solid];
m11_270 -> m11_9  [key=2, style=dotted];
m11_270 -> m11_271  [key=0, style=solid];
m11_271 -> m11_10  [key=2, style=dotted];
m11_271 -> m11_272  [key=0, style=solid];
m11_272 -> m11_264  [color=blue, key=0, style=bold];
m11_201 -> m11_203  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_201 -> m11_202  [key=0, style=solid];
m11_203 -> m11_7  [key=2, style=dotted];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_205  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_203 -> m11_206  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_203 -> m11_207  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_204 -> m11_8  [key=2, style=dotted];
m11_204 -> m11_205  [key=0, style=solid];
m11_205 -> m11_55  [key=2, style=dotted];
m11_205 -> m11_206  [key=0, style=solid];
m11_206 -> m11_56  [key=2, style=dotted];
m11_206 -> m11_207  [key=0, style=solid];
m11_202 -> m11_203  [key=0, style=solid];
m11_207 -> m11_9  [key=2, style=dotted];
m11_207 -> m11_208  [key=0, style=solid];
m11_208 -> m11_10  [key=2, style=dotted];
m11_208 -> m11_209  [key=0, style=solid];
m11_209 -> m11_201  [color=blue, key=0, style=bold];
m11_46 -> m11_48  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_46 -> m11_47  [key=0, style=solid];
m11_48 -> m11_7  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_50  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_48 -> m11_51  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_48 -> m11_52  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_49 -> m11_8  [key=2, style=dotted];
m11_49 -> m11_50  [key=0, style=solid];
m11_50 -> m11_55  [key=2, style=dotted];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_56  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_47 -> m11_48  [key=0, style=solid];
m11_52 -> m11_9  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_53 -> m11_10  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_54 -> m11_46  [color=blue, key=0, style=bold];
m11_237 -> m11_239  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_237 -> m11_238  [key=0, style=solid];
m11_239 -> m11_7  [key=2, style=dotted];
m11_239 -> m11_240  [key=0, style=solid];
m11_239 -> m11_241  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_239 -> m11_242  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_239 -> m11_243  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_240 -> m11_8  [key=2, style=dotted];
m11_240 -> m11_241  [key=0, style=solid];
m11_241 -> m11_55  [key=2, style=dotted];
m11_241 -> m11_242  [key=0, style=solid];
m11_242 -> m11_56  [key=2, style=dotted];
m11_242 -> m11_243  [key=0, style=solid];
m11_238 -> m11_239  [key=0, style=solid];
m11_243 -> m11_9  [key=2, style=dotted];
m11_243 -> m11_244  [key=0, style=solid];
m11_244 -> m11_10  [key=2, style=dotted];
m11_244 -> m11_245  [key=0, style=solid];
m11_245 -> m11_237  [color=blue, key=0, style=bold];
m11_310 -> m11_312  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_310 -> m11_311  [key=0, style=solid];
m11_312 -> m11_313  [key=0, style=solid];
m11_312 -> m11_273  [key=2, style=dotted];
m11_312 -> m11_314  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_312 -> m11_315  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_312 -> m11_316  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_313 -> m11_8  [key=2, style=dotted];
m11_313 -> m11_314  [key=0, style=solid];
m11_314 -> m11_55  [key=2, style=dotted];
m11_314 -> m11_315  [key=0, style=solid];
m11_315 -> m11_56  [key=2, style=dotted];
m11_315 -> m11_316  [key=0, style=solid];
m11_311 -> m11_312  [key=0, style=solid];
m11_316 -> m11_9  [key=2, style=dotted];
m11_316 -> m11_317  [key=0, style=solid];
m11_317 -> m11_10  [key=2, style=dotted];
m11_317 -> m11_318  [key=0, style=solid];
m11_318 -> m11_310  [color=blue, key=0, style=bold];
m11_366 -> m11_368  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_366 -> m11_367  [key=0, style=solid];
m11_368 -> m11_7  [key=2, style=dotted];
m11_368 -> m11_369  [key=0, style=solid];
m11_368 -> m11_370  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_368 -> m11_371  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_368 -> m11_372  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_368 -> m11_373  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_369 -> m11_8  [key=2, style=dotted];
m11_369 -> m11_370  [key=0, style=solid];
m11_372 -> m11_8  [key=2, style=dotted];
m11_372 -> m11_373  [key=0, style=solid];
m11_370 -> m11_55  [key=2, style=dotted];
m11_370 -> m11_371  [key=0, style=solid];
m11_371 -> m11_56  [key=2, style=dotted];
m11_371 -> m11_372  [key=0, style=solid];
m11_367 -> m11_368  [key=0, style=solid];
m11_373 -> m11_9  [key=2, style=dotted];
m11_373 -> m11_374  [key=0, style=solid];
m11_374 -> m11_10  [key=2, style=dotted];
m11_374 -> m11_375  [key=0, style=solid];
m11_375 -> m11_366  [color=blue, key=0, style=bold];
m11_337 -> m11_339  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_337 -> m11_338  [key=0, style=solid];
m11_339 -> m11_340  [key=0, style=solid];
m11_339 -> m11_273  [key=2, style=dotted];
m11_339 -> m11_341  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_339 -> m11_342  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_339 -> m11_343  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_340 -> m11_8  [key=2, style=dotted];
m11_340 -> m11_341  [key=0, style=solid];
m11_341 -> m11_55  [key=2, style=dotted];
m11_341 -> m11_342  [key=0, style=solid];
m11_342 -> m11_56  [key=2, style=dotted];
m11_342 -> m11_343  [key=0, style=solid];
m11_338 -> m11_339  [key=0, style=solid];
m11_343 -> m11_9  [key=2, style=dotted];
m11_343 -> m11_344  [key=0, style=solid];
m11_344 -> m11_10  [key=2, style=dotted];
m11_344 -> m11_345  [key=0, style=solid];
m11_345 -> m11_337  [color=blue, key=0, style=bold];
m11_468 -> m11_469  [key=0, style=solid];
m11_475 -> m11_8  [key=2, style=dotted];
m11_475 -> m11_476  [key=0, style=solid];
m11_474 -> m11_475  [key=0, style=solid];
m11_476 -> m11_9  [key=2, style=dotted];
m11_476 -> m11_477  [key=0, style=solid];
m11_469 -> m11_474  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_469 -> m11_476  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_469 -> d16  [key=2, style=dotted];
m11_469 -> m11_470  [key=0, style=solid];
m11_469 -> m11_471  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_469 -> m11_472  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_469 -> m11_473  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_473 -> m11_474  [key=0, style=solid];
m11_473 -> m11_483  [key=2, style=dotted];
m11_477 -> m11_10  [key=2, style=dotted];
m11_477 -> m11_478  [key=0, style=solid];
m11_470 -> m11_480  [key=2, style=dotted];
m11_470 -> m11_471  [key=0, style=solid];
m11_471 -> m11_481  [key=2, style=dotted];
m11_471 -> m11_472  [key=0, style=solid];
m11_472 -> m11_473  [key=0, style=solid];
m11_472 -> m11_482  [key=2, style=dotted];
m11_478 -> m11_468  [color=blue, key=0, style=bold];
m11_147 -> m11_149  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_147 -> m11_148  [key=0, style=solid];
m11_149 -> m11_7  [key=2, style=dotted];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_151  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_149 -> m11_152  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_149 -> m11_153  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_150 -> m11_8  [key=2, style=dotted];
m11_150 -> m11_151  [key=0, style=solid];
m11_151 -> m11_55  [key=2, style=dotted];
m11_151 -> m11_152  [key=0, style=solid];
m11_152 -> m11_56  [key=2, style=dotted];
m11_152 -> m11_153  [key=0, style=solid];
m11_148 -> m11_149  [key=0, style=solid];
m11_153 -> m11_9  [key=2, style=dotted];
m11_153 -> m11_154  [key=0, style=solid];
m11_154 -> m11_10  [key=2, style=dotted];
m11_154 -> m11_155  [key=0, style=solid];
m11_155 -> m11_147  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_1 -> m11_2  [key=0, style=solid];
m11_93 -> m11_95  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_93 -> m11_94  [key=0, style=solid];
m11_95 -> m11_7  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_97  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_95 -> m11_98  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_95 -> m11_99  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_96 -> m11_8  [key=2, style=dotted];
m11_96 -> m11_97  [key=0, style=solid];
m11_97 -> m11_55  [key=2, style=dotted];
m11_97 -> m11_98  [key=0, style=solid];
m11_98 -> m11_56  [key=2, style=dotted];
m11_98 -> m11_99  [key=0, style=solid];
m11_94 -> m11_95  [key=0, style=solid];
m11_99 -> m11_9  [key=2, style=dotted];
m11_99 -> m11_100  [key=0, style=solid];
m11_100 -> m11_10  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_101 -> m11_93  [color=blue, key=0, style=bold];
m11_120 -> m11_122  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_120 -> m11_121  [key=0, style=solid];
m11_122 -> m11_7  [key=2, style=dotted];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_124  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_122 -> m11_125  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_122 -> m11_126  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_123 -> m11_8  [key=2, style=dotted];
m11_123 -> m11_124  [key=0, style=solid];
m11_124 -> m11_55  [key=2, style=dotted];
m11_124 -> m11_125  [key=0, style=solid];
m11_125 -> m11_56  [key=2, style=dotted];
m11_125 -> m11_126  [key=0, style=solid];
m11_121 -> m11_122  [key=0, style=solid];
m11_126 -> m11_9  [key=2, style=dotted];
m11_126 -> m11_127  [key=0, style=solid];
m11_127 -> m11_10  [key=2, style=dotted];
m11_127 -> m11_128  [key=0, style=solid];
m11_128 -> m11_120  [color=blue, key=0, style=bold];
m11_138 -> m11_140  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_138 -> m11_139  [key=0, style=solid];
m11_140 -> m11_7  [key=2, style=dotted];
m11_140 -> m11_141  [key=0, style=solid];
m11_140 -> m11_142  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_140 -> m11_143  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_140 -> m11_144  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_141 -> m11_8  [key=2, style=dotted];
m11_141 -> m11_142  [key=0, style=solid];
m11_142 -> m11_55  [key=2, style=dotted];
m11_142 -> m11_143  [key=0, style=solid];
m11_143 -> m11_56  [key=2, style=dotted];
m11_143 -> m11_144  [key=0, style=solid];
m11_139 -> m11_140  [key=0, style=solid];
m11_144 -> m11_9  [key=2, style=dotted];
m11_144 -> m11_145  [key=0, style=solid];
m11_145 -> m11_10  [key=2, style=dotted];
m11_145 -> m11_146  [key=0, style=solid];
m11_146 -> m11_138  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_4  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_2 -> m11_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_2 -> m11_7  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_8  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_7  [key=2, style=dotted];
m11_4 -> m11_9  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=2, style=dotted];
m11_5 -> m11_10  [key=2, style=dotted];
m11_6 -> m11_2  [color=blue, key=0, style=bold];
m11_6 -> m11_0  [color=blue, key=0, style=bold];
m11_183 -> m11_185  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_183 -> m11_184  [key=0, style=solid];
m11_185 -> m11_7  [key=2, style=dotted];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_187  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_185 -> m11_188  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_185 -> m11_189  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_186 -> m11_8  [key=2, style=dotted];
m11_186 -> m11_187  [key=0, style=solid];
m11_187 -> m11_55  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_188 -> m11_56  [key=2, style=dotted];
m11_188 -> m11_189  [key=0, style=solid];
m11_184 -> m11_185  [key=0, style=solid];
m11_189 -> m11_9  [key=2, style=dotted];
m11_189 -> m11_190  [key=0, style=solid];
m11_190 -> m11_10  [key=2, style=dotted];
m11_190 -> m11_191  [key=0, style=solid];
m11_191 -> m11_183  [color=blue, key=0, style=bold];
m11_75 -> m11_77  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_75 -> m11_76  [key=0, style=solid];
m11_77 -> m11_7  [key=2, style=dotted];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_79  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_77 -> m11_80  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_77 -> m11_81  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_78 -> m11_8  [key=2, style=dotted];
m11_78 -> m11_79  [key=0, style=solid];
m11_79 -> m11_55  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_80 -> m11_56  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_76 -> m11_77  [key=0, style=solid];
m11_81 -> m11_9  [key=2, style=dotted];
m11_81 -> m11_82  [key=0, style=solid];
m11_82 -> m11_10  [key=2, style=dotted];
m11_82 -> m11_83  [key=0, style=solid];
m11_83 -> m11_75  [color=blue, key=0, style=bold];
m11_66 -> m11_68  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_66 -> m11_67  [key=0, style=solid];
m11_68 -> m11_7  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_70  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_68 -> m11_71  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_68 -> m11_72  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_69 -> m11_8  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_70 -> m11_55  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_71 -> m11_56  [key=2, style=dotted];
m11_71 -> m11_72  [key=0, style=solid];
m11_67 -> m11_68  [key=0, style=solid];
m11_72 -> m11_9  [key=2, style=dotted];
m11_72 -> m11_73  [key=0, style=solid];
m11_73 -> m11_10  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_74 -> m11_66  [color=blue, key=0, style=bold];
m11_27 -> m11_7  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_29  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_39 -> m11_41  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_39 -> m11_40  [key=0, style=solid];
m11_41 -> m11_7  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_43  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_42 -> m11_8  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_43 -> m11_9  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_44 -> m11_10  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_45 -> m11_39  [color=blue, key=0, style=bold];
m11_495 -> m11_496  [key=0, style=solid];
m11_502 -> m11_8  [key=2, style=dotted];
m11_502 -> m11_503  [key=0, style=solid];
m11_501 -> m11_502  [key=0, style=solid];
m11_503 -> m11_9  [key=2, style=dotted];
m11_503 -> m11_504  [key=0, style=solid];
m11_496 -> m11_501  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_496 -> m11_503  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_496 -> d16  [key=2, style=dotted];
m11_496 -> m11_497  [key=0, style=solid];
m11_496 -> m11_498  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_496 -> m11_499  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_496 -> m11_500  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_500 -> m11_501  [key=0, style=solid];
m11_500 -> m11_483  [key=2, style=dotted];
m11_504 -> m11_10  [key=2, style=dotted];
m11_504 -> m11_505  [key=0, style=solid];
m11_497 -> m11_480  [key=2, style=dotted];
m11_497 -> m11_498  [key=0, style=solid];
m11_498 -> m11_481  [key=2, style=dotted];
m11_498 -> m11_499  [key=0, style=solid];
m11_499 -> m11_500  [key=0, style=solid];
m11_499 -> m11_482  [key=2, style=dotted];
m11_505 -> m11_495  [color=blue, key=0, style=bold];
m11_458 -> m11_459  [color=green, key=0, style=solid];
m11_458 -> m11_460  [color=green, key=1, label=decimal, style=dashed];
m11_459 -> m11_460  [color=green, key=0, style=solid];
m11_460 -> m11_461  [color=green, key=0, style=solid];
m11_460 -> m11_7  [color=green, key=2, style=dotted];
m11_460 -> m11_462  [color=green, key=1, label=algo, style=dashed];
m11_460 -> m11_463  [color=green, key=1, label=algo, style=dashed];
m11_460 -> m11_464  [color=green, key=1, label=msft, style=dashed];
m11_460 -> m11_465  [color=green, key=1, label=algo, style=dashed];
m11_461 -> m11_462  [color=green, key=0, style=solid];
m11_461 -> m11_8  [color=green, key=2, style=dotted];
m11_462 -> m11_463  [color=green, key=0, style=solid];
m11_462 -> m11_55  [color=green, key=2, style=dotted];
m11_463 -> m11_464  [color=green, key=0, style=solid];
m11_463 -> m11_56  [color=green, key=2, style=dotted];
m11_464 -> m11_465  [color=green, key=0, style=solid];
m11_464 -> m11_8  [color=green, key=2, style=dotted];
m11_465 -> m11_466  [key=0, style=solid];
m11_465 -> m11_9  [key=2, style=dotted];
m11_466 -> m11_467  [key=0, style=solid];
m11_466 -> m11_10  [key=2, style=dotted];
m11_467 -> m11_458  [color=blue, key=0, style=bold];
m11_129 -> m11_131  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_129 -> m11_130  [key=0, style=solid];
m11_131 -> m11_7  [key=2, style=dotted];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_133  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_131 -> m11_134  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_131 -> m11_135  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_132 -> m11_8  [key=2, style=dotted];
m11_132 -> m11_133  [key=0, style=solid];
m11_133 -> m11_55  [key=2, style=dotted];
m11_133 -> m11_134  [key=0, style=solid];
m11_134 -> m11_56  [key=2, style=dotted];
m11_134 -> m11_135  [key=0, style=solid];
m11_130 -> m11_131  [key=0, style=solid];
m11_135 -> m11_9  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid];
m11_136 -> m11_10  [key=2, style=dotted];
m11_136 -> m11_137  [key=0, style=solid];
m11_137 -> m11_129  [color=blue, key=0, style=bold];
m11_416 -> m11_418  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_416 -> m11_417  [key=0, style=solid];
m11_418 -> m11_7  [key=2, style=dotted];
m11_418 -> m11_419  [key=0, style=solid];
m11_418 -> m11_420  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_418 -> m11_421  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_418 -> m11_422  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_418 -> m11_423  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_419 -> m11_8  [key=2, style=dotted];
m11_419 -> m11_420  [key=0, style=solid];
m11_422 -> m11_8  [key=2, style=dotted];
m11_422 -> m11_423  [key=0, style=solid];
m11_420 -> m11_55  [key=2, style=dotted];
m11_420 -> m11_421  [key=0, style=solid];
m11_421 -> m11_56  [key=2, style=dotted];
m11_421 -> m11_422  [key=0, style=solid];
m11_417 -> m11_418  [key=0, style=solid];
m11_423 -> m11_9  [key=2, style=dotted];
m11_423 -> m11_424  [key=0, style=solid];
m11_424 -> m11_10  [key=2, style=dotted];
m11_424 -> m11_425  [key=0, style=solid];
m11_425 -> m11_416  [color=blue, key=0, style=bold];
m11_84 -> m11_86  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_84 -> m11_85  [key=0, style=solid];
m11_86 -> m11_7  [key=2, style=dotted];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_88  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_86 -> m11_89  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_86 -> m11_90  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_87 -> m11_8  [key=2, style=dotted];
m11_87 -> m11_88  [key=0, style=solid];
m11_88 -> m11_55  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_89 -> m11_56  [key=2, style=dotted];
m11_89 -> m11_90  [key=0, style=solid];
m11_85 -> m11_86  [key=0, style=solid];
m11_90 -> m11_9  [key=2, style=dotted];
m11_90 -> m11_91  [key=0, style=solid];
m11_91 -> m11_10  [key=2, style=dotted];
m11_91 -> m11_92  [key=0, style=solid];
m11_92 -> m11_84  [color=blue, key=0, style=bold];
m11_18 -> m11_20  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_18 -> m11_19  [key=0, style=solid];
m11_20 -> m11_7  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_22  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_20 -> m11_8  [color=blue, key=0, style=bold];
m11_21 -> m11_8  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_165 -> m11_167  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_165 -> m11_166  [key=0, style=solid];
m11_167 -> m11_7  [key=2, style=dotted];
m11_167 -> m11_168  [key=0, style=solid];
m11_167 -> m11_169  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_167 -> m11_170  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_167 -> m11_171  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_168 -> m11_8  [key=2, style=dotted];
m11_168 -> m11_169  [key=0, style=solid];
m11_169 -> m11_55  [key=2, style=dotted];
m11_169 -> m11_170  [key=0, style=solid];
m11_170 -> m11_56  [key=2, style=dotted];
m11_170 -> m11_171  [key=0, style=solid];
m11_166 -> m11_167  [key=0, style=solid];
m11_171 -> m11_9  [key=2, style=dotted];
m11_171 -> m11_172  [key=0, style=solid];
m11_172 -> m11_10  [key=2, style=dotted];
m11_172 -> m11_173  [key=0, style=solid];
m11_173 -> m11_165  [color=blue, key=0, style=bold];
m11_102 -> m11_104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_102 -> m11_103  [key=0, style=solid];
m11_104 -> m11_7  [key=2, style=dotted];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_106  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_104 -> m11_107  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_104 -> m11_108  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_105 -> m11_8  [key=2, style=dotted];
m11_105 -> m11_106  [key=0, style=solid];
m11_106 -> m11_55  [key=2, style=dotted];
m11_106 -> m11_107  [key=0, style=solid];
m11_107 -> m11_56  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_103 -> m11_104  [key=0, style=solid];
m11_108 -> m11_9  [key=2, style=dotted];
m11_108 -> m11_109  [key=0, style=solid];
m11_109 -> m11_10  [key=2, style=dotted];
m11_109 -> m11_110  [key=0, style=solid];
m11_110 -> m11_102  [color=blue, key=0, style=bold];
m11_156 -> m11_158  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_156 -> m11_157  [key=0, style=solid];
m11_158 -> m11_7  [key=2, style=dotted];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_160  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_158 -> m11_161  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_158 -> m11_162  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_159 -> m11_8  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_160 -> m11_55  [key=2, style=dotted];
m11_160 -> m11_161  [key=0, style=solid];
m11_161 -> m11_56  [key=2, style=dotted];
m11_161 -> m11_162  [key=0, style=solid];
m11_157 -> m11_158  [key=0, style=solid];
m11_162 -> m11_9  [key=2, style=dotted];
m11_162 -> m11_163  [key=0, style=solid];
m11_163 -> m11_10  [key=2, style=dotted];
m11_163 -> m11_164  [key=0, style=solid];
m11_164 -> m11_156  [color=blue, key=0, style=bold];
m11_28 -> m11_8  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_3  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_4  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_5  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_23  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_24  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_28 -> m11_25  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m11_29 -> m11_9  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_30 -> m11_10  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_25  [color=blue, key=0, style=bold];
m11_219 -> m11_221  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_219 -> m11_220  [key=0, style=solid];
m11_221 -> m11_7  [key=2, style=dotted];
m11_221 -> m11_222  [key=0, style=solid];
m11_221 -> m11_223  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_221 -> m11_224  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_221 -> m11_225  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_222 -> m11_8  [key=2, style=dotted];
m11_222 -> m11_223  [key=0, style=solid];
m11_223 -> m11_55  [key=2, style=dotted];
m11_223 -> m11_224  [key=0, style=solid];
m11_224 -> m11_56  [key=2, style=dotted];
m11_224 -> m11_225  [key=0, style=solid];
m11_220 -> m11_221  [key=0, style=solid];
m11_225 -> m11_9  [key=2, style=dotted];
m11_225 -> m11_226  [key=0, style=solid];
m11_226 -> m11_10  [key=2, style=dotted];
m11_226 -> m11_227  [key=0, style=solid];
m11_227 -> m11_219  [color=blue, key=0, style=bold];
m11_356 -> m11_358  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_356 -> m11_357  [key=0, style=solid];
m11_358 -> m11_7  [key=2, style=dotted];
m11_358 -> m11_359  [key=0, style=solid];
m11_358 -> m11_360  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_358 -> m11_361  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_358 -> m11_362  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_358 -> m11_363  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_359 -> m11_8  [key=2, style=dotted];
m11_359 -> m11_360  [key=0, style=solid];
m11_362 -> m11_8  [key=2, style=dotted];
m11_362 -> m11_363  [key=0, style=solid];
m11_360 -> m11_55  [key=2, style=dotted];
m11_360 -> m11_361  [key=0, style=solid];
m11_361 -> m11_56  [key=2, style=dotted];
m11_361 -> m11_362  [key=0, style=solid];
m11_357 -> m11_358  [key=0, style=solid];
m11_363 -> m11_9  [key=2, style=dotted];
m11_363 -> m11_364  [key=0, style=solid];
m11_364 -> m11_10  [key=2, style=dotted];
m11_364 -> m11_365  [key=0, style=solid];
m11_365 -> m11_356  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_21  [key=2, style=dotted];
m11_174 -> m11_176  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_174 -> m11_175  [key=0, style=solid];
m11_176 -> m11_7  [key=2, style=dotted];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_178  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_176 -> m11_179  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_176 -> m11_180  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_177 -> m11_8  [key=2, style=dotted];
m11_177 -> m11_178  [key=0, style=solid];
m11_178 -> m11_55  [key=2, style=dotted];
m11_178 -> m11_179  [key=0, style=solid];
m11_179 -> m11_56  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_175 -> m11_176  [key=0, style=solid];
m11_180 -> m11_9  [key=2, style=dotted];
m11_180 -> m11_181  [key=0, style=solid];
m11_181 -> m11_10  [key=2, style=dotted];
m11_181 -> m11_182  [key=0, style=solid];
m11_182 -> m11_174  [color=blue, key=0, style=bold];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_12  [key=0, style=solid];
m11_484 -> m11_485  [key=0, style=solid];
m11_491 -> m11_8  [key=2, style=dotted];
m11_491 -> m11_492  [key=0, style=solid];
m11_490 -> m11_491  [key=0, style=solid];
m11_492 -> m11_9  [key=2, style=dotted];
m11_492 -> m11_493  [key=0, style=solid];
m11_485 -> m11_490  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_485 -> m11_492  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_485 -> d16  [key=2, style=dotted];
m11_485 -> m11_486  [key=0, style=solid];
m11_485 -> m11_487  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_485 -> m11_488  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_485 -> m11_489  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_489 -> m11_490  [key=0, style=solid];
m11_489 -> m11_483  [key=2, style=dotted];
m11_493 -> m11_10  [key=2, style=dotted];
m11_493 -> m11_494  [key=0, style=solid];
m11_486 -> m11_480  [key=2, style=dotted];
m11_486 -> m11_487  [key=0, style=solid];
m11_487 -> m11_481  [key=2, style=dotted];
m11_487 -> m11_488  [key=0, style=solid];
m11_488 -> m11_489  [key=0, style=solid];
m11_488 -> m11_482  [key=2, style=dotted];
m11_494 -> m11_484  [color=blue, key=0, style=bold];
m11_57 -> m11_59  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_57 -> m11_58  [key=0, style=solid];
m11_59 -> m11_7  [key=2, style=dotted];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_61  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_59 -> m11_62  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_59 -> m11_63  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_60 -> m11_8  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_61 -> m11_55  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_62 -> m11_56  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_58 -> m11_59  [key=0, style=solid];
m11_63 -> m11_9  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_64 -> m11_10  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_65 -> m11_57  [color=blue, key=0, style=bold];
m11_396 -> m11_398  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_396 -> m11_397  [key=0, style=solid];
m11_398 -> m11_7  [key=2, style=dotted];
m11_398 -> m11_399  [key=0, style=solid];
m11_398 -> m11_400  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_398 -> m11_401  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_398 -> m11_402  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_398 -> m11_403  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_399 -> m11_8  [key=2, style=dotted];
m11_399 -> m11_400  [key=0, style=solid];
m11_402 -> m11_8  [key=2, style=dotted];
m11_402 -> m11_403  [key=0, style=solid];
m11_400 -> m11_55  [key=2, style=dotted];
m11_400 -> m11_401  [key=0, style=solid];
m11_401 -> m11_56  [key=2, style=dotted];
m11_401 -> m11_402  [key=0, style=solid];
m11_397 -> m11_398  [key=0, style=solid];
m11_403 -> m11_9  [key=2, style=dotted];
m11_403 -> m11_404  [key=0, style=solid];
m11_404 -> m11_10  [key=2, style=dotted];
m11_404 -> m11_405  [key=0, style=solid];
m11_405 -> m11_396  [color=blue, key=0, style=bold];
m11_406 -> m11_408  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_406 -> m11_407  [key=0, style=solid];
m11_408 -> m11_7  [key=2, style=dotted];
m11_408 -> m11_409  [key=0, style=solid];
m11_408 -> m11_410  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_408 -> m11_411  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_408 -> m11_412  [color=darkseagreen4, key=1, label=msft, style=dashed];
m11_408 -> m11_413  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_409 -> m11_8  [key=2, style=dotted];
m11_409 -> m11_410  [key=0, style=solid];
m11_412 -> m11_8  [key=2, style=dotted];
m11_412 -> m11_413  [key=0, style=solid];
m11_410 -> m11_55  [key=2, style=dotted];
m11_410 -> m11_411  [key=0, style=solid];
m11_411 -> m11_56  [key=2, style=dotted];
m11_411 -> m11_412  [key=0, style=solid];
m11_407 -> m11_408  [key=0, style=solid];
m11_413 -> m11_9  [key=2, style=dotted];
m11_413 -> m11_414  [key=0, style=solid];
m11_414 -> m11_10  [key=2, style=dotted];
m11_414 -> m11_415  [key=0, style=solid];
m11_415 -> m11_406  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m11_8 -> m11_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m11_8 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m11_8 -> m11_13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m11_8 -> m11_14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m11_8 -> m11_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m11_8 -> m11_17  [color=darkorchid, key=3, label="method methodReturn decimal ComputeNextValue", style=bold];
m11_8 -> m11_524  [key=0, style=solid];
m11_11 -> m11_15  [key=0, style=solid];
m11_11 -> m11_21  [key=2, style=dotted];
m11_11 -> m11_13  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_15  [key=0, style=solid];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_21  [key=2, style=dotted];
m11_13 -> m11_7  [key=2, style=dotted];
m11_13 -> m11_15  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_21  [key=2, style=dotted];
m11_14 -> m11_8  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_9  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [key=0, style=solid];
m11_16 -> m11_10  [key=2, style=dotted];
m11_17 -> m11_20  [key=0, style=solid];
m11_17 -> m11_11  [color=blue, key=0, style=bold];
m11_328 -> m11_330  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_328 -> m11_329  [key=0, style=solid];
m11_330 -> m11_331  [key=0, style=solid];
m11_330 -> m11_273  [key=2, style=dotted];
m11_330 -> m11_332  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_330 -> m11_333  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_330 -> m11_334  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_331 -> m11_8  [key=2, style=dotted];
m11_331 -> m11_332  [key=0, style=solid];
m11_332 -> m11_55  [key=2, style=dotted];
m11_332 -> m11_333  [key=0, style=solid];
m11_333 -> m11_56  [key=2, style=dotted];
m11_333 -> m11_334  [key=0, style=solid];
m11_329 -> m11_330  [key=0, style=solid];
m11_334 -> m11_9  [key=2, style=dotted];
m11_334 -> m11_335  [key=0, style=solid];
m11_335 -> m11_10  [key=2, style=dotted];
m11_335 -> m11_336  [key=0, style=solid];
m11_336 -> m11_328  [color=blue, key=0, style=bold];
m11_7 -> m11_506  [key=0, style=solid];
m11_7 -> m11_509  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_7 -> m11_511  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_301 -> m11_303  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_301 -> m11_302  [key=0, style=solid];
m11_303 -> m11_304  [key=0, style=solid];
m11_303 -> m11_273  [key=2, style=dotted];
m11_303 -> m11_305  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_303 -> m11_306  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_303 -> m11_307  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_304 -> m11_8  [key=2, style=dotted];
m11_304 -> m11_305  [key=0, style=solid];
m11_305 -> m11_55  [key=2, style=dotted];
m11_305 -> m11_306  [key=0, style=solid];
m11_306 -> m11_56  [key=2, style=dotted];
m11_306 -> m11_307  [key=0, style=solid];
m11_302 -> m11_303  [key=0, style=solid];
m11_307 -> m11_9  [key=2, style=dotted];
m11_307 -> m11_308  [key=0, style=solid];
m11_308 -> m11_10  [key=2, style=dotted];
m11_308 -> m11_309  [key=0, style=solid];
m11_309 -> m11_301  [color=blue, key=0, style=bold];
m11_255 -> m11_257  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_255 -> m11_256  [key=0, style=solid];
m11_257 -> m11_7  [key=2, style=dotted];
m11_257 -> m11_258  [key=0, style=solid];
m11_257 -> m11_259  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_257 -> m11_260  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_257 -> m11_261  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_258 -> m11_8  [key=2, style=dotted];
m11_258 -> m11_259  [key=0, style=solid];
m11_259 -> m11_55  [key=2, style=dotted];
m11_259 -> m11_260  [key=0, style=solid];
m11_260 -> m11_56  [key=2, style=dotted];
m11_260 -> m11_261  [key=0, style=solid];
m11_256 -> m11_257  [key=0, style=solid];
m11_261 -> m11_9  [key=2, style=dotted];
m11_261 -> m11_262  [key=0, style=solid];
m11_262 -> m11_10  [key=2, style=dotted];
m11_262 -> m11_263  [key=0, style=solid];
m11_263 -> m11_255  [color=blue, key=0, style=bold];
m11_274 -> m11_276  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_274 -> m11_275  [key=0, style=solid];
m11_276 -> m11_277  [key=0, style=solid];
m11_276 -> m11_273  [key=2, style=dotted];
m11_276 -> m11_278  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_276 -> m11_279  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_276 -> m11_280  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_277 -> m11_8  [key=2, style=dotted];
m11_277 -> m11_278  [key=0, style=solid];
m11_278 -> m11_55  [key=2, style=dotted];
m11_278 -> m11_279  [key=0, style=solid];
m11_279 -> m11_56  [key=2, style=dotted];
m11_279 -> m11_280  [key=0, style=solid];
m11_275 -> m11_276  [key=0, style=solid];
m11_280 -> m11_9  [key=2, style=dotted];
m11_280 -> m11_281  [key=0, style=solid];
m11_281 -> m11_10  [key=2, style=dotted];
m11_281 -> m11_282  [key=0, style=solid];
m11_282 -> m11_274  [color=blue, key=0, style=bold];
m11_246 -> m11_248  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_246 -> m11_247  [key=0, style=solid];
m11_248 -> m11_7  [key=2, style=dotted];
m11_248 -> m11_249  [key=0, style=solid];
m11_248 -> m11_250  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_248 -> m11_251  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_248 -> m11_252  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_249 -> m11_8  [key=2, style=dotted];
m11_249 -> m11_250  [key=0, style=solid];
m11_250 -> m11_55  [key=2, style=dotted];
m11_250 -> m11_251  [key=0, style=solid];
m11_251 -> m11_56  [key=2, style=dotted];
m11_251 -> m11_252  [key=0, style=solid];
m11_247 -> m11_248  [key=0, style=solid];
m11_252 -> m11_9  [key=2, style=dotted];
m11_252 -> m11_253  [key=0, style=solid];
m11_253 -> m11_10  [key=2, style=dotted];
m11_253 -> m11_254  [key=0, style=solid];
m11_254 -> m11_246  [color=blue, key=0, style=bold];
m11_524 -> m11_525  [key=0, style=solid];
m11_524 -> m11_526  [key=2, style=dotted];
m11_524 -> m11_527  [key=2, style=dotted];
m11_525 -> m11_8  [color=blue, key=0, style=bold];
m11_273 -> m11_515  [key=0, style=solid];
m11_273 -> m11_518  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_273 -> m11_520  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_515 -> d16  [key=2, style=dotted];
m11_515 -> m11_516  [key=0, style=solid];
m11_515 -> m11_517  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_515 -> m11_518  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_515 -> m11_519  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_515 -> m11_521  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_518 -> m11_483  [key=2, style=dotted];
m11_518 -> m11_519  [key=0, style=solid];
m11_520 -> m11_521  [key=0, style=solid];
m11_520 -> m11_523  [key=2, style=dotted];
m11_519 -> m11_522  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.Security", style=dashed];
m11_519 -> m11_520  [key=0, style=solid];
m11_521 -> m11_522  [key=0, style=solid];
m11_516 -> m11_480  [key=2, style=dotted];
m11_516 -> m11_517  [key=0, style=solid];
m11_517 -> m11_518  [key=0, style=solid];
m11_517 -> m11_481  [key=2, style=dotted];
m11_522 -> m11_273  [color=blue, key=0, style=bold];
m11_32 -> m11_34  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_32 -> m11_33  [key=0, style=solid];
m11_34 -> m11_7  [key=2, style=dotted];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_36  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_35 -> m11_8  [key=2, style=dotted];
m11_35 -> m11_36  [key=0, style=solid];
m11_33 -> m11_34  [key=0, style=solid];
m11_36 -> m11_9  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_37 -> m11_10  [key=2, style=dotted];
m11_37 -> m11_38  [key=0, style=solid];
m11_38 -> m11_32  [color=blue, key=0, style=bold];
m11_283 -> m11_285  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_283 -> m11_284  [key=0, style=solid];
m11_285 -> m11_286  [key=0, style=solid];
m11_285 -> m11_273  [key=2, style=dotted];
m11_285 -> m11_287  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_285 -> m11_288  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_285 -> m11_289  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_286 -> m11_8  [key=2, style=dotted];
m11_286 -> m11_287  [key=0, style=solid];
m11_287 -> m11_55  [key=2, style=dotted];
m11_287 -> m11_288  [key=0, style=solid];
m11_288 -> m11_56  [key=2, style=dotted];
m11_288 -> m11_289  [key=0, style=solid];
m11_284 -> m11_285  [key=0, style=solid];
m11_289 -> m11_9  [key=2, style=dotted];
m11_289 -> m11_290  [key=0, style=solid];
m11_290 -> m11_10  [key=2, style=dotted];
m11_290 -> m11_291  [key=0, style=solid];
m11_291 -> m11_283  [color=blue, key=0, style=bold];
m11_506 -> m11_507  [key=0, style=solid];
m11_506 -> d16  [key=2, style=dotted];
m11_506 -> m11_508  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_506 -> m11_509  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_506 -> m11_510  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_506 -> m11_512  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_509 -> m11_510  [key=0, style=solid];
m11_509 -> m11_483  [key=2, style=dotted];
m11_511 -> m11_512  [key=0, style=solid];
m11_511 -> m11_514  [key=2, style=dotted];
m11_510 -> m11_513  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.Security", style=dashed];
m11_510 -> m11_511  [key=0, style=solid];
m11_512 -> m11_513  [key=0, style=solid];
m11_507 -> m11_508  [key=0, style=solid];
m11_507 -> m11_480  [key=2, style=dotted];
m11_508 -> m11_509  [key=0, style=solid];
m11_508 -> m11_481  [key=2, style=dotted];
m11_513 -> m11_7  [color=blue, key=0, style=bold];
m11_292 -> m11_294  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_292 -> m11_293  [key=0, style=solid];
m11_294 -> m11_295  [key=0, style=solid];
m11_294 -> m11_273  [key=2, style=dotted];
m11_294 -> m11_296  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_294 -> m11_297  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_294 -> m11_298  [color=darkseagreen4, key=1, label=algo, style=dashed];
m11_295 -> m11_8  [key=2, style=dotted];
m11_295 -> m11_296  [key=0, style=solid];
m11_296 -> m11_55  [key=2, style=dotted];
m11_296 -> m11_297  [key=0, style=solid];
m11_297 -> m11_56  [key=2, style=dotted];
m11_297 -> m11_298  [key=0, style=solid];
m11_293 -> m11_294  [key=0, style=solid];
m11_298 -> m11_9  [key=2, style=dotted];
m11_298 -> m11_299  [key=0, style=solid];
m11_299 -> m11_10  [key=2, style=dotted];
m11_299 -> m11_300  [key=0, style=solid];
m11_300 -> m11_292  [color=blue, key=0, style=bold];
m11_528 -> m11_460  [color=green, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_461  [color=green, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_464  [color=green, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_20  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_28  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_34  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_42  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_48  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_59  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_60  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_68  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_69  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_77  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_86  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_87  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_95  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_104  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_113  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_114  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_123  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_131  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_132  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_140  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_149  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_150  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_158  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_159  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_167  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_168  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_176  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_177  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_185  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_186  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_194  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_203  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_204  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_212  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_213  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_221  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_222  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_230  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_231  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_239  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_248  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_257  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_258  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_266  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_267  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_276  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_277  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_285  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_286  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_294  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_295  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_303  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_304  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_312  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_313  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_321  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_322  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_330  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_331  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_339  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_340  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_348  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_349  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_352  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_358  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_359  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_362  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_368  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_369  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_372  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_378  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_379  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_382  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_388  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_389  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_392  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_398  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_399  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_402  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_408  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_409  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_412  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_418  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_419  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_422  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_428  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_429  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_432  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_439  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_440  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_443  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_449  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_450  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_453  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_475  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_491  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m11_528 -> m11_502  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m12_176 -> m12_177  [key=0, style=solid];
m12_177 -> m12_178  [key=0, style=solid];
m12_177 -> m12_17  [key=2, style=dotted];
m12_177 -> m12_185  [color=darkseagreen4, key=1, label=expiry1, style=dashed];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_17  [key=2, style=dotted];
m12_178 -> m12_185  [color=darkseagreen4, key=1, label=expiry2, style=dashed];
m12_185 -> m12_186  [key=0, style=solid];
m12_185 -> m12_20  [key=2, style=dotted];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_17  [key=2, style=dotted];
m12_179 -> m12_185  [color=darkseagreen4, key=1, label=expiry3, style=dashed];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_17  [key=2, style=dotted];
m12_180 -> m12_185  [color=darkseagreen4, key=1, label=expiry4, style=dashed];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_18  [key=2, style=dotted];
m12_181 -> m12_17  [key=2, style=dotted];
m12_181 -> m12_186  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_182 -> m12_183  [key=0, style=solid];
m12_182 -> m12_190  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_182 -> m12_194  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_21  [key=2, style=dotted];
m12_186 -> m12_22  [key=2, style=dotted];
m12_186 -> m12_23  [key=2, style=dotted];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_194  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_184 -> m12_185  [key=0, style=solid];
m12_184 -> m12_19  [key=2, style=dotted];
m12_184 -> m12_186  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> d63  [key=2, style=dotted];
m12_188 -> m12_176  [color=blue, key=0, style=bold];
m12_134 -> m12_135  [key=0, style=solid];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_17  [key=2, style=dotted];
m12_135 -> m12_143  [color=darkseagreen4, key=1, label=expiry1, style=dashed];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_17  [key=2, style=dotted];
m12_136 -> m12_143  [color=darkseagreen4, key=1, label=expiry2, style=dashed];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_20  [key=2, style=dotted];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_17  [key=2, style=dotted];
m12_137 -> m12_143  [color=darkseagreen4, key=1, label=expiry3, style=dashed];
m12_138 -> m12_139  [key=0, style=solid];
m12_138 -> m12_17  [key=2, style=dotted];
m12_138 -> m12_143  [color=darkseagreen4, key=1, label=expiry4, style=dashed];
m12_139 -> m12_140  [key=0, style=solid];
m12_139 -> m12_18  [key=2, style=dotted];
m12_139 -> m12_17  [key=2, style=dotted];
m12_139 -> m12_144  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_140 -> m12_141  [key=0, style=solid];
m12_140 -> m12_148  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_140 -> m12_152  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_21  [key=2, style=dotted];
m12_144 -> m12_22  [key=2, style=dotted];
m12_144 -> m12_23  [key=2, style=dotted];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_152  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_19  [key=2, style=dotted];
m12_142 -> m12_144  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_145 -> m12_146  [key=0, style=solid];
m12_145 -> d63  [key=2, style=dotted];
m12_146 -> m12_134  [color=blue, key=0, style=bold];
m12_218 -> m12_219  [key=0, style=solid];
m12_219 -> m12_220  [key=0, style=solid];
m12_219 -> m12_17  [key=2, style=dotted];
m12_219 -> m12_227  [color=darkseagreen4, key=1, label=expiry1, style=dashed];
m12_220 -> m12_221  [key=0, style=solid];
m12_220 -> m12_17  [key=2, style=dotted];
m12_220 -> m12_227  [color=darkseagreen4, key=1, label=expiry2, style=dashed];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_20  [key=2, style=dotted];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_17  [key=2, style=dotted];
m12_221 -> m12_227  [color=darkseagreen4, key=1, label=expiry3, style=dashed];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_17  [key=2, style=dotted];
m12_222 -> m12_227  [color=darkseagreen4, key=1, label=expiry4, style=dashed];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_18  [key=2, style=dotted];
m12_223 -> m12_17  [key=2, style=dotted];
m12_223 -> m12_228  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_234  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_224 -> m12_237  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_21  [key=2, style=dotted];
m12_228 -> m12_231  [color=darkseagreen4, key=1, label=u, style=dashed];
m12_225 -> m12_226  [key=0, style=solid];
m12_225 -> m12_237  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_19  [key=2, style=dotted];
m12_226 -> m12_229  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_22  [key=2, style=dotted];
m12_229 -> m12_23  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> d63  [key=2, style=dotted];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> d63  [key=2, style=dotted];
m12_232 -> m12_218  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_17  [key=2, style=dotted];
m12_1 -> m12_6  [color=darkseagreen4, key=1, label=expiry, style=dashed];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_18  [key=2, style=dotted];
m12_2 -> m12_17  [key=2, style=dotted];
m12_2 -> m12_7  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_20  [key=2, style=dotted];
m12_6 -> m12_10  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_6 -> m12_11  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_6 -> m12_12  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_6 -> m12_13  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_6 -> m12_14  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_6 -> m12_6  [color=darkorchid, key=3, label="method methodReturn TSecond Of", style=bold];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_3 -> m12_31  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_21  [key=2, style=dotted];
m12_7 -> m12_15  [color=darkseagreen4, key=1, label=filterUniverse, style=dashed];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_19  [key=2, style=dotted];
m12_5 -> m12_8  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_22  [key=2, style=dotted];
m12_8 -> m12_23  [key=2, style=dotted];
m12_8 -> m12_10  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_8 -> m12_11  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_8 -> m12_12  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_8 -> m12_13  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_8 -> m12_14  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> d63  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> d63  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> d63  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> d63  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> d63  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> d63  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> d63  [key=2, style=dotted];
m12_16 -> m12_0  [color=blue, key=0, style=bold];
m12_236 -> m12_237  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=2, style=dotted];
m12_26 -> m12_29  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_33  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_27 -> m12_25  [color=blue, key=0, style=bold];
m12_30 -> m12_31  [key=0, style=solid];
m12_32 -> m12_30  [color=blue, key=0, style=bold];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_28  [key=2, style=dotted];
m12_51 -> m12_29  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_33  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_52 -> m12_50  [color=blue, key=0, style=bold];
m12_53 -> m12_54  [key=0, style=solid];
m12_55 -> m12_53  [color=blue, key=0, style=bold];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_28  [key=2, style=dotted];
m12_75 -> m12_77  [key=2, style=dotted];
m12_75 -> m12_29  [key=2, style=dotted];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_33  [key=2, style=dotted];
m12_74 -> m12_75  [key=0, style=solid];
m12_76 -> m12_74  [color=blue, key=0, style=bold];
m12_78 -> m12_79  [key=0, style=solid];
m12_80 -> m12_78  [color=blue, key=0, style=bold];
m12_102 -> m12_103  [key=0, style=solid];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_33  [key=2, style=dotted];
m12_105 -> m12_107  [key=2, style=dotted];
m12_101 -> m12_102  [key=0, style=solid];
m12_103 -> m12_101  [color=blue, key=0, style=bold];
m12_104 -> m12_105  [key=0, style=solid];
m12_106 -> m12_104  [color=blue, key=0, style=bold];
m12_129 -> m12_130  [key=0, style=solid];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_33  [key=2, style=dotted];
m12_132 -> m12_107  [key=2, style=dotted];
m12_128 -> m12_129  [key=0, style=solid];
m12_130 -> m12_128  [color=blue, key=0, style=bold];
m12_131 -> m12_132  [key=0, style=solid];
m12_133 -> m12_131  [color=blue, key=0, style=bold];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_150  [key=2, style=dotted];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_33  [key=2, style=dotted];
m12_152 -> m12_107  [key=2, style=dotted];
m12_147 -> m12_148  [key=0, style=solid];
m12_149 -> m12_147  [color=blue, key=0, style=bold];
m12_151 -> m12_152  [key=0, style=solid];
m12_153 -> m12_151  [color=blue, key=0, style=bold];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_172  [key=2, style=dotted];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_33  [key=2, style=dotted];
m12_174 -> m12_107  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid];
m12_171 -> m12_169  [color=blue, key=0, style=bold];
m12_173 -> m12_174  [key=0, style=solid];
m12_175 -> m12_173  [color=blue, key=0, style=bold];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_192  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_33  [key=2, style=dotted];
m12_189 -> m12_190  [key=0, style=solid];
m12_191 -> m12_189  [color=blue, key=0, style=bold];
m12_193 -> m12_194  [key=0, style=solid];
m12_195 -> m12_193  [color=blue, key=0, style=bold];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_214  [key=2, style=dotted];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_33  [key=2, style=dotted];
m12_211 -> m12_212  [key=0, style=solid];
m12_213 -> m12_211  [color=blue, key=0, style=bold];
m12_215 -> m12_216  [key=0, style=solid];
m12_217 -> m12_215  [color=blue, key=0, style=bold];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_17  [key=2, style=dotted];
m12_234 -> m12_234  [color=darkseagreen4, key=1, label=x, style=dashed];
m12_237 -> m12_238  [key=0, style=solid];
m12_237 -> m12_33  [key=2, style=dotted];
m12_233 -> m12_234  [key=0, style=solid];
m12_235 -> m12_233  [color=blue, key=0, style=bold];
m12_238 -> m12_236  [color=blue, key=0, style=bold];
m12_196 -> m12_197  [key=0, style=solid];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_17  [key=2, style=dotted];
m12_197 -> m12_205  [color=darkseagreen4, key=1, label=expiry1, style=dashed];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_17  [key=2, style=dotted];
m12_198 -> m12_205  [color=darkseagreen4, key=1, label=expiry2, style=dashed];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_20  [key=2, style=dotted];
m12_199 -> m12_200  [key=0, style=solid];
m12_199 -> m12_17  [key=2, style=dotted];
m12_199 -> m12_205  [color=darkseagreen4, key=1, label=expiry3, style=dashed];
m12_200 -> m12_201  [key=0, style=solid];
m12_200 -> m12_17  [key=2, style=dotted];
m12_200 -> m12_205  [color=darkseagreen4, key=1, label=expiry4, style=dashed];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_18  [key=2, style=dotted];
m12_201 -> m12_17  [key=2, style=dotted];
m12_201 -> m12_206  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_212  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_202 -> m12_216  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_21  [key=2, style=dotted];
m12_206 -> m12_209  [color=darkseagreen4, key=1, label=filterUniverse, style=dashed];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_216  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_204 -> m12_205  [key=0, style=solid];
m12_204 -> m12_19  [key=2, style=dotted];
m12_204 -> m12_207  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_22  [key=2, style=dotted];
m12_207 -> m12_23  [key=2, style=dotted];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> d63  [key=2, style=dotted];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> d63  [key=2, style=dotted];
m12_210 -> m12_196  [color=blue, key=0, style=bold];
m12_154 -> m12_155  [key=0, style=solid];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_17  [key=2, style=dotted];
m12_155 -> m12_163  [color=darkseagreen4, key=1, label=expiry1, style=dashed];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_17  [key=2, style=dotted];
m12_156 -> m12_163  [color=darkseagreen4, key=1, label=expiry2, style=dashed];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_20  [key=2, style=dotted];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_17  [key=2, style=dotted];
m12_157 -> m12_163  [color=darkseagreen4, key=1, label=expiry3, style=dashed];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_17  [key=2, style=dotted];
m12_158 -> m12_163  [color=darkseagreen4, key=1, label=expiry4, style=dashed];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> m12_18  [key=2, style=dotted];
m12_159 -> m12_17  [key=2, style=dotted];
m12_159 -> m12_164  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_160 -> m12_161  [key=0, style=solid];
m12_160 -> m12_170  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_160 -> m12_174  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_21  [key=2, style=dotted];
m12_164 -> m12_167  [color=darkseagreen4, key=1, label=filterUniverse, style=dashed];
m12_161 -> m12_162  [key=0, style=solid];
m12_161 -> m12_174  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_19  [key=2, style=dotted];
m12_162 -> m12_165  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_22  [key=2, style=dotted];
m12_165 -> m12_23  [key=2, style=dotted];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> d63  [key=2, style=dotted];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> d63  [key=2, style=dotted];
m12_168 -> m12_154  [color=blue, key=0, style=bold];
m12_56 -> m12_57  [key=0, style=solid];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_17  [key=2, style=dotted];
m12_57 -> m12_62  [color=darkseagreen4, key=1, label=time, style=dashed];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_18  [key=2, style=dotted];
m12_58 -> m12_63  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_73  [key=2, style=dotted];
m12_62 -> m12_20  [key=2, style=dotted];
m12_62 -> m12_66  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_62 -> m12_67  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_62 -> m12_68  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_62 -> m12_69  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_62 -> m12_70  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_75  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_59 -> m12_79  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_21  [key=2, style=dotted];
m12_63 -> m12_71  [color=darkseagreen4, key=1, label=filterUniverse, style=dashed];
m12_63 -> m12_62  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_19  [key=2, style=dotted];
m12_61 -> m12_64  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_22  [key=2, style=dotted];
m12_64 -> m12_23  [key=2, style=dotted];
m12_64 -> m12_66  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_64 -> m12_67  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_64 -> m12_68  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_64 -> m12_69  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_64 -> m12_70  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> d63  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> d63  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> d63  [key=2, style=dotted];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> d63  [key=2, style=dotted];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> d63  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> d63  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> d63  [key=2, style=dotted];
m12_72 -> m12_56  [color=blue, key=0, style=bold];
m12_34 -> m12_35  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_17  [key=2, style=dotted];
m12_35 -> m12_40  [color=darkseagreen4, key=1, label=expiry, style=dashed];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_18  [key=2, style=dotted];
m12_36 -> m12_17  [key=2, style=dotted];
m12_36 -> m12_41  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_20  [key=2, style=dotted];
m12_40 -> m12_44  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_40 -> m12_45  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_40 -> m12_46  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_40 -> m12_47  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_40 -> m12_37  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_37 -> m12_54  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_37 -> m12_40  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Plus", style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_21  [key=2, style=dotted];
m12_41 -> m12_48  [color=darkseagreen4, key=1, label=filterUniverse, style=dashed];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_19  [key=2, style=dotted];
m12_39 -> m12_42  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_22  [key=2, style=dotted];
m12_42 -> m12_23  [key=2, style=dotted];
m12_42 -> m12_44  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_42 -> m12_45  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_42 -> m12_46  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_42 -> m12_47  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> d63  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> d63  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> d63  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> d63  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> d63  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> d63  [key=2, style=dotted];
m12_49 -> m12_34  [color=blue, key=0, style=bold];
m12_108 -> m12_109  [key=0, style=solid];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_17  [key=2, style=dotted];
m12_109 -> m12_121  [color=darkseagreen4, key=1, label=expiry1, style=dashed];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_17  [key=2, style=dotted];
m12_110 -> m12_121  [color=darkseagreen4, key=1, label=expiry2, style=dashed];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_20  [key=2, style=dotted];
m12_121 -> m12_124  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_121 -> m12_125  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_121 -> m12_126  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_121 -> m12_123  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Times", style=bold];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_17  [key=2, style=dotted];
m12_111 -> m12_121  [color=darkseagreen4, key=1, label=expiry3, style=dashed];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_17  [key=2, style=dotted];
m12_112 -> m12_121  [color=darkseagreen4, key=1, label=expiry4, style=dashed];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_17  [key=2, style=dotted];
m12_113 -> m12_121  [color=darkseagreen4, key=1, label=expiry5, style=dashed];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_17  [key=2, style=dotted];
m12_114 -> m12_121  [color=darkseagreen4, key=1, label=expiry6, style=dashed];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_17  [key=2, style=dotted];
m12_115 -> m12_121  [color=darkseagreen4, key=1, label=expiry7, style=dashed];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_17  [key=2, style=dotted];
m12_116 -> m12_121  [color=darkseagreen4, key=1, label=expiry8, style=dashed];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_18  [key=2, style=dotted];
m12_117 -> m12_17  [key=2, style=dotted];
m12_117 -> m12_122  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_118 -> m12_132  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_122 -> m12_123  [key=0, style=solid];
m12_122 -> m12_21  [key=2, style=dotted];
m12_122 -> m12_22  [key=2, style=dotted];
m12_122 -> m12_23  [key=2, style=dotted];
m12_122 -> m12_124  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_122 -> m12_125  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_122 -> m12_126  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_119 -> m12_120  [key=0, style=solid];
m12_119 -> m12_132  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_19  [key=2, style=dotted];
m12_120 -> m12_122  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> d63  [key=2, style=dotted];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> d63  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> d63  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> d63  [key=2, style=dotted];
m12_123 -> m12_121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m12_127 -> m12_108  [color=blue, key=0, style=bold];
m12_81 -> m12_82  [key=0, style=solid];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_17  [key=2, style=dotted];
m12_82 -> m12_94  [color=darkseagreen4, key=1, label=expiry1, style=dashed];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_17  [key=2, style=dotted];
m12_83 -> m12_94  [color=darkseagreen4, key=1, label=expiry2, style=dashed];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_20  [key=2, style=dotted];
m12_94 -> m12_97  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_94 -> m12_98  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_94 -> m12_99  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_94 -> m12_93  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_17  [key=2, style=dotted];
m12_84 -> m12_94  [color=darkseagreen4, key=1, label=expiry3, style=dashed];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_17  [key=2, style=dotted];
m12_85 -> m12_94  [color=darkseagreen4, key=1, label=expiry4, style=dashed];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_17  [key=2, style=dotted];
m12_86 -> m12_94  [color=darkseagreen4, key=1, label=expiry5, style=dashed];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_17  [key=2, style=dotted];
m12_87 -> m12_94  [color=darkseagreen4, key=1, label=expiry6, style=dashed];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_17  [key=2, style=dotted];
m12_88 -> m12_94  [color=darkseagreen4, key=1, label=expiry7, style=dashed];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_17  [key=2, style=dotted];
m12_89 -> m12_94  [color=darkseagreen4, key=1, label=expiry8, style=dashed];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_18  [key=2, style=dotted];
m12_90 -> m12_17  [key=2, style=dotted];
m12_90 -> m12_95  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_102  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m12_91 -> m12_105  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_21  [key=2, style=dotted];
m12_95 -> m12_22  [key=2, style=dotted];
m12_95 -> m12_23  [key=2, style=dotted];
m12_95 -> m12_97  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_95 -> m12_98  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_95 -> m12_99  [color=darkseagreen4, key=1, label=filtered, style=dashed];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_105  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m12_92 -> m12_94  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Over", style=bold];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_19  [key=2, style=dotted];
m12_93 -> m12_95  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> d63  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> d63  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> d63  [key=2, style=dotted];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> d63  [key=2, style=dotted];
m12_100 -> m12_81  [color=blue, key=0, style=bold];
m12_239 -> m12_31  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_240 -> m12_54  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_241 -> m12_79  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_242 -> m12_105  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_243 -> m12_132  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_244 -> m12_152  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_245 -> m12_174  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_246 -> m12_194  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_247 -> m12_216  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m12_248 -> m12_237  [color=darkseagreen4, key=1, label=universeFunc, style=dashed];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_32  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_26 -> m13_33  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_26 -> m13_36  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_26 -> m13_37  [color=darkseagreen4, key=1, label=long, style=dashed];
m13_26 -> m13_38  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [key=0, style=solid];
m13_32 -> m13_33  [key=0, style=solid];
m13_33 -> m13_34  [key=0, style=solid];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_47  [key=2, style=dotted];
m13_36 -> m13_48  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_40  [key=0, style=solid];
m13_28 -> m13_45  [key=0, style=solid];
m13_28 -> m13_46  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_31  [key=0, style=solid];
m13_30 -> m13_45  [key=0, style=solid];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_33  [key=0, style=solid];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_36  [color=darkseagreen4, key=1, label=lowClose, style=dashed];
m13_34 -> m13_38  [color=darkseagreen4, key=1, label=lowClose, style=dashed];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_38  [color=darkseagreen4, key=1, label=highClose, style=dashed];
m13_39 -> m13_40  [key=0, style=solid];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_42  [key=0, style=solid];
m13_41 -> m13_42  [key=0, style=solid];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_44  [key=0, style=solid];
m13_43 -> m13_44  [key=0, style=solid];
m13_44 -> m13_45  [key=0, style=solid];
m13_45 -> m13_26  [color=blue, key=0, style=bold];
m13_53 -> m13_54  [key=0, style=solid];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_52  [key=2, style=dotted];
m13_55 -> m13_53  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_4  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_2 -> m13_5  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_2 -> m13_6  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_2 -> m13_7  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_2 -> m13_8  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_2 -> m13_9  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_2 -> m13_10  [color=darkseagreen4, key=1, label=long, style=dashed];
m13_2 -> m13_11  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_2 -> m13_12  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_7 -> m13_8  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_13 -> m13_2  [color=blue, key=0, style=bold];
m13_49 -> m13_50  [key=0, style=solid];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_52  [key=2, style=dotted];
m13_51 -> m13_49  [color=blue, key=0, style=bold];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_16  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_14 -> m13_17  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_14 -> m13_18  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_14 -> m13_19  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_14 -> m13_20  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_14 -> m13_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_14 -> m13_23  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_14 -> m13_24  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m13_15 -> m13_16  [key=0, style=solid];
m13_16 -> m13_17  [key=0, style=solid];
m13_17 -> m13_18  [key=0, style=solid];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_20 -> m13_21  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_23 -> m13_24  [key=0, style=solid];
m13_24 -> m13_25  [key=0, style=solid];
m13_22 -> m13_23  [key=0, style=solid];
m13_25 -> m13_14  [color=blue, key=0, style=bold];
m13_56 -> m13_57  [key=0, style=solid];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_0  [key=2, style=dotted];
m13_58 -> m13_56  [color=blue, key=0, style=bold];
m13_59 -> m13_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
m13_59 -> m13_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.RenkoBar", style=dashed];
}
