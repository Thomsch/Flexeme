digraph  {
n44 [label="QuantConnect.Indicators.IndicatorDataPoint", span=""];
n0 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", span="29-29"];
n1 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", label="Value = 0m", span="31-31"];
n2 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", label="Time = DateTime.MinValue", span="32-32"];
n3 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", label="Exit QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", span="29-29"];
n4 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40"];
n5 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", label="Time = time", span="42-42"];
n6 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", label="Value = value", span="43-43"];
n7 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", label="Exit QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40"];
n8 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", span="52-52"];
n9 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", label="Symbol = symbol", span="54-54"];
n10 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", label="Time = time", span="55-55"];
n11 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", label="Value = value", span="56-56"];
n12 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", label="Exit QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", span="52-52"];
n13 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", label="Entry QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", span="66-66"];
n14 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", label="other == null", span="68-68"];
n16 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", label="return other.Time == Time && other.Value == Value;", span="72-72"];
n15 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", label="return false;", span="70-70"];
n17 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", label="Exit QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)", span="66-66"];
n18 [cluster="QuantConnect.Indicators.IndicatorDataPoint.ToString()", label="Entry QuantConnect.Indicators.IndicatorDataPoint.ToString()", span="82-82"];
n19 [cluster="QuantConnect.Indicators.IndicatorDataPoint.ToString()", label="return string.Format(''{0} - {1}'', Time.ToString(''s''), Value);", span="84-84"];
n20 [cluster="QuantConnect.Indicators.IndicatorDataPoint.ToString()", label="Exit QuantConnect.Indicators.IndicatorDataPoint.ToString()", span="82-82"];
n21 [cluster="System.DateTime.ToString(string)", label="Entry System.DateTime.ToString(string)", span="0-0"];
n22 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n23 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", label="Entry QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", span="95-95"];
n24 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", label="ReferenceEquals(null, obj)", span="97-97"];
n26 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", label="return obj is IndicatorDataPoint && Equals((IndicatorDataPoint) obj);", span="98-98"];
n25 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", label="return false;", span="97-97"];
n28 [cluster="object.ReferenceEquals(object, object)", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
n27 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", label="Exit QuantConnect.Indicators.IndicatorDataPoint.Equals(object)", span="95-95"];
n29 [cluster="QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()", label="Entry QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()", span="108-108"];
n30 [cluster="QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()", label="return (Value.GetHashCode()*397) ^ Time.GetHashCode();", span="112-112"];
n31 [cluster="QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()", label="Exit QuantConnect.Indicators.IndicatorDataPoint.GetHashCode()", span="108-108"];
n32 [cluster="decimal.GetHashCode()", label="Entry decimal.GetHashCode()", span="0-0"];
n33 [cluster="System.DateTime.GetHashCode()", label="Entry System.DateTime.GetHashCode()", span="0-0"];
n34 [cluster="QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)", label="Entry QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)", span="121-121"];
n35 [cluster="QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)", label="return instance.Value;", span="123-123"];
n36 [cluster="QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)", label="Exit QuantConnect.Indicators.IndicatorDataPoint.implicit operator decimal(QuantConnect.Indicators.IndicatorDataPoint)", span="121-121"];
n37 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", label="Entry QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="129-129"];
n38 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", label="throw new NotImplementedException(''IndicatorDataPoint does not support the Reader function. This function should never be called on this type.'');", span="131-131"];
n39 [cluster="QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", label="Exit QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="129-129"];
n40 [cluster="System.NotImplementedException.NotImplementedException(string)", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
n41 [cluster="QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", label="Entry QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="137-137"];
n42 [cluster="QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", label="throw new NotImplementedException(''IndicatorDataPoint does not support the GetSource function. This function should never be called on this type.'');", span="139-139"];
n43 [cluster="QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", label="Exit QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="137-137"];
d68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, label="securities.Add(config.Symbol, security)", prediction=0, span="211-211"];
d26 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
d60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="195-195"];
d64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="201-201"];
d66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", prediction=1, span="205-205"];
d67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", prediction=1, span="209-209"];
d69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", prediction=3, span="212-212"];
d90 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
d137 [label="QuantConnect.Securities.Cash", span=""];
d50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label=potentials, span="180-180"];
d70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, label="return security;", prediction=1, span="213-213"];
d91 [cluster="Unk.Trace", label="Entry Unk.Trace", span=""];
d54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="186-186"];
d56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="188-188"];
d65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="securityType == SecurityType.Crypto", span="203-203"];
d59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="193-193"];
d88 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
d89 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
d72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
d27 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="Symbol == CashBook.AccountCurrency", span="135-135"];
d34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="146-147"];
d42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var markets = securities.Keys.GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="164-164"];
d47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="174-176"];
d107 [cluster="lambda expression", label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="174-174"];
d111 [cluster="lambda expression", label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="175-175"];
d114 [cluster="lambda expression", label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="176-176"];
d48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="178-178"];
d58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="192-192"];
d49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="179-179"];
d61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="SecuritySymbol = config.Symbol", span="196-196"];
d77 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d63 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="securityType == SecurityType.Cfd", span="199-199"];
d87 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
d3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", label="Amount = amount", span="74-74"];
d4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", label="ConversionRate = conversionRate", span="75-75"];
d5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", label="Symbol = symbol.ToUpper()", span="76-76"];
d10 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label=_isBaseCurrency, span="85-85"];
d13 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label=_invertRealTimePrice, span="88-88"];
d15 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="ConversionRate = rate", span="92-92"];
d18 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", label=_locker, span="103-103"];
d19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", label="Amount += amount", span="105-105"];
d20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", label="return Amount;", span="106-106"];
d23 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", label=_locker, span="116-116"];
d24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", label="Amount = amount", span="118-118"];
d28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="SecuritySymbol = QuantConnect.Symbol.Empty", span="137-137"];
d29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="_isBaseCurrency = true", span="138-138"];
d30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="ConversionRate = 1.0m", span="139-139"];
d32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="string normal = Symbol + CashBook.AccountCurrency", span="144-144"];
d33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="string invert = CashBook.AccountCurrency + Symbol", span="145-145"];
d36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="SecuritySymbol = config.Symbol", span="151-151"];
d39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="SecuritySymbol = config.Symbol", span="156-156"];
d40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="_invertRealTimePrice = true", span="157-157"];
d52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="_invertRealTimePrice = symbol.Value == invert", span="184-184"];
d71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="218-218"];
d120 [cluster="QuantConnect.Securities.Cash.ToString()", label="decimal rate = ConversionRate", span="228-228"];
d122 [cluster="QuantConnect.Securities.Cash.ToString()", label="return string.Format(''{0}: {1,15} @ ${2,10} = {3}{4}'',\r\n                Symbol,\r\n                Amount.ToString(''0.00''),\r\n                rate.ToString(''0.00####''),\r\n                Currencies.GetCurrencySymbol(Symbol),\r\n                Math.Round(ValueInAccountCurrency, 2)\r\n                );", span="230-236"];
d51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="symbol.Value == normal || symbol.Value == invert", span="182-182"];
d53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="var securityType = symbol.ID.SecurityType", span="185-185"];
d57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.ToString());", span="190-190"];
d55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="Cash quoteCash", span="187-187"];
d82 [cluster="Unk.GetSymbolProperties", label="Entry Unk.GetSymbolProperties", span=""];
d83 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
d31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="return null;", span="140-140"];
d37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="return null;", span="152-152"];
d41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="return null;", span="158-158"];
d38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="config.Symbol.Value == invert", span="154-154"];
d35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="config.Symbol.Value == normal", span="149-149"];
d73 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d93 [cluster="lambda expression", label="Entry lambda expression", span="146-147"];
d43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="165-165"];
d74 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d75 [cluster="Unk.ToDictionary", label="Entry Unk.ToDictionary", span=""];
d96 [cluster="lambda expression", label="Entry lambda expression", span="164-164"];
d99 [cluster="lambda expression", label="Entry lambda expression", span="164-164"];
d102 [cluster="lambda expression", label="Entry lambda expression", span="164-164"];
d44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="167-167"];
d45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="169-169"];
d46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="171-171"];
d78 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d79 [cluster="Unk.Concat", label="Entry Unk.Concat", span=""];
d106 [cluster="lambda expression", label="Entry lambda expression", span="174-174"];
d110 [cluster="lambda expression", label="Entry lambda expression", span="175-175"];
d113 [cluster="lambda expression", label="Entry lambda expression", span="176-176"];
d138 [label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
d139 [label=markets, span=""];
d108 [cluster="lambda expression", label="Exit lambda expression", span="174-174"];
d109 [cluster="Unk.CreateSymbol", label="Entry Unk.CreateSymbol", span=""];
d112 [cluster="lambda expression", label="Exit lambda expression", span="175-175"];
d115 [cluster="lambda expression", label="Exit lambda expression", span="176-176"];
d80 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
d81 [cluster="Unk.Min", label="Entry Unk.Min", span=""];
d116 [cluster="lambda expression", label="Entry lambda expression", span="178-178"];
d86 [cluster="Unk.GetEntry", label="Entry Unk.GetEntry", span=""];
d62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", label="Security security", span="198-198"];
d0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
d1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", label="symbol == null || symbol.Length != 3", span="70-70"];
d6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
d8 [cluster="string.ToUpper()", label="Entry string.ToUpper()", span="0-0"];
d9 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
d11 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="return;", span="85-85"];
d12 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="var rate = data.Value", span="87-87"];
d14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="rate = 1/rate", span="90-90"];
d16 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
d17 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101"];
d21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101"];
d22 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
d25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
d7 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
d92 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d119 [cluster="QuantConnect.Securities.Cash.ToString()", label="Entry QuantConnect.Securities.Cash.ToString()", span="225-225"];
d121 [cluster="QuantConnect.Securities.Cash.ToString()", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="229-229"];
d123 [cluster="QuantConnect.Securities.Cash.ToString()", label="Exit QuantConnect.Securities.Cash.ToString()", span="225-225"];
d126 [cluster="decimal.ToString(string)", label="Entry decimal.ToString(string)", span="0-0"];
d127 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
d125 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
d128 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
d84 [cluster="Exception.cstr", label="Entry Exception.cstr", span=""];
d85 [cluster="Unk.ToString", label="Entry Unk.ToString", span=""];
d95 [cluster="lambda expression", label="Exit lambda expression", span="146-147"];
d94 [cluster="lambda expression", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="146-147"];
d76 [cluster="Unk.ContainsKey", label="Entry Unk.ContainsKey", span=""];
d98 [cluster="lambda expression", label="Exit lambda expression", span="164-164"];
d97 [cluster="lambda expression", label="x.SecurityType", span="164-164"];
d101 [cluster="lambda expression", label="Exit lambda expression", span="164-164"];
d100 [cluster="lambda expression", label="x.Key", span="164-164"];
d104 [cluster="lambda expression", label="Exit lambda expression", span="164-164"];
d103 [cluster="lambda expression", label="y.First().ID.Market", span="164-164"];
d118 [cluster="lambda expression", label="Exit lambda expression", span="178-178"];
d117 [cluster="lambda expression", label="x.Resolution", span="178-178"];
d2 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="72-72"];
d124 [cluster="decimal.RoundToSignificantDigits(int)", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
d105 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_160 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m0_182 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="395-395"];
m0_183 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs", label="MarketSimulation?.SimulateMarketConditions(this, Algorithm)", span="398-398"];
m0_184 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="395-395"];
m0_175 [cluster="Unk.All", file="BacktestingBrokerage.cs", label="Entry Unk.All", span=""];
m0_203 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m0_52 [cluster="int.ToString()", file="BacktestingBrokerage.cs", label="Entry int.ToString()", span="0-0"];
m0_56 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="423-423"];
m0_198 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="e.Status.IsClosed() && _pendingOptionAssignments.Contains(e.Symbol)", span="425-425"];
m0_199 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="_pendingOptionAssignments.Remove(e.Symbol)", span="427-427"];
m0_200 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="base.OnOrderEvent(e)", span="430-430"];
m0_201 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="423-423"];
m0_159 [cluster="QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="48-48"];
m0_164 [cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38"];
m0_163 [cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54"];
m0_195 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m0_210 [cluster="QuantConnect.Orders.Order.Clone()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="241-241"];
m0_179 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Entry lambda expression", span="377-377"];
m0_24 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Entry lambda expression", span="108-108"];
m0_25 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="x.Value.Symbol", span="108-108"];
m0_26 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Exit lambda expression", span="108-108"];
m0_31 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Entry lambda expression", span="119-119"];
m0_32 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="x.Value", span="119-119"];
m0_33 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Exit lambda expression", span="119-119"];
m0_176 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Entry lambda expression", span="245-245"];
m0_177 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="x.Key", span="245-245"];
m0_178 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Exit lambda expression", span="245-245"];
m0_180 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="x.Status.IsClosed()", span="377-377"];
m0_181 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Exit lambda expression", span="377-377"];
m0_34 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127"];
m0_35 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Algorithm.LiveMode", span="129-129"];
m0_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Log.Trace(''BacktestingBrokerage.PlaceOrder(): Type: '' + order.Type + '' Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="131-131"];
m0_37 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.Status == OrderStatus.New", span="134-134"];
m0_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="SetPendingOrder(order)", span="139-139"];
m0_41 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var orderId = order.Id.ToString()", span="142-142"];
m0_42 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!order.BrokerId.Contains(orderId)", span="143-143"];
m0_43 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.BrokerId.Add(orderId)", span="143-143"];
m0_45 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="147-147"];
m0_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label=_needsScanLock, span="136-136"];
m0_48 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return false;", span="152-152"];
m0_39 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="_needsScan = true", span="138-138"];
m0_44 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="int orderFee = 0", span="146-146"];
m0_46 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="OnOrderEvent(submitted)", span="148-148"];
m0_47 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return true;", span="150-150"];
m0_49 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127"];
m0_27 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117"];
m0_28 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs", label="return Algorithm.Portfolio.CashBook.Select(x => x.Value).ToList();", span="119-119"];
m0_29 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="117-117"];
m0_155 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m0_5 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62"];
m0_6 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="Algorithm = algorithm", span="65-65"];
m0_7 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="66-66"];
m0_8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="62-62"];
m0_158 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m0_185 [cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31"];
m0_14 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96"];
m0_15 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs", label="return Algorithm.Transactions.GetOpenOrders();", span="98-98"];
m0_16 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="96-96"];
m0_202 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m0_174 [cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132"];
m0_23 [cluster="Unk.ToList", file="BacktestingBrokerage.cs", label="Entry Unk.ToList", span=""];
m0_91 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232"];
m0_92 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=_needsScanLock, span="234-234"];
m0_93 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="!_needsScan", span="237-237"];
m0_94 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="return;", span="239-239"];
m0_95 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var stillNeedsScan = false", span="242-242"];
m0_96 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.OrderBy(x => x.Key)", span="245-245"];
m0_153 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_needsScan = stillNeedsScan", span="388-388"];
m0_97 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var order = kvp.Value", span="247-247"];
m0_98 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order == null", span="248-248"];
m0_99 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="250-250"];
m0_101 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Status.IsClosed()", span="255-255"];
m0_102 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(order.Id, out order)", span="258-258"];
m0_103 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="263-263"];
m0_105 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="269-269"];
m0_107 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="272-272"];
m0_108 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="274-274"];
m0_109 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="276-276"];
m0_110 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(order.Id, out order)", span="277-277"];
m0_111 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="282-282"];
m0_113 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="hasSufficientBuyingPowerResult = security.BuyingPowerModel.HasSufficientBuyingPowerForOrder(Algorithm.Portfolio, security, order)", span="291-291"];
m0_116 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(order.Id, out pending)", span="297-297"];
m0_123 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Type", span="315-315"];
m0_125 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="318-318"];
m0_127 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="322-322"];
m0_129 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="326-326"];
m0_131 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="330-330"];
m0_133 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="334-334"];
m0_135 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="338-338"];
m0_138 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="343-343"];
m0_145 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Status != fill.Status || fill.FillQuantity != 0", span="364-364"];
m0_147 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Type == OrderType.OptionExercise", span="370-370"];
m0_148 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fill.Message = order.Tag", span="372-372"];
m0_151 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(order.Id, out order)", span="379-379"];
m0_100 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(kvp.Key, out order)", span="251-251"];
m0_104 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="stillNeedsScan = true", span="265-265"];
m0_106 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Security security", span="271-271"];
m0_144 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=fills, span="361-361"];
m0_150 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills.All(x => x.Status.IsClosed())", span="377-377"];
m0_122 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var model = security.FillModel", span="310-310"];
m0_137 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var option = (Option)security", span="342-342"];
m0_112 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="HasSufficientBuyingPowerForOrderResult hasSufficientBuyingPowerResult", span="288-288"];
m0_114 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=Exception, span="293-293"];
m0_121 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="hasSufficientBuyingPowerResult.IsSufficient", span="307-307"];
m0_115 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Order pending", span="296-296"];
m0_119 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(err)", span="301-301"];
m0_124 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.Limit", span="317-317"];
m0_126 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.StopMarket", span="321-321"];
m0_128 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.Market", span="325-325"];
m0_130 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.StopLimit", span="329-329"];
m0_132 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.MarketOnOpen", span="333-333"];
m0_134 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.MarketOnClose", span="337-337"];
m0_136 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.OptionExercise", span="341-341"];
m0_139 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=Exception, span="347-347"];
m0_140 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(err)", span="349-349"];
m0_146 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OnOrderEvent(fill)", span="367-367"];
m0_149 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OnOptionPositionAssigned(fill)", span="373-373"];
m0_152 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="stillNeedsScan = true", span="383-383"];
m0_154 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232"];
m0_162 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="432-432"];
m0_74 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m0_22 [cluster="Holding.cstr", file="BacktestingBrokerage.cs", label="Entry Holding.cstr", span=""];
m0_90 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m0_173 [cluster="decimal.SmartRounding()", file="BacktestingBrokerage.cs", label="Entry decimal.SmartRounding()", span="208-208"];
m0_194 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m0_9 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74"];
m0_10 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="Algorithm = algorithm", span="77-77"];
m0_11 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="MarketSimulation = marketSimulation", span="78-78"];
m0_12 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="79-79"];
m0_13 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74"];
m0_4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BacktestingBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m0_172 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m0_0 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m0_1 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Algorithm = algorithm", span="53-53"];
m0_2 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="54-54"];
m0_3 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m0_57 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160"];
m0_58 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Algorithm.LiveMode", span="162-162"];
m0_59 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="164-164"];
m0_62 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!_pending.TryGetValue(order.Id, out pending)", span="170-170"];
m0_65 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="SetPendingOrder(order)", span="177-177"];
m0_66 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var orderId = order.Id.ToString()", span="180-180"];
m0_67 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!order.BrokerId.Contains(orderId)", span="181-181"];
m0_68 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.BrokerId.Add(orderId)", span="181-181"];
m0_70 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="185-185"];
m0_60 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label=_needsScanLock, span="167-167"];
m0_61 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Order pending", span="169-169"];
m0_63 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return false;", span="173-173"];
m0_64 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="_needsScan = true", span="176-176"];
m0_69 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="int orderFee = 0", span="184-184"];
m0_71 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="OnOrderEvent(updated)", span="186-186"];
m0_72 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return true;", span="188-188"];
m0_73 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160"];
m0_186 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="406-406"];
m0_187 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="_pendingOptionAssignments.Contains(option.Symbol)", span="409-409"];
m0_189 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="_pendingOptionAssignments.Add(option.Symbol)", span="411-411"];
m0_190 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0m, 0m, Algorithm.UtcTime, ''Simulated option assignment before expiration'')", span="413-413"];
m0_188 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="return;", span="409-409"];
m0_191 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="var ticket = Algorithm.Transactions.ProcessRequest(request)", span="415-415"];
m0_192 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="Log.Trace($''BacktestingBrokerage.ActivateOptionAssignment(): OrderId: {ticket.OrderId}'')", span="416-416"];
m0_193 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="406-406"];
m0_53 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m0_170 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_17 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="259-259"];
m0_157 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
m0_169 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
m0_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m0_165 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30"];
m0_204 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="436-436"];
m0_205 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="436-436"];
m0_196 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m0_75 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196"];
m0_76 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Algorithm.LiveMode", span="198-198"];
m0_77 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="200-200"];
m0_80 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!_pending.TryRemove(order.Id, out pending)", span="206-206"];
m0_82 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var orderId = order.Id.ToString()", span="213-213"];
m0_83 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!order.BrokerId.Contains(orderId)", span="214-214"];
m0_84 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.BrokerId.Add(order.Id.ToString())", span="214-214"];
m0_86 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="218-218"];
m0_78 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label=_needsScanLock, span="203-203"];
m0_79 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Order pending", span="205-205"];
m0_81 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return false;", span="209-209"];
m0_85 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="int orderFee = 0", span="217-217"];
m0_87 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="OnOrderEvent(canceled)", span="219-219"];
m0_88 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return true;", span="221-221"];
m0_89 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196"];
m0_166 [cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46"];
m0_197 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133"];
m0_171 [cluster="string.Format(string, object, object, object)", file="BacktestingBrokerage.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m0_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_206 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="444-444"];
m0_207 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="444-444"];
m0_51 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="454-454"];
m0_208 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="_pending[order.Id] = order.Clone()", span="457-457"];
m0_209 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="454-454"];
m0_156 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m0_168 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70"];
m0_167 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62"];
m0_18 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105"];
m0_19 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs", label="return (from kvp in Algorithm.Portfolio.Securities.OrderBy(x => x.Value.Symbol)\r\n                    where kvp.Value.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(kvp.Value)).ToList();", span="108-110"];
m0_20 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105"];
m0_50 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m0_30 [cluster="Unk.Select", file="BacktestingBrokerage.cs", label="Entry Unk.Select", span=""];
m0_55 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m0_211 [file="BacktestingBrokerage.cs", label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
m2_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="118-118"];
m2_11 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m2_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_securities = new HashSet<Security>()", span="65-65"];
m2_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="ConstantAlphaModel.cs", label="_configurator = configurator", span="40-40"];
m2_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", span="37-37"];
m2_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="48-48"];
m2_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="ConstantAlphaModel.cs", label="return _configurator(_factory.CreateEnumerator(request));", span="50-50"];
m2_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="48-48"];
m2_7 [cluster="QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="31-31"];
m2_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory", span=""];
m2_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55"];
m2_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="102-102"];
m2_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol.TryGetValue(symbol, out generatedTimeUtc)", span="105-105"];
m2_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="utcTime - generatedTimeUtc < _period", span="109-109"];
m2_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol[symbol] = utcTime", span="117-117"];
m2_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="DateTime generatedTimeUtc", span="104-104"];
m2_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="return false;", span="111-111"];
m2_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="return true;", span="118-118"];
m2_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="102-102"];
m2_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", span="37-37"];
m2_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory.PostCreateConfigureSubscriptionEnumeratorFactory(QuantConnect.Data.ISubscriptionEnumeratorFactory, System.Func<System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="ConstantAlphaModel.cs", label="_factory = factory", span="39-39"];
m2_25 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="32-32"];
m2_26 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m2_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75"];
m2_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="ConstantAlphaModel.cs", label="yield return new Insight(security.Symbol, _type, _direction, _period, _magnitude, _confidence);", prediction=5, span="81-81"];
m2_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label=_securities, span="77-77"];
m2_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="ShouldEmitInsight(algorithm.UtcTime, security.Symbol)", span="79-79"];
m2_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75"];
m2_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91"];
m2_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="93-93"];
m2_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol.Remove(removed.Symbol)", span="98-98"];
m2_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="changes.RemovedSecurities", span="96-96"];
m2_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91"];
m2_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_35 [file="ConstantAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", span=""];
m4_211 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m4_140 [cluster="System.Type.GetMethods()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m4_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m4_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label=_locked, span="853-853"];
m4_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="timeZone == null", span="858-858"];
m4_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="_timeKeeper.AddTimeZone(timeZone)", span="859-859"];
m4_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="860-860"];
m4_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="TimeRules.SetDefaultTimeZone(timeZone)", span="863-863"];
m4_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="855-855"];
m4_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new ArgumentNullException(''timeZone'');", span="858-858"];
m4_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m4_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m4_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Name = GetType().Name", span="92-92"];
m4_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Status = AlgorithmStatus.Running", span="93-93"];
m4_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="IsWarmingUp = true", span="96-96"];
m4_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="_startDate = new DateTime(1998, 01, 01)", span="103-103"];
m4_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="_endDate = DateTime.Now.AddDays(-1)", span="104-104"];
m4_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="107-107"];
m4_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="109-109"];
m4_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Settings = new AlgorithmSettings()", span="111-111"];
m4_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="114-114"];
m4_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Securities = new SecurityManager(_timeKeeper)", span="116-116"];
m4_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Transactions = new SecurityTransactionManager(Securities)", span="117-117"];
m4_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Portfolio = new SecurityPortfolioManager(Securities, Transactions)", span="118-118"];
m4_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="BrokerageModel = new DefaultBrokerageModel()", span="119-119"];
m4_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Notify = new NotificationManager(false)", span="120-120"];
m4_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="_runMode = RunMode.Series", span="123-123"];
m4_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="_locked = false", span="126-126"];
m4_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="129-129"];
m4_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="132-132"];
m4_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="UniverseManager = new UniverseManager()", span="135-135"];
m4_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Universe = new UniverseDefinitions(this)", span="136-136"];
m4_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="137-137"];
m4_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Schedule = new ScheduleManager(Securities, TimeZone)", span="140-140"];
m4_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="143-143"];
m4_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="145-146"];
m4_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="CandlestickPatterns = new CandlestickPatterns(this)", span="148-148"];
m4_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="151-151"];
m4_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="OptionChainProvider = new EmptyOptionChainProvider()", span="153-153"];
m4_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m4_427 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m4_29 [cluster="object.GetType()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry object.GetType()", span="0-0"];
m4_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m4_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="EqualWeightingPortfolioConstructionModel.cs", label="return _locked;", span="1224-1224"];
m4_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m4_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m4_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="DateTimeZone tz", span="834-834"];
m4_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="837-837"];
m4_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="841-841"];
m4_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs", label=DateTimeZoneNotFoundException, span="839-839"];
m4_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetTimeZone(tz)", span="844-844"];
m4_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m4_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m4_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m4_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="return AddSecurity<Crypto>(SecurityType.Crypto, ticker, resolution, market, fillDataForward, leverage, false);", span="1526-1526"];
m4_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m4_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m4_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="EqualWeightingPortfolioConstructionModel.cs", label=availableDataTypes, span="558-558"];
m4_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="EqualWeightingPortfolioConstructionModel.cs", label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="560-560"];
m4_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m4_212 [cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48"];
m4_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var security = SecurityManager.CreateSecurity(typeof(T), Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1621-1622"];
m4_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m4_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1614-1614"];
m4_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1617-1617"];
m4_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1618-1618"];
m4_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="AddToUserDefinedUniverse(security)", span="1624-1624"];
m4_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m4_533 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m4_534 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="return SymbolCache.GetSymbol(ticker);", span="1712-1712"];
m4_535 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m4_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m4_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetCash((decimal)startingCash)", span="1011-1011"];
m4_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m4_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m4_199 [cluster="string.Format(string, object)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_536 [cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47"];
m4_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m4_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="var end = new DateTime(year, month, day)", span="1100-1100"];
m4_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1103-1103"];
m4_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetEndDate(end)", span="1105-1105"];
m4_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label=Exception, span="1107-1107"];
m4_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1109-1109"];
m4_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m4_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m4_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m4_476 [cluster="Unk.Any", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.Any", span=""];
m4_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m4_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="BrokerageModel = model", span="897-897"];
m4_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="901-901"];
m4_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_userSetSecurityInitializer", span="898-898"];
m4_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="Securities.Values", span="904-904"];
m4_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="var leverage = security.Leverage", span="909-909"];
m4_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="SecurityInitializer.Initialize(security, false)", span="912-912"];
m4_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="security.SetLeverage(leverage)", span="915-915"];
m4_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m4_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m4_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetCash((decimal)startingCash)", span="1022-1022"];
m4_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m4_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m4_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label=_liveMode, span="1178-1178"];
m4_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="1182-1182"];
m4_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="end < _startDate", span="1190-1190"];
m4_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1197-1197"];
m4_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="return;", span="1178-1178"];
m4_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="1184-1184"];
m4_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="_startDate != new DateTime()", span="1188-1188"];
m4_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="1192-1192"];
m4_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_locked", span="1200-1200"];
m4_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="_endDate = end", span="1202-1202"];
m4_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1206-1206"];
m4_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m4_475 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m4_233 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m4_272 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m4_37 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m4_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m4_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="EqualWeightingPortfolioConstructionModel.cs", label="TradeBuilder = tradeBuilder", span="1251-1251"];
m4_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="EqualWeightingPortfolioConstructionModel.cs", label="TradeBuilder.SetLiveMode(LiveMode)", span="1252-1252"];
m4_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m4_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m4_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m4_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m4_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Debug(''Quit(): '' + message)", span="1685-1685"];
m4_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Status = AlgorithmStatus.Stopped", span="1686-1686"];
m4_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m4_39 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m4_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m4_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Security security", span="1536-1536"];
m4_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Securities.TryGetValue(symbol, out security)", span="1537-1537"];
m4_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1548-1548"];
m4_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="var ret = universe.Remove(symbol)", span="1551-1551"];
m4_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="symbol == _benchmarkSymbol", span="1554-1554"];
m4_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Securities.Remove(symbol)", span="1556-1556"];
m4_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Transactions.CancelOpenOrders(security.Symbol)", span="1540-1540"];
m4_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="return false;", span="1567-1567"];
m4_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="security.Cache.Reset()", span="1543-1543"];
m4_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="security.Invested", span="1546-1546"];
m4_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Liquidate(security.Symbol)", span="1546-1546"];
m4_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="universe != null", span="1549-1549"];
m4_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1562-1562"];
m4_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="return ret;", span="1564-1564"];
m4_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="security = CreateBenchmarkSecurity()", span="1558-1558"];
m4_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="AddToUserDefinedUniverse(security)", span="1559-1559"];
m4_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m4_404 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m4_85 [cluster="Unk.AddEquity", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.AddEquity", span=""];
m4_141 [cluster="Unk.Where", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.Where", span=""];
m4_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m4_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m4_295 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m4_42 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m4_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m4_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="string value", span="530-530"];
m4_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="return _parameters.TryGetValue(name, out value) ? value : null;", span="531-531"];
m4_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m4_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m4_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_locked", span="1050-1050"];
m4_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1052-1052"];
m4_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1056-1056"];
m4_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m4_47 [cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51"];
m4_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m4_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs", label="mode != RunMode.Parallel", span="875-875"];
m4_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs", label="return;", span="875-875"];
m4_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="876-876"];
m4_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m4_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m4_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="EqualWeightingPortfolioConstructionModel.cs", label="OptionChainProvider = optionChainProvider", span="599-599"];
m4_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m4_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m4_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="EqualWeightingPortfolioConstructionModel.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1584-1584"];
m4_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m4_345 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30"];
m4_484 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="1562-1562"];
m4_87 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="499-499"];
m4_88 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="x.Value", span="499-499"];
m4_89 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="499-499"];
m4_120 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="securityInitializer(security)", span="590-590"];
m4_119 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="590-590"];
m4_121 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="590-590"];
m4_148 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="624-624"];
m4_151 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="625-625"];
m4_154 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="626-626"];
m4_158 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="627-627"];
m4_149 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="x.Name == ''OnData''", span="624-624"];
m4_150 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="624-624"];
m4_152 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="x.DeclaringType != typeof(QCAlgorithm)", span="625-625"];
m4_153 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="625-625"];
m4_155 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="x.GetParameters().Length == 1", span="626-626"];
m4_156 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="626-626"];
m4_159 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="627-627"];
m4_160 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="627-627"];
m4_252 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="x.Key.Value == symbol", span="967-967"];
m4_251 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="967-967"];
m4_253 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="967-967"];
m4_478 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="x.Members.ContainsKey(symbol)", span="1548-1548"];
m4_477 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="1548-1548"];
m4_481 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry lambda expression", span="1562-1562"];
m4_479 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="1548-1548"];
m4_482 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1562-1562"];
m4_483 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="1562-1562"];
m4_485 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="y.IsCustomData", span="1562-1562"];
m4_486 [cluster="lambda expression", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit lambda expression", span="1562-1562"];
m4_145 [cluster="Unk.Call", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.Call", span=""];
m4_190 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m4_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m4_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m4_30 [cluster="System.DateTime.DateTime(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m4_115 [cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31"];
m4_403 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m4_473 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m4_555 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m4_556 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs", label="historyProvider == null", span="1773-1773"];
m4_558 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs", label="HistoryProvider = historyProvider", span="1777-1777"];
m4_557 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1775-1775"];
m4_559 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m4_222 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m4_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m4_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="string market = Market.USA", span="948-948"];
m4_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="this.BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="950-950"];
m4_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="952-952"];
m4_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m4_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m4_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="symbol = symbol.ToUpper()", span="966-966"];
m4_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="967-967"];
m4_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="_benchmarkSymbol = security == null\r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="968-970"];
m4_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m4_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m4_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1635-1635"];
m4_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="_debugMessages.Enqueue(message)", span="1636-1636"];
m4_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="_previousDebugMessage = message", span="1637-1637"];
m4_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="return;", span="1635-1635"];
m4_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m4_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m4_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="_timeKeeper.SetUtcDateTime(frontier)", span="825-825"];
m4_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m4_377 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="488-488"];
m4_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m4_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_liveMode && message == ''''", span="1648-1648"];
m4_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="_logMessages.Enqueue(message)", span="1649-1649"];
m4_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="return;", span="1648-1648"];
m4_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m4_52 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m4_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m4_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m4_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m4_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Benchmark = new FuncBenchmark(benchmark)", span="989-989"];
m4_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m4_316 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m4_51 [cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34"];
m4_406 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49"];
m4_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m4_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="_benchmarkSymbol = symbol", span="979-979"];
m4_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m4_314 [cluster="System.DateTime.DateTime()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m4_82 [cluster="Unk.Select", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.Select", span=""];
m4_31 [cluster="System.DateTime.AddDays(double)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m4_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m4_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="581-581"];
m4_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m4_471 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182"];
m4_102 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59"];
m4_94 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m4_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m4_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m4_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m4_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m4_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m4_41 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m4_57 [cluster="System.NotImplementedException.NotImplementedException(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m4_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m4_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1660-1660"];
m4_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="_errorMessages.Enqueue(message)", span="1661-1661"];
m4_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="_previousErrorMessage = message", span="1662-1662"];
m4_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="return;", span="1660-1660"];
m4_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m4_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m4_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m4_84 [cluster="Unk.TryGetValue", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.TryGetValue", span=""];
m4_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m4_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="_algorithmId = algorithmId", span="1120-1120"];
m4_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m4_174 [cluster="QuantConnect.Symbol.ToString()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m4_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m4_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1280-1280"];
m4_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m4_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m4_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="EqualWeightingPortfolioConstructionModel.cs", label="Status = status", span="1800-1800"];
m4_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m4_278 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m4_49 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47"];
m4_209 [cluster="System.Exception.Exception(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_34 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m4_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m4_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1347-1347"];
m4_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m4_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m4_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="var start = new DateTime(year, month, day)", span="1075-1075"];
m4_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="start = start.Date", span="1078-1078"];
m4_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetStartDate(start)", span="1080-1080"];
m4_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label=Exception, span="1082-1082"];
m4_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1084-1084"];
m4_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m4_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m4_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Benchmark == null", span="475-475"];
m4_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="478-478"];
m4_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Securities.Select(x => x.Value).OfType<Option>()", span="499-499"];
m4_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="480-480"];
m4_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Security security", span="486-486"];
m4_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="487-487"];
m4_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="security = CreateBenchmarkSecurity()", span="490-490"];
m4_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Benchmark = new SecurityBenchmark(security)", span="495-495"];
m4_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="AddToUserDefinedUniverse(security)", span="491-491"];
m4_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="var underlying = option.Symbol.Underlying", span="501-501"];
m4_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="506-506"];
m4_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="option.Underlying = equity", span="510-510"];
m4_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Security equity", span="502-502"];
m4_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="!Securities.TryGetValue(underlying, out equity)", span="503-503"];
m4_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="equity.VolatilityModel == VolatilityModel.Null", span="513-513"];
m4_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="516-516"];
m4_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="int periods = 30", span="515-515"];
m4_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m4_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m4_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1470-1471"];
m4_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var underlying = option.Symbol.Underlying", span="1474-1474"];
m4_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="1478-1478"];
m4_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="option.Underlying = equity", span="1480-1480"];
m4_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="AddToUserDefinedUniverse(option)", span="1482-1482"];
m4_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="return option;", span="1484-1484"];
m4_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Security equity", span="1475-1475"];
m4_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!Securities.TryGetValue(underlying, out equity)", span="1476-1476"];
m4_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m4_198 [cluster="System.ArgumentException.ArgumentException(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_53 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", span="25-25"];
m4_147 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m4_157 [cluster="Unk.GetParameters", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.GetParameters", span=""];
m4_86 [cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="68-68"];
m4_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m4_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="OnEndOfDay(symbol.ToString())", span="763-763"];
m4_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m4_46 [cluster="System.TimeSpan.FromDays(double)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m4_142 [cluster="Unk.FirstOrDefault", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.FirstOrDefault", span=""];
m4_407 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m4_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m4_547 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs", label="Resolution resolution", span="1747-1747"];
m4_548 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs", label=_liveMode, span="1748-1748"];
m4_549 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs", label="resolution = Resolution.Second", span="1750-1750"];
m4_550 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs", label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1755-1760"];
m4_551 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs", label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1762-1762"];
m4_552 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs", label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1764-1764"];
m4_553 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m4_81 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m4_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m4_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_locked", span="1232-1232"];
m4_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="_liveMode = live", span="1234-1234"];
m4_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Notify = new NotificationManager(live)", span="1235-1235"];
m4_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="TradeBuilder.SetLiveMode(live)", span="1236-1236"];
m4_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label=live, span="1238-1238"];
m4_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="_startDate = DateTime.Today", span="1240-1240"];
m4_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="_endDate = QuantConnect.Time.EndOfTime", span="1241-1241"];
m4_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m4_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m4_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs", label="_parameters = parameters.ToDictionary()", span="541-541"];
m4_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs", label="ParameterAttribute.ApplyAttributes(parameters, this)", span="544-544"];
m4_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs", label=Exception, span="546-546"];
m4_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Error(''Error applying parameter values: '' + err.Message)", span="548-548"];
m4_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m4_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m4_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="887-887"];
m4_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m4_294 [cluster="System.TimeSpan.FromTicks(long)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m4_144 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m4_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m4_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new NotImplementedException(''Please override the Initialize() method'');", span="465-465"];
m4_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m4_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m4_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="market == null", span="1721-1721"];
m4_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1723-1723"];
m4_539 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1725-1725"];
m4_541 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1730-1730"];
m4_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1732-1732"];
m4_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1735-1736"];
m4_540 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Symbol symbol", span="1729-1729"];
m4_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="AddToUserDefinedUniverse(security)", span="1737-1737"];
m4_545 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="return (T)security;", span="1738-1738"];
m4_546 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m4_146 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m4_500 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m4_402 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m4_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m4_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs", label="_userSetSecurityInitializer = true", span="571-571"];
m4_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs", label="SecurityInitializer = securityInitializer", span="572-572"];
m4_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m4_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m4_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_locked", span="1032-1032"];
m4_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Portfolio.SetCash(startingCash)", span="1034-1034"];
m4_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1038-1038"];
m4_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m4_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m4_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1265-1265"];
m4_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m4_501 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m4_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m4_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m4_43 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m4_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m4_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_checkedForOnDataSlice", span="619-619"];
m4_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="_onDataSlice(slice)", span="643-643"];
m4_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="_checkedForOnDataSlice = true", span="621-621"];
m4_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="_onDataSlice != null", span="641-641"];
m4_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="623-627"];
m4_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="method == null", span="629-629"];
m4_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="var call = Expression.Call(self, method, parameter)", span="636-636"];
m4_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="return;", span="631-631"];
m4_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="var self = Expression.Constant(this)", span="634-634"];
m4_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="635-635"];
m4_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="637-637"];
m4_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="_onDataSlice = lambda.Compile()", span="638-638"];
m4_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m4_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1378-1380"];
m4_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m4_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="market == null", span="1361-1361"];
m4_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var alias = ''?'' + underlying", span="1370-1370"];
m4_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1373-1373"];
m4_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1376-1376"];
m4_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1377-1377"];
m4_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1388-1388"];
m4_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1363-1363"];
m4_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Symbol canonicalSymbol", span="1369-1369"];
m4_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1365-1365"];
m4_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1371-1371"];
m4_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1386-1386"];
m4_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1390-1390"];
m4_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="canonicalSecurity.IsTradable = false", span="1381-1381"];
m4_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Securities.Add(canonicalSecurity)", span="1382-1382"];
m4_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1389-1389"];
m4_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="return canonicalSecurity;", span="1393-1393"];
m4_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Universe universe", span="1385-1385"];
m4_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m4_405 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m4_480 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_244 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_560 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m4_561 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="exception == null", span="1786-1786"];
m4_563 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="RunTimeError = exception", span="1791-1791"];
m4_562 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1788-1788"];
m4_564 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m4_101 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m4_376 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m4_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m4_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1452-1453"];
m4_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="AddToUserDefinedUniverse(future)", span="1455-1455"];
m4_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="return future;", span="1457-1457"];
m4_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m4_232 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m4_44 [cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45"];
m4_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1424-1426"];
m4_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m4_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="market == null", span="1407-1407"];
m4_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var alias = ''/'' + symbol", span="1416-1416"];
m4_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1419-1419"];
m4_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1422-1422"];
m4_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1423-1423"];
m4_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1434-1434"];
m4_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1409-1409"];
m4_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Symbol canonicalSymbol", span="1415-1415"];
m4_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1411-1411"];
m4_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1417-1417"];
m4_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1432-1432"];
m4_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1436-1436"];
m4_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="canonicalSecurity.IsTradable = false", span="1427-1427"];
m4_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Securities.Add(canonicalSecurity)", span="1428-1428"];
m4_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1435-1435"];
m4_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="return canonicalSecurity;", span="1439-1439"];
m4_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Universe universe", span="1431-1431"];
m4_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m4_48 [cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61"];
m4_50 [cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33"];
m4_45 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m4_260 [cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30"];
m4_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m4_329 [cluster="System.DateTime.AddTicks(long)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m4_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m4_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="securityType == SecurityType.Option", span="1296-1296"];
m4_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1298-1298"];
m4_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="securityType == SecurityType.Future", span="1301-1301"];
m4_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1303-1303"];
m4_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="market == null", span="1308-1308"];
m4_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1310-1310"];
m4_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1312-1312"];
m4_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1317-1317"];
m4_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1319-1319"];
m4_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1322-1323"];
m4_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Symbol symbolObject", span="1316-1316"];
m4_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="AddToUserDefinedUniverse(security)", span="1325-1325"];
m4_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="return security;", span="1326-1326"];
m4_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label=Exception, span="1328-1328"];
m4_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Error(''Algorithm.AddSecurity(): '' + err)", span="1330-1330"];
m4_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="return null;", span="1331-1331"];
m4_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m4_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m4_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m4_36 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m4_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m4_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1599-1599"];
m4_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m4_210 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_315 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m4_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m4_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1498-1498"];
m4_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m4_77 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m4_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m4_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label=quit, span="1697-1697"];
m4_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Status = AlgorithmStatus.Stopped", span="1699-1699"];
m4_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m4_83 [cluster="Unk.>", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.>", span=""];
m4_33 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m4_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m4_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1512-1512"];
m4_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m4_250 [cluster="string.ToUpper()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry string.ToUpper()", span="0-0"];
m4_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m4_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="590-590"];
m4_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m4_35 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m4_32 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m4_78 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m4_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m4_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs", label="handler == null", span="929-929"];
m4_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs", label="BrokerageMessageHandler = handler", span="934-934"];
m4_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new ArgumentNullException(''handler'');", span="931-931"];
m4_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m4_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m4_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label=_liveMode, span="1132-1132"];
m4_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="start < (new DateTime(1900, 01, 01))", span="1136-1136"];
m4_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="start > _endDate", span="1144-1144"];
m4_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1151-1151"];
m4_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="return;", span="1132-1132"];
m4_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1138-1138"];
m4_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="_endDate != new DateTime()", span="1142-1142"];
m4_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Please select start date less than end date.'');", span="1146-1146"];
m4_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_locked", span="1154-1154"];
m4_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="_startDate = start", span="1159-1159"];
m4_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="!LiveMode", span="1157-1157"];
m4_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1165-1165"];
m4_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1160-1160"];
m4_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m4_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m4_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m4_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="var message = error.Message", span="1673-1673"];
m4_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1674-1674"];
m4_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="_errorMessages.Enqueue(message)", span="1675-1675"];
m4_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="_previousErrorMessage = message", span="1676-1676"];
m4_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="return;", span="1674-1674"];
m4_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m4_122 [cluster="System.Action<T>.Invoke(T)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m4_507 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m4_143 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m4_40 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41"];
m4_470 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m4_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m4_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="EqualWeightingPortfolioConstructionModel.cs", label="_locked = true", span="1216-1216"];
m4_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="EqualWeightingPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m4_474 [cluster="Unk.Remove", file="EqualWeightingPortfolioConstructionModel.cs", label="Entry Unk.Remove", span=""];
m4_568 [file="EqualWeightingPortfolioConstructionModel.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m4_569 [file="EqualWeightingPortfolioConstructionModel.cs", label="System.Action<QuantConnect.Securities.Security>", span=""];
m4_570 [file="EqualWeightingPortfolioConstructionModel.cs", label=string, span=""];
m4_571 [file="EqualWeightingPortfolioConstructionModel.cs", label="QuantConnect.Symbol", span=""];
m7_9 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs", label="!complete", span="133-133"];
m7_52 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m7_11 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs", label="return algorithm;", span="135-135"];
m7_12 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", span="125-125"];
m7_61 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="algorithm.SetLiveMode(false)", span="177-177"];
m7_3 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs", label="_n = n", span="47-47"];
m7_50 [cluster="object.GetType()", file="FractalAdaptiveMovingAverage.cs", label="Entry object.GetType()", span="0-0"];
m7_69 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="416-416"];
m7_10 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs", label="throw new Exception(error + '' Try re-building algorithm.'');", span="133-133"];
m7_17 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", label="_high.Samples <= _high.Size", span="75-75"];
m7_67 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err.Message)", span="189-189"];
m7_60 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", span="134-134"];
m7_66 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label=Exception, span="187-187"];
m7_68 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="Exit lambda expression", span="172-191"];
m7_62 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="121-121"];
m7_63 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="QuantConnect.Indicators.FractalAdaptiveMovingAverage", span=""];
m7_64 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="algorithm.Initialize()", span="183-183"];
m7_65 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager)", span="185-185"];
m7_44 [cluster="QuantConnect.Indicators.RollingWindow<T>.Add(T)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Indicators.RollingWindow<T>.Add(T)", span="247-247"];
m7_45 [cluster="System.Collections.Generic.IEnumerable<double>.Max()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Collections.Generic.IEnumerable<double>.Max()", span="0-0"];
m7_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m7_43 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", span="68-68"];
m7_46 [cluster="System.Collections.Generic.IEnumerable<double>.Min()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Collections.Generic.IEnumerable<double>.Min()", span="0-0"];
m7_48 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m7_53 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="41-41"];
m7_55 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="156-156"];
m7_59 [cluster="decimal.ToString(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry decimal.ToString(string)", span="0-0"];
m7_7 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40"];
m7_6 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs", label="_low = new RollingWindow<double>(n)", span="50-50"];
m7_8 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs", label="bool complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="132-132"];
m7_5 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs", label="_high = new RollingWindow<double>(n)", span="49-49"];
m7_16 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", label="_low.Add((double)input.Low)", span="72-72"];
m7_72 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="212-212"];
m7_15 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.ComputeNextValue(QuantConnect.Data.Market.IBaseDataBar)", file="FractalAdaptiveMovingAverage.cs", label="_high.Add((double)input.High)", span="71-71"];
m7_0 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40"];
m7_1 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", color=green, community=0, file="FractalAdaptiveMovingAverage.cs", label="n % 2 > 0", prediction=6, span="43-43"];
m7_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="287-287"];
m7_49 [cluster="System.Math.Log(double)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Math.Log(double)", span="0-0"];
m7_13 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="83-83"];
m7_73 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="85-85"];
m7_86 [cluster="System.Math.Round(double)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Math.Round(double)", span="0-0"];
m7_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="431-431"];
m7_84 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="return TimeSpan.FromSeconds(maxRunTime);", span="264-264"];
m7_74 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="double maxRunTime = 0", span="239-239"];
m7_75 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="var jobDays = (finish - start).TotalDays", span="240-240"];
m7_76 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="maxRunTime = 10 * subscriptionCount * jobDays", span="242-242"];
m7_81 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="256-256"];
m7_78 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="maxRunTime = 3600 * 12", span="248-248"];
m7_80 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="maxRunTime = 60", span="253-253"];
m7_82 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="OS.IsWindows", span="259-259"];
m7_83 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="maxRunTime = 24 * 60 * 60", span="261-261"];
m7_77 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="(maxRunTime / 3600) > 12", span="245-245"];
m7_79 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="maxRunTime < 60", span="250-250"];
m7_85 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", span="237-237"];
m7_92 [file="FractalAdaptiveMovingAverage.cs", label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", span=""];
m7_93 [file="FractalAdaptiveMovingAverage.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m7_94 [file="FractalAdaptiveMovingAverage.cs", label=job, span=""];
m8_11 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", span="40-40"];
m8_17 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="370-370"];
m8_26 [cluster="lambda expression", file="FractalAdaptiveMovingAverageTests.cs", label="Entry lambda expression", span="54-54"];
m8_27 [cluster="lambda expression", file="FractalAdaptiveMovingAverageTests.cs", label="AssertResult(expected, actual.Current.Value)", span="54-54"];
m8_28 [cluster="lambda expression", file="FractalAdaptiveMovingAverageTests.cs", label="Exit lambda expression", span="54-54"];
m8_25 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, double>)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, double>)", span="170-170"];
m8_32 [cluster="System.Math.Abs(decimal)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m8_22 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", span="52-52"];
m8_23 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="FractalAdaptiveMovingAverageTests.cs", label="TestHelper.TestIndicator(indicator, ''frama.txt'', ''Filt'', (actual, expected) => {AssertResult(expected, actual.Current.Value);})", span="54-54"];
m8_24 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.RunTestIndicator(QuantConnect.Indicators.BarIndicator)", span="52-52"];
m8_0 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", span="27-27"];
m8_2 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="TestHelper.GetDataStream(7)", span="32-32"];
m8_3 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="frama.Update(new TradeBar { High = data, Low = data })", span="34-34"];
m8_4 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="Assert.IsTrue(frama.IsReady)", span="36-36"];
m8_5 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="Assert.AreNotEqual(0m, frama.Current.Value)", span="37-37"];
m8_6 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="Assert.AreNotEqual(0, frama.Samples)", span="38-38"];
m8_7 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="frama.Reset()", span="40-40"];
m8_8 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="TestHelper.AssertIndicatorIsInDefaultState(frama)", span="42-42"];
m8_9 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ResetsProperly()", span="27-27"];
m8_15 [cluster="Unk.AreNotEqual", file="FractalAdaptiveMovingAverageTests.cs", label="Entry Unk.AreNotEqual", span=""];
m8_13 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m8_29 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", span="57-57"];
m8_30 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="FractalAdaptiveMovingAverageTests.cs", label="Assert.IsTrue(Math.Abs((decimal)expected - actual) < 0.006m)", span="59-59"];
m8_31 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.AssertResult(double, decimal)", span="57-57"];
m8_14 [cluster="Unk.IsTrue", file="FractalAdaptiveMovingAverageTests.cs", label="Entry Unk.IsTrue", span=""];
m8_12 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m8_16 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.Reset()", span="134-134"];
m8_18 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", span="46-46"];
m8_20 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="FractalAdaptiveMovingAverageTests.cs", label="RunTestIndicator(indicator)", span="49-49"];
m8_21 [cluster="QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Tests.Indicators.FractalAdaptiveMovingAverageTests.ComparesAgainstExternalData()", span="46-46"];
m8_10 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40"];
m9_0 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="IExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="32-32"];
m9_1 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="IExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="32-32"];
m10_13 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m10_14 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m10_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m10_7 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="269-269"];
m10_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0"];
m10_0 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="33-33"];
m10_1 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label=targets, span="35-35"];
m10_2 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="var existing = algorithm.Securities[target.Symbol].Holdings.Quantity\r\n                    + algorithm.Transactions.GetOpenOrders(target.Symbol).Sum(o => o.Quantity)", span="37-38"];
m10_5 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="algorithm.MarketOrder(target.Symbol, quantity)", span="42-42"];
m10_3 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="var quantity = target.Quantity - existing", span="39-39"];
m10_4 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="quantity != 0", span="40-40"];
m10_6 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="33-33"];
m10_10 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Entry lambda expression", span="38-38"];
m10_11 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="o.Quantity", span="38-38"];
m10_12 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Exit lambda expression", span="38-38"];
m11_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="serializedInsight.ScoreIsFinal", span="207-207"];
m11_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Magnitude, serializedInsight.ScoreMagnitude, insight.CloseTimeUtc)", span="209-209"];
m11_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Direction, serializedInsight.ScoreDirection, insight.CloseTimeUtc)", span="210-210"];
m11_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="!thisChart.Series.ContainsKey(series)", span="166-166"];
m11_54 [cluster="QuantConnect.Chart.Chart(string)", file="Insight.cs", label="QuantConnect.Algorithm.Framework.Alphas.Insight", span=""];
m11_67 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Insight.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m11_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="156-156"];
m11_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", color=green, community=0, file="Insight.cs", label="return new Insight(Symbol, Type, Direction, Period, Magnitude, Confidence)\r\n            {\r\n                GeneratedTimeUtc = GeneratedTimeUtc,\r\n                CloseTimeUtc = CloseTimeUtc,\r\n                Score = Score,\r\n                Id = Id,\r\n                EstimatedValue = EstimatedValue,\r\n                ReferenceValue = ReferenceValue\r\n            };", prediction=7, span="158-166"];
m11_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="156-156"];
m11_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs", label="Score = new InsightScore()", span="121-121"];
m11_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="145-145"];
m11_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs", label="GeneratedTimeUtc = generatedTimeUtc", span="148-148"];
m11_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs", label="CloseTimeUtc = generatedTimeUtc + period", span="149-149"];
m11_25 [cluster="System.Math.Sign(double)", file="Insight.cs", label="Entry System.Math.Sign(double)", span="0-0"];
m11_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", color=green, community=0, file="Insight.cs", label="var insight = new Insight(\r\n                Time.UnixTimeStampToDateTime(serializedInsight.GeneratedTime),\r\n                new Symbol(SecurityIdentifier.Parse(serializedInsight.Symbol), serializedInsight.Ticker),\r\n                serializedInsight.Type,\r\n                serializedInsight.Direction,\r\n                TimeSpan.FromSeconds(serializedInsight.Period),\r\n                serializedInsight.Magnitude,\r\n                serializedInsight.Confidence\r\n            )\r\n            {\r\n                Id = Guid.Parse(serializedInsight.Id),\r\n                CloseTimeUtc = Time.UnixTimeStampToDateTime(serializedInsight.CloseTime),\r\n                EstimatedValue = serializedInsight.EstimatedValue,\r\n                ReferenceValue = serializedInsight.ReferenceValue\r\n            }", prediction=8, span="190-204"];
m11_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="230-230"];
m11_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label=indicators, span="233-233"];
m11_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="i.Updated += (sender, args) =>\r\n                {\r\n                    Plot(chart, ilocal);\r\n                }", span="239-242"];
m11_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="i == null", span="235-235"];
m11_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="var ilocal = i", span="238-238"];
m11_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="230-230"];
m11_103 [cluster="int.ToString()", file="Insight.cs", label="Entry int.ToString()", span="0-0"];
m11_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="var seriesCount = (from x in _charts.Values select x.Series.Count).Sum()", span="169-169"];
m11_57 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="Insight.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
m11_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.Finalize(insight.CloseTimeUtc)", span="211-211"];
m11_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="serializedInsight.ScoreMagnitude != 0", span="215-215"];
m11_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Magnitude, serializedInsight.ScoreMagnitude, insight.CloseTimeUtc)", span="217-217"];
m11_68 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="Insight.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", span="228-228"];
m11_59 [cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="Insight.cs", label="Entry QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", span="282-282"];
m11_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m11_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="104-104"];
m11_119 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="317-317"];
m11_80 [cluster="lambda expression", file="Insight.cs", label="Plot(chart, ilocal)", span="241-241"];
m11_79 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="239-242"];
m11_81 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="239-242"];
m11_89 [cluster="lambda expression", file="Insight.cs", label="!waitForReady || ilocal.IsReady", span="260-260"];
m11_90 [cluster="lambda expression", file="Insight.cs", label="Plot(chart, ilocal)", span="262-262"];
m11_88 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="258-264"];
m11_91 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="258-264"];
m11_120 [cluster="lambda expression", file="Insight.cs", label="chart.GetUpdates()", span="317-317"];
m11_121 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="317-317"];
m11_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs", label="Confidence = confidence", span="130-130"];
m11_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="118-118"];
m11_12 [cluster="System.Guid.NewGuid()", file="Insight.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m11_122 [cluster="QuantConnect.Chart.GetUpdates()", file="Insight.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
m11_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="throw new Exception(''Algorithm.Plot(): 'Equity', 'Daily Performance' and 'Meta' are reserved chart names created for all charts.'');", span="156-156"];
m11_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="145-145"];
m11_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", span="177-177"];
m11_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", file="Insight.cs", label="var direction = (InsightDirection) Math.Sign(magnitude)", span="179-179"];
m11_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="Insight.cs", label="Symbol = symbol", span="123-123"];
m11_53 [cluster="System.Math.Round(double, int)", file="Insight.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m11_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="seriesCount > 10", span="171-171"];
m11_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="serializedInsight.ScoreDirection != 0", span="220-220"];
m11_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="return insight;", span="226-226"];
m11_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", span="284-284"];
m11_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="Insight.cs", label="SetRuntimeStatistic(name, value.ToString(CultureInfo.InvariantCulture))", span="286-286"];
m11_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", span="284-284"];
m11_117 [cluster="Unk.ToList", file="Insight.cs", label="Entry Unk.ToList", span=""];
m11_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", span="201-201"];
m11_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs", label="Chart c", span="203-203"];
m11_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs", label="!_charts.TryGetValue(chart, out c)", span="204-204"];
m11_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs", label="_charts[chart] = c = new Chart(chart)", span="206-206"];
m11_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs", label="c.Series[series] = new Series(series, seriesType, unit)", span="209-209"];
m11_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSeries(string, string, QuantConnect.SeriesType, string)", span="201-201"];
m11_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m11_99 [cluster="decimal.ToString(System.IFormatProvider)", file="Insight.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m11_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="218-218"];
m11_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label=indicators, span="221-221"];
m11_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="Plot(chart, indicator.Name, indicator)", span="223-223"];
m11_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="218-218"];
m11_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="Error(''Exceeded maximum series count: Each backtest can have up to 10 series in total.'')", span="173-173"];
m11_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="return;", span="174-174"];
m11_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="thisChart.AddSeries(new Series(series, SeriesType.Line, 0, ''$''))", span="178-178"];
m11_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="var thisSeries = thisChart.Series[series]", span="181-181"];
m11_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="thisSeries.Values.Count < 4000 || _liveMode", span="182-182"];
m11_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="thisSeries.AddPoint(UtcTime, value, _liveMode)", span="184-184"];
m11_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="Debug(''Exceeded maximum points per chart, data skipped.'')", span="188-188"];
m11_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m11_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="(chart == ''Strategy Equity'' && series == ''Equity'') || (chart == ''Daily Performance'') || (chart == ''Meta'')", span="154-154"];
m11_95 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="Insight.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m11_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", color=green, community=0, file="Insight.cs", label="Plot(series, (decimal)value)", prediction=9, span="106-106"];
m11_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="104-104"];
m11_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="_charts.Add(chart, new Chart(chart))", span="162-162"];
m11_55 [cluster="Unk.Sum", file="Insight.cs", label="Entry Unk.Sum", span=""];
m11_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="315-315"];
m11_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs", label="var updates = _charts.Values.Select(chart => chart.GetUpdates()).ToList()", span="317-317"];
m11_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs", label=clearChartData, span="319-319"];
m11_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs", label="return updates;", span="330-330"];
m11_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs", label=_charts, span="322-322"];
m11_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs", label="chart.Value.Series", span="324-324"];
m11_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs", label="series.Value.Purge()", span="326-326"];
m11_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="315-315"];
m11_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", span="294-294"];
m11_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="Insight.cs", label="SetRuntimeStatistic(name, value.ToString())", span="296-296"];
m11_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", span="294-294"];
m11_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="Insight.cs", label="_charts.Add(chart.Name, chart)", span="44-44"];
m11_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40"];
m11_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="54-54"];
m11_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="Insight.cs", label="Plot(''Strategy Equity'', series, value)", span="57-57"];
m11_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="54-54"];
m11_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m11_58 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="Insight.cs", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
m11_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="Insight.cs", label="!_charts.ContainsKey(chart)", span="160-160"];
m11_41 [cluster="System.TimeSpan.FromSeconds(double)", file="Insight.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="249-249"];
m11_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label=indicators, span="252-252"];
m11_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="i.Updated += (sender, args) =>\r\n                {\r\n                    if (!waitForReady || ilocal.IsReady)\r\n                    {\r\n                        Plot(chart, ilocal);\r\n                    }\r\n                }", span="258-264"];
m11_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="i == null", span="254-254"];
m11_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="var ilocal = i", span="257-257"];
m11_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="249-249"];
m11_107 [cluster="double.ToString(System.IFormatProvider)", file="Insight.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m11_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", span="304-304"];
m11_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="Insight.cs", label="SetRuntimeStatistic(name, value.ToString(CultureInfo.InvariantCulture))", span="306-306"];
m11_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", span="304-304"];
m11_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40"];
m11_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="Insight.cs", label="!_charts.ContainsKey(chart.Name)", span="42-42"];
m11_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="Insight.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", span="274-274"];
m11_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="Insight.cs", label="RuntimeStatistics.AddOrUpdate(name, value)", span="276-276"];
m11_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="Insight.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", span="274-274"];
m11_118 [cluster="QuantConnect.Series.Purge()", file="Insight.cs", label="Entry QuantConnect.Series.Purge()", span="333-333"];
m11_123 [file="Insight.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m11_124 [file="Insight.cs", label=string, span=""];
m11_125 [file="Insight.cs", label=ilocal, span=""];
m11_126 [file="Insight.cs", label=bool, span=""];
m11_127 [file="Insight.cs", label=ilocal, span=""];
m11_128 [file="Insight.cs", label=string, span=""];
m13_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="IPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31"];
m13_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="IPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31"];
m16_184 [cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40"];
m16_322 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="463-463"];
m16_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1366-1366"];
m16_193 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74"];
m16_221 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m16_291 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="787-787"];
m16_292 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="787-787"];
m16_36 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs", label="Thread.Sleep(50)", span="237-237"];
m16_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="var insightPeriod = _resolution.ToTimeSpan().Multiply(_fastPeriod)", span="96-96"];
m16_138 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", span="29-29"];
m16_213 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="583-583"];
m16_214 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs", label="message == _errorMessage", span="585-585"];
m16_218 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs", label="Messages.Enqueue(new HandledErrorPacket(_backtestId, message, stacktrace))", span="587-587"];
m16_219 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs", label="_errorMessage = message", span="588-588"];
m16_215 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs", label="return;", span="585-585"];
m16_216 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs", label="Messages.Count > 500", span="586-586"];
m16_217 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs", label="return;", span="586-586"];
m16_220 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="583-583"];
m16_46 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="220-220"];
m16_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="direction = InsightDirection.Down", span="87-87"];
m16_186 [cluster="System.Console.SetError(System.IO.TextWriter)", file="MacdAlphaModel.cs", label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0"];
m16_187 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="524-524"];
m16_188 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _backtestId, _compileId, message))", span="526-526"];
m16_190 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="531-531"];
m16_191 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs", label="_debugMessage = message", span="533-533"];
m16_189 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs", label="_algorithm != null", span="529-529"];
m16_192 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="524-524"];
m16_280 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="746-746"];
m16_281 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="746-746"];
m16_104 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="396-396"];
m16_127 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label=_chartLock, span="400-400"];
m16_128 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="packet.Type != PacketType.BacktestResult", span="403-403"];
m16_130 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="var result = packet as BacktestResultPacket", span="406-406"];
m16_129 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="return;", span="403-403"];
m16_131 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="result != null", span="408-408"];
m16_133 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="SaveResults(key, result.Results)", span="414-414"];
m16_132 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="var key = _job.BacktestId + ''.json''", span="411-411"];
m16_134 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="Log.Error(''BacktestingResultHandler.StoreResult(): Result Null.'')", span="418-418"];
m16_135 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label=Exception, span="422-422"];
m16_136 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="Log.Error(err)", span="424-424"];
m16_137 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="396-396"];
m16_266 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="MacdAlphaModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m16_105 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", span="366-366"];
m16_112 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="var splitPackets = new List<BacktestResultPacket>()", span="369-369"];
m16_113 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="deltaCharts.Values", span="370-370"];
m16_115 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { Charts = new Dictionary<string, Chart>()\r\n                {\r\n                    {chart.Name,chart}\r\n                }  }, progress))", span="375-378"];
m16_116 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { Orders = deltaOrders }, progress))", span="382-382"];
m16_117 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { RuntimeStatistics = runtimeStatistics }, progress))", span="385-385"];
m16_118 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="return splitPackets;", span="387-387"];
m16_114 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="chart.Series.Values.Sum(x => x.Values.Count) == 0", span="373-373"];
m16_119 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", span="366-366"];
m16_250 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="660-660"];
m16_251 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Bar, time, value, ''%'')", span="663-663"];
m16_252 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="660-660"];
m16_102 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", span="224-224"];
m16_123 [cluster="System.Collections.Generic.List<T>.Add(T)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m16_253 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="672-672"];
m16_254 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value, ''$'')", span="674-674"];
m16_255 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="672-672"];
m16_246 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="646-646"];
m16_247 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value, ''$'')", span="649-649"];
m16_248 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="_daysProcessed = (time - _job.PeriodStart).TotalDays", span="652-652"];
m16_249 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="646-646"];
m16_269 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="715-715"];
m16_270 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs", label="!_exitTriggered", span="718-718"];
m16_271 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs", label="ProcessSynchronousEvents(true)", span="720-720"];
m16_274 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs", label="_exitTriggered = true", span="726-726"];
m16_272 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs", label="var logLocation = SaveLogs(_job.BacktestId, _log)", span="721-721"];
m16_273 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs", label="SystemDebugMessage(''Your log was successfully created and can be retrieved from: '' + logLocation)", span="722-722"];
m16_275 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="715-715"];
m16_268 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m16_51 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m16_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="var direction = InsightDirection.Flat", span="79-79"];
m16_203 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="556-556"];
m16_204 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs", label="Messages.Enqueue(new LogPacket(_backtestId, message))", span="558-558"];
m16_206 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="562-562"];
m16_205 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs", label="_algorithm != null", span="560-560"];
m16_207 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="556-556"];
m16_282 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="757-757"];
m16_283 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="757-757"];
m16_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="normalizedSignal < -BounceThresholdPercent", span="85-85"];
m16_120 [cluster="System.Collections.Generic.List<T>.List()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_124 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Entry lambda expression", span="373-373"];
m16_106 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Entry lambda expression", span="288-288"];
m16_109 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Entry lambda expression", span="288-288"];
m16_107 [cluster="lambda expression", file="MacdAlphaModel.cs", label="t.Key", span="288-288"];
m16_108 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Exit lambda expression", span="288-288"];
m16_110 [cluster="lambda expression", file="MacdAlphaModel.cs", label="t.Value", span="288-288"];
m16_111 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Exit lambda expression", span="288-288"];
m16_125 [cluster="lambda expression", file="MacdAlphaModel.cs", label="x.Values.Count", span="373-373"];
m16_126 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Exit lambda expression", span="373-373"];
m16_244 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m16_26 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="MacdAlphaModel.cs", label="throw new Exception(''BacktestingResultHandler.Constructor(): Submitted Job type invalid.'');", span="212-212"];
m16_229 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="613-613"];
m16_230 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label=_chartLock, span="615-615"];
m16_232 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="!Charts.TryGetValue(chartName, out chart)", span="619-619"];
m16_233 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="chart = new Chart(chartName)", span="621-621"];
m16_234 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="Charts.AddOrUpdate(chartName, chart)", span="622-622"];
m16_236 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="!chart.Series.TryGetValue(seriesName, out series)", span="627-627"];
m16_237 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="series = new Series(seriesName, seriesType, seriesIndex, unit)", span="629-629"];
m16_238 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="chart.Series.Add(seriesName, series)", span="630-630"];
m16_239 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="series.Values.Count == 0 || time > Time.UnixTimeStampToDateTime(series.Values[series.Values.Count - 1].x)", span="634-634"];
m16_240 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="series.Values.Add(new ChartPoint(time, value))", span="636-636"];
m16_231 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="Chart chart", span="618-618"];
m16_235 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="Series series", span="626-626"];
m16_241 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="613-613"];
m16_27 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="MacdAlphaModel.cs", label="_compileId = _job.CompileId", span="213-213"];
m16_29 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="206-206"];
m16_32 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs", label="var lastMessage = ''''", span="223-223"];
m16_28 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="MacdAlphaModel.cs", label="_backtestId = _job.BacktestId", span="214-214"];
m16_30 [cluster="System.Exception.Exception(string)", file="MacdAlphaModel.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m16_31 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="220-220"];
m16_33 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs", label="_lastDaysProcessed = 5", span="224-224"];
m16_34 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="MacdAlphaModel.cs", label="!(_exitTriggered && Messages.Count == 0)", span="232-232"];
m16_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="MacdAlphaModel.cs", label="var insight = new Insight(sd.Security.Symbol, InsightType.Price, direction, insightPeriod)", prediction=10, span="97-97"];
m16_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="sd.PreviousDirection = insight.Direction", span="98-98"];
m16_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="yield return insight;", span="99-99"];
m16_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="70-70"];
m16_24 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m16_25 [cluster="System.TimeSpan.Multiply(double)", file="MacdAlphaModel.cs", label="Entry System.TimeSpan.Multiply(double)", span="230-230"];
m16_276 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="797-797"];
m16_293 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm == null", span="799-799"];
m16_296 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="time > _nextSample || forceProcess", span="803-803"];
m16_294 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="return;", span="799-799"];
m16_295 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="var time = _algorithm.UtcTime", span="801-801"];
m16_297 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_nextSample = time.Add(ResamplePeriod)", span="806-806"];
m16_298 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="809-809"];
m16_301 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="SampleAssetPrices(security.Symbol, time, security.Price)", span="817-817"];
m16_302 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="var debugStopWatch = Stopwatch.StartNew()", span="822-822"];
m16_299 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="SampleRange(_algorithm.GetChartUpdates())", span="812-812"];
m16_300 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm.Securities.Values", span="815-815"];
m16_303 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm.DebugMessages.Count > 0 && debugStopWatch.ElapsedMilliseconds < 250", span="823-823"];
m16_304 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="string message", span="825-825"];
m16_307 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="var errorStopWatch = Stopwatch.StartNew()", span="833-833"];
m16_305 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm.DebugMessages.TryDequeue(out message)", span="826-826"];
m16_306 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="DebugMessage(message)", span="828-828"];
m16_308 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm.ErrorMessages.Count > 0 && errorStopWatch.ElapsedMilliseconds < 250", span="834-834"];
m16_309 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="string message", span="836-836"];
m16_312 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="var logStopWatch = Stopwatch.StartNew()", span="844-844"];
m16_310 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm.ErrorMessages.TryDequeue(out message)", span="837-837"];
m16_311 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="ErrorMessage(message)", span="839-839"];
m16_313 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm.LogMessages.Count > 0 && logStopWatch.ElapsedMilliseconds < 250", span="845-845"];
m16_314 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="string message", span="847-847"];
m16_317 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm.RuntimeStatistics", span="855-855"];
m16_315 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="_algorithm.LogMessages.TryDequeue(out message)", span="848-848"];
m16_316 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="LogMessage(message)", span="850-850"];
m16_318 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="RuntimeStatistic(pair.Key, pair.Value)", span="857-857"];
m16_319 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="797-797"];
m16_208 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m16_50 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", span=""];
m16_53 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="Algorithm == null || Algorithm.Transactions == null || _processingFinalPacket", span="274-274"];
m16_54 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="return;", span="276-276"];
m16_55 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="DateTime.Now <= _nextUpdate || !(_daysProcessed > (_lastDaysProcessed + 1))", span="279-279"];
m16_56 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="return;", span="279-279"];
m16_57 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="var deltaOrders = new Dictionary<int, Order>()", span="282-282"];
m16_58 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="deltaOrders = (from order in _transactionHandler.Orders\r\n                        where order.Value.Time.Date >= _lastUpdate && order.Value.Status == OrderStatus.Filled\r\n                        select order).ToDictionary(t => t.Key, t => t.Value)", span="286-288"];
m16_59 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label=Exception, span="290-290"];
m16_61 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="deltaOrders.Count > 50", span="296-296"];
m16_62 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="deltaOrders.Clear()", span="296-296"];
m16_89 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, runtimeStatistics, progress)", span="350-350"];
m16_60 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="Log.Error(err, ''Transactions'')", span="292-292"];
m16_63 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="_lastUpdate = Algorithm.Time.Date", span="301-301"];
m16_64 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="_lastDaysProcessed = _daysProcessed", span="302-302"];
m16_65 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="_nextUpdate = DateTime.Now.AddSeconds(0.5)", span="303-303"];
m16_66 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label=Exception, span="305-305"];
m16_68 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="var deltaCharts = new Dictionary<string, Chart>()", span="310-310"];
m16_67 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="Log.Error(err, ''Can't update variables'')", span="307-307"];
m16_69 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label=_chartLock, span="311-311"];
m16_71 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="deltaCharts.Add(chart.Name, chart.GetUpdates())", span="316-316"];
m16_70 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="Charts.Values", span="314-314"];
m16_72 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="var runtimeStatistics = new Dictionary<string, string>()", span="321-321"];
m16_73 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label=_runtimeLock, span="322-322"];
m16_75 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="runtimeStatistics.Add(pair.Key, pair.Value)", span="326-326"];
m16_76 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="runtimeStatistics.Add(''Unrealized'', ''$'' + _algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="329-329"];
m16_77 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="runtimeStatistics.Add(''Fees'', ''-$'' + _algorithm.Portfolio.TotalFees.ToString(''N2''))", span="330-330"];
m16_78 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="runtimeStatistics.Add(''Net Profit'', ''$'' + (_algorithm.Portfolio.TotalProfit - _algorithm.Portfolio.TotalFees).ToString(''N2''))", span="331-331"];
m16_79 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="runtimeStatistics.Add(''Return'', ((_algorithm.Portfolio.TotalPortfolioValue - _setupHandler.StartingPortfolioValue) / _setupHandler.StartingPortfolioValue).ToString(''P''))", span="332-332"];
m16_80 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="runtimeStatistics.Add(''Equity'', ''$'' + _algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="333-333"];
m16_84 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="var completeResult = new BacktestResult(Charts, _transactionHandler.Orders, Algorithm.Transactions.TransactionRecord, new Dictionary<string, string>(), runtimeStatistics, new Dictionary<string, AlgorithmPerformance>())", span="340-340"];
m16_74 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label=_runtimeStatistics, span="324-324"];
m16_81 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="var progress = Convert.ToDecimal(_daysProcessed / _jobDays)", span="336-336"];
m16_82 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="progress > 0.999m", span="337-337"];
m16_85 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="var complete = new BacktestResultPacket(_job, completeResult, progress)", span="341-341"];
m16_83 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="progress = 0.999m", span="337-337"];
m16_86 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="DateTime.Now > _nextS3Update", span="343-343"];
m16_88 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="StoreResult(complete, false)", span="346-346"];
m16_87 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="_nextS3Update = DateTime.Now.AddSeconds(30)", span="345-345"];
m16_90 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label=splitPackets, span="352-352"];
m16_91 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="_messagingHandler.Send(backtestingPacket)", span="354-354"];
m16_92 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label=Exception, span="357-357"];
m16_93 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="Log.Error(err)", span="359-359"];
m16_94 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", span="269-269"];
m16_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="135-135"];
m16_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="139-139"];
m16_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="135-135"];
m16_37 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m16_38 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m16_39 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Security = security", span="137-137"];
m16_40 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, resolution)", span="138-138"];
m16_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="MACD = algorithm.MACD(security.Symbol, fastPeriod, slowPeriod, signalPeriod, movingAverageType)", span="141-141"];
m16_43 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="algorithm.RegisterIndicator(security.Symbol, MACD, Consolidator)", span="143-143"];
m16_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m16_52 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m16_96 [cluster="Unk.ToDictionary", file="MacdAlphaModel.cs", label="Entry Unk.ToDictionary", span=""];
m16_243 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m16_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="normalizedSignal > BounceThresholdPercent", span="81-81"];
m16_154 [cluster="System.Collections.Generic.List<T>.Clear()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m16_101 [cluster="System.Convert.ToDecimal(double)", file="MacdAlphaModel.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m16_182 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="569-569"];
m16_209 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="MacdAlphaModel.cs", label="var packet = new SecurityTypesPacket\r\n            {\r\n                Types = types\r\n            }", span="571-574"];
m16_210 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="MacdAlphaModel.cs", label="Messages.Enqueue(packet)", span="575-575"];
m16_211 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="569-569"];
m16_47 [cluster="System.Threading.Thread.Sleep(int)", file="MacdAlphaModel.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m16_140 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="437-437"];
m16_141 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="FinalStatistics = statisticsResults.Summary", span="441-441"];
m16_144 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="statisticsResults.RollingPerformances.Values", span="448-448"];
m16_146 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="var result = new BacktestResultPacket((BacktestNodePacket) job,\r\n                    new BacktestResult(charts, orders, profitLoss, statisticsResults.Summary, banner, statisticsResults.RollingPerformances, statisticsResults.TotalPerformance)\r\n                    , 1m)\r\n                {\r\n                    ProcessingTime = (DateTime.Now - _startTime).TotalSeconds,\r\n                    DateFinished = DateTime.Now,\r\n                    Progress = 1\r\n                }", span="454-461"];
m16_142 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="var charts = new Dictionary<string, Chart>(Charts)", span="444-444"];
m16_143 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="_processingFinalPacket = true", span="445-445"];
m16_145 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="ap.ClosedTrades.Clear()", span="450-450"];
m16_147 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="StoreResult(result)", span="464-464"];
m16_148 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="_messagingHandler.Send(result)", span="467-467"];
m16_149 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="Log.Trace(''BacktestingResultHandler.SendAnalysisResult(): Processed final packet'')", span="469-469"];
m16_150 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label=Exception, span="471-471"];
m16_151 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="Log.Error(err)", span="473-473"];
m16_152 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="437-437"];
m16_99 [cluster="QuantConnect.Chart.GetUpdates()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
m16_103 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171"];
m16_278 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="734-734"];
m16_279 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="734-734"];
m16_185 [cluster="System.Console.SetOut(System.IO.TextWriter)", file="MacdAlphaModel.cs", label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0"];
m16_256 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681"];
m16_257 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label=_chartLock, span="683-683"];
m16_258 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label=updates, span="685-685"];
m16_259 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label="!Charts.ContainsKey(update.Name)", span="688-688"];
m16_260 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="690-690"];
m16_261 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label="update.Series.Values", span="694-694"];
m16_262 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="697-697"];
m16_263 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit)\r\n                            {\r\n                                Color = series.Color, ScatterMarkerSymbol = series.ScatterMarkerSymbol\r\n                            })", span="699-702"];
m16_264 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="706-706"];
m16_265 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681"];
m16_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="var normalizedSignal = sd.MACD.Signal / sd.Security.Price", span="80-80"];
m16_277 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m16_180 [cluster="System.Convert.ToInt32(int)", file="MacdAlphaModel.cs", label="Entry System.Convert.ToInt32(int)", span="0-0"];
m16_49 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="MacdAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", span=""];
m16_181 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m16_155 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="482-482"];
m16_156 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="_algorithm = algorithm", span="484-484"];
m16_172 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="var debug = new FuncTextWriter(algorithm.Debug)", span="513-513"];
m16_173 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="var error = new FuncTextWriter(algorithm.Error)", span="514-514"];
m16_157 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="var totalMinutes = (_job.PeriodFinish - _job.PeriodStart).TotalMinutes", span="487-487"];
m16_158 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="var resampleMinutes = (totalMinutes < (_minimumSamplePeriod * _samples)) ? _minimumSamplePeriod : (totalMinutes / _samples)", span="488-488"];
m16_159 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="_resamplePeriod = TimeSpan.FromMinutes(resampleMinutes)", span="489-489"];
m16_160 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="Log.Trace(''BacktestingResultHandler(): Sample Period Set: '' + resampleMinutes.ToString(''00.00''))", span="490-490"];
m16_161 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="_jobDays = Time.TradeableDates(Algorithm.Securities.Values, _job.PeriodStart, _job.PeriodFinish)", span="493-493"];
m16_162 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="_debugMessageMax = Convert.ToInt32(10 * _jobDays)", span="496-496"];
m16_163 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="_debugMessageMax < _debugMessageMin", span="498-498"];
m16_164 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="_debugMessageMax = _debugMessageMin", span="498-498"];
m16_165 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="_debugMessagePeriod = ''backtest''", span="500-500"];
m16_166 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="var types = new List<SecurityType>()", span="503-503"];
m16_167 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="_algorithm.Securities.Values", span="504-504"];
m16_168 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="!types.Contains(security.Type)", span="506-506"];
m16_169 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="types.Add(security.Type)", span="506-506"];
m16_170 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="SecurityType(types)", span="508-508"];
m16_171 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="Config.GetBool(''forward-console-messages'', true)", span="510-510"];
m16_174 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="Console.SetOut(debug)", span="515-515"];
m16_175 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="Console.SetError(error)", span="516-516"];
m16_176 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="482-482"];
m16_9 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="Charts[''Strategy Equity''].Series.Add(''Equity'', new Series(''Equity'', SeriesType.Candle, 0, ''$''))", span="193-193"];
m16_10 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="Charts[''Strategy Equity''].Series.Add(''Daily Performance'', new Series(''Daily Performance'', SeriesType.Bar, 1, ''%''))", span="194-194"];
m16_15 [cluster="System.TimeSpan.FromSeconds(double)", file="MacdAlphaModel.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m16_11 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="176-176"];
m16_18 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
m16_323 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="MacdAlphaModel.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m16_321 [cluster="System.Math.Round(decimal, int)", file="MacdAlphaModel.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m16_97 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m16_196 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", span="540-540"];
m16_197 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs", label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _backtestId, _compileId, message))", span="542-542"];
m16_199 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="547-547"];
m16_200 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs", label="_debugMessage = message", span="549-549"];
m16_198 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs", label="_algorithm != null", span="545-545"];
m16_201 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", span="540-540"];
m16_153 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m16_202 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
m16_100 [cluster="decimal.ToString(string)", file="MacdAlphaModel.cs", label="Entry decimal.ToString(string)", span="0-0"];
m16_286 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="MacdAlphaModel.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71"];
m16_267 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m16_183 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m16_139 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m16_177 [cluster="System.TimeSpan.FromMinutes(double)", file="MacdAlphaModel.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m16_320 [cluster="System.DateTime.Add(System.TimeSpan)", file="MacdAlphaModel.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m16_122 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult()", span="216-216"];
m16_222 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="596-596"];
m16_223 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs", label="PurgeQueue()", span="598-598"];
m16_224 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _backtestId, message, stacktrace))", span="599-599"];
m16_225 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs", label="_errorMessage = message", span="600-600"];
m16_226 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="596-596"];
m16_242 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m16_121 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m16_287 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="776-776"];
m16_288 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="MacdAlphaModel.cs", label=_runtimeLock, span="778-778"];
m16_289 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="MacdAlphaModel.cs", label="_runtimeStatistics[key] = value", span="780-780"];
m16_290 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="776-776"];
m16_227 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="765-765"];
m16_284 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="MacdAlphaModel.cs", label="Messages.Clear()", span="767-767"];
m16_285 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="765-765"];
m16_178 [cluster="double.ToString(string)", file="MacdAlphaModel.cs", label="Entry double.ToString(string)", span="0-0"];
m16_212 [cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52"];
m16_228 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m16_98 [cluster="System.DateTime.AddSeconds(double)", file="MacdAlphaModel.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m16_0 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="176-176"];
m16_1 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="_messages = new ConcurrentQueue<Packet>()", span="179-179"];
m16_2 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="_charts = new ConcurrentDictionary<string, Chart>()", span="180-180"];
m16_3 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="_chartLock = new Object()", span="181-181"];
m16_4 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="_isActive = true", span="182-182"];
m16_5 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="_notificationPeriod = TimeSpan.FromSeconds(2)", span="185-185"];
m16_6 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="_exitTriggered = false", span="186-186"];
m16_7 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="_startTime = DateTime.Now", span="189-189"];
m16_8 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="MacdAlphaModel.cs", label="Charts.AddOrUpdate(''Strategy Equity'', new Chart(''Strategy Equity''))", span="192-192"];
m16_95 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m16_194 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="MacdAlphaModel.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m16_245 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370"];
m16_179 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="376-376"];
m16_324 [file="MacdAlphaModel.cs", label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", span=""];
m17_0 [cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="26-26"];
m17_1 [cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="26-26"];
m17_2 [cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="NullExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="30-30"];
m17_3 [cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="NullExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="30-30"];
m18_5 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="NullPortfolioConstructionModel.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m18_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="27-27"];
m18_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="27-27"];
m18_2 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="NullPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31"];
m18_3 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="NullPortfolioConstructionModel.cs", label="return Enumerable.Empty<IPortfolioTarget>();", span="33-33"];
m18_4 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="NullPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31"];
m19_67 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179"];
m19_74 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="var rows = new SortedDictionary<DateTime, string>()", span="181-181"];
m19_75 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="var zip = ZipFile.Read(fileName)", span="183-183"];
m19_84 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="return rows;", span="202-202"];
m19_83 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="rows[time] = line", span="196-196"];
m19_76 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="var stream = new MemoryStream()", span="185-185"];
m19_77 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="zip[0].Extract(stream)", span="187-187"];
m19_81 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="(line = reader.ReadLine()) != null", span="193-193"];
m19_82 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="var time = DateTime.ParseExact(line.Substring(0, DateFormat.TwelveCharacter.Length), DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="195-195"];
m19_78 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="stream.Seek(0, SeekOrigin.Begin)", span="188-188"];
m19_79 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="var reader = new StreamReader(stream)", span="190-190"];
m19_80 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="string line", span="192-192"];
m19_85 [cluster="QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LoadHourlyOrDailyFile(string)", span="179-179"];
m19_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m19_17 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="Resolution.Hour", span="78-78"];
m19_14 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="PortfolioConstructionModelPythonWrapper.cs", label=targets, span="60-60"];
m19_15 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="PortfolioConstructionModelPythonWrapper.cs", label="yield return target.AsManagedObject(typeof(IPortfolioTarget)) as IPortfolioTarget;", span="62-62"];
m19_18 [cluster="Unk.AsManagedObject", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry Unk.AsManagedObject", span=""];
m19_22 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="72-72"];
m19_16 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="55-55"];
m19_19 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="72-72"];
m19_21 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PortfolioConstructionModelPythonWrapper.cs", label="_model.OnSecuritiesChanged(algorithm, changes)", span="76-76"];
m19_20 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PortfolioConstructionModelPythonWrapper.cs", label="Py.GIL()", span="74-74"];
m19_23 [cluster="Unk.OnSecuritiesChanged", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry Unk.OnSecuritiesChanged", span=""];
m19_44 [cluster="System.Text.StringBuilder.ToString()", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m19_45 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m19_101 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="Compression.Zip(data, tempFilePath, LeanData.GenerateZipEntryName(_symbol.Value, _securityType, date, _resolution, _dataType))", span="226-226"];
m19_95 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="var tempFilePath = filePath + ''.tmp''", span="213-213"];
m19_96 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="data = data.TrimEnd()", span="215-215"];
m19_100 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="Directory.CreateDirectory(Path.GetDirectoryName(filePath))", span="223-223"];
m19_102 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="File.Move(tempFilePath, filePath)", span="229-229"];
m19_97 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="File.Exists(filePath)", span="216-216"];
m19_98 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="File.Delete(filePath)", span="218-218"];
m19_99 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="Log.Trace(''LeanDataWriter.Write(): Existing deleted: '' + filePath)", span="219-219"];
m19_103 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="Log.Trace(''LeanDataWriter.Write(): Created: '' + filePath)", span="231-231"];
m19_104 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m19_71 [cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry lambda expression", span="144-144"];
m19_72 [cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs", label="LeanData.GenerateLine(x, _securityType, _resolution)", span="144-144"];
m19_68 [cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry lambda expression", span="144-144"];
m19_73 [cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit lambda expression", span="144-144"];
m19_69 [cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs", label="x.Time", span="144-144"];
m19_70 [cluster="lambda expression", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit lambda expression", span="144-144"];
m19_111 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="343-343"];
m19_93 [cluster="string.Substring(int, int)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry string.Substring(int, int)", span="0-0"];
m19_92 [cluster="System.IO.StreamReader.ReadLine()", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m19_11 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m19_12 [cluster="string.ToLower()", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry string.ToLower()", span="0-0"];
m19_13 [cluster="System.Exception.Exception(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m19_0 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m19_1 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="_securityType = symbol.ID.SecurityType", span="50-50"];
m19_3 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="_resolution = resolution", span="52-52"];
m19_4 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="_symbol = symbol", span="53-53"];
m19_5 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="_market = symbol.ID.Market.ToLower()", span="54-54"];
m19_2 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="_dataDirectory = dataDirectory", span="51-51"];
m19_6 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", color=green, community=0, file="PortfolioConstructionModelPythonWrapper.cs", label="_dataType = dataType", prediction=11, span="55-55"];
m19_64 [cluster="SortedDictionary<DateTime, string>.cstr", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry SortedDictionary<DateTime, string>.cstr", span=""];
m19_25 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="95-95"];
m19_32 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="111-111"];
m19_33 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="112-112"];
m19_36 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="sb.Append(LeanData.GenerateLine(data, _securityType, _resolution) + Environment.NewLine)", span="119-119"];
m19_38 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="125-125"];
m19_39 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="126-126"];
m19_27 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="var lastTime = new DateTime()", span="98-98"];
m19_31 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="lastTime != DateTime.MinValue && data.Time.Date > lastTime.Date", span="108-108"];
m19_26 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="var sb = new StringBuilder()", span="97-97"];
m19_34 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="sb.Clear()", span="113-113"];
m19_28 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label=source, span="102-102"];
m19_35 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="lastTime = data.Time", span="116-116"];
m19_37 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="sb.Length > 0", span="123-123"];
m19_30 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="throw new Exception(''The data must be pre-sorted from oldest to newest'');", span="105-105"];
m19_29 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="data.Time < lastTime", span="105-105"];
m19_40 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteMinuteOrSecondOrTick(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="95-95"];
m19_112 [cluster="System.IO.File.Move(string, string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.File.Move(string, string)", span="0-0"];
m19_110 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526"];
m19_109 [cluster="System.IO.Directory.CreateDirectory(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m19_105 [cluster="string.TrimEnd(params char[])", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m19_115 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m19_7 [cluster="Unk.GIL", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry Unk.GIL", span=""];
m19_8 [cluster="Unk.HasAttr", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry Unk.HasAttr", span=""];
m19_9 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="PortfolioConstructionModelPythonWrapper.cs", label="_securityType != SecurityType.Equity && _securityType != SecurityType.Forex && _securityType != SecurityType.Cfd && _securityType != SecurityType.Crypto", span="63-63"];
m19_10 [cluster="Unk.GetPythonType", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry Unk.GetPythonType", span=""];
m19_94 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m19_106 [cluster="System.IO.File.Delete(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m19_24 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper", span=""];
m19_51 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="var outputFile = GetZipOutputFileName(_dataDirectory, lastTime)", span="141-141"];
m19_52 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="var newRows = new SortedDictionary<DateTime, string>(source.ToDictionary(x => x.Time, x => LeanData.GenerateLine(x, _securityType, _resolution)))", span="144-144"];
m19_62 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="172-172"];
m19_50 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="var lastTime = new DateTime()", span="138-138"];
m19_54 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="File.Exists(outputFile)", span="147-147"];
m19_55 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="rows = LoadHourlyOrDailyFile(outputFile)", span="150-150"];
m19_53 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="SortedDictionary<DateTime, string> rows", span="145-145"];
m19_56 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label=newRows, span="151-151"];
m19_58 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="rows = newRows", span="159-159"];
m19_49 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="var sb = new StringBuilder()", span="137-137"];
m19_61 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="sb.Length > 0", span="170-170"];
m19_60 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="sb.Append(kvp.Value + Environment.NewLine)", span="166-166"];
m19_57 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="rows[kvp.Key] = kvp.Value", span="153-153"];
m19_59 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label=rows, span="163-163"];
m19_63 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="135-135"];
m19_46 [cluster="System.Text.StringBuilder.Clear()", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.Text.StringBuilder.Clear()", span="0-0"];
m19_43 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m19_113 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="return LeanData.GenerateZipFilePath(baseDirectory, _symbol.Value, _securityType, _market, time, _resolution);", span="242-242"];
m19_114 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="PortfolioConstructionModelPythonWrapper.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m19_66 [cluster="System.IO.File.Exists(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m19_48 [cluster="System.Text.StringBuilder.Append(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m19_108 [cluster="System.IO.Path.GetDirectoryName(string)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m19_87 [cluster="Unk.Read", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry Unk.Read", span=""];
m19_90 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m19_41 [cluster="System.Text.StringBuilder.StringBuilder()", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m19_91 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m19_86 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0"];
m19_107 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m19_89 [cluster="Unk.Extract", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry Unk.Extract", span=""];
m19_42 [cluster="System.DateTime.DateTime()", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m19_65 [cluster="Unk.ToDictionary", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry Unk.ToDictionary", span=""];
m19_88 [cluster="System.IO.MemoryStream.MemoryStream()", file="PortfolioConstructionModelPythonWrapper.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m19_116 [file="PortfolioConstructionModelPythonWrapper.cs", label="QuantConnect.ToolBox.LeanDataWriter", span=""];
m20_21 [cluster="QuantConnect.Util.Composer.AddPart<T>(T)", file="PortfolioTarget.cs", label="Entry QuantConnect.Util.Composer.AddPart<T>(T)", span="75-75"];
m20_5 [cluster="QuantConnect.Brokerages.GDAX.BitfinexBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="PortfolioTarget.cs", label="var required = new[] { ''gdax-url'', ''gdax-api-secret'', ''gdax-api-key'', ''gdax-passphrase'' }", span="78-78"];
m20_38 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator(string)", file="PortfolioTarget.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator(string)", span="93-93"];
m20_20 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="PortfolioTarget.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="82-82"];
m20_18 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator()", file="PortfolioTarget.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator()", span="100-100"];
m20_6 [cluster="QuantConnect.Brokerages.GDAX.BitfinexBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="PortfolioTarget.cs", label=required, span="80-80"];
m20_0 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", file="PortfolioTarget.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", span="28-28"];
m20_1 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", file="PortfolioTarget.cs", label="string name = ''name''", span="31-31"];
m20_2 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", file="PortfolioTarget.cs", label="var target = new TestIndicator(name)", span="32-32"];
m20_3 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.NameSaves()", file="PortfolioTarget.cs", label="Assert.AreEqual(name, target.Name)", span="33-33"];
m20_4 [cluster="QuantConnect.Brokerages.GDAX.BitfinexBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="PortfolioTarget.cs", label="Entry QuantConnect.Brokerages.GDAX.BitfinexBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="76-76"];
m20_22 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", span="59-59"];
m20_23 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs", label="var target = new TestIndicator()", span="61-61"];
m20_24 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs", label="var time = DateTime.UtcNow", span="63-63"];
m20_25 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs", label="target.Update(new IndicatorDataPoint(time, 1m))", span="65-65"];
m20_26 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs", label="target.Update(new IndicatorDataPoint(time.AddMilliseconds(-1), 2m))", span="66-66"];
m20_27 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", file="PortfolioTarget.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorTests.ThrowsOnPastTimes()", span="59-59"];
m20_11 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", color=green, community=0, file="PortfolioTarget.cs", label="var time = DateTime.UtcNow", prediction=12, span="47-47"];
m20_9 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="Assert.AreEqual(DateTime.MinValue, target.Current.Time)", span="44-44"];
m20_10 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="Assert.AreEqual(0m, target.Current.Value)", span="45-45"];
m20_12 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="var data = new IndicatorDataPoint(time, 1m)", span="48-48"];
m20_13 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="target.Update(data)", span="50-50"];
m20_7 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", span="37-37"];
m20_8 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="var target = new TestIndicator()", span="42-42"];
m20_14 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="Assert.AreEqual(1m, target.Current.Value)", span="51-51"];
m20_40 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="PortfolioTarget.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="118-118"];
m20_41 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="PortfolioTarget.cs", label="return input;", span="120-120"];
m20_42 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="PortfolioTarget.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="118-118"];
m20_16 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="Assert.AreEqual(2m, target.Current.Value)", span="54-54"];
m20_15 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.UpdatesProperly()", file="PortfolioTarget.cs", label="target.Update(new IndicatorDataPoint(time.AddMilliseconds(1), 2m))", span="53-53"];
m20_17 [cluster="string.Format(string, object)", file="PortfolioTarget.cs", label="Entry string.Format(string, object)", span="0-0"];
m20_28 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", span="70-70"];
m20_29 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="var target = new TestIndicator()", span="72-72"];
m20_30 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="var time = DateTime.UtcNow", span="74-74"];
m20_33 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="target.Update(data)", span="78-78"];
m20_34 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="Assert.AreEqual(value1, target.Current.Value)", span="79-79"];
m20_35 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="target.Update(data)", span="83-83"];
m20_36 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="Assert.AreEqual(value1, target.Current.Value)", span="84-84"];
m20_31 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="decimal value1 = 1m", span="76-76"];
m20_32 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="var data = new IndicatorDataPoint(time, value1)", span="77-77"];
m20_37 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", file="PortfolioTarget.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorTests.PassesOnDuplicateTimes()", span="70-70"];
m20_39 [cluster="QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator()", file="PortfolioTarget.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorTests.TestIndicator.TestIndicator()", span="100-100"];
m20_19 [cluster="QuantConnect.Brokerages.WebSocketWrapper.WebSocketWrapper()", file="PortfolioTarget.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.WebSocketWrapper()", span="27-27"];
m21_744 [cluster="IBApi.Order.cstr", file="PythonUtil.cs", label="Entry IBApi.Order.cstr", span=""];
m21_970 [cluster="QuantConnect.Holding.Holding()", file="PythonUtil.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m21_404 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m21_333 [cluster="int.ToString()", file="PythonUtil.cs", label="Entry int.ToString()", span="0-0"];
m21_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.PlaceOrder(): '' + err)", span="273-273"];
m21_505 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m21_721 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="PythonUtil.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m21_589 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", span="78-78"];
m21_121 [cluster="Unk.ToArray", file="PythonUtil.cs", label="Entry Unk.ToArray", span=""];
m21_294 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676"];
m21_295 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Dispose(): Disposing of IB resources.'')", span="678-678"];
m21_296 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs", label="_client != null", span="680-680"];
m21_297 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs", label="Disconnect()", span="682-682"];
m21_299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs", label="_messagingRateLimiter.Dispose()", span="686-686"];
m21_298 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs", label="_client.Dispose()", span="683-683"];
m21_300 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs", label="_ctsRestartGateway.Cancel(false)", span="688-688"];
m21_301 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676"];
m21_590 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m21_238 [cluster="EReader.cstr", file="PythonUtil.cs", label="Entry EReader.cstr", span=""];
m21_277 [cluster="Unk.reqAccountUpdates", file="PythonUtil.cs", label="Entry Unk.reqAccountUpdates", span=""];
m21_811 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="65-65"];
m21_1350 [cluster="System.IO.File.ReadAllLines(string)", file="PythonUtil.cs", label="Entry System.IO.File.ReadAllLines(string)", span="0-0"];
m21_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304"];
m21_1253 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2467-2467"];
m21_1269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="int timeOut = 60", span="2477-2477"];
m21_1273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var useRegularTradingHours = Convert.ToInt32(!request.IncludeExtendedMarketHours)", span="2483-2483"];
m21_1274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="endTime >= startTime", span="2486-2486"];
m21_1278 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="_requestInformation[historicalTicker] = ''GetHistory: '' + contract", span="2492-2492"];
m21_1279 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        var bar = ConvertTradeBar(request.Symbol, request.Resolution, args);\r\n                        if (request.Resolution != Resolution.Daily)\r\n                        {\r\n                            bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone);\r\n                        }\r\n\r\n                        historyPiece.Add(bar);\r\n                        dataDownloading.Set();\r\n                    }\r\n                }", span="2494-2507"];
m21_1285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Client.ClientSocket.reqHistoricalData(historicalTicker, contract, endTime.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                    duration, resolution, dataType, useRegularTradingHours, 2, false, new List<TagValue>())", span="2534-2535"];
m21_1270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var history = new List<TradeBar>()", span="2479-2479"];
m21_1288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="waitResult = WaitHandle.WaitAny(new WaitHandle[] {dataDownloading, dataDownloaded}, timeOut*1000)", span="2540-2540"];
m21_1294 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Pacing violation. Paused for {0} secs.'', timeOut)", span="2552-2552"];
m21_1295 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() History request timed out ({0} sec)'', timeOut)", span="2556-2556"];
m21_1271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var dataDownloading = new AutoResetEvent(false)", span="2480-2480"];
m21_1298 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="history.AddRange(filteredPiece)", span="2568-2568"];
m21_1300 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="return history;", span="2574-2574"];
m21_1272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var dataDownloaded = new ManualResetEvent(false)", span="2481-2481"];
m21_1280 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2509-2515"];
m21_1281 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                {\r\n                    if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                    {\r\n                        // pacing violation happened\r\n                        pacing = true;\r\n                    }\r\n                    if (args.Code == 162 && args.Message.Contains(''no data''))\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2517-2528"];
m21_1275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var pacing = false", span="2488-2488"];
m21_1276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var historyPiece = new List<TradeBar>()", span="2489-2489"];
m21_1277 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var historicalTicker = GetNextTickerId()", span="2490-2490"];
m21_1296 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="!historyPiece.Any()", span="2561-2561"];
m21_1297 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var filteredPiece = historyPiece.OrderBy(x => x.Time)", span="2566-2566"];
m21_1283 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Client.HistoricalData += clientOnHistoricalData", span="2531-2531"];
m21_1290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Client.HistoricalData -= clientOnHistoricalData", span="2544-2544"];
m21_1284 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="2532-2532"];
m21_1291 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="2545-2545"];
m21_1282 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Client.Error += clientOnError", span="2530-2530"];
m21_1289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Client.Error -= clientOnError", span="2543-2543"];
m21_1293 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label=pacing, span="2549-2549"];
m21_1286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="var waitResult = 0", span="2537-2537"];
m21_1287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="waitResult == 0", span="2538-2538"];
m21_1292 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="waitResult == WaitHandle.WaitTimeout", span="2547-2547"];
m21_1299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="endTime = filteredPiece.First().Time", span="2571-2571"];
m21_1301 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2467-2467"];
m21_569 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1198-1198"];
m21_604 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="!_disconnected1100Fired", span="1202-1202"];
m21_605 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="return;", span="1204-1204"];
m21_606 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="var isResetTime = IsWithinScheduledServerResetTimes()", span="1207-1207"];
m21_607 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="!isResetTime", span="1209-1209"];
m21_614 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="_previouslyInResetTime = isResetTime", span="1234-1234"];
m21_608 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label=_previouslyInResetTime, span="1211-1211"];
m21_612 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Within server reset times, trying to wait for reconnect...'')", span="1228-1228"];
m21_609 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Reset time finished and still disconnected. Restarting...'')", span="1214-1214"];
m21_611 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="OnMessage(BrokerageMessageEvent.Disconnected(''Connection with Interactive Brokers lost. '' +\r\n                                                                 ''This could be because of internet connectivity issues or a log in from another location.''\r\n                        ))", span="1221-1223"];
m21_610 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="_resetEventRestartGateway.Set()", span="1216-1216"];
m21_613 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(_ => TryWaitForReconnect())", span="1231-1231"];
m21_615 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1198-1198"];
m21_1059 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="PythonUtil.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m21_44 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in ResetGatewayConnection: '' + exception)", span="233-233"];
m21_1264 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="PythonUtil.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m21_176 [cluster="System.DateTime.ToString(string)", file="PythonUtil.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m21_397 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="PythonUtil.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m21_120 [cluster="Unk.ToList", file="PythonUtil.cs", label="Entry Unk.ToList", span=""];
m21_27 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="PythonUtil.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m21_1093 [cluster="string.ToLower()", file="PythonUtil.cs", label="Entry string.ToLower()", span="0-0"];
m21_1212 [cluster="Unk.Count", file="PythonUtil.cs", label="Entry Unk.Count", span=""];
m21_140 [cluster="Unk.Substring", file="PythonUtil.cs", label="Entry Unk.Substring", span=""];
m21_1142 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="PythonUtil.cs", label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="412-412"];
m21_775 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1700-1700"];
m21_851 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="order.OrderType", span="1702-1702"];
m21_861 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="order.Tif == IB.TimeInForce.MarketOnOpen", span="1710-1710"];
m21_864 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="throw new ArgumentException(order.OrderType, ''order.OrderType'');", span="1717-1717"];
m21_852 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="IB.OrderType.Limit", span="1704-1704"];
m21_854 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="IB.OrderType.Stop", span="1705-1705"];
m21_856 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="IB.OrderType.StopLimit", span="1706-1706"];
m21_858 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="IB.OrderType.MarketOnClose", span="1707-1707"];
m21_860 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="IB.OrderType.Market", span="1709-1709"];
m21_853 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="return OrderType.Limit;", span="1704-1704"];
m21_855 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="return OrderType.StopMarket;", span="1705-1705"];
m21_857 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="return OrderType.StopLimit;", span="1706-1706"];
m21_859 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="return OrderType.MarketOnClose;", span="1707-1707"];
m21_862 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="return OrderType.MarketOnOpen;", span="1712-1712"];
m21_863 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="return OrderType.Market;", span="1714-1714"];
m21_865 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1700-1700"];
m21_331 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1591-1591"];
m21_785 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="var securityType = ConvertSecurityType(symbol.ID.SecurityType)", span="1593-1593"];
m21_786 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="var ibSymbol = _symbolMapper.GetBrokerageSymbol(symbol)", span="1594-1594"];
m21_787 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="var contract = new Contract\r\n            {\r\n                Symbol = ibSymbol,\r\n                Exchange = exchange ?? ''Smart'',\r\n                SecType = securityType,\r\n                Currency = ''USD''\r\n            }", span="1595-1601"];
m21_788 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="symbol.ID.SecurityType == SecurityType.Forex", span="1602-1602"];
m21_792 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="symbol.ID.SecurityType == SecurityType.Equity", span="1610-1610"];
m21_794 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="symbol.ID.SecurityType == SecurityType.Option", span="1615-1615"];
m21_795 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.EightCharacter)", span="1617-1617"];
m21_796 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Right = symbol.ID.OptionRight == OptionRight.Call ? IB.RightType.Call : IB.RightType.Put", span="1618-1618"];
m21_797 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Strike = Convert.ToDouble(symbol.ID.StrikePrice)", span="1619-1619"];
m21_801 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="symbol.ID.SecurityType == SecurityType.Future", span="1625-1625"];
m21_803 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.YearMonth)", span="1631-1631"];
m21_804 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="symbol.ID.Market == Market.USA", span="1633-1633"];
m21_807 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Exchange = _futuresExchanges.ContainsKey(symbol.ID.Market) ?\r\n                                            _futuresExchanges[symbol.ID.Market] :\r\n                                            symbol.ID.Market", span="1640-1642"];
m21_790 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Symbol = ibSymbol.Substring(0, 3)", span="1606-1606"];
m21_791 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Currency = ibSymbol.Substring(3)", span="1607-1607"];
m21_798 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Symbol = ibSymbol", span="1620-1620"];
m21_802 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Symbol = ibSymbol", span="1630-1630"];
m21_789 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Exchange = ''IDEALPRO''", span="1605-1605"];
m21_793 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.PrimaryExch = GetPrimaryExchange(contract)", span="1612-1612"];
m21_808 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="return contract;", span="1646-1646"];
m21_799 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Multiplier = ''100''", span="1621-1621"];
m21_800 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.TradingClass = GetTradingClass(contract)", span="1622-1622"];
m21_805 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Exchange = ''''", span="1635-1635"];
m21_806 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="contract.Exchange = GetFuturesContractExchange(contract)", span="1636-1636"];
m21_809 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1591-1591"];
m21_601 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m21_617 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", span="68-68"];
m21_634 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="PythonUtil.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m21_1213 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PythonUtil.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m21_99 [cluster="Unk.reqAllOpenOrders", file="PythonUtil.cs", label="Entry Unk.reqAllOpenOrders", span=""];
m21_355 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="779-779"];
m21_356 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="ContractDetails details", span="781-781"];
m21_357 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="782-782"];
m21_359 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="details = GetContractDetails(contract)", span="787-787"];
m21_358 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="return details.Summary.TradingClass;", span="784-784"];
m21_360 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="details == null", span="788-788"];
m21_362 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="return details.Summary.TradingClass;", span="794-794"];
m21_361 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="return null;", span="791-791"];
m21_363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="779-779"];
m21_1354 [cluster="Unk.Any", file="PythonUtil.cs", label="Entry Unk.Any", span=""];
m21_334 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m21_591 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="214-214"];
m21_665 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1724-1724"];
m21_867 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label=status, span="1726-1726"];
m21_889 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="throw new ArgumentException(status, ''status'');", span="1759-1759"];
m21_868 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.ApiPending", span="1728-1728"];
m21_872 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.ApiCancelled", span="1733-1733"];
m21_876 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.Submitted", span="1738-1738"];
m21_878 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.Filled", span="1741-1741"];
m21_880 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.PartiallyFilled", span="1744-1744"];
m21_882 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.Error", span="1747-1747"];
m21_884 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.Inactive", span="1750-1750"];
m21_887 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.None", span="1754-1754"];
m21_869 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.PendingSubmit", span="1729-1729"];
m21_870 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.PreSubmitted", span="1730-1730"];
m21_871 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="return OrderStatus.New;", span="1731-1731"];
m21_873 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.PendingCancel", span="1734-1734"];
m21_874 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="IB.OrderStatus.Cancelled", span="1735-1735"];
m21_875 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="return OrderStatus.Canceled;", span="1736-1736"];
m21_877 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="return OrderStatus.Submitted;", span="1739-1739"];
m21_879 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="return OrderStatus.Filled;", span="1742-1742"];
m21_881 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="return OrderStatus.PartiallyFilled;", span="1745-1745"];
m21_883 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="return OrderStatus.Invalid;", span="1748-1748"];
m21_885 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.ConvertOrderStatus(): Inactive order'')", span="1751-1751"];
m21_886 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="return OrderStatus.None;", span="1752-1752"];
m21_888 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="return OrderStatus.None;", span="1755-1755"];
m21_890 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1724-1724"];
m21_1254 [cluster="System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", span="0-0"];
m21_1057 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="PythonUtil.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m21_747 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1682-1682"];
m21_836 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label=type, span="1684-1684"];
m21_849 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="1693-1693"];
m21_837 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="OrderType.Market", span="1686-1686"];
m21_839 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="OrderType.Limit", span="1687-1687"];
m21_841 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="OrderType.StopMarket", span="1688-1688"];
m21_843 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="OrderType.StopLimit", span="1689-1689"];
m21_845 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="OrderType.MarketOnOpen", span="1690-1690"];
m21_847 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="OrderType.MarketOnClose", span="1691-1691"];
m21_838 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="return IB.OrderType.Market;", span="1686-1686"];
m21_840 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="return IB.OrderType.Limit;", span="1687-1687"];
m21_842 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="return IB.OrderType.Stop;", span="1688-1688"];
m21_844 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="return IB.OrderType.StopLimit;", span="1689-1689"];
m21_846 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="return IB.OrderType.Market;", span="1690-1690"];
m21_848 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="return IB.OrderType.MarketOnClose;", span="1691-1691"];
m21_850 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1682-1682"];
m21_990 [cluster="System.Math.Round(decimal)", file="PythonUtil.cs", label="Entry System.Math.Round(decimal)", span="0-0"];
m21_1211 [cluster="Unk.GroupBy", file="PythonUtil.cs", label="Entry Unk.GroupBy", span=""];
m21_187 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PythonUtil.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m21_928 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="PythonUtil.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m21_145 [cluster="Unk.GetUsdConversion", file="PythonUtil.cs", label="Entry Unk.GetUsdConversion", span=""];
m21_343 [cluster="Unk.Format", file="PythonUtil.cs", label="Entry Unk.Format", span=""];
m21_105 [cluster="Unk.ConvertOrder", file="PythonUtil.cs", label="Entry Unk.ConvertOrder", span=""];
m21_781 [cluster="StopMarketOrder.cstr", file="PythonUtil.cs", label="Entry StopMarketOrder.cstr", span=""];
m21_1094 [cluster="string.IndexOf(string)", file="PythonUtil.cs", label="Entry string.IndexOf(string)", span="0-0"];
m21_149 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411"];
m21_150 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PythonUtil.cs", label="CheckIbGateway()", span="413-413"];
m21_151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PythonUtil.cs", label="return _cashBalances.Select(x => new Cash(x.Key, x.Value, GetUsdConversion(x.Key))).ToList();", span="415-415"];
m21_152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411"];
m21_303 [cluster="QuantConnect.Util.RateGate.Dispose()", file="PythonUtil.cs", label="Entry QuantConnect.Util.RateGate.Dispose()", span="196-196"];
m21_502 [cluster="Unk.reqMktData", file="PythonUtil.cs", label="Entry Unk.reqMktData", span=""];
m21_47 [cluster="lambda expression", file="PythonUtil.cs", label=Exception, span="242-242"];
m21_1307 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m21_100 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="PythonUtil.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m21_45 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence end.'')", span="236-236"];
m21_244 [cluster="Unk.setServerLogLevel", file="PythonUtil.cs", label="Entry Unk.setServerLogLevel", span=""];
m21_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="283-283"];
m21_1306 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="PythonUtil.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m21_603 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2040-2040"];
m21_1033 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label=symbols, span="2044-2044"];
m21_1034 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="CanSubscribe(symbol)", span="2046-2046"];
m21_1053 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label=Exception, span="2092-2092"];
m21_1036 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Request: '' + symbol.Value)", span="2050-2050"];
m21_1037 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="!_subscribedSymbols.ContainsKey(symbol)", span="2052-2052"];
m21_1038 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="var subscribeSymbol = symbol", span="2055-2055"];
m21_1039 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="symbol.ID.SecurityType == SecurityType.Option && symbol.IsCanonical()", span="2058-2058"];
m21_1040 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="subscribeSymbol = symbol.Underlying", span="2060-2060"];
m21_1041 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_underlyings.Add(subscribeSymbol, symbol)", span="2061-2061"];
m21_1042 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="symbol.ID.SecurityType == SecurityType.Future && symbol.IsCanonical()", span="2065-2065"];
m21_1050 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_subscribedSymbols[symbol] = id", span="2083-2083"];
m21_1052 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Processed: {0} ({1}) # {2}'', symbol.Value, contract.ToString(), id)", span="2086-2086"];
m21_1035 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label=_sync, span="2048-2048"];
m21_1045 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="var contract = CreateContract(subscribeSymbol)", span="2071-2071"];
m21_1051 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_subscribedTickets[id] = subscribeSymbol", span="2084-2084"];
m21_1043 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="return;", span="2067-2067"];
m21_1044 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="var id = GetNextTickerId()", span="2070-2070"];
m21_1046 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_requestInformation[id] = ''Subscribe: '' + contract", span="2073-2073"];
m21_1048 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_subscriptionTimes[id] = DateTime.UtcNow", span="2078-2078"];
m21_1049 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Client.ClientSocket.reqMktData(id, contract, ''101'', false, false, new List<TagValue>())", span="2081-2081"];
m21_1047 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_messagingRateLimiter.WaitToProceed()", span="2075-2075"];
m21_1054 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.Subscribe(): '' + err.Message)", span="2094-2094"];
m21_1055 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2040-2040"];
m21_245 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="PythonUtil.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m21_750 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1517-1517"];
m21_751 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="Order order", span="1524-1524"];
m21_752 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="var mappedSymbol = MapSymbol(contract)", span="1525-1525"];
m21_753 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="var direction = ConvertOrderDirection(ibOrder.Action)", span="1526-1526"];
m21_755 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="var orderType = ConvertOrderType(ibOrder)", span="1528-1528"];
m21_758 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="order = new MarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime() // not sure how to get this data\r\n                        )", span="1532-1535"];
m21_760 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="order = new MarketOnOpenOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime())", span="1539-1541"];
m21_762 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="order = new MarketOnCloseOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime()\r\n                        )", span="1545-1548"];
m21_764 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="order = new LimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1552-1556"];
m21_766 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="order = new StopMarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        new DateTime()\r\n                        )", span="1560-1564"];
m21_768 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="order = new StopLimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1568-1573"];
m21_770 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="order.BrokerId.Add(ibOrder.OrderId.ToString())", span="1580-1580"];
m21_754 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="var quantitySign = direction == OrderDirection.Sell ? -1 : 1", span="1527-1527"];
m21_756 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label=orderType, span="1529-1529"];
m21_769 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="throw new InvalidEnumArgumentException(''orderType'', (int) orderType, typeof (OrderType));", span="1577-1577"];
m21_757 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="OrderType.Market", span="1531-1531"];
m21_759 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="OrderType.MarketOnOpen", span="1538-1538"];
m21_761 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="OrderType.MarketOnClose", span="1544-1544"];
m21_763 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="OrderType.Limit", span="1551-1551"];
m21_765 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="OrderType.StopMarket", span="1559-1559"];
m21_767 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="OrderType.StopLimit", span="1567-1567"];
m21_771 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="return order;", span="1582-1582"];
m21_772 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1517-1517"];
m21_746 [cluster="System.Math.Abs(decimal)", file="PythonUtil.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m21_387 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="PythonUtil.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m21_119 [cluster="Unk.Where", file="PythonUtil.cs", label="Entry Unk.Where", span=""];
m21_354 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="815-815"];
m21_373 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="int timeout = 60", span="817-817"];
m21_376 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="_requestInformation[requestId] = ''GetContractDetails: '' + contract", span="822-822"];
m21_378 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails = (sender, args) =>\r\n            {\r\n                // ignore other requests\r\n                if (args.RequestId != requestId) return;\r\n                details = args.ContractDetails;\r\n                var uniqueKey = GetUniqueKey(contract);\r\n                _contractDetails.TryAdd(uniqueKey, details);\r\n                manualResetEvent.Set();\r\n                Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey);\r\n            }", span="827-836"];
m21_380 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="841-841"];
m21_374 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="ContractDetails details = null", span="819-819"];
m21_381 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="!manualResetEvent.WaitOne(timeout * 1000)", span="843-843"];
m21_382 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetContractDetails(): failed to receive response from IB within {0} seconds'', timeout)", span="845-845"];
m21_375 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="var requestId = GetNextRequestId()", span="820-820"];
m21_377 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="824-824"];
m21_379 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="_client.ContractDetails += clientOnContractDetails", span="838-838"];
m21_383 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="_client.ContractDetails -= clientOnContractDetails", span="849-849"];
m21_384 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="return details;", span="851-851"];
m21_385 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="815-815"];
m21_574 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m21_243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", span="610-610"];
m21_260 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="EventHandler<IB.AccountDownloadEndEventArgs> clientOnAccountDownloadEnd = (sender, args) =>\r\n            {\r\n                Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account);\r\n                _accountHoldingsResetEvent.Set();\r\n            }", span="613-617"];
m21_261 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="_client.AccountDownloadEnd += clientOnAccountDownloadEnd", span="618-618"];
m21_269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="643-643"];
m21_273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="652-652"];
m21_262 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="var firstAccountUpdateReceived = new ManualResetEvent(false)", span="622-622"];
m21_263 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="EventHandler<IB.UpdateAccountValueEventArgs> clientOnUpdateAccountValue = (sender, args) =>\r\n            {\r\n                firstAccountUpdateReceived.Set();\r\n            }", span="623-626"];
m21_266 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="firstAccountUpdateReceived.WaitOne(2500)", span="634-634"];
m21_264 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="_client.UpdateAccountValue += clientOnUpdateAccountValue", span="628-628"];
m21_270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="644-644"];
m21_274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="653-653"];
m21_265 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="_client.ClientSocket.reqAccountUpdates(true, _account)", span="631-631"];
m21_267 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="Thread.Sleep(2500)", span="638-638"];
m21_268 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="!_accountHoldingsResetEvent.WaitOne(15000)", span="640-640"];
m21_271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Operation took longer than 15 seconds.'')", span="646-646"];
m21_272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="return false;", span="648-648"];
m21_275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="return true;", span="655-655"];
m21_276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", span="610-610"];
m21_97 [cluster="System.Collections.Generic.List<T>.List()", file="PythonUtil.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m21_259 [cluster="Unk.processMsgs", file="PythonUtil.cs", label="Entry Unk.processMsgs", span=""];
m21_339 [cluster="Unk.placeOrder", file="PythonUtil.cs", label="Entry Unk.placeOrder", span=""];
m21_237 [cluster="Unk.eConnect", file="PythonUtil.cs", label="Entry Unk.eConnect", span=""];
m21_1058 [cluster="QuantConnect.Symbol.IsCanonical()", file="PythonUtil.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m21_42 [cluster="lambda expression", file="PythonUtil.cs", label="ResetGatewayConnection()", span="229-229"];
m21_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="return false;", span="274-274"];
m21_31 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", color=green, community=0, file="PythonUtil.cs", label="string.IsNullOrWhiteSpace(value)", prediction=13, span="96-96"];
m21_33 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", color=green, community=0, file="PythonUtil.cs", label="var baseScript = value.GetStringBetweenChars('\''', '\''')", prediction=14, span="102-102"];
m21_48 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in reset handler thread: '' + exception)", span="244-244"];
m21_29 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="203-212"];
m21_30 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", label="Entry QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", span="94-94"];
m21_32 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", color=green, community=0, file="PythonUtil.cs", label="return string.Empty;", prediction=13, span="98-98"];
m21_34 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", color=green, community=0, file="PythonUtil.cs", label="var length = Math.Max(baseScript.LastIndexOf('/'), baseScript.LastIndexOf('\\'))", prediction=16, span="103-103"];
m21_37 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", color=green, community=0, file="PythonUtil.cs", label="var directory = baseScript.Substring(0, 1 + length)", prediction=13, span="108-108"];
m21_38 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", color=green, community=0, file="PythonUtil.cs", label="var lines = value.Substring(1, value.Length - 1)\r\n                .Split(new[] { ''\'  File '' }, StringSplitOptions.RemoveEmptyEntries)\r\n                .Where(x => x.Contains(directory))\r\n                .Where(x => x.Split(',').Length > 2)\r\n                .Select(x =>\r\n                {\r\n                    var info = x.Replace(directory, string.Empty).Split(',');\r\n                    var line = info[0].GetStringBetweenChars('\''', '\''');\r\n                    line = $'' in {line}:{info[1].Trim()}'';\r\n\r\n                    info = info[2].Split(new[] { ''\\n'' }, StringSplitOptions.RemoveEmptyEntries);\r\n                    line = $'' {info[0].Replace(''in'', ''at'')}{line}'';\r\n\r\n                    // If we have the exact statement, add it to the error line\r\n                    if (info.Length > 2) line += $'' :: {info[1].Trim()}'';\r\n\r\n                    return line;\r\n                })", prediction=18, span="111-128"];
m21_39 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", label="var errorLine = string.Join(Environment.NewLine, lines)", span="130-130"];
m21_40 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", label="return string.IsNullOrWhiteSpace(errorLine)\r\n                ? string.Empty\r\n                : $''{Environment.NewLine}{errorLine}{Environment.NewLine}'';", span="132-134"];
m21_46 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread ended.'')", span="240-240"];
m21_41 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", file="PythonUtil.cs", label="Exit QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", span="94-94"];
m21_43 [cluster="string.GetStringBetweenChars(char, char)", file="PythonUtil.cs", label="Entry string.GetStringBetweenChars(char, char)", span="899-899"];
m21_49 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="215-246"];
m21_103 [cluster="lambda expression", file="PythonUtil.cs", label="orders.Add(ConvertOrder(args.Order, args.Contract))", span="344-344"];
m21_108 [cluster="lambda expression", file="PythonUtil.cs", label="manualResetEvent.Set()", span="349-349"];
m21_102 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="341-345"];
m21_104 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="341-345"];
m21_107 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="346-350"];
m21_109 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="346-350"];
m21_123 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="378-378"];
m21_127 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="378-378"];
m21_130 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="381-400"];
m21_146 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="400-400"];
m21_124 [cluster="lambda expression", file="PythonUtil.cs", label="ObjectActivator.Clone(x.Value)", span="378-378"];
m21_125 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="378-378"];
m21_128 [cluster="lambda expression", file="PythonUtil.cs", label="x.Quantity != 0", span="378-378"];
m21_129 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="378-378"];
m21_131 [cluster="lambda expression", file="PythonUtil.cs", label="local.Type != SecurityType.Forex", span="384-384"];
m21_132 [cluster="lambda expression", file="PythonUtil.cs", label="local.ConversionRate = 1m", span="387-387"];
m21_134 [cluster="lambda expression", file="PythonUtil.cs", label="var currency = local.Symbol.Value.Substring(3)", span="391-391"];
m21_136 [cluster="lambda expression", file="PythonUtil.cs", label="local.ConversionRate = 1m", span="394-394"];
m21_138 [cluster="lambda expression", file="PythonUtil.cs", label="return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));", span="399-399"];
m21_133 [cluster="lambda expression", file="PythonUtil.cs", label="return null;", span="388-388"];
m21_135 [cluster="lambda expression", file="PythonUtil.cs", label="currency == ''USD''", span="392-392"];
m21_143 [cluster="lambda expression", file="PythonUtil.cs", label="local.ConversionRate = GetUsdConversion(currency)", span="399-399"];
m21_137 [cluster="lambda expression", file="PythonUtil.cs", label="return null;", span="395-395"];
m21_139 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="381-400"];
m21_142 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="399-399"];
m21_144 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="399-399"];
m21_147 [cluster="lambda expression", file="PythonUtil.cs", label="x != null", span="400-400"];
m21_148 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="400-400"];
m21_153 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="415-415"];
m21_154 [cluster="lambda expression", file="PythonUtil.cs", label="new Cash(x.Key, x.Value, GetUsdConversion(x.Key))", span="415-415"];
m21_155 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="415-415"];
m21_185 [cluster="lambda expression", file="PythonUtil.cs", label="details.Add(args)", span="450-450"];
m21_181 [cluster="lambda expression", file="PythonUtil.cs", label="manualResetEvent.Set()", span="446-446"];
m21_180 [cluster="lambda expression", file="PythonUtil.cs", label="args.RequestId == requestId", span="446-446"];
m21_184 [cluster="lambda expression", file="PythonUtil.cs", label="args.RequestId == requestId", span="450-450"];
m21_179 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="444-447"];
m21_182 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="444-447"];
m21_183 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="448-451"];
m21_186 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="448-451"];
m21_252 [cluster="lambda expression", file="PythonUtil.cs", label="reader.processMsgs()", span="510-510"];
m21_254 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error)", span="515-515"];
m21_248 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="501-520"];
m21_249 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId)", span="503-503"];
m21_250 [cluster="lambda expression", file="PythonUtil.cs", label="_client.ClientSocket.IsConnected()", span="505-505"];
m21_251 [cluster="lambda expression", file="PythonUtil.cs", label="_signal.waitForSignal()", span="509-509"];
m21_255 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId)", span="519-519"];
m21_253 [cluster="lambda expression", file="PythonUtil.cs", label=Exception, span="512-512"];
m21_256 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="501-520"];
m21_279 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account)", span="615-615"];
m21_283 [cluster="lambda expression", file="PythonUtil.cs", label="firstAccountUpdateReceived.Set()", span="625-625"];
m21_278 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="613-617"];
m21_280 [cluster="lambda expression", file="PythonUtil.cs", label="_accountHoldingsResetEvent.Set()", span="616-616"];
m21_281 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="613-617"];
m21_282 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="623-626"];
m21_284 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="623-626"];
m21_392 [cluster="lambda expression", file="PythonUtil.cs", label="var uniqueKey = GetUniqueKey(contract)", span="832-832"];
m21_389 [cluster="lambda expression", file="PythonUtil.cs", label="args.RequestId != requestId", span="830-830"];
m21_394 [cluster="lambda expression", file="PythonUtil.cs", label="manualResetEvent.Set()", span="834-834"];
m21_391 [cluster="lambda expression", file="PythonUtil.cs", label="details = args.ContractDetails", span="831-831"];
m21_388 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="827-836"];
m21_390 [cluster="lambda expression", file="PythonUtil.cs", label="return;", span="830-830"];
m21_393 [cluster="lambda expression", file="PythonUtil.cs", label="_contractDetails.TryAdd(uniqueKey, details)", span="833-833"];
m21_396 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="827-836"];
m21_395 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey)", span="835-835"];
m21_412 [cluster="lambda expression", file="PythonUtil.cs", label="Array.IndexOf(exchanges, e)", span="864-864"];
m21_408 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="863-863"];
m21_411 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="864-864"];
m21_409 [cluster="lambda expression", file="PythonUtil.cs", label="details.Summary.Exchange", span="863-863"];
m21_410 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="863-863"];
m21_413 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="864-864"];
m21_435 [cluster="lambda expression", file="PythonUtil.cs", label="manualResetEvent.Set()", span="884-884"];
m21_432 [cluster="lambda expression", file="PythonUtil.cs", label="contractDetails.Add(args.ContractDetails)", span="881-881"];
m21_431 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="881-881"];
m21_433 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="881-881"];
m21_434 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="884-884"];
m21_436 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="884-884"];
m21_515 [cluster="lambda expression", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency)", span="961-961"];
m21_510 [cluster="lambda expression", file="PythonUtil.cs", label="x == invertedSymbol || x == normalSymbol", span="920-920"];
m21_509 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="920-920"];
m21_516 [cluster="lambda expression", file="PythonUtil.cs", label="manualResetEvent.Set()", span="962-962"];
m21_525 [cluster="lambda expression", file="PythonUtil.cs", label="manualResetEvent.Set()", span="1007-1007"];
m21_513 [cluster="lambda expression", file="PythonUtil.cs", label="args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK", span="958-958"];
m21_514 [cluster="lambda expression", file="PythonUtil.cs", label="rate = Convert.ToDecimal(args.Price)", span="960-960"];
m21_521 [cluster="lambda expression", file="PythonUtil.cs", label="data.Add(args)", span="999-999"];
m21_520 [cluster="lambda expression", file="PythonUtil.cs", label="args.RequestId == historicalTicker", span="997-997"];
m21_524 [cluster="lambda expression", file="PythonUtil.cs", label="args.RequestId == historicalTicker", span="1005-1005"];
m21_528 [cluster="lambda expression", file="PythonUtil.cs", label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="1013-1013"];
m21_531 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="1044-1044"];
m21_511 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="920-920"];
m21_512 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="956-964"];
m21_517 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="956-964"];
m21_519 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="995-1001"];
m21_522 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="995-1001"];
m21_523 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="1003-1009"];
m21_526 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="1003-1009"];
m21_527 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="1011-1018"];
m21_529 [cluster="lambda expression", file="PythonUtil.cs", label="pacingViolation = true", span="1016-1016"];
m21_530 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="1011-1018"];
m21_532 [cluster="lambda expression", file="PythonUtil.cs", label="x.Bar.Time", span="1044-1044"];
m21_533 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="1044-1044"];
m21_621 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="1231-1231"];
m21_622 [cluster="lambda expression", file="PythonUtil.cs", label="TryWaitForReconnect()", span="1231-1231"];
m21_623 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="1231-1231"];
m21_1215 [cluster="lambda expression", file="PythonUtil.cs", label="securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2352-2352"];
m21_1225 [cluster="lambda expression", file="PythonUtil.cs", label="exchangeFilter(g.Key)", span="2386-2386"];
m21_1218 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2384-2384"];
m21_1221 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2385-2385"];
m21_1224 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2386-2386"];
m21_1214 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2352-2352"];
m21_1216 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2352-2352"];
m21_1219 [cluster="lambda expression", file="PythonUtil.cs", label="x.Summary", span="2384-2384"];
m21_1220 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2384-2384"];
m21_1222 [cluster="lambda expression", file="PythonUtil.cs", label="x.Exchange", span="2385-2385"];
m21_1223 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2385-2385"];
m21_1226 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2386-2386"];
m21_1255 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2438-2438"];
m21_1258 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2439-2439"];
m21_1261 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2440-2447"];
m21_1267 [cluster="lambda expression", file="PythonUtil.cs", label="bar.Time >= requestStartTime && bar.EndTime <= requestEndTime", span="2459-2459"];
m21_1266 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2459-2459"];
m21_1256 [cluster="lambda expression", file="PythonUtil.cs", label="bid.Time", span="2438-2438"];
m21_1257 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2438-2438"];
m21_1259 [cluster="lambda expression", file="PythonUtil.cs", label="ask.Time", span="2439-2439"];
m21_1260 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2439-2439"];
m21_1262 [cluster="lambda expression", file="PythonUtil.cs", label="new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period)", span="2440-2447"];
m21_1263 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2440-2447"];
m21_1268 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2459-2459"];
m21_1310 [cluster="lambda expression", file="PythonUtil.cs", label="var bar = ConvertTradeBar(request.Symbol, request.Resolution, args)", span="2498-2498"];
m21_1311 [cluster="lambda expression", file="PythonUtil.cs", label="request.Resolution != Resolution.Daily", span="2499-2499"];
m21_1312 [cluster="lambda expression", file="PythonUtil.cs", label="bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone)", span="2501-2501"];
m21_1314 [cluster="lambda expression", file="PythonUtil.cs", label="dataDownloading.Set()", span="2505-2505"];
m21_1318 [cluster="lambda expression", file="PythonUtil.cs", label="dataDownloaded.Set()", span="2513-2513"];
m21_1324 [cluster="lambda expression", file="PythonUtil.cs", label="dataDownloaded.Set()", span="2526-2526"];
m21_1313 [cluster="lambda expression", file="PythonUtil.cs", label="historyPiece.Add(bar)", span="2504-2504"];
m21_1309 [cluster="lambda expression", file="PythonUtil.cs", label="args.RequestId == historicalTicker", span="2496-2496"];
m21_1317 [cluster="lambda expression", file="PythonUtil.cs", label="args.RequestId == historicalTicker", span="2511-2511"];
m21_1321 [cluster="lambda expression", file="PythonUtil.cs", label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="2519-2519"];
m21_1323 [cluster="lambda expression", file="PythonUtil.cs", label="args.Code == 162 && args.Message.Contains(''no data'')", span="2524-2524"];
m21_1326 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2566-2566"];
m21_1308 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2494-2507"];
m21_1315 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2494-2507"];
m21_1316 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2509-2515"];
m21_1319 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2509-2515"];
m21_1320 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2517-2528"];
m21_1322 [cluster="lambda expression", file="PythonUtil.cs", label="pacing = true", span="2522-2522"];
m21_1325 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2517-2528"];
m21_1327 [cluster="lambda expression", file="PythonUtil.cs", label="x.Time", span="2566-2566"];
m21_1328 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2566-2566"];
m21_1356 [cluster="lambda expression", file="PythonUtil.cs", label="x.Contains(separatorLine)", span="2609-2609"];
m21_1355 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2609-2609"];
m21_1358 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="2611-2611"];
m21_1357 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2609-2609"];
m21_1359 [cluster="lambda expression", file="PythonUtil.cs", label="line.Contains(''End this session and let the other session proceed'')", span="2611-2611"];
m21_1360 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="2611-2611"];
m21_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149"];
m21_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="IBPlaceOrder(order, true)", span="268-268"];
m21_52 [cluster="QuantConnect.Logging.Log.Error(string, bool)", color=green, community=0, file="PythonUtil.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", prediction=13, span="65-65"];
m21_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", prediction=13, span="262-262"];
m21_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="262-262"];
m21_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", color=green, community=0, file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", prediction=21, span="705-705"];
m21_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", prediction=13, span="283-283"];
m21_63 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", prediction=13, span="287-287"];
m21_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs", label="return true;", prediction=24, span="269-269"];
m21_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label=Exception, span="271-271"];
m21_64 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs", label="IBPlaceOrder(order, false)", prediction=13, span="289-289"];
m21_65 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs", label=Exception, prediction=13, span="291-291"];
m21_66 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.UpdateOrder(): '' + err)", prediction=13, span="293-293"];
m21_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PythonUtil.cs", label="return false;", prediction=13, span="294-294"];
m21_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="return true;", span="296-296"];
m21_958 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="PythonUtil.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m21_1265 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="PythonUtil.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m21_748 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1934-1934"];
m21_986 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs", label="minTick == 0", span="1936-1936"];
m21_987 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs", label="return minTick;", span="1936-1936"];
m21_988 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs", label="return Math.Round(input/minTick)*minTick;", span="1937-1937"];
m21_989 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1934-1934"];
m21_98 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="PythonUtil.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m21_779 [cluster="MarketOnCloseOrder.cstr", file="PythonUtil.cs", label="Entry MarketOnCloseOrder.cstr", span=""];
m21_1014 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="1999-1999"];
m21_1015 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="PythonUtil.cs", label="_brokerTimeDiff = e.CurrentTimeUtc.Subtract(DateTime.UtcNow)", span="2002-2002"];
m21_1016 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="1999-1999"];
m21_812 [cluster="Contract.cstr", file="PythonUtil.cs", label="Entry Contract.cstr", span=""];
m21_1085 [cluster="System.Convert.ToInt32(double)", file="PythonUtil.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m21_499 [cluster="Unk.Create", file="PythonUtil.cs", label="Entry Unk.Create", span=""];
m21_616 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1977-1977"];
m21_1003 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="bool result", span="1979-1979"];
m21_1004 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="var time = DateTime.UtcNow.ConvertFromUtc(TimeZones.NewYork)", span="1980-1980"];
m21_1005 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="time.DayOfWeek == DayOfWeek.Saturday", span="1983-1983"];
m21_1007 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="var timeOfDay = time.TimeOfDay", span="1989-1989"];
m21_1006 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="result = true", span="1985-1985"];
m21_1008 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="result = timeOfDay > new TimeSpan(23, 0, 0) || timeOfDay < new TimeSpan(1, 30, 0)", span="1991-1991"];
m21_1009 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes(): '' + result)", span="1994-1994"];
m21_1010 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="return result;", span="1996-1996"];
m21_1011 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1977-1977"];
m21_82 [cluster="Unk.cancelOrder", file="PythonUtil.cs", label="Entry Unk.cancelOrder", span=""];
m21_866 [cluster="ArgumentException.cstr", file="PythonUtil.cs", label="Entry ArgumentException.cstr", span=""];
m21_500 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1958-1958"];
m21_999 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="PythonUtil.cs", label="return Interlocked.Increment(ref _nextTickerId);", span="1960-1960"];
m21_1000 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1958-1958"];
m21_1149 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2262-2262"];
m21_1150 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="Symbol symbol", span="2264-2264"];
m21_1151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2266-2266"];
m21_1156 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.Quantity = AdjustQuantity(securityType, e.Size)", span="2273-2273"];
m21_1160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="e.Field", span="2278-2278"];
m21_1183 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="!_openInterests.ContainsKey(symbol) || _openInterests[symbol] != e.Size", span="2320-2320"];
m21_1185 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.Value = e.Size", span="2323-2323"];
m21_1186 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="_openInterests[symbol] = e.Size", span="2324-2324"];
m21_1152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="return;", span="2266-2266"];
m21_1153 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="var tick = new Tick()", span="2268-2268"];
m21_1154 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.Symbol = symbol", span="2271-2271"];
m21_1155 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="var securityType = symbol.ID.SecurityType", span="2272-2272"];
m21_1157 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.Time = GetRealTimeTickTime(symbol)", span="2274-2274"];
m21_1163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="_lastBidPrices.TryGetValue(symbol, out tick.BidPrice)", span="2284-2284"];
m21_1164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="_lastBidSizes[symbol] = (int)tick.Quantity", span="2285-2285"];
m21_1169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="_lastAskPrices.TryGetValue(symbol, out tick.AskPrice)", span="2295-2295"];
m21_1170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="_lastAskSizes[symbol] = (int)tick.Quantity", span="2296-2296"];
m21_1176 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="_lastPrices.TryGetValue(symbol, out lastPrice)", span="2307-2307"];
m21_1177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="_lastVolumes[symbol] = (int)tick.Quantity", span="2308-2308"];
m21_1182 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="symbol.ID.SecurityType == SecurityType.Option || symbol.ID.SecurityType == SecurityType.Future", span="2318-2318"];
m21_1158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.Quantity == 0", span="2276-2276"];
m21_1162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.TickType = TickType.Quote", span="2282-2282"];
m21_1165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.Value = tick.BidPrice", span="2287-2287"];
m21_1166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.BidSize = tick.Quantity", span="2288-2288"];
m21_1168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.TickType = TickType.Quote", span="2293-2293"];
m21_1171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.Value = tick.AskPrice", span="2298-2298"];
m21_1172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.AskSize = tick.Quantity", span="2299-2299"];
m21_1174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.TickType = TickType.Trade", span="2304-2304"];
m21_1178 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.Value = lastPrice", span="2310-2310"];
m21_1184 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.TickType = TickType.OpenInterest", span="2322-2322"];
m21_1189 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="tick.IsValid()", span="2333-2333"];
m21_1190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="_ticks.Add(tick)", span="2333-2333"];
m21_1159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="return;", span="2276-2276"];
m21_1161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.BID_SIZE", span="2280-2280"];
m21_1167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.ASK_SIZE", span="2291-2291"];
m21_1173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.LAST_SIZE", span="2303-2303"];
m21_1179 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.OPEN_INTEREST", span="2314-2314"];
m21_1187 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="return;", span="2330-2330"];
m21_1175 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="decimal lastPrice", span="2306-2306"];
m21_1180 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.OPTION_CALL_OPEN_INTEREST", span="2315-2315"];
m21_1181 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.OPTION_PUT_OPEN_INTEREST", span="2316-2316"];
m21_1188 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label=_ticks, span="2332-2332"];
m21_1191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2262-2262"];
m21_969 [cluster="Unk.GetCurrencySymbol", file="PythonUtil.cs", label="Entry Unk.GetCurrencySymbol", span=""];
m21_774 [cluster="Unk.ConvertOrderDirection", file="PythonUtil.cs", label="Entry Unk.ConvertOrderDirection", span=""];
m21_1032 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="PythonUtil.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="424-424"];
m21_568 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="PythonUtil.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m21_669 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1392-1392"];
m21_696 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="var orderFee = 0m", span="1396-1396"];
m21_697 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="currentQuantityFilled == totalQuantityFilled", span="1397-1397"];
m21_698 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="var security = _securityProvider.GetSecurity(order.Symbol)", span="1399-1399"];
m21_699 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="orderFee = security.FeeModel.GetOrderFee(security, order)", span="1400-1400"];
m21_700 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="var fillQuantity = order.Direction == OrderDirection.Buy ? currentQuantityFilled : -currentQuantityFilled", span="1404-1404"];
m21_701 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="order.PriceCurrency = _securityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="1405-1405"];
m21_702 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee, ''Interactive Brokers Order Fill Event'')\r\n            {\r\n                Status = status,\r\n                FillPrice = price,\r\n                FillQuantity = fillQuantity\r\n            }", span="1406-1411"];
m21_703 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="remainingQuantity != 0", span="1412-1412"];
m21_704 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="orderEvent.Message += '' - '' + remainingQuantity + '' remaining''", span="1414-1414"];
m21_705 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="OnOrderEvent(orderEvent)", span="1418-1418"];
m21_706 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1392-1392"];
m21_106 [cluster="Unk.Add", file="PythonUtil.cs", label="Entry Unk.Add", span=""];
m21_175 [cluster="ExecutionFilter.cstr", file="PythonUtil.cs", label="Entry ExecutionFilter.cstr", span=""];
m21_81 [cluster="int.Parse(string)", file="PythonUtil.cs", label="Entry int.Parse(string)", span="0-0"];
m21_236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661"];
m21_285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs", label="_client.ClientSocket.eDisconnect()", span="663-663"];
m21_286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs", label="_messageProcessingThread != null", span="665-665"];
m21_287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs", label="_signal.issueSignal()", span="667-667"];
m21_288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs", label="_messageProcessingThread.Join()", span="668-668"];
m21_289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs", label="_messageProcessingThread = null", span="669-669"];
m21_290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661"];
m21_776 [cluster="MarketOrder.cstr", file="PythonUtil.cs", label="Entry MarketOrder.cstr", span=""];
m21_960 [cluster="TradeBar.cstr", file="PythonUtil.cs", label="Entry TradeBar.cstr", span=""];
m21_302 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", span="424-424"];
m21_1106 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2191-2191"];
m21_1107 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="Symbol symbol", span="2193-2193"];
m21_1108 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2195-2195"];
m21_1110 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="var price = Convert.ToDecimal(e.Price)", span="2197-2197"];
m21_1116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="e.Price <= 0 &&\r\n                securityType != SecurityType.Future &&\r\n                securityType != SecurityType.Option", span="2207-2209"];
m21_1119 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="e.Field", span="2213-2213"];
m21_1109 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="return;", span="2195-2195"];
m21_1112 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.Symbol = symbol", span="2202-2202"];
m21_1113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.Time = GetRealTimeTickTime(symbol)", span="2203-2203"];
m21_1114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="var securityType = symbol.ID.SecurityType", span="2204-2204"];
m21_1123 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="_lastBidSizes.TryGetValue(symbol, out quantity)", span="2219-2219"];
m21_1125 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="_lastBidPrices[symbol] = price", span="2221-2221"];
m21_1129 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="_lastAskSizes.TryGetValue(symbol, out quantity)", span="2228-2228"];
m21_1131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="_lastAskPrices[symbol] = price", span="2230-2230"];
m21_1135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="_lastPrices[symbol] = price", span="2237-2237"];
m21_1111 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="var tick = new Tick()", span="2199-2199"];
m21_1115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.Value = price", span="2205-2205"];
m21_1122 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.BidPrice = price", span="2218-2218"];
m21_1128 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.AskPrice = price", span="2227-2227"];
m21_1134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.Value = price", span="2236-2236"];
m21_1121 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.TickType = TickType.Quote", span="2217-2217"];
m21_1124 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.Quantity = quantity", span="2220-2220"];
m21_1127 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.TickType = TickType.Quote", span="2226-2226"];
m21_1130 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.Quantity = quantity", span="2229-2229"];
m21_1133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.TickType = TickType.Trade", span="2235-2235"];
m21_1138 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="tick.IsValid()", span="2245-2245"];
m21_1139 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="_ticks.Add(tick)", span="2245-2245"];
m21_1117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="return;", span="2210-2210"];
m21_1118 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="int quantity", span="2212-2212"];
m21_1120 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.BID", span="2215-2215"];
m21_1126 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.ASK", span="2224-2224"];
m21_1132 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="IBApi.TickType.LAST", span="2233-2233"];
m21_1136 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="return;", span="2241-2241"];
m21_1137 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label=_ticks, span="2244-2244"];
m21_1140 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2191-2191"];
m21_257 [cluster="Unk.IsConnected", file="PythonUtil.cs", label="Entry Unk.IsConnected", span=""];
m21_1095 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2176-2176"];
m21_1096 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs", label="var time = DateTime.UtcNow.Add(_brokerTimeDiff)", span="2178-2178"];
m21_1098 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="2181-2181"];
m21_1099 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType).TimeZone", span="2184-2184"];
m21_1100 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="2185-2185"];
m21_1097 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs", label="DateTimeZone exchangeTimeZone", span="2180-2180"];
m21_1101 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs", label="return time.ConvertFromUtc(exchangeTimeZone);", span="2188-2188"];
m21_1102 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2176-2176"];
m21_50 [cluster="string.Join(string, params object[])", file="PythonUtil.cs", label="Entry string.Join(string, params object[])", span="0-0"];
m21_959 [cluster="Unk.ParseExact", file="PythonUtil.cs", label="Entry Unk.ParseExact", span=""];
m21_1305 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m21_694 [cluster="Unk.ToInt32", file="PythonUtil.cs", label="Entry Unk.ToInt32", span=""];
m21_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="156-156"];
m21_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="156-156"];
m21_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="308-308"];
m21_633 [cluster="decimal.Parse(string, System.IFormatProvider)", file="PythonUtil.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m21_1349 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m21_636 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="151-151"];
m21_996 [cluster="System.Threading.Interlocked.Increment(ref int)", file="PythonUtil.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m21_1353 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m21_953 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1874-1874"];
m21_954 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="PythonUtil.cs", label="var time = resolution != Resolution.Daily ?\r\n                Time.UnixTimeStampToDateTime(Convert.ToDouble(historyBar.Bar.Time, CultureInfo.InvariantCulture)) :\r\n                DateTime.ParseExact(historyBar.Bar.Time, ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="1876-1878"];
m21_955 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="PythonUtil.cs", label="return new TradeBar(time, symbol, (decimal)historyBar.Bar.Open, (decimal)historyBar.Bar.High, (decimal)historyBar.Bar.Low,\r\n                (decimal)historyBar.Bar.Close, historyBar.Bar.Volume, resolution.ToTimeSpan());", span="1880-1881"];
m21_956 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1874-1874"];
m21_156 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="PythonUtil.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m21_338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1471-1471"];
m21_728 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="var ibOrder = new IBApi.Order\r\n            {\r\n                ClientId = _clientId,\r\n                OrderId = ibOrderId,\r\n                Account = _account,\r\n                Action = ConvertOrderDirection(order.Direction),\r\n                TotalQuantity = (int)Math.Abs(order.Quantity),\r\n                OrderType = ConvertOrderType(order.Type),\r\n                AllOrNone = false,\r\n                Tif = IB.TimeInForce.GoodTillCancel,\r\n                Transmit = true,\r\n                Rule80A = _agentDescription\r\n            }", span="1473-1485"];
m21_729 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="order.Type == OrderType.MarketOnOpen", span="1487-1487"];
m21_731 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="var limitOrder = order as LimitOrder", span="1492-1492"];
m21_732 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="var stopMarketOrder = order as StopMarketOrder", span="1493-1493"];
m21_733 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="var stopLimitOrder = order as StopLimitOrder", span="1494-1494"];
m21_735 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(limitOrder.LimitPrice, GetMinTick(contract)))", span="1497-1497"];
m21_737 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopMarketOrder.StopPrice, GetMinTick(contract)))", span="1501-1501"];
m21_739 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="var minTick = GetMinTick(contract)", span="1505-1505"];
m21_730 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="ibOrder.Tif = IB.TimeInForce.MarketOnOpen", span="1489-1489"];
m21_740 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.LimitPrice, minTick))", span="1506-1506"];
m21_742 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="return ibOrder;", span="1514-1514"];
m21_734 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="limitOrder != null", span="1495-1495"];
m21_736 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="stopMarketOrder != null", span="1499-1499"];
m21_738 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="stopLimitOrder != null", span="1503-1503"];
m21_741 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.StopPrice, minTick))", span="1507-1507"];
m21_743 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1471-1471"];
m21_782 [cluster="StopLimitOrder.cstr", file="PythonUtil.cs", label="Entry StopLimitOrder.cstr", span=""];
m21_247 [cluster="System.Exception.Exception(string, System.Exception)", file="PythonUtil.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m21_1348 [cluster="System.IO.File.GetLastWriteTimeUtc(string)", file="PythonUtil.cs", label="Entry System.IO.File.GetLastWriteTimeUtc(string)", span="0-0"];
m21_635 [cluster="QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", file="PythonUtil.cs", label="Entry QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", span="37-37"];
m21_1017 [cluster="System.DateTime.Subtract(System.DateTime)", file="PythonUtil.cs", label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0"];
m21_1060 [cluster="QuantConnect.Util.RateGate.WaitToProceed()", file="PythonUtil.cs", label="Entry QuantConnect.Util.RateGate.WaitToProceed()", span="181-181"];
m21_1209 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", span="144-144"];
m21_36 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", color=green, community=0, file="PythonUtil.cs", label="return string.Empty;", prediction=29, span="106-106"];
m21_1143 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2251-2251"];
m21_1144 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs", label=type, span="2253-2253"];
m21_1146 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs", label="return size * 100;", span="2256-2256"];
m21_1147 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs", label="return size;", span="2258-2258"];
m21_1145 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs", label="SecurityType.Equity", span="2255-2255"];
m21_1148 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2251-2251"];
m21_1304 [cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", file="PythonUtil.cs", label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0"];
m21_777 [cluster="System.DateTime.DateTime()", file="PythonUtil.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m21_118 [cluster="Unk.Select", file="PythonUtil.cs", label="Entry Unk.Select", span=""];
m21_234 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="PythonUtil.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m21_177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1953-1953"];
m21_997 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="PythonUtil.cs", label="return Interlocked.Increment(ref _nextRequestId);", span="1955-1955"];
m21_998 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1953-1953"];
m21_101 [cluster="System.TimeoutException.TimeoutException(string)", file="PythonUtil.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m21_35 [cluster="QuantConnect.Util.PythonUtil.PythonExceptionStackParser(string)", color=green, community=0, file="PythonUtil.cs", label="length < 0", prediction=30, span="104-104"];
m21_26 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.InteractiveBrokersClient(EReaderSignal)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.InteractiveBrokersClient(EReaderSignal)", span="416-416"];
m21_386 [cluster="Unk.reqContractDetails", file="PythonUtil.cs", label="Entry Unk.reqContractDetails", span=""];
m21_1012 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="PythonUtil.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m21_995 [cluster="System.Threading.Thread.Yield()", file="PythonUtil.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m21_1302 [cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="PythonUtil.cs", label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m21_246 [cluster="string.Contains(string)", file="PythonUtil.cs", label="Entry string.Contains(string)", span="0-0"];
m21_110 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374"];
m21_111 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs", label="CheckIbGateway()", span="376-376"];
m21_112 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs", label="var holdings = _accountHoldings.Select(x => ObjectActivator.Clone(x.Value)).Where(x => x.Quantity != 0).ToList()", span="378-378"];
m21_113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs", label="var tasks = holdings.Select(local =>\r\n            {\r\n                // we need to resolve the conversion rate for non-USD currencies\r\n                if (local.Type != SecurityType.Forex)\r\n                {\r\n                    // this assumes all non-forex are us denominated, we should add the currency to 'holding'\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n                // if quote currency is in USD don't bother making the request\r\n                var currency = local.Symbol.Value.Substring(3);\r\n                if (currency == ''USD'')\r\n                {\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n\r\n                // this will allow us to do this in parallel\r\n                return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));\r\n            }).Where(x => x != null).ToArray()", span="381-400"];
m21_115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs", label="return holdings;", span="404-404"];
m21_114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs", label="Task.WaitAll(tasks, 5000)", span="402-402"];
m21_116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374"];
m21_1345 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PythonUtil.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m21_620 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="PythonUtil.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m21_720 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="PythonUtil.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m21_693 [cluster="Unk.Error", file="PythonUtil.cs", label="Entry Unk.Error", span=""];
m21_1303 [cluster="System.Convert.ToInt32(bool)", file="PythonUtil.cs", label="Entry System.Convert.ToInt32(bool)", span="0-0"];
m21_501 [cluster="Unk.Trace", file="PythonUtil.cs", label="Entry Unk.Trace", span=""];
m21_783 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", file="PythonUtil.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", span="0-0"];
m21_157 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="908-908"];
m21_437 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="currency == ''USD''", span="910-910"];
m21_439 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Getting USD conversion for '' + currency)", span="915-915"];
m21_440 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var invertedSymbol = ''USD'' + currency", span="918-918"];
m21_441 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var normalSymbol = currency + ''USD''", span="919-919"];
m21_444 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="throw new Exception(''Unable to resolve currency conversion pair for currency: '' + currency);", span="923-923"];
m21_452 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="throw new Exception(''Unable to resolve conversion for currency: '' + currency);", span="939-939"];
m21_458 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="EventHandler<IB.TickPriceEventArgs> clientOnTickPrice = (sender, args) =>\r\n            {\r\n                if (args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK)\r\n                {\r\n                    rate = Convert.ToDecimal(args.Price);\r\n                    Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency);\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="956-964"];
m21_492 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Last historical price rate is '' + rate + '' for currency '' + currency)", span="1052-1052"];
m21_438 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="return 1m;", span="912-912"];
m21_442 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var currencyPair = Currencies.CurrencyPairs.FirstOrDefault(x => x == invertedSymbol || x == normalSymbol)", span="920-920"];
m21_445 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="bool inverted = invertedSymbol == currencyPair", span="927-927"];
m21_443 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="currencyPair == null", span="921-921"];
m21_446 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var symbol = Symbol.Create(currencyPair, SecurityType.Forex, Market.FXCM)", span="928-928"];
m21_459 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting market data for '' + currencyPair)", span="966-966"];
m21_476 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting historical data for '' + currencyPair)", span="1020-1020"];
m21_490 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="throw new Exception(''Unable to get recent quote for '' + currencyPair);", span="1048-1048"];
m21_497 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="return inverted ? 1 / rate : rate;", span="1063-1063"];
m21_447 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var contract = CreateContract(symbol)", span="929-929"];
m21_448 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="ContractDetails details", span="931-931"];
m21_449 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="!_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="932-932"];
m21_450 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="details = GetContractDetails(contract)", span="934-934"];
m21_457 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_requestInformation[marketDataTicker] = ''GetUsdConversion.MarketData: '' + contract", span="954-954"];
m21_461 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.ClientSocket.reqMktData(marketDataTicker, contract, string.Empty, true, false, new List<TagValue>())", span="969-969"];
m21_472 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_requestInformation[historicalTicker] = ''GetUsdConversion.Historical: '' + contract", span="993-993"];
m21_481 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.ClientSocket.reqHistoricalData(historicalTicker, contract, DateTime.UtcNow.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                        requestSpan, IB.BarSize.OneSecond, HistoricalDataType.Ask, 0, 2, false, new List<TagValue>())", span="1027-1028"];
m21_451 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="details == null", span="937-937"];
m21_453 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var rate = 0m", span="943-943"];
m21_454 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="944-944"];
m21_455 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="int requestTimeout = 60", span="949-949"];
m21_462 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="971-971"];
m21_469 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="manualResetEvent.Reset()", span="988-988"];
m21_474 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            manualResetEvent.Set();\r\n                        }\r\n                    }", span="1003-1009"];
m21_482 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="1030-1030"];
m21_456 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var marketDataTicker = GetNextTickerId()", span="952-952"];
m21_463 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="973-973"];
m21_483 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="1032-1032"];
m21_460 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.TickPrice += clientOnTickPrice", span="967-967"];
m21_464 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.TickPrice -= clientOnTickPrice", span="976-976"];
m21_465 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="rate <= 0", span="980-980"];
m21_466 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="bool pacingViolation", span="982-982"];
m21_467 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="int pacingDelaySeconds = 60", span="983-983"];
m21_468 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="pacingViolation = false", span="987-987"];
m21_485 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion() Pacing violation, pausing for {0} secs.'', pacingDelaySeconds)", span="1038-1038"];
m21_486 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Thread.Sleep(pacingDelaySeconds * 1000)", span="1039-1039"];
m21_470 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var data = new List<IB.HistoricalDataEventArgs>()", span="990-990"];
m21_471 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var historicalTicker = GetNextTickerId()", span="991-991"];
m21_473 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            data.Add(args);\r\n                        }\r\n                    }", span="995-1001"];
m21_487 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var ordered = data.OrderByDescending(x => x.Bar.Time)", span="1044-1044"];
m21_477 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.HistoricalData += clientOnHistoricalData", span="1021-1021"];
m21_493 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.HistoricalData -= clientOnHistoricalData", span="1056-1056"];
m21_475 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                    {\r\n                        if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                        {\r\n                            // pacing violation happened\r\n                            pacingViolation = true;\r\n                        }\r\n                    }", span="1011-1018"];
m21_478 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="1022-1022"];
m21_494 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="1057-1057"];
m21_479 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.Error += clientOnError", span="1023-1023"];
m21_484 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label=pacingViolation, span="1035-1035"];
m21_495 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="_client.Error -= clientOnError", span="1058-1058"];
m21_496 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label=pacingViolation, span="1060-1060"];
m21_480 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="string requestSpan = ''100 S''", span="1026-1026"];
m21_488 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="var mostRecentQuote = ordered.FirstOrDefault()", span="1045-1045"];
m21_489 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="mostRecentQuote == null", span="1046-1046"];
m21_491 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="rate = Convert.ToDecimal(mostRecentQuote.Bar.Close)", span="1051-1051"];
m21_498 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="908-908"];
m21_929 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1835-1835"];
m21_930 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label=resolution, span="1837-1837"];
m21_931 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Tick", span="1839-1839"];
m21_934 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Minute", span="1842-1842"];
m21_936 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Hour", span="1844-1844"];
m21_938 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Daily", span="1846-1846"];
m21_932 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Second", span="1840-1840"];
m21_933 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="return IB.BarSize.OneSecond;", span="1841-1841"];
m21_935 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="return IB.BarSize.OneMinute;", span="1843-1843"];
m21_937 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="return IB.BarSize.OneHour;", span="1845-1845"];
m21_939 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="return IB.BarSize.OneDay;", span="1848-1848"];
m21_940 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1835-1835"];
m21_1031 [cluster="System.Collections.Generic.List<T>.Clear()", file="PythonUtil.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m21_518 [cluster="System.Convert.ToDecimal(double)", file="PythonUtil.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m21_810 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1766-1766"];
m21_891 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label=type, span="1768-1768"];
m21_904 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(SecurityType));", span="1789-1789"];
m21_892 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="SecurityType.Equity", span="1770-1770"];
m21_894 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="SecurityType.Option", span="1773-1773"];
m21_896 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="SecurityType.Commodity", span="1776-1776"];
m21_898 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="SecurityType.Forex", span="1779-1779"];
m21_900 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="SecurityType.Future", span="1782-1782"];
m21_902 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="SecurityType.Base", span="1785-1785"];
m21_893 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="return IB.SecurityType.Stock;", span="1771-1771"];
m21_895 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="return IB.SecurityType.Option;", span="1774-1774"];
m21_897 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="return IB.SecurityType.Commodity;", span="1777-1777"];
m21_899 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="return IB.SecurityType.Cash;", span="1780-1780"];
m21_901 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="return IB.SecurityType.Future;", span="1783-1783"];
m21_903 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="throw new ArgumentException(''InteractiveBrokers does not support SecurityType.Base'');", span="1786-1786"];
m21_905 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1766-1766"];
m21_1104 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="PythonUtil.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m21_414 [cluster="Unk.IndexOf", file="PythonUtil.cs", label="Entry Unk.IndexOf", span=""];
m21_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="order.BrokerId", span="311-311"];
m21_74 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="_requestInformation[orderId] = ''CancelOrder: '' + order", span="315-315"];
m21_77 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.CancelOrder(): OrderID: '' + order.Id + '' - '' + err)", span="324-324"];
m21_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="var orderId = int.Parse(id)", span="313-313"];
m21_76 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label=Exception, span="322-322"];
m21_79 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="return true;", span="327-327"];
m21_75 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="_client.ClientSocket.cancelOrder(orderId)", span="317-317"];
m21_78 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="return false;", span="325-325"];
m21_80 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304"];
m21_692 [cluster="Unk.GetOrderByBrokerageId", file="PythonUtil.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m21_773 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1910-1910"];
m21_972 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="var securityType = ConvertSecurityType(contract.SecType)", span="1912-1912"];
m21_973 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="var ibSymbol = securityType == SecurityType.Forex ? contract.Symbol + contract.Currency : contract.Symbol", span="1913-1913"];
m21_976 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="var contractDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1918-1918"];
m21_979 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="var expiryDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1924-1924"];
m21_980 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="var right = contract.Right == IB.RightType.Call ? OptionRight.Call : OptionRight.Put", span="1925-1925"];
m21_981 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="var strike = Convert.ToDecimal(contract.Strike)", span="1926-1926"];
m21_974 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="var market = securityType == SecurityType.Forex ? Market.FXCM : Market.USA", span="1914-1914"];
m21_975 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="securityType == SecurityType.Future", span="1916-1916"];
m21_977 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, contractDate);", span="1920-1920"];
m21_978 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="securityType == SecurityType.Option", span="1922-1922"];
m21_982 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, expiryDate, strike, right);", span="1928-1928"];
m21_983 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market);", span="1931-1931"];
m21_984 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1910-1910"];
m21_503 [cluster="System.Threading.EventWaitHandle.Reset()", file="PythonUtil.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m21_292 [cluster="Unk.issueSignal", file="PythonUtil.cs", label="Entry Unk.issueSignal", span=""];
m21_816 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1652-1652"];
m21_817 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label=direction, span="1654-1654"];
m21_824 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="throw new ArgumentException(direction, ''direction'');", span="1660-1660"];
m21_818 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="IB.ActionSide.Buy", span="1656-1656"];
m21_820 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="IB.ActionSide.Sell", span="1657-1657"];
m21_822 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="IB.ActionSide.Undefined", span="1658-1658"];
m21_819 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="return OrderDirection.Buy;", span="1656-1656"];
m21_821 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="return OrderDirection.Sell;", span="1657-1657"];
m21_823 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="return OrderDirection.Hold;", span="1658-1658"];
m21_825 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1652-1652"];
m21_25 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1966-1966"];
m21_1001 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="PythonUtil.cs", label="return Interlocked.Increment(ref _nextClientId);", span="1968-1968"];
m21_1002 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1966-1966"];
m21_305 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="694-694"];
m21_306 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="PythonUtil.cs", label="return new Dictionary<string, string>(_accountProperties);", span="696-696"];
m21_307 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="694-694"];
m21_1367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="186-186"];
m21_241 [cluster="System.Exception.Exception(string)", file="PythonUtil.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m21_258 [cluster="Unk.waitForSignal", file="PythonUtil.cs", label="Entry Unk.waitForSignal", span=""];
m21_722 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1461-1461"];
m21_723 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="_accountHoldingsResetEvent.Reset()", span="1463-1463"];
m21_724 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="var holding = CreateHolding(e)", span="1464-1464"];
m21_725 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="_accountHoldings[holding.Symbol.Value] = holding", span="1465-1465"];
m21_726 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1461-1461"];
m21_364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="797-797"];
m21_365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="ContractDetails details", span="799-799"];
m21_366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="800-800"];
m21_368 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="details = GetContractDetails(contract)", span="805-805"];
m21_367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="return (decimal) details.MinTick;", span="802-802"];
m21_369 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="details == null", span="806-806"];
m21_371 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="return (decimal) details.MinTick;", span="812-812"];
m21_370 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="return 0;", span="809-809"];
m21_372 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="797-797"];
m21_575 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="_disconnected1100Fired = false", span="1151-1151"];
m21_576 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1154-1154"];
m21_577 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Disconnecting...'')", span="1156-1156"];
m21_578 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Disconnect()", span="1157-1157"];
m21_579 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Stopping IB Gateway...'')", span="1159-1159"];
m21_580 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="1160-1160"];
m21_581 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restarting IB Gateway...'')", span="1162-1162"];
m21_582 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="InteractiveBrokersGatewayRunner.Restart()", span="1163-1163"];
m21_583 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Reconnecting...'')", span="1165-1165"];
m21_584 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Connect()", span="1166-1166"];
m21_585 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restoring data subscriptions...'')", span="1168-1168"];
m21_586 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="RestoreDataSubscriptions()", span="1169-1169"];
m21_587 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1173-1173"];
m21_588 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149"];
m21_335 [cluster="System.ArgumentException.ArgumentException(string)", file="PythonUtil.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m21_1084 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="PythonUtil.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m21_534 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1069-1069"];
m21_535 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="var requestId = e.Id", span="1073-1073"];
m21_536 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="var errorCode = e.Code", span="1074-1074"];
m21_537 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="var errorMsg = e.Message", span="1075-1075"];
m21_540 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="_requestInformation.TryGetValue(requestId, out requestMessage)", span="1082-1082"];
m21_542 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="Log.Trace($''InteractiveBrokersBrokerage.HandleError(): RequestId: {requestId} ErrorCode: {errorCode} - {errorMsg}'')", span="1087-1087"];
m21_560 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="Log.Trace($''InteractiveBrokersBrokerage.HandleError.InvalidateOrder(): IBOrderId: {requestId} ErrorCode: {message}'')", span="1130-1130"];
m21_561 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="var order = _orderProvider.GetOrderByBrokerageId(requestId)", span="1133-1133"];
m21_544 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="ErrorCodes.Contains(errorCode)", span="1091-1091"];
m21_546 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="WarningCodes.Contains(errorCode)", span="1095-1095"];
m21_548 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="errorCode == 1100 && !_disconnected1100Fired", span="1101-1101"];
m21_551 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="errorCode == 1102 || errorCode == 1101", span="1108-1108"];
m21_552 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1111-1111"];
m21_556 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="errorCode == 506", span="1122-1122"];
m21_558 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="InvalidatingCodes.Contains(errorCode)", span="1127-1127"];
m21_559 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="var message = $''{errorCode} - {errorMsg}''", span="1129-1129"];
m21_565 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1143-1143"];
m21_538 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="errorMsg = errorMsg.Replace(''\r\n'', ''. '').Replace(''\r'', ''. '').Replace(''\n'', ''. '')", span="1078-1078"];
m21_539 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="string requestMessage", span="1081-1081"];
m21_541 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="errorMsg += ''. Origin: '' + requestMessage", span="1084-1084"];
m21_543 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="var brokerageMessageType = BrokerageMessageType.Information", span="1090-1090"];
m21_545 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="brokerageMessageType = BrokerageMessageType.Error", span="1093-1093"];
m21_547 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="brokerageMessageType = BrokerageMessageType.Warning", span="1097-1097"];
m21_549 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="_disconnected1100Fired = true", span="1103-1103"];
m21_550 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="TryWaitForReconnect()", span="1106-1106"];
m21_553 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Reconnect message received. Restarting...'')", span="1116-1116"];
m21_554 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="_resetEventRestartGateway.Set()", span="1118-1118"];
m21_555 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="return;", span="1120-1120"];
m21_557 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Server Version: '' + _client.ClientSocket.ServerVersion)", span="1124-1124"];
m21_563 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Invalid,\r\n                    Message = message\r\n                }", span="1135-1139"];
m21_562 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="int orderFee = 0", span="1134-1134"];
m21_564 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="OnOrderEvent(orderEvent)", span="1140-1140"];
m21_566 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1069-1069"];
m21_1352 [cluster="System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", file="PythonUtil.cs", label="Entry System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", span="0-0"];
m21_727 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1887-1887"];
m21_962 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="var currencySymbol = Currencies.GetCurrencySymbol(e.Contract.Currency)", span="1889-1889"];
m21_963 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="var symbol = MapSymbol(e.Contract)", span="1890-1890"];
m21_964 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="var multiplier = Convert.ToDecimal(e.Contract.Multiplier)", span="1892-1892"];
m21_967 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = ConvertSecurityType(e.Contract.SecType),\r\n                Quantity = e.Position,\r\n                AveragePrice = Convert.ToDecimal(e.AverageCost) / multiplier,\r\n                MarketPrice = Convert.ToDecimal(e.MarketPrice),\r\n                ConversionRate = 1m, // this will be overwritten when GetAccountHoldings is called to ensure fresh values\r\n                CurrencySymbol = currencySymbol\r\n            };", span="1895-1904"];
m21_965 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="multiplier == 0m", span="1893-1893"];
m21_966 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="multiplier = 1m", span="1893-1893"];
m21_968 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1887-1887"];
m21_666 [cluster="System.Convert.ToInt32(int)", file="PythonUtil.cs", label="Entry System.Convert.ToInt32(int)", span="0-0"];
m21_1018 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2012-2012"];
m21_1019 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="Tick[] ticks", span="2014-2014"];
m21_1024 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="yield return tick;", span="2024-2024"];
m21_1028 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="yield return underlyingTick;", span="2030-2030"];
m21_1020 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label=_ticks, span="2016-2016"];
m21_1021 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="ticks = _ticks.ToArray()", span="2018-2018"];
m21_1022 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="_ticks.Clear()", span="2019-2019"];
m21_1023 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label=ticks, span="2022-2022"];
m21_1025 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="_underlyings.ContainsKey(tick.Symbol)", span="2026-2026"];
m21_1026 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="var underlyingTick = tick.Clone()", span="2028-2028"];
m21_1027 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="underlyingTick.Symbol = _underlyings[tick.Symbol]", span="2029-2029"];
m21_1029 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2012-2012"];
m21_778 [cluster="MarketOnOpenOrder.cstr", file="PythonUtil.cs", label="Entry MarketOnOpenOrder.cstr", span=""];
m21_405 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m21_407 [cluster="Unk.FirstOrDefault", file="PythonUtil.cs", label="Entry Unk.FirstOrDefault", span=""];
m21_235 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="PythonUtil.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m21_1056 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2159-2159"];
m21_1087 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs", label="var market = symbol.ID.Market", span="2161-2161"];
m21_1088 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs", label="var securityType = symbol.ID.SecurityType", span="2162-2162"];
m21_1089 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs", label="symbol.Value.ToLower().IndexOf(''universe'') != -1", span="2164-2164"];
m21_1091 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs", label="return\r\n                (securityType == SecurityType.Equity && market == Market.USA) ||\r\n                (securityType == SecurityType.Forex && market == Market.FXCM) ||\r\n                (securityType == SecurityType.Option && market == Market.USA) ||\r\n                (securityType == SecurityType.Future);", span="2166-2170"];
m21_1090 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs", label="return false;", span="2164-2164"];
m21_1092 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2159-2159"];
m21_571 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m21_1105 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="PythonUtil.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m21_814 [cluster="string.Substring(int)", file="PythonUtil.cs", label="Entry string.Substring(int)", span="0-0"];
m21_941 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1857-1857"];
m21_942 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label=resolution, span="1859-1859"];
m21_943 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Tick", span="1861-1861"];
m21_946 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Minute", span="1864-1864"];
m21_948 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Hour", span="1866-1866"];
m21_950 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Daily", span="1868-1868"];
m21_944 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="Resolution.Second", span="1862-1862"];
m21_945 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="return ''60 S'';", span="1863-1863"];
m21_947 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="return ''1 D'';", span="1865-1865"];
m21_949 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="return ''1 M'';", span="1867-1867"];
m21_951 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="return ''1 Y'';", span="1870-1870"];
m21_952 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1857-1857"];
m21_141 [cluster="Unk.StartNew", file="PythonUtil.cs", label="Entry Unk.StartNew", span=""];
m21_504 [cluster="Unk.reqHistoricalData", file="PythonUtil.cs", label="Entry Unk.reqHistoricalData", span=""];
m21_1346 [cluster="System.IO.Path.Combine(string, string)", file="PythonUtil.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m21_602 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="PythonUtil.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m21_507 [cluster="Exception.cstr", file="PythonUtil.cs", label="Entry Exception.cstr", span=""];
m21_309 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="Connect()", span="708-708"];
m21_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="exchange == null &&\r\n                order.Symbol.SecurityType == SecurityType.Option &&\r\n                (order.Type == OrderType.MarketOnOpen || order.Type == OrderType.MarketOnClose)", span="716-718"];
m21_314 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="var contract = CreateContract(order.Symbol, exchange)", span="723-723"];
m21_316 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label=needsNewId, span="726-726"];
m21_318 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="order.BrokerId.Add(id.ToString())", span="730-730"];
m21_320 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="order.BrokerId.Any()", span="733-733"];
m21_321 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="ibOrderId = int.Parse(order.BrokerId[0])", span="736-736"];
m21_324 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="order.Type == OrderType.OptionExercise", span="745-745"];
m21_325 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="_client.ClientSocket.exerciseOptions(ibOrderId, contract, 1, decimal.ToInt32(order.Quantity), _account, 0)", span="747-747"];
m21_326 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="var ibOrder = ConvertOrder(order, contract, ibOrderId)", span="751-751"];
m21_310 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="!IsConnected", span="710-710"];
m21_311 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="throw new InvalidOperationException(''InteractiveBrokersBrokerage.IBPlaceOrder(): Unable to place order while not connected.'');", span="712-712"];
m21_313 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="exchange = Market.CBOE.ToUpper()", span="720-720"];
m21_315 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="int ibOrderId", span="725-725"];
m21_323 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="_requestInformation[ibOrderId] = ''IBPlaceOrder: '' + contract", span="743-743"];
m21_327 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="_client.ClientSocket.placeOrder(ibOrder.OrderId, contract, ibOrder)", span="752-752"];
m21_317 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="var id = GetNextBrokerageOrderId()", span="729-729"];
m21_319 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="ibOrderId = id", span="731-731"];
m21_322 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="throw new ArgumentException(''Expected order with populated BrokerId for updating orders.'');", span="740-740"];
m21_328 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="705-705"];
m21_671 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1344-1344"];
m21_672 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + executionDetails)", span="1348-1348"];
m21_678 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="var order = _orderProvider.GetOrderByBrokerageId(executionDetails.Execution.OrderId)", span="1363-1363"];
m21_680 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Unable to locate order with BrokerageID '' + executionDetails.Execution.OrderId)", span="1366-1366"];
m21_682 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="var currentQuantityFilled = Convert.ToInt32(executionDetails.Execution.Shares)", span="1370-1370"];
m21_683 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="var totalQuantityFilled = Convert.ToInt32(executionDetails.Execution.CumQty)", span="1371-1371"];
m21_685 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="var price = Convert.ToDecimal(executionDetails.Execution.Price)", span="1373-1373"];
m21_687 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="!IsFillAlreadyHandled(order, executionDetails.Execution.OrderId, remainingQuantity)", span="1378-1378"];
m21_673 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="!IsConnected", span="1350-1350"];
m21_674 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="_client != null", span="1352-1352"];
m21_675 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1354-1354"];
m21_676 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; _client is null'')", span="1358-1358"];
m21_677 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="return;", span="1360-1360"];
m21_679 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="order == null", span="1364-1364"];
m21_684 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="var remainingQuantity = Convert.ToInt32(order.AbsoluteQuantity - totalQuantityFilled)", span="1372-1372"];
m21_688 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1380-1380"];
m21_681 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="return;", span="1367-1367"];
m21_686 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="var status = remainingQuantity > 0 ? OrderStatus.PartiallyFilled : OrderStatus.Filled", span="1376-1376"];
m21_689 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label=Exception, span="1383-1383"];
m21_690 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + err)", span="1385-1385"];
m21_691 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1344-1344"];
m21_336 [cluster="decimal.ToInt32(decimal)", file="PythonUtil.cs", label="Entry decimal.ToInt32(decimal)", span="0-0"];
m21_695 [cluster="Unk.IsFillAlreadyHandled", file="PythonUtil.cs", label="Entry Unk.IsFillAlreadyHandled", span=""];
m21_122 [cluster="Unk.WaitAll", file="PythonUtil.cs", label="Entry Unk.WaitAll", span=""];
m21_308 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="PythonUtil.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m21_624 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1240-1240"];
m21_625 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label="_accountProperties[e.Currency + '':'' + e.Key] = e.Value", span="1246-1246"];
m21_626 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label="e.Key == AccountValueKeys.CashBalance && e.Currency != ''BASE''", span="1249-1249"];
m21_627 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label="var cashBalance = decimal.Parse(e.Value, CultureInfo.InvariantCulture)", span="1251-1251"];
m21_628 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label="_cashBalances.AddOrUpdate(e.Currency, cashBalance)", span="1252-1252"];
m21_629 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label="OnAccountChanged(new AccountEvent(e.Currency, cashBalance))", span="1253-1253"];
m21_630 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label=Exception, span="1256-1256"];
m21_631 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleUpdateAccountValue(): '' + err)", span="1258-1258"];
m21_632 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1240-1240"];
m21_961 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="PythonUtil.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m21_1141 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="PythonUtil.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m21_1347 [cluster="System.IO.Directory.GetFiles(string, string)", file="PythonUtil.cs", label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0"];
m21_332 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1944-1944"];
m21_991 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs", label="_nextValidId == 0", span="1948-1948"];
m21_992 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs", label="Thread.Yield()", span="1948-1948"];
m21_993 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs", label="return Interlocked.Increment(ref _nextValidId);", span="1950-1950"];
m21_994 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1944-1944"];
m21_83 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334"];
m21_84 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="var orders = new List<Order>()", span="336-336"];
m21_85 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="338-338"];
m21_86 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="EventHandler<IB.OpenOrderEventArgs> clientOnOpenOrder = (sender, args) =>\r\n            {\r\n                // convert IB order objects returned from RequestOpenOrders\r\n                orders.Add(ConvertOrder(args.Order, args.Contract));\r\n            }", span="341-345"];
m21_95 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="return orders;", span="367-367"];
m21_87 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="EventHandler clientOnOpenOrderEnd = (sender, args) =>\r\n            {\r\n                // this signals the end of our RequestOpenOrders call\r\n                manualResetEvent.Set();\r\n            }", span="346-350"];
m21_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="!manualResetEvent.WaitOne(15000)", span="358-358"];
m21_88 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="_client.OpenOrder += clientOnOpenOrder", span="352-352"];
m21_93 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="_client.OpenOrder -= clientOnOpenOrder", span="364-364"];
m21_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="_client.OpenOrderEnd += clientOnOpenOrderEnd", span="353-353"];
m21_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label=directory, span=""];
m21_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="_client.ClientSocket.reqAllOpenOrders()", span="355-355"];
m21_92 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetOpenOrders(): Operation took longer than 15 seconds.'');", span="360-360"];
m21_96 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334"];
m21_239 [cluster="Unk.Start", file="PythonUtil.cs", label="Entry Unk.Start", span=""];
m21_573 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PythonUtil.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m21_1351 [cluster="string.String(char, int)", file="PythonUtil.cs", label="Entry string.String(char, int)", span="0-0"];
m21_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.PlaceOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="266-266"];
m21_815 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="PythonUtil.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m21_707 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="PythonUtil.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m21_906 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1796-1796"];
m21_907 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label=type, span="1798-1798"];
m21_908 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Stock", span="1800-1800"];
m21_910 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Option", span="1803-1803"];
m21_912 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Commodity", span="1806-1806"];
m21_914 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Cash", span="1809-1809"];
m21_916 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Future", span="1812-1812"];
m21_918 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Index", span="1816-1816"];
m21_926 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="throw new ArgumentOutOfRangeException(''type'');", span="1826-1826"];
m21_909 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="return SecurityType.Equity;", span="1801-1801"];
m21_911 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="return SecurityType.Option;", span="1804-1804"];
m21_913 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="return SecurityType.Commodity;", span="1807-1807"];
m21_915 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="return SecurityType.Forex;", span="1810-1810"];
m21_917 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="return SecurityType.Future;", span="1813-1813"];
m21_919 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.FutureOption", span="1817-1817"];
m21_920 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Bag", span="1818-1818"];
m21_921 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Bond", span="1819-1819"];
m21_922 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Warrant", span="1820-1820"];
m21_923 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Bill", span="1821-1821"];
m21_924 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="IB.SecurityType.Undefined", span="1822-1822"];
m21_925 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="return SecurityType.Base;", span="1823-1823"];
m21_927 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1796-1796"];
m21_1210 [cluster="QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="PythonUtil.cs", label="Entry QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m21_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617"];
m21_1361 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): start'')", span="2619-2619"];
m21_1362 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs", label="!InteractiveBrokersGatewayRunner.IsRunning()", span="2620-2620"];
m21_1363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): IB Gateway not running. Restarting...'')", span="2622-2622"];
m21_1365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): end'')", span="2625-2625"];
m21_1364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs", label="_resetEventRestartGateway.Set()", span="2623-2623"];
m21_1366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617"];
m21_158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422"];
m21_159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="var filter = new ExecutionFilter\r\n            {\r\n                AcctCode = _account,\r\n                ClientId = _clientId,\r\n                Exchange = exchange,\r\n                SecType = type ?? IB.SecurityType.Undefined,\r\n                Symbol = symbol,\r\n                Time = (timeSince ?? DateTime.MinValue).ToString(''yyyyMMdd HH:mm:ss''),\r\n                Side = side ?? IB.ActionSide.Undefined\r\n            }", span="424-433"];
m21_163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="_requestInformation[requestId] = ''GetExecutions: '' + symbol", span="441-441"];
m21_160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="var details = new List<IB.ExecutionDetailsEventArgs>()", span="435-435"];
m21_168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="_client.ClientSocket.reqExecutions(requestId, filter)", span="457-457"];
m21_161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="437-437"];
m21_165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="EventHandler<IB.ExecutionDetailsEventArgs> clientOnExecDetails = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) details.Add(args);\r\n            }", span="448-451"];
m21_173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="return details;", span="468-468"];
m21_162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="var requestId = GetNextRequestId()", span="439-439"];
m21_164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="EventHandler<IB.RequestEndEventArgs> clientOnExecutionDataEnd = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) manualResetEvent.Set();\r\n            }", span="444-447"];
m21_169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="!manualResetEvent.WaitOne(5000)", span="459-459"];
m21_167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="_client.ExecutionDetailsEnd += clientOnExecutionDataEnd", span="454-454"];
m21_172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="_client.ExecutionDetailsEnd -= clientOnExecutionDataEnd", span="466-466"];
m21_166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="_client.ExecutionDetails += clientOnExecDetails", span="453-453"];
m21_171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="_client.ExecutionDetails -= clientOnExecDetails", span="465-465"];
m21_170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetExecutions(): Operation took longer than 5 seconds.'');", span="461-461"];
m21_174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422"];
m21_619 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="PythonUtil.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m21_637 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1265-1265"];
m21_638 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + update)", span="1269-1269"];
m21_644 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="var order = _orderProvider.GetOrderByBrokerageId(update.OrderId)", span="1284-1284"];
m21_646 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to locate order with BrokerageID '' + update.OrderId)", span="1287-1287"];
m21_648 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="var status = ConvertOrderStatus(update.Status)", span="1291-1291"];
m21_650 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="var currentQuantityFilled = Convert.ToInt32(update.Filled)", span="1295-1295"];
m21_651 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="var totalQuantityFilled = Convert.ToInt32(order.AbsoluteQuantity - update.Remaining)", span="1296-1296"];
m21_652 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="var remainingQuantity = update.Remaining", span="1297-1297"];
m21_653 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="var price = Convert.ToDecimal(update.LastFillPrice)", span="1298-1298"];
m21_654 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="!IsFillAlreadyHandled(order, update.OrderId, remainingQuantity)", span="1300-1300"];
m21_639 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="!IsConnected", span="1271-1271"];
m21_640 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="_client != null", span="1273-1273"];
m21_641 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1275-1275"];
m21_642 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; _client is null'')", span="1279-1279"];
m21_643 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="return;", span="1281-1281"];
m21_645 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="order == null", span="1285-1285"];
m21_655 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1302-1302"];
m21_656 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="status != order.Status", span="1308-1308"];
m21_657 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="order.Status.IsClosed()", span="1310-1310"];
m21_658 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring update in closed state - order.Status: '' + order.Status + '', status: '' + status)", span="1313-1313"];
m21_659 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="order.Status == OrderStatus.PartiallyFilled && (status == OrderStatus.New || status == OrderStatus.Submitted)", span="1315-1315"];
m21_661 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Interactive Brokers Order Event'')\r\n                            {\r\n                                Status = status\r\n                            })", span="1323-1326"];
m21_647 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="return;", span="1288-1288"];
m21_649 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="status == OrderStatus.Filled || status == OrderStatus.PartiallyFilled", span="1293-1293"];
m21_660 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring status '' + status + '' after partial fills'')", span="1318-1318"];
m21_662 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label=Exception, span="1331-1331"];
m21_663 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + err)", span="1333-1333"];
m21_664 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1265-1265"];
m21_813 [cluster="string.Substring(int, int)", file="PythonUtil.cs", label="Entry string.Substring(int, int)", span="0-0"];
m21_780 [cluster="LimitOrder.cstr", file="PythonUtil.cs", label="Entry LimitOrder.cstr", span=""];
m21_618 [cluster="System.TimeSpan.FromMinutes(double)", file="PythonUtil.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m21_745 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1667-1667"];
m21_827 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label=direction, span="1669-1669"];
m21_834 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="throw new InvalidEnumArgumentException(''direction'', (int) direction, typeof (OrderDirection));", span="1675-1675"];
m21_828 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="OrderDirection.Buy", span="1671-1671"];
m21_830 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="OrderDirection.Sell", span="1672-1672"];
m21_832 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="OrderDirection.Hold", span="1673-1673"];
m21_829 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="return IB.ActionSide.Buy;", span="1671-1671"];
m21_831 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="return IB.ActionSide.Sell;", span="1672-1672"];
m21_833 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="return IB.ActionSide.Undefined;", span="1673-1673"];
m21_835 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1667-1667"];
m21_188 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474"];
m21_189 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label=IsConnected, span="476-476"];
m21_190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="return;", span="476-476"];
m21_191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="_accountHoldings.Clear()", span="479-479"];
m21_192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="_accountProperties.Clear()", span="480-480"];
m21_193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="var attempt = 1", span="482-482"];
m21_194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="int maxAttempts = 5", span="483-483"];
m21_197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Attempting to connect ({0}/{1}) ...'', attempt, maxAttempts)", span="489-489"];
m21_210 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="attempt++ < maxAttempts", span="540-540"];
m21_219 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="attempt++ < maxAttempts", span="559-559"];
m21_227 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="attempt++ < maxAttempts", span="583-583"];
m21_195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="var existingSessionDetected = false", span="484-484"];
m21_196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label=true, span="485-485"];
m21_224 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label=existingSessionDetected, span="576-576"];
m21_198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Disconnect()", span="492-492"];
m21_199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="_client.ClientSocket.eConnect(_host, _port, _clientId)", span="495-495"];
m21_200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="var reader = new EReader(_client.ClientSocket, _signal)", span="498-498"];
m21_201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="reader.Start()", span="499-499"];
m21_202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="_messageProcessingThread = new Thread(() =>\r\n                    {\r\n                        Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId);\r\n\r\n                        while (_client.ClientSocket.IsConnected())\r\n                        {\r\n                            try\r\n                            {\r\n                                _signal.waitForSignal();\r\n                                reader.processMsgs();\r\n                            }\r\n                            catch (Exception error)\r\n                            {\r\n                                // error in message processing thread, log error and disconnect\r\n                                Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error);\r\n                            }\r\n                        }\r\n\r\n                        Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId);\r\n                    }) { IsBackground = true }", span="501-520"];
m21_203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="_messageProcessingThread.Start()", span="522-522"];
m21_204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="!_waitForNextValidId.WaitOne(15000)", span="525-525"];
m21_205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'')", span="527-527"];
m21_213 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Log.Trace(''IB next valid id received.'')", span="549-549"];
m21_206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Disconnect()", span="530-530"];
m21_207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="ExistingSessionDetected()", span="533-533"];
m21_208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="existingSessionDetected = true", span="535-535"];
m21_209 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): An existing session was detected and will not be automatically disconnected. Please close the existing session manually.'');", span="536-536"];
m21_211 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Thread.Sleep(1000)", span="542-542"];
m21_212 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'');", span="546-546"];
m21_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="!_client.Connected", span="551-551"];
m21_215 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): Connection returned but was not in connected state.'');", span="551-551"];
m21_216 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="!DownloadAccount()", span="553-553"];
m21_217 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed. Operation took longer than 15 seconds.'')", span="555-555"];
m21_222 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="_client.ClientSocket.setServerLogLevel(5)", span="569-569"];
m21_218 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Disconnect()", span="557-557"];
m21_220 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Thread.Sleep(1000)", span="561-561"];
m21_221 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed.'');", span="565-565"];
m21_223 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label=Exception, span="573-573"];
m21_225 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Log.Error(err)", span="578-578"];
m21_226 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="throw;", span="579-579"];
m21_228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Thread.Sleep(15000)", span="585-585"];
m21_229 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Log.Error(err)", span="590-590"];
m21_230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="err.Message.Contains(''Connection refused'')", span="593-593"];
m21_231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="throw new Exception(err.Message + ''. Be sure to logout of Trader Workstation. '' +\r\n                            ''IB only allows one active log in at a time. '' +\r\n                            ''This can also be caused by requiring two-factor authentication. '' +\r\n                            ''Be sure to disable this in IB Account Management > Security > SLS Opt out.'', err);", span="595-598"];
m21_232 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="throw;", span="601-601"];
m21_233 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474"];
m21_508 [cluster="Unk.ToDecimal", file="PythonUtil.cs", label="Entry Unk.ToDecimal", span=""];
m21_126 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="PythonUtil.cs", label="Entry QuantConnect.Util.ObjectActivator.Clone<T>(T)", span="129-129"];
m21_1103 [cluster="System.DateTime.Add(System.TimeSpan)", file="PythonUtil.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m21_1228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2401-2401"];
m21_1229 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="!CanSubscribe(request.Symbol) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Option && request.Symbol.IsCanonical()) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Future && request.Symbol.IsCanonical())", span="2404-2406"];
m21_1230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="yield break;", span="2408-2408"];
m21_1250 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="yield return bar;", span="2461-2461"];
m21_1231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var contract = CreateContract(request.Symbol)", span="2412-2412"];
m21_1232 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var resolution = ConvertResolution(request.Resolution)", span="2413-2413"];
m21_1233 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var duration = ConvertResolutionToDuration(request.Resolution)", span="2414-2414"];
m21_1234 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var startTime = request.Resolution == Resolution.Daily ? request.StartTimeUtc.Date : request.StartTimeUtc", span="2415-2415"];
m21_1235 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var endTime = request.Resolution == Resolution.Daily ? request.EndTimeUtc.Date : request.EndTimeUtc", span="2416-2416"];
m21_1236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory(): Submitting request: {0}({1}): {2} {3} UTC -> {4} UTC'',\r\n                request.Symbol.Value, contract, request.Resolution, startTime, endTime)", span="2418-2419"];
m21_1238 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="!_symbolExchangeTimeZones.TryGetValue(request.Symbol, out exchangeTimeZone)", span="2422-2422"];
m21_1239 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(request.Symbol.ID.Market, request.Symbol, request.Symbol.SecurityType).TimeZone", span="2425-2425"];
m21_1240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="_symbolExchangeTimeZones.Add(request.Symbol, exchangeTimeZone)", span="2426-2426"];
m21_1242 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="request.Symbol.SecurityType == SecurityType.Forex || request.Symbol.SecurityType == SecurityType.Cfd", span="2430-2430"];
m21_1243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var historyBid = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Bid)", span="2434-2434"];
m21_1244 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var historyAsk = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Ask)", span="2435-2435"];
m21_1246 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="history = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Trades)", span="2452-2452"];
m21_1247 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var requestStartTime = request.StartTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2456-2456"];
m21_1248 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="var requestEndTime = request.EndTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2457-2457"];
m21_1237 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="DateTimeZone exchangeTimeZone", span="2421-2421"];
m21_1241 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="IEnumerable<BaseData> history", span="2429-2429"];
m21_1245 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="history = historyBid.Join(historyAsk,\r\n                    bid => bid.Time,\r\n                    ask => ask.Time,\r\n                    (bid, ask) => new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period))", span="2437-2447"];
m21_1249 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="history.Where(bar => bar.Time >= requestStartTime && bar.EndTime <= requestEndTime)", span="2459-2459"];
m21_1251 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Download completed'')", span="2464-2464"];
m21_1252 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2401-2401"];
m21_1086 [cluster="Unk.cancelMktData", file="PythonUtil.cs", label="Entry Unk.cancelMktData", span=""];
m21_749 [cluster="System.Convert.ToDouble(decimal)", file="PythonUtil.cs", label="Entry System.Convert.ToDouble(decimal)", span="0-0"];
m21_28 [cluster="System.Threading.Thread.Start()", file="PythonUtil.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m21_506 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="PythonUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m21_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="136-136"];
m21_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="136-136"];
m21_353 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="PythonUtil.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m21_971 [cluster="Unk.ConvertSecurityType", file="PythonUtil.cs", label="Entry Unk.ConvertSecurityType", span=""];
m21_330 [cluster="string.ToUpper()", file="PythonUtil.cs", label="Entry string.ToUpper()", span="0-0"];
m21_957 [cluster="Unk.ToDouble", file="PythonUtil.cs", label="Entry Unk.ToDouble", span=""];
m21_592 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1179-1179"];
m21_593 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label="List<Symbol> subscribedSymbols", span="1181-1181"];
m21_594 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label=_sync, span="1182-1182"];
m21_595 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label="subscribedSymbols = _subscribedSymbols.Keys.ToList()", span="1184-1184"];
m21_596 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label="_subscribedSymbols.Clear()", span="1186-1186"];
m21_599 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label="Subscribe(null, subscribedSymbols)", span="1191-1191"];
m21_597 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label="_subscribedTickets.Clear()", span="1187-1187"];
m21_598 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label="_underlyings.Clear()", span="1188-1188"];
m21_600 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1179-1179"];
m21_329 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="PythonUtil.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m21_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179"];
m21_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_algorithm = algorithm", span="182-182"];
m21_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_orderProvider = orderProvider", span="183-183"];
m21_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_securityProvider = securityProvider", span="184-184"];
m21_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_account = account", span="185-185"];
m21_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_host = host", span="186-186"];
m21_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_port = port", span="187-187"];
m21_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_agentDescription = agentDescription", span="189-189"];
m21_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_clientId = IncrementClientId()", span="188-188"];
m21_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client = new IB.InteractiveBrokersClient(_signal)", span="190-190"];
m21_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.UpdatePortfolio += HandlePortfolioUpdates", span="193-193"];
m21_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.OrderStatus += HandleOrderStatusUpdates", span="194-194"];
m21_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.UpdateAccountValue += HandleUpdateAccountValue", span="195-195"];
m21_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.ExecutionDetails += HandleExecutionDetails", span="196-196"];
m21_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.Error += HandleError", span="197-197"];
m21_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.TickPrice += HandleTickPrice", span="198-198"];
m21_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.TickSize += HandleTickSize", span="199-199"];
m21_21 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.CurrentTimeUtc += HandleBrokerTime", span="200-200"];
m21_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="_client.NextValidId += (sender, e) =>\r\n            {\r\n                // only grab this id when we initialize, and we'll manually increment it here to avoid threading issues\r\n                if (_nextValidId == 0)\r\n                {\r\n                    _nextValidId = e.OrderId;\r\n                    _waitForNextValidId.Set();\r\n                }\r\n                Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId);\r\n            }", span="203-212"];
m21_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="new Thread(() =>\r\n            {\r\n                try\r\n                {\r\n                    Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread started.'');\r\n\r\n                    while (!_ctsRestartGateway.IsCancellationRequested)\r\n                    {\r\n                        if (_resetEventRestartGateway.WaitOne(1000, _ctsRestartGateway.Token))\r\n                        {\r\n                            Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence start.'');\r\n\r\n                            try\r\n                            {\r\n                                ResetGatewayConnection();\r\n                            }\r\n                            catch (Exception exception)\r\n                            {\r\n                                Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in ResetGatewayConnection: '' + exception);\r\n                            }\r\n\r\n                            Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence end.'');\r\n                        }\r\n                    }\r\n\r\n                    Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread ended.'');\r\n                }\r\n                catch (Exception exception)\r\n                {\r\n                    Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in reset handler thread: '' + exception);\r\n                }\r\n            }) { IsBackground = true }.Start()", span="215-246"];
m21_24 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179"];
m21_403 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="868-868"];
m21_415 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="int timeout = 60", span="870-870"];
m21_417 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="_requestInformation[requestId] = ''FindContracts: '' + contract", span="874-874"];
m21_424 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="890-890"];
m21_416 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="var requestId = GetNextRequestId()", span="872-872"];
m21_425 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="!manualResetEvent.WaitOne(timeout * 1000)", span="892-892"];
m21_426 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.FindContracts(): failed to receive response from IB within {0} seconds'', timeout)", span="894-894"];
m21_418 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="876-876"];
m21_419 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="var contractDetails = new List<ContractDetails>()", span="877-877"];
m21_421 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="EventHandler<IB.RequestEndEventArgs> clientOnContractDetailsEnd =\r\n                (sender, args) => manualResetEvent.Set()", span="883-884"];
m21_420 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails =\r\n                (sender, args) => contractDetails.Add(args.ContractDetails)", span="880-881"];
m21_429 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="return contractDetails;", span="901-901"];
m21_422 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="_client.ContractDetails += clientOnContractDetails", span="886-886"];
m21_428 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="_client.ContractDetails -= clientOnContractDetails", span="899-899"];
m21_423 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="_client.ContractDetailsEnd += clientOnContractDetailsEnd", span="887-887"];
m21_427 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="_client.ContractDetailsEnd -= clientOnContractDetailsEnd", span="898-898"];
m21_430 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="868-868"];
m21_572 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", file="PythonUtil.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", span="90-90"];
m21_567 [cluster="string.Replace(string, string)", file="PythonUtil.cs", label="Entry string.Replace(string, string)", span="0-0"];
m21_242 [cluster="System.Threading.Thread.Sleep(int)", file="PythonUtil.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m21_304 [cluster="System.Threading.CancellationTokenSource.Cancel(bool)", file="PythonUtil.cs", label="Entry System.Threading.CancellationTokenSource.Cancel(bool)", span="0-0"];
m21_708 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="PythonUtil.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m21_178 [cluster="Unk.reqExecutions", file="PythonUtil.cs", label="Entry Unk.reqExecutions", span=""];
m21_985 [cluster="Unk.GetLeanSymbol", file="PythonUtil.cs", label="Entry Unk.GetLeanSymbol", span=""];
m21_344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="761-761"];
m21_345 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="ContractDetails details", span="763-763"];
m21_346 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="764-764"];
m21_348 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="details = GetContractDetails(contract)", span="769-769"];
m21_347 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="return details.Summary.PrimaryExch;", span="766-766"];
m21_349 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="details == null", span="770-770"];
m21_351 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="return details.Summary.PrimaryExch;", span="776-776"];
m21_350 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="return null;", span="773-773"];
m21_352 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="761-761"];
m21_291 [cluster="Unk.eDisconnect", file="PythonUtil.cs", label="Entry Unk.eDisconnect", span=""];
m21_398 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="854-854"];
m21_399 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs", label="var contractDetails = FindContracts(contract)", span="857-857"];
m21_400 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs", label="var exchanges = _futuresExchanges.Values.Reverse().ToArray()", span="859-859"];
m21_401 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs", label="return contractDetails\r\n                    .Select(details => details.Summary.Exchange)\r\n                    .OrderByDescending(e => Array.IndexOf(exchanges, e))\r\n                    .FirstOrDefault();", span="862-865"];
m21_402 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="854-854"];
m21_570 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m21_667 [cluster="System.Convert.ToInt32(decimal)", file="PythonUtil.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m21_1013 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="PythonUtil.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m21_337 [cluster="Unk.exerciseOptions", file="PythonUtil.cs", label="Entry Unk.exerciseOptions", span=""];
m21_1192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2344-2344"];
m21_1193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="Connect()", span="2347-2347"];
m21_1194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="var exchangeSpecifier = securityType == SecurityType.Future ? securityExchange ?? '''' : securityExchange ?? ''Smart''", span="2350-2350"];
m21_1196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="Func<string, int> exchangeFilter = exchange => securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2352-2352"];
m21_1197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="var contract = new Contract\r\n            {\r\n                Symbol = _symbolMapper.GetBrokerageRootSymbol(lookupName),\r\n                Currency = securityCurrency ?? ''USD'',\r\n                Exchange = exchangeSpecifier,\r\n                SecType = ConvertSecurityType(securityType)\r\n            }", span="2355-2361"];
m21_1199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="securityType == SecurityType.Option", span="2365-2365"];
m21_1195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="var futuresExchanges = _futuresExchanges.Values.Reverse().ToArray()", span="2351-2351"];
m21_1205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="var filteredResults =\r\n                    results\r\n                    .Select(x => x.Summary)\r\n                    .GroupBy(x => x.Exchange)\r\n                    .OrderByDescending(g => exchangeFilter(g.Key))\r\n                    .FirstOrDefault()", span="2382-2387"];
m21_1198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Requesting symbol list for '' + contract.Symbol + '' ...'')", span="2363-2363"];
m21_1200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="var underlyingSymbol = Symbol.Create(contract.Symbol, SecurityType.Equity, Market.USA)", span="2370-2370"];
m21_1202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} contracts for {1}'', symbols.Count, contract.Symbol)", span="2373-2373"];
m21_1204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="var results = FindContracts(contract)", span="2379-2379"];
m21_1201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="var symbols = _algorithm.OptionChainProvider.GetOptionContractList(underlyingSymbol, DateTime.Today).ToList()", span="2371-2371"];
m21_1203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="return symbols;", span="2375-2375"];
m21_1206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} symbol(s)'', filteredResults != null ? filteredResults.Count() : 0)", span="2389-2389"];
m21_1207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="return filteredResults != null ? filteredResults.Select(MapSymbol) : Enumerable.Empty<Symbol>();", span="2392-2392"];
m21_1208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2344-2344"];
m21_1061 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2103-2103"];
m21_1062 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label=symbols, span="2107-2107"];
m21_1063 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="CanSubscribe(symbol)", span="2109-2109"];
m21_1081 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label=Exception, span="2148-2148"];
m21_1065 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Unsubscribe(): Unsubscribe Request: '' + symbol.Value)", span="2113-2113"];
m21_1066 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="symbol.ID.SecurityType == SecurityType.Option && symbol.ID.StrikePrice == 0.0m", span="2115-2115"];
m21_1067 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_underlyings.Remove(symbol.Underlying)", span="2117-2117"];
m21_1069 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_subscribedSymbols.TryRemove(symbol, out id)", span="2121-2121"];
m21_1064 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label=_sync, span="2111-2111"];
m21_1068 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="int id", span="2120-2120"];
m21_1070 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_messagingRateLimiter.WaitToProceed()", span="2123-2123"];
m21_1072 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_subscriptionTimes.TryGetValue(id, out subscriptionTime)", span="2127-2127"];
m21_1077 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_subscriptionTimes.Remove(id)", span="2136-2136"];
m21_1078 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Client.ClientSocket.cancelMktData(id)", span="2139-2139"];
m21_1080 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="_subscribedTickets.TryRemove(id, out s)", span="2142-2142"];
m21_1071 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="DateTime subscriptionTime", span="2126-2126"];
m21_1073 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="var timeSinceSubscription = DateTime.UtcNow - subscriptionTime", span="2129-2129"];
m21_1074 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="timeSinceSubscription < _minimumTimespanBeforeUnsubscribe", span="2130-2130"];
m21_1075 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="var delay = Convert.ToInt32((_minimumTimespanBeforeUnsubscribe - timeSinceSubscription).TotalMilliseconds)", span="2132-2132"];
m21_1076 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Thread.Sleep(delay)", span="2133-2133"];
m21_1079 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Symbol s", span="2141-2141"];
m21_1082 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Log.Error(''InteractiveBrokersBrokerage.Unsubscribe(): '' + err.Message)", span="2150-2150"];
m21_1083 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2103-2103"];
m21_670 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="PythonUtil.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m21_826 [cluster="System.ArgumentException.ArgumentException(string, string)", file="PythonUtil.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m21_668 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1428-1428"];
m21_709 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="order.Status == OrderStatus.Filled", span="1431-1431"];
m21_712 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="_orderFills.TryGetValue(orderId, out previousRemainingQuantity)", span="1435-1435"];
m21_713 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="newRemainingQuantity >= previousRemainingQuantity", span="1437-1437"];
m21_715 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="newRemainingQuantity > 0", span="1444-1444"];
m21_716 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="_orderFills[orderId] = newRemainingQuantity", span="1447-1447"];
m21_717 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="_orderFills.Remove(orderId)", span="1452-1452"];
m21_710 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="return true;", span="1432-1432"];
m21_711 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="int previousRemainingQuantity", span="1434-1434"];
m21_714 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="return true;", span="1440-1440"];
m21_718 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="return false;", span="1455-1455"];
m21_719 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1428-1428"];
m21_1030 [cluster="System.Collections.Generic.List<T>.ToArray()", file="PythonUtil.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m21_406 [cluster="Unk.OrderByDescending", file="PythonUtil.cs", label="Entry Unk.OrderByDescending", span=""];
m21_340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="756-756"];
m21_341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="PythonUtil.cs", label="return string.Format(''{0} {1} {2} {3}'', contract, contract.LastTradeDateOrContractMonth, contract.Strike, contract.Right);", span="758-758"];
m21_342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="756-756"];
m21_1217 [cluster="System.Array.IndexOf<T>(T[], T)", file="PythonUtil.cs", label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0"];
m21_1227 [cluster="Unk.exchangeFilter", file="PythonUtil.cs", label="Entry Unk.exchangeFilter", span=""];
m21_293 [cluster="System.Threading.Thread.Join()", file="PythonUtil.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m21_240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2584-2584"];
m21_1329 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="var ibControllerLogPath = Path.Combine(Config.Get(''ib-controller-dir''), ''Logs'')", span="2587-2587"];
m21_1330 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="var files = Directory.GetFiles(ibControllerLogPath, ''ibc-*.txt'')", span="2588-2588"];
m21_1331 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="var lastLogUpdateTime = DateTime.MinValue", span="2589-2589"];
m21_1333 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label=files, span="2591-2591"];
m21_1332 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="var ibControllerLogFileName = string.Empty", span="2590-2590"];
m21_1335 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="time > lastLogUpdateTime", span="2594-2594"];
m21_1338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="ibControllerLogFileName.IsNullOrEmpty()", span="2601-2601"];
m21_1340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="var lines = File.ReadAllLines(ibControllerLogFileName).ToList()", span="2607-2607"];
m21_1334 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="var time = File.GetLastWriteTimeUtc(file)", span="2593-2593"];
m21_1337 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="ibControllerLogFileName = file", span="2597-2597"];
m21_1336 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="lastLogUpdateTime = time", span="2596-2596"];
m21_1339 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="return false;", span="2603-2603"];
m21_1341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="var separatorLine = new string('-', 60)", span="2608-2608"];
m21_1342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="var index = lines.FindLastIndex(x => x.Contains(separatorLine))", span="2609-2609"];
m21_1343 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="return index >= 0 && lines.Skip(index + 1).Any(line => line.Contains(''End this session and let the other session proceed''));", span="2611-2611"];
m21_1344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2584-2584"];
m21_1368 [file="PythonUtil.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", span=""];
m21_1369 [file="PythonUtil.cs", label=orders, span=""];
m21_1370 [file="PythonUtil.cs", label=manualResetEvent, span=""];
m21_1371 [file="PythonUtil.cs", label="QuantConnect.Symbol", span=""];
m21_1372 [file="PythonUtil.cs", label=currency, span=""];
m21_1373 [file="PythonUtil.cs", label=requestId, span=""];
m21_1374 [file="PythonUtil.cs", label=manualResetEvent, span=""];
m21_1375 [file="PythonUtil.cs", label=details, span=""];
m21_1376 [file="PythonUtil.cs", label=reader, span=""];
m21_1377 [file="PythonUtil.cs", label=firstAccountUpdateReceived, span=""];
m21_1378 [file="PythonUtil.cs", label=requestId, span=""];
m21_1379 [file="PythonUtil.cs", label=Contract, span=""];
m21_1380 [file="PythonUtil.cs", label=manualResetEvent, span=""];
m21_1381 [file="PythonUtil.cs", label=exchanges, span=""];
m21_1382 [file="PythonUtil.cs", label=contractDetails, span=""];
m21_1383 [file="PythonUtil.cs", label=manualResetEvent, span=""];
m21_1384 [file="PythonUtil.cs", label=invertedSymbol, span=""];
m21_1385 [file="PythonUtil.cs", label=normalSymbol, span=""];
m21_1386 [file="PythonUtil.cs", label=marketDataTicker, span=""];
m21_1387 [file="PythonUtil.cs", label=string, span=""];
m21_1388 [file="PythonUtil.cs", label=manualResetEvent, span=""];
m21_1389 [file="PythonUtil.cs", label=historicalTicker, span=""];
m21_1390 [file="PythonUtil.cs", label=data, span=""];
m21_1391 [file="PythonUtil.cs", label="QuantConnect.SecurityType", span=""];
m21_1392 [file="PythonUtil.cs", label=futuresExchanges, span=""];
m21_1393 [file="PythonUtil.cs", label=exchangeFilter, span=""];
m21_1394 [file="PythonUtil.cs", label=requestStartTime, span=""];
m21_1395 [file="PythonUtil.cs", label=requestEndTime, span=""];
m21_1396 [file="PythonUtil.cs", label=historicalTicker, span=""];
m21_1397 [file="PythonUtil.cs", label="QuantConnect.Data.HistoryRequest", span=""];
m21_1398 [file="PythonUtil.cs", label=DateTimeZone, span=""];
m21_1399 [file="PythonUtil.cs", label=historyPiece, span=""];
m21_1400 [file="PythonUtil.cs", label=dataDownloading, span=""];
m21_1401 [file="PythonUtil.cs", label=dataDownloaded, span=""];
m21_1402 [file="PythonUtil.cs", label=separatorLine, span=""];
m22_154 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m22_169 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m22_138 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="AskPrice = config.GetNormalizedPrice(csv[3].ToDecimal()/scaleFactor)", span="314-314"];
m22_48 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="security.Holdings.Target = target", span="161-161"];
m22_49 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label=DebugMode, span="164-164"];
m22_51 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs", label="Log($''{Time}: RISK: {string.Join('' | '', riskTargetOverrides.Select(t => t.ToString()).OrderBy(t => t))}'')", prediction=31, span="169-169"];
m22_50 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="riskTargetOverrides.Any()", span="167-167"];
m22_52 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="Execution.Execute(this, riskTargetOverrides.Concat(targets).DistinctBy(pt => pt.Symbol))", span="174-174"];
m22_55 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="QCAlgorithmFramework.cs", label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="185-185"];
m22_56 [cluster="Unk.ToList", file="QCAlgorithmFramework.cs", label="Entry Unk.ToList", span=""];
m22_53 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", span="117-117"];
m22_54 [cluster="QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32"];
m22_57 [cluster="Unk.OrderBy", file="QCAlgorithmFramework.cs", label="Entry Unk.OrderBy", span=""];
m22_14 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs", label="Error(''These models are currently unsuitable for Cash Modeled brokerages (e.g. GDAX) and may result in unexpected trades.''\r\n                    + '' To prevent possible user error we've restricted them to Margin trading. You can select margin account types with''\r\n                    + '' SetBrokerage( ... AccountType.Margin)'')", span="105-107"];
m22_15 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs", label="base.PostInitialize()", span="110-110"];
m22_16 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="91-91"];
m22_17 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="267-267"];
m22_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="135-135"];
m22_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1724-1724"];
m22_22 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="Entry lambda expression", span="100-100"];
m22_23 [cluster="lambda expression", color=green, community=0, file="QCAlgorithmFramework.cs", label="Log($''{Time}: {string.Join('' | '', data.Insights.OrderBy(i => i.Symbol.ToString()))}'')", prediction=31, span="100-100"];
m22_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithmFramework.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m22_26 [cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="QCAlgorithmFramework.cs", label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m22_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1712-1712"];
m22_24 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="Exit lambda expression", span="100-100"];
m22_28 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="Entry lambda expression", span="100-100"];
m22_171 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57"];
m22_140 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Exchange = csv[5]", span="317-317"];
m22_141 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Suspicious = csv[6] == ''1''", span="318-318"];
m22_142 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="BidPrice != 0", span="320-320"];
m22_143 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="AskPrice != 0", span="322-322"];
m22_144 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Value = (BidPrice + AskPrice)/2m", span="324-324"];
m22_145 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Value = BidPrice", span="328-328"];
m22_146 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Value = AskPrice", span="333-333"];
m22_147 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label=Exception, span="341-341"];
m22_148 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Log.Error(err)", span="343-343"];
m22_149 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215"];
m22_150 [cluster="string.ToCsv(int)", file="QCAlgorithmFramework.cs", label="Entry string.ToCsv(int)", span="329-329"];
m22_101 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Value = (BidPrice + AskPrice) / 2", span="252-252"];
m22_102 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="SecurityType.Crypto", span="256-256"];
m22_103 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="TickType = config.TickType", span="258-258"];
m22_180 [cluster="System.Convert.ToDecimal(decimal)", file="QCAlgorithmFramework.cs", label="Entry System.Convert.ToDecimal(decimal)", span="0-0"];
m22_172 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="399-399"];
m22_173 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Value = lastTrade", span="401-401"];
m22_174 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="BidPrice = bidPrice", span="402-402"];
m22_175 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="AskPrice = askPrice", span="403-403"];
m22_176 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="BidSize = bidSize", span="404-404"];
m22_177 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="AskSize = askSize", span="405-405"];
m22_178 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Quantity = Convert.ToDecimal(volume)", span="406-406"];
m22_179 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="399-399"];
m22_60 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="QCAlgorithmFramework.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m22_7 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="Exchange = ''''", span="106-106"];
m22_58 [cluster="Unk.Join", file="QCAlgorithmFramework.cs", label="Entry Unk.Join", span=""];
m22_137 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="csv[3].Length != 0", span="312-312"];
m22_152 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithmFramework.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m22_29 [cluster="lambda expression", color=green, community=0, file="QCAlgorithmFramework.cs", label="i.Symbol.ToString()", prediction=33, span="100-100"];
m22_165 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="source += ''#'' + LeanData.GenerateZipEntryName(config.Symbol, date, config.Resolution, config.TickType)", span="385-385"];
m22_160 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="373-373"];
m22_161 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label=isLiveMode, span="375-375"];
m22_163 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="381-381"];
m22_164 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="config.SecurityType == SecurityType.Option ||\r\n                config.SecurityType == SecurityType.Future", span="382-383"];
m22_162 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="378-378"];
m22_166 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.Csv);", span="387-387"];
m22_167 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="373-373"];
m22_39 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label=targets, span="140-140"];
m22_40 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="var security = Securities[target.Symbol]", span="142-142"];
m22_41 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="security.Holdings.Target = target", span="143-143"];
m22_42 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label=DebugMode, span="146-146"];
m22_43 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="targets.Any()", span="149-149"];
m22_45 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="var riskTargetOverrides = RiskManagement.ManageRisk(this).ToList()", span="155-155"];
m22_46 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label=riskTargetOverrides, span="158-158"];
m22_44 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs", label="Log($''{Time}: PORTFOLIO: {string.Join('' | '', targets.Select(t => t.ToString()).OrderBy(t => t))}'')", prediction=31, span="151-151"];
m22_47 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs", label="var security = Securities[target.Symbol]", span="160-160"];
m22_70 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="SaleCondition = csv[4]", span="205-205"];
m22_30 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m22_73 [cluster="string.ToInt32()", file="QCAlgorithmFramework.cs", label="Entry string.ToInt32()", span="297-297"];
m22_77 [cluster="string.Trim()", file="QCAlgorithmFramework.cs", label="Entry string.Trim()", span="0-0"];
m22_80 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="var scaleFactor = GetScaleFactor(config.SecurityType)", span="222-222"];
m22_83 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="var csv = line.ToCsv(6)", span="228-228"];
m22_74 [cluster="System.DateTime.AddMilliseconds(double)", color=green, community=0, file="QCAlgorithmFramework.cs", label="Entry System.DateTime.AddMilliseconds(double)", prediction=35, span="0-0"];
m22_75 [cluster="string.ToDecimal()", file="QCAlgorithmFramework.cs", label="Entry string.ToDecimal()", span="248-248"];
m22_78 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=green, community=0, file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", prediction=36, span="215-215"];
m22_79 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="DataType = MarketDataType.Tick", span="219-219"];
m22_81 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=green, community=0, file="QCAlgorithmFramework.cs", label="config.SecurityType", prediction=36, span="224-224"];
m22_82 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="SecurityType.Equity", span="226-226"];
m22_84 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=green, community=0, file="QCAlgorithmFramework.cs", label="Symbol = config.Symbol", prediction=38, span="229-229"];
m22_85 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="230-230"];
m22_68 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Quantity = csv[2].ToDecimal()", span="203-203"];
m22_86 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Value = config.GetNormalizedPrice(csv[1].ToDecimal() / scaleFactor)", span="231-231"];
m22_67 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="TickType = TickType.Trade", span="202-202"];
m22_69 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Exchange = csv[3].Trim()", span="204-204"];
m22_88 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Quantity = csv[2].ToDecimal()", span="233-233"];
m22_87 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="TickType = TickType.Trade", span="232-232"];
m22_71 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Suspicious = csv[5].ToInt32() == 1", span="206-206"];
m22_72 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195"];
m22_31 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", label="DataType = MarketDataType.Tick", span="144-144"];
m22_98 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="249-249"];
m22_99 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="BidPrice = csv[1].ToDecimal()", span="250-250"];
m22_100 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="AskPrice = csv[2].ToDecimal()", span="251-251"];
m22_61 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithmFramework.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m22_62 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QCAlgorithmFramework.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m22_64 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="QCAlgorithmFramework.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m22_65 [cluster="System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", file="QCAlgorithmFramework.cs", label="Entry System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", span="264-264"];
m22_66 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="32-32"];
m22_155 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="355-355"];
m22_156 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label=isLiveMode, span="357-357"];
m22_158 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="return new Tick(config, line, date);", span="363-363"];
m22_157 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="return new Tick();", span="360-360"];
m22_159 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="355-355"];
m22_151 [cluster="string.ToInt64()", file="QCAlgorithmFramework.cs", label="Entry string.ToInt64()", span="313-313"];
m22_76 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="429-429"];
m22_97 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="TickType = TickType.Quote", span="248-248"];
m22_104 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Symbol = config.Symbol", span="259-259"];
m22_105 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="Exchange = config.Market", span="260-260"];
m22_106 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="QCAlgorithmFramework.cs", label="TickType == TickType.Trade", span="262-262"];
m22_95 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs", label="RiskManagement.OnSecuritiesChanged(this, changes)", span="191-191"];
m22_96 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="181-181"];
m22_107 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="225-225"];
m22_108 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs", label="Execution = execution", span="227-227"];
m22_112 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="234-234"];
m22_113 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="239-239"];
m22_122 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="barSize = insight.Period.ToHigherResolutionEquivalent(false).ToTimeSpan()", span="254-254"];
m22_123 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="exchangeHours = MarketHoursDatabase.GetExchangeHours(insight.Symbol.ID.Market, insight.Symbol, insight.Symbol.SecurityType)", span="255-255"];
m22_124 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="var localStart = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="258-258"];
m22_125 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="barSize = QuantConnect.Time.Max(barSize, QuantConnect.Time.OneMinute)", span="259-259"];
m22_127 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="insight.CloseTimeUtc = QuantConnect.Time.GetEndTimeForTradeBars(exchangeHours, localStart, barSize, barCount, false).ConvertToUtc(exchangeHours.TimeZone)", span="262-262"];
m22_135 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74"];
m22_93 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs", label="PortfolioConstruction.OnSecuritiesChanged(this, changes)", span="189-189"];
m22_120 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="exchangeHours = security.Exchange.Hours", span="249-249"];
m22_89 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="181-181"];
m22_90 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="QCAlgorithmFramework.cs", label=DebugMode, prediction=31, span="183-183"];
m22_91 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs", label="Log($''{Time}: {changes}'')", span="185-185"];
m22_92 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs", label="Alpha.OnSecuritiesChanged(this, changes)", span="188-188"];
m22_94 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs", label="Execution.OnSecuritiesChanged(this, changes)", span="190-190"];
m22_111 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.cs", label="RiskManagement = riskManagement", span="236-236"];
m22_109 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="225-225"];
m22_110 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="234-234"];
m22_114 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="insight.GeneratedTimeUtc = UtcTime", span="241-241"];
m22_115 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="insight.ReferenceValue = _securityValuesProvider.GetValues(insight.Symbol).Get(insight.Type)", span="242-242"];
m22_116 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="TimeSpan barSize", span="244-244"];
m22_117 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="Security security", span="245-245"];
m22_118 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="SecurityExchangeHours exchangeHours", span="246-246"];
m22_119 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="Securities.TryGetValue(insight.Symbol, out security)", span="247-247"];
m22_121 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="barSize = security.Resolution.ToTimeSpan()", span="250-250"];
m22_128 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="return insight;", span="264-264"];
m22_129 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="239-239"];
m22_130 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.ISecurityValuesProvider.GetValues(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.ISecurityValuesProvider.GetValues(QuantConnect.Symbol)", span="31-31"];
m22_131 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues.Get(QuantConnect.Algorithm.Framework.Alphas.InsightType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues.Get(QuantConnect.Algorithm.Framework.Alphas.InsightType)", span="89-89"];
m22_133 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m22_134 [cluster="System.TimeSpan.ToHigherResolutionEquivalent(bool)", file="QCAlgorithmFramework.cs", label="Entry System.TimeSpan.ToHigherResolutionEquivalent(bool)", span="752-752"];
m22_136 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithmFramework.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606"];
m22_139 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithmFramework.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618"];
m22_126 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetGeneratedAndClosedTimes(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="QCAlgorithmFramework.cs", label="var barCount = (int) (insight.Period.Ticks / barSize.Ticks)", span="260-260"];
m22_132 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
m22_153 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="QCAlgorithmFramework.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m22_59 [cluster="Unk.OnInsightsGenerated", file="QCAlgorithmFramework.cs", label="Entry Unk.OnInsightsGenerated", span=""];
m22_181 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="412-412"];
m22_182 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="QCAlgorithmFramework.cs", label="return (TickType == TickType.Trade && LastPrice > 0.0m && Quantity > 0) ||\r\n                   (TickType == TickType.Quote && AskPrice > 0.0m && AskSize > 0) ||\r\n                   (TickType == TickType.Quote && BidPrice > 0.0m && BidSize > 0) ||\r\n                   (TickType == TickType.OpenInterest && Value > 0);", span="414-417"];
m22_183 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.IsValid()", span="412-412"];
m22_168 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="44-44"];
m22_5 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="TickType = TickType.Trade", span="104-104"];
m22_0 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m22_2 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="Time = new DateTime()", span="101-101"];
m22_3 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="DataType = MarketDataType.Tick", span="102-102"];
m22_4 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="Symbol = Symbol.Empty", span="103-103"];
m22_32 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Time = time", span="145-145"];
m22_38 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m22_33 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Symbol = symbol", span="146-146"];
m22_35 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", label="TickType = TickType.Quote", span="148-148"];
m22_37 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", label="AskPrice = ask", span="150-150"];
m22_34 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Value = (bid + ask) / 2", span="147-147"];
m22_6 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="Quantity = 0", span="105-105"];
m22_187 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs", label="return securityType == SecurityType.Equity || securityType == SecurityType.Option ? 10000m : 1;", span="431-431"];
m22_188 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="429-429"];
m22_8 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="SaleCondition = ''''", span="107-107"];
m22_12 [cluster="QuantConnect.Data.Market.Tick.Tick()", color=green, community=0, file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.Tick()", prediction=31, span="98-98"];
m22_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="BidSize = 0", span="109-109"];
m22_13 [cluster="System.DateTime.DateTime()", file="QCAlgorithmFramework.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m22_9 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="Suspicious = false", span="108-108"];
m22_11 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="AskSize = 0", span="110-110"];
m22_170 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m22_184 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="424-424"];
m22_185 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="QCAlgorithmFramework.cs", label="return new Tick(this);", span="426-426"];
m22_186 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Data.Market.Tick.Clone()", span="424-424"];
m22_189 [file="QCAlgorithmFramework.cs", label="QuantConnect.Data.Market.Tick", span=""];
m23_6 [cluster="PyObject.TryConvert<T>(out T)", file="QCAlgorithmFramework.Python.cs", label="Entry PyObject.TryConvert<T>(out T)", span="1037-1037"];
m23_31 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel)", span="198-198"];
m23_39 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="234-234"];
m23_25 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", span="84-84"];
m23_26 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IUniverseSelectionModel model", span="86-86"];
m23_27 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="portfolioSelection.TryConvert(out model)", span="87-87"];
m23_29 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="UniverseSelection = new UniverseSelectionModelPythonWrapper(portfolioSelection)", span="93-93"];
m23_28 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", color=green, community=0, file="QCAlgorithmFramework.Python.cs", label="SetPortfolioSelection(model)", prediction=41, span="89-89"];
m23_30 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", span="84-84"];
m23_24 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.PortfolioConstructionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.PortfolioConstructionModelPythonWrapper(PyObject)", span="34-34"];
m23_32 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", span="33-33"];
m23_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="34-34"];
m23_9 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", span="50-50"];
m23_10 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IExecutionModel model", span="52-52"];
m23_11 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="execution.TryConvert(out model)", span="53-53"];
m23_13 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Execution = new ExecutionModelPythonWrapper(execution)", span="59-59"];
m23_12 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="SetExecution(model)", span="55-55"];
m23_14 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", span="50-50"];
m23_7 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", span="207-207"];
m23_15 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="225-225"];
m23_0 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", span="33-33"];
m23_1 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IAlphaModel model", span="35-35"];
m23_2 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="alpha.TryConvert(out model)", span="36-36"];
m23_4 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Alpha = new AlphaModelPythonWrapper(alpha)", span="42-42"];
m23_3 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="SetAlpha(model)", span="38-38"];
m23_5 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", span="33-33"];
m23_23 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="216-216"];
m23_16 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", span="34-34"];
m23_17 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", span="67-67"];
m23_18 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IPortfolioConstructionModel model", span="69-69"];
m23_19 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="portfolioConstruction.TryConvert(out model)", span="70-70"];
m23_21 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="PortfolioConstruction = new PortfolioConstructionModelPythonWrapper(portfolioConstruction)", span="76-76"];
m23_20 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="SetPortfolioConstruction(model)", span="72-72"];
m23_22 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", span="67-67"];
m23_33 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", span="101-101"];
m23_34 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IRiskManagementModel model", span="103-103"];
m23_35 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="riskManagement.TryConvert(out model)", span="104-104"];
m23_37 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="RiskManagement = new RiskManagementModelPythonWrapper(riskManagement)", span="110-110"];
m23_36 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="SetRiskManagement(model)", span="106-106"];
m23_38 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", span="101-101"];
m23_40 [cluster="QuantConnect.Algorithm.Framework.Risk.RiskManagementModelPythonWrapper.RiskManagementModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.RiskManagementModelPythonWrapper.RiskManagementModelPythonWrapper(PyObject)", span="34-34"];
m23_41 [file="QCAlgorithmFramework.Python.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m24_0 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", span="45-45"];
m24_8 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="var future = AddFuture(Futures.Indices.SP500EMini)", span="59-59"];
m24_7 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="_slow = EMA(equity.Symbol, _slowPeriod, Resolution.Daily)", span="55-55"];
m24_9 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="future.SetFilter(TimeSpan.Zero, TimeSpan.FromDays(182))", span="60-60"];
m24_3 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="SetCash(100000)", span="49-49"];
m24_6 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="_fast = EMA(equity.Symbol, _fastPeriod, Resolution.Daily)", span="54-54"];
m24_10 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="Exit QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", span="45-45"];
m24_1 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="SetStartDate(2016, 1, 1)", span="47-47"];
m24_2 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="SetEndDate(2016, 8, 18)", span="48-48"];
m24_4 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="SetWarmUp(Math.Max(_fastPeriod, _slowPeriod))", span="50-50"];
m24_5 [cluster="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm.Initialize()", file="RegressionTests.cs", label="var equity = AddEquity(''SPY'', Resolution.Daily)", span="53-53"];
m24_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m24_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m24_53 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$151474.9016''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$24404.2897''},\r\n                {''Mean Population Estimated Insight Value'', ''$246.508''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''}\r\n            }", span="100-134"];
m24_41 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="596-617"];
m24_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.288''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.105''},\r\n                {''Beta'', ''-46.73''},\r\n                {''Annual Standard Deviation'', ''0.235''},\r\n                {''Annual Variance'', ''0.055''},\r\n                {''Information Ratio'', ''-3.366''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''0.017''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="412-433"];
m24_56 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m24_14 [cluster="System.Math.Max(int, int)", file="RegressionTests.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m24_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="54-75"];
m24_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="RegressionTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m24_57 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="929-929"];
m24_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="458-479"];
m24_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="481-502"];
m24_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="504-525"];
m24_58 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="929-929"];
m24_59 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="929-929"];
m24_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="136-157"];
m24_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="159-180"];
m24_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="182-203"];
m24_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="274-295"];
m24_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="205-226"];
m24_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="228-249"];
m24_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="251-272"];
m24_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="297-318"];
m24_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="320-341"];
m24_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="44-44"];
m24_54 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="939-939"];
m24_62 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="941-941"];
m24_63 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="942-942"];
m24_64 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="943-943"];
m24_65 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="939-939"];
m24_60 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m24_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m24_42 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="619-640"];
m24_43 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="642-663"];
m24_44 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="665-686"];
m24_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="77-98"];
m24_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="389-410"];
m24_46 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''25''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.46%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.400%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-5.603%''},\r\n                {''Sharpe Ratio'', ''-19.82''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-11.165''},\r\n                {''Beta'', ''585.081''},\r\n                {''Annual Standard Deviation'', ''0.36''},\r\n                {''Annual Variance'', ''0.129''},\r\n                {''Information Ratio'', ''-19.873''},\r\n                {''Tracking Error'', ''0.359''},\r\n                {''Treynor Ratio'', ''-0.012''},\r\n                {''Total Fees'', ''$6076.49''}\r\n            }", span="711-732"];
m24_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="343-364"];
m24_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="527-548"];
m24_39 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="550-571"];
m24_40 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="573-594"];
m24_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="435-456"];
m24_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m24_61 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m24_51 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateIntrinioEconomicData'', basicTemplateIntrinioEconomicData, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DuplicateSecurityWithBenchmarkRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", prediction=42, span="852-929"];
m24_31 [cluster="System.DateTime.AddDays(double)", file="RegressionTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m24_45 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="RegressionTests.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153"];
m24_47 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm", span=""];
m24_48 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateIntrinioEconomicData = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''89''},\r\n                {''Average Win'', ''0.09%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''5.704%''},\r\n                {''Drawdown'', ''4.800%''},\r\n                {''Expectancy'', ''1.469''},\r\n                {''Net Profit'', ''24.865%''},\r\n                {''Sharpe Ratio'', ''1.143''},\r\n                {''Loss Rate'', ''70%''},\r\n                {''Win Rate'', ''30%''},\r\n                {''Profit-Loss Ratio'', ''7.23''},\r\n                {''Alpha'', ''0.065''},\r\n                {''Beta'', ''-0.522''},\r\n                {''Annual Standard Deviation'', ''0.048''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''0.74''},\r\n                {''Tracking Error'', ''0.048''},\r\n                {''Treynor Ratio'', ''-0.105''},\r\n                {''Total Fees'', ''$100.58''}\r\n            }", span="757-778"];
m24_49 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''61''},\r\n                {''Average Win'', ''0.10%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''585.503%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.492%''},\r\n                {''Sharpe Ratio'', ''9.136''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''113.313''},\r\n                {''Annual Standard Deviation'', ''0.137''},\r\n                {''Annual Variance'', ''0.019''},\r\n                {''Information Ratio'', ''9.063''},\r\n                {''Tracking Error'', ''0.137''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$96.79''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$54250.3481''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$8740.3339''},\r\n                {''Mean Population Estimated Insight Value'', ''$2913.4446''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="780-814"];
m24_50 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var standardDeviationExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''63''},\r\n                {''Average Win'', ''0.06%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''793.499%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.840%''},\r\n                {''Sharpe Ratio'', ''10.781''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''128.815''},\r\n                {''Annual Standard Deviation'', ''0.132''},\r\n                {''Annual Variance'', ''0.017''},\r\n                {''Information Ratio'', ''10.71''},\r\n                {''Tracking Error'', ''0.132''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$76.61''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$54250.3481''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$8740.3339''},\r\n                {''Mean Population Estimated Insight Value'', ''$2913.4446''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="816-850"];
m24_52 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m24_66 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m25_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RsiAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m25_21 [cluster="System.Collections.Generic.List<T>.List()", file="RsiAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m25_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", span="41-41"];
m25_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", file="RsiAlphaModel.cs", label="_period = period", span="46-46"];
m25_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", file="RsiAlphaModel.cs", label="_resolution = resolution", span="47-47"];
m25_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.RsiAlphaModel(int, QuantConnect.Resolution)", span="41-41"];
m25_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RsiAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m25_61 [cluster="Unk.TryGetValue", file="RsiAlphaModel.cs", label="Entry Unk.TryGetValue", span=""];
m25_66 [cluster="lambda expression", file="RsiAlphaModel.cs", label="Entry lambda expression", span="127-127"];
m25_63 [cluster="lambda expression", file="RsiAlphaModel.cs", label="Entry lambda expression", span="100-100"];
m25_64 [cluster="lambda expression", file="RsiAlphaModel.cs", label="x.Symbol", span="100-100"];
m25_65 [cluster="lambda expression", file="RsiAlphaModel.cs", label="Exit lambda expression", span="100-100"];
m25_68 [cluster="lambda expression", file="RsiAlphaModel.cs", label="Exit lambda expression", span="127-127"];
m25_60 [cluster="Unk.History", file="RsiAlphaModel.cs", label="Entry Unk.History", span=""];
m25_58 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="190-190"];
m25_81 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs", label="Symbol = symbol", span="192-192"];
m25_82 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs", label="RSI = rsi", span="193-193"];
m25_83 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs", label="State = State.Middle", span="194-194"];
m25_84 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="190-190"];
m25_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="104-104"];
m25_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="979-979"];
m25_53 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="RsiAlphaModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m25_52 [cluster="System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", file="RsiAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", span="82-82"];
m25_55 [cluster="System.Collections.Generic.HashSet<T>.Clear()", file="RsiAlphaModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0"];
m25_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57"];
m25_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="var insights = new List<Insight>()", span="59-59"];
m25_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label=_symbolDataBySymbol, span="60-60"];
m25_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="return insights;", span="86-86"];
m25_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="var symbol = kvp.Key", span="62-62"];
m25_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="var rsi = kvp.Value.RSI", span="63-63"];
m25_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="var previousState = kvp.Value.State", span="64-64"];
m25_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="var state = GetState(rsi, previousState)", span="65-65"];
m25_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="state != previousState && rsi.IsReady", span="67-67"];
m25_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="kvp.Value.State = state", span="83-83"];
m25_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label=state, span="71-71"];
m25_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="var insightPeriod = _resolution.ToTimeSpan().Multiply(_period)", span="69-69"];
m25_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="State.TrippedLow", span="73-73"];
m25_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="State.TrippedHigh", span="77-77"];
m25_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57"];
m25_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RsiAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m25_24 [cluster="System.TimeSpan.Multiply(double)", file="RsiAlphaModel.cs", label="Entry System.TimeSpan.Multiply(double)", span="230-230"];
m25_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="95-95"];
m25_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="changes.RemovedSecurities.Count > 0", span="98-98"];
m25_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="var removed = changes.RemovedSecurities.ToHashSet(x => x.Symbol)", span="100-100"];
m25_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="algorithm.SubscriptionManager.Subscriptions", span="101-101"];
m25_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="removed.Contains(subscription.Symbol)", span="103-103"];
m25_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="_symbolDataBySymbol.Remove(subscription.Symbol)", span="105-105"];
m25_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="subscription.Consolidators.Clear()", span="106-106"];
m25_48 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="SymbolData symbolData", span="136-136"];
m25_50 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="symbolData.RSI.Update(data.EndTime, data.Value)", span="139-139"];
m25_51 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="95-95"];
m25_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="150-150"];
m25_69 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="rsi > 70m", span="152-152"];
m25_71 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="rsi < 30m", span="157-157"];
m25_73 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="previous == State.TrippedLow", span="162-162"];
m25_74 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="rsi > 35m", span="164-164"];
m25_76 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="previous == State.TrippedHigh", span="170-170"];
m25_77 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="rsi < 65m", span="172-172"];
m25_79 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="return previous;", span="178-178"];
m25_70 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="return State.TrippedHigh;", span="154-154"];
m25_72 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="return State.TrippedLow;", span="159-159"];
m25_75 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="return State.Middle;", span="166-166"];
m25_78 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="return State.Middle;", span="174-174"];
m25_80 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="150-150"];
m25_23 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="RsiAlphaModel.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m25_62 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m25_85 [file="RsiAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", span=""];
m25_86 [file="RsiAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", span=""];
m26_447 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="884-884"];
m26_448 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Security msft", span="886-886"];
m26_449 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="887-887"];
m26_450 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="889-889"];
m26_451 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="891-891"];
m26_452 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="892-892"];
m26_453 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 50m)", span="895-895"];
m26_454 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="900-900"];
m26_455 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="903-903"];
m26_456 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(2500, actual)", span="906-906"];
m26_457 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="884-884"];
m26_437 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="863-863"];
m26_438 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="Security msft", span="865-865"];
m26_439 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="866-866"];
m26_440 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="868-868"];
m26_441 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="870-870"];
m26_442 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="871-871"];
m26_443 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="Update(msft, 50m)", span="874-874"];
m26_444 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="877-877"];
m26_445 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(2500, actual)", span="880-880"];
m26_446 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="863-863"];
m26_346 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="658-658"];
m26_347 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="Security msft", span="660-660"];
m26_348 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="661-661"];
m26_349 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="663-663"];
m26_350 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="666-666"];
m26_351 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="667-667"];
m26_352 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="670-670"];
m26_353 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="674-674"];
m26_354 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-500, actual)", span="677-677"];
m26_355 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="658-658"];
m26_426 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="837-837"];
m26_427 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="Security msft", span="839-839"];
m26_428 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="840-840"];
m26_429 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="842-842"];
m26_430 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="844-844"];
m26_431 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="845-845"];
m26_432 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="848-848"];
m26_433 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="853-853"];
m26_434 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="856-856"];
m26_435 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(1250, actual)", span="859-859"];
m26_436 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="837-837"];
m26_479 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m26_584 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m26_237 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="464-464"];
m26_238 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="Security msft", span="466-466"];
m26_239 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="467-467"];
m26_240 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="469-469"];
m26_241 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="471-471"];
m26_242 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="472-472"];
m26_243 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="474-474"];
m26_244 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(4000, actual)", span="475-475"];
m26_245 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="464-464"];
m26_553 [cluster="Mock<IOrderProcessor>.cstr", file="SliceExtensions.cs", label="Entry Mock<IOrderProcessor>.cstr", span=""];
m26_147 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="292-292"];
m26_148 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="294-294"];
m26_149 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="295-295"];
m26_150 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="297-297"];
m26_151 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="299-299"];
m26_152 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="300-300"];
m26_153 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="303-303"];
m26_154 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-3600, actual)", span="304-304"];
m26_155 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="292-292"];
m26_563 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
m26_591 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m26_559 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m26_596 [cluster="Unk.Process", file="SliceExtensions.cs", label="Entry Unk.Process", span=""];
m26_416 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="816-816"];
m26_417 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="Security msft", span="818-818"];
m26_418 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="819-819"];
m26_419 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="821-821"];
m26_420 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="823-823"];
m26_421 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="824-824"];
m26_422 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="827-827"];
m26_423 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="830-830"];
m26_424 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-3500, actual)", span="833-833"];
m26_425 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="816-816"];
m26_583 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m26_356 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="681-681"];
m26_357 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="683-683"];
m26_358 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="684-684"];
m26_359 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="686-686"];
m26_360 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="689-689"];
m26_361 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="690-690"];
m26_362 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="693-693"];
m26_363 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="697-697"];
m26_364 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-499, actual)", span="700-700"];
m26_365 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="681-681"];
m26_102 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="215-215"];
m26_103 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="Security msft", span="217-217"];
m26_104 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="218-218"];
m26_105 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="220-220"];
m26_106 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="222-222"];
m26_107 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="223-223"];
m26_108 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="225-225"];
m26_109 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-2000, actual)", span="226-226"];
m26_110 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="215-215"];
m26_219 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="422-422"];
m26_220 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="424-424"];
m26_221 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="425-425"];
m26_222 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="427-427"];
m26_223 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="429-429"];
m26_224 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="430-430"];
m26_225 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="438-438"];
m26_226 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-999, actual)", span="439-439"];
m26_227 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="422-422"];
m26_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m26_406 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="793-793"];
m26_407 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Security msft", span="795-795"];
m26_408 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="796-796"];
m26_409 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="798-798"];
m26_410 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(25000)", span="801-801"];
m26_411 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="802-802"];
m26_412 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="805-805"];
m26_413 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="809-809"];
m26_414 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-1250, actual)", span="812-812"];
m26_415 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="793-793"];
m26_396 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="771-771"];
m26_397 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="773-773"];
m26_398 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="774-774"];
m26_399 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="776-776"];
m26_400 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="778-778"];
m26_401 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="779-779"];
m26_402 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="782-782"];
m26_403 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="786-786"];
m26_404 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(50, actual)", span="789-789"];
m26_405 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="771-771"];
m26_481 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m26_301 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="573-573"];
m26_302 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="575-575"];
m26_303 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="576-576"];
m26_304 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="578-578"];
m26_305 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="580-580"];
m26_306 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="581-581"];
m26_307 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="584-584"];
m26_308 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-5999, actual)", span="585-585"];
m26_309 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="573-573"];
m26_605 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m26_55 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m26_589 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m26_246 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="479-479"];
m26_247 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="481-481"];
m26_248 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="482-482"];
m26_249 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="484-484"];
m26_250 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="486-486"];
m26_251 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="487-487"];
m26_252 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="489-489"];
m26_253 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(3999, actual)", span="490-490"];
m26_254 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="479-479"];
m26_8 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1186-1186"];
m26_615 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="SliceExtensions.cs", label="security.SetMarketPrice(new TradeBar\r\n            {\r\n                Time = DateTime.Now,\r\n                Symbol = security.Symbol,\r\n                Open = close,\r\n                High = close,\r\n                Low = close,\r\n                Close = close\r\n            })", span="1188-1196"];
m26_616 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1186-1186"];
m26_576 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m26_32 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="103-103"];
m26_33 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="105-105"];
m26_34 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="106-106"];
m26_35 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="108-108"];
m26_36 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="109-109"];
m26_37 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-1999, actual)", span="110-110"];
m26_38 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="103-103"];
m26_556 [cluster="Orders.OrderTicket.cstr", file="SliceExtensions.cs", label="Entry Orders.OrderTicket.cstr", span=""];
m26_292 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="557-557"];
m26_293 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="559-559"];
m26_294 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="560-560"];
m26_295 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="562-562"];
m26_296 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="564-564"];
m26_297 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="565-565"];
m26_298 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="568-568"];
m26_299 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-6000, actual)", span="569-569"];
m26_300 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="557-557"];
m26_588 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m26_577 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m26_319 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="605-605"];
m26_320 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="607-607"];
m26_321 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="608-608"];
m26_322 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="610-610"];
m26_323 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="612-612"];
m26_324 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="613-613"];
m26_325 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="616-616"];
m26_326 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-10000, actual)", span="617-617"];
m26_327 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="605-605"];
m26_210 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="401-401"];
m26_211 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="Security msft", span="403-403"];
m26_212 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="404-404"];
m26_213 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="406-406"];
m26_214 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="408-408"];
m26_215 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="409-409"];
m26_216 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="417-417"];
m26_217 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-1000, actual)", span="418-418"];
m26_218 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="401-401"];
m26_310 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="589-589"];
m26_311 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="591-591"];
m26_312 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="592-592"];
m26_313 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="594-594"];
m26_314 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="596-596"];
m26_315 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="597-597"];
m26_316 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="600-600"];
m26_317 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-5600, actual)", span="601-601"];
m26_318 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="589-589"];
m26_575 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m26_592 [cluster="lambda expression", file="SliceExtensions.cs", label="Entry lambda expression", span="1109-1109"];
m26_593 [cluster="lambda expression", file="SliceExtensions.cs", label="m.Process(It.IsAny<Orders.OrderRequest>())", span="1109-1109"];
m26_594 [cluster="lambda expression", file="SliceExtensions.cs", label="Exit lambda expression", span="1109-1109"];
m26_590 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m26_468 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="944-944"];
m26_469 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="var algo = new QCAlgorithm()", span="946-946"];
m26_470 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="947-947"];
m26_471 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="algo.SetCash(100000)", span="948-948"];
m26_472 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="949-949"];
m26_473 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="950-950"];
m26_474 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="951-951"];
m26_476 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="955-955"];
m26_475 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="Update(eurusd, 26)", span="953-953"];
m26_477 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="Assert.AreEqual(3000m, actual)", span="956-956"];
m26_478 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="944-944"];
m26_120 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="245-245"];
m26_121 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="247-247"];
m26_122 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="248-248"];
m26_123 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="250-250"];
m26_124 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="252-252"];
m26_125 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="253-253"];
m26_126 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="255-255"];
m26_127 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-2000, actual)", span="256-256"];
m26_128 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="245-245"];
m26_93 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="200-200"];
m26_94 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="202-202"];
m26_95 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="203-203"];
m26_96 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="205-205"];
m26_97 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(25000)", span="207-207"];
m26_98 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="208-208"];
m26_99 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="210-210"];
m26_100 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-600, actual)", span="211-211"];
m26_101 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="200-200"];
m26_580 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m26_138 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="276-276"];
m26_139 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="278-278"];
m26_140 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="279-279"];
m26_141 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="281-281"];
m26_142 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="283-283"];
m26_143 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="284-284"];
m26_144 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="287-287"];
m26_145 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-3999, actual)", span="288-288"];
m26_146 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="276-276"];
m26_581 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m26_618 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SliceExtensions.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m26_585 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m26_66 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="155-155"];
m26_67 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="157-157"];
m26_68 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="158-158"];
m26_69 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="160-160"];
m26_70 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="162-162"];
m26_71 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="163-163"];
m26_72 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="165-165"];
m26_73 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(600, actual)", span="166-166"];
m26_74 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="155-155"];
m26_495 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="977-977"];
m26_496 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="var algo = new QCAlgorithm()", span="979-979"];
m26_497 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="980-980"];
m26_498 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="algo.SetCash(10000)", span="981-981"];
m26_499 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="982-982"];
m26_500 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="983-983"];
m26_501 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="984-984"];
m26_503 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="988-988"];
m26_502 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="Update(eurusd, 25)", span="986-986"];
m26_504 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="Assert.AreEqual(0m, actual)", span="989-989"];
m26_505 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="977-977"];
m26_129 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="260-260"];
m26_130 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="Security msft", span="262-262"];
m26_131 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="263-263"];
m26_132 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="265-265"];
m26_133 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="267-267"];
m26_134 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="268-268"];
m26_135 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="271-271"];
m26_136 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-4000, actual)", span="272-272"];
m26_137 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="260-260"];
m26_458 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="916-916"];
m26_459 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="Security msft", span="918-918"];
m26_460 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="919-919"];
m26_461 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="921-921"];
m26_462 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="923-923"];
m26_463 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="924-924"];
m26_464 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="Update(msft, 12.5m)", span="926-926"];
m26_465 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="935-935"];
m26_466 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-3000, actual)", span="936-936"];
m26_467 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="916-916"];
m26_506 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", span="1098-1098"];
m26_507 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="Security msft", span="1100-1100"];
m26_508 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, 1, 0)", span="1101-1101"];
m26_509 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="Update(msft, 25)", span="1103-1103"];
m26_510 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="1105-1105"];
m26_514 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Transactions.SetOrderProcessor(mock.Object)", span="1110-1110"];
m26_515 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Buy(Symbols.MSFT, 1)", span="1112-1112"];
m26_516 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Buy(Symbols.MSFT, 1.0)", span="1113-1113"];
m26_517 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Buy(Symbols.MSFT, 1.0m)", span="1114-1114"];
m26_518 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Buy(Symbols.MSFT, 1.0f)", span="1115-1115"];
m26_519 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Sell(Symbols.MSFT, 1)", span="1117-1117"];
m26_520 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Sell(Symbols.MSFT, 1.0)", span="1118-1118"];
m26_521 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Sell(Symbols.MSFT, 1.0m)", span="1119-1119"];
m26_522 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Sell(Symbols.MSFT, 1.0f)", span="1120-1120"];
m26_523 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Order(Symbols.MSFT, 1)", span="1122-1122"];
m26_524 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Order(Symbols.MSFT, 1.0)", span="1123-1123"];
m26_525 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Order(Symbols.MSFT, 1.0m)", span="1124-1124"];
m26_526 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.Order(Symbols.MSFT, 1.0f)", span="1125-1125"];
m26_527 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOrder(Symbols.MSFT, 1)", span="1127-1127"];
m26_528 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOrder(Symbols.MSFT, 1.0)", span="1128-1128"];
m26_529 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOrder(Symbols.MSFT, 1.0m)", span="1129-1129"];
m26_530 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOrder(Symbols.MSFT, 1.0f)", span="1130-1130"];
m26_531 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOnOpenOrder(Symbols.MSFT, 1)", span="1132-1132"];
m26_532 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOnOpenOrder(Symbols.MSFT, 1.0)", span="1133-1133"];
m26_533 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOnOpenOrder(Symbols.MSFT, 1.0m)", span="1134-1134"];
m26_534 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOnCloseOrder(Symbols.MSFT, 1)", span="1136-1136"];
m26_535 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOnCloseOrder(Symbols.MSFT, 1.0)", span="1137-1137"];
m26_536 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.MarketOnCloseOrder(Symbols.MSFT, 1.0m)", span="1138-1138"];
m26_537 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.LimitOrder(Symbols.MSFT, 1, 1)", span="1140-1140"];
m26_538 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.LimitOrder(Symbols.MSFT, 1.0, 1)", span="1141-1141"];
m26_539 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.LimitOrder(Symbols.MSFT, 1.0m, 1)", span="1142-1142"];
m26_540 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.StopMarketOrder(Symbols.MSFT, 1, 1)", span="1144-1144"];
m26_541 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.StopMarketOrder(Symbols.MSFT, 1.0, 1)", span="1145-1145"];
m26_542 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.StopMarketOrder(Symbols.MSFT, 1.0m, 1)", span="1146-1146"];
m26_543 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.StopLimitOrder(Symbols.MSFT, 1, 1, 2)", span="1148-1148"];
m26_544 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.StopLimitOrder(Symbols.MSFT, 1.0, 1, 2)", span="1149-1149"];
m26_545 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.StopLimitOrder(Symbols.MSFT, 1.0m, 1, 2)", span="1150-1150"];
m26_546 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.SetHoldings(Symbols.MSFT, 1)", span="1152-1152"];
m26_547 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.SetHoldings(Symbols.MSFT, 1.0)", span="1153-1153"];
m26_548 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.SetHoldings(Symbols.MSFT, 1.0m)", span="1154-1154"];
m26_549 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="algo.SetHoldings(Symbols.MSFT, 1.0f)", span="1155-1155"];
m26_551 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="Assert.AreEqual(expected, algo.Transactions.LastOrderId)", span="1158-1158"];
m26_511 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="var mock = new Mock<IOrderProcessor>()", span="1107-1107"];
m26_512 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="var request = new Mock<Orders.SubmitOrderRequest>(null, null, null, null, null, null, null, null)", span="1108-1108"];
m26_513 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="mock.Setup(m => m.Process(It.IsAny<Orders.OrderRequest>())).Returns(new Orders.OrderTicket(null, request.Object))", span="1109-1109"];
m26_550 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="int expected = 32", span="1157-1157"];
m26_552 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", span="1098-1098"];
m26_18 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="80-80"];
m26_19 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="82-82"];
m26_20 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="83-83"];
m26_21 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="85-85"];
m26_22 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="86-86"];
m26_23 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(1600, actual)", span="88-88"];
m26_24 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="80-80"];
m26_568 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m26_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m26_574 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m26_614 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m26_558 [cluster="Unk.SetOrderProcessor", file="SliceExtensions.cs", label="Entry Unk.SetOrderProcessor", span=""];
m26_255 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="494-494"];
m26_256 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="496-496"];
m26_257 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="497-497"];
m26_258 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="499-499"];
m26_259 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="501-501"];
m26_260 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="502-502"];
m26_261 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="504-504"];
m26_262 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(3600, actual)", span="505-505"];
m26_263 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="494-494"];
m26_283 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="541-541"];
m26_284 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="543-543"];
m26_285 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="544-544"];
m26_286 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="546-546"];
m26_287 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="548-548"];
m26_288 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="549-549"];
m26_289 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="552-552"];
m26_290 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-3600, actual)", span="553-553"];
m26_291 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="541-541"];
m26_75 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="170-170"];
m26_76 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="Security msft", span="172-172"];
m26_77 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="173-173"];
m26_78 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="175-175"];
m26_79 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(25000)", span="177-177"];
m26_80 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="178-178"];
m26_81 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="180-180"];
m26_82 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-1000, actual)", span="181-181"];
m26_83 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="170-170"];
m26_11 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="68-68"];
m26_12 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="70-70"];
m26_13 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="71-71"];
m26_14 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="73-73"];
m26_15 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="74-74"];
m26_16 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(1999, actual)", span="76-76"];
m26_17 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="68-68"];
m26_7 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1162-1162"];
m26_597 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="var algo = new QCAlgorithm()", span="1165-1165"];
m26_600 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1168-1168"];
m26_602 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="msft.SetLeverage(leverage)", span="1170-1170"];
m26_598 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1166-1166"];
m26_599 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="algo.SetCash(100000)", span="1167-1167"];
m26_601 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="msft = algo.Securities[Symbols.MSFT]", span="1169-1169"];
m26_603 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="return algo;", span="1171-1171"];
m26_604 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1162-1162"];
m26_376 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="727-727"];
m26_377 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="Security msft", span="729-729"];
m26_378 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="730-730"];
m26_379 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="732-732"];
m26_380 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="734-734"];
m26_381 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="735-735"];
m26_382 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="738-738"];
m26_383 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="742-742"];
m26_384 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(250, actual)", span="745-745"];
m26_385 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="727-727"];
m26_228 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="443-443"];
m26_229 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="445-445"];
m26_230 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="446-446"];
m26_231 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="448-448"];
m26_232 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="450-450"];
m26_233 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="451-451"];
m26_234 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="459-459"];
m26_235 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-600, actual)", span="460-460"];
m26_236 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="443-443"];
m26_386 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="749-749"];
m26_387 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="751-751"];
m26_388 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="752-752"];
m26_389 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="754-754"];
m26_390 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="756-756"];
m26_391 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="757-757"];
m26_392 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="760-760"];
m26_393 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="764-764"];
m26_394 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(249, actual)", span="767-767"];
m26_395 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="749-749"];
m26_564 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m26_201 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="386-386"];
m26_202 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="388-388"];
m26_203 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="389-389"];
m26_204 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="391-391"];
m26_205 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="393-393"];
m26_206 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="394-394"];
m26_207 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="396-396"];
m26_208 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(2000, actual)", span="397-397"];
m26_209 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="386-386"];
m26_46 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="125-125"];
m26_47 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="Security msft", span="127-127"];
m26_48 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="128-128"];
m26_49 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="130-130"];
m26_50 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="132-132"];
m26_51 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="133-133"];
m26_52 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="135-135"];
m26_53 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(1000, actual)", span="136-136"];
m26_54 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="125-125"];
m26_582 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m26_554 [cluster="Mock<Orders.SubmitOrderRequest>.cstr", file="SliceExtensions.cs", label="Entry Mock<Orders.SubmitOrderRequest>.cstr", span=""];
m26_183 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="356-356"];
m26_184 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="Security msft", span="358-358"];
m26_185 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="359-359"];
m26_186 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="361-361"];
m26_187 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="363-363"];
m26_188 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="364-364"];
m26_189 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="366-366"];
m26_190 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(2000, actual)", span="367-367"];
m26_191 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="356-356"];
m26_571 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m26_0 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="57-57"];
m26_1 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs", label="Security msft", span="59-59"];
m26_2 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="60-60"];
m26_3 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="62-62"];
m26_4 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="63-63"];
m26_5 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(2000, actual)", span="64-64"];
m26_6 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="57-57"];
m26_557 [cluster="Unk.Returns", file="SliceExtensions.cs", label="Entry Unk.Returns", span=""];
m26_573 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m26_165 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="324-324"];
m26_166 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="326-326"];
m26_167 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="327-327"];
m26_168 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="329-329"];
m26_169 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="331-331"];
m26_170 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="332-332"];
m26_171 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="335-335"];
m26_172 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-5999, actual)", span="336-336"];
m26_173 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="324-324"];
m26_587 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m26_25 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="92-92"];
m26_26 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs", label="Security msft", span="94-94"];
m26_27 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="95-95"];
m26_28 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="97-97"];
m26_29 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="98-98"];
m26_30 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-2000, actual)", span="99-99"];
m26_31 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="92-92"];
m26_10 [cluster="Unk.AreEqual", file="SliceExtensions.cs", label="Entry Unk.AreEqual", span=""];
m26_174 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="340-340"];
m26_175 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="342-342"];
m26_176 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="343-343"];
m26_177 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="345-345"];
m26_178 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="347-347"];
m26_179 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="348-348"];
m26_180 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="351-351"];
m26_181 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-5600, actual)", span="352-352"];
m26_182 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="340-340"];
m26_579 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m26_561 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m26_482 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m26_328 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="621-621"];
m26_329 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="623-623"];
m26_330 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="624-624"];
m26_331 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="626-626"];
m26_332 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="628-628"];
m26_333 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="629-629"];
m26_334 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="632-632"];
m26_335 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-9999, actual)", span="633-633"];
m26_336 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="621-621"];
m26_274 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="525-525"];
m26_275 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="527-527"];
m26_276 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="528-528"];
m26_277 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="530-530"];
m26_278 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="532-532"];
m26_279 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="533-533"];
m26_280 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="536-536"];
m26_281 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-3999, actual)", span="537-537"];
m26_282 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="525-525"];
m26_480 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m26_617 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="SliceExtensions.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m26_192 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="371-371"];
m26_193 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="373-373"];
m26_194 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="374-374"];
m26_195 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="376-376"];
m26_196 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(150000)", span="378-378"];
m26_197 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="379-379"];
m26_198 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="381-381"];
m26_199 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(2000, actual)", span="382-382"];
m26_200 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="371-371"];
m26_483 [cluster="QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", span="31-31"];
m26_111 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="230-230"];
m26_112 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="232-232"];
m26_113 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="233-233"];
m26_114 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="235-235"];
m26_115 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="237-237"];
m26_116 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="238-238"];
m26_117 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="240-240"];
m26_118 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-2000, actual)", span="241-241"];
m26_119 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="230-230"];
m26_569 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m26_570 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m26_264 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="509-509"];
m26_265 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="511-511"];
m26_266 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="512-512"];
m26_267 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="514-514"];
m26_268 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="516-516"];
m26_269 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="517-517"];
m26_270 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="520-520"];
m26_271 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-4000, actual)", span="521-521"];
m26_272 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="509-509"];
m26_578 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m26_366 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="704-704"];
m26_367 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="706-706"];
m26_368 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="707-707"];
m26_369 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="709-709"];
m26_370 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="712-712"];
m26_371 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="713-713"];
m26_372 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 50)", span="716-716"];
m26_373 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="720-720"];
m26_374 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-300, actual)", span="723-723"];
m26_375 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="704-704"];
m26_337 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="637-637"];
m26_338 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Security msft", span="639-639"];
m26_339 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="640-640"];
m26_340 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="642-642"];
m26_341 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="644-644"];
m26_342 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="645-645"];
m26_343 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="648-648"];
m26_344 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-9200, actual)", span="649-649"];
m26_345 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="637-637"];
m26_555 [cluster="Unk.Setup", file="SliceExtensions.cs", label="Entry Unk.Setup", span=""];
m26_572 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m26_562 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m26_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m26_560 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m26_39 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="114-114"];
m26_40 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="116-116"];
m26_41 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="117-117"];
m26_42 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="119-119"];
m26_43 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="120-120"];
m26_44 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-1600, actual)", span="121-121"];
m26_45 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="114-114"];
m26_595 [cluster="Unk.>", file="SliceExtensions.cs", label="Entry Unk.>", span=""];
m26_84 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="185-185"];
m26_85 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="187-187"];
m26_86 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="188-188"];
m26_87 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="190-190"];
m26_88 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(25000)", span="192-192"];
m26_89 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="193-193"];
m26_90 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="195-195"];
m26_91 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-999, actual)", span="196-196"];
m26_92 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="185-185"];
m26_156 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="308-308"];
m26_157 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="Security msft", span="310-310"];
m26_158 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="311-311"];
m26_159 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="313-313"];
m26_160 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="315-315"];
m26_161 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="316-316"];
m26_162 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="319-319"];
m26_163 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(-6000, actual)", span="320-320"];
m26_164 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="308-308"];
m26_484 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="961-961"];
m26_485 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="var algo = new QCAlgorithm()", span="963-963"];
m26_486 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="964-964"];
m26_487 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="algo.SetCash(100000)", span="965-965"];
m26_488 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="966-966"];
m26_489 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="967-967"];
m26_490 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="968-968"];
m26_492 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, -1m)", span="972-972"];
m26_491 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="Update(eurusd, 26)", span="970-970"];
m26_493 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="Assert.AreEqual(-3000m, actual)", span="973-973"];
m26_494 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="961-961"];
m26_57 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="140-140"];
m26_58 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Security msft", span="142-142"];
m26_59 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="143-143"];
m26_60 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Update(msft, 25)", span="145-145"];
m26_61 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio.SetCash(50000)", span="147-147"];
m26_62 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="148-148"];
m26_63 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="150-150"];
m26_64 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Assert.AreEqual(999, actual)", span="151-151"];
m26_65 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="140-140"];
m26_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m26_56 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SliceExtensions.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m26_273 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1174-1174"];
m26_606 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="var algo = new QCAlgorithm()", span="1177-1177"];
m26_609 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1180-1180"];
m26_611 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="msft.MarginModel = new SecurityMarginModel(initialMarginRequirement, maintenanceMarginRequirement)", span="1182-1182"];
m26_607 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1178-1178"];
m26_608 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="algo.SetCash(100000)", span="1179-1179"];
m26_610 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="msft = algo.Securities[Symbols.MSFT]", span="1181-1181"];
m26_612 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="return algo;", span="1183-1183"];
m26_613 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", file="SliceExtensions.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1174-1174"];
m26_586 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="SliceExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m26_619 [file="SliceExtensions.cs", label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", span=""];
m27_69 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m27_32 [cluster="System.Math.Abs(decimal)", file="StandardDeviationExecutionModel.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m27_28 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", span="62-62"];
m27_37 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="126-126"];
m27_38 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="var addedSymbolData = new List<Symbol>()", prediction=43, span="128-128"];
m27_39 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="changes.AddedSecurities", span="129-129"];
m27_42 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="addedSymbolData.Add(added.Symbol)", prediction=43, span="135-135"];
m27_44 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="addedSymbolData.Count > 0", prediction=43, span="140-140"];
m27_45 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="var history = algorithm.History(addedSymbolData, _period, _resolution)", prediction=46, span="142-142"];
m27_41 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="var symbolData = new SymbolData(algorithm, added, _period, _resolution)", prediction=47, span="134-134"];
m27_40 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="!_symbolData.ContainsKey(added.Symbol)", span="132-132"];
m27_43 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="_symbolData[added.Symbol] = symbolData", prediction=48, span="136-136"];
m27_46 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=1, file="StandardDeviationExecutionModel.cs", label=history, prediction=49, span="143-143"];
m27_54 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="changes.RemovedSecurities", span="160-160"];
m27_47 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="slice.Keys", prediction=50, span="145-145"];
m27_48 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="var value = slice[symbol]", prediction=51, span="147-147"];
m27_52 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="_symbolData.TryGetValue(symbol, out symbolData)", span="152-152"];
m27_53 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="symbolData.Consolidator.Update(data)", span="154-154"];
m27_49 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="var list = value as IList", prediction=52, span="148-148"];
m27_50 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="var data = (BaseData)(list != null ? list[list.Count - 1] : value)", prediction=53, span="149-149"];
m27_51 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="SymbolData symbolData", span="151-151"];
m27_57 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="IsSafeToRemove(algorithm, removed.Symbol)", span="166-166"];
m27_59 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="169-169"];
m27_56 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="164-164"];
m27_58 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="_symbolData.Remove(removed.Symbol)", span="168-168"];
m27_55 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="SymbolData data", span="163-163"];
m27_60 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="126-126"];
m27_29 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="StandardDeviationExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m27_86 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", span="207-207"];
m27_62 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StandardDeviationExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m27_61 [cluster="System.Collections.Generic.List<T>.List()", file="StandardDeviationExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m27_68 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="StandardDeviationExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m27_36 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", span="169-169"];
m27_101 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Entry lambda expression", span="234-238"];
m27_84 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="kvp.Value.ContainsMember(symbol)", span="214-214"];
m27_83 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Entry lambda expression", span="214-214"];
m27_85 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Exit lambda expression", span="214-214"];
m27_102 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="SMA.Update(consolidated.EndTime, consolidated.Value)", span="236-236"];
m27_103 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="STD.Update(consolidated.EndTime, consolidated.Value)", span="237-237"];
m27_104 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Exit lambda expression", span="234-238"];
m27_34 [cluster="System.Math.Sign(decimal)", file="StandardDeviationExecutionModel.cs", label="Entry System.Math.Sign(decimal)", span="0-0"];
m27_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m27_30 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", span="179-179"];
m27_70 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="var deviations = _deviations * data.STD", span="181-181"];
m27_71 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="unorderedQuantity > 0", span="182-182"];
m27_73 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="price < data.SMA - deviations", span="188-188"];
m27_76 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="price > data.SMA + deviations", span="199-199"];
m27_72 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="var price = data.Security.BidPrice == 0\r\n                    ? data.Security.Price\r\n                    : data.Security.BidPrice", span="184-186"];
m27_75 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="var price = data.Security.AskPrice == 0\r\n                    ? data.Security.AskPrice\r\n                    : data.Security.Price", span="195-197"];
m27_74 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="return true;", span="190-190"];
m27_78 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="return false;", span="205-205"];
m27_77 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="return true;", span="201-201"];
m27_79 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", span="179-179"];
m27_66 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
m27_63 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", span="224-224"];
m27_87 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Security = security", span="226-226"];
m27_88 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, resolution)", span="227-227"];
m27_89 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="var smaName = algorithm.CreateIndicatorName(security.Symbol, ''SMA'' + period, resolution)", span="228-228"];
m27_90 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="SMA = new SimpleMovingAverage(smaName, period)", span="229-229"];
m27_91 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="var stdName = algorithm.CreateIndicatorName(security.Symbol, ''STD'' + period, resolution)", span="230-230"];
m27_92 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="STD = new StandardDeviation(stdName, period)", span="231-231"];
m27_93 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="233-233"];
m27_94 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Consolidator.DataConsolidated += (sender, consolidated) =>\r\n                {\r\n                    SMA.Update(consolidated.EndTime, consolidated.Value);\r\n                    STD.Update(consolidated.EndTime, consolidated.Value);\r\n                }", span="234-238"];
m27_95 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", span="224-224"];
m27_99 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44"];
m27_0 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", span="54-54"];
m27_1 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="_period = period", span="60-60"];
m27_2 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="_deviations = deviations", span="61-61"];
m27_3 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="_resolution = resolution", span="62-62"];
m27_4 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="_targetsCollection = new PortfolioTargetCollection()", span="63-63"];
m27_5 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="_symbolData = new Dictionary<Symbol, SymbolData>()", span="64-64"];
m27_6 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", span="54-54"];
m27_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1270-1270"];
m27_100 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m27_9 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="73-73"];
m27_10 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="_targetsCollection.AddRange(targets)", span="75-75"];
m27_11 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label=_targetsCollection, span="77-77"];
m27_15 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="!_symbolData.TryGetValue(symbol, out data)", span="86-86"];
m27_17 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="data.STD.IsReady && PriceIsFavorable(data, unorderedQuantity)", span="98-98"];
m27_18 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="var maxOrderSize = OrderSizing.Value(data.Security, MaximumOrderValue)", span="101-101"];
m27_25 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="_targetsCollection.Remove(target.Symbol)", span="116-116"];
m27_16 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="data.Security.Price == 0m", span="92-92"];
m27_24 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="unorderedQuantity == 0m", span="114-114"];
m27_12 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="var symbol = target.Symbol", span="79-79"];
m27_13 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="var unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="82-82"];
m27_23 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="113-113"];
m27_14 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="SymbolData data", span="85-85"];
m27_20 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="orderSize -= orderSize % data.Security.SymbolProperties.LotSize", span="105-105"];
m27_19 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="var orderSize = Math.Min(maxOrderSize, Math.Abs(unorderedQuantity))", span="102-102"];
m27_22 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="algorithm.MarketOrder(symbol, Math.Sign(unorderedQuantity) * orderSize)", span="108-108"];
m27_21 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="orderSize != 0", span="106-106"];
m27_26 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="73-73"];
m27_98 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m27_67 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="211-211"];
m27_80 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs", label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="214-214"];
m27_81 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="211-211"];
m27_82 [cluster="Unk.Any", file="StandardDeviationExecutionModel.cs", label="Entry Unk.Any", span=""];
m27_31 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.Value(QuantConnect.Securities.Security, decimal)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.Value(QuantConnect.Securities.Security, decimal)", span="44-44"];
m27_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433"];
m27_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StandardDeviationExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m27_27 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="91-91"];
m27_64 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StandardDeviationExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m27_33 [cluster="System.Math.Min(decimal, decimal)", file="StandardDeviationExecutionModel.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m27_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m27_7 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.PortfolioTargetCollection()", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.PortfolioTargetCollection()", span="26-26"];
m27_105 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m27_106 [file="StandardDeviationExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", span=""];
m27_108 [file="StandardDeviationExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", span=""];
m27_107 [file="StandardDeviationExecutionModel.cs", label="QuantConnect.Symbol", span=""];
m28_29 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", span="47-47"];
m28_30 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs", label="DisposeWasCalled = true", span="49-49"];
m28_32 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs", label="throw new Exception();", span="52-52"];
m28_34 [cluster="System.Exception.Exception()", file="UserDefinedUniverse.cs", label="Entry System.Exception.Exception()", span="0-0"];
m28_36 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="sid = SecurityIdentifier.GenerateEquity(SecurityIdentifier.DefaultDate, ticker, market)", span="116-116"];
m28_38 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="var underlying = SecurityIdentifier.GenerateEquity(SecurityIdentifier.DefaultDate, ticker, market)", span="120-120"];
m28_39 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="sid = SecurityIdentifier.GenerateOption(SecurityIdentifier.DefaultDate, underlying, market, 0, 0, 0)", span="121-121"];
m28_41 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="sid = SecurityIdentifier.GenerateForex(ticker, market)", span="125-125"];
m28_43 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="sid = SecurityIdentifier.GenerateCfd(ticker, market)", span="129-129"];
m28_45 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="sid = SecurityIdentifier.GenerateFuture(SecurityIdentifier.DefaultDate, ticker, market)", span="133-133"];
m28_47 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="sid = SecurityIdentifier.GenerateCrypto(ticker, market)", span="137-137"];
m28_49 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="throw new NotImplementedException(''The specified security type is not implemented yet: '' + securityType);", span="142-142"];
m28_31 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs", label=_throwException, span="50-50"];
m28_50 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="return new Symbol(sid, ticker);", span="145-145"];
m28_33 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", span="47-47"];
m28_35 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", span=""];
m28_37 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="SecurityType.Option", span="119-119"];
m28_40 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="SecurityType.Forex", span="124-124"];
m28_42 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="SecurityType.Cfd", span="128-128"];
m28_44 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="SecurityType.Future", span="132-132"];
m28_46 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="SecurityType.Crypto", span="136-136"];
m28_48 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="SecurityType.Commodity", span="140-140"];
m28_51 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", span="105-105"];
m28_104 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="0-0"];
m28_5 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="67-67"];
m28_94 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig)", span="62-62"];
m28_63 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", span="153-153"];
m28_64 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="_symbols.Add(symbol)", span="155-155"];
m28_65 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, symbol))", span="157-157"];
m28_67 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="return false;", span="160-160"];
m28_66 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="return true;", span="158-158"];
m28_68 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", span="153-153"];
m28_96 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141"];
m28_10 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs", label="Assert.IsTrue(result)", span="22-22"];
m28_11 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs", label="Assert.IsTrue(disposable.DisposeWasCalled)", span="23-23"];
m28_12 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", span="18-18"];
m28_13 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Disposable(bool)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Disposable(bool)", span="42-42"];
m28_14 [cluster="Unk.IsTrue", file="UserDefinedUniverse.cs", label="Entry Unk.IsTrue", span=""];
m28_27 [cluster="lambda expression", file="UserDefinedUniverse.cs", label="Exit lambda expression", span="95-95"];
m28_28 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m28_0 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", span="10-10"];
m28_1 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs", label="IDisposable disposable = null", span="12-12"];
m28_2 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs", label="var result = disposable.DisposeSafely()", span="13-13"];
m28_3 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs", label="Assert.IsFalse(result)", span="14-14"];
m28_4 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", span="10-10"];
m28_23 [cluster="System.IDisposable.DisposeSafely(System.Action<System.Exception>)", file="UserDefinedUniverse.cs", label="Entry System.IDisposable.DisposeSafely(System.Action<System.Exception>)", span="29-29"];
m28_57 [cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="384-384"];
m28_59 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", span="319-319"];
m28_69 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="UserDefinedUniverse.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m28_24 [cluster="Unk.Select", file="UserDefinedUniverse.cs", label="Entry Unk.Select", span=""];
m28_7 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", span="18-18"];
m28_8 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs", label="var disposable = new Disposable()", span="20-20"];
m28_9 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="UserDefinedUniverse.cs", label="var result = disposable.DisposeSafely()", span="21-21"];
m28_16 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs", label="var errorHandlerWasInvoked = false", span="29-29"];
m28_15 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", span="27-27"];
m28_17 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs", label="var disposable = new Disposable(throwException: true)", span="30-30"];
m28_19 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs", label="Assert.IsFalse(result)", span="32-32"];
m28_18 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", color=green, community=0, file="UserDefinedUniverse.cs", label="var result = disposable.DisposeSafely(error => errorHandlerWasInvoked = true)", prediction=54, span="31-31"];
m28_20 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs", label="Assert.IsTrue(errorHandlerWasInvoked)", span="33-33"];
m28_25 [cluster="lambda expression", color=green, community=0, file="UserDefinedUniverse.cs", label="errorHandlerWasInvoked = true", prediction=55, span="31-31"];
m28_26 [cluster="lambda expression", file="UserDefinedUniverse.cs", label="Exit lambda expression", span="31-31"];
m28_97 [cluster="lambda expression", file="UserDefinedUniverse.cs", label="Entry lambda expression", span="200-200"];
m28_98 [cluster="lambda expression", file="UserDefinedUniverse.cs", label="dt + Interval", span="200-200"];
m28_99 [cluster="lambda expression", file="UserDefinedUniverse.cs", label="Exit lambda expression", span="200-200"];
m28_6 [cluster="Unk.ToHashSet", file="UserDefinedUniverse.cs", label="Entry Unk.ToHashSet", span=""];
m28_71 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="218-218"];
m28_100 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs", label="var handler = CollectionChanged", span="220-220"];
m28_102 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs", label="handler(this, e)", span="221-221"];
m28_101 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs", label="handler != null", span="221-221"];
m28_103 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="218-218"];
m28_78 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="UserDefinedUniverse.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m28_60 [cluster="QuantConnect.SecurityIdentifier.GenerateCrypto(string, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateCrypto(string, string)", span="395-395"];
m28_56 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="302-302"];
m28_52 [cluster="string.ToLower()", file="UserDefinedUniverse.cs", label="Entry string.ToLower()", span="0-0"];
m28_79 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="184-184"];
m28_80 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UserDefinedUniverse.cs", label="return _selector(utcTime);", span="186-186"];
m28_81 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="184-184"];
m28_58 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", span="406-406"];
m28_95 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="234-234"];
m28_22 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", span="27-27"];
m28_72 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", span="168-168"];
m28_73 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="_symbols.Remove(symbol)", span="170-170"];
m28_74 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, symbol))", span="172-172"];
m28_76 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="return false;", span="175-175"];
m28_75 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="return true;", span="173-173"];
m28_77 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", span="168-168"];
m28_62 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="242-242"];
m28_53 [cluster="string.Format(string, object, object)", file="UserDefinedUniverse.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m28_21 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="UserDefinedUniverse.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606"];
m28_54 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m28_70 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="UserDefinedUniverse.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m28_55 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="362-362"];
m28_82 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="193-193"];
m28_83 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="var exchangeHours = marketHoursDatabase.GetExchangeHours(Configuration)", span="195-195"];
m28_89 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="yield return dateTime;", span="204-204"];
m28_92 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="yield return dateTime;", span="209-209"];
m28_84 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="var localStartTime = startTimeUtc.ConvertFromUtc(exchangeHours.TimeZone)", span="196-196"];
m28_85 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="var localEndTime = endTimeUtc.ConvertFromUtc(exchangeHours.TimeZone)", span="197-197"];
m28_91 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="exchangeHours.IsOpen(dateTime, dateTime + Interval, Configuration.ExtendedMarketHours)", span="207-207"];
m28_87 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="LinqExtensions.Range(localStartTime, localEndTime, dt => dt + Interval)", span="200-200"];
m28_86 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="var first = true", span="199-199"];
m28_88 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label=first, span="202-202"];
m28_90 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="first = false", span="205-205"];
m28_93 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverse.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="193-193"];
m28_105 [file="UserDefinedUniverse.cs", label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", span=""];
m28_106 [file="UserDefinedUniverse.cs", label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>", span=""];
m29_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", span="40-40"];
m29_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="_universe = universe", span="42-42"];
m29_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="_marketHoursDatabase = marketHoursDatabase", span="43-43"];
m29_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.UserDefinedUniverseSubscriptionEnumeratorFactory(QuantConnect.Data.UniverseSelection.UserDefinedUniverse, QuantConnect.Securities.MarketHoursDatabase)", span="40-40"];
m29_9 [cluster="Unk.GetEnumerator", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Entry Unk.GetEnumerator", span=""];
m29_13 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m29_7 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="193-193"];
m29_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52"];
m29_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="return _universe.GetTriggerTimes(request.StartTimeUtc, request.EndTimeUtc, _marketHoursDatabase)\r\n                .Select(x => new Tick {Time = x, Symbol = request.Configuration.Symbol}).GetEnumerator();", span="54-55"];
m29_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52"];
m29_10 [cluster="lambda expression", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Entry lambda expression", span="55-55"];
m29_11 [cluster="lambda expression", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="new Tick {Time = x, Symbol = request.Configuration.Symbol}", span="55-55"];
m29_12 [cluster="lambda expression", file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="Exit lambda expression", span="55-55"];
m29_14 [file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory", span=""];
m29_15 [file="UserDefinedUniverseSubscriptionEnumeratorFactory.cs", label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", span=""];
m30_50 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="parsed is TradeBar", span="102-102"];
m30_89 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m30_96 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Daily, TickType.OpenInterest), tickType)", span="157-157"];
m30_101 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Hour, TickType.Trade), tradeBarType)", span="165-165"];
m30_97 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Second, TickType.OpenInterest), openInterestType)", span="159-159"];
m30_98 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), openInterestType)", span="160-160"];
m30_99 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Minute, TickType.Quote), quoteBarType)", span="162-162"];
m30_100 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Second, TickType.Trade), quoteBarType)", span="163-163"];
m30_102 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tradeBarType)", span="166-166"];
m30_103 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m30_104 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m30_106 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m30_105 [cluster="Unk.AreNotEqual", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.AreNotEqual", span=""];
m30_107 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(OpenInterest)))", span="172-172"];
m30_108 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(TradeBar)))", span="173-173"];
m30_109 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(QuoteBar)))", span="174-174"];
m30_11 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="orderSize -= orderSize % data.Security.SymbolProperties.LotSize", span="82-82"];
m30_12 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", color=green, community=0, file="VolumeWeightedAveragePriceExecutionModel.cs", label="orderSize != 0", prediction=56, span="83-83"];
m30_13 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="algorithm.MarketOrder(data.Security.Symbol, Math.Sign(unorderedQuantity) * orderSize)", span="85-85"];
m30_14 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="90-90"];
m30_21 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m30_51 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var expected = (TradeBar) parameters.Data", span="104-104"];
m30_52 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var actual = (TradeBar) parsed", span="105-105"];
m30_53 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="AssertBarsAreEqual(expected, actual)", span="106-106"];
m30_56 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var expected = (QuoteBar) parameters.Data", span="111-111"];
m30_54 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(expected.Volume, actual.Volume)", span="107-107"];
m30_57 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var actual = (QuoteBar) parsed", span="112-112"];
m30_55 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="parsed is QuoteBar", span="109-109"];
m30_59 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="AssertBarsAreEqual(expected.Ask, actual.Ask)", span="114-114"];
m30_58 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="AssertBarsAreEqual(expected.Bid, actual.Bid)", span="113-113"];
m30_60 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(expected.LastBidSize, actual.LastBidSize)", span="115-115"];
m30_63 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var name = algorithm.CreateIndicatorName(security.Symbol, ''VWAP'', security.Resolution)", span="179-179"];
m30_42 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(expected.Quantity, actual.Quantity)", span="93-93"];
m30_216 [cluster="Unk.ToArray", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.ToArray", span=""];
m30_227 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="466-466"];
m30_271 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Name = SecurityType + ''_'' + data.GetType().Name", span="498-498"];
m30_272 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="data.GetType() != typeof (Tick) || Resolution != Resolution.Tick", span="500-500"];
m30_270 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Config = new SubscriptionDataConfig(Data.GetType(), Data.Symbol, Resolution, TimeZones.Utc, TimeZones.Utc, false, true, false, false, TickType)", span="496-496"];
m30_273 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Name += ''_'' + Resolution", span="502-502"];
m30_274 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="data is Tick", span="505-505"];
m30_268 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="data.Symbol.ID.SecurityType == SecurityType.Forex || data.Symbol.ID.SecurityType == SecurityType.Cfd", span="491-491"];
m30_269 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="TickType = TickType.Quote", span="493-493"];
m30_256 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Data = data", span="468-468"];
m30_257 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="SecurityType = securityType", span="469-469"];
m30_258 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Resolution = resolution", span="470-470"];
m30_259 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="ExpectedLine = expectedLine", span="471-471"];
m30_262 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="TickType = tick.TickType", span="475-475"];
m30_264 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="TickType = TickType.Trade", span="479-479"];
m30_266 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="TickType = TickType.Quote", span="483-483"];
m30_275 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Name += ''_'' + ((Tick) data).TickType", span="507-507"];
m30_260 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="data is Tick", span="472-472"];
m30_261 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var tick = (Tick) data", span="474-474"];
m30_263 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="data is TradeBar", span="477-477"];
m30_265 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="data is QuoteBar", span="481-481"];
m30_267 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="throw new NotImplementedException();", span="487-487"];
m30_276 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="466-466"];
m30_243 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="ExpectedZipEntryName = expectedZipEntryName", span="441-441"];
m30_214 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="434-434"];
m30_238 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Symbol = symbol", span="436-436"];
m30_239 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Date = date", span="437-437"];
m30_240 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Resolution = resolution", span="438-438"];
m30_241 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="TickType = tickType", span="439-439"];
m30_242 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="ExpectedZipFileName = expectedZipFileName", span="440-440"];
m30_244 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="ExpectedRelativeZipFilePath = Path.Combine(expectedRelativeZipFileDirectory, expectedZipFileName).Replace(''/'', Path.DirectorySeparatorChar.ToString())", span="442-442"];
m30_246 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Name = SecurityType + ''_'' + resolution", span="445-445"];
m30_247 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="BaseDataType = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="447-447"];
m30_248 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="symbol.ID.SecurityType == SecurityType.Option && resolution != Resolution.Tick", span="448-448"];
m30_250 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Config = new SubscriptionDataConfig(BaseDataType, symbol, resolution, TimeZones.NewYork, TimeZones.NewYork, true, false, false, false, tickType)", span="452-452"];
m30_245 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="ExpectedZipFilePath = Path.Combine(Globals.DataFolder, ExpectedRelativeZipFilePath)", span="443-443"];
m30_249 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="BaseDataType = typeof(QuoteBar)", span="450-450"];
m30_251 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="434-434"];
m30_234 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m30_255 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m30_253 [cluster="char.ToString()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry char.ToString()", span="0-0"];
m30_197 [cluster="System.DateTime.Parse(string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m30_31 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData[added.Symbol] = new SymbolData(algorithm, added)", span="109-109"];
m30_35 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="IsSafeToRemove(algorithm, removed.Symbol)", span="119-119"];
m30_36 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData.Remove(removed.Symbol)", span="121-121"];
m30_37 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="122-122"];
m30_38 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
m30_43 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m30_44 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="134-134"];
m30_45 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131"];
m30_46 [cluster="Unk.Any", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.Any", span=""];
m30_47 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="134-134"];
m30_48 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="kvp.Value.ContainsMember(symbol)", span="134-134"];
m30_49 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit lambda expression", span="134-134"];
m30_61 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Security = security", span="177-177"];
m30_33 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="SymbolData data", span="116-116"];
m30_34 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="117-117"];
m30_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m30_40 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", span="175-175"];
m30_41 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131"];
m30_32 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="changes.RemovedSecurities", span="113-113"];
m30_62 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, security.Resolution)", span="178-178"];
m30_232 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m30_113 [cluster="Unk.IsTrue", file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", span=""];
m30_196 [cluster="string.ToLower()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry string.ToLower()", span="0-0"];
m30_28 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m30_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m30_30 [cluster="string.Split(params char[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry string.Split(params char[])", span="0-0"];
m30_9 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var maxOrderSize = OrderSizing.PercentVolume(data.Security, MaximumOrderQuantityPercentVolume)", span="78-78"];
m30_8 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="PriceIsFavorable(data, unorderedQuantity)", span="75-75"];
m30_6 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="!_symbolData.TryGetValue(symbol, out data)", span="63-63"];
m30_7 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="data.Security.Price == 0m", span="69-69"];
m30_226 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m30_15 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="unorderedQuantity == 0m", span="91-91"];
m30_221 [cluster="Unk.SetName", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.SetName", span=""];
m30_23 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(parameters.ExpectedLine, line)", span="64-64"];
m30_20 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m30_19 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54"];
m30_213 [cluster="System.Collections.Generic.List<T>.List()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m30_119 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765"];
m30_4 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="59-59"];
m30_235 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="416-416"];
m30_71 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var zipFilePath = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Data.Symbol, parameters.Data.Time.Date, parameters.Resolution, parameters.TickType)", span="125-125"];
m30_72 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var normalizeZipFilePath = new FileInfo(zipFilePath).FullName", span="126-126"];
m30_73 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var indexOfHash = normalizedSourcePath.LastIndexOf(''#'', StringComparison.Ordinal)", span="127-127"];
m30_217 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="349-349"];
m30_219 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit lambda expression", span="349-349"];
m30_218 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="new TestCaseData(x).SetName(x.Name)", span="349-349"];
m30_236 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="new TestCaseData(x).SetName(x.Name)", span="416-416"];
m30_237 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit lambda expression", span="416-416"];
m30_82 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_lastDate = input.EndTime.Date", span="225-225"];
m30_88 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212"];
m30_84 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfPriceTimesVolume += averagePrice * volume", span="230-230"];
m30_85 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfVolume == 0m", span="232-232"];
m30_86 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return input.Value;", span="235-235"];
m30_87 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return _sumOfPriceTimesVolume / _sumOfVolume;", span="238-238"];
m30_83 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfVolume += volume", span="229-229"];
m30_233 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m30_212 [cluster="System.DateTime.DateTime(int, int, int)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m30_120 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m30_125 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsFalse(LeanData.TryParsePath(invalidPath, out symbol, out date, out resolution))", span="193-193"];
m30_127 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsFalse(LeanData.TryParsePath(nonExistantPath, out symbol, out date, out resolution))", span="196-196"];
m30_129 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsFalse(LeanData.TryParsePath(notAPath, out symbol, out date, out resolution))", span="199-199"];
m30_131 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsFalse(LeanData.TryParsePath(emptyPath, out symbol, out date, out resolution))", span="202-202"];
m30_133 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsFalse(LeanData.TryParsePath(nullPath, out symbol, out date, out resolution))", span="205-205"];
m30_135 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsTradePath, out symbol, out date, out resolution))", span="208-208"];
m30_137 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsOpenInterestPath, out symbol, out date, out resolution))", span="211-211"];
m30_139 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsQuotePath, out symbol, out date, out resolution))", span="214-214"];
m30_124 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var invalidPath = ''forex/fxcm/eurusd/20160101_quote.zip''", span="192-192"];
m30_126 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var nonExistantPath = ''Data/f/fxcm/eurusd/20160101_quote.zip''", span="195-195"];
m30_128 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var notAPath = ''ooooooooooooooooooooooooooooooooooooooooooooooooooooooo''", span="198-198"];
m30_130 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var  emptyPath = ''''", span="201-201"];
m30_132 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="string nullPath = null", span="204-204"];
m30_134 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var optionsTradePath = ''Data/option/u sa/minute/aapl/20140606_trade_american.zip''", span="207-207"];
m30_136 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var optionsOpenInterestPath = ''Data/option/usa/minute/aapl/20140609_openinterest_american.zip''", span="210-210"];
m30_138 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var optionsQuotePath = ''Data/option/usa/minute/aapl/20140609_quote_american.zip''", span="213-213"];
m30_123 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Resolution resolution", span="190-190"];
m30_122 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Symbol symbol", span="189-189"];
m30_121 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="DateTime date", span="188-188"];
m30_140 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m30_25 [cluster="System.Math.Sign(decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Math.Sign(decimal)", span="0-0"];
m30_27 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", span="169-169"];
m30_22 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", span="33-33"];
m30_24 [cluster="System.Math.Min(decimal, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m30_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m30_0 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="49-49"];
m30_2 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label=_targetsCollection, span="54-54"];
m30_1 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_targetsCollection.AddRange(targets)", span="52-52"];
m30_3 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var symbol = target.Symbol", span="56-56"];
m30_16 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_targetsCollection.Remove(target.Symbol)", span="93-93"];
m30_18 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="91-91"];
m30_17 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="49-49"];
m30_90 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m30_95 [cluster="Unk.nameof", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.nameof", span=""];
m30_91 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", span="248-248"];
m30_94 [cluster="System.NotImplementedException.NotImplementedException(string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m30_92 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="throw new NotImplementedException($''{nameof(IntradayVwap)}.{nameof(ComputeNextValue)} should never be invoked.'');", span="250-250"];
m30_93 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", span="248-248"];
m30_78 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return new IndicatorResult(0, IndicatorStatus.InvalidInput);", span="217-217"];
m30_112 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", span=""];
m30_79 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_lastDate != input.EndTime.Date", span="221-221"];
m30_229 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m30_69 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var source = parameters.Data.GetSource(parameters.Config, parameters.Data.Time.Date, false)", span="123-123"];
m30_74 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="indexOfHash > 0", span="128-128"];
m30_80 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfVolume = 0m", span="223-223"];
m30_142 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m30_148 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="226-226"];
m30_149 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="227-227"];
m30_150 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(resolution, Resolution.Tick)", span="228-228"];
m30_151 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="229-229"];
m30_152 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2017-01-04'').Date)", span="230-230"];
m30_155 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="234-234"];
m30_156 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="235-235"];
m30_157 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="236-236"];
m30_158 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="237-237"];
m30_159 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="238-238"];
m30_162 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="242-242"];
m30_163 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="243-243"];
m30_164 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(resolution, Resolution.Hour)", span="244-244"];
m30_165 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''gbpusd'')", span="245-245"];
m30_166 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="246-246"];
m30_169 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="250-250"];
m30_170 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="251-251"];
m30_171 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="252-252"];
m30_172 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="253-253"];
m30_173 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-02'').Date)", span="254-254"];
m30_176 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="258-258"];
m30_177 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="259-259"];
m30_178 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(resolution, Resolution.Daily)", span="260-260"];
m30_179 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''aapl'')", span="261-261"];
m30_180 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="262-262"];
m30_183 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="266-266"];
m30_184 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="267-267"];
m30_185 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="268-268"];
m30_186 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''goog'')", span="269-269"];
m30_187 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2007-01-03'').Date)", span="270-270"];
m30_190 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Cfd)", span="274-274"];
m30_191 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="275-275"];
m30_192 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="276-276"];
m30_193 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''bcousd'')", span="277-277"];
m30_194 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="278-278"];
m30_147 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.TryParsePath(customPath, out symbol, out date, out resolution))", span="225-225"];
m30_153 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var mixedPathSeperators = @''Data//forex/fxcm\/minute//eurusd\\20160101_quote.zip''", span="232-232"];
m30_154 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.TryParsePath(mixedPathSeperators, out symbol, out date, out resolution))", span="233-233"];
m30_160 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var longRelativePath = ''../../../../../../../../../Data/forex/fxcm/hour/gbpusd.zip''", span="240-240"];
m30_161 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.TryParsePath(longRelativePath, out symbol, out date, out resolution))", span="241-241"];
m30_167 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var shortRelativePath = ''Data/forex/fxcm/minute/eurusd/20160102_quote.zip''", span="248-248"];
m30_168 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.TryParsePath(shortRelativePath, out symbol, out date, out resolution))", span="249-249"];
m30_174 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var dailyEquitiesPath = ''Data/equity/usa/daily/aapl.zip''", span="256-256"];
m30_175 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.TryParsePath(dailyEquitiesPath, out symbol, out date, out resolution))", span="257-257"];
m30_181 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var minuteEquitiesPath = ''Data/equity/usa/minute/googl/20070103_trade.zip''", span="264-264"];
m30_182 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.TryParsePath(minuteEquitiesPath, out symbol, out date, out resolution))", span="265-265"];
m30_188 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var cfdPath = ''Data/cfd/oanda/minute/bcousd/20160101_trade.zip''", span="272-272"];
m30_189 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.IsTrue(LeanData.TryParsePath(cfdPath, out symbol, out date, out resolution))", span="273-273"];
m30_146 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var customPath = ''a/very/custom/path/forex/oanda/tick/eurusd/20170104_quote.zip''", span="224-224"];
m30_145 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Resolution resolution", span="222-222"];
m30_143 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="DateTime date", span="220-220"];
m30_144 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Symbol symbol", span="221-221"];
m30_195 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m30_64 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="VWAP = new IntradayVwap(name)", span="180-180"];
m30_65 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m30_66 [cluster="Unk.IsInstanceOf", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.IsInstanceOf", span=""];
m30_115 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m30_116 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Cfd), TickType.Quote)", span="181-181"];
m30_117 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Forex), TickType.Quote)", span="182-182"];
m30_118 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m30_277 [cluster="System.NotImplementedException.NotImplementedException()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m30_68 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m30_76 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="decimal volume, averagePrice", span="214-214"];
m30_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1431-1431"];
m30_75 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212"];
m30_77 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="!TryGetVolumeAndAveragePrice(input, out volume, out averagePrice)", span="215-215"];
m30_5 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="SymbolData data", span="62-62"];
m30_231 [cluster="System.TimeSpan.FromDays(double)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m30_207 [cluster="Unk.Fail", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.Fail", span=""];
m30_10 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m30_252 [cluster="System.IO.Path.Combine(string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m30_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m30_202 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(expected.Open, actual.Open)", span="291-291"];
m30_203 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(expected.High, actual.High)", span="292-292"];
m30_204 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(expected.Low, actual.Low)", span="293-293"];
m30_205 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.AreEqual(expected.Close, actual.Close)", span="294-294"];
m30_200 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="expected == null && actual != null", span="287-287"];
m30_201 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Assert.Fail(''Expected null bar'')", span="289-289"];
m30_198 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="expected == null && actual == null", span="283-283"];
m30_199 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return;", span="285-285"];
m30_206 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281"];
m30_208 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m30_210 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return new List<LeanDataTestParameters>\r\n            {\r\n                // equity\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_Trade_Tick.csv'', ''equity/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_second_trade.csv'', ''equity/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_minute_trade.csv'', ''equity/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Hour, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Daily, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/daily''),\r\n\r\n                // equity option trades\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_tick_trade_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_tick_quote_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_second_trade_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_second_quote_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_minute_trade_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_minute_quote_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n\r\n                // forex\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_tick_quote.csv'', ''forex/fxcm/tick/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_second_quote.csv'', ''forex/fxcm/second/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_minute_quote.csv'', ''forex/fxcm/minute/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Hour, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Daily, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/daily''),\r\n\r\n                // cfd\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_tick_quote.csv'', ''cfd/fxcm/tick/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_second_quote.csv'', ''cfd/fxcm/second/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_minute_quote.csv'', ''cfd/fxcm/minute/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Hour, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Daily, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/daily''),\r\n\r\n                // Crypto - trades\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_tick_trade.csv'', ''crypto/gdax/tick/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_second_trade.csv'', ''crypto/gdax/second/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_minute_trade.csv'', ''crypto/gdax/minute/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Hour, TickType.Trade, ''btcusd_trade.zip'', ''btcusd_trade.csv'', ''crypto/gdax/hour''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Daily, TickType.Trade, ''btcusd_trade.zip'', ''btcusd_trade.csv'', ''crypto/gdax/daily''),\r\n\r\n                // Crypto -quotes\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_tick_quote.csv'', ''crypto/gdax/tick/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_second_quote.csv'', ''crypto/gdax/second/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_minute_quote.csv'', ''crypto/gdax/minute/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Hour, TickType.Quote, ''btcusd_quote.zip'', ''btcusd_quote.csv'', ''crypto/gdax/hour''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Daily, TickType.Quote, ''btcusd_quote.zip'', ''btcusd_quote.csv'', ''crypto/gdax/daily''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="300-349"];
m30_209 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var date = new DateTime(2016, 02, 17)", span="299-299"];
m30_211 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m30_228 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m30_110 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", span=""];
m30_111 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Symbol", span=""];
m30_81 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfPriceTimesVolume = 0m", span="224-224"];
m30_114 [cluster="Unk.IsFalse", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.IsFalse", span=""];
m30_230 [cluster="System.TimeSpan.FromMinutes(double)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m30_141 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="801-801"];
m30_220 [cluster="TestCaseData.cstr", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry TestCaseData.cstr", span=""];
m30_254 [cluster="string.Replace(string, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry string.Replace(string, string)", span="0-0"];
m30_222 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="352-352"];
m30_224 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return new List<LeanDataLineTestParameters>\r\n            {\r\n                //equity\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY, Value = 1, Quantity = 2, TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Equity, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Equity, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Equity, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // options\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,,,,,0,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.SPY_P_192_Feb19_2016, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''EX'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,30000,4,EX,1''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY_P_192_Feb19_2016, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // forex\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.EURUSD, BidPrice = 1, Value =1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Forex, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Forex, Resolution.Minute, ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Forex, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // cfd\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.DE10YBEUR, BidPrice = 1, Value = 1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Cfd, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Cfd, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Cfd, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // crypto - trades\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.BTCUSD, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,,,,,0,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,5,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.BTCUSD, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''gdax'', Suspicious = false, Quantity = 5}, SecurityType.Crypto, Resolution.Tick,\r\n                    ''34200000,1,2,3,4,5''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.BTCUSD, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''gdax'', Suspicious = false}, SecurityType.Crypto, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.BTCUSD, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.BTCUSD, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="355-416"];
m30_223 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var time = new DateTime(2016, 02, 18, 9, 30, 0)", span="354-354"];
m30_225 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="352-352"];
m30_278 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", span=""];
m30_279 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", span=""];
n44 -> n16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
n44 -> n19  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
n44 -> n26  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
n44 -> n30  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
n13 -> n16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
n23 -> n26  [color=darkseagreen4, key=1, label=object, style=dashed];
d26 -> d68  [color=green, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
d26 -> d34  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
d26 -> d107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
d26 -> d111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
d26 -> d114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
d26 -> d56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
d60 -> d68  [color=green, key=1, label=config, style=dashed];
d64 -> d70  [color=green, key=1, label=security, style=dashed];
d66 -> d70  [color=green, key=1, label=security, style=dashed];
d67 -> d70  [color=green, key=1, label=security, style=dashed];
d137 -> d69  [color=green, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d107  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d114  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d137 -> d71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
d50 -> d69  [color=green, key=1, label=symbol, style=dashed];
d50 -> d57  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d54 -> d56  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
d54 -> d57  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
d34 -> d93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d34 -> d38  [color=darkseagreen4, key=1, label=config, style=dashed];
d42 -> d96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d42 -> d99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d42 -> d102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d42 -> d44  [color=darkseagreen4, key=1, label=markets, style=dashed];
d42 -> d45  [color=darkseagreen4, key=1, label=markets, style=dashed];
d42 -> d46  [color=darkseagreen4, key=1, label=markets, style=dashed];
d42 -> d107  [color=darkseagreen4, key=1, label=markets, style=dashed];
d42 -> d111  [color=darkseagreen4, key=1, label=markets, style=dashed];
d42 -> d114  [color=darkseagreen4, key=1, label=markets, style=dashed];
d47 -> d50  [color=darkseagreen4, key=1, label=potentials, style=dashed];
d47 -> d106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d47 -> d110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d47 -> d113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d48 -> d116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d32 -> d35  [color=darkseagreen4, key=1, label=normal, style=dashed];
d32 -> d51  [color=darkseagreen4, key=1, label=normal, style=dashed];
d33 -> d38  [color=darkseagreen4, key=1, label=invert, style=dashed];
d33 -> d51  [color=darkseagreen4, key=1, label=invert, style=dashed];
d53 -> d65  [color=darkseagreen4, key=1, label=securityType, style=dashed];
d53 -> d63  [color=darkseagreen4, key=1, label=securityType, style=dashed];
d138 -> d107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
d138 -> d111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
d138 -> d114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
d139 -> d107  [color=darkseagreen4, key=1, label=markets, style=dashed];
d139 -> d111  [color=darkseagreen4, key=1, label=markets, style=dashed];
d139 -> d114  [color=darkseagreen4, key=1, label=markets, style=dashed];
m0_56 -> m0_199  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_56 -> m0_200  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_25 -> m0_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m0_32 -> m0_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m0_177 -> m0_177  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_34 -> m0_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_34 -> m0_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_34 -> m0_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_34 -> m0_43  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m0_28 -> m0_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_96 -> m0_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_97 -> m0_99  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m0_97 -> m0_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_97 -> m0_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_99 -> m0_99  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m0_102 -> m0_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_102 -> m0_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_105 -> m0_144  [color=darkseagreen4, key=1, label=fills, style=dashed];
m0_105 -> m0_150  [color=darkseagreen4, key=1, label=fills, style=dashed];
m0_110 -> m0_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_110 -> m0_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_110 -> m0_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_110 -> m0_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_110 -> m0_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_110 -> m0_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_110 -> m0_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_138 -> m0_150  [color=darkseagreen4, key=1, label=fills, style=dashed];
m0_151 -> m0_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_100  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m0_100 -> m0_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_100 -> m0_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_144 -> m0_146  [color=darkseagreen4, key=1, label=fill, style=dashed];
m0_144 -> m0_149  [color=darkseagreen4, key=1, label=fill, style=dashed];
m0_150 -> m0_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_57 -> m0_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_57 -> m0_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_57 -> m0_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_57 -> m0_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_57 -> m0_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m0_186 -> m0_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m0_75 -> m0_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_75 -> m0_80  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_75 -> m0_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_75 -> m0_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_19 -> m0_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_19 -> m0_19  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m0_211 -> m0_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_40  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_46  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_58  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_65  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_71  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_76  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_78  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_80  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_87  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_92  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_93  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_96  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_102  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_107  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_111  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_146  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_149  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_211 -> m0_200  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m2_2 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightDirection", style=dashed];
m2_2 -> m2_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_2 -> m2_6  [color=darkseagreen4, key=1, label="double?", style=dashed];
m2_2 -> m2_7  [color=darkseagreen4, key=1, label="double?", style=dashed];
m2_9 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.PostCreateConfigureSubscriptionEnumeratorFactory", style=dashed];
m2_18 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_18 -> m2_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_13 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m2_14 -> m2_16  [color=green, key=1, label=security, style=dashed];
m2_20 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m2_35 -> m2_16  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m4_200 -> m4_203  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m4_200 -> m4_205  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m4_200 -> m4_207  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m4_191 -> m4_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_227 -> m4_229  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_227 -> m4_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_228 -> m4_230  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m4_296 -> m4_319  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_296 -> m4_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_320 -> m4_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_452 -> m4_454  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_452 -> m4_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_452 -> m4_462  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_452 -> m4_463  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_454 -> m4_456  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_454 -> m4_457  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_454 -> m4_458  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_459 -> m4_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_461 -> m4_467  [color=darkseagreen4, key=1, label=ret, style=dashed];
m4_466 -> m4_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_90 -> m4_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_92 -> m4_92  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_273 -> m4_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_88 -> m4_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m4_252 -> m4_252  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m4_482 -> m4_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_239 -> m4_241  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_246 -> m4_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_247 -> m4_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_218 -> m4_504  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_508 -> m4_511  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_103 -> m4_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_67 -> m4_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_68 -> m4_70  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m4_71 -> m4_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m4_70 -> m4_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m4_434 -> m4_440  [color=darkseagreen4, key=1, label=option, style=dashed];
m4_434 -> m4_441  [color=darkseagreen4, key=1, label=option, style=dashed];
m4_435 -> m4_437  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m4_336 -> m4_340  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_336 -> m4_341  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_95 -> m4_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m4_381 -> m4_538  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_381 -> m4_539  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_381 -> m4_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_543 -> m4_545  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_264 -> m4_269  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_126 -> m4_138  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m4_129 -> m4_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_129 -> m4_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_129 -> m4_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_129 -> m4_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_391 -> m4_393  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m4_391 -> m4_399  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m4_388 -> m4_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m4_388 -> m4_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m4_387 -> m4_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m4_387 -> m4_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m4_429 -> m4_431  [color=darkseagreen4, key=1, label=future, style=dashed];
m4_417 -> m4_419  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m4_417 -> m4_425  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m4_414 -> m4_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m4_414 -> m4_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m4_413 -> m4_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m4_413 -> m4_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m4_356 -> m4_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_356 -> m4_359  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_356 -> m4_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_356 -> m4_361  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_356 -> m4_362  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_356 -> m4_363  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_356 -> m4_365  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_367 -> m4_369  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_116 -> m4_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m4_117 -> m4_120  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m4_286 -> m4_302  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_286 -> m4_305  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_519 -> m4_522  [color=darkseagreen4, key=1, label=message, style=dashed];
m4_568 -> m4_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_266  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_268  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_305  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_308  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_351  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_354  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_368  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_379  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_395  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_398  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_419  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_421  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_424  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_430  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_437  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_440  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_444  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_447  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_455  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_458  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_462  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_463  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_465  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_488  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_491  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_498  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_502  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_504  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_509  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_511  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_513  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_515  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_520  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_522  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_526  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_538  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_544  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_548  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_568 -> m4_552  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_569 -> m4_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m4_570 -> m4_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_571 -> m4_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_63 -> m7_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage", style=dashed];
m7_63 -> m7_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage", style=dashed];
m7_63 -> m7_17  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage", style=dashed];
m7_63 -> m7_55  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage", style=dashed];
m7_63 -> m7_59  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.FractalAdaptiveMovingAverage", style=dashed];
m7_8 -> m7_10  [color=darkseagreen4, key=1, label=error, style=dashed];
m7_8 -> m7_11  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m7_13 -> m7_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBaseDataBar", style=dashed];
m7_13 -> m7_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBaseDataBar", style=dashed];
m7_75 -> m7_81  [color=darkseagreen4, key=1, label=jobDays, style=dashed];
m7_76 -> m7_84  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m7_76 -> m7_79  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m7_76 -> m7_81  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m7_78 -> m7_84  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m7_80 -> m7_84  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m7_92 -> m7_1  [color=green, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m7_92 -> m7_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m7_92 -> m7_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m7_92 -> m7_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m7_93 -> m7_61  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m7_93 -> m7_62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m7_93 -> m7_63  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m7_93 -> m7_64  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m7_93 -> m7_65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m7_94 -> m7_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_23 -> m8_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_1 -> m10_5  [color=darkseagreen4, key=1, label=target, style=dashed];
m10_2 -> m10_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_3 -> m10_5  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m11_54 -> m11_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_54 -> m11_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_54 -> m11_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_54 -> m11_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_54 -> m11_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_54 -> m11_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_54 -> m11_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_54 -> m11_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_54 -> m11_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_27 -> m11_29  [color=green, key=1, label=insight, style=dashed];
m11_27 -> m11_30  [color=green, key=1, label=insight, style=dashed];
m11_27 -> m11_31  [color=green, key=1, label=insight, style=dashed];
m11_27 -> m11_33  [color=green, key=1, label=insight, style=dashed];
m11_27 -> m11_36  [color=green, key=1, label=insight, style=dashed];
m11_73 -> m11_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_76 -> m11_80  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m11_21 -> m11_23  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m11_61 -> m11_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_69 -> m11_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_46 -> m11_50  [color=darkseagreen4, key=1, label=str, style=dashed];
m11_46 -> m11_51  [color=darkseagreen4, key=1, label=str, style=dashed];
m11_48 -> m11_50  [color=darkseagreen4, key=1, label=thisSeries, style=dashed];
m11_48 -> m11_51  [color=darkseagreen4, key=1, label=str, style=dashed];
m11_50 -> m11_50  [color=darkseagreen4, key=1, label=str, style=dashed];
m11_108 -> m11_110  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_109 -> m11_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_109 -> m11_114  [color=darkseagreen4, key=1, label=updates, style=dashed];
m11_112 -> m11_112  [color=darkseagreen4, key=1, label=chart, style=dashed];
m11_113 -> m11_113  [color=darkseagreen4, key=1, label=series, style=dashed];
m11_2 -> m11_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightType", style=dashed];
m11_2 -> m11_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightDirection", style=dashed];
m11_2 -> m11_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_2 -> m11_9  [color=darkseagreen4, key=1, label="double?", style=dashed];
m11_9 -> m11_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_9 -> m11_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_9 -> m11_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_9 -> m11_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_9 -> m11_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_9 -> m11_50  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_41 -> m11_47  [color=darkseagreen4, key=1, label=thisChart, style=dashed];
m11_82 -> m11_89  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_82 -> m11_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_85 -> m11_89  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m11_85 -> m11_90  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="QuantConnect.Chart", style=dashed];
m11_123 -> m11_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_90  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_123 -> m11_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m11_124 -> m11_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_125 -> m11_80  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m11_126 -> m11_89  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_127 -> m11_89  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m11_127 -> m11_90  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m11_128 -> m11_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_213 -> m16_218  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_187 -> m16_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_104 -> m16_128  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m16_130 -> m16_133  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_105 -> m16_113  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>", style=dashed];
m16_112 -> m16_118  [color=darkseagreen4, key=1, label=splitPackets, style=dashed];
m16_114 -> m16_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_12 -> m16_18  [color=darkseagreen4, key=1, label=direction, style=dashed];
m16_203 -> m16_206  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_229 -> m16_232  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_229 -> m16_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_229 -> m16_236  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_229 -> m16_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_229 -> m16_239  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_229 -> m16_240  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_232 -> m16_236  [color=darkseagreen4, key=1, label=chart, style=dashed];
m16_232 -> m16_238  [color=darkseagreen4, key=1, label=chart, style=dashed];
m16_233 -> m16_236  [color=darkseagreen4, key=1, label=chart, style=dashed];
m16_233 -> m16_238  [color=darkseagreen4, key=1, label=chart, style=dashed];
m16_236 -> m16_240  [color=darkseagreen4, key=1, label=series, style=dashed];
m16_237 -> m16_239  [color=darkseagreen4, key=1, label=series, style=dashed];
m16_237 -> m16_240  [color=darkseagreen4, key=1, label=series, style=dashed];
m16_27 -> m16_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m16_27 -> m16_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m16_20 -> m16_22  [color=green, key=1, label=insight, style=dashed];
m16_20 -> m16_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m16_20 -> m16_24  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_276 -> m16_296  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_295 -> m16_298  [color=darkseagreen4, key=1, label=time, style=dashed];
m16_295 -> m16_301  [color=darkseagreen4, key=1, label=time, style=dashed];
m16_318 -> m16_318  [color=darkseagreen4, key=1, label=pair, style=dashed];
m16_50 -> m16_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m16_50 -> m16_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m16_58 -> m16_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_58 -> m16_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_58 -> m16_62  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m16_68 -> m16_71  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m16_72 -> m16_75  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m16_72 -> m16_76  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m16_72 -> m16_77  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m16_72 -> m16_78  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m16_72 -> m16_79  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m16_72 -> m16_80  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m16_75 -> m16_75  [color=darkseagreen4, key=1, label=pair, style=dashed];
m16_85 -> m16_88  [color=darkseagreen4, key=1, label=complete, style=dashed];
m16_35 -> m16_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m16_35 -> m16_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m16_140 -> m16_144  [color=darkseagreen4, key=1, label="QuantConnect.Statistics.StatisticsResults", style=dashed];
m16_146 -> m16_148  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_256 -> m16_258  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
m16_258 -> m16_260  [color=darkseagreen4, key=1, label=update, style=dashed];
m16_258 -> m16_261  [color=darkseagreen4, key=1, label=update, style=dashed];
m16_258 -> m16_262  [color=darkseagreen4, key=1, label=update, style=dashed];
m16_258 -> m16_264  [color=darkseagreen4, key=1, label=update, style=dashed];
m16_261 -> m16_264  [color=darkseagreen4, key=1, label=series, style=dashed];
m16_13 -> m16_16  [color=darkseagreen4, key=1, label=normalizedSignal, style=dashed];
m16_49 -> m16_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m16_49 -> m16_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m16_172 -> m16_174  [color=darkseagreen4, key=1, label=debug, style=dashed];
m16_173 -> m16_175  [color=darkseagreen4, key=1, label=error, style=dashed];
m16_158 -> m16_160  [color=darkseagreen4, key=1, label=resampleMinutes, style=dashed];
m16_166 -> m16_168  [color=darkseagreen4, key=1, label=types, style=dashed];
m16_166 -> m16_169  [color=darkseagreen4, key=1, label=types, style=dashed];
m16_166 -> m16_170  [color=darkseagreen4, key=1, label=types, style=dashed];
m16_167 -> m16_169  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_10 -> m16_18  [color=darkseagreen4, key=1, label=sd, style=dashed];
m16_196 -> m16_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_222 -> m16_224  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_324 -> m16_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_127  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_147  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_167  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_170  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_188  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_189  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_190  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_197  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_198  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_199  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_204  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_205  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_218  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_223  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_247  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_251  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_254  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_257  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_259  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_260  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_262  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_264  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_270  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_271  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_273  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_284  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_288  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_293  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_296  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_298  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_299  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_300  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_301  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_303  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_305  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_306  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_308  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_310  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_311  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_313  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_315  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_316  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_317  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m16_324 -> m16_318  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m19_74 -> m19_84  [color=darkseagreen4, key=1, label=rows, style=dashed];
m19_75 -> m19_77  [color=darkseagreen4, key=1, label=zip, style=dashed];
m19_76 -> m19_78  [color=darkseagreen4, key=1, label=stream, style=dashed];
m19_14 -> m19_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m19_14 -> m19_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m19_19 -> m19_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m19_45 -> m19_101  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_45 -> m19_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_45 -> m19_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_45 -> m19_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_45 -> m19_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_45 -> m19_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_45 -> m19_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_95 -> m19_101  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m19_95 -> m19_102  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m19_96 -> m19_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_11 -> m19_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m19_25 -> m19_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m19_27 -> m19_33  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m19_27 -> m19_39  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m19_27 -> m19_29  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m19_27 -> m19_31  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m19_26 -> m19_33  [color=darkseagreen4, key=1, label=sb, style=dashed];
m19_26 -> m19_36  [color=darkseagreen4, key=1, label=sb, style=dashed];
m19_26 -> m19_39  [color=darkseagreen4, key=1, label=sb, style=dashed];
m19_26 -> m19_34  [color=darkseagreen4, key=1, label=sb, style=dashed];
m19_26 -> m19_37  [color=darkseagreen4, key=1, label=sb, style=dashed];
m19_28 -> m19_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_28 -> m19_31  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_35 -> m19_39  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m19_24 -> m19_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper", style=dashed];
m19_24 -> m19_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper", style=dashed];
m19_51 -> m19_54  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m19_51 -> m19_62  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m19_52 -> m19_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_52 -> m19_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_52 -> m19_56  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m19_50 -> m19_62  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m19_55 -> m19_59  [color=darkseagreen4, key=1, label=rows, style=dashed];
m19_49 -> m19_62  [color=darkseagreen4, key=1, label=sb, style=dashed];
m19_49 -> m19_60  [color=darkseagreen4, key=1, label=sb, style=dashed];
m19_49 -> m19_61  [color=darkseagreen4, key=1, label=sb, style=dashed];
m19_60 -> m19_60  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m19_116 -> m19_7  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_8  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_9  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_10  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_15  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_18  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_22  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_33  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_36  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_39  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_72  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_62  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_101  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m19_116 -> m19_113  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m20_1 -> m20_3  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_4 -> m20_7  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m20_23 -> m20_25  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_23 -> m20_26  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_24 -> m20_26  [color=darkseagreen4, key=1, label=time, style=dashed];
m20_11 -> m20_13  [color=green, key=1, label=brokerage, style=dashed];
m20_11 -> m20_15  [color=darkseagreen4, key=1, label=time, style=dashed];
m20_8 -> m20_10  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_8 -> m20_13  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_8 -> m20_15  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_29 -> m20_33  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_29 -> m20_34  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_29 -> m20_35  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_29 -> m20_36  [color=darkseagreen4, key=1, label=target, style=dashed];
m20_31 -> m20_34  [color=darkseagreen4, key=1, label=value1, style=dashed];
m20_31 -> m20_36  [color=darkseagreen4, key=1, label=value1, style=dashed];
m20_32 -> m20_35  [color=darkseagreen4, key=1, label=data, style=dashed];
m21_70 -> m21_72  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_70 -> m21_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_1253 -> m21_1274  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m21_1253 -> m21_1311  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m21_1253 -> m21_1285  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m21_1269 -> m21_1294  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m21_1269 -> m21_1295  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m21_1273 -> m21_1285  [color=darkseagreen4, key=1, label=useRegularTradingHours, style=dashed];
m21_1279 -> m21_1309  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m21_1270 -> m21_1298  [color=darkseagreen4, key=1, label=history, style=dashed];
m21_1270 -> m21_1300  [color=darkseagreen4, key=1, label=history, style=dashed];
m21_1288 -> m21_1292  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m21_1271 -> m21_1314  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m21_1272 -> m21_1318  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m21_1272 -> m21_1324  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m21_1280 -> m21_1317  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs", style=dashed];
m21_1281 -> m21_1321  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m21_1281 -> m21_1323  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m21_1281 -> m21_1293  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m21_1276 -> m21_1313  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m21_1276 -> m21_1296  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m21_1277 -> m21_1309  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_1277 -> m21_1317  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_1277 -> m21_1285  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_1297 -> m21_1326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1286 -> m21_1292  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m21_613 -> m21_621  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_775 -> m21_861  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m21_775 -> m21_864  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m21_331 -> m21_788  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_331 -> m21_792  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_331 -> m21_794  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_331 -> m21_801  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_331 -> m21_804  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_787 -> m21_808  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_791 -> m21_808  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_793 -> m21_808  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_800 -> m21_808  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_355 -> m21_357  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m21_359 -> m21_362  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_665 -> m21_889  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_747 -> m21_849  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m21_151 -> m21_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1033 -> m21_1036  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1033 -> m21_1037  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1033 -> m21_1039  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1033 -> m21_1041  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1033 -> m21_1042  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1033 -> m21_1052  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1045 -> m21_1049  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_1045 -> m21_1052  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_1044 -> m21_1049  [color=darkseagreen4, key=1, label=id, style=dashed];
m21_1044 -> m21_1052  [color=darkseagreen4, key=1, label=id, style=dashed];
m21_750 -> m21_770  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m21_755 -> m21_769  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m21_768 -> m21_771  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_354 -> m21_380  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m21_373 -> m21_381  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m21_373 -> m21_382  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m21_378 -> m21_389  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m21_375 -> m21_389  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_375 -> m21_380  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_377 -> m21_394  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_377 -> m21_381  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_260 -> m21_279  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.AccountDownloadEndEventArgs", style=dashed];
m21_262 -> m21_283  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m21_262 -> m21_266  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m21_29 -> m21_31  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs", style=dashed];
m21_37 -> m21_52  [color=green, key=1, label=directory, style=dashed];
m21_37 -> m21_60  [color=green, key=1, label=directory, style=dashed];
m21_38 -> m21_51  [color=green, key=1, label="lambda expression", style=dashed];
m21_38 -> m21_55  [color=green, key=1, label="lambda expression", style=dashed];
m21_38 -> m21_59  [color=green, key=1, label="lambda expression", style=dashed];
m21_124 -> m21_124  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Holding>", style=dashed];
m21_138 -> m21_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_154 -> m21_154  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, decimal>", style=dashed];
m21_183 -> m21_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_392 -> m21_395  [color=darkseagreen4, key=1, label=uniqueKey, style=dashed];
m21_391 -> m21_393  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_391 -> m21_384  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_391 -> m21_396  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_514 -> m21_465  [color=darkseagreen4, key=1, label=rate, style=dashed];
m21_514 -> m21_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m21_514 -> m21_517  [color=darkseagreen4, key=1, label=rate, style=dashed];
m21_512 -> m21_515  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m21_519 -> m21_521  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m21_529 -> m21_484  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m21_529 -> m21_496  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m21_1310 -> m21_1313  [color=darkseagreen4, key=1, label=bar, style=dashed];
m21_1320 -> m21_1323  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m21_1322 -> m21_1293  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m21_1322 -> m21_1325  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m21_60 -> m21_62  [color=green, key=1, label=info, style=dashed];
m21_60 -> m21_63  [color=green, key=1, label=info, style=dashed];
m21_53 -> m21_55  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_61 -> m21_312  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_61 -> m21_316  [color=darkseagreen4, key=1, label=bool, style=dashed];
m21_61 -> m21_318  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_61 -> m21_320  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_61 -> m21_324  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_61 -> m21_325  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_62 -> m21_62  [color=green, key=1, label=line, style=dashed];
m21_62 -> m21_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_63 -> m21_63  [color=green, key=1, label=info, style=dashed];
m21_63 -> m21_65  [color=green, key=1, label=info, style=dashed];
m21_63 -> m21_66  [color=green, key=1, label=info, style=dashed];
m21_64 -> m21_64  [color=green, key=1, label=line, style=dashed];
m21_64 -> m21_66  [color=green, key=1, label=line, style=dashed];
m21_64 -> m21_67  [color=green, key=1, label=line, style=dashed];
m21_66 -> m21_66  [color=green, key=1, label=line, style=dashed];
m21_748 -> m21_987  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m21_748 -> m21_988  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m21_1006 -> m21_1010  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_1008 -> m21_1010  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_1149 -> m21_1151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m21_1149 -> m21_1160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m21_1149 -> m21_1183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m21_1151 -> m21_1163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1151 -> m21_1169  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1151 -> m21_1176  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1151 -> m21_1182  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1151 -> m21_1183  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1153 -> m21_1158  [color=darkseagreen4, key=1, label=tick, style=dashed];
m21_1153 -> m21_1163  [color=darkseagreen4, key=1, label=tick, style=dashed];
m21_1153 -> m21_1169  [color=darkseagreen4, key=1, label=tick, style=dashed];
m21_1153 -> m21_1189  [color=darkseagreen4, key=1, label=tick, style=dashed];
m21_1153 -> m21_1190  [color=darkseagreen4, key=1, label=tick, style=dashed];
m21_669 -> m21_697  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_669 -> m21_703  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_702 -> m21_705  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m21_1106 -> m21_1108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m21_1106 -> m21_1116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m21_1106 -> m21_1119  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m21_1108 -> m21_1123  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1108 -> m21_1129  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1114 -> m21_1116  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_1111 -> m21_1138  [color=darkseagreen4, key=1, label=tick, style=dashed];
m21_1111 -> m21_1139  [color=darkseagreen4, key=1, label=tick, style=dashed];
m21_1095 -> m21_1098  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_1095 -> m21_1100  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_1096 -> m21_1101  [color=darkseagreen4, key=1, label=time, style=dashed];
m21_1099 -> m21_1101  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m21_953 -> m21_955  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_338 -> m21_729  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_728 -> m21_742  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m21_731 -> m21_734  [color=darkseagreen4, key=1, label=limitOrder, style=dashed];
m21_732 -> m21_736  [color=darkseagreen4, key=1, label=stopMarketOrder, style=dashed];
m21_733 -> m21_738  [color=darkseagreen4, key=1, label=stopLimitOrder, style=dashed];
m21_730 -> m21_742  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m21_1143 -> m21_1146  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_1143 -> m21_1147  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_112 -> m21_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_112 -> m21_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_112 -> m21_115  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m21_113 -> m21_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_113 -> m21_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_157 -> m21_439  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_157 -> m21_444  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_157 -> m21_452  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_157 -> m21_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_157 -> m21_492  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_440 -> m21_510  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m21_441 -> m21_510  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m21_458 -> m21_513  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m21_458 -> m21_515  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m21_458 -> m21_465  [color=darkseagreen4, key=1, label=rate, style=dashed];
m21_458 -> m21_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m21_442 -> m21_509  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_442 -> m21_459  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m21_442 -> m21_476  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m21_442 -> m21_490  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m21_445 -> m21_497  [color=darkseagreen4, key=1, label=inverted, style=dashed];
m21_447 -> m21_449  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_447 -> m21_461  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_447 -> m21_481  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_454 -> m21_516  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_454 -> m21_462  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_454 -> m21_469  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_454 -> m21_525  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_454 -> m21_482  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_455 -> m21_462  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m21_455 -> m21_463  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m21_455 -> m21_482  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m21_455 -> m21_483  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m21_474 -> m21_524  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs", style=dashed];
m21_456 -> m21_513  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m21_456 -> m21_461  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m21_467 -> m21_485  [color=darkseagreen4, key=1, label=pacingDelaySeconds, style=dashed];
m21_467 -> m21_486  [color=darkseagreen4, key=1, label=pacingDelaySeconds, style=dashed];
m21_470 -> m21_521  [color=darkseagreen4, key=1, label=data, style=dashed];
m21_471 -> m21_520  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_471 -> m21_524  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_471 -> m21_481  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_473 -> m21_520  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m21_473 -> m21_521  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m21_487 -> m21_531  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_475 -> m21_528  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m21_475 -> m21_484  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m21_475 -> m21_496  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m21_491 -> m21_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m21_810 -> m21_904  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m21_73 -> m21_75  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m21_972 -> m21_975  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_972 -> m21_977  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_972 -> m21_978  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_972 -> m21_982  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_972 -> m21_983  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_973 -> m21_977  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m21_973 -> m21_982  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m21_973 -> m21_983  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m21_979 -> m21_982  [color=darkseagreen4, key=1, label=expiryDate, style=dashed];
m21_980 -> m21_982  [color=darkseagreen4, key=1, label=right, style=dashed];
m21_974 -> m21_977  [color=darkseagreen4, key=1, label=market, style=dashed];
m21_974 -> m21_982  [color=darkseagreen4, key=1, label=market, style=dashed];
m21_974 -> m21_983  [color=darkseagreen4, key=1, label=market, style=dashed];
m21_816 -> m21_824  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_364 -> m21_366  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m21_368 -> m21_371  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_535 -> m21_540  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_535 -> m21_542  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_535 -> m21_560  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_536 -> m21_542  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_536 -> m21_544  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_536 -> m21_546  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_536 -> m21_548  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_536 -> m21_551  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_536 -> m21_552  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_536 -> m21_556  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_536 -> m21_558  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_536 -> m21_565  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m21_538 -> m21_542  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m21_538 -> m21_552  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m21_538 -> m21_565  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m21_541 -> m21_552  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m21_541 -> m21_565  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m21_543 -> m21_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m21_543 -> m21_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m21_545 -> m21_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m21_545 -> m21_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m21_547 -> m21_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m21_547 -> m21_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m21_1021 -> m21_1023  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m21_1023 -> m21_1025  [color=darkseagreen4, key=1, label=tick, style=dashed];
m21_1026 -> m21_1028  [color=darkseagreen4, key=1, label=underlyingTick, style=dashed];
m21_1056 -> m21_1089  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_1087 -> m21_1091  [color=darkseagreen4, key=1, label=market, style=dashed];
m21_1088 -> m21_1091  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_314 -> m21_325  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_314 -> m21_327  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_321 -> m21_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m21_315 -> m21_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m21_319 -> m21_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m21_671 -> m21_680  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_671 -> m21_687  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_678 -> m21_687  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_678 -> m21_688  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_682 -> m21_688  [color=darkseagreen4, key=1, label=currentQuantityFilled, style=dashed];
m21_683 -> m21_688  [color=darkseagreen4, key=1, label=totalQuantityFilled, style=dashed];
m21_685 -> m21_688  [color=darkseagreen4, key=1, label=price, style=dashed];
m21_684 -> m21_687  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m21_684 -> m21_688  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m21_686 -> m21_688  [color=darkseagreen4, key=1, label=status, style=dashed];
m21_624 -> m21_626  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m21_624 -> m21_628  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m21_624 -> m21_629  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m21_627 -> m21_629  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m21_84 -> m21_103  [color=darkseagreen4, key=1, label=orders, style=dashed];
m21_84 -> m21_95  [color=darkseagreen4, key=1, label=orders, style=dashed];
m21_85 -> m21_108  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_85 -> m21_91  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_86 -> m21_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OpenOrderEventArgs", style=dashed];
m21_87 -> m21_94  [color=darkseagreen4, key=1, label=clientOnOpenOrderEnd, style=dashed];
m21_94 -> m21_52  [color=green, key=1, label=directory, style=dashed];
m21_94 -> m21_60  [color=green, key=1, label=directory, style=dashed];
m21_159 -> m21_168  [color=darkseagreen4, key=1, label=filter, style=dashed];
m21_160 -> m21_185  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_160 -> m21_173  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_161 -> m21_181  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_161 -> m21_169  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_165 -> m21_184  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_165 -> m21_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_162 -> m21_180  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_162 -> m21_184  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_162 -> m21_168  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_164 -> m21_180  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs", style=dashed];
m21_637 -> m21_646  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m21_637 -> m21_654  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m21_644 -> m21_654  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_644 -> m21_655  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_644 -> m21_656  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_644 -> m21_657  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_644 -> m21_658  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_644 -> m21_659  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_648 -> m21_655  [color=darkseagreen4, key=1, label=status, style=dashed];
m21_648 -> m21_656  [color=darkseagreen4, key=1, label=status, style=dashed];
m21_648 -> m21_658  [color=darkseagreen4, key=1, label=status, style=dashed];
m21_648 -> m21_659  [color=darkseagreen4, key=1, label=status, style=dashed];
m21_648 -> m21_660  [color=darkseagreen4, key=1, label=status, style=dashed];
m21_650 -> m21_655  [color=darkseagreen4, key=1, label=currentQuantityFilled, style=dashed];
m21_651 -> m21_655  [color=darkseagreen4, key=1, label=totalQuantityFilled, style=dashed];
m21_652 -> m21_654  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m21_652 -> m21_655  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m21_653 -> m21_655  [color=darkseagreen4, key=1, label=price, style=dashed];
m21_745 -> m21_834  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m21_193 -> m21_197  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_193 -> m21_210  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_193 -> m21_219  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_193 -> m21_227  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_194 -> m21_197  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m21_194 -> m21_210  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m21_194 -> m21_219  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m21_194 -> m21_227  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m21_210 -> m21_210  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_210 -> m21_219  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_210 -> m21_227  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_219 -> m21_219  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_219 -> m21_227  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_227 -> m21_227  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m21_195 -> m21_224  [color=darkseagreen4, key=1, label=existingSessionDetected, style=dashed];
m21_200 -> m21_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m21_202 -> m21_254  [color=darkseagreen4, key=1, label=error, style=dashed];
m21_208 -> m21_224  [color=darkseagreen4, key=1, label=existingSessionDetected, style=dashed];
m21_1228 -> m21_1236  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m21_1228 -> m21_1238  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m21_1228 -> m21_1240  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m21_1228 -> m21_1242  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m21_1231 -> m21_1236  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_1234 -> m21_1236  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m21_1246 -> m21_1249  [color=darkseagreen4, key=1, label=history, style=dashed];
m21_1247 -> m21_1249  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m21_1247 -> m21_1267  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m21_1248 -> m21_1267  [color=darkseagreen4, key=1, label=requestEndTime, style=dashed];
m21_1245 -> m21_1255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1245 -> m21_1258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1245 -> m21_1261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1245 -> m21_1249  [color=darkseagreen4, key=1, label=history, style=dashed];
m21_1249 -> m21_1266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_595 -> m21_599  [color=darkseagreen4, key=1, label=subscribedSymbols, style=dashed];
m21_22 -> m21_31  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs", style=dashed];
m21_23 -> m21_44  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_23 -> m21_48  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_403 -> m21_424  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m21_415 -> m21_425  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m21_415 -> m21_426  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m21_416 -> m21_424  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_418 -> m21_421  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_418 -> m21_435  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_418 -> m21_425  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_419 -> m21_432  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m21_419 -> m21_429  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m21_420 -> m21_432  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m21_344 -> m21_346  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m21_348 -> m21_351  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_399 -> m21_401  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m21_400 -> m21_412  [color=darkseagreen4, key=1, label=exchanges, style=dashed];
m21_401 -> m21_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_401 -> m21_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1192 -> m21_1215  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m21_1192 -> m21_1199  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m21_1196 -> m21_1215  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_1196 -> m21_1205  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m21_1196 -> m21_1225  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m21_1197 -> m21_1202  [color=darkseagreen4, key=1, label=contract, style=dashed];
m21_1195 -> m21_1215  [color=darkseagreen4, key=1, label=futuresExchanges, style=dashed];
m21_1205 -> m21_1218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1205 -> m21_1221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1205 -> m21_1224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1205 -> m21_1207  [color=darkseagreen4, key=1, label=filteredResults, style=dashed];
m21_1201 -> m21_1203  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m21_1062 -> m21_1065  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1062 -> m21_1066  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1062 -> m21_1067  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1062 -> m21_1069  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_1069 -> m21_1072  [color=darkseagreen4, key=1, label=id, style=dashed];
m21_1069 -> m21_1077  [color=darkseagreen4, key=1, label=id, style=dashed];
m21_1069 -> m21_1078  [color=darkseagreen4, key=1, label=id, style=dashed];
m21_1069 -> m21_1080  [color=darkseagreen4, key=1, label=id, style=dashed];
m21_668 -> m21_712  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_668 -> m21_713  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_668 -> m21_715  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_668 -> m21_717  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_1330 -> m21_1333  [color=darkseagreen4, key=1, label=files, style=dashed];
m21_1331 -> m21_1335  [color=darkseagreen4, key=1, label=lastLogUpdateTime, style=dashed];
m21_1332 -> m21_1338  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m21_1340 -> m21_1343  [color=darkseagreen4, key=1, label=lines, style=dashed];
m21_1337 -> m21_1338  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m21_1341 -> m21_1356  [color=darkseagreen4, key=1, label=separatorLine, style=dashed];
m21_1342 -> m21_1355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1343 -> m21_1358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_1368 -> m21_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_31  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_40  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_64  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_75  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_90  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_94  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_111  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_168  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_192  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_250  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_251  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_203  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_214  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_216  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_218  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_222  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_280  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_265  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_268  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_286  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_287  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_288  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_296  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_297  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_299  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_300  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_306  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_309  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_310  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_325  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_327  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_346  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_357  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_366  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_393  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_380  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_424  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_449  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_461  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_481  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_540  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_548  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_550  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_552  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_554  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_557  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_564  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_565  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_576  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_578  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_584  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_586  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_587  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_594  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_596  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_597  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_598  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_599  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_604  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_608  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_610  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_611  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_613  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_622  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_628  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_629  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_639  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_640  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_641  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_654  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_655  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_673  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_674  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_675  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_687  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_688  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_705  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_712  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_717  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_723  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_977  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_982  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_983  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_991  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_993  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_997  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_999  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1020  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1022  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1025  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1034  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1035  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1037  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1041  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1047  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1049  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1063  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1064  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1067  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1069  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1070  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1072  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1074  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1077  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1078  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1080  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1098  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1123  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1129  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1188  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1190  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1193  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1229  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1368 -> m21_1364  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_1369 -> m21_103  [color=darkseagreen4, key=1, label=orders, style=dashed];
m21_1370 -> m21_108  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_1373 -> m21_180  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_1373 -> m21_184  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_1374 -> m21_181  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_1375 -> m21_185  [color=darkseagreen4, key=1, label=details, style=dashed];
m21_1376 -> m21_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m21_1377 -> m21_283  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m21_1378 -> m21_389  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m21_1380 -> m21_394  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_1381 -> m21_412  [color=darkseagreen4, key=1, label=exchanges, style=dashed];
m21_1382 -> m21_432  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m21_1383 -> m21_435  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_1384 -> m21_510  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m21_1385 -> m21_510  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m21_1386 -> m21_513  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m21_1387 -> m21_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_1388 -> m21_516  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_1388 -> m21_525  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_1389 -> m21_520  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_1389 -> m21_524  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_1390 -> m21_521  [color=darkseagreen4, key=1, label=data, style=dashed];
m21_1391 -> m21_1215  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m21_1392 -> m21_1215  [color=darkseagreen4, key=1, label=futuresExchanges, style=dashed];
m21_1393 -> m21_1225  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m21_1394 -> m21_1267  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m21_1395 -> m21_1267  [color=darkseagreen4, key=1, label=requestEndTime, style=dashed];
m21_1396 -> m21_1309  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_1396 -> m21_1317  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m21_1397 -> m21_1311  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m21_1399 -> m21_1313  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m21_1400 -> m21_1314  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m21_1401 -> m21_1318  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m21_1401 -> m21_1324  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m21_1402 -> m21_1356  [color=darkseagreen4, key=1, label=separatorLine, style=dashed];
m22_48 -> m22_51  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_49 -> m22_52  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_49 -> m22_56  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_14 -> m22_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_14 -> m22_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_14 -> m22_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_14 -> m22_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_14 -> m22_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_14 -> m22_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_14 -> m22_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_14 -> m22_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_14 -> m22_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_23 -> m22_28  [color=green, key=1, label="lambda expression", style=dashed];
m22_160 -> m22_164  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m22_163 -> m22_166  [color=darkseagreen4, key=1, label=source, style=dashed];
m22_39 -> m22_42  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_39 -> m22_43  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_39 -> m22_46  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_45 -> m22_51  [color=green, key=1, label=riskTargetOverrides, style=dashed];
m22_45 -> m22_50  [color=darkseagreen4, key=1, label=riskTargetOverrides, style=dashed];
m22_45 -> m22_52  [color=darkseagreen4, key=1, label=riskTargetOverrides, style=dashed];
m22_44 -> m22_73  [color=green, key=1, label="lambda expression", style=dashed];
m22_44 -> m22_77  [color=green, key=1, label="lambda expression", style=dashed];
m22_80 -> m22_135  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m22_83 -> m22_89  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_83 -> m22_90  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_83 -> m22_91  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_83 -> m22_92  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_78 -> m22_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m22_78 -> m22_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_78 -> m22_96  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m22_78 -> m22_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_78 -> m22_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_78 -> m22_113  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m22_78 -> m22_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m22_61 -> m22_64  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_61 -> m22_65  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m22_61 -> m22_66  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_62 -> m22_65  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_62 -> m22_66  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_155 -> m22_158  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m22_107 -> m22_109  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_107 -> m22_110  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_112 -> m22_116  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_112 -> m22_117  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_112 -> m22_118  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_113 -> m22_119  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m22_113 -> m22_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m22_122 -> m22_128  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_129  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_130  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_131  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_133  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_134  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_135  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_136  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_137  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_122 -> m22_139  [color=darkseagreen4, key=1, label=csv, style=dashed];
m22_89 -> m22_91  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m22_89 -> m22_92  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m22_89 -> m22_93  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m22_89 -> m22_94  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m22_89 -> m22_95  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m22_153 -> m22_12  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_23  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_44  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_51  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_90  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_119  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_147  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_153 -> m22_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m22_38 -> m22_44  [color=green, key=1, label=targets, style=dashed];
m22_38 -> m22_43  [color=darkseagreen4, key=1, label=targets, style=dashed];
m22_38 -> m22_52  [color=darkseagreen4, key=1, label=targets, style=dashed];
m22_33 -> m22_38  [color=darkseagreen4, key=1, label=insights, style=dashed];
m22_12 -> m22_23  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightCollection", style=dashed];
m22_189 -> m22_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_54  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_90  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_91  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_92  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_96  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_106  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_113  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_119  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_130  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_131  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_132  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_133  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_136  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_139  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_142  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_143  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_182  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m22_189 -> m22_185  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m23_25 -> m23_27  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m23_9 -> m23_11  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m23_0 -> m23_2  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m23_17 -> m23_19  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m23_33 -> m23_35  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m23_41 -> m23_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m23_41 -> m23_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m23_41 -> m23_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m23_41 -> m23_28  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m23_41 -> m23_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m24_0 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m24_0 -> m24_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m24_20 -> m24_51  [color=green, key=1, label=basicTemplateFrameworkStatistics, style=dashed];
m24_41 -> m24_51  [color=green, key=1, label=basicTemplateDailyStatistics, style=dashed];
m24_33 -> m24_51  [color=green, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m24_18 -> m24_51  [color=green, key=1, label=emptyStatistics, style=dashed];
m24_35 -> m24_51  [color=green, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m24_36 -> m24_51  [color=green, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m24_37 -> m24_51  [color=green, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m24_21 -> m24_51  [color=green, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m24_22 -> m24_51  [color=green, key=1, label=limitFillRegressionStatistics, style=dashed];
m24_23 -> m24_51  [color=green, key=1, label=updateOrderRegressionStatistics, style=dashed];
m24_27 -> m24_51  [color=green, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m24_24 -> m24_51  [color=green, key=1, label=regressionStatistics, style=dashed];
m24_25 -> m24_51  [color=green, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m24_26 -> m24_51  [color=green, key=1, label=customDataRegressionStatistics, style=dashed];
m24_28 -> m24_51  [color=green, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m24_29 -> m24_51  [color=green, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m24_42 -> m24_51  [color=green, key=1, label=hourSplitStatistics, style=dashed];
m24_43 -> m24_51  [color=green, key=1, label=hourReverseSplitStatistics, style=dashed];
m24_44 -> m24_51  [color=green, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m24_19 -> m24_51  [color=green, key=1, label=basicTemplateStatistics, style=dashed];
m24_32 -> m24_51  [color=green, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m24_46 -> m24_51  [color=green, key=1, label=basicTemplateCryptoAlgorithmStatistics, style=dashed];
m24_30 -> m24_51  [color=green, key=1, label=parameterizedStatistics, style=dashed];
m24_38 -> m24_51  [color=green, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m24_39 -> m24_51  [color=green, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m24_40 -> m24_51  [color=green, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m24_34 -> m24_51  [color=green, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m24_51 -> m24_57  [color=green, key=1, label="lambda expression", style=dashed];
m24_31 -> m24_51  [color=green, key=1, label=historyAlgorithmStatistics, style=dashed];
m24_45 -> m24_51  [color=green, key=1, label=basicTemplateFuturesAlgorithmDailyStatistics, style=dashed];
m24_47 -> m24_51  [color=green, key=1, label=indicatorSuiteAlgorithmStatistics, style=dashed];
m24_47 -> m24_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm", style=dashed];
m24_47 -> m24_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm", style=dashed];
m24_47 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm", style=dashed];
m24_47 -> m24_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FuturesMomentumAlgorithm", style=dashed];
m24_48 -> m24_51  [color=green, key=1, label=basicTemplateIntrinioEconomicData, style=dashed];
m24_49 -> m24_51  [color=green, key=1, label=volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, style=dashed];
m25_5 -> m25_19  [color=darkseagreen4, key=1, label=insights, style=dashed];
m25_8 -> m25_11  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m25_9 -> m25_11  [color=darkseagreen4, key=1, label=previousState, style=dashed];
m25_10 -> m25_13  [color=darkseagreen4, key=1, label=state, style=dashed];
m25_27 -> m25_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m25_29 -> m25_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_29 -> m25_31  [color=darkseagreen4, key=1, label=removed, style=dashed];
m25_30 -> m25_32  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m25_30 -> m25_33  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m25_22 -> m25_71  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m25_22 -> m25_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m25_22 -> m25_74  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m25_22 -> m25_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m25_22 -> m25_77  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m25_22 -> m25_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m25_85 -> m25_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m25_85 -> m25_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m26_449 -> m26_451  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_449 -> m26_452  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_449 -> m26_453  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_449 -> m26_454  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_439 -> m26_441  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_439 -> m26_442  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_439 -> m26_443  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_348 -> m26_350  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_348 -> m26_351  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_348 -> m26_352  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_428 -> m26_430  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_428 -> m26_431  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_428 -> m26_432  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_428 -> m26_433  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_239 -> m26_241  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_239 -> m26_242  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_149 -> m26_151  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_149 -> m26_152  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_418 -> m26_420  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_418 -> m26_421  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_418 -> m26_422  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_358 -> m26_360  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_358 -> m26_361  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_358 -> m26_362  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_104 -> m26_106  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_104 -> m26_107  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_221 -> m26_223  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_221 -> m26_224  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_408 -> m26_410  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_408 -> m26_411  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_408 -> m26_412  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_398 -> m26_400  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_398 -> m26_401  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_398 -> m26_402  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_303 -> m26_305  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_303 -> m26_306  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_248 -> m26_250  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_248 -> m26_251  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_294 -> m26_296  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_294 -> m26_297  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_321 -> m26_323  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_321 -> m26_324  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_212 -> m26_214  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_212 -> m26_215  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_312 -> m26_314  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_312 -> m26_315  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_469 -> m26_471  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_469 -> m26_472  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_122 -> m26_124  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_122 -> m26_125  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_95 -> m26_97  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_95 -> m26_98  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_140 -> m26_142  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_140 -> m26_143  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_68 -> m26_70  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_68 -> m26_71  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_496 -> m26_498  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_496 -> m26_499  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_131 -> m26_133  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_131 -> m26_134  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_460 -> m26_462  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_460 -> m26_463  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_460 -> m26_464  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_508 -> m26_510  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_514  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_515  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_516  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_517  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_518  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_519  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_520  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_521  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_522  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_523  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_524  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_525  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_526  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_527  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_528  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_529  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_530  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_531  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_532  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_533  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_534  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_535  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_536  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_537  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_538  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_539  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_540  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_541  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_542  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_543  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_544  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_545  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_546  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_547  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_548  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_549  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_508 -> m26_551  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_511 -> m26_513  [color=darkseagreen4, key=1, label=mock, style=dashed];
m26_511 -> m26_514  [color=darkseagreen4, key=1, label=mock, style=dashed];
m26_513 -> m26_592  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_257 -> m26_259  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_257 -> m26_260  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_285 -> m26_287  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_285 -> m26_288  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_77 -> m26_79  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_77 -> m26_80  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_7 -> m26_602  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m26_597 -> m26_599  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_597 -> m26_603  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_601 -> m26_604  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.Security", style=dashed];
m26_378 -> m26_380  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_378 -> m26_381  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_378 -> m26_382  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_230 -> m26_232  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_230 -> m26_233  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_388 -> m26_390  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_388 -> m26_391  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_388 -> m26_392  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_203 -> m26_205  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_203 -> m26_206  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_48 -> m26_50  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_48 -> m26_51  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_185 -> m26_187  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_185 -> m26_188  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_167 -> m26_169  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_167 -> m26_170  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_176 -> m26_178  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_176 -> m26_179  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_330 -> m26_332  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_330 -> m26_333  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_276 -> m26_278  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_276 -> m26_279  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_194 -> m26_196  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_194 -> m26_197  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_113 -> m26_115  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_113 -> m26_116  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_266 -> m26_268  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_266 -> m26_269  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_368 -> m26_370  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_368 -> m26_371  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_368 -> m26_372  [color=darkseagreen4, key=1, label=msft, style=dashed];
m26_339 -> m26_341  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_339 -> m26_342  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_86 -> m26_88  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_86 -> m26_89  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_158 -> m26_160  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_158 -> m26_161  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_485 -> m26_487  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_485 -> m26_488  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_59 -> m26_61  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_59 -> m26_62  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_606 -> m26_608  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_606 -> m26_612  [color=darkseagreen4, key=1, label=algo, style=dashed];
m26_610 -> m26_613  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.Security", style=dashed];
m26_619 -> m26_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_28  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_42  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_60  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_69  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_87  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_114  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_123  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_132  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_150  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_159  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_168  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_177  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_186  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_204  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_213  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_222  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_231  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_258  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_267  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_277  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_286  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_295  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_304  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_313  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_322  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_331  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_340  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_349  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_352  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_359  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_362  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_369  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_372  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_379  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_382  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_389  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_392  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_399  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_402  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_409  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_412  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_419  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_422  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_429  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_432  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_440  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_443  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_450  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_453  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_461  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_464  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_475  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_491  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_502  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m26_619 -> m26_509  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
m27_37 -> m27_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m27_37 -> m27_54  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m27_37 -> m27_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m27_37 -> m27_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m27_38 -> m27_42  [color=green, key=1, label=addedSymbolData, style=dashed];
m27_38 -> m27_44  [color=green, key=1, label=addedSymbolData, style=dashed];
m27_39 -> m27_42  [color=green, key=1, label=added, style=dashed];
m27_54 -> m27_56  [color=darkseagreen4, key=1, label=removed, style=dashed];
m27_54 -> m27_57  [color=darkseagreen4, key=1, label=removed, style=dashed];
m27_54 -> m27_58  [color=darkseagreen4, key=1, label=removed, style=dashed];
m27_54 -> m27_59  [color=darkseagreen4, key=1, label=removed, style=dashed];
m27_47 -> m27_52  [color=green, key=1, label=symbol, style=dashed];
m27_50 -> m27_53  [color=green, key=1, label=data, style=dashed];
m27_56 -> m27_59  [color=darkseagreen4, key=1, label=data, style=dashed];
m27_101 -> m27_103  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m27_84 -> m27_84  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m27_30 -> m27_71  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m27_30 -> m27_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m27_30 -> m27_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m27_70 -> m27_73  [color=darkseagreen4, key=1, label=deviations, style=dashed];
m27_70 -> m27_76  [color=darkseagreen4, key=1, label=deviations, style=dashed];
m27_63 -> m27_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m27_94 -> m27_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m27_94 -> m27_103  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m27_9 -> m27_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m27_11 -> m27_25  [color=darkseagreen4, key=1, label=target, style=dashed];
m27_15 -> m27_17  [color=darkseagreen4, key=1, label=data, style=dashed];
m27_12 -> m27_15  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m27_12 -> m27_22  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m27_13 -> m27_17  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m27_13 -> m27_22  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m27_20 -> m27_22  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m27_67 -> m27_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m27_80 -> m27_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_106 -> m27_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_106 -> m27_58  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m27_108 -> m27_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m27_108 -> m27_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m27_108 -> m27_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m27_107 -> m27_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m28_29 -> m28_32  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m28_29 -> m28_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_29 -> m28_49  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m28_30 -> m28_34  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m28_30 -> m28_50  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m28_35 -> m28_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m28_35 -> m28_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m28_63 -> m28_65  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m28_10 -> m28_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
m28_10 -> m28_13  [color=darkseagreen4, key=1, label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m28_0 -> m28_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
m28_8 -> m28_11  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m28_16 -> m28_19  [color=darkseagreen4, key=1, label=selectSymbolsResult, style=dashed];
m28_17 -> m28_21  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m28_18 -> m28_24  [color=green, key=1, label="lambda expression", style=dashed];
m28_71 -> m28_102  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m28_100 -> m28_102  [color=darkseagreen4, key=1, label=handler, style=dashed];
m28_72 -> m28_74  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m28_83 -> m28_91  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m28_84 -> m28_87  [color=darkseagreen4, key=1, label=localStartTime, style=dashed];
m28_85 -> m28_87  [color=darkseagreen4, key=1, label=localEndTime, style=dashed];
m28_87 -> m28_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_87 -> m28_89  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m28_87 -> m28_91  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m28_87 -> m28_92  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m28_86 -> m28_88  [color=darkseagreen4, key=1, label=first, style=dashed];
m28_105 -> m28_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_73  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_80  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_87  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_91  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m28_105 -> m28_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m29_5 -> m29_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_89 -> m30_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_96 -> m30_98  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_96 -> m30_99  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_101 -> m30_103  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m30_101 -> m30_104  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m30_106 -> m30_109  [color=darkseagreen4, key=1, label="out decimal", style=dashed];
m30_107 -> m30_109  [color=darkseagreen4, key=1, label="out decimal", style=dashed];
m30_11 -> m30_13  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m30_21 -> m30_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m30_21 -> m30_23  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_21 -> m30_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_21 -> m30_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_51 -> m30_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_51 -> m30_53  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_52 -> m30_54  [color=darkseagreen4, key=1, label=actual, style=dashed];
m30_56 -> m30_60  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_56 -> m30_58  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_56 -> m30_59  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_57 -> m30_60  [color=darkseagreen4, key=1, label=actual, style=dashed];
m30_227 -> m30_272  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_227 -> m30_260  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_227 -> m30_263  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_227 -> m30_265  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_227 -> m30_268  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_227 -> m30_274  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_214 -> m30_248  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m30_31 -> m30_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_31 -> m30_36  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_31 -> m30_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_31 -> m30_38  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_31 -> m30_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_31 -> m30_34  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_31 -> m30_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m30_44 -> m30_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_48 -> m30_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m30_33 -> m30_35  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m30_33 -> m30_36  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m30_33 -> m30_37  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m30_33 -> m30_38  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m30_33 -> m30_39  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m30_33 -> m30_41  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m30_33 -> m30_50  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m30_33 -> m30_55  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m30_34 -> m30_37  [color=darkseagreen4, key=1, label=data, style=dashed];
m30_40 -> m30_42  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_40 -> m30_43  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_40 -> m30_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_40 -> m30_45  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_40 -> m30_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_40 -> m30_47  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_40 -> m30_48  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_40 -> m30_49  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_40 -> m30_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_41 -> m30_43  [color=darkseagreen4, key=1, label=actual, style=dashed];
m30_41 -> m30_44  [color=darkseagreen4, key=1, label=actual, style=dashed];
m30_41 -> m30_45  [color=darkseagreen4, key=1, label=actual, style=dashed];
m30_41 -> m30_46  [color=darkseagreen4, key=1, label=actual, style=dashed];
m30_41 -> m30_47  [color=darkseagreen4, key=1, label=actual, style=dashed];
m30_41 -> m30_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m30_41 -> m30_49  [color=darkseagreen4, key=1, label=actual, style=dashed];
m30_32 -> m30_34  [color=darkseagreen4, key=1, label=removed, style=dashed];
m30_32 -> m30_35  [color=darkseagreen4, key=1, label=removed, style=dashed];
m30_32 -> m30_36  [color=darkseagreen4, key=1, label=removed, style=dashed];
m30_32 -> m30_37  [color=darkseagreen4, key=1, label=removed, style=dashed];
m30_113 -> m30_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m30_113 -> m30_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m30_113 -> m30_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m30_113 -> m30_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m30_28 -> m30_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m30_28 -> m30_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_28 -> m30_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_6 -> m30_8  [color=darkseagreen4, key=1, label=data, style=dashed];
m30_6 -> m30_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m30_4 -> m30_8  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m30_4 -> m30_10  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m30_4 -> m30_13  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m30_72 -> m30_76  [color=darkseagreen4, key=1, label=normalizeZipFilePath, style=dashed];
m30_73 -> m30_75  [color=darkseagreen4, key=1, label=indexOfHash, style=dashed];
m30_82 -> m30_85  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m30_82 -> m30_86  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m30_82 -> m30_87  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m30_84 -> m30_88  [color=darkseagreen4, key=1, label=source, style=dashed];
m30_85 -> m30_88  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_85 -> m30_87  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_87 -> m30_87  [color=darkseagreen4, key=1, label=expected, style=dashed];
m30_22 -> m30_25  [color=darkseagreen4, key=1, label=line, style=dashed];
m30_22 -> m30_27  [color=darkseagreen4, key=1, label=line, style=dashed];
m30_0 -> m30_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m30_0 -> m30_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_2 -> m30_16  [color=darkseagreen4, key=1, label=target, style=dashed];
m30_3 -> m30_6  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_16 -> m30_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m30_91 -> m30_95  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m30_91 -> m30_96  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m30_94 -> m30_101  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m30_94 -> m30_102  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m30_92 -> m30_97  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m30_92 -> m30_98  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m30_93 -> m30_99  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m30_93 -> m30_100  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m30_112 -> m30_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m30_147 -> m30_149  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_147 -> m30_150  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m30_147 -> m30_151  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_147 -> m30_152  [color=darkseagreen4, key=1, label=date, style=dashed];
m30_154 -> m30_156  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_154 -> m30_157  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m30_154 -> m30_158  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_154 -> m30_159  [color=darkseagreen4, key=1, label=date, style=dashed];
m30_161 -> m30_163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_161 -> m30_164  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m30_161 -> m30_165  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_161 -> m30_166  [color=darkseagreen4, key=1, label=date, style=dashed];
m30_168 -> m30_170  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_168 -> m30_171  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m30_168 -> m30_172  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_168 -> m30_173  [color=darkseagreen4, key=1, label=date, style=dashed];
m30_175 -> m30_177  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_175 -> m30_178  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m30_175 -> m30_179  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_175 -> m30_180  [color=darkseagreen4, key=1, label=date, style=dashed];
m30_182 -> m30_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_182 -> m30_185  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m30_182 -> m30_186  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_182 -> m30_187  [color=darkseagreen4, key=1, label=date, style=dashed];
m30_189 -> m30_191  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_189 -> m30_192  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m30_189 -> m30_193  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m30_189 -> m30_194  [color=darkseagreen4, key=1, label=date, style=dashed];
m30_70 -> m30_76  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m30_70 -> m30_75  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m30_75 -> m30_75  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m30_75 -> m30_77  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_75 -> m30_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_75 -> m30_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_67 -> m30_202  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m30_67 -> m30_203  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m30_67 -> m30_204  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m30_67 -> m30_205  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m30_67 -> m30_200  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m30_210 -> m30_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_110 -> m30_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_110 -> m30_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_110 -> m30_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_110 -> m30_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_110 -> m30_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_110 -> m30_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_110 -> m30_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_110 -> m30_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_110 -> m30_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m30_111 -> m30_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m30_224 -> m30_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_279 -> m30_272  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
}
