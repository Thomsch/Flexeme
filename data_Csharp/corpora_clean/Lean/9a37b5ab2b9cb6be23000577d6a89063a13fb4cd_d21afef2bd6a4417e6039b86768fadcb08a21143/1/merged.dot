digraph  {
n133 [label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
n134 [label=bool, span=""];
n135 [label=TSecond, span=""];
n136 [label=x, span=""];
n137 [label=y, span=""];
n138 [label=numerator, span=""];
n139 [label=denominator, span=""];
n0 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)"];
n1 [label="return indicator.Update(new IndicatorDataPoint(time, value));", span="38-38", cluster="QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)"];
n2 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)"];
n3 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)"];
n4 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)"];
n5 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", span="49-49", cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)"];
n6 [label="first.Updated += (sender, consolidated) =>\r\n            {\r\n                // only send the data along if we're ready\r\n                if (!waitForFirstToReady || first.IsReady)\r\n                {\r\n                    second.Update(consolidated);\r\n                }\r\n            }", span="53-60", cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)"];
n10 [label="!waitForFirstToReady || first.IsReady", span="56-56", cluster="lambda expression"];
n11 [label="second.Update(consolidated)", span="58-58", cluster="lambda expression"];
n7 [label="return second;", span="62-62", cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)"];
n8 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", span="49-49", cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)"];
n9 [label="Entry lambda expression", span="53-60", cluster="lambda expression"];
n12 [label="Exit lambda expression", span="53-60", cluster="lambda expression"];
n13 [label="Entry QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", span="72-72", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n14 [label="var x = new WindowIdentity(period)", span="76-76", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n15 [label="var y = new WindowIdentity(period)", span="77-77", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n16 [label="var numerator = new Sum(''Sum_xy'', period)", span="78-78", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n17 [label="var denominator = new Sum(''Sum_y'', period)", span="79-79", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n18 [label="value.Updated += (sender, consolidated) =>\r\n            {\r\n                x.Update(consolidated);\r\n                if (x.Samples == y.Samples)\r\n                {\r\n                    numerator.Update(consolidated.Time, consolidated.Value * y.Current.Value);\r\n                }  \r\n            }", span="81-88", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n19 [label="weight.Updated += (sender, consolidated) =>\r\n            {\r\n                y.Update(consolidated);\r\n                if (x.Samples == y.Samples)\r\n                {\r\n                    numerator.Update(consolidated.Time, consolidated.Value * x.Current.Value);\r\n                }\r\n                denominator.Update(consolidated);\r\n            }", span="90-98", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n22 [label="Entry QuantConnect.Indicators.WindowIdentity.WindowIdentity(int)", span="37-37", cluster="QuantConnect.Indicators.WindowIdentity.WindowIdentity(int)"];
n26 [label="x.Update(consolidated)", span="83-83", cluster="lambda expression"];
n27 [label="x.Samples == y.Samples", span="84-84", cluster="lambda expression"];
n33 [label="x.Samples == y.Samples", span="93-93", cluster="lambda expression"];
n34 [label="numerator.Update(consolidated.Time, consolidated.Value * x.Current.Value)", span="95-95", cluster="lambda expression"];
n28 [label="numerator.Update(consolidated.Time, consolidated.Value * y.Current.Value)", span="86-86", cluster="lambda expression"];
n32 [label="y.Update(consolidated)", span="92-92", cluster="lambda expression"];
n23 [label="Entry QuantConnect.Indicators.Sum.Sum(string, int)", span="44-44", cluster="QuantConnect.Indicators.Sum.Sum(string, int)"];
n20 [label="return numerator.Over(denominator);", span="100-100", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n35 [label="denominator.Update(consolidated)", span="97-97", cluster="lambda expression"];
n21 [label="Exit QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", span="72-72", cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)"];
n24 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="215-215", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n25 [label="Entry lambda expression", span="81-88", cluster="lambda expression"];
n29 [label="Exit lambda expression", span="81-88", cluster="lambda expression"];
n30 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)"];
n31 [label="Entry lambda expression", span="90-98", cluster="lambda expression"];
n36 [label="Exit lambda expression", span="90-98", cluster="lambda expression"];
n37 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="112-112", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n38 [label="var constantIndicator = new ConstantIndicator<IndicatorDataPoint>(constant.ToString(CultureInfo.InvariantCulture), constant)", span="114-114", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n39 [label="return left.Plus(constantIndicator);", span="115-115", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n41 [label="Entry QuantConnect.Indicators.ConstantIndicator<T>.ConstantIndicator(string, decimal)", span="42-42", cluster="QuantConnect.Indicators.ConstantIndicator<T>.ConstantIndicator(string, decimal)"];
n42 [label="Entry decimal.ToString(System.IFormatProvider)", span="0-0", cluster="decimal.ToString(System.IFormatProvider)"];
n40 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="112-112", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n43 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="127-127", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n44 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="127-127", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n45 [label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l + r);", span="129-129", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n46 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="127-127", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n47 [label="Entry QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", span="99-99", cluster="QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)"];
n49 [label="l + r", span="129-129", cluster="lambda expression"];
n48 [label="Entry lambda expression", span="129-129", cluster="lambda expression"];
n50 [label="Exit lambda expression", span="129-129", cluster="lambda expression"];
n51 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="142-142", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n52 [label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l + r);", span="144-144", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n53 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="142-142", cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n54 [label="Entry QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", span="83-83", cluster="QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)"];
n56 [label="l + r", span="144-144", cluster="lambda expression"];
n55 [label="Entry lambda expression", span="144-144", cluster="lambda expression"];
n57 [label="Exit lambda expression", span="144-144", cluster="lambda expression"];
n58 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="156-156", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n59 [label="var constantIndicator = new ConstantIndicator<IndicatorDataPoint>(constant.ToString(CultureInfo.InvariantCulture), constant)", span="158-158", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n60 [label="return left.Minus(constantIndicator);", span="159-159", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n61 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="156-156", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n62 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="171-171", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n63 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="171-171", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n64 [label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l - r);", span="173-173", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n65 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="171-171", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n67 [label="l - r", span="173-173", cluster="lambda expression"];
n66 [label="Entry lambda expression", span="173-173", cluster="lambda expression"];
n68 [label="Exit lambda expression", span="173-173", cluster="lambda expression"];
n69 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="186-186", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n70 [label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l - r);", span="188-188", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n71 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="186-186", cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n73 [label="l - r", span="188-188", cluster="lambda expression"];
n72 [label="Entry lambda expression", span="188-188", cluster="lambda expression"];
n74 [label="Exit lambda expression", span="188-188", cluster="lambda expression"];
n75 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="200-200", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n76 [label="var constantIndicator = new ConstantIndicator<IndicatorDataPoint>(constant.ToString(CultureInfo.InvariantCulture), constant)", span="202-202", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n77 [label="return left.Over(constantIndicator);", span="203-203", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n78 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="200-200", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n79 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="215-215", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n80 [label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => r == 0m ? new IndicatorResult(0m, IndicatorStatus.MathError) : new IndicatorResult(l / r));", span="217-217", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n81 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="215-215", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n83 [label="r == 0m ? new IndicatorResult(0m, IndicatorStatus.MathError) : new IndicatorResult(l / r)", span="217-217", cluster="lambda expression"];
n82 [label="Entry lambda expression", span="217-217", cluster="lambda expression"];
n84 [label="Exit lambda expression", span="217-217", cluster="lambda expression"];
n85 [label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45", cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)"];
n86 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="230-230", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n87 [label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => r == 0m ? new IndicatorResult(0m, IndicatorStatus.MathError) : new IndicatorResult(l / r));", span="232-232", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n88 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="230-230", cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n90 [label="r == 0m ? new IndicatorResult(0m, IndicatorStatus.MathError) : new IndicatorResult(l / r)", span="232-232", cluster="lambda expression"];
n89 [label="Entry lambda expression", span="232-232", cluster="lambda expression"];
n91 [label="Exit lambda expression", span="232-232", cluster="lambda expression"];
n92 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="244-244", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n93 [label="var constantIndicator = new ConstantIndicator<IndicatorDataPoint>(constant.ToString(CultureInfo.InvariantCulture), constant)", span="246-246", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n94 [label="return left.Times(constantIndicator);", span="247-247", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n95 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="244-244", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)"];
n96 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="259-259", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n97 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="259-259", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n98 [label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l * r);", span="261-261", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n99 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="259-259", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)"];
n101 [label="l * r", span="261-261", cluster="lambda expression"];
n100 [label="Entry lambda expression", span="261-261", cluster="lambda expression"];
n102 [label="Exit lambda expression", span="261-261", cluster="lambda expression"];
n103 [label="Entry QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="274-274", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n104 [label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l * r);", span="276-276", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n105 [label="Exit QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="274-274", cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)"];
n107 [label="l * r", span="276-276", cluster="lambda expression"];
n106 [label="Entry lambda expression", span="276-276", cluster="lambda expression"];
n108 [label="Exit lambda expression", span="276-276", cluster="lambda expression"];
n109 [label="Entry QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", span="286-286", cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)"];
n110 [label="decimal k = smoothingFactor.HasValue ? k = smoothingFactor.Value : ExponentialMovingAverage.SmoothingFactorDefault(period)", span="289-289", cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)"];
n111 [label="ExponentialMovingAverage emaOfLeft = new ExponentialMovingAverage(string.Format(''EMA{0}_Of_{1}'', period, left.Name), period, k).Of(left, waitForFirstToReady)", span="290-290", cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)"];
n114 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.SmoothingFactorDefault(int)", span="71-71", cluster="QuantConnect.Indicators.ExponentialMovingAverage.SmoothingFactorDefault(int)"];
n112 [label="return emaOfLeft;", span="291-291", cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)"];
n115 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int, decimal)", span="42-42", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int, decimal)"];
n116 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n117 [label="Entry TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", span="49-49", cluster="TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)"];
n113 [label="Exit QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", span="286-286", cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)"];
n118 [label="Entry QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="300-300", cluster="QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n119 [label="Maximum maxOfLeft = new Maximum(string.Format(''MAX{0}_Of_{1}'', period, left.Name), period).Of(left, waitForFirstToReady)", span="303-303", cluster="QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n120 [label="return maxOfLeft;", span="304-304", cluster="QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n122 [label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51", cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)"];
n121 [label="Exit QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="300-300", cluster="QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n123 [label="Entry QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="313-313", cluster="QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n124 [label="Minimum minOfLeft = new Minimum(string.Format(''MIN{0}_Of_{1}'', period, left.Name), period).Of(left, waitForFirstToReady)", span="316-316", cluster="QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n125 [label="return minOfLeft;", span="317-317", cluster="QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n127 [label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51", cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)"];
n126 [label="Exit QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="313-313", cluster="QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n128 [label="Entry QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="326-326", cluster="QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n129 [label="SimpleMovingAverage smaOfLeft = new SimpleMovingAverage(string.Format(''SMA{0}_Of_{1}'', period, left.Name), period).Of(left, waitForFirstToReady)", span="329-329", cluster="QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n130 [label="return smaOfLeft;", span="330-330", cluster="QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
n132 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46", cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)"];
n131 [label="Exit QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="326-326", cluster="QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)"];
m2_19 [label="Entry QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="48-48", cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="StateCheck.cs"];
m2_22 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="StateCheck.cs"];
m2_26 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="StateCheck.cs"];
m2_20 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="555-555", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="StateCheck.cs"];
m2_18 [label="Entry System.Threading.ManualResetEventSlim.Wait(int)", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait(int)", file="StateCheck.cs"];
m2_0 [label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler)", span="40-40", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler)", file="StateCheck.cs"];
m2_3 [label="_algorithmManager = algorithmManager", span="44-44", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler)", color=green, community=0, file="StateCheck.cs"];
m2_2 [label="_resultHandler = resultHandler", span="43-43", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler)", file="StateCheck.cs"];
m2_4 [label="_exitEvent = new ManualResetEventSlim(false)", span="45-45", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler)", color=green, community=0, file="StateCheck.cs"];
m2_1 [label="_api = api", span="42-42", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler)", file="StateCheck.cs"];
m2_5 [label="Exit QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler)", span="40-40", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler)", file="StateCheck.cs"];
m2_6 [label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0", cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="StateCheck.cs"];
m2_7 [label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Run()", span="49-49", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_8 [label="!_exitEvent.Wait(500)", span="51-51", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", color=green, community=0, file="StateCheck.cs"];
m2_9 [label="_algorithmManager.AlgorithmId != '''' && _algorithmManager.QuitState == false", span="55-55", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_12 [label="_resultHandler.SetChartSubscription(state.ChartSubscription)", span="64-64", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_16 [label="Log.Error(''StateCheck.Run(): Error in state check: '' + err.Message)", span="73-73", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_10 [label="var state = _api.GetAlgorithmStatus(_algorithmManager.AlgorithmId)", span="58-58", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_11 [label="_algorithmManager.SetStatus(state.Status)", span="61-61", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_13 [label=ThreadAbortException, span="67-67", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_15 [label=Exception, span="71-71", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_14 [label="return;", span="69-69", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_17 [label="Exit QuantConnect.Lean.Engine.StateCheck.Ping.Run()", span="49-49", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="StateCheck.cs"];
m2_21 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", span="205-205", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", file="StateCheck.cs"];
m2_23 [label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="81-81", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="StateCheck.cs"];
m2_24 [label="_exitEvent.Set()", span="83-83", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", color=green, community=0, file="StateCheck.cs"];
m2_25 [label="Exit QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="81-81", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="StateCheck.cs"];
m2_27 [label="QuantConnect.Lean.Engine.StateCheck.Ping", span="", file="StateCheck.cs"];
m4_0 [label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33", cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="TradierBrokerage.cs"];
m4_1 [label="CommissionReport = commissionReport", span="35-35", cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="TradierBrokerage.cs"];
m4_2 [label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33", cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="TradierBrokerage.cs"];
m4_3 [label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", span="", file="TradierBrokerage.cs"];
n133 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
n134 -> n10  [key=1, style=dashed, color=darkseagreen4, label=bool];
n135 -> n11  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
n136 -> n26  [key=1, style=dashed, color=darkseagreen4, label=x];
n136 -> n27  [key=1, style=dashed, color=darkseagreen4, label=x];
n136 -> n33  [key=1, style=dashed, color=darkseagreen4, label=x];
n136 -> n34  [key=1, style=dashed, color=darkseagreen4, label=x];
n137 -> n27  [key=1, style=dashed, color=darkseagreen4, label=y];
n137 -> n28  [key=1, style=dashed, color=darkseagreen4, label=y];
n137 -> n32  [key=1, style=dashed, color=darkseagreen4, label=y];
n137 -> n33  [key=1, style=dashed, color=darkseagreen4, label=y];
n138 -> n28  [key=1, style=dashed, color=darkseagreen4, label=numerator];
n138 -> n34  [key=1, style=dashed, color=darkseagreen4, label=numerator];
n139 -> n35  [key=1, style=dashed, color=darkseagreen4, label=denominator];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
n5 -> n11  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
n5 -> n5  [key=3, color=darkorchid, style=bold, label="method methodReturn TSecond Of"];
n5 -> n109  [key=3, color=darkorchid, style=bold, label="Parameter variable bool waitForFirstToReady"];
n5 -> n118  [key=3, color=darkorchid, style=bold, label="Parameter variable bool waitForFirstToReady"];
n5 -> n123  [key=3, color=darkorchid, style=bold, label="Parameter variable bool waitForFirstToReady"];
n5 -> n128  [key=3, color=darkorchid, style=bold, label="Parameter variable bool waitForFirstToReady"];
n6 -> n7  [key=0, style=solid];
n6 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n4  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n8 -> n5  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n12 -> n9  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=1, style=dashed, color=darkseagreen4, label=int];
n13 -> n16  [key=1, style=dashed, color=darkseagreen4, label=int];
n13 -> n17  [key=1, style=dashed, color=darkseagreen4, label=int];
n13 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
n13 -> n19  [key=1, style=dashed, color=darkseagreen4, label=TWeight];
n13 -> n24  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> WeightedBy"];
n14 -> n15  [key=0, style=solid];
n14 -> n22  [key=2, style=dotted];
n14 -> n18  [key=1, style=dashed, color=darkseagreen4, label=x];
n14 -> n26  [key=1, style=dashed, color=darkseagreen4, label=x];
n14 -> n27  [key=1, style=dashed, color=darkseagreen4, label=x];
n14 -> n19  [key=1, style=dashed, color=darkseagreen4, label=x];
n14 -> n33  [key=1, style=dashed, color=darkseagreen4, label=x];
n14 -> n34  [key=1, style=dashed, color=darkseagreen4, label=x];
n15 -> n16  [key=0, style=solid];
n15 -> n22  [key=2, style=dotted];
n15 -> n18  [key=1, style=dashed, color=darkseagreen4, label=y];
n15 -> n27  [key=1, style=dashed, color=darkseagreen4, label=y];
n15 -> n28  [key=1, style=dashed, color=darkseagreen4, label=y];
n15 -> n19  [key=1, style=dashed, color=darkseagreen4, label=y];
n15 -> n32  [key=1, style=dashed, color=darkseagreen4, label=y];
n15 -> n33  [key=1, style=dashed, color=darkseagreen4, label=y];
n16 -> n17  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n16 -> n18  [key=1, style=dashed, color=darkseagreen4, label=numerator];
n16 -> n28  [key=1, style=dashed, color=darkseagreen4, label=numerator];
n16 -> n19  [key=1, style=dashed, color=darkseagreen4, label=numerator];
n16 -> n34  [key=1, style=dashed, color=darkseagreen4, label=numerator];
n16 -> n20  [key=1, style=dashed, color=darkseagreen4, label=numerator];
n17 -> n18  [key=0, style=solid];
n17 -> n23  [key=2, style=dotted];
n17 -> n19  [key=1, style=dashed, color=darkseagreen4, label=denominator];
n17 -> n35  [key=1, style=dashed, color=darkseagreen4, label=denominator];
n17 -> n20  [key=1, style=dashed, color=darkseagreen4, label=denominator];
n18 -> n19  [key=0, style=solid];
n18 -> n26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n18 -> n28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n19 -> n20  [key=0, style=solid];
n19 -> n32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n19 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n19 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n26 -> n27  [key=0, style=solid];
n26 -> n4  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n30  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n4  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n24  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n4  [key=2, style=dotted];
n21 -> n13  [key=0, style=bold, color=blue];
n24 -> n17  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right"];
n24 -> n76  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right"];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n29 -> n25  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n31 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n31 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
n36 -> n31  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n37 -> n43  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Plus"];
n38 -> n39  [key=0, style=solid];
n38 -> n41  [key=2, style=dotted];
n38 -> n42  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n43  [key=2, style=dotted];
n40 -> n37  [key=0, style=bold, color=blue];
n43 -> n38  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right"];
n44 -> n45  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=2, style=dotted];
n45 -> n49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n46 -> n44  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n50 -> n48  [key=0, style=bold, color=blue];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=2, style=dotted];
n52 -> n56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n53 -> n51  [key=0, style=bold, color=blue];
n56 -> n57  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n57 -> n55  [key=0, style=bold, color=blue];
n58 -> n59  [key=0, style=solid];
n58 -> n60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n58 -> n62  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Minus"];
n59 -> n60  [key=0, style=solid];
n59 -> n41  [key=2, style=dotted];
n59 -> n42  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n62  [key=2, style=dotted];
n61 -> n58  [key=0, style=bold, color=blue];
n62 -> n59  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right"];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n47  [key=2, style=dotted];
n64 -> n67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n65 -> n63  [key=0, style=bold, color=blue];
n67 -> n68  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n68 -> n66  [key=0, style=bold, color=blue];
n69 -> n70  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n70 -> n54  [key=2, style=dotted];
n70 -> n73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n71 -> n69  [key=0, style=bold, color=blue];
n73 -> n74  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n74 -> n72  [key=0, style=bold, color=blue];
n75 -> n76  [key=0, style=solid];
n75 -> n77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n75 -> n24  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Over"];
n76 -> n77  [key=0, style=solid];
n76 -> n41  [key=2, style=dotted];
n76 -> n42  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n24  [key=2, style=dotted];
n78 -> n75  [key=0, style=bold, color=blue];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n47  [key=2, style=dotted];
n80 -> n83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n81 -> n79  [key=0, style=bold, color=blue];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n84 -> n82  [key=0, style=bold, color=blue];
n86 -> n87  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n54  [key=2, style=dotted];
n87 -> n90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n88 -> n86  [key=0, style=bold, color=blue];
n90 -> n91  [key=0, style=solid];
n90 -> n85  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n91 -> n89  [key=0, style=bold, color=blue];
n92 -> n93  [key=0, style=solid];
n92 -> n94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n92 -> n96  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Times"];
n93 -> n94  [key=0, style=solid];
n93 -> n41  [key=2, style=dotted];
n93 -> n42  [key=2, style=dotted];
n94 -> n95  [key=0, style=solid];
n94 -> n96  [key=2, style=dotted];
n95 -> n92  [key=0, style=bold, color=blue];
n96 -> n93  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right"];
n97 -> n98  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n98 -> n47  [key=2, style=dotted];
n98 -> n101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n99 -> n97  [key=0, style=bold, color=blue];
n101 -> n102  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n102 -> n100  [key=0, style=bold, color=blue];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n54  [key=2, style=dotted];
n104 -> n107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
n105 -> n103  [key=0, style=bold, color=blue];
n107 -> n108  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n108 -> n106  [key=0, style=bold, color=blue];
n109 -> n110  [key=0, style=solid];
n109 -> n111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
n110 -> n111  [key=0, style=solid];
n110 -> n114  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n111 -> n115  [key=2, style=dotted];
n111 -> n116  [key=2, style=dotted];
n111 -> n117  [key=2, style=dotted];
n111 -> n5  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Indicators.ExponentialMovingAverage emaOfLeft"];
n112 -> n113  [key=0, style=solid];
n113 -> n109  [key=0, style=bold, color=blue];
n118 -> n119  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n122  [key=2, style=dotted];
n119 -> n116  [key=2, style=dotted];
n119 -> n117  [key=2, style=dotted];
n119 -> n5  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Indicators.Maximum maxOfLeft"];
n120 -> n121  [key=0, style=solid];
n121 -> n118  [key=0, style=bold, color=blue];
n123 -> n124  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n124 -> n127  [key=2, style=dotted];
n124 -> n116  [key=2, style=dotted];
n124 -> n117  [key=2, style=dotted];
n124 -> n5  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Indicators.Minimum minOfLeft"];
n125 -> n126  [key=0, style=solid];
n126 -> n123  [key=0, style=bold, color=blue];
n128 -> n129  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n132  [key=2, style=dotted];
n129 -> n116  [key=2, style=dotted];
n129 -> n117  [key=2, style=dotted];
n129 -> n5  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Indicators.SimpleMovingAverage smaOfLeft"];
n130 -> n131  [key=0, style=solid];
n131 -> n128  [key=0, style=bold, color=blue];
m2_0 -> m2_3  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_6  [key=2, style=dotted, color=green];
m2_1 -> m2_2  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_8 -> m2_17  [key=0, style=solid, color=green];
m2_8 -> m2_18  [key=2, style=dotted, color=green];
m2_9 -> m2_8  [key=0, style=solid, color=green];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [key=0, style=solid];
m2_9 -> m2_15  [key=0, style=solid];
m2_12 -> m2_8  [key=0, style=solid, color=green];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_15  [key=0, style=solid];
m2_12 -> m2_21  [key=2, style=dotted];
m2_16 -> m2_8  [key=0, style=solid, color=green];
m2_16 -> m2_22  [key=2, style=dotted];
m2_10 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=state];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_19  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_20  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_14 -> m2_17  [key=0, style=solid];
m2_17 -> m2_7  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid, color=green];
m2_24 -> m2_25  [key=0, style=solid, color=green];
m2_24 -> m2_26  [key=2, style=dotted, color=green];
m2_25 -> m2_23  [key=0, style=bold, color=blue];
m2_27 -> m2_3  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_4  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_8  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_24  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m2_27 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StateCheck.Ping"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_3 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs"];
}
